digraph  {
d433 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", color=green, community=1, label="-1: IList<object> values = new List<object>\r\n            {\r\n                ''ff2dc672-6e15-4aa2-afb0-18f4f69596ad'',\r\n                new Guid(''ff2dc672-6e15-4aa2-afb0-18f4f69596ad''),\r\n                ''http://localhost'',\r\n                new Uri(''http://localhost''),\r\n                ''2000-12-05T05:07:59Z'',\r\n                new DateTime(2000, 12, 5, 5, 7, 59, DateTimeKind.Utc),\r\n#if !NET20\r\n                ''2000-12-05T05:07:59-10:00'',\r\n                new DateTimeOffset(2000, 12, 5, 5, 7, 59, -TimeSpan.FromHours(10)),\r\n#endif\r\n                ''SGVsbG8gd29ybGQ='',\r\n                Encoding.UTF8.GetBytes(''Hello world''),\r\n                ''365.23:59:59'',\r\n                new TimeSpan(365, 23, 59, 59)\r\n            }", span="744-760"];
d432 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", span="742-742"];
d434 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", color=green, community=1, label="-1: JObject o = new JObject(\r\n                new JProperty(''prop'',\r\n                    new JArray(\r\n                        values.Select(v => new JObject(new JProperty(''childProp'', v)))\r\n                    )\r\n                )\r\n            )", span="762-768"];
d448 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
d449 [cluster="System.Guid.Guid(string)", label="Entry System.Guid.Guid(string)", span="0-0"];
d450 [cluster="System.Uri.Uri(string)", label="Entry System.Uri.Uri(string)", span="0-0"];
d451 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
d452 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
d453 [cluster="System.TimeSpan.FromHours(double)", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
d454 [cluster="Unk.GetBytes", label="Entry Unk.GetBytes", span=""];
d455 [cluster="System.TimeSpan.TimeSpan(int, int, int, int)", label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0"];
d435 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", color=green, community=0, label="-1: IList<JToken> t = o.SelectTokens(''$.prop[?(@.childProp =='ff2dc672-6e15-4aa2-afb0-18f4f69596ad')]'').ToList()", span="770-770"];
d32 [cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="113-113"];
d33 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="293-293"];
d456 [cluster="JArray.cstr", label="Entry JArray.cstr", span=""];
d457 [cluster="Unk.Select", label="Entry Unk.Select", span=""];
d458 [cluster="lambda expression", label="Entry lambda expression", span="765-765"];
d437 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", color=green, community=0, label="-1: t = o.SelectTokens(''$.prop[?(@.childProp =='http://localhost')]'').ToList()", span="773-773"];
d439 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", color=green, community=0, label="-1: t = o.SelectTokens(''$.prop[?(@.childProp =='2000-12-05T05:07:59Z')]'').ToList()", span="776-776"];
d441 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", color=green, community=0, label="-1: t = o.SelectTokens(''$.prop[?(@.childProp =='2000-12-05T05:07:59-10:00')]'').ToList()", span="780-780"];
d443 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", color=green, community=0, label="-1: t = o.SelectTokens(''$.prop[?(@.childProp =='SGVsbG8gd29ybGQ=')]'').ToList()", span="784-784"];
d445 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", color=green, community=0, label="-1: t = o.SelectTokens(''$.prop[?(@.childProp =='365.23:59:59')]'').ToList()", span="787-787"];
d436 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", color=green, community=0, label="-1: Assert.AreEqual(2, t.Count)", span="771-771"];
d10 [cluster="Newtonsoft.Json.Linq.JToken.SelectTokens(string)", label="Entry Newtonsoft.Json.Linq.JToken.SelectTokens(string)", span="2026-2026"];
d11 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
d438 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", color=green, community=0, label="-1: Assert.AreEqual(2, t.Count)", span="774-774"];
d440 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", color=green, community=0, label="-1: Assert.AreEqual(2, t.Count)", span="777-777"];
d442 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", color=green, community=0, label="-1: Assert.AreEqual(2, t.Count)", span="781-781"];
d444 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", color=green, community=0, label="-1: Assert.AreEqual(2, t.Count)", span="785-785"];
d446 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", color=green, community=0, label="-1: Assert.AreEqual(2, t.Count)", span="788-788"];
d12 [cluster="Unk.AreEqual", label="Entry Unk.AreEqual", span=""];
d447 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", span="742-742"];
d459 [cluster="lambda expression", color=green, community=0, label="-1: new JObject(new JProperty(''childProp'', v))", span="765-765"];
d460 [cluster="lambda expression", label="Exit lambda expression", span="765-765"];
d28 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyPropertyIndexer()", label="JObject o = new JObject(\r\n                new JProperty('''', 1))", span="132-133"];
d36 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyString()", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1))", span="142-143"];
d43 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyStringWithMatchingEmptyProperty()", label="JObject o = new JObject(\r\n                new JProperty('' '', 1))", span="155-156"];
d48 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWhitespaceString()", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1))", span="165-166"];
d53 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarString()", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1))", span="175-176"];
d58 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarTypeString()", label="JObject o = new JObject(\r\n                new JProperty(''$values'', new JArray(1, 2, 3)))", span="185-186"];
d64 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSingleProperty()", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1))", span="195-196"];
d81 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QuoteName()", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1))", span="221-222"];
d88 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingProperty()", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1))", span="233-234"];
d94 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateIndexerOnObject()", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1))", span="243-244"];
d99 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateIndexerOnObjectWithError()", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1))", span="253-254"];
d107 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardIndexOnObjectWithError()", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1))", span="262-263"];
d114 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSliceOnObjectWithError()", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1))", span="271-272"];
d159 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingPropertyWithError()", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1))", span="329-330"];
d166 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithoutError()", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1))", span="338-339"];
d171 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingPropertyIndexWithError()", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1))", span="348-349"];
d342 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', new[] { 1, 2, 3 }))", span="555-556"];
d356 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.ExistsQuery()", label="JArray a = new JArray(new JObject(new JProperty(''hi'', ''ho'')), new JObject(new JProperty(''hi2'', ''ha'')))", span="579-579"];
d360 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.ExistsQuery()", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''hi'', ''ho'')), t[0]))", span="584-584"];
d363 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EqualsQuery()", label="JArray a = new JArray(\r\n                new JObject(new JProperty(''hi'', ''ho'')),\r\n                new JObject(new JProperty(''hi'', ''ha'')))", span="590-592"];
d367 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EqualsQuery()", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''hi'', ''ha'')), t[0]))", span="597-597"];
d370 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsQuery()", label="JArray a = new JArray(\r\n                new JArray(new JObject(new JProperty(''hi'', ''ho''))),\r\n                new JArray(new JObject(new JProperty(''hi'', ''ha''))))", span="603-605"];
d374 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsQuery()", label="Assert.IsTrue(JToken.DeepEquals(new JArray(new JObject(new JProperty(''hi'', ''ho''))), t[0]))", span="610-610"];
d391 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQuery()", label="JArray a = new JArray(\r\n                new JObject(new JProperty(''hi'', 1)),\r\n                new JObject(new JProperty(''hi'', 2)),\r\n                new JObject(new JProperty(''hi'', 3)))", span="641-644"];
d395 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQuery()", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''hi'', 2)), t[0]))", span="649-649"];
d396 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQuery()", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''hi'', 3)), t[1]))", span="650-650"];
d399 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQueryBigInteger()", label="JArray a = new JArray(\r\n                new JObject(new JProperty(''hi'', new BigInteger(1))),\r\n                new JObject(new JProperty(''hi'', new BigInteger(2))),\r\n                new JObject(new JProperty(''hi'', new BigInteger(3))))", span="657-660"];
d403 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQueryBigInteger()", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''hi'', 2)), t[0]))", span="665-665"];
d404 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQueryBigInteger()", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''hi'', 3)), t[1]))", span="666-666"];
d409 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", label="JArray a = new JArray(\r\n                new JObject(new JProperty(''hi'', 1)),\r\n                new JObject(new JProperty(''hi'', 2)),\r\n                new JObject(new JProperty(''hi'', 2.0)),\r\n                new JObject(new JProperty(''hi'', 3)))", span="673-677"];
d413 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''hi'', 1)), t[0]))", span="682-682"];
d414 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''hi'', 2)), t[1]))", span="683-683"];
d415 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''hi'', 2.0)), t[2]))", span="684-684"];
d416 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''hi'', 3)), t[3]))", span="685-685"];
d419 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", label="JArray a = new JArray(\r\n                new JObject(\r\n                    new JProperty(''name'', ''Bad Boys''),\r\n                    new JProperty(''cast'', new JArray(\r\n                        new JObject(new JProperty(''name'', ''Will Smith''))))),\r\n                new JObject(\r\n                    new JProperty(''name'', ''Independence Day''),\r\n                    new JProperty(''cast'', new JArray(\r\n                        new JObject(new JProperty(''name'', ''Will Smith''))))),\r\n                new JObject(\r\n                    new JProperty(''name'', ''The Rock''),\r\n                    new JProperty(''cast'', new JArray(\r\n                        new JObject(new JProperty(''name'', ''Nick Cage'')))))\r\n                )", span="691-704"];
d72 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardProperty()", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1),\r\n                new JProperty(''Blah2'', 2))", span="207-209"];
d469 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", label="IList<string> storeNames = o.SelectToken(''Stores'').Select(s => (string)s).ToList()", span="838-838"];
d470 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", label="IList<string> firstProductNames = o[''Manufacturers''].Select(m => (string)m.SelectToken(''Products[1].Name'')).ToList()", span="842-842"];
d3 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.ParseWithEmptyArrayContent()", label="IList<JToken> tokens = jToken.SelectTokens(''$..en-US'').ToList()", span="94-94"];
d16 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.SelectTokenAfterEmptyContainer()", label="IList<JToken> results = o.SelectTokens(''$..test'').ToList()", span="112-112"];
d73 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardProperty()", label="IList<JToken> t = o.SelectTokens(''$.*'').ToList()", span="211-211"];
d227 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", label="t = a.SelectTokens(''[-3:]'').ToList()", span="412-412"];
d232 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", label="t = a.SelectTokens(''[-1:-2:-1]'').ToList()", span="418-418"];
d235 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", label="t = a.SelectTokens(''[-2:-1]'').ToList()", span="422-422"];
d238 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", label="t = a.SelectTokens(''[1:1]'').ToList()", span="426-426"];
d240 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", label="t = a.SelectTokens(''[1:2]'').ToList()", span="429-429"];
d243 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", label="t = a.SelectTokens(''[::-1]'').ToList()", span="433-433"];
d254 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", label="t = a.SelectTokens(''[::-2]'').ToList()", span="445-445"];
d264 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", label="List<JToken> t = a.SelectTokens(''[*]'').ToList()", span="459-459"];
d274 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", label="IEnumerable<JToken> t = a.SelectTokens(''[1,2,0]'')", span="473-473"];
d287 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScan()", label="IList<JToken> t = a.SelectTokens(''$..Name'').ToList()", span="488-488"];
d298 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", label="IList<JToken> t = a.SelectTokens(''$..*'').ToList()", span="502-502"];
d314 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", label="IList<JToken> t = a.SelectTokens(''$..Name'').ToList()", span="520-520"];
d328 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", label="IList<JToken> t = a.SelectTokens(''$..*'').ToList()", span="537-537"];
d357 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.ExistsQuery()", label="IList<JToken> t = a.SelectTokens(''[ ?( @.hi ) ]'').ToList()", span="581-581"];
d364 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EqualsQuery()", label="IList<JToken> t = a.SelectTokens(''[ ?( @.['hi'] == 'ha' ) ]'').ToList()", span="594-594"];
d371 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsQuery()", label="IList<JToken> t = a.SelectTokens(''[ ?( @..hi <> 'ha' ) ]'').ToList()", span="607-607"];
d378 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NoPathQuery()", label="IList<JToken> t = a.SelectTokens(''[ ?( @ > 1 ) ]'').ToList()", span="618-618"];
d386 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.MultipleQueries()", label="IList<JToken> t = a.SelectTokens(''[?(@ <> 1)][?(@ <> 4)][?(@ < 7)]'').ToList()", span="633-633"];
d392 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQuery()", label="IList<JToken> t = a.SelectTokens(''[ ?( @.hi > 1 ) ]'').ToList()", span="646-646"];
d400 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQueryBigInteger()", label="IList<JToken> t = a.SelectTokens(''[ ?( @.hi > 1 ) ]'').ToList()", span="662-662"];
d410 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", label="IList<JToken> t = a.SelectTokens(''[ ?( @.hi >= 1 ) ]'').ToList()", span="679-679"];
d420 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", label="IList<JToken> t = a.SelectTokens(''[?(@.cast[?(@.name=='Will Smith')])].name'').ToList()", span="706-706"];
d4 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.ParseWithEmptyArrayContent()", label="Assert.AreEqual(3, tokens.Count)", span="96-96"];
d5 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.ParseWithEmptyArrayContent()", label="Assert.AreEqual(''Add'', (string)tokens[0])", span="97-97"];
d6 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.ParseWithEmptyArrayContent()", label="Assert.AreEqual(''Sort by'', (string)tokens[1])", span="98-98"];
d7 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.ParseWithEmptyArrayContent()", label="Assert.AreEqual(''Name'', (string)tokens[2])", span="99-99"];
d17 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.SelectTokenAfterEmptyContainer()", label="Assert.AreEqual(1, results.Count)", span="114-114"];
d18 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.SelectTokenAfterEmptyContainer()", label="Assert.AreEqual(''no one will find me'', (string)results[0])", span="115-115"];
d24 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithRequired()", label="Assert.AreEqual(''1000'', bookId)", span="126-126"];
d30 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyPropertyIndexer()", label="Assert.AreEqual(1, (int)t)", span="136-136"];
d38 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyString()", label="Assert.AreEqual(o, t)", span="146-146"];
d40 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyString()", label="Assert.AreEqual(null, t)", span="149-149"];
d45 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyStringWithMatchingEmptyProperty()", label="Assert.AreEqual(1, (int)t)", span="159-159"];
d50 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWhitespaceString()", label="Assert.AreEqual(o, t)", span="169-169"];
d55 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarString()", label="Assert.AreEqual(o, t)", span="179-179"];
d60 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarTypeString()", label="Assert.AreEqual(2, (int)t)", span="189-189"];
d67 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSingleProperty()", label="Assert.AreEqual(JTokenType.Integer, t.Type)", span="200-200"];
d68 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSingleProperty()", label="Assert.AreEqual(1, (int)t)", span="201-201"];
d75 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardProperty()", label="Assert.AreEqual(2, t.Count)", span="213-213"];
d76 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardProperty()", label="Assert.AreEqual(1, (int)t[0])", span="214-214"];
d77 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardProperty()", label="Assert.AreEqual(2, (int)t[1])", span="215-215"];
d84 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QuoteName()", label="Assert.AreEqual(JTokenType.Integer, t.Type)", span="226-226"];
d85 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QuoteName()", label="Assert.AreEqual(1, (int)t)", span="227-227"];
d168 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithoutError()", label="Assert.AreEqual(1, v.Value)", span="342-342"];
d221 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArray()", label="Assert.AreEqual(JTokenType.Integer, t.Type)", span="402-402"];
d222 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArray()", label="Assert.AreEqual(2, (int)t)", span="403-403"];
d228 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", label="Assert.AreEqual(3, t.Count)", span="413-413"];
d229 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", label="Assert.AreEqual(7, (int)t[0])", span="414-414"];
d230 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", label="Assert.AreEqual(8, (int)t[1])", span="415-415"];
d231 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", label="Assert.AreEqual(9, (int)t[2])", span="416-416"];
d233 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", label="Assert.AreEqual(1, t.Count)", span="419-419"];
d234 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", label="Assert.AreEqual(9, (int)t[0])", span="420-420"];
d236 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", label="Assert.AreEqual(1, t.Count)", span="423-423"];
d237 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", label="Assert.AreEqual(8, (int)t[0])", span="424-424"];
d239 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", label="Assert.AreEqual(0, t.Count)", span="427-427"];
d241 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", label="Assert.AreEqual(1, t.Count)", span="430-430"];
d242 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", label="Assert.AreEqual(2, (int)t[0])", span="431-431"];
d244 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", label="Assert.AreEqual(9, t.Count)", span="434-434"];
d245 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", label="Assert.AreEqual(9, (int)t[0])", span="435-435"];
d246 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", label="Assert.AreEqual(8, (int)t[1])", span="436-436"];
d247 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", label="Assert.AreEqual(7, (int)t[2])", span="437-437"];
d248 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", label="Assert.AreEqual(6, (int)t[3])", span="438-438"];
d249 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", label="Assert.AreEqual(5, (int)t[4])", span="439-439"];
d250 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", label="Assert.AreEqual(4, (int)t[5])", span="440-440"];
d251 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", label="Assert.AreEqual(3, (int)t[6])", span="441-441"];
d252 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", label="Assert.AreEqual(2, (int)t[7])", span="442-442"];
d253 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", label="Assert.AreEqual(1, (int)t[8])", span="443-443"];
d255 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", label="Assert.AreEqual(5, t.Count)", span="446-446"];
d256 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", label="Assert.AreEqual(9, (int)t[0])", span="447-447"];
d257 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", label="Assert.AreEqual(7, (int)t[1])", span="448-448"];
d258 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", label="Assert.AreEqual(5, (int)t[2])", span="449-449"];
d259 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", label="Assert.AreEqual(3, (int)t[3])", span="450-450"];
d260 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", label="Assert.AreEqual(1, (int)t[4])", span="451-451"];
d266 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", label="Assert.AreEqual(4, t.Count)", span="461-461"];
d267 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", label="Assert.AreEqual(1, (int)t[0])", span="462-462"];
d268 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", label="Assert.AreEqual(2, (int)t[1])", span="463-463"];
d269 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", label="Assert.AreEqual(3, (int)t[2])", span="464-464"];
d270 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", label="Assert.AreEqual(4, (int)t[3])", span="465-465"];
d276 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", label="Assert.AreEqual(3, t.Count())", span="475-475"];
d277 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", label="Assert.AreEqual(2, (int)t.ElementAt(0))", span="476-476"];
d278 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", label="Assert.AreEqual(3, (int)t.ElementAt(1))", span="477-477"];
d279 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", label="Assert.AreEqual(1, (int)t.ElementAt(2))", span="478-478"];
d289 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScan()", label="Assert.AreEqual(2, t.Count)", span="490-490"];
d290 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScan()", label="Assert.AreEqual(1, (int)t[0])", span="491-491"];
d291 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScan()", label="Assert.AreEqual(2, (int)t[1])", span="492-492"];
d300 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", label="Assert.AreEqual(5, t.Count)", span="504-504"];
d303 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", label="Assert.AreEqual(1, (int)t[2])", span="507-507"];
d305 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", label="Assert.AreEqual(2, (int)t[4])", span="509-509"];
d316 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", label="Assert.AreEqual(4, t.Count)", span="522-522"];
d317 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", label="Assert.AreEqual(1, (int)t[0])", span="523-523"];
d318 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", label="Assert.AreEqual(2, (int)t[1])", span="524-524"];
d330 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", label="Assert.AreEqual(9, t.Count)", span="539-539"];
d333 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", label="Assert.AreEqual(1, (int)t[2])", span="543-543"];
d335 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", label="Assert.AreEqual(2, (int)t[4])", span="545-545"];
d339 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", label="Assert.AreEqual(3, (int)t[8])", span="549-549"];
d345 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", label="Assert.AreEqual(JTokenType.Array, t.Type)", span="560-560"];
d347 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", label="Assert.AreEqual(JTokenType.Integer, t.Type)", span="563-563"];
d348 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", label="Assert.AreEqual(3, (int)t)", span="564-564"];
d353 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateLastSingleCharacterProperty()", label="Assert.AreEqual(''Jeff'', a2)", span="573-573"];
d359 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.ExistsQuery()", label="Assert.AreEqual(1, t.Count)", span="583-583"];
d366 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EqualsQuery()", label="Assert.AreEqual(1, t.Count)", span="596-596"];
d373 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsQuery()", label="Assert.AreEqual(1, t.Count)", span="609-609"];
d380 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NoPathQuery()", label="Assert.AreEqual(2, t.Count)", span="620-620"];
d381 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NoPathQuery()", label="Assert.AreEqual(2, (int)t[0])", span="621-621"];
d382 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NoPathQuery()", label="Assert.AreEqual(3, (int)t[1])", span="622-622"];
d388 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.MultipleQueries()", label="Assert.AreEqual(0, t.Count)", span="635-635"];
d394 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQuery()", label="Assert.AreEqual(2, t.Count)", span="648-648"];
d402 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQueryBigInteger()", label="Assert.AreEqual(2, t.Count)", span="664-664"];
d412 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", label="Assert.AreEqual(4, t.Count)", span="681-681"];
d422 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", label="Assert.AreEqual(2, t.Count)", span="708-708"];
d423 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", label="Assert.AreEqual(''Bad Boys'', (string)t[0])", span="709-709"];
d424 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", label="Assert.AreEqual(''Independence Day'', (string)t[1])", span="710-710"];
d429 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.PathWithConstructor()", label="Assert.AreEqual(1L, v.Value)", span="738-738"];
d466 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", label="Assert.AreEqual(''Acme Co'', name)", span="834-834"];
d467 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", label="Assert.AreEqual(50m, productPrice)", span="835-835"];
d468 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", label="Assert.AreEqual(''Elbow Grease'', productName)", span="836-836"];
d472 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", label="Assert.AreEqual(2, storeNames.Count)", span="849-849"];
d473 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", label="Assert.AreEqual(''Lambton Quay'', storeNames[0])", span="850-850"];
d474 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", label="Assert.AreEqual(''Willis Street'', storeNames[1])", span="851-851"];
d475 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", label="Assert.AreEqual(2, firstProductNames.Count)", span="852-852"];
d476 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", label="Assert.AreEqual(null, firstProductNames[0])", span="853-853"];
d477 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", label="Assert.AreEqual(''Headlight Fluid'', firstProductNames[1])", span="854-854"];
d478 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", label="Assert.AreEqual(149.95m, totalPrice)", span="855-855"];
d27 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyPropertyIndexer()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyPropertyIndexer()", span="130-130"];
d29 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyPropertyIndexer()", label="JToken t = o.SelectToken(''['']'')", span="135-135"];
d35 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyString()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyString()", span="140-140"];
d37 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyString()", label="JToken t = o.SelectToken('''')", span="145-145"];
d39 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyString()", label="t = o.SelectToken(''['']'')", span="148-148"];
d42 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyStringWithMatchingEmptyProperty()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyStringWithMatchingEmptyProperty()", span="153-153"];
d44 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyStringWithMatchingEmptyProperty()", label="JToken t = o.SelectToken(''[' ']'')", span="158-158"];
d47 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWhitespaceString()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWhitespaceString()", span="163-163"];
d49 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWhitespaceString()", label="JToken t = o.SelectToken('' '')", span="168-168"];
d52 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarString()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarString()", span="173-173"];
d54 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarString()", label="JToken t = o.SelectToken(''$'')", span="178-178"];
d57 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarTypeString()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarTypeString()", span="183-183"];
d59 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarTypeString()", label="JToken t = o.SelectToken(''$values[1]'')", span="188-188"];
d62 [cluster="Newtonsoft.Json.Linq.JArray.JArray(params object[])", label="Entry Newtonsoft.Json.Linq.JArray.JArray(params object[])", span="82-82"];
d63 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSingleProperty()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSingleProperty()", span="193-193"];
d65 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSingleProperty()", label="JToken t = o.SelectToken(''Blah'')", span="198-198"];
d80 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QuoteName()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QuoteName()", span="219-219"];
d82 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QuoteName()", label="JToken t = o.SelectToken(''['Blah']'')", span="224-224"];
d87 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingProperty()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingProperty()", span="231-231"];
d89 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingProperty()", label="JToken t = o.SelectToken(''Missing[1]'')", span="236-236"];
d93 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateIndexerOnObject()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateIndexerOnObject()", span="241-241"];
d95 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateIndexerOnObject()", label="JToken t = o.SelectToken(''[1]'')", span="246-246"];
d98 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateIndexerOnObjectWithError()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateIndexerOnObjectWithError()", span="251-251"];
d100 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateIndexerOnObjectWithError()", label="ExceptionAssert.Throws<JsonException>(() => { o.SelectToken(''[1]'', true); }, @''Index 1 not valid on JObject.'')", span="256-256"];
d104 [cluster="lambda expression", label="o.SelectToken(''[1]'', true)", span="256-256"];
d106 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardIndexOnObjectWithError()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardIndexOnObjectWithError()", span="260-260"];
d108 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardIndexOnObjectWithError()", label="ExceptionAssert.Throws<JsonException>(() => { o.SelectToken(''[*]'', true); }, @''Index * not valid on JObject.'')", span="265-265"];
d111 [cluster="lambda expression", label="o.SelectToken(''[*]'', true)", span="265-265"];
d113 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSliceOnObjectWithError()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSliceOnObjectWithError()", span="269-269"];
d115 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSliceOnObjectWithError()", label="ExceptionAssert.Throws<JsonException>(() => { o.SelectToken(''[:]'', true); }, @''Array slice is not valid on JObject.'')", span="274-274"];
d118 [cluster="lambda expression", label="o.SelectToken(''[:]'', true)", span="274-274"];
d158 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingPropertyWithError()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingPropertyWithError()", span="327-327"];
d160 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingPropertyWithError()", label="ExceptionAssert.Throws<JsonException>(() => { o.SelectToken(''Missing'', true); }, ''Property 'Missing' does not exist on JObject.'')", span="332-332"];
d163 [cluster="lambda expression", label="o.SelectToken(''Missing'', true)", span="332-332"];
d165 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithoutError()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithoutError()", span="336-336"];
d167 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithoutError()", label="JValue v = (JValue)o.SelectToken(''Blah'', true)", span="341-341"];
d170 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingPropertyIndexWithError()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingPropertyIndexWithError()", span="346-346"];
d172 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingPropertyIndexWithError()", label="ExceptionAssert.Throws<JsonException>(() => { o.SelectToken(''['Missing','Missing2']'', true); }, ''Property 'Missing' does not exist on JObject.'')", span="351-351"];
d175 [cluster="lambda expression", label="o.SelectToken(''['Missing','Missing2']'', true)", span="351-351"];
d341 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", span="553-553"];
d343 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", label="JToken t = o.SelectToken(''Blah'')", span="558-558"];
d346 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", label="t = o.SelectToken(''Blah[2]'')", span="562-562"];
d355 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.ExistsQuery()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.ExistsQuery()", span="577-577"];
d361 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.ExistsQuery()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.ExistsQuery()", span="577-577"];
d307 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="151-151"];
d308 [cluster="Unk.IsTrue", label="Entry Unk.IsTrue", span=""];
d362 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EqualsQuery()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EqualsQuery()", span="588-588"];
d368 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EqualsQuery()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EqualsQuery()", span="588-588"];
d369 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsQuery()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsQuery()", span="601-601"];
d322 [cluster="Newtonsoft.Json.Linq.JArray.JArray(object)", label="Entry Newtonsoft.Json.Linq.JArray.JArray(object)", span="91-91"];
d375 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsQuery()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsQuery()", span="601-601"];
d390 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQuery()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQuery()", span="639-639"];
d397 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQuery()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQuery()", span="639-639"];
d398 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQueryBigInteger()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQueryBigInteger()", span="655-655"];
d406 [cluster="JProperty.cstr", label="Entry JProperty.cstr", span=""];
d407 [cluster="BigInteger.cstr", label="Entry BigInteger.cstr", span=""];
d405 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQueryBigInteger()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQueryBigInteger()", span="655-655"];
d408 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", span="671-671"];
d417 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", span="671-671"];
d418 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", span="689-689"];
d79 [cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="104-104"];
d71 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardProperty()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardProperty()", span="205-205"];
d462 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", label="JObject o = JObject.Parse(@''{\r\n        ''''Stores'''': [\r\n          ''''Lambton Quay'''',\r\n          ''''Willis Street''''\r\n        ],\r\n        ''''Manufacturers'''': [\r\n          {\r\n            ''''Name'''': ''''Acme Co'''',\r\n            ''''Products'''': [\r\n              {\r\n                ''''Name'''': ''''Anvil'''',\r\n                ''''Price'''': 50\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            ''''Name'''': ''''Contoso'''',\r\n            ''''Products'''': [\r\n              {\r\n                ''''Name'''': ''''Elbow Grease'''',\r\n                ''''Price'''': 99.95\r\n              },\r\n              {\r\n                ''''Name'''': ''''Headlight Fluid'''',\r\n                ''''Price'''': 4\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }'')", span="794-823"];
d34 [cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string)", label="Entry Newtonsoft.Json.Linq.JToken.SelectToken(string)", span="1990-1990"];
d480 [cluster="Unk.ToList", label="Entry Unk.ToList", span=""];
d482 [cluster="lambda expression", label="Entry lambda expression", span="838-838"];
d471 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", label="decimal totalPrice = o[''Manufacturers''].Sum(m => (decimal)m.SelectToken(''Products[0].Price''))", span="846-846"];
d485 [cluster="lambda expression", label="Entry lambda expression", span="842-842"];
d2 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.ParseWithEmptyArrayContent()", label="JObject jToken = JObject.Parse(json)", span="93-93"];
d15 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.SelectTokenAfterEmptyContainer()", label="JObject o = JObject.Parse(json)", span="110-110"];
d74 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardProperty()", label="Assert.IsNotNull(t)", span="212-212"];
d225 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", label="JArray a = new JArray(1, 2, 3, 4, 5, 6, 7, 8, 9)", span="409-409"];
d226 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", label="IList<JToken> t = null", span="410-410"];
d263 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", label="JArray a = new JArray(1, 2, 3, 4)", span="457-457"];
d265 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", label="Assert.IsNotNull(t)", span="460-460"];
d273 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", label="JArray a = new JArray(1, 2, 3, 4)", span="471-471"];
d275 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", label="Assert.IsNotNull(t)", span="474-474"];
d286 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScan()", label="JArray a = new JArray(o1, o2)", span="486-486"];
d288 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScan()", label="Assert.IsNotNull(t)", span="489-489"];
d297 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", label="JArray a = new JArray(o1, o2)", span="500-500"];
d299 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", label="Assert.IsNotNull(t)", span="503-503"];
d301 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", label="Assert.IsTrue(JToken.DeepEquals(a, t[0]))", span="505-505"];
d302 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", label="Assert.IsTrue(JToken.DeepEquals(o1, t[1]))", span="506-506"];
d304 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", label="Assert.IsTrue(JToken.DeepEquals(o2, t[3]))", span="508-508"];
d313 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", label="JArray a = new JArray(o1, o2, o3)", span="518-518"];
d315 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", label="Assert.IsNotNull(t)", span="521-521"];
d319 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", label="Assert.IsTrue(JToken.DeepEquals(new JObject { { ''Name'', new JArray(3) } }, t[2]))", span="525-525"];
d320 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", label="Assert.IsTrue(JToken.DeepEquals(new JArray(3), t[3]))", span="526-526"];
d327 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", label="JArray a = new JArray(o1, o2, o3)", span="535-535"];
d329 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", label="Assert.IsNotNull(t)", span="538-538"];
d331 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", label="Assert.IsTrue(JToken.DeepEquals(a, t[0]))", span="541-541"];
d332 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", label="Assert.IsTrue(JToken.DeepEquals(o1, t[1]))", span="542-542"];
d334 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", label="Assert.IsTrue(JToken.DeepEquals(o2, t[3]))", span="544-544"];
d336 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", label="Assert.IsTrue(JToken.DeepEquals(o3, t[5]))", span="546-546"];
d337 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", label="Assert.IsTrue(JToken.DeepEquals(new JObject { { ''Name'', new JArray(3) } }, t[6]))", span="547-547"];
d338 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", label="Assert.IsTrue(JToken.DeepEquals(new JArray(3), t[7]))", span="548-548"];
d358 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.ExistsQuery()", label="Assert.IsNotNull(t)", span="582-582"];
d365 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EqualsQuery()", label="Assert.IsNotNull(t)", span="595-595"];
d372 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsQuery()", label="Assert.IsNotNull(t)", span="608-608"];
d377 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NoPathQuery()", label="JArray a = new JArray(1, 2, 3)", span="616-616"];
d379 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NoPathQuery()", label="Assert.IsNotNull(t)", span="619-619"];
d385 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.MultipleQueries()", label="JArray a = new JArray(1, 2, 3, 4, 5, 6, 7, 8, 9)", span="628-628"];
d387 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.MultipleQueries()", label="Assert.IsNotNull(t)", span="634-634"];
d393 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQuery()", label="Assert.IsNotNull(t)", span="647-647"];
d401 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQueryBigInteger()", label="Assert.IsNotNull(t)", span="663-663"];
d411 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", label="Assert.IsNotNull(t)", span="680-680"];
d421 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", label="Assert.IsNotNull(t)", span="707-707"];
d8 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.ParseWithEmptyArrayContent()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.ParseWithEmptyArrayContent()", span="57-57"];
d19 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.SelectTokenAfterEmptyContainer()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.SelectTokenAfterEmptyContainer()", span="103-103"];
d23 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithRequired()", label="string bookId = (string)o.SelectToken(''bookId'', true)", span="124-124"];
d25 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithRequired()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithRequired()", span="119-119"];
d31 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyPropertyIndexer()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyPropertyIndexer()", span="130-130"];
d41 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyString()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyString()", span="140-140"];
d46 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyStringWithMatchingEmptyProperty()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyStringWithMatchingEmptyProperty()", span="153-153"];
d51 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWhitespaceString()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWhitespaceString()", span="163-163"];
d56 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarString()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarString()", span="173-173"];
d61 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarTypeString()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarTypeString()", span="183-183"];
d66 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSingleProperty()", label="Assert.IsNotNull(t)", span="199-199"];
d69 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSingleProperty()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSingleProperty()", span="193-193"];
d78 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardProperty()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardProperty()", span="205-205"];
d83 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QuoteName()", label="Assert.IsNotNull(t)", span="225-225"];
d86 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QuoteName()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QuoteName()", span="219-219"];
d169 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithoutError()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithoutError()", span="336-336"];
d219 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArray()", label="JToken t = a.SelectToken(''[1]'')", span="400-400"];
d220 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArray()", label="Assert.IsNotNull(t)", span="401-401"];
d223 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArray()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArray()", span="396-396"];
d261 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", span="407-407"];
d271 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", span="455-455"];
d281 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
d282 [cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0"];
d280 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", span="469-469"];
d292 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScan()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScan()", span="482-482"];
d306 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", span="496-496"];
d340 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", span="530-530"];
d344 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", label="Assert.IsNotNull(t)", span="559-559"];
d349 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", span="553-553"];
d352 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateLastSingleCharacterProperty()", label="string a2 = (string)o2.SelectToken(''People[0].N'')", span="571-571"];
d354 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateLastSingleCharacterProperty()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateLastSingleCharacterProperty()", span="568-568"];
d383 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NoPathQuery()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NoPathQuery()", span="614-614"];
d389 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.MultipleQueries()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.MultipleQueries()", span="626-626"];
d425 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", span="689-689"];
d428 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.PathWithConstructor()", label="JValue v = (JValue)a.SelectToken(''[1].Property2[1][0]'')", span="737-737"];
d430 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.PathWithConstructor()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.PathWithConstructor()", span="714-714"];
d463 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", label="string name = (string)o.SelectToken(''Manufacturers[0].Name'')", span="825-825"];
d465 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", label="string productName = (string)o.SelectToken(''Manufacturers[1].Products[0].Name'')", span="831-831"];
d464 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", label="decimal productPrice = (decimal)o.SelectToken(''Manufacturers[0].Products[0].Price'')", span="828-828"];
d479 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", span="792-792"];
d121 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArray()", label="JArray a = new JArray(1, 2, 3, 4, 5)", span="280-280"];
d126 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultipleResultsError()", label="JArray a = new JArray(1, 2, 3, 4, 5)", span="289-289"];
d133 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArrayWithError()", label="JArray a = new JArray(1, 2, 3, 4, 5)", span="297-297"];
d140 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateNoResultsWithMultipleArrayIndexes()", label="JArray a = new JArray(1, 2, 3, 4, 5)", span="305-305"];
d178 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultiPropertyIndexOnArrayWithError()", label="JArray a = new JArray(1, 2, 3, 4, 5)", span="357-357"];
d185 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySliceWithError()", label="JArray a = new JArray(1, 2, 3, 4, 5)", span="365-365"];
d206 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateOutOfBoundsIndxer()", label="JArray a = new JArray(1, 2, 3, 4, 5)", span="381-381"];
d211 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayOutOfBoundsIndxerWithError()", label="JArray a = new JArray(1, 2, 3, 4, 5)", span="390-390"];
d218 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArray()", label="JArray a = new JArray(1, 2, 3, 4)", span="398-398"];
d91 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingProperty()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingProperty()", span="231-231"];
d90 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingProperty()", label="Assert.IsNull(t)", span="237-237"];
d97 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateIndexerOnObject()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateIndexerOnObject()", span="241-241"];
d96 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateIndexerOnObject()", label="Assert.IsNull(t)", span="247-247"];
d101 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateIndexerOnObjectWithError()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateIndexerOnObjectWithError()", span="251-251"];
d102 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="358-358"];
d103 [cluster="lambda expression", label="Entry lambda expression", span="256-256"];
d491 [label=o, span=""];
d105 [cluster="lambda expression", label="Exit lambda expression", span="256-256"];
d26 [cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string, bool)", label="Entry Newtonsoft.Json.Linq.JToken.SelectToken(string, bool)", span="2003-2003"];
d109 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardIndexOnObjectWithError()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardIndexOnObjectWithError()", span="260-260"];
d110 [cluster="lambda expression", label="Entry lambda expression", span="265-265"];
d492 [label=o, span=""];
d112 [cluster="lambda expression", label="Exit lambda expression", span="265-265"];
d116 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSliceOnObjectWithError()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSliceOnObjectWithError()", span="269-269"];
d117 [cluster="lambda expression", label="Entry lambda expression", span="274-274"];
d493 [label=o, span=""];
d119 [cluster="lambda expression", label="Exit lambda expression", span="274-274"];
d161 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingPropertyWithError()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingPropertyWithError()", span="327-327"];
d162 [cluster="lambda expression", label="Entry lambda expression", span="332-332"];
d498 [label=o, span=""];
d164 [cluster="lambda expression", label="Exit lambda expression", span="332-332"];
d173 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingPropertyIndexWithError()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingPropertyIndexWithError()", span="346-346"];
d174 [cluster="lambda expression", label="Entry lambda expression", span="351-351"];
d499 [label=o, span=""];
d176 [cluster="lambda expression", label="Exit lambda expression", span="351-351"];
d312 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", label="JObject o3 = new JObject { { ''Name'', new JObject { { ''Name'', new JArray(3) } } } }", span="517-517"];
d326 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", label="JObject o3 = new JObject { { ''Name'', new JObject { { ''Name'', new JArray(3) } } } }", span="534-534"];
d461 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", span="792-792"];
d9 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="359-359"];
d122 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArray()", label="JToken t = a.SelectToken(''BlahBlah'')", span="282-282"];
d130 [cluster="lambda expression", label="a.SelectToken(''[0, 1]'')", span="291-291"];
d156 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateConstructorOutOfBoundsIndxer()", label="Assert.IsNull(c.SelectToken(''[1]''))", span="323-323"];
d207 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateOutOfBoundsIndxer()", label="JToken t = a.SelectToken(''[1000].Ha'')", span="383-383"];
d486 [cluster="lambda expression", label="(string)m.SelectToken(''Products[1].Name'')", span="842-842"];
d489 [cluster="lambda expression", label="(decimal)m.SelectToken(''Products[0].Price'')", span="846-846"];
d484 [cluster="lambda expression", label="Exit lambda expression", span="838-838"];
d483 [cluster="lambda expression", label="(string)s", span="838-838"];
d481 [cluster="System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, decimal>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, decimal>)", span="0-0"];
d488 [cluster="lambda expression", label="Entry lambda expression", span="846-846"];
d487 [cluster="lambda expression", label="Exit lambda expression", span="842-842"];
d1 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.ParseWithEmptyArrayContent()", label="var json = @''{\r\n    'controls': [\r\n        {\r\n            'messages': {\r\n                'addSuggestion': {\r\n                    'en-US': 'Add'\r\n                }\r\n            }\r\n        },\r\n        {\r\n            'header': {\r\n                'controls': []\r\n            },\r\n            'controls': [\r\n                {\r\n                    'controls': [\r\n                        {\r\n                            'defaultCaption': {\r\n                                'en-US': 'Sort by'\r\n                            },\r\n                            'sortOptions': [\r\n                                {\r\n                                    'label': {\r\n                                        'en-US': 'Name'\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}''", span="59-92"];
d14 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.SelectTokenAfterEmptyContainer()", label="string json = @''{\r\n    'cont': [],\r\n    'test': 'no one will find me'\r\n}''", span="105-108"];
d70 [cluster="Unk.IsNotNull", label="Entry Unk.IsNotNull", span=""];
d224 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", span="407-407"];
d262 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", span="455-455"];
d272 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", span="469-469"];
d284 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScan()", label="JObject o1 = new JObject { { ''Name'', 1 } }", span="484-484"];
d285 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScan()", label="JObject o2 = new JObject { { ''Name'', 2 } }", span="485-485"];
d295 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", label="JObject o1 = new JObject { { ''Name'', 1 } }", span="498-498"];
d296 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", label="JObject o2 = new JObject { { ''Name'', 2 } }", span="499-499"];
d310 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", label="JObject o1 = new JObject { { ''Name'', 1 } }", span="515-515"];
d311 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", label="JObject o2 = new JObject { { ''Name'', 2 } }", span="516-516"];
d293 [cluster="Newtonsoft.Json.Linq.JObject.JObject()", label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87"];
d321 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", span="513-513"];
d324 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", label="JObject o1 = new JObject { { ''Name'', 1 } }", span="532-532"];
d325 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", label="JObject o2 = new JObject { { ''Name'', 2 } }", span="533-533"];
d376 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NoPathQuery()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NoPathQuery()", span="614-614"];
d384 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.MultipleQueries()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.MultipleQueries()", span="626-626"];
d0 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.ParseWithEmptyArrayContent()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.ParseWithEmptyArrayContent()", span="57-57"];
d13 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.SelectTokenAfterEmptyContainer()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.SelectTokenAfterEmptyContainer()", span="103-103"];
d22 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithRequired()", label="JObject o = JObject.Parse(json)", span="122-122"];
d20 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithRequired()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithRequired()", span="119-119"];
d217 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArray()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArray()", span="396-396"];
d283 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScan()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScan()", span="482-482"];
d294 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", span="496-496"];
d323 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", span="530-530"];
d351 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateLastSingleCharacterProperty()", label="JObject o2 = JObject.Parse(''{'People':[{'N':'Jeff'}]}'')", span="570-570"];
d350 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateLastSingleCharacterProperty()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateLastSingleCharacterProperty()", span="568-568"];
d427 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.PathWithConstructor()", label="JArray a = JArray.Parse(@''[\r\n  {\r\n    ''''Property1'''': [\r\n      1,\r\n      [\r\n        [\r\n          []\r\n        ]\r\n      ]\r\n    ]\r\n  },\r\n  {\r\n    ''''Property2'''': new Constructor1(\r\n      null,\r\n      [\r\n        1\r\n      ]\r\n    )\r\n  }\r\n]'')", span="716-735"];
d426 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.PathWithConstructor()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.PathWithConstructor()", span="714-714"];
d120 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArray()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArray()", span="278-278"];
d125 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultipleResultsError()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultipleResultsError()", span="287-287"];
d127 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultipleResultsError()", label="ExceptionAssert.Throws<JsonException>(() => { a.SelectToken(''[0, 1]''); }, @''Path returned multiple tokens.'')", span="291-291"];
d132 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArrayWithError()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArrayWithError()", span="295-295"];
d134 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArrayWithError()", label="ExceptionAssert.Throws<JsonException>(() => { a.SelectToken(''BlahBlah'', true); }, @''Property 'BlahBlah' not valid on JArray.'')", span="299-299"];
d137 [cluster="lambda expression", label="a.SelectToken(''BlahBlah'', true)", span="299-299"];
d139 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateNoResultsWithMultipleArrayIndexes()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateNoResultsWithMultipleArrayIndexes()", span="303-303"];
d141 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateNoResultsWithMultipleArrayIndexes()", label="ExceptionAssert.Throws<JsonException>(() => { a.SelectToken(''[9,10]'', true); }, @''Index 9 outside the bounds of JArray.'')", span="307-307"];
d144 [cluster="lambda expression", label="a.SelectToken(''[9,10]'', true)", span="307-307"];
d177 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultiPropertyIndexOnArrayWithError()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultiPropertyIndexOnArrayWithError()", span="355-355"];
d179 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultiPropertyIndexOnArrayWithError()", label="ExceptionAssert.Throws<JsonException>(() => { a.SelectToken(''['Missing','Missing2']'', true); }, ''Properties 'Missing', 'Missing2' not valid on JArray.'')", span="359-359"];
d182 [cluster="lambda expression", label="a.SelectToken(''['Missing','Missing2']'', true)", span="359-359"];
d184 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySliceWithError()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySliceWithError()", span="363-363"];
d186 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySliceWithError()", label="ExceptionAssert.Throws<JsonException>(() => { a.SelectToken(''[99:]'', true); }, ''Array slice of 99 to * returned no results.'')", span="367-367"];
d194 [cluster="lambda expression", label="a.SelectToken(''[99:]'', true)", span="367-367"];
d187 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySliceWithError()", label="ExceptionAssert.Throws<JsonException>(() => { a.SelectToken(''[1:-19]'', true); }, ''Array slice of 1 to -19 returned no results.'')", span="369-369"];
d197 [cluster="lambda expression", label="a.SelectToken(''[1:-19]'', true)", span="369-369"];
d188 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySliceWithError()", label="ExceptionAssert.Throws<JsonException>(() => { a.SelectToken(''[:-19]'', true); }, ''Array slice of * to -19 returned no results.'')", span="371-371"];
d200 [cluster="lambda expression", label="a.SelectToken(''[:-19]'', true)", span="371-371"];
d205 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateOutOfBoundsIndxer()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateOutOfBoundsIndxer()", span="379-379"];
d210 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayOutOfBoundsIndxerWithError()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayOutOfBoundsIndxerWithError()", span="388-388"];
d212 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayOutOfBoundsIndxerWithError()", label="ExceptionAssert.Throws<JsonException>(() => { a.SelectToken(''[1000].Ha'', true); }, ''Index 1000 outside the bounds of JArray.'')", span="392-392"];
d215 [cluster="lambda expression", label="a.SelectToken(''[1000].Ha'', true)", span="392-392"];
d92 [cluster="Unk.IsNull", label="Entry Unk.IsNull", span=""];
d148 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateConstructorOutOfBoundsIndxerWithError()", label="ExceptionAssert.Throws<JsonException>(() => { c.SelectToken(''[1]'', true); }, @''Index 1 outside the bounds of JConstructor.'')", span="315-315"];
d190 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySliceWithError()", label="ExceptionAssert.Throws<JsonException>(() => { a.SelectToken(''[:]'', true); }, ''Array slice of * to * returned no results.'')", span="375-375"];
d152 [cluster="lambda expression", label="c.SelectToken(''[1]'', true)", span="315-315"];
d203 [cluster="lambda expression", label="a.SelectToken(''[:]'', true)", span="375-375"];
d123 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArray()", label="Assert.IsNull(t)", span="283-283"];
d494 [label=a, span=""];
d129 [cluster="lambda expression", label="Entry lambda expression", span="291-291"];
d131 [cluster="lambda expression", label="Exit lambda expression", span="291-291"];
d155 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateConstructorOutOfBoundsIndxer()", label="JConstructor c = new JConstructor(''Blah'')", span="321-321"];
d157 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateConstructorOutOfBoundsIndxer()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateConstructorOutOfBoundsIndxer()", span="319-319"];
d208 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateOutOfBoundsIndxer()", label="Assert.IsNull(t)", span="384-384"];
d490 [cluster="lambda expression", label="Exit lambda expression", span="846-846"];
d309 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", span="513-513"];
d21 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithRequired()", label="string json = ''{\''bookId\'':\''1000\''}''", span="121-121"];
d431 [cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", label="Entry Newtonsoft.Json.Linq.JArray.Parse(string)", span="144-144"];
d124 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArray()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArray()", span="278-278"];
d128 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultipleResultsError()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultipleResultsError()", span="287-287"];
d135 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArrayWithError()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArrayWithError()", span="295-295"];
d136 [cluster="lambda expression", label="Entry lambda expression", span="299-299"];
d495 [label=a, span=""];
d138 [cluster="lambda expression", label="Exit lambda expression", span="299-299"];
d142 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateNoResultsWithMultipleArrayIndexes()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateNoResultsWithMultipleArrayIndexes()", span="303-303"];
d143 [cluster="lambda expression", label="Entry lambda expression", span="307-307"];
d496 [label=a, span=""];
d145 [cluster="lambda expression", label="Exit lambda expression", span="307-307"];
d180 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultiPropertyIndexOnArrayWithError()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultiPropertyIndexOnArrayWithError()", span="355-355"];
d181 [cluster="lambda expression", label="Entry lambda expression", span="359-359"];
d500 [label=a, span=""];
d183 [cluster="lambda expression", label="Exit lambda expression", span="359-359"];
d191 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySliceWithError()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySliceWithError()", span="363-363"];
d193 [cluster="lambda expression", label="Entry lambda expression", span="367-367"];
d501 [label=a, span=""];
d195 [cluster="lambda expression", label="Exit lambda expression", span="367-367"];
d196 [cluster="lambda expression", label="Entry lambda expression", span="369-369"];
d198 [cluster="lambda expression", label="Exit lambda expression", span="369-369"];
d189 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySliceWithError()", label="a = new JArray()", span="373-373"];
d199 [cluster="lambda expression", label="Entry lambda expression", span="371-371"];
d201 [cluster="lambda expression", label="Exit lambda expression", span="371-371"];
d209 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateOutOfBoundsIndxer()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateOutOfBoundsIndxer()", span="379-379"];
d213 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayOutOfBoundsIndxerWithError()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayOutOfBoundsIndxerWithError()", span="388-388"];
d214 [cluster="lambda expression", label="Entry lambda expression", span="392-392"];
d502 [label=a, span=""];
d216 [cluster="lambda expression", label="Exit lambda expression", span="392-392"];
d147 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateConstructorOutOfBoundsIndxerWithError()", label="JConstructor c = new JConstructor(''Blah'')", span="313-313"];
d149 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateConstructorOutOfBoundsIndxerWithError()", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateConstructorOutOfBoundsIndxerWithError()", span="311-311"];
d151 [cluster="lambda expression", label="Entry lambda expression", span="315-315"];
d202 [cluster="lambda expression", label="Entry lambda expression", span="375-375"];
d497 [label=c, span=""];
d153 [cluster="lambda expression", label="Exit lambda expression", span="315-315"];
d204 [cluster="lambda expression", label="Exit lambda expression", span="375-375"];
d154 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateConstructorOutOfBoundsIndxer()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateConstructorOutOfBoundsIndxer()", span="319-319"];
d150 [cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor(string)", label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor(string)", span="122-122"];
d192 [cluster="Newtonsoft.Json.Linq.JArray.JArray()", label="Entry Newtonsoft.Json.Linq.JArray.JArray()", span="65-65"];
d146 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateConstructorOutOfBoundsIndxerWithError()", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateConstructorOutOfBoundsIndxerWithError()", span="311-311"];
m0_15 [cluster="object.ReferenceEquals(object, object)", file="JsonPropertyCollection.cs", label="Entry object.ReferenceEquals(object, object)", span="0-0"];
m0_9 [cluster="Newtonsoft.Json.Linq.JArray.JArray(params object[])", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray(params object[])", span="81-81"];
m0_14 [cluster="System.Console.WriteLine(bool)", file="JsonPropertyCollection.cs", label="Entry System.Console.WriteLine(bool)", span="0-0"];
m0_0 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.Clone.Example()", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Linq.Clone.Example()", span="10-10"];
m0_1 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.Clone.Example()", file="JsonPropertyCollection.cs", label="JObject o1 = new JObject\r\n        {\r\n          {''String'', ''A string!''},\r\n          {''Items'', new JArray(1, 2)}\r\n        }", span="12-16"];
m0_2 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.Clone.Example()", file="JsonPropertyCollection.cs", label="Console.WriteLine(o1.ToString())", span="18-18"];
m0_3 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.Clone.Example()", file="JsonPropertyCollection.cs", label="JObject o2 = (JObject) o1.DeepClone()", span="27-27"];
m0_5 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.Clone.Example()", file="JsonPropertyCollection.cs", label="Console.WriteLine(JToken.DeepEquals(o1, o2))", span="38-38"];
m0_6 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.Clone.Example()", file="JsonPropertyCollection.cs", label="Console.WriteLine(Object.ReferenceEquals(o1, o2))", span="41-41"];
m0_4 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.Clone.Example()", file="JsonPropertyCollection.cs", label="Console.WriteLine(o2.ToString())", span="29-29"];
m0_7 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.Clone.Example()", file="JsonPropertyCollection.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Linq.Clone.Example()", span="10-10"];
m0_11 [cluster="System.Console.WriteLine(string)", file="JsonPropertyCollection.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m0_12 [cluster="Newtonsoft.Json.Linq.JToken.DeepClone()", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepClone()", span="1743-1743"];
m0_10 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="389-389"];
m0_13 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="144-144"];
m1_80 [cluster="System.IO.StringReader.StringReader(string)", file="JsonTextReaderTest.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m1_67 [cluster="System.Console.WriteLine(string, object)", file="JsonTextReaderTest.cs", label="Entry System.Console.WriteLine(string, object)", span="0-0"];
m1_30 [cluster="JavaScriptSerializer.cstr", file="JsonTextReaderTest.cs", label="Entry JavaScriptSerializer.cstr", span=""];
m1_24 [cluster="Newtonsoft.Json.JsonTextWriter.Close()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.Close()", span="120-120"];
m1_33 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.Serialize()", span="63-63"];
m1_34 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize()", file="JsonTextReaderTest.cs", label="TestClass test = new TestClass()", span="65-65"];
m1_35 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize()", file="JsonTextReaderTest.cs", label="test.Address1.Address = ''fff Street''", span="67-67"];
m1_36 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize()", file="JsonTextReaderTest.cs", label="test.Address1.Entered = DateTime.Now.AddDays(20)", span="68-68"];
m1_37 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize()", file="JsonTextReaderTest.cs", label="test.BigNumber = 34123123123.121M", span="70-70"];
m1_38 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize()", file="JsonTextReaderTest.cs", label="test.Now = DateTime.Now.AddHours(1)", span="71-71"];
m1_39 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize()", file="JsonTextReaderTest.cs", label="test.strings = new List<string>() { ''Rick'', ''Markus egger ][, (2nd)'', ''Kevin McNeish'' }", span="72-72"];
m1_43 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize()", file="JsonTextReaderTest.cs", label="test.Addresses.Add(address)", span="78-78"];
m1_47 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize()", file="JsonTextReaderTest.cs", label="test.Addresses.Add(address)", span="83-83"];
m1_53 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize()", file="JsonTextReaderTest.cs", label="json = this.SerializeJsonNet(test)", span="91-91"];
m1_40 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize()", file="JsonTextReaderTest.cs", label="cAddress address = new cAddress()", span="74-74"];
m1_41 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize()", file="JsonTextReaderTest.cs", label="address.Entered = DateTime.Now.AddDays(-1)", span="75-75"];
m1_42 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize()", file="JsonTextReaderTest.cs", label="address.Address = ''array address''", span="76-76"];
m1_44 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize()", file="JsonTextReaderTest.cs", label="address = new cAddress()", span="80-80"];
m1_45 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize()", file="JsonTextReaderTest.cs", label="address.Entered = DateTime.Now.AddDays(-2)", span="81-81"];
m1_46 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize()", file="JsonTextReaderTest.cs", label="address.Address = ''array 2 address''", span="82-82"];
m1_48 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize()", file="JsonTextReaderTest.cs", label="Stopwatch timed = new Stopwatch()", span="85-85"];
m1_49 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize()", file="JsonTextReaderTest.cs", label="timed.Start()", span="86-86"];
m1_55 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize()", file="JsonTextReaderTest.cs", label="timed.Stop()", span="94-94"];
m1_56 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize()", file="JsonTextReaderTest.cs", label="Console.WriteLine(''{0}'', timed.ElapsedMilliseconds + '' ms'')", span="96-96"];
m1_50 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize()", file="JsonTextReaderTest.cs", label="string json = null", span="88-88"];
m1_51 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize()", file="JsonTextReaderTest.cs", label="int x = 0", span="89-89"];
m1_57 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize()", file="JsonTextReaderTest.cs", label="Console.WriteLine(''{0}'', json)", span="97-97"];
m1_52 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize()", file="JsonTextReaderTest.cs", label="x < 10000", span="89-89"];
m1_54 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize()", file="JsonTextReaderTest.cs", label="x++", span="89-89"];
m1_58 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.Serialize()", span="63-63"];
m1_81 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", span="182-182"];
m1_60 [cluster="System.DateTime.AddDays(double)", file="JsonTextReaderTest.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m1_22 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="628-628"];
m1_19 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="135-135"];
m1_20 [cluster="System.IO.StringWriter.StringWriter()", file="JsonTextReaderTest.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m1_63 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonTextReaderTest.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m1_62 [cluster="Newtonsoft.Json.Tests.cAddress.cAddress()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.cAddress.cAddress()", span="204-204"];
m1_68 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", span="101-101"];
m1_69 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", file="JsonTextReaderTest.cs", label="string json = @''{\r\n  ''''strings'''': [\r\n    ''''Rick'''',\r\n    ''''Markus egger ][, (2nd)'''',\r\n    ''''Kevin McNeish''''\r\n  ],\r\n  ''''dictionary'''': {\r\n    ''''Val asd1'''': 1,\r\n    ''''Val2'''': 3,\r\n    ''''Val3'''': 4\r\n  },\r\n  ''''Name'''': ''''Rick'''',\r\n  ''''Now'''': ''''\/Date(1220867547892+1200)\/'''',\r\n  ''''BigNumber'''': 34123123123.121,\r\n  ''''Address1'''': {\r\n    ''''Address'''': ''''fff Street'''',\r\n    ''''Phone'''': ''''(503) 814-6335'''',\r\n    ''''Entered'''': ''''\/Date(1222588347892+1300)\/''''\r\n  },\r\n  ''''Addresses'''': [\r\n    {\r\n      ''''Address'''': ''''array address'''',\r\n      ''''Phone'''': ''''(503) 814-6335'''',\r\n      ''''Entered'''': ''''\/Date(1220777547892+1200)\/''''\r\n    },\r\n    {\r\n      ''''Address'''': ''''array 2 address'''',\r\n      ''''Phone'''': ''''(503) 814-6335'''',\r\n      ''''Entered'''': ''''\/Date(1220691147893+1200)\/''''\r\n    }\r\n  ]\r\n}''", span="103-134"];
m1_70 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", file="JsonTextReaderTest.cs", label="int x = 0", span="136-136"];
m1_77 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", file="JsonTextReaderTest.cs", label="TestClass test = (TestClass)serializer.Deserialize(new StringReader(json), typeof(TestClass))", span="146-146"];
m1_71 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", file="JsonTextReaderTest.cs", label="x < 10000", span="136-136"];
m1_78 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", file="JsonTextReaderTest.cs", label="x++", span="136-136"];
m1_72 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", file="JsonTextReaderTest.cs", label="Newtonsoft.Json.JsonSerializer serializer = new Newtonsoft.Json.JsonSerializer()", span="138-138"];
m1_73 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", file="JsonTextReaderTest.cs", label="serializer.NullValueHandling = NullValueHandling.Ignore", span="140-140"];
m1_74 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", file="JsonTextReaderTest.cs", label="serializer.ObjectCreationHandling = Newtonsoft.Json.ObjectCreationHandling.Replace", span="142-142"];
m1_75 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", file="JsonTextReaderTest.cs", label="serializer.MissingMemberHandling = Newtonsoft.Json.MissingMemberHandling.Ignore", span="143-143"];
m1_76 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", file="JsonTextReaderTest.cs", label="serializer.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="144-144"];
m1_79 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", span="101-101"];
m1_59 [cluster="Newtonsoft.Json.Tests.TestClass.TestClass()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.TestClass.TestClass()", span="153-153"];
m1_25 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeWebExtensions(object)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.SerializeWebExtensions(object)", span="52-52"];
m1_26 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeWebExtensions(object)", file="JsonTextReaderTest.cs", label="JavaScriptSerializer ser = new JavaScriptSerializer()", span="54-54"];
m1_28 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeWebExtensions(object)", file="JsonTextReaderTest.cs", label="return ser.Serialize(value);", span="58-58"];
m1_27 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeWebExtensions(object)", file="JsonTextReaderTest.cs", label="List<JavaScriptConverter> converters = new List<JavaScriptConverter>()", span="56-56"];
m1_29 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeWebExtensions(object)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.SerializeWebExtensions(object)", span="52-52"];
m1_0 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeJsonNet(object)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.SerializeJsonNet(object)", span="22-22"];
m1_1 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeJsonNet(object)", file="JsonTextReaderTest.cs", label="Type type = value.GetType()", span="24-24"];
m1_13 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeJsonNet(object)", file="JsonTextReaderTest.cs", label="json.Serialize(writer, value)", span="44-44"];
m1_2 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeJsonNet(object)", file="JsonTextReaderTest.cs", label="Newtonsoft.Json.JsonSerializer json = new Newtonsoft.Json.JsonSerializer()", span="26-26"];
m1_3 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeJsonNet(object)", file="JsonTextReaderTest.cs", label="json.NullValueHandling = NullValueHandling.Ignore", span="28-28"];
m1_4 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeJsonNet(object)", file="JsonTextReaderTest.cs", label="json.ObjectCreationHandling = Newtonsoft.Json.ObjectCreationHandling.Replace", span="30-30"];
m1_5 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeJsonNet(object)", file="JsonTextReaderTest.cs", label="json.MissingMemberHandling = Newtonsoft.Json.MissingMemberHandling.Ignore", span="31-31"];
m1_6 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeJsonNet(object)", file="JsonTextReaderTest.cs", label="json.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="32-32"];
m1_7 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeJsonNet(object)", file="JsonTextReaderTest.cs", label="StringWriter sw = new StringWriter()", span="35-35"];
m1_8 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeJsonNet(object)", file="JsonTextReaderTest.cs", label="Newtonsoft.Json.JsonTextWriter writer = new JsonTextWriter(sw)", span="36-36"];
m1_14 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeJsonNet(object)", file="JsonTextReaderTest.cs", label="string output = sw.ToString()", span="46-46"];
m1_9 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeJsonNet(object)", file="JsonTextReaderTest.cs", label=true, span="38-38"];
m1_10 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeJsonNet(object)", file="JsonTextReaderTest.cs", label="writer.Formatting = Formatting.Indented", span="39-39"];
m1_11 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeJsonNet(object)", file="JsonTextReaderTest.cs", label="writer.Formatting = Formatting.None", span="41-41"];
m1_12 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeJsonNet(object)", file="JsonTextReaderTest.cs", label="writer.QuoteChar = ''''", span="43-43"];
m1_15 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeJsonNet(object)", file="JsonTextReaderTest.cs", label="writer.Close()", span="47-47"];
m1_16 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeJsonNet(object)", file="JsonTextReaderTest.cs", label="return output;", span="49-49"];
m1_17 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeJsonNet(object)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.SerializeJsonNet(object)", span="22-22"];
m1_65 [cluster="System.Diagnostics.Stopwatch.Start()", file="JsonTextReaderTest.cs", label="Entry System.Diagnostics.Stopwatch.Start()", span="0-0"];
m1_23 [cluster="System.IO.StringWriter.ToString()", file="JsonTextReaderTest.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m1_21 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="97-97"];
m1_61 [cluster="System.DateTime.AddHours(double)", file="JsonTextReaderTest.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m1_64 [cluster="System.Diagnostics.Stopwatch.Stopwatch()", file="JsonTextReaderTest.cs", label="Entry System.Diagnostics.Stopwatch.Stopwatch()", span="0-0"];
m1_18 [cluster="object.GetType()", file="JsonTextReaderTest.cs", label="Entry object.GetType()", span="0-0"];
m1_32 [cluster="Unk.Serialize", file="JsonTextReaderTest.cs", label="Entry Unk.Serialize", span=""];
m1_66 [cluster="System.Diagnostics.Stopwatch.Stop()", file="JsonTextReaderTest.cs", label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0"];
m1_82 [file="JsonTextReaderTest.cs", label="Newtonsoft.Json.Tests.PerformanceTests", span=""];
m5_6 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", span="35-35"];
m5_7 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label=Operator, span="37-37"];
m5_10 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="!e.IsMatch(t)", span="42-42"];
m5_15 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="e.IsMatch(t)", span="49-49"];
m5_8 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="QueryOperator.And", span="39-39"];
m5_13 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="QueryOperator.Or", span="46-46"];
m5_18 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="throw new ArgumentOutOfRangeException();", span="54-54"];
m5_9 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label=Expressions, span="40-40"];
m5_12 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="return true;", span="45-45"];
m5_11 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="return false;", span="43-43"];
m5_14 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label=Expressions, span="47-47"];
m5_17 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="return false;", span="52-52"];
m5_16 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="return true;", span="50-50"];
m5_19 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", span="35-35"];
m5_21 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", span="64-64"];
m5_22 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="IEnumerable<JToken> pathResult = JPath.Evaluate(Path, t, false)", span="66-66"];
m5_23 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label=pathResult, span="68-68"];
m5_24 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="JValue v = r as JValue", span="70-70"];
m5_47 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="return false;", span="104-104"];
m5_25 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label=Operator, span="71-71"];
m5_27 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", color=red, community=0, file="QueryExpression.cs", label="-1: v != null && v.Equals(Value)", span="74-74"];
m5_30 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", color=red, community=0, file="QueryExpression.cs", label="-1: v != null && !v.Equals(Value)", span="78-78"];
m5_33 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="v != null && v.CompareTo(Value) > 0", span="82-82"];
m5_36 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="v != null && v.CompareTo(Value) >= 0", span="86-86"];
m5_39 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="v != null && v.CompareTo(Value) < 0", span="90-90"];
m5_42 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="v != null && v.CompareTo(Value) <= 0", span="94-94"];
m5_26 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="QueryOperator.Equals", span="73-73"];
m5_29 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="QueryOperator.NotEquals", span="77-77"];
m5_32 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="QueryOperator.GreaterThan", span="81-81"];
m5_35 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="QueryOperator.GreaterThanOrEquals", span="85-85"];
m5_38 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="QueryOperator.LessThan", span="89-89"];
m5_41 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="QueryOperator.LessThanOrEquals", span="93-93"];
m5_44 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="QueryOperator.Exists", span="97-97"];
m5_46 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="throw new ArgumentOutOfRangeException();", span="100-100"];
m5_28 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="return true;", span="75-75"];
m5_31 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="return true;", span="79-79"];
m5_34 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="return true;", span="83-83"];
m5_37 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="return true;", span="87-87"];
m5_40 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="return true;", span="91-91"];
m5_43 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="return true;", span="95-95"];
m5_45 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="return true;", span="98-98"];
m5_48 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", span="64-64"];
m5_50 [cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", span="748-748"];
m5_51 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", span="959-959"];
m5_0 [cluster="Newtonsoft.Json.Linq.JsonPath.QueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.QueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", span="23-23"];
m5_1 [cluster="Newtonsoft.Json.Linq.JsonPath.QueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.QueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", span="23-23"];
m5_2 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.CompositeExpression()", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.CompositeExpression.CompositeExpression()", span="30-30"];
m5_3 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.CompositeExpression()", file="QueryExpression.cs", label="Expressions = new List<QueryExpression>()", span="32-32"];
m5_4 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.CompositeExpression()", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.CompositeExpression.CompositeExpression()", span="30-30"];
m5_49 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Evaluate(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, Newtonsoft.Json.Linq.JToken, bool)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.Evaluate(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, Newtonsoft.Json.Linq.JToken, bool)", span="662-662"];
m5_20 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="QueryExpression.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m5_52 [file="QueryExpression.cs", label="Newtonsoft.Json.Linq.JsonPath.CompositeExpression", span=""];
m5_53 [file="QueryExpression.cs", label="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression", span=""];
m7_591 [cluster="System.Text.StringBuilder.StringBuilder()", file="TraceWriterTests.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m7_495 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteEndObject()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteEndObject()", span="309-309"];
m7_81 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="TraceWriterTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m7_173 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializingNested()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializingNested()", span="390-390"];
m7_174 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializingNested()", file="TraceWriterTests.cs", label="string json = @''{''''IntList'''':[1, ''''two'''']}''", span="392-392"];
m7_175 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializingNested()", file="TraceWriterTests.cs", label="var traceWriter = new InMemoryTraceWriter\r\n            {\r\n                LevelFilter = TraceLevel.Info\r\n            }", span="394-397"];
m7_176 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializingNested()", file="TraceWriterTests.cs", label="ExceptionAssert.Throws<Exception>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<TraceTestObject>(\r\n                    json,\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        TraceWriter = traceWriter\r\n                    });\r\n            }, ''Could not convert string to integer: two. Path 'IntList[1]', line 1, position 20.'')", span="399-407"];
m7_177 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializingNested()", file="TraceWriterTests.cs", label="Assert.AreEqual(3, traceWriter.TraceRecords.Count)", span="409-409"];
m7_178 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializingNested()", file="TraceWriterTests.cs", label="Assert.AreEqual(TraceLevel.Info, traceWriter.TraceRecords[0].Level)", span="411-411"];
m7_179 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializingNested()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Started deserializing Newtonsoft.Json.Tests.Serialization.TraceTestObject. Path 'IntList', line 1, position 11.'', traceWriter.TraceRecords[0].Message)", span="412-412"];
m7_180 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializingNested()", file="TraceWriterTests.cs", label="Assert.AreEqual(TraceLevel.Info, traceWriter.TraceRecords[1].Level)", span="414-414"];
m7_181 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializingNested()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Started deserializing System.Collections.Generic.IList`1[System.Int32]. Path 'IntList', line 1, position 12.'', traceWriter.TraceRecords[1].Message)", span="415-415"];
m7_182 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializingNested()", file="TraceWriterTests.cs", label="Assert.AreEqual(TraceLevel.Error, traceWriter.TraceRecords[2].Level)", span="417-417"];
m7_183 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializingNested()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Error deserializing System.Collections.Generic.IList`1[System.Int32]. Could not convert string to integer: two. Path 'IntList[1]', line 1, position 20.'', traceWriter.TraceRecords[2].Message)", span="418-418"];
m7_184 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializingNested()", file="TraceWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializingNested()", span="390-390"];
m7_474 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong?)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ulong?)", span="1025-1025"];
m7_479 [cluster="System.TimeSpan.FromMinutes(double)", file="TraceWriterTests.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m7_459 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ulong)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ulong)", span="199-199"];
m7_564 [cluster="Newtonsoft.Json.Serialization.TraceJsonReader.TraceJsonReader(Newtonsoft.Json.JsonReader)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonReader.TraceJsonReader(Newtonsoft.Json.JsonReader)", span="14-14"];
m7_49 [cluster="Unk.IsTrue", file="TraceWriterTests.cs", label="Entry Unk.IsTrue", span=""];
m7_250 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeConverter()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeConverter()", span="536-536"];
m7_251 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeConverter()", file="TraceWriterTests.cs", label="string json = @''[new Date(976623132000)]''", span="538-538"];
m7_252 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeConverter()", file="TraceWriterTests.cs", label="InMemoryTraceWriter traceWriter =\r\n                new InMemoryTraceWriter\r\n                {\r\n                    LevelFilter = TraceLevel.Verbose\r\n                }", span="540-544"];
m7_253 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeConverter()", file="TraceWriterTests.cs", label="JsonConvert.DeserializeObject<List<DateTime>>(\r\n                json,\r\n                new JsonSerializerSettings\r\n                {\r\n                    Converters = { new JavaScriptDateTimeConverter() },\r\n                    TraceWriter = traceWriter\r\n                })", span="546-552"];
m7_254 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeConverter()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Started deserializing System.Collections.Generic.List`1[System.DateTime]. Path '', line 1, position 1.'', traceWriter.TraceRecords[0].Message)", span="554-554"];
m7_255 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeConverter()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Started deserializing System.DateTime with converter Newtonsoft.Json.Converters.JavaScriptDateTimeConverter. Path '[0]', line 1, position 10.'', traceWriter.TraceRecords[1].Message)", span="555-555"];
m7_256 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeConverter()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Finished deserializing System.DateTime with converter Newtonsoft.Json.Converters.JavaScriptDateTimeConverter. Path '[0]', line 1, position 23.'', traceWriter.TraceRecords[2].Message)", span="556-556"];
m7_257 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeConverter()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Finished deserializing System.Collections.Generic.List`1[System.DateTime]. Path '', line 1, position 24.'', traceWriter.TraceRecords[3].Message)", span="557-557"];
m7_258 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeConverter()", file="TraceWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeConverter()", span="536-536"];
m7_462 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset?)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset?)", span="1160-1160"];
m7_585 [cluster="Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter.ToString()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter.ToString()", span="1078-1078"];
m7_586 [cluster="Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter.ToString()", file="TraceWriterTests.cs", label="StringBuilder sb = new StringBuilder()", span="1080-1080"];
m7_587 [cluster="Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter.ToString()", file="TraceWriterTests.cs", label=TraceRecords, span="1081-1081"];
m7_588 [cluster="Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter.ToString()", file="TraceWriterTests.cs", label="sb.AppendLine(traceRecord.Message)", span="1083-1083"];
m7_589 [cluster="Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter.ToString()", file="TraceWriterTests.cs", label="return sb.ToString();", span="1086-1086"];
m7_590 [cluster="Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter.ToString()", file="TraceWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter.ToString()", span="1078-1078"];
m7_488 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteNull()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteNull()", span="111-111"];
m7_20 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterSerializeTest()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterSerializeTest()", span="79-79"];
m7_21 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterSerializeTest()", file="TraceWriterTests.cs", label="Staff staff = new Staff()", span="81-81"];
m7_22 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterSerializeTest()", file="TraceWriterTests.cs", label="staff.Name = ''Arnie Admin''", span="82-82"];
m7_23 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterSerializeTest()", file="TraceWriterTests.cs", label="staff.Roles = new List<string> { ''Administrator'' }", span="83-83"];
m7_24 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterSerializeTest()", file="TraceWriterTests.cs", label="staff.StartDate = new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)", span="84-84"];
m7_26 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterSerializeTest()", file="TraceWriterTests.cs", label="JsonConvert.SerializeObject(\r\n                staff,\r\n                new JsonSerializerSettings { TraceWriter = traceWriter, Converters = { new JavaScriptDateTimeConverter() } })", span="88-90"];
m7_25 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterSerializeTest()", file="TraceWriterTests.cs", label="ITraceWriter traceWriter = new MemoryTraceWriter()", span="86-86"];
m7_27 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterSerializeTest()", file="TraceWriterTests.cs", label="MemoryTraceWriter memoryTraceWriter = (MemoryTraceWriter)traceWriter", span="99-99"];
m7_28 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterSerializeTest()", file="TraceWriterTests.cs", label="string output = memoryTraceWriter.ToString()", span="100-100"];
m7_30 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterSerializeTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(7, memoryTraceWriter.GetTraceMessages().Count())", span="103-103"];
m7_29 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterSerializeTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(916, output.Length)", span="102-102"];
m7_33 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterSerializeTest()", file="TraceWriterTests.cs", label="output = StringAssert.Normalize(output)", span="117-117"];
m7_31 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterSerializeTest()", file="TraceWriterTests.cs", label="string json = @''Serialized JSON: \r\n{\r\n  ''''Name'''': ''''Arnie Admin'''',\r\n  ''''StartDate'''': new Date(\r\n    976623132000\r\n  ),\r\n  ''''Roles'''': [\r\n    ''''Administrator''''\r\n  ]\r\n}''", span="105-114"];
m7_32 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterSerializeTest()", file="TraceWriterTests.cs", label="json = StringAssert.Normalize(json)", span="116-116"];
m7_34 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterSerializeTest()", file="TraceWriterTests.cs", label="Assert.IsTrue(output.Contains(json))", span="119-119"];
m7_35 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterSerializeTest()", file="TraceWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterSerializeTest()", span="79-79"];
m7_100 [cluster="Newtonsoft.Json.Tests.Serialization.TraceTestObject.TraceTestObject()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TraceTestObject.TraceTestObject()", span="1090-1090"];
m7_565 [cluster="Newtonsoft.Json.Serialization.TraceJsonReader.Read()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonReader.Read()", span="31-31"];
m7_454 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ushort)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ushort)", span="213-213"];
m7_468 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(short?)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(short?)", span="1073-1073"];
m7_476 [cluster="Unk.Parse", file="TraceWriterTests.cs", label="Entry Unk.Parse", span=""];
m7_449 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(double)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(double)", span="97-97"];
m7_497 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.Close()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.Close()", span="337-337"];
m7_18 [cluster="System.IO.StringWriter.ToString()", file="TraceWriterTests.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m7_482 [cluster="System.Uri.Uri(string)", file="TraceWriterTests.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m7_456 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(sbyte)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(sbyte)", span="164-164"];
m7_568 [cluster="Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsDateTimeOffset()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsDateTimeOffset()", span="74-74"];
m7_259 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeTypeName()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeTypeName()", span="561-561"];
m7_260 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeTypeName()", file="TraceWriterTests.cs", label="InMemoryTraceWriter traceWriter = new InMemoryTraceWriter\r\n            {\r\n                LevelFilter = TraceLevel.Verbose\r\n            }", span="563-566"];
m7_261 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeTypeName()", file="TraceWriterTests.cs", label="string json = @''{\r\n  ''''$type'''': ''''System.Collections.Generic.List`1[[System.Object, mscorlib]], mscorlib'''',\r\n  ''''$values'''': [\r\n    {\r\n      ''''$type'''': ''''System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib'''',\r\n      ''''key!'''': ''''value!''''\r\n    },\r\n    {\r\n      ''''$type'''': ''''System.Version, mscorlib'''',\r\n      ''''Major'''': 1,\r\n      ''''Minor'''': 2,\r\n      ''''Build'''': 3,\r\n      ''''Revision'''': 4,\r\n      ''''MajorRevision'''': 0,\r\n      ''''MinorRevision'''': 4\r\n    }\r\n  ]\r\n}''", span="568-585"];
m7_262 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeTypeName()", file="TraceWriterTests.cs", label="JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Default,\r\n                TraceWriter = traceWriter\r\n            })", span="587-592"];
m7_263 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeTypeName()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Resolved type 'System.Collections.Generic.List`1[[System.Object, mscorlib]], mscorlib' to System.Collections.Generic.List`1[System.Object]. Path '$type', line 2, position 84.'', traceWriter.TraceRecords[0].Message)", span="594-594"];
m7_264 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeTypeName()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Started deserializing System.Collections.Generic.List`1[System.Object]. Path '$values', line 3, position 15.'', traceWriter.TraceRecords[1].Message)", span="595-595"];
m7_265 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeTypeName()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Resolved type 'System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib' to System.Collections.Generic.Dictionary`2[System.String,System.String]. Path '$values[0].$type', line 5, position 120.'', traceWriter.TraceRecords[2].Message)", span="596-596"];
m7_266 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeTypeName()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Started deserializing System.Collections.Generic.Dictionary`2[System.String,System.String]. Path '$values[0].key!', line 6, position 14.'', traceWriter.TraceRecords[3].Message)", span="597-597"];
m7_267 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeTypeName()", file="TraceWriterTests.cs", label="Assert.IsTrue(traceWriter.TraceRecords[4].Message.StartsWith(''Finished deserializing System.Collections.Generic.Dictionary`2[System.String,System.String]. Path '$values[0]'''))", span="598-598"];
m7_268 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeTypeName()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Resolved type 'System.Version, mscorlib' to System.Version. Path '$values[1].$type', line 9, position 42.'', traceWriter.TraceRecords[5].Message)", span="599-599"];
m7_269 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeTypeName()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Deserializing System.Version using creator with parameters: Major, Minor, Build, Revision. Path '$values[1].Major', line 10, position 15.'', traceWriter.TraceRecords[6].Message)", span="600-600"];
m7_270 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeTypeName()", file="TraceWriterTests.cs", label="Assert.IsTrue(traceWriter.TraceRecords[7].Message.StartsWith(''Started deserializing System.Version. Path '$values[1]'''))", span="601-601"];
m7_271 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeTypeName()", file="TraceWriterTests.cs", label="Assert.IsTrue(traceWriter.TraceRecords[8].Message.StartsWith(''Finished deserializing System.Version. Path '$values[1]'''))", span="602-602"];
m7_272 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeTypeName()", file="TraceWriterTests.cs", label="Assert.IsTrue(traceWriter.TraceRecords[9].Message.StartsWith(''Finished deserializing System.Collections.Generic.List`1[System.Object]. Path '$values'''))", span="603-603"];
m7_273 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeTypeName()", file="TraceWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeTypeName()", span="561-561"];
m7_487 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteRaw(string)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteRaw(string)", span="316-316"];
m7_302 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.PublicParametizedConstructorWithPropertyNameConflictWithAttribute()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.PublicParametizedConstructorWithPropertyNameConflictWithAttribute()", span="682-682"];
m7_303 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.PublicParametizedConstructorWithPropertyNameConflictWithAttribute()", file="TraceWriterTests.cs", label="InMemoryTraceWriter traceWriter = new InMemoryTraceWriter\r\n            {\r\n                LevelFilter = TraceLevel.Verbose\r\n            }", span="684-687"];
m7_304 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.PublicParametizedConstructorWithPropertyNameConflictWithAttribute()", file="TraceWriterTests.cs", label="string json = @''{name:''''1''''}''", span="689-689"];
m7_305 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.PublicParametizedConstructorWithPropertyNameConflictWithAttribute()", file="TraceWriterTests.cs", label="PublicParametizedConstructorWithPropertyNameConflictWithAttribute c = JsonConvert.DeserializeObject<PublicParametizedConstructorWithPropertyNameConflictWithAttribute>(json, new JsonSerializerSettings\r\n            {\r\n                TraceWriter = traceWriter\r\n            })", span="691-694"];
m7_308 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.PublicParametizedConstructorWithPropertyNameConflictWithAttribute()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Deserializing Newtonsoft.Json.Tests.TestObjects.PublicParametizedConstructorWithPropertyNameConflictWithAttribute using creator with parameters: name. Path 'name', line 1, position 6.'', traceWriter.TraceRecords[0].Message)", span="699-699"];
m7_306 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.PublicParametizedConstructorWithPropertyNameConflictWithAttribute()", file="TraceWriterTests.cs", label="Assert.IsNotNull(c)", span="696-696"];
m7_307 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.PublicParametizedConstructorWithPropertyNameConflictWithAttribute()", file="TraceWriterTests.cs", label="Assert.AreEqual(1, c.Name)", span="697-697"];
m7_309 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.PublicParametizedConstructorWithPropertyNameConflictWithAttribute()", file="TraceWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.PublicParametizedConstructorWithPropertyNameConflictWithAttribute()", span="682-682"];
m7_275 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeISerializable()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeISerializable()", span="608-608"];
m7_276 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeISerializable()", file="TraceWriterTests.cs", label="InMemoryTraceWriter traceWriter = new InMemoryTraceWriter\r\n            {\r\n                LevelFilter = TraceLevel.Verbose\r\n            }", span="610-613"];
m7_277 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeISerializable()", file="TraceWriterTests.cs", label="ExceptionAssert.Throws<SerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<Exception>(\r\n                    ''{}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        TraceWriter = traceWriter\r\n                    });\r\n            }, ''Member 'ClassName' was not found.'')", span="615-623"];
m7_278 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeISerializable()", file="TraceWriterTests.cs", label="Assert.IsTrue(traceWriter.TraceRecords[0].Message.StartsWith(''Deserializing System.Exception using ISerializable constructor. Path ''''))", span="625-625"];
m7_279 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeISerializable()", file="TraceWriterTests.cs", label="Assert.AreEqual(TraceLevel.Info, traceWriter.TraceRecords[0].Level)", span="626-626"];
m7_280 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeISerializable()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Error deserializing System.Exception. Member 'ClassName' was not found. Path '', line 1, position 2.'', traceWriter.TraceRecords[1].Message)", span="627-627"];
m7_281 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeISerializable()", file="TraceWriterTests.cs", label="Assert.AreEqual(TraceLevel.Error, traceWriter.TraceRecords[1].Level)", span="628-628"];
m7_282 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeISerializable()", file="TraceWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeISerializable()", span="608-608"];
m7_440 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartObject()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartObject()", span="302-302"];
m7_458 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(long)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(long)", span="139-139"];
m7_40 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="382-382"];
m7_567 [cluster="Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsDateTime()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsDateTime()", span="66-66"];
m7_46 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="TraceWriterTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m7_437 [cluster="System.IO.StringWriter.StringWriter(System.IFormatProvider)", file="TraceWriterTests.cs", label="Entry System.IO.StringWriter.StringWriter(System.IFormatProvider)", span="0-0"];
m7_155 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", span="938-938"];
m7_465 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal?)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal?)", span="1135-1135"];
m7_50 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterDeserializeTest()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterDeserializeTest()", span="123-123"];
m7_51 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterDeserializeTest()", file="TraceWriterTests.cs", label="string json = @''{\r\n  ''''Name'''': ''''Arnie Admin'''',\r\n  ''''StartDate'''': new Date(\r\n    976623132000\r\n  ),\r\n  ''''Roles'''': [\r\n    ''''Administrator''''\r\n  ]\r\n}''", span="125-133"];
m7_52 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterDeserializeTest()", file="TraceWriterTests.cs", label="Staff staff = new Staff()", span="135-135"];
m7_57 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterDeserializeTest()", file="TraceWriterTests.cs", label="JsonConvert.DeserializeObject<Staff>(\r\n                json,\r\n                new JsonSerializerSettings\r\n                {\r\n                    TraceWriter = traceWriter,\r\n                    Converters = { new JavaScriptDateTimeConverter() },\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.Default\r\n                })", span="142-149"];
m7_62 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterDeserializeTest()", file="TraceWriterTests.cs", label="json = StringAssert.Normalize(json)", span="174-174"];
m7_53 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterDeserializeTest()", file="TraceWriterTests.cs", label="staff.Name = ''Arnie Admin''", span="136-136"];
m7_54 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterDeserializeTest()", file="TraceWriterTests.cs", label="staff.Roles = new List<string> { ''Administrator'' }", span="137-137"];
m7_55 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterDeserializeTest()", file="TraceWriterTests.cs", label="staff.StartDate = new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)", span="138-138"];
m7_56 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterDeserializeTest()", file="TraceWriterTests.cs", label="ITraceWriter traceWriter = new MemoryTraceWriter()", span="140-140"];
m7_58 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterDeserializeTest()", file="TraceWriterTests.cs", label="MemoryTraceWriter memoryTraceWriter = (MemoryTraceWriter)traceWriter", span="168-168"];
m7_59 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterDeserializeTest()", file="TraceWriterTests.cs", label="string output = memoryTraceWriter.ToString()", span="169-169"];
m7_61 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterDeserializeTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(7, memoryTraceWriter.GetTraceMessages().Count())", span="172-172"];
m7_60 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterDeserializeTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(1059, output.Length)", span="171-171"];
m7_63 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterDeserializeTest()", file="TraceWriterTests.cs", label="output = StringAssert.Normalize(output)", span="175-175"];
m7_64 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterDeserializeTest()", file="TraceWriterTests.cs", label="Assert.IsTrue(output.Contains(json))", span="177-177"];
m7_65 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterDeserializeTest()", file="TraceWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterDeserializeTest()", span="123-123"];
m7_573 [cluster="Newtonsoft.Json.Serialization.TraceJsonReader.GetDeserializedJsonMessage()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonReader.GetDeserializedJsonMessage()", span="26-26"];
m7_444 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTime)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTime)", span="81-81"];
m7_274 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="833-833"];
m7_448 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(float)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(float)", span="118-118"];
m7_483 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.Uri)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.Uri)", span="206-206"];
m7_450 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(decimal)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(decimal)", span="39-39"];
m7_199 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="TraceWriterTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m7_104 [cluster="Unk.IsFalse", file="TraceWriterTests.cs", label="Entry Unk.IsFalse", span=""];
m7_83 [cluster="System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", file="TraceWriterTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", span="0-0"];
m7_48 [cluster="string.Contains(string)", file="TraceWriterTests.cs", label="Entry string.Contains(string)", span="0-0"];
m7_0 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DiagnosticsTraceWriterTest()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DiagnosticsTraceWriterTest()", span="47-47"];
m7_1 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DiagnosticsTraceWriterTest()", file="TraceWriterTests.cs", label="StringWriter sw = new StringWriter()", span="49-49"];
m7_2 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DiagnosticsTraceWriterTest()", file="TraceWriterTests.cs", label="TextWriterTraceListener listener = new TextWriterTraceListener(sw)", span="50-50"];
m7_11 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DiagnosticsTraceWriterTest()", file="TraceWriterTests.cs", label="StringAssert.AreEqual(@''Newtonsoft.Json Verbose: 0 : Verbose!\r\nNewtonsoft.Json Information: 0 : Info!\r\nNewtonsoft.Json Warning: 0 : Warning!\r\nNewtonsoft.Json Error: 0 : Error!\r\n'', sw.ToString())", span="64-68"];
m7_3 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DiagnosticsTraceWriterTest()", file="TraceWriterTests.cs", label="Trace.AutoFlush = true", span="54-54"];
m7_4 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DiagnosticsTraceWriterTest()", file="TraceWriterTests.cs", label="Trace.Listeners.Add(listener)", span="55-55"];
m7_5 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DiagnosticsTraceWriterTest()", file="TraceWriterTests.cs", label="DiagnosticsTraceWriter traceWriter = new DiagnosticsTraceWriter()", span="57-57"];
m7_6 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DiagnosticsTraceWriterTest()", file="TraceWriterTests.cs", label="traceWriter.Trace(TraceLevel.Verbose, ''Verbose!'', null)", span="58-58"];
m7_7 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DiagnosticsTraceWriterTest()", file="TraceWriterTests.cs", label="traceWriter.Trace(TraceLevel.Info, ''Info!'', null)", span="59-59"];
m7_8 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DiagnosticsTraceWriterTest()", file="TraceWriterTests.cs", label="traceWriter.Trace(TraceLevel.Warning, ''Warning!'', null)", span="60-60"];
m7_9 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DiagnosticsTraceWriterTest()", file="TraceWriterTests.cs", label="traceWriter.Trace(TraceLevel.Error, ''Error!'', null)", span="61-61"];
m7_10 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DiagnosticsTraceWriterTest()", file="TraceWriterTests.cs", label="traceWriter.Trace(TraceLevel.Off, ''Off!'', null)", span="62-62"];
m7_12 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DiagnosticsTraceWriterTest()", file="TraceWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DiagnosticsTraceWriterTest()", span="47-47"];
m7_103 [cluster="Unk.Any", file="TraceWriterTests.cs", label="Entry Unk.Any", span=""];
m7_492 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteComment(string)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteComment(string)", span="239-239"];
m7_475 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool?)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool?)", span="1061-1061"];
m7_477 [cluster="Unk.WriteValue", file="TraceWriterTests.cs", label="Entry Unk.WriteValue", span=""];
m7_592 [cluster="System.Text.StringBuilder.AppendLine(string)", file="TraceWriterTests.cs", label="Entry System.Text.StringBuilder.AppendLine(string)", span="0-0"];
m7_473 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(long?)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long?)", span="1012-1012"];
m7_451 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(int)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(int)", span="132-132"];
m7_563 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72"];
m7_66 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="802-802"];
m7_129 [cluster="string.StartsWith(string)", file="TraceWriterTests.cs", label="Entry string.StartsWith(string)", span="0-0"];
m7_569 [cluster="Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsBytes()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsBytes()", span="52-52"];
m7_227 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.WriteTypeNameForObjects()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.WriteTypeNameForObjects()", span="480-480"];
m7_228 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.WriteTypeNameForObjects()", file="TraceWriterTests.cs", label="InMemoryTraceWriter traceWriter = new InMemoryTraceWriter\r\n            {\r\n                LevelFilter = TraceLevel.Verbose\r\n            }", span="482-485"];
m7_229 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.WriteTypeNameForObjects()", file="TraceWriterTests.cs", label="IList<object> l = new List<object>\r\n            {\r\n                new Dictionary<string, string> { { ''key!'', ''value!'' } },\r\n                new Version(1, 2, 3, 4)\r\n            }", span="487-491"];
m7_230 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.WriteTypeNameForObjects()", file="TraceWriterTests.cs", label="JsonConvert.SerializeObject(l, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All,\r\n                TraceWriter = traceWriter\r\n            })", span="493-497"];
m7_231 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.WriteTypeNameForObjects()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Started serializing System.Collections.Generic.List`1[System.Object]. Path ''.'', traceWriter.TraceRecords[0].Message)", span="499-499"];
m7_232 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.WriteTypeNameForObjects()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Writing type name 'System.Collections.Generic.List`1[[System.Object, mscorlib]], mscorlib' for System.Collections.Generic.List`1[System.Object]. Path ''.'', traceWriter.TraceRecords[1].Message)", span="500-500"];
m7_233 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.WriteTypeNameForObjects()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Started serializing System.Collections.Generic.Dictionary`2[System.String,System.String]. Path '$values'.'', traceWriter.TraceRecords[2].Message)", span="501-501"];
m7_234 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.WriteTypeNameForObjects()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Writing type name 'System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib' for System.Collections.Generic.Dictionary`2[System.String,System.String]. Path '$values[0]'.'', traceWriter.TraceRecords[3].Message)", span="502-502"];
m7_235 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.WriteTypeNameForObjects()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Finished serializing System.Collections.Generic.Dictionary`2[System.String,System.String]. Path '$values[0]'.'', traceWriter.TraceRecords[4].Message)", span="503-503"];
m7_236 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.WriteTypeNameForObjects()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Started serializing System.Version. Path '$values[0]'.'', traceWriter.TraceRecords[5].Message)", span="504-504"];
m7_237 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.WriteTypeNameForObjects()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Writing type name 'System.Version, mscorlib' for System.Version. Path '$values[1]'.'', traceWriter.TraceRecords[6].Message)", span="505-505"];
m7_238 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.WriteTypeNameForObjects()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Finished serializing System.Version. Path '$values[1]'.'', traceWriter.TraceRecords[7].Message)", span="506-506"];
m7_239 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.WriteTypeNameForObjects()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Finished serializing System.Collections.Generic.List`1[System.Object]. Path ''.'', traceWriter.TraceRecords[8].Message)", span="507-507"];
m7_240 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.WriteTypeNameForObjects()", file="TraceWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.WriteTypeNameForObjects()", span="480-480"];
m7_326 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeTestClass()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeTestClass()", span="410-410"];
m7_463 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(float?)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(float?)", span="1037-1037"];
m7_42 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="570-570"];
m7_467 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(char?)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(char?)", span="1098-1098"];
m7_574 [cluster="Newtonsoft.Json.Tests.Serialization.TraceRecord.ToString()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TraceRecord.ToString()", span="1050-1050"];
m7_575 [cluster="Newtonsoft.Json.Tests.Serialization.TraceRecord.ToString()", file="TraceWriterTests.cs", label="return Level + '' - '' + Message;", span="1052-1052"];
m7_576 [cluster="Newtonsoft.Json.Tests.Serialization.TraceRecord.ToString()", file="TraceWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TraceRecord.ToString()", span="1050-1050"];
m7_494 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEnd()", span="425-425"];
m7_200 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="606-606"];
m7_99 [cluster="Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter.InMemoryTraceWriter()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter.InMemoryTraceWriter()", span="1061-1061"];
m7_577 [cluster="Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter.InMemoryTraceWriter()", file="TraceWriterTests.cs", label="LevelFilter = TraceLevel.Verbose", span="1063-1063"];
m7_578 [cluster="Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter.InMemoryTraceWriter()", file="TraceWriterTests.cs", label="TraceRecords = new List<TraceRecord>()", span="1064-1064"];
m7_579 [cluster="Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter.InMemoryTraceWriter()", file="TraceWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter.InMemoryTraceWriter()", span="1061-1061"];
m7_375 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", span="814-814"];
m7_376 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="StringWriter sw = new StringWriter(CultureInfo.InvariantCulture)", span="816-816"];
m7_377 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="JsonTextWriter w = new JsonTextWriter(sw)", span="817-817"];
m7_378 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="TraceJsonWriter traceWriter = new TraceJsonWriter(w)", span="818-818"];
m7_379 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteStartObject()", span="820-820"];
m7_380 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WritePropertyName(''Array'')", span="821-821"];
m7_381 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteStartArray()", span="822-822"];
m7_382 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue(''String!'')", span="823-823"];
m7_383 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue(new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc))", span="824-824"];
m7_384 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue(new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(2)))", span="825-825"];
m7_385 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue(1.1f)", span="826-826"];
m7_386 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue(1.1d)", span="827-827"];
m7_387 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue(1.1m)", span="828-828"];
m7_388 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue(1)", span="829-829"];
m7_389 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue((char)'!')", span="830-830"];
m7_390 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue((short)1)", span="831-831"];
m7_391 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue((ushort)1)", span="832-832"];
m7_392 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue((int)1)", span="833-833"];
m7_393 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue((uint)1)", span="834-834"];
m7_394 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue((sbyte)1)", span="835-835"];
m7_395 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue((byte)1)", span="836-836"];
m7_396 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue((long)1)", span="837-837"];
m7_397 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue((ulong)1)", span="838-838"];
m7_398 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue((bool)true)", span="839-839"];
m7_399 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue((DateTime?)new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc))", span="841-841"];
m7_400 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue((DateTimeOffset?)new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(2)))", span="842-842"];
m7_401 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue((float?)1.1f)", span="843-843"];
m7_402 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue((double?)1.1d)", span="844-844"];
m7_403 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue((decimal?)1.1m)", span="845-845"];
m7_404 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue((int?)1)", span="846-846"];
m7_405 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue((char?)'!')", span="847-847"];
m7_406 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue((short?)1)", span="848-848"];
m7_407 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue((ushort?)1)", span="849-849"];
m7_408 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue((int?)1)", span="850-850"];
m7_409 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue((uint?)1)", span="851-851"];
m7_410 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue((sbyte?)1)", span="852-852"];
m7_411 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue((byte?)1)", span="853-853"];
m7_412 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue((long?)1)", span="854-854"];
m7_413 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue((ulong?)1)", span="855-855"];
m7_414 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue((bool?)true)", span="856-856"];
m7_415 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue(BigInteger.Parse(''9999999990000000000000000000000000000000000''))", span="857-857"];
m7_416 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue((object)true)", span="859-859"];
m7_417 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue(TimeSpan.FromMinutes(1))", span="860-860"];
m7_418 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue(Guid.Empty)", span="861-861"];
m7_419 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue(new Uri(''http://www.google.com/''))", span="862-862"];
m7_420 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue(Encoding.UTF8.GetBytes(''String!''))", span="863-863"];
m7_421 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteRawValue(''[1],'')", span="864-864"];
m7_422 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", color=red, community=0, file="TraceWriterTests.cs", label="-1: traceWriter.WriteRaw(''[1]'')", span="865-865"];
m7_423 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteNull()", span="866-866"];
m7_424 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteUndefined()", span="867-867"];
m7_425 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteStartConstructor(''ctor'')", span="868-868"];
m7_426 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteValue(1)", span="869-869"];
m7_427 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteEndConstructor()", span="870-870"];
m7_428 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteComment(''A comment'')", span="871-871"];
m7_429 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteWhitespace(''       '')", span="872-872"];
m7_430 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteEnd()", span="873-873"];
m7_431 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.WriteEndObject()", span="874-874"];
m7_432 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.Flush()", span="875-875"];
m7_433 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="traceWriter.Close()", span="876-876"];
m7_435 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="StringAssert.AreEqual(''Serialized JSON: '' + Environment.NewLine + json, traceWriter.GetSerializedJsonMessage())", span="931-931"];
m7_434 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", color=red, community=0, file="TraceWriterTests.cs", label="-1: string json = @''{\r\n  ''''Array'''': [\r\n    ''''String!'''',\r\n    ''''2000-12-12T12:12:12Z'''',\r\n    ''''2000-12-12T12:12:12+02:00'''',\r\n    1.1,\r\n    1.1,\r\n    1.1,\r\n    1,\r\n    ''''!'''',\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    true,\r\n    ''''2000-12-12T12:12:12Z'''',\r\n    ''''2000-12-12T12:12:12+02:00'''',\r\n    1.1,\r\n    1.1,\r\n    1.1,\r\n    1,\r\n    ''''!'''',\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    true,\r\n    9999999990000000000000000000000000000000000,\r\n    true,\r\n    true,\r\n    ''''00:01:00'''',\r\n    ''''00000000-0000-0000-0000-000000000000'''',\r\n    ''''http://www.google.com/'''',\r\n    ''''U3RyaW5nIQ=='''',\r\n    [1],[1],[1],\r\n    null,\r\n    undefined,\r\n    new ctor(\r\n      1\r\n    )\r\n    /*A comment*/       \r\n  ]\r\n}''", span="878-929"];
m7_436 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", span="814-814"];
m7_84 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Serialize()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Serialize()", span="199-199"];
m7_85 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Serialize()", file="TraceWriterTests.cs", label="var traceWriter = new InMemoryTraceWriter\r\n            {\r\n                LevelFilter = TraceLevel.Info\r\n            }", span="201-204"];
m7_86 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Serialize()", file="TraceWriterTests.cs", label="string json =\r\n                JsonConvert.SerializeObject(\r\n                    new TraceTestObject\r\n                    {\r\n                        StringArray = new[] { ''1'', ''2'' },\r\n                        IntList = new List<int> { 1, 2 },\r\n                        Version = new Version(1, 2, 3, 4),\r\n                        StringDictionary =\r\n                            new Dictionary<string, string>\r\n                            {\r\n                                { ''1'', ''!'' },\r\n                                { ''Two'', ''!!'' },\r\n                                { ''III'', ''!!!'' }\r\n                            }\r\n                    },\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        TraceWriter = traceWriter,\r\n                        Formatting = Formatting.Indented\r\n                    })", span="206-225"];
m7_87 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Serialize()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Started serializing Newtonsoft.Json.Tests.Serialization.TraceTestObject. Path ''.'', traceWriter.TraceRecords[0].Message)", span="227-227"];
m7_88 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Serialize()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Started serializing System.Collections.Generic.List`1[System.Int32]. Path 'IntList'.'', traceWriter.TraceRecords[1].Message)", span="228-228"];
m7_89 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Serialize()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Finished serializing System.Collections.Generic.List`1[System.Int32]. Path 'IntList'.'', traceWriter.TraceRecords[2].Message)", span="229-229"];
m7_90 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Serialize()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Started serializing System.String[]. Path 'StringArray'.'', traceWriter.TraceRecords[3].Message)", span="230-230"];
m7_91 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Serialize()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Finished serializing System.String[]. Path 'StringArray'.'', traceWriter.TraceRecords[4].Message)", span="231-231"];
m7_92 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Serialize()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Started serializing System.Version. Path 'Version'.'', traceWriter.TraceRecords[5].Message)", span="232-232"];
m7_93 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Serialize()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Finished serializing System.Version. Path 'Version'.'', traceWriter.TraceRecords[6].Message)", span="233-233"];
m7_94 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Serialize()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Started serializing System.Collections.Generic.Dictionary`2[System.String,System.String]. Path 'StringDictionary'.'', traceWriter.TraceRecords[7].Message)", span="234-234"];
m7_95 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Serialize()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Finished serializing System.Collections.Generic.Dictionary`2[System.String,System.String]. Path 'StringDictionary'.'', traceWriter.TraceRecords[8].Message)", span="235-235"];
m7_96 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Serialize()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Finished serializing Newtonsoft.Json.Tests.Serialization.TraceTestObject. Path ''.'', traceWriter.TraceRecords[9].Message)", span="236-236"];
m7_97 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Serialize()", file="TraceWriterTests.cs", label="Assert.IsFalse(traceWriter.TraceRecords.Any(r => r.Level == TraceLevel.Verbose))", span="238-238"];
m7_98 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Serialize()", file="TraceWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Serialize()", span="199-199"];
m7_78 [cluster="int.ToString(System.IFormatProvider)", file="TraceWriterTests.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m7_210 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeDictionarysWithPreserveObjectReferences()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeDictionarysWithPreserveObjectReferences()", span="448-448"];
m7_211 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeDictionarysWithPreserveObjectReferences()", file="TraceWriterTests.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''other'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''blah'''': null\r\n  },\r\n  ''''self'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}''", span="450-459"];
m7_212 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeDictionarysWithPreserveObjectReferences()", file="TraceWriterTests.cs", label="InMemoryTraceWriter traceWriter = new InMemoryTraceWriter\r\n            {\r\n                LevelFilter = TraceLevel.Verbose\r\n            }", span="461-464"];
m7_213 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeDictionarysWithPreserveObjectReferences()", file="TraceWriterTests.cs", label="JsonConvert.DeserializeObject<PreserveReferencesHandlingTests.CircularDictionary>(json,\r\n                new JsonSerializerSettings\r\n                {\r\n                    PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.Default,\r\n                    TraceWriter = traceWriter\r\n                })", span="466-472"];
m7_214 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeDictionarysWithPreserveObjectReferences()", file="TraceWriterTests.cs", label="Assert.IsTrue(traceWriter.TraceRecords.Any(r => r.Message == ''Read object reference Id '1' for Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests+CircularDictionary. Path 'other', line 3, position 11.''))", span="474-474"];
m7_215 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeDictionarysWithPreserveObjectReferences()", file="TraceWriterTests.cs", label="Assert.IsTrue(traceWriter.TraceRecords.Any(r => r.Message == ''Read object reference Id '2' for Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests+CircularDictionary. Path 'other.blah', line 5, position 12.''))", span="475-475"];
m7_216 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeDictionarysWithPreserveObjectReferences()", file="TraceWriterTests.cs", label="Assert.IsTrue(traceWriter.TraceRecords.Any(r => r.Message.StartsWith(''Resolved object reference '1' to Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests+CircularDictionary. Path 'self''')))", span="476-476"];
m7_217 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeDictionarysWithPreserveObjectReferences()", file="TraceWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeDictionarysWithPreserveObjectReferences()", span="448-448"];
m7_485 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(byte[])", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(byte[])", span="74-74"];
m7_82 [cluster="string.EndsWith(string)", file="TraceWriterTests.cs", label="Entry string.EndsWith(string)", span="0-0"];
m7_466 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int?)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int?)", span="987-987"];
m7_452 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(char)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(char)", span="67-67"];
m7_67 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterLimitTest()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterLimitTest()", span="181-181"];
m7_68 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterLimitTest()", file="TraceWriterTests.cs", label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="183-183"];
m7_69 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterLimitTest()", file="TraceWriterTests.cs", label="int i = 0", span="185-185"];
m7_71 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterLimitTest()", file="TraceWriterTests.cs", label="traceWriter.Trace(TraceLevel.Verbose, (i + 1).ToString(CultureInfo.InvariantCulture), null)", span="187-187"];
m7_73 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterLimitTest()", file="TraceWriterTests.cs", label="IList<string> traceMessages = traceWriter.GetTraceMessages().ToList()", span="190-190"];
m7_70 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterLimitTest()", file="TraceWriterTests.cs", label="i < 1005", span="185-185"];
m7_72 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterLimitTest()", file="TraceWriterTests.cs", label="i++", span="185-185"];
m7_74 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterLimitTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(1000, traceMessages.Count)", span="192-192"];
m7_75 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterLimitTest()", file="TraceWriterTests.cs", label="Assert.IsTrue(traceMessages.First().EndsWith('' 6''))", span="194-194"];
m7_76 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterLimitTest()", file="TraceWriterTests.cs", label="Assert.IsTrue(traceMessages.Last().EndsWith('' 1005''))", span="195-195"];
m7_77 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterLimitTest()", file="TraceWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterLimitTest()", span="181-181"];
m7_108 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", span="242-242"];
m7_109 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs", label="InMemoryTraceWriter traceWriter = new InMemoryTraceWriter\r\n            {\r\n                LevelFilter = TraceLevel.Info\r\n            }", span="244-247"];
m7_110 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs", label="TraceTestObject o2 = JsonConvert.DeserializeObject<TraceTestObject>(\r\n                @''{\r\n  ''''IntList'''': [\r\n    1,\r\n    2\r\n  ],\r\n  ''''StringArray'''': [\r\n    ''''1'''',\r\n    ''''2''''\r\n  ],\r\n  ''''Version'''': {\r\n    ''''Major'''': 1,\r\n    ''''Minor'''': 2,\r\n    ''''Build'''': 3,\r\n    ''''Revision'''': 4,\r\n    ''''MajorRevision'''': 0,\r\n    ''''MinorRevision'''': 4\r\n  },\r\n  ''''StringDictionary'''': {\r\n    ''''1'''': ''''!'''',\r\n    ''''Two'''': ''''!!'''',\r\n    ''''III'''': ''''!!!''''\r\n  }\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    TraceWriter = traceWriter\r\n                })", span="249-276"];
m7_116 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Started deserializing Newtonsoft.Json.Tests.Serialization.TraceTestObject. Path 'IntList', line 2, position 13.'', traceWriter.TraceRecords[0].Message)", span="284-284"];
m7_117 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Started deserializing System.Collections.Generic.IList`1[System.Int32]. Path 'IntList', line 2, position 15.'', traceWriter.TraceRecords[1].Message)", span="285-285"];
m7_118 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs", label="Assert.IsTrue(traceWriter.TraceRecords[2].Message.StartsWith(''Finished deserializing System.Collections.Generic.IList`1[System.Int32]. Path 'IntList'''))", span="286-286"];
m7_119 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Started deserializing System.String[]. Path 'StringArray', line 6, position 19.'', traceWriter.TraceRecords[3].Message)", span="287-287"];
m7_120 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs", label="Assert.IsTrue(traceWriter.TraceRecords[4].Message.StartsWith(''Finished deserializing System.String[]. Path 'StringArray'''))", span="288-288"];
m7_121 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Deserializing System.Version using creator with parameters: Major, Minor, Build, Revision. Path 'Version.Major', line 11, position 13.'', traceWriter.TraceRecords[5].Message)", span="289-289"];
m7_122 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs", label="Assert.IsTrue(traceWriter.TraceRecords[6].Message.StartsWith(''Started deserializing System.Version. Path 'Version'''))", span="290-290"];
m7_123 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs", label="Assert.IsTrue(traceWriter.TraceRecords[7].Message.StartsWith(''Finished deserializing System.Version. Path 'Version'''))", span="291-291"];
m7_124 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Started deserializing System.Collections.Generic.IDictionary`2[System.String,System.String]. Path 'StringDictionary.1', line 19, position 9.'', traceWriter.TraceRecords[8].Message)", span="292-292"];
m7_125 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs", label="Assert.IsTrue(traceWriter.TraceRecords[9].Message.StartsWith(''Finished deserializing System.Collections.Generic.IDictionary`2[System.String,System.String]. Path 'StringDictionary'''))", span="293-293"];
m7_126 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs", label="Assert.IsTrue(traceWriter.TraceRecords[10].Message.StartsWith(''Finished deserializing Newtonsoft.Json.Tests.Serialization.TraceTestObject. Path ''''))", span="294-294"];
m7_127 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs", label="Assert.IsFalse(traceWriter.TraceRecords.Any(r => r.Level == TraceLevel.Verbose))", span="296-296"];
m7_111 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs", label="Assert.AreEqual(2, o2.IntList.Count)", span="278-278"];
m7_112 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs", label="Assert.AreEqual(2, o2.StringArray.Length)", span="279-279"];
m7_113 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs", label="Assert.AreEqual(1, o2.Version.Major)", span="280-280"];
m7_114 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs", label="Assert.AreEqual(2, o2.Version.Minor)", span="281-281"];
m7_115 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs", label="Assert.AreEqual(3, o2.StringDictionary.Count)", span="282-282"];
m7_128 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", span="242-242"];
m7_14 [cluster="System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(System.IO.TextWriter)", file="TraceWriterTests.cs", label="Entry System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(System.IO.TextWriter)", span="0-0"];
m7_327 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", span="734-734"];
m7_328 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="SpecifiedTestClass c = new SpecifiedTestClass()", span="736-736"];
m7_329 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="c.Name = ''James''", span="737-737"];
m7_330 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="c.Age = 27", span="738-738"];
m7_331 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="c.NameSpecified = false", span="739-739"];
m7_333 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new JsonSerializerSettings { TraceWriter = traceWriter })", span="746-746"];
m7_351 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="c.NameSpecified = true", span="776-776"];
m7_352 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="c.WeightSpecified = true", span="777-777"];
m7_353 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="c.HeightSpecified = true", span="778-778"];
m7_354 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="c.FavoriteNumber = 23", span="779-779"];
m7_355 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="780-780"];
m7_332 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="InMemoryTraceWriter traceWriter = new InMemoryTraceWriter\r\n            {\r\n                LevelFilter = TraceLevel.Verbose\r\n            }", span="741-744"];
m7_334 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Started serializing Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass. Path ''.'', traceWriter.TraceRecords[0].Message)", span="748-748"];
m7_335 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(''IsSpecified result for property 'Name' on Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass: False. Path ''.'', traceWriter.TraceRecords[1].Message)", span="749-749"];
m7_336 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(''IsSpecified result for property 'Weight' on Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass: False. Path 'Age'.'', traceWriter.TraceRecords[2].Message)", span="750-750"];
m7_337 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(''IsSpecified result for property 'Height' on Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass: False. Path 'Age'.'', traceWriter.TraceRecords[3].Message)", span="751-751"];
m7_338 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(''IsSpecified result for property 'FavoriteNumber' on Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass: False. Path 'Age'.'', traceWriter.TraceRecords[4].Message)", span="752-752"];
m7_339 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Finished serializing Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass. Path ''.'', traceWriter.TraceRecords[5].Message)", span="753-753"];
m7_340 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Age'''': 27\r\n}'', json)", span="755-757"];
m7_342 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="SpecifiedTestClass deserialized = JsonConvert.DeserializeObject<SpecifiedTestClass>(json, new JsonSerializerSettings { TraceWriter = traceWriter })", span="764-764"];
m7_341 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="traceWriter = new InMemoryTraceWriter\r\n            {\r\n                LevelFilter = TraceLevel.Verbose\r\n            }", span="759-762"];
m7_343 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Started deserializing Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass. Path 'Age', line 2, position 9.'', traceWriter.TraceRecords[0].Message)", span="766-766"];
m7_344 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="Assert.IsTrue(traceWriter.TraceRecords[1].Message.StartsWith(''Finished deserializing Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass. Path ''''))", span="767-767"];
m7_345 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="Assert.IsNull(deserialized.Name)", span="769-769"];
m7_346 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="Assert.IsFalse(deserialized.NameSpecified)", span="770-770"];
m7_347 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="Assert.IsFalse(deserialized.WeightSpecified)", span="771-771"];
m7_348 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="Assert.IsFalse(deserialized.HeightSpecified)", span="772-772"];
m7_349 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="Assert.IsFalse(deserialized.FavoriteNumberSpecified)", span="773-773"];
m7_350 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(27, deserialized.Age)", span="774-774"];
m7_356 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''James'''',\r\n  ''''Age'''': 27,\r\n  ''''Weight'''': 0,\r\n  ''''Height'''': 0,\r\n  ''''FavoriteNumber'''': 23\r\n}'', json)", span="782-788"];
m7_358 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="deserialized = JsonConvert.DeserializeObject<SpecifiedTestClass>(json, new JsonSerializerSettings { TraceWriter = traceWriter })", span="795-795"];
m7_357 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="traceWriter = new InMemoryTraceWriter\r\n            {\r\n                LevelFilter = TraceLevel.Verbose\r\n            }", span="790-793"];
m7_359 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Started deserializing Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass. Path 'Name', line 2, position 10.'', traceWriter.TraceRecords[0].Message)", span="797-797"];
m7_360 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(''IsSpecified for property 'Name' on Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass set to true. Path 'Name', line 2, position 18.'', traceWriter.TraceRecords[1].Message)", span="798-798"];
m7_361 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(''IsSpecified for property 'Weight' on Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass set to true. Path 'Weight', line 4, position 14.'', traceWriter.TraceRecords[2].Message)", span="799-799"];
m7_362 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(''IsSpecified for property 'Height' on Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass set to true. Path 'Height', line 5, position 14.'', traceWriter.TraceRecords[3].Message)", span="800-800"];
m7_363 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="Assert.IsTrue(traceWriter.TraceRecords[4].Message.StartsWith(''Finished deserializing Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass. Path ''''))", span="801-801"];
m7_364 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(''James'', deserialized.Name)", span="803-803"];
m7_365 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="Assert.IsTrue(deserialized.NameSpecified)", span="804-804"];
m7_366 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="Assert.IsTrue(deserialized.WeightSpecified)", span="805-805"];
m7_367 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="Assert.IsTrue(deserialized.HeightSpecified)", span="806-806"];
m7_368 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="Assert.IsTrue(deserialized.FavoriteNumberSpecified)", span="807-807"];
m7_369 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(27, deserialized.Age)", span="808-808"];
m7_370 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(23, deserialized.FavoriteNumber)", span="809-809"];
m7_371 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", span="734-734"];
m7_469 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", span="1086-1086"];
m7_16 [cluster="Newtonsoft.Json.Serialization.DiagnosticsTraceWriter.DiagnosticsTraceWriter()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.DiagnosticsTraceWriter.DiagnosticsTraceWriter()", span="10-10"];
m7_580 [cluster="Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", span="1067-1067"];
m7_581 [cluster="Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", file="TraceWriterTests.cs", label="TraceRecords.Add(\r\n                new TraceRecord\r\n                {\r\n                    Level = level,\r\n                    Message = message,\r\n                    Exception = ex\r\n                })", span="1069-1075"];
m7_582 [cluster="Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", file="TraceWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", span="1067-1067"];
m7_439 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.TraceJsonWriter(Newtonsoft.Json.JsonWriter)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.TraceJsonWriter(Newtonsoft.Json.JsonWriter)", span="17-17"];
m7_43 [cluster="Newtonsoft.Json.Serialization.MemoryTraceWriter.ToString()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.MemoryTraceWriter.ToString()", span="71-71"];
m7_481 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.Guid)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.Guid)", span="125-125"];
m7_566 [cluster="Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsString()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsString()", span="45-45"];
m7_102 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="TraceWriterTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m7_44 [cluster="Unk.AreEqual", file="TraceWriterTests.cs", label="Entry Unk.AreEqual", span=""];
m7_442 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartArray()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartArray()", span="258-258"];
m7_79 [cluster="Newtonsoft.Json.Serialization.MemoryTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.MemoryTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", span="41-41"];
m7_310 [cluster="Unk.IsNotNull", file="TraceWriterTests.cs", label="Entry Unk.IsNotNull", span=""];
m7_499 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", span="935-935"];
m7_500 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="string json = @''{\r\n  ''''Array'''': [\r\n    ''''String!'''',\r\n    ''''2000-12-12T12:12:12Z'''',\r\n    ''''2000-12-12T12:12:12Z'''',\r\n    ''''2000-12-12T12:12:12+00:00'''',\r\n    ''''U3RyaW5nIQ=='''',\r\n    1,\r\n    1.1,\r\n    9999999990000000000000000000000000000000000,\r\n    null,\r\n    undefined,\r\n    new ctor(\r\n      1\r\n    )\r\n    /*A comment*/\r\n  ]\r\n}''", span="937-954"];
m7_501 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="StringReader sw = new StringReader(json)", span="956-956"];
m7_560 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="StringAssert.AreEqual(''Deserialized JSON: '' + Environment.NewLine + json, traceReader.GetDeserializedJsonMessage())", span="1039-1039"];
m7_502 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="JsonTextReader w = new JsonTextReader(sw)", span="957-957"];
m7_503 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="TraceJsonReader traceReader = new TraceJsonReader(w)", span="958-958"];
m7_504 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="traceReader.Read()", span="960-960"];
m7_505 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(JsonToken.StartObject, traceReader.TokenType)", span="961-961"];
m7_506 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="traceReader.Read()", span="963-963"];
m7_507 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, traceReader.TokenType)", span="964-964"];
m7_508 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Array'', traceReader.Value)", span="965-965"];
m7_509 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="traceReader.Read()", span="967-967"];
m7_510 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(JsonToken.StartArray, traceReader.TokenType)", span="968-968"];
m7_511 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(null, traceReader.Value)", span="969-969"];
m7_512 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="traceReader.ReadAsString()", span="971-971"];
m7_513 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(JsonToken.String, traceReader.TokenType)", span="972-972"];
m7_514 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="Assert.AreEqual('''', traceReader.QuoteChar)", span="973-973"];
m7_515 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(''String!'', traceReader.Value)", span="974-974"];
m7_516 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="traceReader.QuoteChar = '\''", span="977-977"];
m7_517 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="Assert.AreEqual('\'', traceReader.QuoteChar)", span="978-978"];
m7_518 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="traceReader.ReadAsString()", span="980-980"];
m7_519 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(JsonToken.String, traceReader.TokenType)", span="981-981"];
m7_520 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(''2000-12-12T12:12:12Z'', traceReader.Value)", span="982-982"];
m7_521 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="traceReader.ReadAsDateTime()", span="984-984"];
m7_522 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(JsonToken.Date, traceReader.TokenType)", span="985-985"];
m7_523 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), traceReader.Value)", span="986-986"];
m7_524 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="traceReader.ReadAsDateTimeOffset()", span="988-988"];
m7_525 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(JsonToken.Date, traceReader.TokenType)", span="989-989"];
m7_526 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), traceReader.Value)", span="990-990"];
m7_527 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="traceReader.ReadAsBytes()", span="992-992"];
m7_528 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(JsonToken.Bytes, traceReader.TokenType)", span="993-993"];
m7_529 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="CollectionAssert.AreEqual(Encoding.UTF8.GetBytes(''String!''), (byte[])traceReader.Value)", span="994-994"];
m7_530 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="traceReader.ReadAsInt32()", span="996-996"];
m7_531 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(JsonToken.Integer, traceReader.TokenType)", span="997-997"];
m7_532 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(1, traceReader.Value)", span="998-998"];
m7_533 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="traceReader.ReadAsDecimal()", span="1000-1000"];
m7_534 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(JsonToken.Float, traceReader.TokenType)", span="1001-1001"];
m7_535 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(1.1m, traceReader.Value)", span="1002-1002"];
m7_536 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="traceReader.Read()", span="1004-1004"];
m7_537 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(JsonToken.Integer, traceReader.TokenType)", span="1005-1005"];
m7_538 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(typeof(BigInteger), traceReader.ValueType)", span="1006-1006"];
m7_539 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(BigInteger.Parse(''9999999990000000000000000000000000000000000''), traceReader.Value)", span="1007-1007"];
m7_540 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="traceReader.Read()", span="1009-1009"];
m7_541 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(JsonToken.Null, traceReader.TokenType)", span="1010-1010"];
m7_542 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="traceReader.Read()", span="1012-1012"];
m7_543 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(JsonToken.Undefined, traceReader.TokenType)", span="1013-1013"];
m7_544 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="traceReader.Read()", span="1015-1015"];
m7_545 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(JsonToken.StartConstructor, traceReader.TokenType)", span="1016-1016"];
m7_546 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="traceReader.Read()", span="1018-1018"];
m7_547 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(JsonToken.Integer, traceReader.TokenType)", span="1019-1019"];
m7_548 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(1L, traceReader.Value)", span="1020-1020"];
m7_549 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="traceReader.Read()", span="1022-1022"];
m7_550 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(JsonToken.EndConstructor, traceReader.TokenType)", span="1023-1023"];
m7_551 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="traceReader.Read()", span="1025-1025"];
m7_552 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(JsonToken.Comment, traceReader.TokenType)", span="1026-1026"];
m7_553 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(''A comment'', traceReader.Value)", span="1027-1027"];
m7_554 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="traceReader.Read()", span="1029-1029"];
m7_555 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(JsonToken.EndArray, traceReader.TokenType)", span="1030-1030"];
m7_556 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="traceReader.Read()", span="1032-1032"];
m7_557 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="Assert.AreEqual(JsonToken.EndObject, traceReader.TokenType)", span="1033-1033"];
m7_558 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="Assert.IsFalse(traceReader.Read())", span="1035-1035"];
m7_559 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="traceReader.Close()", span="1037-1037"];
m7_561 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", span="935-935"];
m7_571 [cluster="Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsDecimal()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsDecimal()", span="59-59"];
m7_584 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="TraceWriterTests.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m7_460 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(bool)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(bool)", span="46-46"];
m7_445 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="TraceWriterTests.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m7_461 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime?)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime?)", span="1147-1147"];
m7_438 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="124-124"];
m7_493 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteWhitespace(string)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteWhitespace(string)", span="220-220"];
m7_472 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(byte?)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(byte?)", span="60-60"];
m7_19 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="331-331"];
m7_283 [cluster="lambda expression", file="TraceWriterTests.cs", label="Entry lambda expression", span="615-623"];
m7_105 [cluster="lambda expression", file="TraceWriterTests.cs", label="Entry lambda expression", span="238-238"];
m7_106 [cluster="lambda expression", file="TraceWriterTests.cs", label="r.Level == TraceLevel.Verbose", span="238-238"];
m7_107 [cluster="lambda expression", file="TraceWriterTests.cs", label="Exit lambda expression", span="238-238"];
m7_130 [cluster="lambda expression", file="TraceWriterTests.cs", label="Entry lambda expression", span="296-296"];
m7_131 [cluster="lambda expression", file="TraceWriterTests.cs", label="r.Level == TraceLevel.Verbose", span="296-296"];
m7_132 [cluster="lambda expression", file="TraceWriterTests.cs", label="Exit lambda expression", span="296-296"];
m7_156 [cluster="lambda expression", file="TraceWriterTests.cs", label="Entry lambda expression", span="357-357"];
m7_157 [cluster="lambda expression", file="TraceWriterTests.cs", label="r.Level == TraceLevel.Verbose", span="357-357"];
m7_158 [cluster="lambda expression", file="TraceWriterTests.cs", label="Exit lambda expression", span="357-357"];
m7_171 [cluster="lambda expression", file="TraceWriterTests.cs", label="JsonConvert.DeserializeObject<IntegerTestClass>(\r\n                    json,\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        TraceWriter = traceWriter\r\n                    })", span="372-377"];
m7_170 [cluster="lambda expression", file="TraceWriterTests.cs", label="Entry lambda expression", span="370-378"];
m7_172 [cluster="lambda expression", file="TraceWriterTests.cs", label="Exit lambda expression", span="370-378"];
m7_186 [cluster="lambda expression", file="TraceWriterTests.cs", label="JsonConvert.DeserializeObject<TraceTestObject>(\r\n                    json,\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        TraceWriter = traceWriter\r\n                    })", span="401-406"];
m7_185 [cluster="lambda expression", file="TraceWriterTests.cs", label="Entry lambda expression", span="399-407"];
m7_187 [cluster="lambda expression", file="TraceWriterTests.cs", label="Exit lambda expression", span="399-407"];
m7_201 [cluster="lambda expression", file="TraceWriterTests.cs", label="Entry lambda expression", span="442-442"];
m7_204 [cluster="lambda expression", file="TraceWriterTests.cs", label="Entry lambda expression", span="443-443"];
m7_207 [cluster="lambda expression", file="TraceWriterTests.cs", label="Entry lambda expression", span="444-444"];
m7_202 [cluster="lambda expression", file="TraceWriterTests.cs", label="r.Message == ''Writing object reference Id '1' for Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests+CircularDictionary. Path ''.''", span="442-442"];
m7_203 [cluster="lambda expression", file="TraceWriterTests.cs", label="Exit lambda expression", span="442-442"];
m7_205 [cluster="lambda expression", file="TraceWriterTests.cs", label="r.Message == ''Writing object reference Id '2' for Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests+CircularDictionary. Path 'other'.''", span="443-443"];
m7_206 [cluster="lambda expression", file="TraceWriterTests.cs", label="Exit lambda expression", span="443-443"];
m7_208 [cluster="lambda expression", file="TraceWriterTests.cs", label="r.Message == ''Writing object reference to Id '1' for Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests+CircularDictionary. Path 'self'.''", span="444-444"];
m7_209 [cluster="lambda expression", file="TraceWriterTests.cs", label="Exit lambda expression", span="444-444"];
m7_218 [cluster="lambda expression", file="TraceWriterTests.cs", label="Entry lambda expression", span="474-474"];
m7_221 [cluster="lambda expression", file="TraceWriterTests.cs", label="Entry lambda expression", span="475-475"];
m7_224 [cluster="lambda expression", file="TraceWriterTests.cs", label="Entry lambda expression", span="476-476"];
m7_219 [cluster="lambda expression", file="TraceWriterTests.cs", label="r.Message == ''Read object reference Id '1' for Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests+CircularDictionary. Path 'other', line 3, position 11.''", span="474-474"];
m7_220 [cluster="lambda expression", file="TraceWriterTests.cs", label="Exit lambda expression", span="474-474"];
m7_222 [cluster="lambda expression", file="TraceWriterTests.cs", label="r.Message == ''Read object reference Id '2' for Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests+CircularDictionary. Path 'other.blah', line 5, position 12.''", span="475-475"];
m7_223 [cluster="lambda expression", file="TraceWriterTests.cs", label="Exit lambda expression", span="475-475"];
m7_225 [cluster="lambda expression", file="TraceWriterTests.cs", label="r.Message.StartsWith(''Resolved object reference '1' to Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests+CircularDictionary. Path 'self''')", span="476-476"];
m7_226 [cluster="lambda expression", file="TraceWriterTests.cs", label="Exit lambda expression", span="476-476"];
m7_284 [cluster="lambda expression", file="TraceWriterTests.cs", label="JsonConvert.DeserializeObject<Exception>(\r\n                    ''{}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        TraceWriter = traceWriter\r\n                    })", span="617-622"];
m7_285 [cluster="lambda expression", file="TraceWriterTests.cs", label="Exit lambda expression", span="615-623"];
m7_188 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeDictionarysWithPreserveObjectReferences()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeDictionarysWithPreserveObjectReferences()", span="422-422"];
m7_189 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeDictionarysWithPreserveObjectReferences()", file="TraceWriterTests.cs", label="PreserveReferencesHandlingTests.CircularDictionary circularDictionary = new PreserveReferencesHandlingTests.CircularDictionary()", span="424-424"];
m7_190 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeDictionarysWithPreserveObjectReferences()", file="TraceWriterTests.cs", label="circularDictionary.Add(''other'', new PreserveReferencesHandlingTests.CircularDictionary { { ''blah'', null } })", span="425-425"];
m7_191 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeDictionarysWithPreserveObjectReferences()", file="TraceWriterTests.cs", label="circularDictionary.Add(''self'', circularDictionary)", span="426-426"];
m7_193 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeDictionarysWithPreserveObjectReferences()", file="TraceWriterTests.cs", label="JsonConvert.SerializeObject(\r\n                circularDictionary,\r\n                Formatting.Indented,\r\n                new JsonSerializerSettings\r\n                {\r\n                    PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                    TraceWriter = traceWriter\r\n                })", span="433-440"];
m7_192 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeDictionarysWithPreserveObjectReferences()", file="TraceWriterTests.cs", label="InMemoryTraceWriter traceWriter = new InMemoryTraceWriter\r\n            {\r\n                LevelFilter = TraceLevel.Verbose\r\n            }", span="428-431"];
m7_194 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeDictionarysWithPreserveObjectReferences()", file="TraceWriterTests.cs", label="Assert.IsTrue(traceWriter.TraceRecords.Any(r => r.Message == ''Writing object reference Id '1' for Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests+CircularDictionary. Path ''.''))", span="442-442"];
m7_195 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeDictionarysWithPreserveObjectReferences()", file="TraceWriterTests.cs", label="Assert.IsTrue(traceWriter.TraceRecords.Any(r => r.Message == ''Writing object reference Id '2' for Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests+CircularDictionary. Path 'other'.''))", span="443-443"];
m7_196 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeDictionarysWithPreserveObjectReferences()", file="TraceWriterTests.cs", label="Assert.IsTrue(traceWriter.TraceRecords.Any(r => r.Message == ''Writing object reference to Id '1' for Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests+CircularDictionary. Path 'self'.''))", span="444-444"];
m7_197 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeDictionarysWithPreserveObjectReferences()", file="TraceWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeDictionarysWithPreserveObjectReferences()", span="422-422"];
m7_293 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMemberConstructor()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMemberConstructor()", span="653-653"];
m7_294 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMemberConstructor()", file="TraceWriterTests.cs", label="InMemoryTraceWriter traceWriter = new InMemoryTraceWriter\r\n            {\r\n                LevelFilter = TraceLevel.Verbose\r\n            }", span="655-658"];
m7_295 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMemberConstructor()", file="TraceWriterTests.cs", label="string json = @''{\r\n  ''''Major'''': 1,\r\n  ''''Minor'''': 2,\r\n  ''''Build'''': 3,\r\n  ''''Revision'''': 4,\r\n  ''''MajorRevision'''': 0,\r\n  ''''MinorRevision'''': 4,\r\n  ''''MissingMemberProperty'''': null\r\n}''", span="660-668"];
m7_296 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMemberConstructor()", file="TraceWriterTests.cs", label="JsonConvert.DeserializeObject<Version>(json, new JsonSerializerSettings\r\n            {\r\n                TraceWriter = traceWriter\r\n            })", span="670-673"];
m7_297 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMemberConstructor()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Deserializing System.Version using creator with parameters: Major, Minor, Build, Revision. Path 'Major', line 2, position 11.'', traceWriter.TraceRecords[0].Message)", span="675-675"];
m7_298 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMemberConstructor()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Could not find member 'MissingMemberProperty' on System.Version. Path 'MissingMemberProperty', line 8, position 32.'', traceWriter.TraceRecords[1].Message)", span="676-676"];
m7_299 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMemberConstructor()", file="TraceWriterTests.cs", label="Assert.IsTrue(traceWriter.TraceRecords[2].Message.StartsWith(''Started deserializing System.Version. Path ''''))", span="677-677"];
m7_300 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMemberConstructor()", file="TraceWriterTests.cs", label="Assert.IsTrue(traceWriter.TraceRecords[3].Message.StartsWith(''Finished deserializing System.Version. Path ''''))", span="678-678"];
m7_301 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMemberConstructor()", file="TraceWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMemberConstructor()", span="653-653"];
m7_447 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTimeOffset)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTimeOffset)", span="89-89"];
m7_36 [cluster="Newtonsoft.Json.Tests.Serialization.Staff.Staff()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Staff.Staff()", span="35-35"];
m7_480 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.TimeSpan)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.TimeSpan)", span="185-185"];
m7_372 [cluster="Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass.SpecifiedTestClass()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass.SpecifiedTestClass()", span="428-428"];
m7_80 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="TraceWriterTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m7_198 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularDictionary.CircularDictionary()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularDictionary.CircularDictionary()", span="434-434"];
m7_490 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartConstructor(string)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartConstructor(string)", span="272-272"];
m7_562 [cluster="System.IO.StringReader.StringReader(string)", file="TraceWriterTests.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m7_101 [cluster="System.Version.Version(int, int, int, int)", file="TraceWriterTests.cs", label="Entry System.Version.Version(int, int, int, int)", span="0-0"];
m7_457 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(byte)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(byte)", span="53-53"];
m7_37 [cluster="System.Collections.Generic.List<T>.List()", file="TraceWriterTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m7_446 [cluster="System.TimeSpan.FromHours(double)", file="TraceWriterTests.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m7_570 [cluster="Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsInt32()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsInt32()", span="38-38"];
m7_486 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteRawValue(string)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteRawValue(string)", span="323-323"];
m7_464 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double?)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double?)", span="1049-1049"];
m7_47 [cluster="Newtonsoft.Json.Tests.StringAssert.Normalize(string)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.Normalize(string)", span="347-347"];
m7_453 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(short)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(short)", span="171-171"];
m7_39 [cluster="Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", span="29-29"];
m7_572 [cluster="Newtonsoft.Json.Serialization.TraceJsonReader.Close()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonReader.Close()", span="113-113"];
m7_13 [cluster="System.IO.StringWriter.StringWriter()", file="TraceWriterTests.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m7_45 [cluster="Newtonsoft.Json.Serialization.MemoryTraceWriter.GetTraceMessages()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.MemoryTraceWriter.GetTraceMessages()", span="60-60"];
m7_241 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeConverter()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeConverter()", span="511-511"];
m7_242 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeConverter()", file="TraceWriterTests.cs", label="InMemoryTraceWriter traceWriter = new InMemoryTraceWriter\r\n            {\r\n                LevelFilter = TraceLevel.Verbose\r\n            }", span="513-516"];
m7_243 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeConverter()", file="TraceWriterTests.cs", label="IList<DateTime> d = new List<DateTime>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)\r\n            }", span="518-521"];
m7_244 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeConverter()", file="TraceWriterTests.cs", label="string json = JsonConvert.SerializeObject(d, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                Converters = { new JavaScriptDateTimeConverter() },\r\n                TraceWriter = traceWriter\r\n            })", span="523-527"];
m7_245 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeConverter()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Started serializing System.Collections.Generic.List`1[System.DateTime]. Path ''.'', traceWriter.TraceRecords[0].Message)", span="529-529"];
m7_246 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeConverter()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Started serializing System.DateTime with converter Newtonsoft.Json.Converters.JavaScriptDateTimeConverter. Path ''.'', traceWriter.TraceRecords[1].Message)", span="530-530"];
m7_247 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeConverter()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Finished serializing System.DateTime with converter Newtonsoft.Json.Converters.JavaScriptDateTimeConverter. Path '[0]'.'', traceWriter.TraceRecords[2].Message)", span="531-531"];
m7_248 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeConverter()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Finished serializing System.Collections.Generic.List`1[System.DateTime]. Path ''.'', traceWriter.TraceRecords[3].Message)", span="532-532"];
m7_249 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeConverter()", file="TraceWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeConverter()", span="511-511"];
m7_455 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(uint)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(uint)", span="192-192"];
m7_159 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializing()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializing()", span="361-361"];
m7_160 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializing()", file="TraceWriterTests.cs", label="string json = @''{''''Integer'''':''''hi''''}''", span="363-363"];
m7_161 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializing()", file="TraceWriterTests.cs", label="var traceWriter = new InMemoryTraceWriter\r\n            {\r\n                LevelFilter = TraceLevel.Info\r\n            }", span="365-368"];
m7_162 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializing()", file="TraceWriterTests.cs", label="ExceptionAssert.Throws<Exception>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<IntegerTestClass>(\r\n                    json,\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        TraceWriter = traceWriter\r\n                    });\r\n            }, ''Could not convert string to integer: hi. Path 'Integer', line 1, position 15.'')", span="370-378"];
m7_163 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializing()", file="TraceWriterTests.cs", label="Assert.AreEqual(2, traceWriter.TraceRecords.Count)", span="380-380"];
m7_164 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializing()", file="TraceWriterTests.cs", label="Assert.AreEqual(TraceLevel.Info, traceWriter.TraceRecords[0].Level)", span="382-382"];
m7_165 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializing()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Started deserializing Newtonsoft.Json.Tests.Serialization.IntegerTestClass. Path 'Integer', line 1, position 11.'', traceWriter.TraceRecords[0].Message)", span="383-383"];
m7_166 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializing()", file="TraceWriterTests.cs", label="Assert.AreEqual(TraceLevel.Error, traceWriter.TraceRecords[1].Level)", span="385-385"];
m7_167 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializing()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Error deserializing Newtonsoft.Json.Tests.Serialization.IntegerTestClass. Could not convert string to integer: hi. Path 'Integer', line 1, position 15.'', traceWriter.TraceRecords[1].Message)", span="386-386"];
m7_168 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializing()", file="TraceWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializing()", span="361-361"];
m7_498 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.GetSerializedJsonMessage()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.GetSerializedJsonMessage()", span="34-34"];
m7_15 [cluster="System.Diagnostics.TraceListenerCollection.Add(System.Diagnostics.TraceListener)", file="TraceWriterTests.cs", label="Entry System.Diagnostics.TraceListenerCollection.Add(System.Diagnostics.TraceListener)", span="0-0"];
m7_441 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WritePropertyName(string)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WritePropertyName(string)", span="286-286"];
m7_470 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(uint?)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(uint?)", span="1000-1000"];
m7_583 [cluster="Newtonsoft.Json.Tests.Serialization.TraceRecord.TraceRecord()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TraceRecord.TraceRecord()", span="1044-1044"];
m7_17 [cluster="Newtonsoft.Json.Serialization.DiagnosticsTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.DiagnosticsTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", span="45-45"];
m7_374 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="525-525"];
m7_489 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteUndefined()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteUndefined()", span="104-104"];
m7_491 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteEndConstructor()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteEndConstructor()", span="279-279"];
m7_41 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="34-34"];
m7_133 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Populate()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Populate()", span="300-300"];
m7_134 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Populate()", file="TraceWriterTests.cs", label="InMemoryTraceWriter traceWriter = new InMemoryTraceWriter\r\n            {\r\n                LevelFilter = TraceLevel.Info\r\n            }", span="302-305"];
m7_135 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Populate()", file="TraceWriterTests.cs", label="TraceTestObject o2 = new TraceTestObject()", span="307-307"];
m7_136 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Populate()", file="TraceWriterTests.cs", label="JsonConvert.PopulateObject(@''{\r\n  ''''IntList'''': [\r\n    1,\r\n    2\r\n  ],\r\n  ''''StringArray'''': [\r\n    ''''1'''',\r\n    ''''2''''\r\n  ],\r\n  ''''Version'''': {\r\n    ''''Major'''': 1,\r\n    ''''Minor'''': 2,\r\n    ''''Build'''': 3,\r\n    ''''Revision'''': 4,\r\n    ''''MajorRevision'''': 0,\r\n    ''''MinorRevision'''': 4\r\n  },\r\n  ''''StringDictionary'''': {\r\n    ''''1'''': ''''!'''',\r\n    ''''Two'''': ''''!!'''',\r\n    ''''III'''': ''''!!!''''\r\n  }\r\n}'',\r\n                o2,\r\n                new JsonSerializerSettings\r\n                {\r\n                    TraceWriter = traceWriter,\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.Default\r\n                })", span="309-337"];
m7_142 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Populate()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Started deserializing Newtonsoft.Json.Tests.Serialization.TraceTestObject. Path 'IntList', line 2, position 13.'', traceWriter.TraceRecords[0].Message)", span="345-345"];
m7_143 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Populate()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Started deserializing System.Collections.Generic.IList`1[System.Int32]. Path 'IntList', line 2, position 15.'', traceWriter.TraceRecords[1].Message)", span="346-346"];
m7_144 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Populate()", file="TraceWriterTests.cs", label="Assert.IsTrue(traceWriter.TraceRecords[2].Message.StartsWith(''Finished deserializing System.Collections.Generic.IList`1[System.Int32]. Path 'IntList'''))", span="347-347"];
m7_145 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Populate()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Started deserializing System.String[]. Path 'StringArray', line 6, position 19.'', traceWriter.TraceRecords[3].Message)", span="348-348"];
m7_146 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Populate()", file="TraceWriterTests.cs", label="Assert.IsTrue(traceWriter.TraceRecords[4].Message.StartsWith(''Finished deserializing System.String[]. Path 'StringArray'''))", span="349-349"];
m7_147 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Populate()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Deserializing System.Version using creator with parameters: Major, Minor, Build, Revision. Path 'Version.Major', line 11, position 13.'', traceWriter.TraceRecords[5].Message)", span="350-350"];
m7_148 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Populate()", file="TraceWriterTests.cs", label="Assert.IsTrue(traceWriter.TraceRecords[6].Message.StartsWith(''Started deserializing System.Version. Path 'Version'''))", span="351-351"];
m7_149 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Populate()", file="TraceWriterTests.cs", label="Assert.IsTrue(traceWriter.TraceRecords[7].Message.StartsWith(''Finished deserializing System.Version. Path 'Version'''))", span="352-352"];
m7_150 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Populate()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Started deserializing System.Collections.Generic.IDictionary`2[System.String,System.String]. Path 'StringDictionary.1', line 19, position 9.'', traceWriter.TraceRecords[8].Message)", span="353-353"];
m7_151 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Populate()", file="TraceWriterTests.cs", label="Assert.IsTrue(traceWriter.TraceRecords[9].Message.StartsWith(''Finished deserializing System.Collections.Generic.IDictionary`2[System.String,System.String]. Path 'StringDictionary'''))", span="354-354"];
m7_152 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Populate()", file="TraceWriterTests.cs", label="Assert.IsTrue(traceWriter.TraceRecords[10].Message.StartsWith(''Finished deserializing Newtonsoft.Json.Tests.Serialization.TraceTestObject. Path ''''))", span="355-355"];
m7_153 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Populate()", file="TraceWriterTests.cs", label="Assert.IsFalse(traceWriter.TraceRecords.Any(r => r.Level == TraceLevel.Verbose))", span="357-357"];
m7_137 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Populate()", file="TraceWriterTests.cs", label="Assert.AreEqual(2, o2.IntList.Count)", span="339-339"];
m7_138 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Populate()", file="TraceWriterTests.cs", label="Assert.AreEqual(2, o2.StringArray.Length)", span="340-340"];
m7_139 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Populate()", file="TraceWriterTests.cs", label="Assert.AreEqual(1, o2.Version.Major)", span="341-341"];
m7_140 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Populate()", file="TraceWriterTests.cs", label="Assert.AreEqual(2, o2.Version.Minor)", span="342-342"];
m7_141 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Populate()", file="TraceWriterTests.cs", label="Assert.AreEqual(3, o2.StringDictionary.Count)", span="343-343"];
m7_154 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Populate()", file="TraceWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Populate()", span="300-300"];
m7_496 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.Flush()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.Flush()", span="344-344"];
m7_311 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ShouldSerializeTestClass()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ShouldSerializeTestClass()", span="703-703"];
m7_312 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ShouldSerializeTestClass()", file="TraceWriterTests.cs", label="ShouldSerializeTestClass c = new ShouldSerializeTestClass()", span="705-705"];
m7_313 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ShouldSerializeTestClass()", file="TraceWriterTests.cs", label="c.Age = 29", span="706-706"];
m7_314 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ShouldSerializeTestClass()", file="TraceWriterTests.cs", label="c.Name = ''Jim''", span="707-707"];
m7_315 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ShouldSerializeTestClass()", file="TraceWriterTests.cs", label="c._shouldSerializeName = true", span="708-708"];
m7_317 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ShouldSerializeTestClass()", file="TraceWriterTests.cs", label="JsonConvert.SerializeObject(c, new JsonSerializerSettings { TraceWriter = traceWriter })", span="715-715"];
m7_321 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ShouldSerializeTestClass()", file="TraceWriterTests.cs", label="c._shouldSerializeName = false", span="725-725"];
m7_322 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ShouldSerializeTestClass()", file="TraceWriterTests.cs", label="JsonConvert.SerializeObject(c, new JsonSerializerSettings { TraceWriter = traceWriter })", span="727-727"];
m7_316 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ShouldSerializeTestClass()", file="TraceWriterTests.cs", label="InMemoryTraceWriter traceWriter = new InMemoryTraceWriter\r\n            {\r\n                LevelFilter = TraceLevel.Verbose\r\n            }", span="710-713"];
m7_318 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ShouldSerializeTestClass()", file="TraceWriterTests.cs", label="Assert.AreEqual(''ShouldSerialize result for property 'Name' on Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass: True. Path ''.'', traceWriter.TraceRecords[1].Message)", span="717-717"];
m7_319 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ShouldSerializeTestClass()", file="TraceWriterTests.cs", label="Assert.AreEqual(TraceLevel.Verbose, traceWriter.TraceRecords[1].Level)", span="718-718"];
m7_320 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ShouldSerializeTestClass()", file="TraceWriterTests.cs", label="traceWriter = new InMemoryTraceWriter\r\n            {\r\n                LevelFilter = TraceLevel.Verbose\r\n            }", span="720-723"];
m7_323 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ShouldSerializeTestClass()", file="TraceWriterTests.cs", label="Assert.AreEqual(''ShouldSerialize result for property 'Name' on Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass: False. Path ''.'', traceWriter.TraceRecords[1].Message)", span="729-729"];
m7_324 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ShouldSerializeTestClass()", file="TraceWriterTests.cs", label="Assert.AreEqual(TraceLevel.Verbose, traceWriter.TraceRecords[1].Level)", span="730-730"];
m7_325 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ShouldSerializeTestClass()", file="TraceWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ShouldSerializeTestClass()", span="703-703"];
m7_471 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", span="1123-1123"];
m7_478 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(object)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(object)", span="146-146"];
m7_38 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="TraceWriterTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m7_593 [cluster="System.Text.StringBuilder.ToString()", file="TraceWriterTests.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m7_484 [cluster="System.Text.Encoding.GetBytes(string)", file="TraceWriterTests.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m7_169 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="358-358"];
m7_443 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(string)", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(string)", span="178-178"];
m7_286 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMember()", file="TraceWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMember()", span="633-633"];
m7_287 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMember()", file="TraceWriterTests.cs", label="InMemoryTraceWriter traceWriter = new InMemoryTraceWriter\r\n            {\r\n                LevelFilter = TraceLevel.Verbose\r\n            }", span="635-638"];
m7_288 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMember()", file="TraceWriterTests.cs", label="JsonConvert.DeserializeObject<Person>(\r\n                ''{'MissingMemberProperty':'!!'}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    TraceWriter = traceWriter\r\n                })", span="640-645"];
m7_289 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMember()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Started deserializing Newtonsoft.Json.Tests.TestObjects.Person. Path 'MissingMemberProperty', line 1, position 25.'', traceWriter.TraceRecords[0].Message)", span="647-647"];
m7_290 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMember()", file="TraceWriterTests.cs", label="Assert.AreEqual(''Could not find member 'MissingMemberProperty' on Newtonsoft.Json.Tests.TestObjects.Person. Path 'MissingMemberProperty', line 1, position 25.'', traceWriter.TraceRecords[1].Message)", span="648-648"];
m7_291 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMember()", file="TraceWriterTests.cs", label="Assert.IsTrue(traceWriter.TraceRecords[2].Message.StartsWith(''Finished deserializing Newtonsoft.Json.Tests.TestObjects.Person. Path ''''))", span="649-649"];
m7_292 [cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMember()", file="TraceWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMember()", span="633-633"];
m7_594 [file="TraceWriterTests.cs", label=json, span=""];
m7_595 [file="TraceWriterTests.cs", label=traceWriter, span=""];
m7_596 [file="TraceWriterTests.cs", label=json, span=""];
m7_597 [file="TraceWriterTests.cs", label=traceWriter, span=""];
m7_598 [file="TraceWriterTests.cs", label=traceWriter, span=""];
m7_599 [file="TraceWriterTests.cs", label="Newtonsoft.Json.Tests.Serialization.TraceRecord", span=""];
m7_600 [file="TraceWriterTests.cs", label="Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter", span=""];
m8_12 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericType(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsGenericType(System.Type)", span="137-137"];
m8_13 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericType(System.Type)", file="TypeExtensions.cs", label="return type.IsGenericType;", span="140-140"];
m8_14 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericType(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsGenericType(System.Type)", span="137-137"];
m8_59 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string)", span="547-547"];
m8_60 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string)", file="TypeExtensions.cs", label="Type match", span="549-549"];
m8_61 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string)", file="TypeExtensions.cs", label="return type.AssignableToTypeName(fullTypeName, out match);", span="550-550"];
m8_62 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string)", span="547-547"];
m8_15 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", span="146-146"];
m8_16 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", file="TypeExtensions.cs", label="return type.IsGenericTypeDefinition;", span="149-149"];
m8_17 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", span="146-146"];
m8_56 [cluster="string.Equals(string, string, System.StringComparison)", file="TypeExtensions.cs", label="Entry string.Equals(string, string, System.StringComparison)", span="0-0"];
m8_18 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", span="155-155"];
m8_19 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", file="TypeExtensions.cs", label="return type.BaseType;", span="158-158"];
m8_20 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", span="155-155"];
m8_36 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsVisible(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsVisible(System.Type)", span="501-501"];
m8_37 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsVisible(System.Type)", file="TypeExtensions.cs", label="return type.IsVisible;", span="504-504"];
m8_38 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsVisible(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsVisible(System.Type)", span="501-501"];
m8_3 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.MemberType(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.MemberType(System.Reflection.MemberInfo)", span="101-101"];
m8_4 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.MemberType(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="return memberInfo.MemberType;", span="104-104"];
m8_5 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.MemberType(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.MemberType(System.Reflection.MemberInfo)", span="101-101"];
m8_33 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract(System.Type)", span="492-492"];
m8_34 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract(System.Type)", file="TypeExtensions.cs", label="return type.IsAbstract;", span="495-495"];
m8_35 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract(System.Type)", span="492-492"];
m8_27 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsClass(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsClass(System.Type)", span="182-182"];
m8_28 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsClass(System.Type)", file="TypeExtensions.cs", label="return type.IsClass;", span="185-185"];
m8_29 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsClass(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsClass(System.Type)", span="182-182"];
m8_6 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", span="119-119"];
m8_7 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", file="TypeExtensions.cs", label="return type.ContainsGenericParameters;", span="122-122"];
m8_8 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", span="119-119"];
m8_39 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", span="510-510"];
m8_40 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", file="TypeExtensions.cs", label="return type.IsValueType;", span="513-513"];
m8_41 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", span="510-510"];
m8_24 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", span="173-173"];
m8_25 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", file="TypeExtensions.cs", label="return type.IsEnum;", span="176-176"];
m8_26 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", span="173-173"];
m8_58 [cluster="System.Type.GetInterfaces()", file="TypeExtensions.cs", label="Entry System.Type.GetInterfaces()", span="0-0"];
m8_42 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", span="519-519"];
m8_43 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs", label="Type current = type", span="521-521"];
m8_45 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs", label="string.Equals(current.FullName, fullTypeName, StringComparison.Ordinal)", span="525-525"];
m8_49 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs", label="type.GetInterfaces()", span="534-534"];
m8_50 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs", label="string.Equals(i.Name, fullTypeName, StringComparison.Ordinal)", span="536-536"];
m8_51 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs", label="match = type", span="538-538"];
m8_44 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs", label="current != null", span="523-523"];
m8_46 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs", label="match = current", span="527-527"];
m8_48 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs", label="current = current.BaseType()", span="531-531"];
m8_47 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs", label="return true;", span="528-528"];
m8_53 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs", label="match = null", span="543-543"];
m8_52 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs", label="return true;", span="539-539"];
m8_54 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs", label="return false;", span="544-544"];
m8_55 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", span="519-519"];
m8_9 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", span="128-128"];
m8_10 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", file="TypeExtensions.cs", label="return type.IsInterface;", span="131-131"];
m8_11 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", span="128-128"];
m8_30 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", span="191-191"];
m8_31 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", file="TypeExtensions.cs", label="return type.IsSealed;", span="194-194"];
m8_32 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", span="191-191"];
m8_0 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", span="92-92"];
m8_1 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", file="TypeExtensions.cs", label="return d.Method;", span="95-95"];
m8_2 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", span="92-92"];
m8_76 [cluster="System.Type.ImplementInterface(System.Type)", file="TypeExtensions.cs", label="Entry System.Type.ImplementInterface(System.Type)", span="553-553"];
m8_57 [cluster="System.Type.BaseType()", file="TypeExtensions.cs", label="Entry System.Type.BaseType()", span="155-155"];
m8_64 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", span="553-553"];
m8_65 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", color=green, community=0, file="TypeExtensions.cs", label="-1: Type currentType = type", span="555-555"];
m8_70 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", color=red, community=0, file="TypeExtensions.cs", label="-1: interfaces[i] == interfaceType || (interfaces[i] != null && interfaces[i].ImplementInterface(interfaceType))", span="561-561"];
m8_66 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", color=green, community=0, file="TypeExtensions.cs", label="-1: currentType != null", span="555-555"];
m8_67 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", color=green, community=0, file="TypeExtensions.cs", label="-1: Type[] interfaces = currentType.GetInterfaces()", span="557-557"];
m8_73 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", color=green, community=0, file="TypeExtensions.cs", label="-1: currentType = currentType.BaseType", span="555-555"];
m8_74 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="TypeExtensions.cs", label="return false;", span="568-568"];
m8_68 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", color=red, community=0, file="TypeExtensions.cs", label="-1: int i = 0", span="559-559"];
m8_69 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", color=red, community=0, file="TypeExtensions.cs", label="-1: i < interfaces.Length", span="559-559"];
m8_72 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", color=red, community=0, file="TypeExtensions.cs", label="-1: i++", span="559-559"];
m8_71 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="TypeExtensions.cs", label="return true;", span="563-563"];
m8_75 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", span="553-553"];
m8_63 [cluster="System.Type.AssignableToTypeName(string, out System.Type)", file="TypeExtensions.cs", label="Entry System.Type.AssignableToTypeName(string, out System.Type)", span="519-519"];
m8_21 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.Assembly(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.Assembly(System.Type)", span="164-164"];
m8_22 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.Assembly(System.Type)", file="TypeExtensions.cs", label="return type.Assembly;", span="167-167"];
m8_23 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.Assembly(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.Assembly(System.Type)", span="164-164"];
d433 -> d434  [color=green, key=0, style=solid];
d433 -> d448  [color=green, key=2, style=dotted];
d433 -> d449  [color=green, key=2, style=dotted];
d433 -> d450  [color=green, key=2, style=dotted];
d433 -> d451  [color=green, key=2, style=dotted];
d433 -> d452  [color=green, key=2, style=dotted];
d433 -> d453  [color=green, key=2, style=dotted];
d433 -> d454  [color=green, key=2, style=dotted];
d433 -> d455  [color=green, key=2, style=dotted];
d432 -> d433  [color=green, key=0, style=solid];
d434 -> d435  [color=green, key=0, style=solid];
d434 -> d32  [color=green, key=2, style=dotted];
d434 -> d33  [color=green, key=2, style=dotted];
d434 -> d456  [color=green, key=2, style=dotted];
d434 -> d457  [color=green, key=2, style=dotted];
d434 -> d458  [color=green, key=1, label="lambda expression", style=dashed];
d434 -> d437  [color=green, key=1, label=o, style=dashed];
d434 -> d439  [color=green, key=1, label=o, style=dashed];
d434 -> d441  [color=green, key=1, label=o, style=dashed];
d434 -> d443  [color=green, key=1, label=o, style=dashed];
d434 -> d445  [color=green, key=1, label=o, style=dashed];
d435 -> d436  [color=green, key=0, style=solid];
d435 -> d10  [color=green, key=2, style=dotted];
d435 -> d11  [color=green, key=2, style=dotted];
d458 -> d459  [color=green, key=0, style=solid];
d437 -> d438  [color=green, key=0, style=solid];
d437 -> d10  [color=green, key=2, style=dotted];
d437 -> d11  [color=green, key=2, style=dotted];
d439 -> d440  [color=green, key=0, style=solid];
d439 -> d10  [color=green, key=2, style=dotted];
d439 -> d11  [color=green, key=2, style=dotted];
d441 -> d442  [color=green, key=0, style=solid];
d441 -> d10  [color=green, key=2, style=dotted];
d441 -> d11  [color=green, key=2, style=dotted];
d443 -> d444  [color=green, key=0, style=solid];
d443 -> d10  [color=green, key=2, style=dotted];
d443 -> d11  [color=green, key=2, style=dotted];
d445 -> d446  [color=green, key=0, style=solid];
d445 -> d10  [color=green, key=2, style=dotted];
d445 -> d11  [color=green, key=2, style=dotted];
d436 -> d437  [color=green, key=0, style=solid];
d436 -> d12  [color=green, key=2, style=dotted];
d438 -> d439  [color=green, key=0, style=solid];
d438 -> d12  [color=green, key=2, style=dotted];
d440 -> d441  [color=green, key=0, style=solid];
d440 -> d12  [color=green, key=2, style=dotted];
d442 -> d443  [color=green, key=0, style=solid];
d442 -> d12  [color=green, key=2, style=dotted];
d444 -> d445  [color=green, key=0, style=solid];
d444 -> d12  [color=green, key=2, style=dotted];
d446 -> d447  [color=green, key=0, style=solid];
d446 -> d12  [color=green, key=2, style=dotted];
d447 -> d432  [color=blue, key=0, style=bold];
d459 -> d460  [color=green, key=0, style=solid];
d459 -> d32  [color=green, key=2, style=dotted];
d459 -> d33  [color=green, key=2, style=dotted];
d460 -> d458  [color=blue, key=0, style=bold];
d28 -> d32  [key=2, style=dotted];
d28 -> d33  [key=2, style=dotted];
d28 -> d29  [key=0, style=solid];
d36 -> d32  [key=2, style=dotted];
d36 -> d33  [key=2, style=dotted];
d36 -> d37  [key=0, style=solid];
d36 -> d38  [color=darkseagreen4, key=1, label=o, style=dashed];
d36 -> d39  [color=darkseagreen4, key=1, label=o, style=dashed];
d43 -> d32  [key=2, style=dotted];
d43 -> d33  [key=2, style=dotted];
d43 -> d44  [key=0, style=solid];
d48 -> d32  [key=2, style=dotted];
d48 -> d33  [key=2, style=dotted];
d48 -> d49  [key=0, style=solid];
d48 -> d50  [color=darkseagreen4, key=1, label=o, style=dashed];
d53 -> d32  [key=2, style=dotted];
d53 -> d33  [key=2, style=dotted];
d53 -> d54  [key=0, style=solid];
d53 -> d55  [color=darkseagreen4, key=1, label=o, style=dashed];
d58 -> d32  [key=2, style=dotted];
d58 -> d33  [key=2, style=dotted];
d58 -> d59  [key=0, style=solid];
d58 -> d62  [key=2, style=dotted];
d64 -> d32  [key=2, style=dotted];
d64 -> d33  [key=2, style=dotted];
d64 -> d65  [key=0, style=solid];
d81 -> d32  [key=2, style=dotted];
d81 -> d33  [key=2, style=dotted];
d81 -> d82  [key=0, style=solid];
d88 -> d32  [key=2, style=dotted];
d88 -> d33  [key=2, style=dotted];
d88 -> d89  [key=0, style=solid];
d94 -> d32  [key=2, style=dotted];
d94 -> d33  [key=2, style=dotted];
d94 -> d95  [key=0, style=solid];
d99 -> d32  [key=2, style=dotted];
d99 -> d33  [key=2, style=dotted];
d99 -> d100  [key=0, style=solid];
d99 -> d104  [color=darkseagreen4, key=1, label=o, style=dashed];
d107 -> d32  [key=2, style=dotted];
d107 -> d33  [key=2, style=dotted];
d107 -> d108  [key=0, style=solid];
d107 -> d111  [color=darkseagreen4, key=1, label=o, style=dashed];
d114 -> d32  [key=2, style=dotted];
d114 -> d33  [key=2, style=dotted];
d114 -> d115  [key=0, style=solid];
d114 -> d118  [color=darkseagreen4, key=1, label=o, style=dashed];
d159 -> d32  [key=2, style=dotted];
d159 -> d33  [key=2, style=dotted];
d159 -> d160  [key=0, style=solid];
d159 -> d163  [color=darkseagreen4, key=1, label=o, style=dashed];
d166 -> d32  [key=2, style=dotted];
d166 -> d33  [key=2, style=dotted];
d166 -> d167  [key=0, style=solid];
d171 -> d32  [key=2, style=dotted];
d171 -> d33  [key=2, style=dotted];
d171 -> d172  [key=0, style=solid];
d171 -> d175  [color=darkseagreen4, key=1, label=o, style=dashed];
d342 -> d32  [key=2, style=dotted];
d342 -> d33  [key=2, style=dotted];
d342 -> d343  [key=0, style=solid];
d342 -> d346  [color=darkseagreen4, key=1, label=o, style=dashed];
d356 -> d32  [key=2, style=dotted];
d356 -> d33  [key=2, style=dotted];
d356 -> d357  [key=0, style=solid];
d356 -> d62  [key=2, style=dotted];
d360 -> d32  [key=2, style=dotted];
d360 -> d33  [key=2, style=dotted];
d360 -> d361  [key=0, style=solid];
d360 -> d307  [key=2, style=dotted];
d360 -> d308  [key=2, style=dotted];
d363 -> d32  [key=2, style=dotted];
d363 -> d33  [key=2, style=dotted];
d363 -> d364  [key=0, style=solid];
d363 -> d62  [key=2, style=dotted];
d367 -> d32  [key=2, style=dotted];
d367 -> d33  [key=2, style=dotted];
d367 -> d368  [key=0, style=solid];
d367 -> d307  [key=2, style=dotted];
d367 -> d308  [key=2, style=dotted];
d370 -> d32  [key=2, style=dotted];
d370 -> d33  [key=2, style=dotted];
d370 -> d371  [key=0, style=solid];
d370 -> d62  [key=2, style=dotted];
d370 -> d322  [key=2, style=dotted];
d374 -> d32  [key=2, style=dotted];
d374 -> d33  [key=2, style=dotted];
d374 -> d375  [key=0, style=solid];
d374 -> d322  [key=2, style=dotted];
d374 -> d307  [key=2, style=dotted];
d374 -> d308  [key=2, style=dotted];
d391 -> d32  [key=2, style=dotted];
d391 -> d33  [key=2, style=dotted];
d391 -> d392  [key=0, style=solid];
d391 -> d62  [key=2, style=dotted];
d395 -> d32  [key=2, style=dotted];
d395 -> d33  [key=2, style=dotted];
d395 -> d396  [key=0, style=solid];
d395 -> d307  [key=2, style=dotted];
d395 -> d308  [key=2, style=dotted];
d396 -> d32  [key=2, style=dotted];
d396 -> d33  [key=2, style=dotted];
d396 -> d397  [key=0, style=solid];
d396 -> d307  [key=2, style=dotted];
d396 -> d308  [key=2, style=dotted];
d399 -> d32  [key=2, style=dotted];
d399 -> d400  [key=0, style=solid];
d399 -> d62  [key=2, style=dotted];
d399 -> d406  [key=2, style=dotted];
d399 -> d407  [key=2, style=dotted];
d403 -> d32  [key=2, style=dotted];
d403 -> d33  [key=2, style=dotted];
d403 -> d404  [key=0, style=solid];
d403 -> d307  [key=2, style=dotted];
d403 -> d308  [key=2, style=dotted];
d404 -> d32  [key=2, style=dotted];
d404 -> d33  [key=2, style=dotted];
d404 -> d405  [key=0, style=solid];
d404 -> d307  [key=2, style=dotted];
d404 -> d308  [key=2, style=dotted];
d409 -> d32  [key=2, style=dotted];
d409 -> d33  [key=2, style=dotted];
d409 -> d410  [key=0, style=solid];
d409 -> d62  [key=2, style=dotted];
d413 -> d32  [key=2, style=dotted];
d413 -> d33  [key=2, style=dotted];
d413 -> d414  [key=0, style=solid];
d413 -> d307  [key=2, style=dotted];
d413 -> d308  [key=2, style=dotted];
d414 -> d32  [key=2, style=dotted];
d414 -> d33  [key=2, style=dotted];
d414 -> d415  [key=0, style=solid];
d414 -> d307  [key=2, style=dotted];
d414 -> d308  [key=2, style=dotted];
d415 -> d32  [key=2, style=dotted];
d415 -> d33  [key=2, style=dotted];
d415 -> d416  [key=0, style=solid];
d415 -> d307  [key=2, style=dotted];
d415 -> d308  [key=2, style=dotted];
d416 -> d32  [key=2, style=dotted];
d416 -> d33  [key=2, style=dotted];
d416 -> d417  [key=0, style=solid];
d416 -> d307  [key=2, style=dotted];
d416 -> d308  [key=2, style=dotted];
d419 -> d32  [key=2, style=dotted];
d419 -> d33  [key=2, style=dotted];
d419 -> d420  [key=0, style=solid];
d419 -> d62  [key=2, style=dotted];
d419 -> d79  [key=2, style=dotted];
d419 -> d322  [key=2, style=dotted];
d72 -> d33  [key=2, style=dotted];
d72 -> d73  [key=0, style=solid];
d72 -> d79  [key=2, style=dotted];
d469 -> d457  [key=2, style=dotted];
d469 -> d470  [key=0, style=solid];
d469 -> d34  [key=2, style=dotted];
d469 -> d480  [key=2, style=dotted];
d469 -> d482  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d469 -> d472  [color=darkseagreen4, key=1, label=storeNames, style=dashed];
d469 -> d473  [color=darkseagreen4, key=1, label=storeNames, style=dashed];
d469 -> d474  [color=darkseagreen4, key=1, label=storeNames, style=dashed];
d470 -> d457  [key=2, style=dotted];
d470 -> d471  [key=0, style=solid];
d470 -> d480  [key=2, style=dotted];
d470 -> d485  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d470 -> d475  [color=darkseagreen4, key=1, label=firstProductNames, style=dashed];
d470 -> d476  [color=darkseagreen4, key=1, label=firstProductNames, style=dashed];
d470 -> d477  [color=darkseagreen4, key=1, label=firstProductNames, style=dashed];
d3 -> d10  [key=2, style=dotted];
d3 -> d11  [key=2, style=dotted];
d3 -> d4  [key=0, style=solid];
d3 -> d5  [color=darkseagreen4, key=1, label=tokens, style=dashed];
d3 -> d6  [color=darkseagreen4, key=1, label=tokens, style=dashed];
d3 -> d7  [color=darkseagreen4, key=1, label=tokens, style=dashed];
d16 -> d10  [key=2, style=dotted];
d16 -> d11  [key=2, style=dotted];
d16 -> d17  [key=0, style=solid];
d16 -> d18  [color=darkseagreen4, key=1, label=results, style=dashed];
d73 -> d10  [key=2, style=dotted];
d73 -> d11  [key=2, style=dotted];
d73 -> d74  [key=0, style=solid];
d73 -> d75  [color=darkseagreen4, key=1, label=t, style=dashed];
d73 -> d76  [color=darkseagreen4, key=1, label=t, style=dashed];
d73 -> d77  [color=darkseagreen4, key=1, label=t, style=dashed];
d227 -> d10  [key=2, style=dotted];
d227 -> d11  [key=2, style=dotted];
d227 -> d228  [key=0, style=solid];
d227 -> d229  [color=darkseagreen4, key=1, label=t, style=dashed];
d227 -> d230  [color=darkseagreen4, key=1, label=t, style=dashed];
d227 -> d231  [color=darkseagreen4, key=1, label=t, style=dashed];
d232 -> d10  [key=2, style=dotted];
d232 -> d11  [key=2, style=dotted];
d232 -> d233  [key=0, style=solid];
d232 -> d234  [color=darkseagreen4, key=1, label=t, style=dashed];
d235 -> d10  [key=2, style=dotted];
d235 -> d11  [key=2, style=dotted];
d235 -> d236  [key=0, style=solid];
d235 -> d237  [color=darkseagreen4, key=1, label=t, style=dashed];
d238 -> d10  [key=2, style=dotted];
d238 -> d11  [key=2, style=dotted];
d238 -> d239  [key=0, style=solid];
d240 -> d10  [key=2, style=dotted];
d240 -> d11  [key=2, style=dotted];
d240 -> d241  [key=0, style=solid];
d240 -> d242  [color=darkseagreen4, key=1, label=t, style=dashed];
d243 -> d10  [key=2, style=dotted];
d243 -> d11  [key=2, style=dotted];
d243 -> d244  [key=0, style=solid];
d243 -> d245  [color=darkseagreen4, key=1, label=t, style=dashed];
d243 -> d246  [color=darkseagreen4, key=1, label=t, style=dashed];
d243 -> d247  [color=darkseagreen4, key=1, label=t, style=dashed];
d243 -> d248  [color=darkseagreen4, key=1, label=t, style=dashed];
d243 -> d249  [color=darkseagreen4, key=1, label=t, style=dashed];
d243 -> d250  [color=darkseagreen4, key=1, label=t, style=dashed];
d243 -> d251  [color=darkseagreen4, key=1, label=t, style=dashed];
d243 -> d252  [color=darkseagreen4, key=1, label=t, style=dashed];
d243 -> d253  [color=darkseagreen4, key=1, label=t, style=dashed];
d254 -> d10  [key=2, style=dotted];
d254 -> d11  [key=2, style=dotted];
d254 -> d255  [key=0, style=solid];
d254 -> d256  [color=darkseagreen4, key=1, label=t, style=dashed];
d254 -> d257  [color=darkseagreen4, key=1, label=t, style=dashed];
d254 -> d258  [color=darkseagreen4, key=1, label=t, style=dashed];
d254 -> d259  [color=darkseagreen4, key=1, label=t, style=dashed];
d254 -> d260  [color=darkseagreen4, key=1, label=t, style=dashed];
d264 -> d10  [key=2, style=dotted];
d264 -> d11  [key=2, style=dotted];
d264 -> d265  [key=0, style=solid];
d264 -> d266  [color=darkseagreen4, key=1, label=t, style=dashed];
d264 -> d267  [color=darkseagreen4, key=1, label=t, style=dashed];
d264 -> d268  [color=darkseagreen4, key=1, label=t, style=dashed];
d264 -> d269  [color=darkseagreen4, key=1, label=t, style=dashed];
d264 -> d270  [color=darkseagreen4, key=1, label=t, style=dashed];
d274 -> d10  [key=2, style=dotted];
d274 -> d275  [key=0, style=solid];
d274 -> d276  [color=darkseagreen4, key=1, label=t, style=dashed];
d274 -> d277  [color=darkseagreen4, key=1, label=t, style=dashed];
d274 -> d278  [color=darkseagreen4, key=1, label=t, style=dashed];
d274 -> d279  [color=darkseagreen4, key=1, label=t, style=dashed];
d287 -> d10  [key=2, style=dotted];
d287 -> d11  [key=2, style=dotted];
d287 -> d288  [key=0, style=solid];
d287 -> d289  [color=darkseagreen4, key=1, label=t, style=dashed];
d287 -> d290  [color=darkseagreen4, key=1, label=t, style=dashed];
d287 -> d291  [color=darkseagreen4, key=1, label=t, style=dashed];
d298 -> d10  [key=2, style=dotted];
d298 -> d11  [key=2, style=dotted];
d298 -> d299  [key=0, style=solid];
d298 -> d300  [color=darkseagreen4, key=1, label=t, style=dashed];
d298 -> d301  [color=darkseagreen4, key=1, label=t, style=dashed];
d298 -> d302  [color=darkseagreen4, key=1, label=t, style=dashed];
d298 -> d303  [color=darkseagreen4, key=1, label=t, style=dashed];
d298 -> d304  [color=darkseagreen4, key=1, label=t, style=dashed];
d298 -> d305  [color=darkseagreen4, key=1, label=t, style=dashed];
d314 -> d10  [key=2, style=dotted];
d314 -> d11  [key=2, style=dotted];
d314 -> d315  [key=0, style=solid];
d314 -> d316  [color=darkseagreen4, key=1, label=t, style=dashed];
d314 -> d317  [color=darkseagreen4, key=1, label=t, style=dashed];
d314 -> d318  [color=darkseagreen4, key=1, label=t, style=dashed];
d314 -> d319  [color=darkseagreen4, key=1, label=t, style=dashed];
d314 -> d320  [color=darkseagreen4, key=1, label=t, style=dashed];
d328 -> d10  [key=2, style=dotted];
d328 -> d11  [key=2, style=dotted];
d328 -> d329  [key=0, style=solid];
d328 -> d330  [color=darkseagreen4, key=1, label=t, style=dashed];
d328 -> d331  [color=darkseagreen4, key=1, label=t, style=dashed];
d328 -> d332  [color=darkseagreen4, key=1, label=t, style=dashed];
d328 -> d333  [color=darkseagreen4, key=1, label=t, style=dashed];
d328 -> d334  [color=darkseagreen4, key=1, label=t, style=dashed];
d328 -> d335  [color=darkseagreen4, key=1, label=t, style=dashed];
d328 -> d336  [color=darkseagreen4, key=1, label=t, style=dashed];
d328 -> d337  [color=darkseagreen4, key=1, label=t, style=dashed];
d328 -> d338  [color=darkseagreen4, key=1, label=t, style=dashed];
d328 -> d339  [color=darkseagreen4, key=1, label=t, style=dashed];
d357 -> d10  [key=2, style=dotted];
d357 -> d11  [key=2, style=dotted];
d357 -> d360  [color=darkseagreen4, key=1, label=t, style=dashed];
d357 -> d358  [key=0, style=solid];
d357 -> d359  [color=darkseagreen4, key=1, label=t, style=dashed];
d364 -> d10  [key=2, style=dotted];
d364 -> d11  [key=2, style=dotted];
d364 -> d367  [color=darkseagreen4, key=1, label=t, style=dashed];
d364 -> d365  [key=0, style=solid];
d364 -> d366  [color=darkseagreen4, key=1, label=t, style=dashed];
d371 -> d10  [key=2, style=dotted];
d371 -> d11  [key=2, style=dotted];
d371 -> d374  [color=darkseagreen4, key=1, label=t, style=dashed];
d371 -> d372  [key=0, style=solid];
d371 -> d373  [color=darkseagreen4, key=1, label=t, style=dashed];
d378 -> d10  [key=2, style=dotted];
d378 -> d11  [key=2, style=dotted];
d378 -> d379  [key=0, style=solid];
d378 -> d380  [color=darkseagreen4, key=1, label=t, style=dashed];
d378 -> d381  [color=darkseagreen4, key=1, label=t, style=dashed];
d378 -> d382  [color=darkseagreen4, key=1, label=t, style=dashed];
d386 -> d10  [key=2, style=dotted];
d386 -> d11  [key=2, style=dotted];
d386 -> d387  [key=0, style=solid];
d386 -> d388  [color=darkseagreen4, key=1, label=t, style=dashed];
d392 -> d10  [key=2, style=dotted];
d392 -> d11  [key=2, style=dotted];
d392 -> d395  [color=darkseagreen4, key=1, label=t, style=dashed];
d392 -> d396  [color=darkseagreen4, key=1, label=t, style=dashed];
d392 -> d393  [key=0, style=solid];
d392 -> d394  [color=darkseagreen4, key=1, label=t, style=dashed];
d400 -> d10  [key=2, style=dotted];
d400 -> d11  [key=2, style=dotted];
d400 -> d403  [color=darkseagreen4, key=1, label=t, style=dashed];
d400 -> d404  [color=darkseagreen4, key=1, label=t, style=dashed];
d400 -> d401  [key=0, style=solid];
d400 -> d402  [color=darkseagreen4, key=1, label=t, style=dashed];
d410 -> d10  [key=2, style=dotted];
d410 -> d11  [key=2, style=dotted];
d410 -> d413  [color=darkseagreen4, key=1, label=t, style=dashed];
d410 -> d414  [color=darkseagreen4, key=1, label=t, style=dashed];
d410 -> d415  [color=darkseagreen4, key=1, label=t, style=dashed];
d410 -> d416  [color=darkseagreen4, key=1, label=t, style=dashed];
d410 -> d411  [key=0, style=solid];
d410 -> d412  [color=darkseagreen4, key=1, label=t, style=dashed];
d420 -> d10  [key=2, style=dotted];
d420 -> d11  [key=2, style=dotted];
d420 -> d421  [key=0, style=solid];
d420 -> d422  [color=darkseagreen4, key=1, label=t, style=dashed];
d420 -> d423  [color=darkseagreen4, key=1, label=t, style=dashed];
d420 -> d424  [color=darkseagreen4, key=1, label=t, style=dashed];
d4 -> d12  [key=2, style=dotted];
d4 -> d5  [key=0, style=solid];
d5 -> d12  [key=2, style=dotted];
d5 -> d6  [key=0, style=solid];
d6 -> d12  [key=2, style=dotted];
d6 -> d7  [key=0, style=solid];
d7 -> d12  [key=2, style=dotted];
d7 -> d8  [key=0, style=solid];
d17 -> d12  [key=2, style=dotted];
d17 -> d18  [key=0, style=solid];
d18 -> d12  [key=2, style=dotted];
d18 -> d19  [key=0, style=solid];
d24 -> d12  [key=2, style=dotted];
d24 -> d25  [key=0, style=solid];
d30 -> d12  [key=2, style=dotted];
d30 -> d31  [key=0, style=solid];
d38 -> d12  [key=2, style=dotted];
d38 -> d39  [key=0, style=solid];
d40 -> d12  [key=2, style=dotted];
d40 -> d41  [key=0, style=solid];
d45 -> d12  [key=2, style=dotted];
d45 -> d46  [key=0, style=solid];
d50 -> d12  [key=2, style=dotted];
d50 -> d51  [key=0, style=solid];
d55 -> d12  [key=2, style=dotted];
d55 -> d56  [key=0, style=solid];
d60 -> d12  [key=2, style=dotted];
d60 -> d61  [key=0, style=solid];
d67 -> d12  [key=2, style=dotted];
d67 -> d68  [key=0, style=solid];
d68 -> d12  [key=2, style=dotted];
d68 -> d69  [key=0, style=solid];
d75 -> d12  [key=2, style=dotted];
d75 -> d76  [key=0, style=solid];
d76 -> d12  [key=2, style=dotted];
d76 -> d77  [key=0, style=solid];
d77 -> d12  [key=2, style=dotted];
d77 -> d78  [key=0, style=solid];
d84 -> d12  [key=2, style=dotted];
d84 -> d85  [key=0, style=solid];
d85 -> d12  [key=2, style=dotted];
d85 -> d86  [key=0, style=solid];
d168 -> d12  [key=2, style=dotted];
d168 -> d169  [key=0, style=solid];
d221 -> d12  [key=2, style=dotted];
d221 -> d222  [key=0, style=solid];
d222 -> d12  [key=2, style=dotted];
d222 -> d223  [key=0, style=solid];
d228 -> d12  [key=2, style=dotted];
d228 -> d229  [key=0, style=solid];
d229 -> d12  [key=2, style=dotted];
d229 -> d230  [key=0, style=solid];
d230 -> d12  [key=2, style=dotted];
d230 -> d231  [key=0, style=solid];
d231 -> d12  [key=2, style=dotted];
d231 -> d232  [key=0, style=solid];
d233 -> d12  [key=2, style=dotted];
d233 -> d234  [key=0, style=solid];
d234 -> d12  [key=2, style=dotted];
d234 -> d235  [key=0, style=solid];
d236 -> d12  [key=2, style=dotted];
d236 -> d237  [key=0, style=solid];
d237 -> d12  [key=2, style=dotted];
d237 -> d238  [key=0, style=solid];
d239 -> d12  [key=2, style=dotted];
d239 -> d240  [key=0, style=solid];
d241 -> d12  [key=2, style=dotted];
d241 -> d242  [key=0, style=solid];
d242 -> d12  [key=2, style=dotted];
d242 -> d243  [key=0, style=solid];
d244 -> d12  [key=2, style=dotted];
d244 -> d245  [key=0, style=solid];
d245 -> d12  [key=2, style=dotted];
d245 -> d246  [key=0, style=solid];
d246 -> d12  [key=2, style=dotted];
d246 -> d247  [key=0, style=solid];
d247 -> d12  [key=2, style=dotted];
d247 -> d248  [key=0, style=solid];
d248 -> d12  [key=2, style=dotted];
d248 -> d249  [key=0, style=solid];
d249 -> d12  [key=2, style=dotted];
d249 -> d250  [key=0, style=solid];
d250 -> d12  [key=2, style=dotted];
d250 -> d251  [key=0, style=solid];
d251 -> d12  [key=2, style=dotted];
d251 -> d252  [key=0, style=solid];
d252 -> d12  [key=2, style=dotted];
d252 -> d253  [key=0, style=solid];
d253 -> d12  [key=2, style=dotted];
d253 -> d254  [key=0, style=solid];
d255 -> d12  [key=2, style=dotted];
d255 -> d256  [key=0, style=solid];
d256 -> d12  [key=2, style=dotted];
d256 -> d257  [key=0, style=solid];
d257 -> d12  [key=2, style=dotted];
d257 -> d258  [key=0, style=solid];
d258 -> d12  [key=2, style=dotted];
d258 -> d259  [key=0, style=solid];
d259 -> d12  [key=2, style=dotted];
d259 -> d260  [key=0, style=solid];
d260 -> d12  [key=2, style=dotted];
d260 -> d261  [key=0, style=solid];
d266 -> d12  [key=2, style=dotted];
d266 -> d267  [key=0, style=solid];
d267 -> d12  [key=2, style=dotted];
d267 -> d268  [key=0, style=solid];
d268 -> d12  [key=2, style=dotted];
d268 -> d269  [key=0, style=solid];
d269 -> d12  [key=2, style=dotted];
d269 -> d270  [key=0, style=solid];
d270 -> d12  [key=2, style=dotted];
d270 -> d271  [key=0, style=solid];
d276 -> d12  [key=2, style=dotted];
d276 -> d277  [key=0, style=solid];
d276 -> d281  [key=2, style=dotted];
d277 -> d12  [key=2, style=dotted];
d277 -> d278  [key=0, style=solid];
d277 -> d282  [key=2, style=dotted];
d278 -> d12  [key=2, style=dotted];
d278 -> d279  [key=0, style=solid];
d278 -> d282  [key=2, style=dotted];
d279 -> d12  [key=2, style=dotted];
d279 -> d280  [key=0, style=solid];
d279 -> d282  [key=2, style=dotted];
d289 -> d12  [key=2, style=dotted];
d289 -> d290  [key=0, style=solid];
d290 -> d12  [key=2, style=dotted];
d290 -> d291  [key=0, style=solid];
d291 -> d12  [key=2, style=dotted];
d291 -> d292  [key=0, style=solid];
d300 -> d12  [key=2, style=dotted];
d300 -> d301  [key=0, style=solid];
d303 -> d12  [key=2, style=dotted];
d303 -> d304  [key=0, style=solid];
d305 -> d12  [key=2, style=dotted];
d305 -> d306  [key=0, style=solid];
d316 -> d12  [key=2, style=dotted];
d316 -> d317  [key=0, style=solid];
d317 -> d12  [key=2, style=dotted];
d317 -> d318  [key=0, style=solid];
d318 -> d12  [key=2, style=dotted];
d318 -> d319  [key=0, style=solid];
d330 -> d12  [key=2, style=dotted];
d330 -> d331  [key=0, style=solid];
d333 -> d12  [key=2, style=dotted];
d333 -> d334  [key=0, style=solid];
d335 -> d12  [key=2, style=dotted];
d335 -> d336  [key=0, style=solid];
d339 -> d12  [key=2, style=dotted];
d339 -> d340  [key=0, style=solid];
d345 -> d12  [key=2, style=dotted];
d345 -> d346  [key=0, style=solid];
d347 -> d12  [key=2, style=dotted];
d347 -> d348  [key=0, style=solid];
d348 -> d12  [key=2, style=dotted];
d348 -> d349  [key=0, style=solid];
d353 -> d12  [key=2, style=dotted];
d353 -> d354  [key=0, style=solid];
d359 -> d12  [key=2, style=dotted];
d359 -> d360  [key=0, style=solid];
d366 -> d12  [key=2, style=dotted];
d366 -> d367  [key=0, style=solid];
d373 -> d12  [key=2, style=dotted];
d373 -> d374  [key=0, style=solid];
d380 -> d12  [key=2, style=dotted];
d380 -> d381  [key=0, style=solid];
d381 -> d12  [key=2, style=dotted];
d381 -> d382  [key=0, style=solid];
d382 -> d12  [key=2, style=dotted];
d382 -> d383  [key=0, style=solid];
d388 -> d12  [key=2, style=dotted];
d388 -> d389  [key=0, style=solid];
d394 -> d12  [key=2, style=dotted];
d394 -> d395  [key=0, style=solid];
d402 -> d12  [key=2, style=dotted];
d402 -> d403  [key=0, style=solid];
d412 -> d12  [key=2, style=dotted];
d412 -> d413  [key=0, style=solid];
d422 -> d12  [key=2, style=dotted];
d422 -> d423  [key=0, style=solid];
d423 -> d12  [key=2, style=dotted];
d423 -> d424  [key=0, style=solid];
d424 -> d12  [key=2, style=dotted];
d424 -> d425  [key=0, style=solid];
d429 -> d12  [key=2, style=dotted];
d429 -> d430  [key=0, style=solid];
d466 -> d12  [key=2, style=dotted];
d466 -> d467  [key=0, style=solid];
d467 -> d12  [key=2, style=dotted];
d467 -> d468  [key=0, style=solid];
d468 -> d12  [key=2, style=dotted];
d468 -> d469  [key=0, style=solid];
d472 -> d12  [key=2, style=dotted];
d472 -> d473  [key=0, style=solid];
d473 -> d12  [key=2, style=dotted];
d473 -> d474  [key=0, style=solid];
d474 -> d12  [key=2, style=dotted];
d474 -> d475  [key=0, style=solid];
d475 -> d12  [key=2, style=dotted];
d475 -> d476  [key=0, style=solid];
d476 -> d12  [key=2, style=dotted];
d476 -> d477  [key=0, style=solid];
d477 -> d12  [key=2, style=dotted];
d477 -> d478  [key=0, style=solid];
d478 -> d12  [key=2, style=dotted];
d478 -> d479  [key=0, style=solid];
d27 -> d28  [key=0, style=solid];
d29 -> d30  [key=0, style=solid];
d29 -> d34  [key=2, style=dotted];
d35 -> d36  [key=0, style=solid];
d37 -> d38  [key=0, style=solid];
d37 -> d34  [key=2, style=dotted];
d39 -> d40  [key=0, style=solid];
d39 -> d34  [key=2, style=dotted];
d42 -> d43  [key=0, style=solid];
d44 -> d45  [key=0, style=solid];
d44 -> d34  [key=2, style=dotted];
d47 -> d48  [key=0, style=solid];
d49 -> d50  [key=0, style=solid];
d49 -> d34  [key=2, style=dotted];
d52 -> d53  [key=0, style=solid];
d54 -> d55  [key=0, style=solid];
d54 -> d34  [key=2, style=dotted];
d57 -> d58  [key=0, style=solid];
d59 -> d60  [key=0, style=solid];
d59 -> d34  [key=2, style=dotted];
d63 -> d64  [key=0, style=solid];
d65 -> d67  [color=darkseagreen4, key=1, label=t, style=dashed];
d65 -> d68  [color=darkseagreen4, key=1, label=t, style=dashed];
d65 -> d66  [key=0, style=solid];
d65 -> d34  [key=2, style=dotted];
d80 -> d81  [key=0, style=solid];
d82 -> d84  [color=darkseagreen4, key=1, label=t, style=dashed];
d82 -> d85  [color=darkseagreen4, key=1, label=t, style=dashed];
d82 -> d83  [key=0, style=solid];
d82 -> d34  [key=2, style=dotted];
d87 -> d88  [key=0, style=solid];
d89 -> d90  [key=0, style=solid];
d89 -> d34  [key=2, style=dotted];
d93 -> d94  [key=0, style=solid];
d95 -> d96  [key=0, style=solid];
d95 -> d34  [key=2, style=dotted];
d98 -> d99  [key=0, style=solid];
d100 -> d101  [key=0, style=solid];
d100 -> d102  [key=2, style=dotted];
d100 -> d103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d104 -> d105  [key=0, style=solid];
d104 -> d26  [key=2, style=dotted];
d106 -> d107  [key=0, style=solid];
d108 -> d109  [key=0, style=solid];
d108 -> d102  [key=2, style=dotted];
d108 -> d110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d111 -> d112  [key=0, style=solid];
d111 -> d26  [key=2, style=dotted];
d113 -> d114  [key=0, style=solid];
d115 -> d116  [key=0, style=solid];
d115 -> d102  [key=2, style=dotted];
d115 -> d117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d118 -> d119  [key=0, style=solid];
d118 -> d26  [key=2, style=dotted];
d158 -> d159  [key=0, style=solid];
d160 -> d161  [key=0, style=solid];
d160 -> d102  [key=2, style=dotted];
d160 -> d162  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d163 -> d164  [key=0, style=solid];
d163 -> d26  [key=2, style=dotted];
d165 -> d166  [key=0, style=solid];
d167 -> d168  [key=0, style=solid];
d167 -> d26  [key=2, style=dotted];
d170 -> d171  [key=0, style=solid];
d172 -> d173  [key=0, style=solid];
d172 -> d102  [key=2, style=dotted];
d172 -> d174  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d175 -> d176  [key=0, style=solid];
d175 -> d26  [key=2, style=dotted];
d341 -> d342  [key=0, style=solid];
d343 -> d345  [color=darkseagreen4, key=1, label=t, style=dashed];
d343 -> d344  [key=0, style=solid];
d343 -> d34  [key=2, style=dotted];
d346 -> d347  [key=0, style=solid];
d346 -> d348  [color=darkseagreen4, key=1, label=t, style=dashed];
d346 -> d34  [key=2, style=dotted];
d355 -> d356  [key=0, style=solid];
d361 -> d355  [color=blue, key=0, style=bold];
d362 -> d363  [key=0, style=solid];
d368 -> d362  [color=blue, key=0, style=bold];
d369 -> d370  [key=0, style=solid];
d375 -> d369  [color=blue, key=0, style=bold];
d390 -> d391  [key=0, style=solid];
d397 -> d390  [color=blue, key=0, style=bold];
d398 -> d399  [key=0, style=solid];
d405 -> d398  [color=blue, key=0, style=bold];
d408 -> d409  [key=0, style=solid];
d417 -> d408  [color=blue, key=0, style=bold];
d418 -> d419  [key=0, style=solid];
d71 -> d72  [key=0, style=solid];
d462 -> d469  [color=darkseagreen4, key=1, label=o, style=dashed];
d462 -> d470  [color=darkseagreen4, key=1, label=o, style=dashed];
d462 -> d463  [key=0, style=solid];
d462 -> d9  [key=2, style=dotted];
d462 -> d464  [color=darkseagreen4, key=1, label=o, style=dashed];
d462 -> d465  [color=darkseagreen4, key=1, label=o, style=dashed];
d462 -> d471  [color=darkseagreen4, key=1, label=o, style=dashed];
d482 -> d483  [key=0, style=solid];
d471 -> d472  [key=0, style=solid];
d471 -> d478  [color=darkseagreen4, key=1, label=totalPrice, style=dashed];
d471 -> d481  [key=2, style=dotted];
d471 -> d488  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d485 -> d486  [key=0, style=solid];
d2 -> d3  [key=0, style=solid];
d2 -> d9  [key=2, style=dotted];
d15 -> d16  [key=0, style=solid];
d15 -> d9  [key=2, style=dotted];
d74 -> d75  [key=0, style=solid];
d74 -> d70  [key=2, style=dotted];
d225 -> d227  [color=darkseagreen4, key=1, label=a, style=dashed];
d225 -> d232  [color=darkseagreen4, key=1, label=a, style=dashed];
d225 -> d235  [color=darkseagreen4, key=1, label=a, style=dashed];
d225 -> d238  [color=darkseagreen4, key=1, label=a, style=dashed];
d225 -> d240  [color=darkseagreen4, key=1, label=a, style=dashed];
d225 -> d243  [color=darkseagreen4, key=1, label=a, style=dashed];
d225 -> d254  [color=darkseagreen4, key=1, label=a, style=dashed];
d225 -> d62  [key=2, style=dotted];
d225 -> d226  [key=0, style=solid];
d226 -> d227  [key=0, style=solid];
d226 -> d226  [color=darkorchid, key=3, label="Local variable System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken> t", style=bold];
d263 -> d264  [key=0, style=solid];
d263 -> d62  [key=2, style=dotted];
d265 -> d266  [key=0, style=solid];
d265 -> d70  [key=2, style=dotted];
d273 -> d274  [key=0, style=solid];
d273 -> d62  [key=2, style=dotted];
d275 -> d276  [key=0, style=solid];
d275 -> d70  [key=2, style=dotted];
d286 -> d287  [key=0, style=solid];
d286 -> d62  [key=2, style=dotted];
d288 -> d289  [key=0, style=solid];
d288 -> d70  [key=2, style=dotted];
d297 -> d298  [key=0, style=solid];
d297 -> d62  [key=2, style=dotted];
d297 -> d301  [color=darkseagreen4, key=1, label=a, style=dashed];
d299 -> d300  [key=0, style=solid];
d299 -> d70  [key=2, style=dotted];
d301 -> d307  [key=2, style=dotted];
d301 -> d308  [key=2, style=dotted];
d301 -> d302  [key=0, style=solid];
d302 -> d303  [key=0, style=solid];
d302 -> d307  [key=2, style=dotted];
d302 -> d308  [key=2, style=dotted];
d304 -> d305  [key=0, style=solid];
d304 -> d307  [key=2, style=dotted];
d304 -> d308  [key=2, style=dotted];
d313 -> d314  [key=0, style=solid];
d313 -> d62  [key=2, style=dotted];
d315 -> d316  [key=0, style=solid];
d315 -> d70  [key=2, style=dotted];
d319 -> d307  [key=2, style=dotted];
d319 -> d308  [key=2, style=dotted];
d319 -> d322  [key=2, style=dotted];
d319 -> d320  [key=0, style=solid];
d319 -> d293  [key=2, style=dotted];
d320 -> d307  [key=2, style=dotted];
d320 -> d308  [key=2, style=dotted];
d320 -> d322  [key=2, style=dotted];
d320 -> d321  [key=0, style=solid];
d327 -> d328  [key=0, style=solid];
d327 -> d62  [key=2, style=dotted];
d327 -> d331  [color=darkseagreen4, key=1, label=a, style=dashed];
d329 -> d330  [key=0, style=solid];
d329 -> d70  [key=2, style=dotted];
d331 -> d307  [key=2, style=dotted];
d331 -> d308  [key=2, style=dotted];
d331 -> d332  [key=0, style=solid];
d332 -> d333  [key=0, style=solid];
d332 -> d307  [key=2, style=dotted];
d332 -> d308  [key=2, style=dotted];
d334 -> d335  [key=0, style=solid];
d334 -> d307  [key=2, style=dotted];
d334 -> d308  [key=2, style=dotted];
d336 -> d307  [key=2, style=dotted];
d336 -> d308  [key=2, style=dotted];
d336 -> d337  [key=0, style=solid];
d337 -> d307  [key=2, style=dotted];
d337 -> d308  [key=2, style=dotted];
d337 -> d322  [key=2, style=dotted];
d337 -> d338  [key=0, style=solid];
d337 -> d293  [key=2, style=dotted];
d338 -> d339  [key=0, style=solid];
d338 -> d307  [key=2, style=dotted];
d338 -> d308  [key=2, style=dotted];
d338 -> d322  [key=2, style=dotted];
d358 -> d359  [key=0, style=solid];
d358 -> d70  [key=2, style=dotted];
d365 -> d366  [key=0, style=solid];
d365 -> d70  [key=2, style=dotted];
d372 -> d373  [key=0, style=solid];
d372 -> d70  [key=2, style=dotted];
d377 -> d378  [key=0, style=solid];
d377 -> d62  [key=2, style=dotted];
d379 -> d380  [key=0, style=solid];
d379 -> d70  [key=2, style=dotted];
d385 -> d386  [key=0, style=solid];
d385 -> d62  [key=2, style=dotted];
d387 -> d388  [key=0, style=solid];
d387 -> d70  [key=2, style=dotted];
d393 -> d394  [key=0, style=solid];
d393 -> d70  [key=2, style=dotted];
d401 -> d402  [key=0, style=solid];
d401 -> d70  [key=2, style=dotted];
d411 -> d412  [key=0, style=solid];
d411 -> d70  [key=2, style=dotted];
d421 -> d422  [key=0, style=solid];
d421 -> d70  [key=2, style=dotted];
d8 -> d0  [color=blue, key=0, style=bold];
d19 -> d13  [color=blue, key=0, style=bold];
d23 -> d24  [key=0, style=solid];
d23 -> d26  [key=2, style=dotted];
d25 -> d20  [color=blue, key=0, style=bold];
d31 -> d27  [color=blue, key=0, style=bold];
d41 -> d35  [color=blue, key=0, style=bold];
d46 -> d42  [color=blue, key=0, style=bold];
d51 -> d47  [color=blue, key=0, style=bold];
d56 -> d52  [color=blue, key=0, style=bold];
d61 -> d57  [color=blue, key=0, style=bold];
d66 -> d67  [key=0, style=solid];
d66 -> d70  [key=2, style=dotted];
d69 -> d63  [color=blue, key=0, style=bold];
d78 -> d71  [color=blue, key=0, style=bold];
d83 -> d84  [key=0, style=solid];
d83 -> d70  [key=2, style=dotted];
d86 -> d80  [color=blue, key=0, style=bold];
d169 -> d165  [color=blue, key=0, style=bold];
d219 -> d221  [color=darkseagreen4, key=1, label=t, style=dashed];
d219 -> d222  [color=darkseagreen4, key=1, label=t, style=dashed];
d219 -> d34  [key=2, style=dotted];
d219 -> d220  [key=0, style=solid];
d220 -> d221  [key=0, style=solid];
d220 -> d70  [key=2, style=dotted];
d223 -> d217  [color=blue, key=0, style=bold];
d261 -> d224  [color=blue, key=0, style=bold];
d271 -> d262  [color=blue, key=0, style=bold];
d280 -> d272  [color=blue, key=0, style=bold];
d292 -> d283  [color=blue, key=0, style=bold];
d306 -> d294  [color=blue, key=0, style=bold];
d340 -> d323  [color=blue, key=0, style=bold];
d344 -> d345  [key=0, style=solid];
d344 -> d70  [key=2, style=dotted];
d349 -> d341  [color=blue, key=0, style=bold];
d352 -> d353  [key=0, style=solid];
d352 -> d34  [key=2, style=dotted];
d354 -> d350  [color=blue, key=0, style=bold];
d383 -> d376  [color=blue, key=0, style=bold];
d389 -> d384  [color=blue, key=0, style=bold];
d425 -> d418  [color=blue, key=0, style=bold];
d428 -> d429  [key=0, style=solid];
d428 -> d34  [key=2, style=dotted];
d430 -> d426  [color=blue, key=0, style=bold];
d463 -> d466  [color=darkseagreen4, key=1, label=name, style=dashed];
d463 -> d34  [key=2, style=dotted];
d463 -> d464  [key=0, style=solid];
d465 -> d466  [key=0, style=solid];
d465 -> d468  [color=darkseagreen4, key=1, label=productName, style=dashed];
d465 -> d34  [key=2, style=dotted];
d464 -> d467  [color=darkseagreen4, key=1, label=productPrice, style=dashed];
d464 -> d34  [key=2, style=dotted];
d464 -> d465  [key=0, style=solid];
d479 -> d461  [color=blue, key=0, style=bold];
d121 -> d62  [key=2, style=dotted];
d121 -> d122  [key=0, style=solid];
d126 -> d62  [key=2, style=dotted];
d126 -> d127  [key=0, style=solid];
d126 -> d130  [color=darkseagreen4, key=1, label=a, style=dashed];
d133 -> d62  [key=2, style=dotted];
d133 -> d134  [key=0, style=solid];
d133 -> d137  [color=darkseagreen4, key=1, label=a, style=dashed];
d140 -> d62  [key=2, style=dotted];
d140 -> d141  [key=0, style=solid];
d140 -> d144  [color=darkseagreen4, key=1, label=a, style=dashed];
d178 -> d62  [key=2, style=dotted];
d178 -> d179  [key=0, style=solid];
d178 -> d182  [color=darkseagreen4, key=1, label=a, style=dashed];
d185 -> d62  [key=2, style=dotted];
d185 -> d186  [key=0, style=solid];
d185 -> d194  [color=darkseagreen4, key=1, label=a, style=dashed];
d185 -> d187  [color=darkseagreen4, key=1, label=a, style=dashed];
d185 -> d197  [color=darkseagreen4, key=1, label=a, style=dashed];
d185 -> d188  [color=darkseagreen4, key=1, label=a, style=dashed];
d185 -> d200  [color=darkseagreen4, key=1, label=a, style=dashed];
d206 -> d62  [key=2, style=dotted];
d206 -> d207  [key=0, style=solid];
d211 -> d62  [key=2, style=dotted];
d211 -> d212  [key=0, style=solid];
d211 -> d215  [color=darkseagreen4, key=1, label=a, style=dashed];
d218 -> d62  [key=2, style=dotted];
d218 -> d219  [key=0, style=solid];
d91 -> d87  [color=blue, key=0, style=bold];
d90 -> d91  [key=0, style=solid];
d90 -> d92  [key=2, style=dotted];
d97 -> d93  [color=blue, key=0, style=bold];
d96 -> d97  [key=0, style=solid];
d96 -> d92  [key=2, style=dotted];
d101 -> d98  [color=blue, key=0, style=bold];
d103 -> d104  [key=0, style=solid];
d491 -> d104  [color=darkseagreen4, key=1, label=o, style=dashed];
d105 -> d103  [color=blue, key=0, style=bold];
d109 -> d106  [color=blue, key=0, style=bold];
d110 -> d111  [key=0, style=solid];
d492 -> d111  [color=darkseagreen4, key=1, label=o, style=dashed];
d112 -> d110  [color=blue, key=0, style=bold];
d116 -> d113  [color=blue, key=0, style=bold];
d117 -> d118  [key=0, style=solid];
d493 -> d118  [color=darkseagreen4, key=1, label=o, style=dashed];
d119 -> d117  [color=blue, key=0, style=bold];
d161 -> d158  [color=blue, key=0, style=bold];
d162 -> d163  [key=0, style=solid];
d498 -> d163  [color=darkseagreen4, key=1, label=o, style=dashed];
d164 -> d162  [color=blue, key=0, style=bold];
d173 -> d170  [color=blue, key=0, style=bold];
d174 -> d175  [key=0, style=solid];
d499 -> d175  [color=darkseagreen4, key=1, label=o, style=dashed];
d176 -> d174  [color=blue, key=0, style=bold];
d312 -> d322  [key=2, style=dotted];
d312 -> d313  [key=0, style=solid];
d312 -> d293  [key=2, style=dotted];
d326 -> d322  [key=2, style=dotted];
d326 -> d327  [key=0, style=solid];
d326 -> d336  [color=darkseagreen4, key=1, label=o3, style=dashed];
d326 -> d293  [key=2, style=dotted];
d461 -> d462  [key=0, style=solid];
d122 -> d34  [key=2, style=dotted];
d122 -> d123  [key=0, style=solid];
d130 -> d34  [key=2, style=dotted];
d130 -> d131  [key=0, style=solid];
d156 -> d34  [key=2, style=dotted];
d156 -> d157  [key=0, style=solid];
d156 -> d92  [key=2, style=dotted];
d207 -> d34  [key=2, style=dotted];
d207 -> d208  [key=0, style=solid];
d486 -> d34  [key=2, style=dotted];
d486 -> d487  [key=0, style=solid];
d489 -> d34  [key=2, style=dotted];
d489 -> d490  [key=0, style=solid];
d484 -> d482  [color=blue, key=0, style=bold];
d483 -> d484  [key=0, style=solid];
d488 -> d489  [key=0, style=solid];
d487 -> d485  [color=blue, key=0, style=bold];
d1 -> d2  [key=0, style=solid];
d1 -> d1  [color=darkorchid, key=3, label="Local variable string json", style=bold];
d14 -> d15  [key=0, style=solid];
d14 -> d14  [color=darkorchid, key=3, label="Local variable string json", style=bold];
d224 -> d225  [key=0, style=solid];
d262 -> d263  [key=0, style=solid];
d272 -> d273  [key=0, style=solid];
d284 -> d286  [color=darkseagreen4, key=1, label=o1, style=dashed];
d284 -> d285  [key=0, style=solid];
d284 -> d293  [key=2, style=dotted];
d285 -> d286  [key=0, style=solid];
d285 -> d293  [key=2, style=dotted];
d295 -> d297  [color=darkseagreen4, key=1, label=o1, style=dashed];
d295 -> d302  [color=darkseagreen4, key=1, label=o1, style=dashed];
d295 -> d296  [key=0, style=solid];
d295 -> d293  [key=2, style=dotted];
d296 -> d297  [key=0, style=solid];
d296 -> d304  [color=darkseagreen4, key=1, label=o2, style=dashed];
d296 -> d293  [key=2, style=dotted];
d310 -> d313  [color=darkseagreen4, key=1, label=o1, style=dashed];
d310 -> d311  [key=0, style=solid];
d310 -> d293  [key=2, style=dotted];
d311 -> d313  [color=darkseagreen4, key=1, label=o2, style=dashed];
d311 -> d312  [key=0, style=solid];
d311 -> d293  [key=2, style=dotted];
d321 -> d309  [color=blue, key=0, style=bold];
d324 -> d327  [color=darkseagreen4, key=1, label=o1, style=dashed];
d324 -> d332  [color=darkseagreen4, key=1, label=o1, style=dashed];
d324 -> d293  [key=2, style=dotted];
d324 -> d325  [key=0, style=solid];
d325 -> d327  [color=darkseagreen4, key=1, label=o2, style=dashed];
d325 -> d334  [color=darkseagreen4, key=1, label=o2, style=dashed];
d325 -> d326  [key=0, style=solid];
d325 -> d293  [key=2, style=dotted];
d376 -> d377  [key=0, style=solid];
d384 -> d385  [key=0, style=solid];
d0 -> d1  [key=0, style=solid];
d13 -> d14  [key=0, style=solid];
d22 -> d23  [key=0, style=solid];
d22 -> d9  [key=2, style=dotted];
d20 -> d21  [key=0, style=solid];
d217 -> d218  [key=0, style=solid];
d283 -> d284  [key=0, style=solid];
d294 -> d295  [key=0, style=solid];
d323 -> d324  [key=0, style=solid];
d351 -> d352  [key=0, style=solid];
d351 -> d9  [key=2, style=dotted];
d350 -> d351  [key=0, style=solid];
d427 -> d428  [key=0, style=solid];
d427 -> d431  [key=2, style=dotted];
d426 -> d427  [key=0, style=solid];
d120 -> d121  [key=0, style=solid];
d125 -> d126  [key=0, style=solid];
d127 -> d102  [key=2, style=dotted];
d127 -> d128  [key=0, style=solid];
d127 -> d129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d132 -> d133  [key=0, style=solid];
d134 -> d102  [key=2, style=dotted];
d134 -> d135  [key=0, style=solid];
d134 -> d136  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d137 -> d26  [key=2, style=dotted];
d137 -> d138  [key=0, style=solid];
d139 -> d140  [key=0, style=solid];
d141 -> d102  [key=2, style=dotted];
d141 -> d142  [key=0, style=solid];
d141 -> d143  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d144 -> d26  [key=2, style=dotted];
d144 -> d145  [key=0, style=solid];
d177 -> d178  [key=0, style=solid];
d179 -> d102  [key=2, style=dotted];
d179 -> d180  [key=0, style=solid];
d179 -> d181  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d182 -> d26  [key=2, style=dotted];
d182 -> d183  [key=0, style=solid];
d184 -> d185  [key=0, style=solid];
d186 -> d102  [key=2, style=dotted];
d186 -> d187  [key=0, style=solid];
d186 -> d193  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d194 -> d26  [key=2, style=dotted];
d194 -> d195  [key=0, style=solid];
d187 -> d102  [key=2, style=dotted];
d187 -> d188  [key=0, style=solid];
d187 -> d196  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d197 -> d26  [key=2, style=dotted];
d197 -> d198  [key=0, style=solid];
d188 -> d102  [key=2, style=dotted];
d188 -> d189  [key=0, style=solid];
d188 -> d199  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d200 -> d26  [key=2, style=dotted];
d200 -> d201  [key=0, style=solid];
d205 -> d206  [key=0, style=solid];
d210 -> d211  [key=0, style=solid];
d212 -> d102  [key=2, style=dotted];
d212 -> d213  [key=0, style=solid];
d212 -> d214  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d215 -> d26  [key=2, style=dotted];
d215 -> d216  [key=0, style=solid];
d148 -> d102  [key=2, style=dotted];
d148 -> d149  [key=0, style=solid];
d148 -> d151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d190 -> d102  [key=2, style=dotted];
d190 -> d191  [key=0, style=solid];
d190 -> d202  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d152 -> d26  [key=2, style=dotted];
d152 -> d153  [key=0, style=solid];
d203 -> d26  [key=2, style=dotted];
d203 -> d204  [key=0, style=solid];
d123 -> d92  [key=2, style=dotted];
d123 -> d124  [key=0, style=solid];
d494 -> d130  [color=darkseagreen4, key=1, label=a, style=dashed];
d129 -> d130  [key=0, style=solid];
d131 -> d129  [color=blue, key=0, style=bold];
d155 -> d156  [key=0, style=solid];
d155 -> d150  [key=2, style=dotted];
d157 -> d154  [color=blue, key=0, style=bold];
d208 -> d92  [key=2, style=dotted];
d208 -> d209  [key=0, style=solid];
d490 -> d488  [color=blue, key=0, style=bold];
d309 -> d310  [key=0, style=solid];
d21 -> d22  [key=0, style=solid];
d21 -> d21  [color=darkorchid, key=3, label="Local variable string json", style=bold];
d124 -> d120  [color=blue, key=0, style=bold];
d128 -> d125  [color=blue, key=0, style=bold];
d135 -> d132  [color=blue, key=0, style=bold];
d136 -> d137  [key=0, style=solid];
d495 -> d137  [color=darkseagreen4, key=1, label=a, style=dashed];
d138 -> d136  [color=blue, key=0, style=bold];
d142 -> d139  [color=blue, key=0, style=bold];
d143 -> d144  [key=0, style=solid];
d496 -> d144  [color=darkseagreen4, key=1, label=a, style=dashed];
d145 -> d143  [color=blue, key=0, style=bold];
d180 -> d177  [color=blue, key=0, style=bold];
d181 -> d182  [key=0, style=solid];
d500 -> d182  [color=darkseagreen4, key=1, label=a, style=dashed];
d183 -> d181  [color=blue, key=0, style=bold];
d191 -> d184  [color=blue, key=0, style=bold];
d193 -> d194  [key=0, style=solid];
d501 -> d194  [color=darkseagreen4, key=1, label=a, style=dashed];
d501 -> d197  [color=darkseagreen4, key=1, label=a, style=dashed];
d501 -> d200  [color=darkseagreen4, key=1, label=a, style=dashed];
d501 -> d203  [color=darkseagreen4, key=1, label=a, style=dashed];
d195 -> d193  [color=blue, key=0, style=bold];
d196 -> d197  [key=0, style=solid];
d198 -> d196  [color=blue, key=0, style=bold];
d189 -> d190  [key=0, style=solid];
d189 -> d203  [color=darkseagreen4, key=1, label=a, style=dashed];
d189 -> d192  [key=2, style=dotted];
d199 -> d200  [key=0, style=solid];
d201 -> d199  [color=blue, key=0, style=bold];
d209 -> d205  [color=blue, key=0, style=bold];
d213 -> d210  [color=blue, key=0, style=bold];
d214 -> d215  [key=0, style=solid];
d502 -> d215  [color=darkseagreen4, key=1, label=a, style=dashed];
d216 -> d214  [color=blue, key=0, style=bold];
d147 -> d148  [key=0, style=solid];
d147 -> d152  [color=darkseagreen4, key=1, label=c, style=dashed];
d147 -> d150  [key=2, style=dotted];
d149 -> d146  [color=blue, key=0, style=bold];
d151 -> d152  [key=0, style=solid];
d202 -> d203  [key=0, style=solid];
d497 -> d152  [color=darkseagreen4, key=1, label=c, style=dashed];
d153 -> d151  [color=blue, key=0, style=bold];
d204 -> d202  [color=blue, key=0, style=bold];
d154 -> d155  [key=0, style=solid];
d146 -> d147  [key=0, style=solid];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> d293  [key=2, style=dotted];
m0_1 -> m0_9  [key=2, style=dotted];
m0_1 -> m0_3  [color=darkseagreen4, key=1, label=o1, style=dashed];
m0_1 -> m0_5  [color=darkseagreen4, key=1, label=o1, style=dashed];
m0_1 -> m0_6  [color=darkseagreen4, key=1, label=o1, style=dashed];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_10  [key=2, style=dotted];
m0_2 -> m0_11  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_12  [key=2, style=dotted];
m0_3 -> m0_5  [color=darkseagreen4, key=1, label=o2, style=dashed];
m0_3 -> m0_6  [color=darkseagreen4, key=1, label=o2, style=dashed];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_13  [key=2, style=dotted];
m0_5 -> m0_14  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_15  [key=2, style=dotted];
m0_6 -> m0_14  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_10  [key=2, style=dotted];
m0_4 -> m0_11  [key=2, style=dotted];
m0_7 -> m0_0  [color=blue, key=0, style=bold];
m1_33 -> m1_34  [key=0, style=solid];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_59  [key=2, style=dotted];
m1_34 -> m1_36  [color=darkseagreen4, key=1, label=test, style=dashed];
m1_34 -> m1_37  [color=darkseagreen4, key=1, label=test, style=dashed];
m1_34 -> m1_38  [color=darkseagreen4, key=1, label=test, style=dashed];
m1_34 -> m1_39  [color=darkseagreen4, key=1, label=test, style=dashed];
m1_34 -> m1_43  [color=darkseagreen4, key=1, label=test, style=dashed];
m1_34 -> m1_47  [color=darkseagreen4, key=1, label=test, style=dashed];
m1_34 -> m1_53  [color=darkseagreen4, key=1, label=test, style=dashed];
m1_35 -> m1_36  [key=0, style=solid];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_60  [key=2, style=dotted];
m1_37 -> m1_38  [key=0, style=solid];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_61  [key=2, style=dotted];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> d448  [key=2, style=dotted];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_63  [key=2, style=dotted];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_63  [key=2, style=dotted];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_0  [key=2, style=dotted];
m1_53 -> m1_57  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_62  [key=2, style=dotted];
m1_40 -> m1_42  [color=darkseagreen4, key=1, label=address, style=dashed];
m1_40 -> m1_43  [color=darkseagreen4, key=1, label=address, style=dashed];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_60  [key=2, style=dotted];
m1_42 -> m1_43  [key=0, style=solid];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_62  [key=2, style=dotted];
m1_44 -> m1_46  [color=darkseagreen4, key=1, label=address, style=dashed];
m1_44 -> m1_47  [color=darkseagreen4, key=1, label=address, style=dashed];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_60  [key=2, style=dotted];
m1_46 -> m1_47  [key=0, style=solid];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_64  [key=2, style=dotted];
m1_48 -> m1_55  [color=darkseagreen4, key=1, label=timed, style=dashed];
m1_48 -> m1_56  [color=darkseagreen4, key=1, label=timed, style=dashed];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_65  [key=2, style=dotted];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_66  [key=2, style=dotted];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_67  [key=2, style=dotted];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_57  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_50 -> m1_50  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_50 -> m1_0  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_54  [color=darkseagreen4, key=1, label=x, style=dashed];
m1_51 -> m1_51  [color=darkorchid, key=3, label="Local variable int x", style=bold];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_67  [key=2, style=dotted];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_55  [key=0, style=solid];
m1_54 -> m1_52  [key=0, style=solid];
m1_54 -> m1_54  [color=darkseagreen4, key=1, label=x, style=dashed];
m1_58 -> m1_33  [color=blue, key=0, style=bold];
m1_68 -> m1_69  [key=0, style=solid];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_77  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_69 -> m1_69  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_78  [color=darkseagreen4, key=1, label=x, style=dashed];
m1_70 -> m1_51  [color=darkorchid, key=3, label="Local variable int x", style=bold];
m1_77 -> m1_78  [key=0, style=solid];
m1_77 -> m1_80  [key=2, style=dotted];
m1_77 -> m1_81  [key=2, style=dotted];
m1_71 -> m1_72  [key=0, style=solid];
m1_71 -> m1_79  [key=0, style=solid];
m1_78 -> m1_71  [key=0, style=solid];
m1_78 -> m1_78  [color=darkseagreen4, key=1, label=x, style=dashed];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_19  [key=2, style=dotted];
m1_72 -> m1_74  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_72 -> m1_75  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_72 -> m1_76  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_72 -> m1_77  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_73 -> m1_74  [key=0, style=solid];
m1_74 -> m1_75  [key=0, style=solid];
m1_75 -> m1_76  [key=0, style=solid];
m1_76 -> m1_77  [key=0, style=solid];
m1_79 -> m1_68  [color=blue, key=0, style=bold];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_28  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_30  [key=2, style=dotted];
m1_26 -> m1_28  [color=darkseagreen4, key=1, label=ser, style=dashed];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_32  [key=2, style=dotted];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> d448  [key=2, style=dotted];
m1_29 -> m1_25  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_13  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_0 -> m1_14  [color=darkorchid, key=3, label="method methodReturn string SerializeJsonNet", style=bold];
m1_0 -> m1_34  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_18  [key=2, style=dotted];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_22  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_19  [key=2, style=dotted];
m1_2 -> m1_4  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_2 -> m1_5  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_2 -> m1_6  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_2 -> m1_13  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3 -> m1_4  [key=0, style=solid];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_6 -> m1_7  [key=0, style=solid];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_20  [key=2, style=dotted];
m1_7 -> m1_14  [color=darkseagreen4, key=1, label=sw, style=dashed];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_21  [key=2, style=dotted];
m1_8 -> m1_10  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_8 -> m1_11  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_8 -> m1_12  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_8 -> m1_13  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_8 -> m1_15  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_23  [key=2, style=dotted];
m1_14 -> m1_16  [color=darkseagreen4, key=1, label=output, style=dashed];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_11  [key=0, style=solid];
m1_10 -> m1_12  [key=0, style=solid];
m1_11 -> m1_12  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_24  [key=2, style=dotted];
m1_16 -> m1_17  [key=0, style=solid];
m1_17 -> m1_0  [color=blue, key=0, style=bold];
m1_82 -> m1_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m5_6 -> m5_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m5_6 -> m5_0  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken t", style=bold];
m5_6 -> m5_11  [color=darkorchid, key=3, label="method methodReturn bool IsMatch", style=bold];
m5_6 -> m5_12  [color=darkorchid, key=3, label="method methodReturn bool IsMatch", style=bold];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> m5_13  [key=0, style=solid];
m5_7 -> m5_18  [key=0, style=solid];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_9  [key=0, style=solid];
m5_10 -> m5_0  [key=2, style=dotted];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_14  [key=0, style=solid];
m5_15 -> m5_0  [key=2, style=dotted];
m5_8 -> m5_9  [key=0, style=solid];
m5_13 -> m5_14  [key=0, style=solid];
m5_18 -> m5_19  [key=0, style=solid];
m5_18 -> m5_20  [key=2, style=dotted];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_12  [key=0, style=solid];
m5_12 -> m5_19  [key=0, style=solid];
m5_11 -> m5_19  [key=0, style=solid];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_17  [key=0, style=solid];
m5_17 -> m5_19  [key=0, style=solid];
m5_16 -> m5_19  [key=0, style=solid];
m5_19 -> m5_6  [color=blue, key=0, style=bold];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_0  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken t", style=bold];
m5_21 -> m5_12  [color=darkorchid, key=3, label="method methodReturn bool IsMatch", style=bold];
m5_21 -> m5_11  [color=darkorchid, key=3, label="method methodReturn bool IsMatch", style=bold];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_49  [key=2, style=dotted];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_47  [key=0, style=solid];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_27  [color=red, key=1, label=v, style=dashed];
m5_24 -> m5_30  [color=red, key=1, label=v, style=dashed];
m5_24 -> m5_33  [color=darkseagreen4, key=1, label=v, style=dashed];
m5_24 -> m5_36  [color=darkseagreen4, key=1, label=v, style=dashed];
m5_24 -> m5_39  [color=darkseagreen4, key=1, label=v, style=dashed];
m5_24 -> m5_42  [color=darkseagreen4, key=1, label=v, style=dashed];
m5_47 -> m5_48  [key=0, style=solid];
m5_25 -> m5_26  [key=0, style=solid];
m5_25 -> m5_29  [key=0, style=solid];
m5_25 -> m5_32  [key=0, style=solid];
m5_25 -> m5_35  [key=0, style=solid];
m5_25 -> m5_38  [key=0, style=solid];
m5_25 -> m5_41  [key=0, style=solid];
m5_25 -> m5_44  [key=0, style=solid];
m5_25 -> m5_46  [key=0, style=solid];
m5_27 -> m5_28  [color=red, key=0, style=solid];
m5_27 -> m5_23  [color=red, key=0, style=solid];
m5_27 -> m5_50  [color=red, key=2, style=dotted];
m5_30 -> m5_31  [color=red, key=0, style=solid];
m5_30 -> m5_23  [color=red, key=0, style=solid];
m5_30 -> m5_50  [color=red, key=2, style=dotted];
m5_33 -> m5_34  [key=0, style=solid];
m5_33 -> m5_23  [key=0, style=solid];
m5_33 -> m5_51  [key=2, style=dotted];
m5_36 -> m5_37  [key=0, style=solid];
m5_36 -> m5_23  [key=0, style=solid];
m5_36 -> m5_51  [key=2, style=dotted];
m5_39 -> m5_40  [key=0, style=solid];
m5_39 -> m5_23  [key=0, style=solid];
m5_39 -> m5_51  [key=2, style=dotted];
m5_42 -> m5_43  [key=0, style=solid];
m5_42 -> m5_23  [key=0, style=solid];
m5_42 -> m5_51  [key=2, style=dotted];
m5_26 -> m5_27  [color=red, key=0, style=solid];
m5_29 -> m5_30  [color=red, key=0, style=solid];
m5_32 -> m5_33  [key=0, style=solid];
m5_35 -> m5_36  [key=0, style=solid];
m5_38 -> m5_39  [key=0, style=solid];
m5_41 -> m5_42  [key=0, style=solid];
m5_44 -> m5_45  [key=0, style=solid];
m5_46 -> m5_48  [key=0, style=solid];
m5_46 -> m5_20  [key=2, style=dotted];
m5_28 -> m5_48  [key=0, style=solid];
m5_31 -> m5_48  [key=0, style=solid];
m5_34 -> m5_48  [key=0, style=solid];
m5_37 -> m5_48  [key=0, style=solid];
m5_40 -> m5_48  [key=0, style=solid];
m5_43 -> m5_48  [key=0, style=solid];
m5_45 -> m5_48  [key=0, style=solid];
m5_48 -> m5_21  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_6  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken t", style=bold];
m5_0 -> m5_21  [color=darkorchid, key=3, label="method methodReturn bool IsMatch", style=bold];
m5_1 -> m5_0  [color=blue, key=0, style=bold];
m5_2 -> m5_3  [key=0, style=solid];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> d448  [key=2, style=dotted];
m5_4 -> m5_2  [color=blue, key=0, style=bold];
m5_52 -> m5_3  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.CompositeExpression", style=dashed];
m5_52 -> m5_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.CompositeExpression", style=dashed];
m5_52 -> m5_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.CompositeExpression", style=dashed];
m5_52 -> m5_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.CompositeExpression", style=dashed];
m5_53 -> m5_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression", style=dashed];
m5_53 -> m5_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression", style=dashed];
m5_53 -> m5_27  [color=red, key=1, label="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression", style=dashed];
m5_53 -> m5_30  [color=red, key=1, label="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression", style=dashed];
m5_53 -> m5_33  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression", style=dashed];
m5_53 -> m5_36  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression", style=dashed];
m5_53 -> m5_39  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression", style=dashed];
m5_53 -> m5_42  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression", style=dashed];
m7_173 -> m7_174  [key=0, style=solid];
m7_174 -> m7_175  [key=0, style=solid];
m7_174 -> m7_176  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_174 -> m7_186  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_174 -> m7_174  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_175 -> m7_176  [key=0, style=solid];
m7_175 -> m7_99  [key=2, style=dotted];
m7_175 -> m7_186  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_175 -> m7_177  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_175 -> m7_178  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_175 -> m7_179  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_175 -> m7_180  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_175 -> m7_181  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_175 -> m7_182  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_175 -> m7_183  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_176 -> m7_177  [key=0, style=solid];
m7_176 -> m7_169  [key=2, style=dotted];
m7_176 -> m7_185  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_177 -> m7_178  [key=0, style=solid];
m7_177 -> m7_44  [key=2, style=dotted];
m7_178 -> m7_179  [key=0, style=solid];
m7_178 -> m7_44  [key=2, style=dotted];
m7_179 -> m7_180  [key=0, style=solid];
m7_179 -> m7_44  [key=2, style=dotted];
m7_180 -> m7_181  [key=0, style=solid];
m7_180 -> m7_44  [key=2, style=dotted];
m7_181 -> m7_182  [key=0, style=solid];
m7_181 -> m7_44  [key=2, style=dotted];
m7_182 -> m7_183  [key=0, style=solid];
m7_182 -> m7_44  [key=2, style=dotted];
m7_183 -> m7_184  [key=0, style=solid];
m7_183 -> m7_44  [key=2, style=dotted];
m7_184 -> m7_173  [color=blue, key=0, style=bold];
m7_250 -> m7_251  [key=0, style=solid];
m7_251 -> m7_252  [key=0, style=solid];
m7_251 -> m7_253  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_251 -> m7_251  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_252 -> m7_253  [key=0, style=solid];
m7_252 -> m7_99  [key=2, style=dotted];
m7_252 -> m7_254  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_252 -> m7_255  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_252 -> m7_256  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_252 -> m7_257  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_253 -> m7_254  [key=0, style=solid];
m7_253 -> m7_40  [key=2, style=dotted];
m7_253 -> m7_41  [key=2, style=dotted];
m7_253 -> m7_66  [key=2, style=dotted];
m7_254 -> m7_255  [key=0, style=solid];
m7_254 -> m7_44  [key=2, style=dotted];
m7_255 -> m7_256  [key=0, style=solid];
m7_255 -> m7_44  [key=2, style=dotted];
m7_256 -> m7_257  [key=0, style=solid];
m7_256 -> m7_44  [key=2, style=dotted];
m7_257 -> m7_258  [key=0, style=solid];
m7_257 -> m7_44  [key=2, style=dotted];
m7_258 -> m7_250  [color=blue, key=0, style=bold];
m7_585 -> m7_586  [key=0, style=solid];
m7_586 -> m7_587  [key=0, style=solid];
m7_586 -> m7_591  [key=2, style=dotted];
m7_586 -> m7_588  [color=darkseagreen4, key=1, label=sb, style=dashed];
m7_586 -> m7_589  [color=darkseagreen4, key=1, label=sb, style=dashed];
m7_587 -> m7_588  [key=0, style=solid];
m7_587 -> m7_589  [key=0, style=solid];
m7_588 -> m7_587  [key=0, style=solid];
m7_588 -> m7_592  [key=2, style=dotted];
m7_589 -> m7_590  [key=0, style=solid];
m7_589 -> m7_593  [key=2, style=dotted];
m7_590 -> m7_585  [color=blue, key=0, style=bold];
m7_20 -> m7_21  [key=0, style=solid];
m7_21 -> m7_22  [key=0, style=solid];
m7_21 -> m7_36  [key=2, style=dotted];
m7_21 -> m7_23  [color=darkseagreen4, key=1, label=staff, style=dashed];
m7_21 -> m7_24  [color=darkseagreen4, key=1, label=staff, style=dashed];
m7_21 -> m7_26  [color=darkseagreen4, key=1, label=staff, style=dashed];
m7_22 -> m7_23  [key=0, style=solid];
m7_23 -> m7_24  [key=0, style=solid];
m7_23 -> m7_37  [key=2, style=dotted];
m7_24 -> m7_25  [key=0, style=solid];
m7_24 -> m7_38  [key=2, style=dotted];
m7_26 -> m7_27  [key=0, style=solid];
m7_26 -> m7_40  [key=2, style=dotted];
m7_26 -> m7_41  [key=2, style=dotted];
m7_26 -> m7_42  [key=2, style=dotted];
m7_25 -> m7_26  [key=0, style=solid];
m7_25 -> m7_39  [key=2, style=dotted];
m7_25 -> m7_27  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_27 -> m7_28  [key=0, style=solid];
m7_27 -> m7_30  [color=darkseagreen4, key=1, label=memoryTraceWriter, style=dashed];
m7_28 -> m7_29  [key=0, style=solid];
m7_28 -> m7_43  [key=2, style=dotted];
m7_28 -> m7_33  [color=darkseagreen4, key=1, label=output, style=dashed];
m7_30 -> m7_31  [key=0, style=solid];
m7_30 -> m7_45  [key=2, style=dotted];
m7_30 -> m7_46  [key=2, style=dotted];
m7_30 -> m7_44  [key=2, style=dotted];
m7_29 -> m7_30  [key=0, style=solid];
m7_29 -> m7_44  [key=2, style=dotted];
m7_33 -> m7_34  [key=0, style=solid];
m7_33 -> m7_47  [key=2, style=dotted];
m7_33 -> m7_33  [color=darkseagreen4, key=1, label=output, style=dashed];
m7_31 -> m7_32  [key=0, style=solid];
m7_31 -> m7_31  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_32 -> m7_33  [key=0, style=solid];
m7_32 -> m7_47  [key=2, style=dotted];
m7_32 -> m7_32  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_32 -> m7_34  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_34 -> m7_35  [key=0, style=solid];
m7_34 -> m7_48  [key=2, style=dotted];
m7_34 -> m7_49  [key=2, style=dotted];
m7_35 -> m7_20  [color=blue, key=0, style=bold];
m7_259 -> m7_260  [key=0, style=solid];
m7_260 -> m7_261  [key=0, style=solid];
m7_260 -> m7_99  [key=2, style=dotted];
m7_260 -> m7_262  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_260 -> m7_263  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_260 -> m7_264  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_260 -> m7_265  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_260 -> m7_266  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_260 -> m7_267  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_260 -> m7_268  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_260 -> m7_269  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_260 -> m7_270  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_260 -> m7_271  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_260 -> m7_272  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_261 -> m7_262  [key=0, style=solid];
m7_261 -> m7_261  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_262 -> m7_263  [key=0, style=solid];
m7_262 -> m7_40  [key=2, style=dotted];
m7_262 -> m7_274  [key=2, style=dotted];
m7_263 -> m7_264  [key=0, style=solid];
m7_263 -> m7_44  [key=2, style=dotted];
m7_264 -> m7_265  [key=0, style=solid];
m7_264 -> m7_44  [key=2, style=dotted];
m7_265 -> m7_266  [key=0, style=solid];
m7_265 -> m7_44  [key=2, style=dotted];
m7_266 -> m7_267  [key=0, style=solid];
m7_266 -> m7_44  [key=2, style=dotted];
m7_267 -> m7_268  [key=0, style=solid];
m7_267 -> m7_129  [key=2, style=dotted];
m7_267 -> m7_49  [key=2, style=dotted];
m7_268 -> m7_269  [key=0, style=solid];
m7_268 -> m7_44  [key=2, style=dotted];
m7_269 -> m7_270  [key=0, style=solid];
m7_269 -> m7_44  [key=2, style=dotted];
m7_270 -> m7_271  [key=0, style=solid];
m7_270 -> m7_129  [key=2, style=dotted];
m7_270 -> m7_49  [key=2, style=dotted];
m7_271 -> m7_272  [key=0, style=solid];
m7_271 -> m7_129  [key=2, style=dotted];
m7_271 -> m7_49  [key=2, style=dotted];
m7_272 -> m7_273  [key=0, style=solid];
m7_272 -> m7_129  [key=2, style=dotted];
m7_272 -> m7_49  [key=2, style=dotted];
m7_273 -> m7_259  [color=blue, key=0, style=bold];
m7_302 -> m7_303  [key=0, style=solid];
m7_303 -> m7_304  [key=0, style=solid];
m7_303 -> m7_99  [key=2, style=dotted];
m7_303 -> m7_305  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_303 -> m7_308  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_304 -> m7_305  [key=0, style=solid];
m7_304 -> m7_304  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_305 -> m7_306  [key=0, style=solid];
m7_305 -> m7_40  [key=2, style=dotted];
m7_305 -> m7_66  [key=2, style=dotted];
m7_305 -> m7_307  [color=darkseagreen4, key=1, label=c, style=dashed];
m7_308 -> m7_309  [key=0, style=solid];
m7_308 -> m7_44  [key=2, style=dotted];
m7_306 -> m7_307  [key=0, style=solid];
m7_306 -> m7_310  [key=2, style=dotted];
m7_307 -> m7_308  [key=0, style=solid];
m7_307 -> m7_44  [key=2, style=dotted];
m7_309 -> m7_302  [color=blue, key=0, style=bold];
m7_275 -> m7_276  [key=0, style=solid];
m7_276 -> m7_277  [key=0, style=solid];
m7_276 -> m7_99  [key=2, style=dotted];
m7_276 -> m7_284  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_276 -> m7_278  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_276 -> m7_279  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_276 -> m7_280  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_276 -> m7_281  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_277 -> m7_278  [key=0, style=solid];
m7_277 -> m7_169  [key=2, style=dotted];
m7_277 -> m7_283  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_278 -> m7_279  [key=0, style=solid];
m7_278 -> m7_129  [key=2, style=dotted];
m7_278 -> m7_49  [key=2, style=dotted];
m7_279 -> m7_280  [key=0, style=solid];
m7_279 -> m7_44  [key=2, style=dotted];
m7_280 -> m7_281  [key=0, style=solid];
m7_280 -> m7_44  [key=2, style=dotted];
m7_281 -> m7_282  [key=0, style=solid];
m7_281 -> m7_44  [key=2, style=dotted];
m7_282 -> m7_275  [color=blue, key=0, style=bold];
m7_50 -> m7_51  [key=0, style=solid];
m7_51 -> m7_52  [key=0, style=solid];
m7_51 -> m7_57  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_51 -> m7_62  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_51 -> m7_51  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_52 -> m7_53  [key=0, style=solid];
m7_52 -> m7_36  [key=2, style=dotted];
m7_52 -> m7_54  [color=darkseagreen4, key=1, label=staff, style=dashed];
m7_52 -> m7_55  [color=darkseagreen4, key=1, label=staff, style=dashed];
m7_57 -> m7_58  [key=0, style=solid];
m7_57 -> m7_40  [key=2, style=dotted];
m7_57 -> m7_41  [key=2, style=dotted];
m7_57 -> m7_66  [key=2, style=dotted];
m7_62 -> m7_63  [key=0, style=solid];
m7_62 -> m7_47  [key=2, style=dotted];
m7_62 -> m7_62  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_62 -> m7_64  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_53 -> m7_54  [key=0, style=solid];
m7_54 -> m7_55  [key=0, style=solid];
m7_54 -> m7_37  [key=2, style=dotted];
m7_55 -> m7_56  [key=0, style=solid];
m7_55 -> m7_38  [key=2, style=dotted];
m7_56 -> m7_57  [key=0, style=solid];
m7_56 -> m7_39  [key=2, style=dotted];
m7_56 -> m7_58  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_58 -> m7_59  [key=0, style=solid];
m7_58 -> m7_61  [color=darkseagreen4, key=1, label=memoryTraceWriter, style=dashed];
m7_59 -> m7_60  [key=0, style=solid];
m7_59 -> m7_43  [key=2, style=dotted];
m7_59 -> m7_63  [color=darkseagreen4, key=1, label=output, style=dashed];
m7_61 -> m7_62  [key=0, style=solid];
m7_61 -> m7_45  [key=2, style=dotted];
m7_61 -> m7_46  [key=2, style=dotted];
m7_61 -> m7_44  [key=2, style=dotted];
m7_60 -> m7_61  [key=0, style=solid];
m7_60 -> m7_44  [key=2, style=dotted];
m7_63 -> m7_64  [key=0, style=solid];
m7_63 -> m7_47  [key=2, style=dotted];
m7_63 -> m7_63  [color=darkseagreen4, key=1, label=output, style=dashed];
m7_64 -> m7_65  [key=0, style=solid];
m7_64 -> m7_48  [key=2, style=dotted];
m7_64 -> m7_49  [key=2, style=dotted];
m7_65 -> m7_50  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_13  [key=2, style=dotted];
m7_1 -> m7_11  [color=darkseagreen4, key=1, label=sw, style=dashed];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_14  [key=2, style=dotted];
m7_2 -> m7_4  [color=darkseagreen4, key=1, label=listener, style=dashed];
m7_11 -> m7_12  [key=0, style=solid];
m7_11 -> m7_18  [key=2, style=dotted];
m7_11 -> m7_19  [key=2, style=dotted];
m7_3 -> m7_4  [key=0, style=solid];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_15  [key=2, style=dotted];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_16  [key=2, style=dotted];
m7_5 -> m7_7  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_5 -> m7_8  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_5 -> m7_9  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_5 -> m7_10  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_17  [key=2, style=dotted];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_17  [key=2, style=dotted];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_17  [key=2, style=dotted];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_17  [key=2, style=dotted];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_17  [key=2, style=dotted];
m7_12 -> m7_0  [color=blue, key=0, style=bold];
m7_227 -> m7_228  [key=0, style=solid];
m7_228 -> m7_229  [key=0, style=solid];
m7_228 -> m7_99  [key=2, style=dotted];
m7_228 -> m7_230  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_228 -> m7_231  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_228 -> m7_232  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_228 -> m7_233  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_228 -> m7_234  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_228 -> m7_235  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_228 -> m7_236  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_228 -> m7_237  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_228 -> m7_238  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_228 -> m7_239  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_229 -> m7_230  [key=0, style=solid];
m7_229 -> m7_37  [key=2, style=dotted];
m7_229 -> m7_102  [key=2, style=dotted];
m7_229 -> m7_101  [key=2, style=dotted];
m7_230 -> m7_231  [key=0, style=solid];
m7_230 -> m7_40  [key=2, style=dotted];
m7_230 -> m7_200  [key=2, style=dotted];
m7_231 -> m7_232  [key=0, style=solid];
m7_231 -> m7_44  [key=2, style=dotted];
m7_232 -> m7_233  [key=0, style=solid];
m7_232 -> m7_44  [key=2, style=dotted];
m7_233 -> m7_234  [key=0, style=solid];
m7_233 -> m7_44  [key=2, style=dotted];
m7_234 -> m7_235  [key=0, style=solid];
m7_234 -> m7_44  [key=2, style=dotted];
m7_235 -> m7_236  [key=0, style=solid];
m7_235 -> m7_44  [key=2, style=dotted];
m7_236 -> m7_237  [key=0, style=solid];
m7_236 -> m7_44  [key=2, style=dotted];
m7_237 -> m7_238  [key=0, style=solid];
m7_237 -> m7_44  [key=2, style=dotted];
m7_238 -> m7_239  [key=0, style=solid];
m7_238 -> m7_44  [key=2, style=dotted];
m7_239 -> m7_240  [key=0, style=solid];
m7_239 -> m7_44  [key=2, style=dotted];
m7_240 -> m7_227  [color=blue, key=0, style=bold];
m7_574 -> m7_575  [key=0, style=solid];
m7_575 -> m7_576  [key=0, style=solid];
m7_576 -> m7_574  [color=blue, key=0, style=bold];
m7_99 -> m7_577  [key=0, style=solid];
m7_577 -> m7_578  [key=0, style=solid];
m7_578 -> m7_579  [key=0, style=solid];
m7_578 -> m7_37  [key=2, style=dotted];
m7_579 -> m7_99  [color=blue, key=0, style=bold];
m7_375 -> m7_376  [key=0, style=solid];
m7_376 -> m7_377  [key=0, style=solid];
m7_376 -> m7_437  [key=2, style=dotted];
m7_377 -> m7_378  [key=0, style=solid];
m7_377 -> m7_438  [key=2, style=dotted];
m7_378 -> m7_379  [key=0, style=solid];
m7_378 -> m7_439  [key=2, style=dotted];
m7_378 -> m7_380  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_381  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_382  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_383  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_384  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_385  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_386  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_387  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_388  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_389  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_390  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_391  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_392  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_393  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_394  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_395  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_396  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_397  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_398  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_399  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_400  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_401  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_402  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_403  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_404  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_405  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_406  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_407  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_408  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_409  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_410  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_411  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_412  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_413  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_414  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_415  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_416  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_417  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_418  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_419  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_420  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_421  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_422  [color=red, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_423  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_424  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_425  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_426  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_427  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_428  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_429  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_430  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_431  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_432  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_433  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_378 -> m7_435  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_379 -> m7_380  [key=0, style=solid];
m7_379 -> m7_440  [key=2, style=dotted];
m7_380 -> m7_381  [key=0, style=solid];
m7_380 -> m7_441  [key=2, style=dotted];
m7_381 -> m7_382  [key=0, style=solid];
m7_381 -> m7_442  [key=2, style=dotted];
m7_382 -> m7_383  [key=0, style=solid];
m7_382 -> m7_443  [key=2, style=dotted];
m7_383 -> m7_384  [key=0, style=solid];
m7_383 -> m7_38  [key=2, style=dotted];
m7_383 -> m7_444  [key=2, style=dotted];
m7_384 -> m7_385  [key=0, style=solid];
m7_384 -> m7_445  [key=2, style=dotted];
m7_384 -> m7_446  [key=2, style=dotted];
m7_384 -> m7_447  [key=2, style=dotted];
m7_385 -> m7_386  [key=0, style=solid];
m7_385 -> m7_448  [key=2, style=dotted];
m7_386 -> m7_387  [key=0, style=solid];
m7_386 -> m7_449  [key=2, style=dotted];
m7_387 -> m7_388  [key=0, style=solid];
m7_387 -> m7_450  [key=2, style=dotted];
m7_388 -> m7_389  [key=0, style=solid];
m7_388 -> m7_451  [key=2, style=dotted];
m7_389 -> m7_390  [key=0, style=solid];
m7_389 -> m7_452  [key=2, style=dotted];
m7_390 -> m7_391  [key=0, style=solid];
m7_390 -> m7_453  [key=2, style=dotted];
m7_391 -> m7_392  [key=0, style=solid];
m7_391 -> m7_454  [key=2, style=dotted];
m7_392 -> m7_393  [key=0, style=solid];
m7_392 -> m7_451  [key=2, style=dotted];
m7_393 -> m7_394  [key=0, style=solid];
m7_393 -> m7_455  [key=2, style=dotted];
m7_394 -> m7_395  [key=0, style=solid];
m7_394 -> m7_456  [key=2, style=dotted];
m7_395 -> m7_396  [key=0, style=solid];
m7_395 -> m7_457  [key=2, style=dotted];
m7_396 -> m7_397  [key=0, style=solid];
m7_396 -> m7_458  [key=2, style=dotted];
m7_397 -> m7_398  [key=0, style=solid];
m7_397 -> m7_459  [key=2, style=dotted];
m7_398 -> m7_399  [key=0, style=solid];
m7_398 -> m7_460  [key=2, style=dotted];
m7_399 -> m7_400  [key=0, style=solid];
m7_399 -> m7_38  [key=2, style=dotted];
m7_399 -> m7_461  [key=2, style=dotted];
m7_400 -> m7_401  [key=0, style=solid];
m7_400 -> m7_445  [key=2, style=dotted];
m7_400 -> m7_446  [key=2, style=dotted];
m7_400 -> m7_462  [key=2, style=dotted];
m7_401 -> m7_402  [key=0, style=solid];
m7_401 -> m7_463  [key=2, style=dotted];
m7_402 -> m7_403  [key=0, style=solid];
m7_402 -> m7_464  [key=2, style=dotted];
m7_403 -> m7_404  [key=0, style=solid];
m7_403 -> m7_465  [key=2, style=dotted];
m7_404 -> m7_405  [key=0, style=solid];
m7_404 -> m7_466  [key=2, style=dotted];
m7_405 -> m7_406  [key=0, style=solid];
m7_405 -> m7_467  [key=2, style=dotted];
m7_406 -> m7_407  [key=0, style=solid];
m7_406 -> m7_468  [key=2, style=dotted];
m7_407 -> m7_408  [key=0, style=solid];
m7_407 -> m7_469  [key=2, style=dotted];
m7_408 -> m7_409  [key=0, style=solid];
m7_408 -> m7_466  [key=2, style=dotted];
m7_409 -> m7_410  [key=0, style=solid];
m7_409 -> m7_470  [key=2, style=dotted];
m7_410 -> m7_411  [key=0, style=solid];
m7_410 -> m7_471  [key=2, style=dotted];
m7_411 -> m7_412  [key=0, style=solid];
m7_411 -> m7_472  [key=2, style=dotted];
m7_412 -> m7_413  [key=0, style=solid];
m7_412 -> m7_473  [key=2, style=dotted];
m7_413 -> m7_414  [key=0, style=solid];
m7_413 -> m7_474  [key=2, style=dotted];
m7_414 -> m7_415  [key=0, style=solid];
m7_414 -> m7_475  [key=2, style=dotted];
m7_415 -> m7_416  [key=0, style=solid];
m7_415 -> m7_476  [key=2, style=dotted];
m7_415 -> m7_477  [key=2, style=dotted];
m7_416 -> m7_417  [key=0, style=solid];
m7_416 -> m7_478  [key=2, style=dotted];
m7_417 -> m7_418  [key=0, style=solid];
m7_417 -> m7_479  [key=2, style=dotted];
m7_417 -> m7_480  [key=2, style=dotted];
m7_418 -> m7_419  [key=0, style=solid];
m7_418 -> m7_481  [key=2, style=dotted];
m7_419 -> m7_420  [key=0, style=solid];
m7_419 -> m7_482  [key=2, style=dotted];
m7_419 -> m7_483  [key=2, style=dotted];
m7_420 -> m7_421  [key=0, style=solid];
m7_420 -> m7_484  [key=2, style=dotted];
m7_420 -> m7_485  [key=2, style=dotted];
m7_421 -> m7_422  [color=red, key=0, style=solid];
m7_421 -> m7_486  [key=2, style=dotted];
m7_422 -> m7_423  [color=red, key=0, style=solid];
m7_422 -> m7_487  [color=red, key=2, style=dotted];
m7_423 -> m7_424  [key=0, style=solid];
m7_423 -> m7_488  [key=2, style=dotted];
m7_424 -> m7_425  [key=0, style=solid];
m7_424 -> m7_489  [key=2, style=dotted];
m7_425 -> m7_426  [key=0, style=solid];
m7_425 -> m7_490  [key=2, style=dotted];
m7_426 -> m7_427  [key=0, style=solid];
m7_426 -> m7_451  [key=2, style=dotted];
m7_427 -> m7_428  [key=0, style=solid];
m7_427 -> m7_491  [key=2, style=dotted];
m7_428 -> m7_429  [key=0, style=solid];
m7_428 -> m7_492  [key=2, style=dotted];
m7_429 -> m7_430  [key=0, style=solid];
m7_429 -> m7_493  [key=2, style=dotted];
m7_430 -> m7_431  [key=0, style=solid];
m7_430 -> m7_494  [key=2, style=dotted];
m7_431 -> m7_432  [key=0, style=solid];
m7_431 -> m7_495  [key=2, style=dotted];
m7_432 -> m7_433  [key=0, style=solid];
m7_432 -> m7_496  [key=2, style=dotted];
m7_433 -> m7_434  [color=red, key=0, style=solid];
m7_433 -> m7_497  [key=2, style=dotted];
m7_435 -> m7_436  [key=0, style=solid];
m7_435 -> m7_498  [key=2, style=dotted];
m7_435 -> m7_19  [key=2, style=dotted];
m7_434 -> m7_435  [color=red, key=0, style=solid];
m7_434 -> m7_434  [color=red, key=3, label="Local variable string json", style=bold];
m7_436 -> m7_375  [color=blue, key=0, style=bold];
m7_84 -> m7_85  [key=0, style=solid];
m7_85 -> m7_86  [key=0, style=solid];
m7_85 -> m7_99  [key=2, style=dotted];
m7_85 -> m7_87  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_85 -> m7_88  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_85 -> m7_89  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_85 -> m7_90  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_85 -> m7_91  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_85 -> m7_92  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_85 -> m7_93  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_85 -> m7_94  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_85 -> m7_95  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_85 -> m7_96  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_85 -> m7_97  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_86 -> m7_87  [key=0, style=solid];
m7_86 -> m7_100  [key=2, style=dotted];
m7_86 -> m7_37  [key=2, style=dotted];
m7_86 -> m7_101  [key=2, style=dotted];
m7_86 -> m7_102  [key=2, style=dotted];
m7_86 -> m7_40  [key=2, style=dotted];
m7_86 -> m7_42  [key=2, style=dotted];
m7_87 -> m7_88  [key=0, style=solid];
m7_87 -> m7_44  [key=2, style=dotted];
m7_88 -> m7_89  [key=0, style=solid];
m7_88 -> m7_44  [key=2, style=dotted];
m7_89 -> m7_90  [key=0, style=solid];
m7_89 -> m7_44  [key=2, style=dotted];
m7_90 -> m7_91  [key=0, style=solid];
m7_90 -> m7_44  [key=2, style=dotted];
m7_91 -> m7_92  [key=0, style=solid];
m7_91 -> m7_44  [key=2, style=dotted];
m7_92 -> m7_93  [key=0, style=solid];
m7_92 -> m7_44  [key=2, style=dotted];
m7_93 -> m7_94  [key=0, style=solid];
m7_93 -> m7_44  [key=2, style=dotted];
m7_94 -> m7_95  [key=0, style=solid];
m7_94 -> m7_44  [key=2, style=dotted];
m7_95 -> m7_96  [key=0, style=solid];
m7_95 -> m7_44  [key=2, style=dotted];
m7_96 -> m7_97  [key=0, style=solid];
m7_96 -> m7_44  [key=2, style=dotted];
m7_97 -> m7_98  [key=0, style=solid];
m7_97 -> m7_103  [key=2, style=dotted];
m7_97 -> m7_104  [key=2, style=dotted];
m7_97 -> m7_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_98 -> m7_84  [color=blue, key=0, style=bold];
m7_210 -> m7_211  [key=0, style=solid];
m7_211 -> m7_212  [key=0, style=solid];
m7_211 -> m7_213  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_211 -> m7_211  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_212 -> m7_213  [key=0, style=solid];
m7_212 -> m7_99  [key=2, style=dotted];
m7_212 -> m7_214  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_212 -> m7_215  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_212 -> m7_216  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_213 -> m7_214  [key=0, style=solid];
m7_213 -> m7_40  [key=2, style=dotted];
m7_213 -> m7_66  [key=2, style=dotted];
m7_214 -> m7_215  [key=0, style=solid];
m7_214 -> m7_103  [key=2, style=dotted];
m7_214 -> m7_49  [key=2, style=dotted];
m7_214 -> m7_218  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_215 -> m7_216  [key=0, style=solid];
m7_215 -> m7_103  [key=2, style=dotted];
m7_215 -> m7_49  [key=2, style=dotted];
m7_215 -> m7_221  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_216 -> m7_217  [key=0, style=solid];
m7_216 -> m7_103  [key=2, style=dotted];
m7_216 -> m7_49  [key=2, style=dotted];
m7_216 -> m7_224  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_217 -> m7_210  [color=blue, key=0, style=bold];
m7_67 -> m7_68  [key=0, style=solid];
m7_68 -> m7_69  [key=0, style=solid];
m7_68 -> m7_39  [key=2, style=dotted];
m7_68 -> m7_71  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_68 -> m7_73  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_69 -> m7_70  [key=0, style=solid];
m7_69 -> m7_71  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_69 -> m7_72  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_69 -> m7_10  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m7_71 -> m7_72  [key=0, style=solid];
m7_71 -> m7_78  [key=2, style=dotted];
m7_71 -> m7_79  [key=2, style=dotted];
m7_73 -> m7_74  [key=0, style=solid];
m7_73 -> m7_45  [key=2, style=dotted];
m7_73 -> m7_80  [key=2, style=dotted];
m7_73 -> m7_75  [color=darkseagreen4, key=1, label=traceMessages, style=dashed];
m7_73 -> m7_76  [color=darkseagreen4, key=1, label=traceMessages, style=dashed];
m7_70 -> m7_71  [key=0, style=solid];
m7_70 -> m7_73  [key=0, style=solid];
m7_72 -> m7_70  [key=0, style=solid];
m7_72 -> m7_72  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_74 -> m7_75  [key=0, style=solid];
m7_74 -> m7_44  [key=2, style=dotted];
m7_75 -> m7_76  [key=0, style=solid];
m7_75 -> m7_81  [key=2, style=dotted];
m7_75 -> m7_82  [key=2, style=dotted];
m7_75 -> m7_49  [key=2, style=dotted];
m7_76 -> m7_77  [key=0, style=solid];
m7_76 -> m7_83  [key=2, style=dotted];
m7_76 -> m7_82  [key=2, style=dotted];
m7_76 -> m7_49  [key=2, style=dotted];
m7_77 -> m7_67  [color=blue, key=0, style=bold];
m7_108 -> m7_109  [key=0, style=solid];
m7_109 -> m7_110  [key=0, style=solid];
m7_109 -> m7_99  [key=2, style=dotted];
m7_109 -> m7_116  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_109 -> m7_117  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_109 -> m7_118  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_109 -> m7_119  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_109 -> m7_120  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_109 -> m7_121  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_109 -> m7_122  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_109 -> m7_123  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_109 -> m7_124  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_109 -> m7_125  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_109 -> m7_126  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_109 -> m7_127  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_110 -> m7_111  [key=0, style=solid];
m7_110 -> m7_40  [key=2, style=dotted];
m7_110 -> m7_66  [key=2, style=dotted];
m7_110 -> m7_112  [color=darkseagreen4, key=1, label=o2, style=dashed];
m7_110 -> m7_113  [color=darkseagreen4, key=1, label=o2, style=dashed];
m7_110 -> m7_114  [color=darkseagreen4, key=1, label=o2, style=dashed];
m7_110 -> m7_115  [color=darkseagreen4, key=1, label=o2, style=dashed];
m7_116 -> m7_117  [key=0, style=solid];
m7_116 -> m7_44  [key=2, style=dotted];
m7_117 -> m7_118  [key=0, style=solid];
m7_117 -> m7_44  [key=2, style=dotted];
m7_118 -> m7_119  [key=0, style=solid];
m7_118 -> m7_129  [key=2, style=dotted];
m7_118 -> m7_49  [key=2, style=dotted];
m7_119 -> m7_120  [key=0, style=solid];
m7_119 -> m7_44  [key=2, style=dotted];
m7_120 -> m7_121  [key=0, style=solid];
m7_120 -> m7_129  [key=2, style=dotted];
m7_120 -> m7_49  [key=2, style=dotted];
m7_121 -> m7_122  [key=0, style=solid];
m7_121 -> m7_44  [key=2, style=dotted];
m7_122 -> m7_123  [key=0, style=solid];
m7_122 -> m7_129  [key=2, style=dotted];
m7_122 -> m7_49  [key=2, style=dotted];
m7_123 -> m7_124  [key=0, style=solid];
m7_123 -> m7_129  [key=2, style=dotted];
m7_123 -> m7_49  [key=2, style=dotted];
m7_124 -> m7_125  [key=0, style=solid];
m7_124 -> m7_44  [key=2, style=dotted];
m7_125 -> m7_126  [key=0, style=solid];
m7_125 -> m7_129  [key=2, style=dotted];
m7_125 -> m7_49  [key=2, style=dotted];
m7_126 -> m7_127  [key=0, style=solid];
m7_126 -> m7_129  [key=2, style=dotted];
m7_126 -> m7_49  [key=2, style=dotted];
m7_127 -> m7_128  [key=0, style=solid];
m7_127 -> m7_103  [key=2, style=dotted];
m7_127 -> m7_104  [key=2, style=dotted];
m7_127 -> m7_130  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_111 -> m7_112  [key=0, style=solid];
m7_111 -> m7_44  [key=2, style=dotted];
m7_112 -> m7_113  [key=0, style=solid];
m7_112 -> m7_44  [key=2, style=dotted];
m7_113 -> m7_114  [key=0, style=solid];
m7_113 -> m7_44  [key=2, style=dotted];
m7_114 -> m7_115  [key=0, style=solid];
m7_114 -> m7_44  [key=2, style=dotted];
m7_115 -> m7_116  [key=0, style=solid];
m7_115 -> m7_44  [key=2, style=dotted];
m7_128 -> m7_108  [color=blue, key=0, style=bold];
m7_327 -> m7_328  [key=0, style=solid];
m7_328 -> m7_329  [key=0, style=solid];
m7_328 -> m7_372  [key=2, style=dotted];
m7_328 -> m7_330  [color=darkseagreen4, key=1, label=c, style=dashed];
m7_328 -> m7_331  [color=darkseagreen4, key=1, label=c, style=dashed];
m7_328 -> m7_333  [color=darkseagreen4, key=1, label=c, style=dashed];
m7_328 -> m7_351  [color=darkseagreen4, key=1, label=c, style=dashed];
m7_328 -> m7_352  [color=darkseagreen4, key=1, label=c, style=dashed];
m7_328 -> m7_353  [color=darkseagreen4, key=1, label=c, style=dashed];
m7_328 -> m7_354  [color=darkseagreen4, key=1, label=c, style=dashed];
m7_328 -> m7_355  [color=darkseagreen4, key=1, label=c, style=dashed];
m7_329 -> m7_330  [key=0, style=solid];
m7_330 -> m7_331  [key=0, style=solid];
m7_331 -> m7_332  [key=0, style=solid];
m7_333 -> m7_334  [key=0, style=solid];
m7_333 -> m7_40  [key=2, style=dotted];
m7_333 -> m7_200  [key=2, style=dotted];
m7_333 -> m7_340  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_333 -> m7_342  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_351 -> m7_352  [key=0, style=solid];
m7_352 -> m7_353  [key=0, style=solid];
m7_353 -> m7_354  [key=0, style=solid];
m7_354 -> m7_355  [key=0, style=solid];
m7_355 -> m7_356  [key=0, style=solid];
m7_355 -> m7_374  [key=2, style=dotted];
m7_355 -> m7_358  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_332 -> m7_333  [key=0, style=solid];
m7_332 -> m7_99  [key=2, style=dotted];
m7_332 -> m7_334  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_332 -> m7_335  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_332 -> m7_336  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_332 -> m7_337  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_332 -> m7_338  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_332 -> m7_339  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_334 -> m7_335  [key=0, style=solid];
m7_334 -> m7_44  [key=2, style=dotted];
m7_335 -> m7_336  [key=0, style=solid];
m7_335 -> m7_44  [key=2, style=dotted];
m7_336 -> m7_337  [key=0, style=solid];
m7_336 -> m7_44  [key=2, style=dotted];
m7_337 -> m7_338  [key=0, style=solid];
m7_337 -> m7_44  [key=2, style=dotted];
m7_338 -> m7_339  [key=0, style=solid];
m7_338 -> m7_44  [key=2, style=dotted];
m7_339 -> m7_340  [key=0, style=solid];
m7_339 -> m7_44  [key=2, style=dotted];
m7_340 -> m7_341  [key=0, style=solid];
m7_340 -> m7_19  [key=2, style=dotted];
m7_342 -> m7_343  [key=0, style=solid];
m7_342 -> m7_40  [key=2, style=dotted];
m7_342 -> m7_66  [key=2, style=dotted];
m7_342 -> m7_345  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m7_342 -> m7_346  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m7_342 -> m7_347  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m7_342 -> m7_348  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m7_342 -> m7_349  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m7_342 -> m7_350  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m7_341 -> m7_342  [key=0, style=solid];
m7_341 -> m7_99  [key=2, style=dotted];
m7_341 -> m7_343  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_341 -> m7_344  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_343 -> m7_344  [key=0, style=solid];
m7_343 -> m7_44  [key=2, style=dotted];
m7_344 -> m7_345  [key=0, style=solid];
m7_344 -> m7_129  [key=2, style=dotted];
m7_344 -> m7_49  [key=2, style=dotted];
m7_345 -> m7_346  [key=0, style=solid];
m7_345 -> d92  [key=2, style=dotted];
m7_346 -> m7_347  [key=0, style=solid];
m7_346 -> m7_104  [key=2, style=dotted];
m7_347 -> m7_348  [key=0, style=solid];
m7_347 -> m7_104  [key=2, style=dotted];
m7_348 -> m7_349  [key=0, style=solid];
m7_348 -> m7_104  [key=2, style=dotted];
m7_349 -> m7_350  [key=0, style=solid];
m7_349 -> m7_104  [key=2, style=dotted];
m7_350 -> m7_351  [key=0, style=solid];
m7_350 -> m7_44  [key=2, style=dotted];
m7_356 -> m7_357  [key=0, style=solid];
m7_356 -> m7_19  [key=2, style=dotted];
m7_358 -> m7_359  [key=0, style=solid];
m7_358 -> m7_40  [key=2, style=dotted];
m7_358 -> m7_66  [key=2, style=dotted];
m7_358 -> m7_364  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m7_358 -> m7_365  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m7_358 -> m7_366  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m7_358 -> m7_367  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m7_358 -> m7_368  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m7_358 -> m7_369  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m7_358 -> m7_370  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m7_357 -> m7_358  [key=0, style=solid];
m7_357 -> m7_99  [key=2, style=dotted];
m7_357 -> m7_359  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_357 -> m7_360  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_357 -> m7_361  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_357 -> m7_362  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_357 -> m7_363  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_359 -> m7_360  [key=0, style=solid];
m7_359 -> m7_44  [key=2, style=dotted];
m7_360 -> m7_361  [key=0, style=solid];
m7_360 -> m7_44  [key=2, style=dotted];
m7_361 -> m7_362  [key=0, style=solid];
m7_361 -> m7_44  [key=2, style=dotted];
m7_362 -> m7_363  [key=0, style=solid];
m7_362 -> m7_44  [key=2, style=dotted];
m7_363 -> m7_364  [key=0, style=solid];
m7_363 -> m7_129  [key=2, style=dotted];
m7_363 -> m7_49  [key=2, style=dotted];
m7_364 -> m7_365  [key=0, style=solid];
m7_364 -> m7_44  [key=2, style=dotted];
m7_365 -> m7_366  [key=0, style=solid];
m7_365 -> m7_49  [key=2, style=dotted];
m7_366 -> m7_367  [key=0, style=solid];
m7_366 -> m7_49  [key=2, style=dotted];
m7_367 -> m7_368  [key=0, style=solid];
m7_367 -> m7_49  [key=2, style=dotted];
m7_368 -> m7_369  [key=0, style=solid];
m7_368 -> m7_49  [key=2, style=dotted];
m7_369 -> m7_370  [key=0, style=solid];
m7_369 -> m7_44  [key=2, style=dotted];
m7_370 -> m7_371  [key=0, style=solid];
m7_370 -> m7_44  [key=2, style=dotted];
m7_371 -> m7_327  [color=blue, key=0, style=bold];
m7_580 -> m7_581  [key=0, style=solid];
m7_581 -> m7_582  [key=0, style=solid];
m7_581 -> m7_583  [key=2, style=dotted];
m7_581 -> m7_584  [key=2, style=dotted];
m7_582 -> m7_580  [color=blue, key=0, style=bold];
m7_499 -> m7_500  [key=0, style=solid];
m7_500 -> m7_501  [key=0, style=solid];
m7_500 -> m7_560  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_500 -> m7_500  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_501 -> m7_502  [key=0, style=solid];
m7_501 -> m7_562  [key=2, style=dotted];
m7_560 -> m7_561  [key=0, style=solid];
m7_560 -> m7_573  [key=2, style=dotted];
m7_560 -> m7_19  [key=2, style=dotted];
m7_502 -> m7_503  [key=0, style=solid];
m7_502 -> m7_563  [key=2, style=dotted];
m7_503 -> m7_504  [key=0, style=solid];
m7_503 -> m7_564  [key=2, style=dotted];
m7_503 -> m7_505  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_506  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_507  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_508  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_509  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_510  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_511  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_512  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_513  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_514  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_515  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_516  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_517  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_518  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_519  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_520  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_521  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_522  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_523  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_524  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_525  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_526  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_527  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_528  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_529  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_530  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_531  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_532  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_533  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_534  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_535  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_536  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_537  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_538  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_539  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_540  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_541  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_542  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_543  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_544  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_545  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_546  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_547  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_548  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_549  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_550  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_551  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_552  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_553  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_554  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_555  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_556  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_557  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_558  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_559  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_503 -> m7_560  [color=darkseagreen4, key=1, label=traceReader, style=dashed];
m7_504 -> m7_505  [key=0, style=solid];
m7_504 -> m7_565  [key=2, style=dotted];
m7_505 -> m7_506  [key=0, style=solid];
m7_505 -> m7_44  [key=2, style=dotted];
m7_506 -> m7_507  [key=0, style=solid];
m7_506 -> m7_565  [key=2, style=dotted];
m7_507 -> m7_508  [key=0, style=solid];
m7_507 -> m7_44  [key=2, style=dotted];
m7_508 -> m7_509  [key=0, style=solid];
m7_508 -> m7_44  [key=2, style=dotted];
m7_509 -> m7_510  [key=0, style=solid];
m7_509 -> m7_565  [key=2, style=dotted];
m7_510 -> m7_511  [key=0, style=solid];
m7_510 -> m7_44  [key=2, style=dotted];
m7_511 -> m7_512  [key=0, style=solid];
m7_511 -> m7_44  [key=2, style=dotted];
m7_512 -> m7_513  [key=0, style=solid];
m7_512 -> m7_566  [key=2, style=dotted];
m7_513 -> m7_514  [key=0, style=solid];
m7_513 -> m7_44  [key=2, style=dotted];
m7_514 -> m7_515  [key=0, style=solid];
m7_514 -> m7_44  [key=2, style=dotted];
m7_515 -> m7_516  [key=0, style=solid];
m7_515 -> m7_44  [key=2, style=dotted];
m7_516 -> m7_517  [key=0, style=solid];
m7_517 -> m7_518  [key=0, style=solid];
m7_517 -> m7_44  [key=2, style=dotted];
m7_518 -> m7_519  [key=0, style=solid];
m7_518 -> m7_566  [key=2, style=dotted];
m7_519 -> m7_520  [key=0, style=solid];
m7_519 -> m7_44  [key=2, style=dotted];
m7_520 -> m7_521  [key=0, style=solid];
m7_520 -> m7_44  [key=2, style=dotted];
m7_521 -> m7_522  [key=0, style=solid];
m7_521 -> m7_567  [key=2, style=dotted];
m7_522 -> m7_523  [key=0, style=solid];
m7_522 -> m7_44  [key=2, style=dotted];
m7_523 -> m7_524  [key=0, style=solid];
m7_523 -> m7_38  [key=2, style=dotted];
m7_523 -> m7_44  [key=2, style=dotted];
m7_524 -> m7_525  [key=0, style=solid];
m7_524 -> m7_568  [key=2, style=dotted];
m7_525 -> m7_526  [key=0, style=solid];
m7_525 -> m7_44  [key=2, style=dotted];
m7_526 -> m7_527  [key=0, style=solid];
m7_526 -> m7_445  [key=2, style=dotted];
m7_526 -> m7_44  [key=2, style=dotted];
m7_527 -> m7_528  [key=0, style=solid];
m7_527 -> m7_569  [key=2, style=dotted];
m7_528 -> m7_529  [key=0, style=solid];
m7_528 -> m7_44  [key=2, style=dotted];
m7_529 -> m7_530  [key=0, style=solid];
m7_529 -> m7_484  [key=2, style=dotted];
m7_529 -> m7_44  [key=2, style=dotted];
m7_530 -> m7_531  [key=0, style=solid];
m7_530 -> m7_570  [key=2, style=dotted];
m7_531 -> m7_532  [key=0, style=solid];
m7_531 -> m7_44  [key=2, style=dotted];
m7_532 -> m7_533  [key=0, style=solid];
m7_532 -> m7_44  [key=2, style=dotted];
m7_533 -> m7_534  [key=0, style=solid];
m7_533 -> m7_571  [key=2, style=dotted];
m7_534 -> m7_535  [key=0, style=solid];
m7_534 -> m7_44  [key=2, style=dotted];
m7_535 -> m7_536  [key=0, style=solid];
m7_535 -> m7_44  [key=2, style=dotted];
m7_536 -> m7_537  [key=0, style=solid];
m7_536 -> m7_565  [key=2, style=dotted];
m7_537 -> m7_538  [key=0, style=solid];
m7_537 -> m7_44  [key=2, style=dotted];
m7_538 -> m7_539  [key=0, style=solid];
m7_538 -> m7_44  [key=2, style=dotted];
m7_539 -> m7_540  [key=0, style=solid];
m7_539 -> m7_476  [key=2, style=dotted];
m7_539 -> m7_44  [key=2, style=dotted];
m7_540 -> m7_541  [key=0, style=solid];
m7_540 -> m7_565  [key=2, style=dotted];
m7_541 -> m7_542  [key=0, style=solid];
m7_541 -> m7_44  [key=2, style=dotted];
m7_542 -> m7_543  [key=0, style=solid];
m7_542 -> m7_565  [key=2, style=dotted];
m7_543 -> m7_544  [key=0, style=solid];
m7_543 -> m7_44  [key=2, style=dotted];
m7_544 -> m7_545  [key=0, style=solid];
m7_544 -> m7_565  [key=2, style=dotted];
m7_545 -> m7_546  [key=0, style=solid];
m7_545 -> m7_44  [key=2, style=dotted];
m7_546 -> m7_547  [key=0, style=solid];
m7_546 -> m7_565  [key=2, style=dotted];
m7_547 -> m7_548  [key=0, style=solid];
m7_547 -> m7_44  [key=2, style=dotted];
m7_548 -> m7_549  [key=0, style=solid];
m7_548 -> m7_44  [key=2, style=dotted];
m7_549 -> m7_550  [key=0, style=solid];
m7_549 -> m7_565  [key=2, style=dotted];
m7_550 -> m7_551  [key=0, style=solid];
m7_550 -> m7_44  [key=2, style=dotted];
m7_551 -> m7_552  [key=0, style=solid];
m7_551 -> m7_565  [key=2, style=dotted];
m7_552 -> m7_553  [key=0, style=solid];
m7_552 -> m7_44  [key=2, style=dotted];
m7_553 -> m7_554  [key=0, style=solid];
m7_553 -> m7_44  [key=2, style=dotted];
m7_554 -> m7_555  [key=0, style=solid];
m7_554 -> m7_565  [key=2, style=dotted];
m7_555 -> m7_556  [key=0, style=solid];
m7_555 -> m7_44  [key=2, style=dotted];
m7_556 -> m7_557  [key=0, style=solid];
m7_556 -> m7_565  [key=2, style=dotted];
m7_557 -> m7_558  [key=0, style=solid];
m7_557 -> m7_44  [key=2, style=dotted];
m7_558 -> m7_559  [key=0, style=solid];
m7_558 -> m7_565  [key=2, style=dotted];
m7_558 -> m7_104  [key=2, style=dotted];
m7_559 -> m7_560  [key=0, style=solid];
m7_559 -> m7_572  [key=2, style=dotted];
m7_561 -> m7_499  [color=blue, key=0, style=bold];
m7_283 -> m7_284  [key=0, style=solid];
m7_105 -> m7_106  [key=0, style=solid];
m7_106 -> m7_107  [key=0, style=solid];
m7_107 -> m7_105  [color=blue, key=0, style=bold];
m7_130 -> m7_131  [key=0, style=solid];
m7_131 -> m7_132  [key=0, style=solid];
m7_132 -> m7_130  [color=blue, key=0, style=bold];
m7_156 -> m7_157  [key=0, style=solid];
m7_157 -> m7_158  [key=0, style=solid];
m7_158 -> m7_156  [color=blue, key=0, style=bold];
m7_171 -> m7_172  [key=0, style=solid];
m7_171 -> m7_40  [key=2, style=dotted];
m7_171 -> m7_66  [key=2, style=dotted];
m7_170 -> m7_171  [key=0, style=solid];
m7_172 -> m7_170  [color=blue, key=0, style=bold];
m7_186 -> m7_187  [key=0, style=solid];
m7_186 -> m7_40  [key=2, style=dotted];
m7_186 -> m7_66  [key=2, style=dotted];
m7_185 -> m7_186  [key=0, style=solid];
m7_187 -> m7_185  [color=blue, key=0, style=bold];
m7_201 -> m7_202  [key=0, style=solid];
m7_204 -> m7_205  [key=0, style=solid];
m7_207 -> m7_208  [key=0, style=solid];
m7_202 -> m7_203  [key=0, style=solid];
m7_203 -> m7_201  [color=blue, key=0, style=bold];
m7_205 -> m7_206  [key=0, style=solid];
m7_206 -> m7_204  [color=blue, key=0, style=bold];
m7_208 -> m7_209  [key=0, style=solid];
m7_209 -> m7_207  [color=blue, key=0, style=bold];
m7_218 -> m7_219  [key=0, style=solid];
m7_221 -> m7_222  [key=0, style=solid];
m7_224 -> m7_225  [key=0, style=solid];
m7_219 -> m7_220  [key=0, style=solid];
m7_220 -> m7_218  [color=blue, key=0, style=bold];
m7_222 -> m7_223  [key=0, style=solid];
m7_223 -> m7_221  [color=blue, key=0, style=bold];
m7_225 -> m7_226  [key=0, style=solid];
m7_225 -> m7_129  [key=2, style=dotted];
m7_226 -> m7_224  [color=blue, key=0, style=bold];
m7_284 -> m7_285  [key=0, style=solid];
m7_284 -> m7_40  [key=2, style=dotted];
m7_284 -> m7_66  [key=2, style=dotted];
m7_285 -> m7_283  [color=blue, key=0, style=bold];
m7_188 -> m7_189  [key=0, style=solid];
m7_189 -> m7_190  [key=0, style=solid];
m7_189 -> m7_198  [key=2, style=dotted];
m7_189 -> m7_191  [color=darkseagreen4, key=1, label=circularDictionary, style=dashed];
m7_189 -> m7_193  [color=darkseagreen4, key=1, label=circularDictionary, style=dashed];
m7_190 -> m7_191  [key=0, style=solid];
m7_190 -> m7_198  [key=2, style=dotted];
m7_190 -> m7_199  [key=2, style=dotted];
m7_191 -> m7_192  [key=0, style=solid];
m7_191 -> m7_199  [key=2, style=dotted];
m7_193 -> m7_194  [key=0, style=solid];
m7_193 -> m7_40  [key=2, style=dotted];
m7_193 -> m7_200  [key=2, style=dotted];
m7_192 -> m7_193  [key=0, style=solid];
m7_192 -> m7_99  [key=2, style=dotted];
m7_192 -> m7_194  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_192 -> m7_195  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_192 -> m7_196  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_194 -> m7_195  [key=0, style=solid];
m7_194 -> m7_103  [key=2, style=dotted];
m7_194 -> m7_49  [key=2, style=dotted];
m7_194 -> m7_201  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_195 -> m7_196  [key=0, style=solid];
m7_195 -> m7_103  [key=2, style=dotted];
m7_195 -> m7_49  [key=2, style=dotted];
m7_195 -> m7_204  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_196 -> m7_197  [key=0, style=solid];
m7_196 -> m7_103  [key=2, style=dotted];
m7_196 -> m7_49  [key=2, style=dotted];
m7_196 -> m7_207  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_197 -> m7_188  [color=blue, key=0, style=bold];
m7_293 -> m7_294  [key=0, style=solid];
m7_294 -> m7_295  [key=0, style=solid];
m7_294 -> m7_99  [key=2, style=dotted];
m7_294 -> m7_296  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_294 -> m7_297  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_294 -> m7_298  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_294 -> m7_299  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_294 -> m7_300  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_295 -> m7_296  [key=0, style=solid];
m7_295 -> m7_295  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_296 -> m7_297  [key=0, style=solid];
m7_296 -> m7_40  [key=2, style=dotted];
m7_296 -> m7_66  [key=2, style=dotted];
m7_297 -> m7_298  [key=0, style=solid];
m7_297 -> m7_44  [key=2, style=dotted];
m7_298 -> m7_299  [key=0, style=solid];
m7_298 -> m7_44  [key=2, style=dotted];
m7_299 -> m7_300  [key=0, style=solid];
m7_299 -> m7_129  [key=2, style=dotted];
m7_299 -> m7_49  [key=2, style=dotted];
m7_300 -> m7_301  [key=0, style=solid];
m7_300 -> m7_129  [key=2, style=dotted];
m7_300 -> m7_49  [key=2, style=dotted];
m7_301 -> m7_293  [color=blue, key=0, style=bold];
m7_241 -> m7_242  [key=0, style=solid];
m7_242 -> m7_243  [key=0, style=solid];
m7_242 -> m7_99  [key=2, style=dotted];
m7_242 -> m7_244  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_242 -> m7_245  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_242 -> m7_246  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_242 -> m7_247  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_242 -> m7_248  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_243 -> m7_244  [key=0, style=solid];
m7_243 -> m7_37  [key=2, style=dotted];
m7_243 -> m7_38  [key=2, style=dotted];
m7_244 -> m7_245  [key=0, style=solid];
m7_244 -> m7_40  [key=2, style=dotted];
m7_244 -> m7_41  [key=2, style=dotted];
m7_244 -> m7_200  [key=2, style=dotted];
m7_245 -> m7_246  [key=0, style=solid];
m7_245 -> m7_44  [key=2, style=dotted];
m7_246 -> m7_247  [key=0, style=solid];
m7_246 -> m7_44  [key=2, style=dotted];
m7_247 -> m7_248  [key=0, style=solid];
m7_247 -> m7_44  [key=2, style=dotted];
m7_248 -> m7_249  [key=0, style=solid];
m7_248 -> m7_44  [key=2, style=dotted];
m7_249 -> m7_241  [color=blue, key=0, style=bold];
m7_159 -> m7_160  [key=0, style=solid];
m7_160 -> m7_161  [key=0, style=solid];
m7_160 -> m7_162  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_160 -> m7_171  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_160 -> m7_160  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_161 -> m7_162  [key=0, style=solid];
m7_161 -> m7_99  [key=2, style=dotted];
m7_161 -> m7_171  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_161 -> m7_163  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_161 -> m7_164  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_161 -> m7_165  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_161 -> m7_166  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_161 -> m7_167  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_162 -> m7_163  [key=0, style=solid];
m7_162 -> m7_169  [key=2, style=dotted];
m7_162 -> m7_170  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_163 -> m7_164  [key=0, style=solid];
m7_163 -> m7_44  [key=2, style=dotted];
m7_164 -> m7_165  [key=0, style=solid];
m7_164 -> m7_44  [key=2, style=dotted];
m7_165 -> m7_166  [key=0, style=solid];
m7_165 -> m7_44  [key=2, style=dotted];
m7_166 -> m7_167  [key=0, style=solid];
m7_166 -> m7_44  [key=2, style=dotted];
m7_167 -> m7_168  [key=0, style=solid];
m7_167 -> m7_44  [key=2, style=dotted];
m7_168 -> m7_159  [color=blue, key=0, style=bold];
m7_133 -> m7_134  [key=0, style=solid];
m7_134 -> m7_135  [key=0, style=solid];
m7_134 -> m7_99  [key=2, style=dotted];
m7_134 -> m7_136  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_134 -> m7_142  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_134 -> m7_143  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_134 -> m7_144  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_134 -> m7_145  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_134 -> m7_146  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_134 -> m7_147  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_134 -> m7_148  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_134 -> m7_149  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_134 -> m7_150  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_134 -> m7_151  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_134 -> m7_152  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_134 -> m7_153  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_135 -> m7_136  [key=0, style=solid];
m7_135 -> m7_100  [key=2, style=dotted];
m7_135 -> m7_137  [color=darkseagreen4, key=1, label=o2, style=dashed];
m7_135 -> m7_138  [color=darkseagreen4, key=1, label=o2, style=dashed];
m7_135 -> m7_139  [color=darkseagreen4, key=1, label=o2, style=dashed];
m7_135 -> m7_140  [color=darkseagreen4, key=1, label=o2, style=dashed];
m7_135 -> m7_141  [color=darkseagreen4, key=1, label=o2, style=dashed];
m7_136 -> m7_137  [key=0, style=solid];
m7_136 -> m7_40  [key=2, style=dotted];
m7_136 -> m7_155  [key=2, style=dotted];
m7_142 -> m7_143  [key=0, style=solid];
m7_142 -> m7_44  [key=2, style=dotted];
m7_143 -> m7_144  [key=0, style=solid];
m7_143 -> m7_44  [key=2, style=dotted];
m7_144 -> m7_145  [key=0, style=solid];
m7_144 -> m7_129  [key=2, style=dotted];
m7_144 -> m7_49  [key=2, style=dotted];
m7_145 -> m7_146  [key=0, style=solid];
m7_145 -> m7_44  [key=2, style=dotted];
m7_146 -> m7_147  [key=0, style=solid];
m7_146 -> m7_129  [key=2, style=dotted];
m7_146 -> m7_49  [key=2, style=dotted];
m7_147 -> m7_148  [key=0, style=solid];
m7_147 -> m7_44  [key=2, style=dotted];
m7_148 -> m7_149  [key=0, style=solid];
m7_148 -> m7_129  [key=2, style=dotted];
m7_148 -> m7_49  [key=2, style=dotted];
m7_149 -> m7_150  [key=0, style=solid];
m7_149 -> m7_129  [key=2, style=dotted];
m7_149 -> m7_49  [key=2, style=dotted];
m7_150 -> m7_151  [key=0, style=solid];
m7_150 -> m7_44  [key=2, style=dotted];
m7_151 -> m7_152  [key=0, style=solid];
m7_151 -> m7_129  [key=2, style=dotted];
m7_151 -> m7_49  [key=2, style=dotted];
m7_152 -> m7_153  [key=0, style=solid];
m7_152 -> m7_129  [key=2, style=dotted];
m7_152 -> m7_49  [key=2, style=dotted];
m7_153 -> m7_154  [key=0, style=solid];
m7_153 -> m7_103  [key=2, style=dotted];
m7_153 -> m7_104  [key=2, style=dotted];
m7_153 -> m7_156  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_137 -> m7_138  [key=0, style=solid];
m7_137 -> m7_44  [key=2, style=dotted];
m7_138 -> m7_139  [key=0, style=solid];
m7_138 -> m7_44  [key=2, style=dotted];
m7_139 -> m7_140  [key=0, style=solid];
m7_139 -> m7_44  [key=2, style=dotted];
m7_140 -> m7_141  [key=0, style=solid];
m7_140 -> m7_44  [key=2, style=dotted];
m7_141 -> m7_142  [key=0, style=solid];
m7_141 -> m7_44  [key=2, style=dotted];
m7_154 -> m7_133  [color=blue, key=0, style=bold];
m7_311 -> m7_312  [key=0, style=solid];
m7_312 -> m7_313  [key=0, style=solid];
m7_312 -> m7_326  [key=2, style=dotted];
m7_312 -> m7_314  [color=darkseagreen4, key=1, label=c, style=dashed];
m7_312 -> m7_315  [color=darkseagreen4, key=1, label=c, style=dashed];
m7_312 -> m7_317  [color=darkseagreen4, key=1, label=c, style=dashed];
m7_312 -> m7_321  [color=darkseagreen4, key=1, label=c, style=dashed];
m7_312 -> m7_322  [color=darkseagreen4, key=1, label=c, style=dashed];
m7_313 -> m7_314  [key=0, style=solid];
m7_314 -> m7_315  [key=0, style=solid];
m7_315 -> m7_316  [key=0, style=solid];
m7_317 -> m7_318  [key=0, style=solid];
m7_317 -> m7_40  [key=2, style=dotted];
m7_317 -> m7_42  [key=2, style=dotted];
m7_321 -> m7_322  [key=0, style=solid];
m7_322 -> m7_323  [key=0, style=solid];
m7_322 -> m7_40  [key=2, style=dotted];
m7_322 -> m7_42  [key=2, style=dotted];
m7_316 -> m7_317  [key=0, style=solid];
m7_316 -> m7_99  [key=2, style=dotted];
m7_316 -> m7_318  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_316 -> m7_319  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_318 -> m7_319  [key=0, style=solid];
m7_318 -> m7_44  [key=2, style=dotted];
m7_319 -> m7_320  [key=0, style=solid];
m7_319 -> m7_44  [key=2, style=dotted];
m7_320 -> m7_321  [key=0, style=solid];
m7_320 -> m7_99  [key=2, style=dotted];
m7_320 -> m7_322  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_320 -> m7_323  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_320 -> m7_324  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_323 -> m7_324  [key=0, style=solid];
m7_323 -> m7_44  [key=2, style=dotted];
m7_324 -> m7_325  [key=0, style=solid];
m7_324 -> m7_44  [key=2, style=dotted];
m7_325 -> m7_311  [color=blue, key=0, style=bold];
m7_286 -> m7_287  [key=0, style=solid];
m7_287 -> m7_288  [key=0, style=solid];
m7_287 -> m7_99  [key=2, style=dotted];
m7_287 -> m7_289  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_287 -> m7_290  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_287 -> m7_291  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_288 -> m7_289  [key=0, style=solid];
m7_288 -> m7_40  [key=2, style=dotted];
m7_288 -> m7_66  [key=2, style=dotted];
m7_289 -> m7_290  [key=0, style=solid];
m7_289 -> m7_44  [key=2, style=dotted];
m7_290 -> m7_291  [key=0, style=solid];
m7_290 -> m7_44  [key=2, style=dotted];
m7_291 -> m7_292  [key=0, style=solid];
m7_291 -> m7_129  [key=2, style=dotted];
m7_291 -> m7_49  [key=2, style=dotted];
m7_292 -> m7_286  [color=blue, key=0, style=bold];
m7_594 -> m7_171  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_595 -> m7_171  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_596 -> m7_186  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_597 -> m7_186  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_598 -> m7_284  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_599 -> m7_575  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TraceRecord", style=dashed];
m7_600 -> m7_577  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter", style=dashed];
m7_600 -> m7_578  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter", style=dashed];
m7_600 -> m7_581  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter", style=dashed];
m7_600 -> m7_587  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter", style=dashed];
m8_12 -> m8_13  [key=0, style=solid];
m8_13 -> m8_14  [key=0, style=solid];
m8_14 -> m8_12  [color=blue, key=0, style=bold];
m8_59 -> m8_60  [key=0, style=solid];
m8_59 -> m8_61  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_59 -> m8_42  [color=darkorchid, key=3, label="method methodReturn bool AssignableToTypeName", style=bold];
m8_60 -> m8_61  [key=0, style=solid];
m8_61 -> m8_62  [key=0, style=solid];
m8_61 -> m8_63  [key=2, style=dotted];
m8_62 -> m8_59  [color=blue, key=0, style=bold];
m8_15 -> m8_16  [key=0, style=solid];
m8_16 -> m8_17  [key=0, style=solid];
m8_17 -> m8_15  [color=blue, key=0, style=bold];
m8_18 -> m8_19  [key=0, style=solid];
m8_19 -> m8_20  [key=0, style=solid];
m8_20 -> m8_18  [color=blue, key=0, style=bold];
m8_36 -> m8_37  [key=0, style=solid];
m8_37 -> m8_38  [key=0, style=solid];
m8_38 -> m8_36  [color=blue, key=0, style=bold];
m8_3 -> m8_4  [key=0, style=solid];
m8_4 -> m8_5  [key=0, style=solid];
m8_5 -> m8_3  [color=blue, key=0, style=bold];
m8_33 -> m8_34  [key=0, style=solid];
m8_34 -> m8_35  [key=0, style=solid];
m8_35 -> m8_33  [color=blue, key=0, style=bold];
m8_27 -> m8_28  [key=0, style=solid];
m8_28 -> m8_29  [key=0, style=solid];
m8_29 -> m8_27  [color=blue, key=0, style=bold];
m8_6 -> m8_7  [key=0, style=solid];
m8_7 -> m8_8  [key=0, style=solid];
m8_8 -> m8_6  [color=blue, key=0, style=bold];
m8_39 -> m8_40  [key=0, style=solid];
m8_40 -> m8_41  [key=0, style=solid];
m8_41 -> m8_39  [color=blue, key=0, style=bold];
m8_24 -> m8_25  [key=0, style=solid];
m8_25 -> m8_26  [key=0, style=solid];
m8_26 -> m8_24  [color=blue, key=0, style=bold];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> m8_45  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_42 -> m8_49  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_42 -> m8_50  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_42 -> m8_51  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_42 -> m8_42  [color=darkorchid, key=3, label="Parameter variable System.Type match", style=bold];
m8_42 -> m8_60  [color=darkorchid, key=3, label="Parameter variable System.Type match", style=bold];
m8_42 -> m8_47  [color=darkorchid, key=3, label="method methodReturn bool AssignableToTypeName", style=bold];
m8_42 -> m8_54  [color=darkorchid, key=3, label="method methodReturn bool AssignableToTypeName", style=bold];
m8_42 -> m8_59  [color=darkorchid, key=3, label="Parameter variable string fullTypeName", style=bold];
m8_43 -> m8_44  [key=0, style=solid];
m8_43 -> m8_45  [color=darkseagreen4, key=1, label=current, style=dashed];
m8_43 -> m8_46  [color=darkseagreen4, key=1, label=current, style=dashed];
m8_43 -> m8_48  [color=darkseagreen4, key=1, label=current, style=dashed];
m8_43 -> m8_42  [color=darkorchid, key=3, label="Local variable System.Type current", style=bold];
m8_43 -> m8_18  [color=darkorchid, key=3, label="Local variable System.Type current", style=bold];
m8_45 -> m8_46  [key=0, style=solid];
m8_45 -> m8_48  [key=0, style=solid];
m8_45 -> m8_56  [key=2, style=dotted];
m8_49 -> m8_50  [key=0, style=solid];
m8_49 -> m8_53  [key=0, style=solid];
m8_49 -> m8_58  [key=2, style=dotted];
m8_50 -> m8_51  [key=0, style=solid];
m8_50 -> m8_49  [key=0, style=solid];
m8_50 -> m8_56  [key=2, style=dotted];
m8_51 -> m8_52  [key=0, style=solid];
m8_44 -> m8_45  [key=0, style=solid];
m8_44 -> m8_49  [key=0, style=solid];
m8_46 -> m8_47  [key=0, style=solid];
m8_48 -> m8_44  [key=0, style=solid];
m8_48 -> m8_57  [key=2, style=dotted];
m8_48 -> m8_48  [color=darkseagreen4, key=1, label=current, style=dashed];
m8_47 -> m8_55  [key=0, style=solid];
m8_53 -> m8_54  [key=0, style=solid];
m8_53 -> m8_55  [color=darkseagreen4, key=1, label="out System.Type", style=dashed];
m8_52 -> m8_55  [key=0, style=solid];
m8_54 -> m8_55  [key=0, style=solid];
m8_55 -> m8_42  [color=blue, key=0, style=bold];
m8_9 -> m8_10  [key=0, style=solid];
m8_10 -> m8_11  [key=0, style=solid];
m8_11 -> m8_9  [color=blue, key=0, style=bold];
m8_30 -> m8_31  [key=0, style=solid];
m8_31 -> m8_32  [key=0, style=solid];
m8_32 -> m8_30  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_2 -> m8_0  [color=blue, key=0, style=bold];
m8_64 -> m8_65  [color=green, key=0, style=solid];
m8_64 -> m8_70  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_64 -> m8_64  [color=darkorchid, key=3, label="Parameter variable System.Type interfaceType", style=bold];
m8_64 -> m8_47  [color=darkorchid, key=3, label="method methodReturn bool ImplementInterface", style=bold];
m8_64 -> m8_54  [color=darkorchid, key=3, label="method methodReturn bool ImplementInterface", style=bold];
m8_65 -> m8_66  [color=green, key=0, style=solid];
m8_65 -> m8_67  [color=green, key=1, label=currentType, style=dashed];
m8_65 -> m8_73  [color=green, key=1, label=currentType, style=dashed];
m8_65 -> m8_64  [color=green, key=3, label="Local variable System.Type currentType", style=bold];
m8_70 -> m8_71  [color=red, key=0, style=solid];
m8_70 -> m8_72  [color=red, key=0, style=solid];
m8_70 -> m8_76  [color=red, key=2, style=dotted];
m8_66 -> m8_67  [color=green, key=0, style=solid];
m8_66 -> m8_74  [color=green, key=0, style=solid];
m8_67 -> m8_68  [color=green, key=0, style=solid];
m8_67 -> m8_58  [color=green, key=2, style=dotted];
m8_67 -> m8_69  [color=green, key=1, label=interfaces, style=dashed];
m8_67 -> m8_70  [color=green, key=1, label=interfaces, style=dashed];
m8_73 -> m8_66  [color=green, key=0, style=solid];
m8_73 -> m8_73  [color=green, key=1, label=currentType, style=dashed];
m8_74 -> m8_75  [key=0, style=solid];
m8_68 -> m8_69  [color=red, key=0, style=solid];
m8_68 -> m8_70  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_68 -> m8_72  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_68 -> m8_68  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m8_69 -> m8_70  [color=red, key=0, style=solid];
m8_69 -> m8_73  [color=green, key=0, style=solid];
m8_72 -> m8_69  [color=red, key=0, style=solid];
m8_72 -> m8_72  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_71 -> m8_75  [key=0, style=solid];
m8_75 -> m8_64  [color=blue, key=0, style=bold];
m8_21 -> m8_22  [key=0, style=solid];
m8_22 -> m8_23  [key=0, style=solid];
m8_23 -> m8_21  [color=blue, key=0, style=bold];
}
