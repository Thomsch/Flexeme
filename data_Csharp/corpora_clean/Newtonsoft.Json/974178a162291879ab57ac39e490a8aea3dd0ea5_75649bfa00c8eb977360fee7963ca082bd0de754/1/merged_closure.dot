digraph  {
n50 [label="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest", span=""];
n0 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest.ToString()", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest.ToString()", span="49-49"];
n1 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest.ToString()", label="return FileName + '' - '' + TestCaseDescription + '' - '' + TestDescription;", span="51-51"];
n2 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest.ToString()", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest.ToString()", span="49-49"];
n3 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.SpecTest(Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest)", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.SpecTest(Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest)", span="59-59"];
n4 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.SpecTest(Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest)", label="JsonSchema s = JsonSchema.Read(jsonSchemaSpecTest.Schema.CreateReader())", span="61-61"];
n6 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.SpecTest(Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest)", label="bool v = jsonSchemaSpecTest.Data.IsValid(s, out errorMessages)", span="64-64"];
n8 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.SpecTest(Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest)", label="Assert.AreEqual(jsonSchemaSpecTest.IsValid, v, jsonSchemaSpecTest.TestCaseDescription + '' - '' + jsonSchemaSpecTest.TestDescription + '' - errors: '' + string.Join('', '', errorMessages))", span="67-67"];
n5 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.SpecTest(Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest)", label="IList<string> errorMessages", span="63-63"];
n10 [cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1649-1649"];
n11 [cluster="Newtonsoft.Json.Schema.JsonSchema.Read(Newtonsoft.Json.JsonReader)", label="Entry Newtonsoft.Json.Schema.JsonSchema.Read(Newtonsoft.Json.JsonReader)", span="269-269"];
n7 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.SpecTest(Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest)", label="errorMessages = errorMessages ?? new List<string>()", span="65-65"];
n12 [cluster="Newtonsoft.Json.Linq.JToken.IsValid(Newtonsoft.Json.Schema.JsonSchema, out System.Collections.Generic.IList<string>)", label="Entry Newtonsoft.Json.Linq.JToken.IsValid(Newtonsoft.Json.Schema.JsonSchema, out System.Collections.Generic.IList<string>)", span="79-79"];
n13 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n9 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.SpecTest(Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest)", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.SpecTest(Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest)", span="59-59"];
n14 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
n15 [cluster="Unk.AreEqual", label="Entry Unk.AreEqual", span=""];
n16 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", span="70-70"];
n17 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", label="IList<JsonSchemaSpecTest> specTests = new List<JsonSchemaSpecTest>()", span="72-72"];
n18 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", label="string baseDirectory = AppDomain.CurrentDomain.BaseDirectory", span="75-75"];
n33 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", label="jsonSchemaSpecTest.TestNumber = specTests.Count + 1", span="100-100"];
n34 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", label="specTests.Add(jsonSchemaSpecTest)", span="102-102"];
n35 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", label="specTests = specTests.Where(s => s.FileName != ''dependencies.json''\r\n                                             && s.TestCaseDescription != ''multiple disallow subschema''\r\n                                             && s.TestCaseDescription != ''types from separate schemas are merged''\r\n                                             && s.TestCaseDescription != ''when types includes a schema it should fully validate the schema''\r\n                                             && s.TestCaseDescription != ''types can include schemas'').ToList()", span="107-111"];
n19 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", label="string baseTestPath = Path.Combine(baseDirectory, ''Schema'', ''Specs'')", span="76-76"];
n20 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", label="string[] testFiles = Directory.GetFiles(baseTestPath, ''*.json'', SearchOption.AllDirectories)", span="78-78"];
n38 [cluster="System.IO.Path.Combine(string, string, string)", label="Entry System.IO.Path.Combine(string, string, string)", span="0-0"];
n21 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", label=testFiles, span="81-81"];
n39 [cluster="System.IO.Directory.GetFiles(string, string, System.IO.SearchOption)", label="Entry System.IO.Directory.GetFiles(string, string, System.IO.SearchOption)", span="0-0"];
n22 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", label="string testJson = System.IO.File.ReadAllText(testFile)", span="83-83"];
n27 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", label="jsonSchemaSpecTest.FileName = Path.GetFileName(testFile)", span="93-93"];
n23 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", label="JArray a = JArray.Parse(testJson)", span="85-85"];
n40 [cluster="System.IO.File.ReadAllText(string)", label="Entry System.IO.File.ReadAllText(string)", span="0-0"];
n24 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", label=a, span="87-87"];
n41 [cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", label="Entry Newtonsoft.Json.Linq.JArray.Parse(string)", span="144-144"];
n25 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", label="testCase[''tests'']", span="89-89"];
n28 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", label="jsonSchemaSpecTest.TestCaseDescription = (string)testCase[''description'']", span="94-94"];
n29 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", label="jsonSchemaSpecTest.Schema = (JObject)testCase[''schema'']", span="95-95"];
n26 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", label="JsonSchemaSpecTest jsonSchemaSpecTest = new JsonSchemaSpecTest()", span="91-91"];
n30 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", label="jsonSchemaSpecTest.TestDescription = (string)test[''description'']", span="97-97"];
n31 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", label="jsonSchemaSpecTest.Data = test[''data'']", span="98-98"];
n32 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", label="jsonSchemaSpecTest.IsValid = (bool)test[''valid'']", span="99-99"];
n42 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest.JsonSchemaSpecTest()", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest.JsonSchemaSpecTest()", span="39-39"];
n43 [cluster="System.IO.Path.GetFileName(string)", label="Entry System.IO.Path.GetFileName(string)", span="0-0"];
n44 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
n36 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", label="return specTests;", span="113-113"];
n45 [cluster="Unk.Where", label="Entry Unk.Where", span=""];
n46 [cluster="Unk.ToList", label="Entry Unk.ToList", span=""];
n47 [cluster="lambda expression", label="Entry lambda expression", span="107-111"];
n37 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", span="70-70"];
n48 [cluster="lambda expression", label="s.FileName != ''dependencies.json''\r\n                                             && s.TestCaseDescription != ''multiple disallow subschema''\r\n                                             && s.TestCaseDescription != ''types from separate schemas are merged''\r\n                                             && s.TestCaseDescription != ''when types includes a schema it should fully validate the schema''\r\n                                             && s.TestCaseDescription != ''types can include schemas''", span="107-111"];
n49 [cluster="lambda expression", label="Exit lambda expression", span="107-111"];
d527 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", color=green, community=0, label="propertyName.StartsWith(''@'', StringComparison.Ordinal)", prediction=0, span="1351-1351"];
d495 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", span="1342-1342"];
d526 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", label="string elementPrefix = MiscellaneousUtils.GetPrefix(propertyName)", span="1349-1349"];
d528 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", label="string attributeName = propertyName.Substring(1)", span="1353-1353"];
d533 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", label="IXmlElement element = CreateElement(propertyName, document, elementPrefix, manager)", span="1366-1366"];
d550 [cluster="string.StartsWith(string, System.StringComparison)", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
d482 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="ReadElement(reader, document, rootNode, DeserializeRootElementName, manager)", span="1278-1278"];
d497 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", span="1671-1671"];
d516 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", label="ReadElement(reader, document, currentNode, propertyName, manager)", span="1336-1336"];
d548 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", span="1499-1499"];
d553 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", span="1662-1662"];
d547 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", span="1342-1342"];
d554 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", span="1409-1409"];
d523 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", label="string.IsNullOrEmpty(propertyName)", span="1344-1344"];
d525 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", label="Dictionary<string, string> attributeNameValues = ReadAttributeElements(reader, manager)", span="1347-1347"];
d529 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", label="string attributeValue = reader.Value.ToString()", span="1354-1354"];
d531 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", label="IXmlNode attribute = (!string.IsNullOrEmpty(attributePrefix))\r\n                    ? document.CreateAttribute(attributeName, manager.LookupNamespace(attributePrefix), attributeValue)\r\n                    : document.CreateAttribute(attributeName, attributeValue)", span="1358-1360"];
d532 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", label="((IXmlElement)currentNode).SetAttributeNode(attribute)", span="1362-1362"];
d534 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", label="currentNode.AppendChild(element)", span="1368-1368"];
d537 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", label="IXmlNode attribute = (!string.IsNullOrEmpty(attributePrefix))\r\n                        ? document.CreateAttribute(nameValue.Key, manager.LookupNamespace(attributePrefix), nameValue.Value)\r\n                        : document.CreateAttribute(nameValue.Key, nameValue.Value)", span="1375-1377"];
d539 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", label="reader.TokenType == JsonToken.String\r\n                    || reader.TokenType == JsonToken.Integer\r\n                    || reader.TokenType == JsonToken.Float\r\n                    || reader.TokenType == JsonToken.Boolean\r\n                    || reader.TokenType == JsonToken.Date", span="1382-1386"];
d540 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", label="element.AppendChild(document.CreateTextNode(ConvertTokenToXmlValue(reader)))", span="1388-1388"];
d541 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", label="reader.TokenType == JsonToken.Null", span="1390-1390"];
d542 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", label="reader.TokenType != JsonToken.EndObject", span="1397-1397"];
d543 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", label="manager.PushScope()", span="1399-1399"];
d544 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", label="DeserializeNode(reader, document, manager, element)", span="1400-1400"];
d545 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", label="manager.PopScope()", span="1401-1401"];
d546 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", label="manager.RemoveNamespace(string.Empty, manager.DefaultNamespace)", span="1404-1404"];
d459 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1236-1236"];
d499 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", span="1299-1299"];
d463 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="IXmlDocument document = null", span="1242-1242"];
d464 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="IXmlNode rootNode = null", span="1243-1243"];
d462 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="XmlNamespaceManager manager = new XmlNamespaceManager(new NameTable())", span="1241-1241"];
d549 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.GetPrefix(string)", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.GetPrefix(string)", span="94-94"];
d115 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)", span="340-340"];
d551 [cluster="string.Substring(int)", label="Entry string.Substring(int)", span="0-0"];
d530 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", label="string attributePrefix = MiscellaneousUtils.GetPrefix(attributeName)", span="1356-1356"];
d763 [label="Newtonsoft.Json.Converters.XmlNodeConverter", span=""];
d123 [cluster="Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", label="Entry Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="376-376"];
d538 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", label="element.SetAttributeNode(attribute)", span="1379-1379"];
d728 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", label="attributeName.StartsWith(''xmlns'', StringComparison.Ordinal)", span="1733-1733"];
d469 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="document = new XDocumentWrapper(d)", span="1252-1252"];
d470 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="rootNode = document", span="1253-1253"];
d475 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="document = new XmlDocumentWrapper(d)", span="1263-1263"];
d476 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="rootNode = document", span="1264-1264"];
d481 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="!string.IsNullOrEmpty(DeserializeRootElementName)", span="1274-1274"];
d485 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="objectType == typeof(XElement)", span="1287-1287"];
d484 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="DeserializeNode(reader, document, manager, rootNode)", span="1283-1283"];
d598 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", span="1483-1483"];
d723 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", label="reader.TokenType == JsonToken.PropertyName || reader.Read()", span="1721-1721"];
d724 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", span="1671-1671"];
d698 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", label="reader.TokenType", span="1675-1675"];
d700 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", label="currentNode.NodeType == XmlNodeType.Document && document.DocumentElement != null", span="1678-1678"];
d702 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", label="string propertyName = reader.Value.ToString()", span="1681-1681"];
d703 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", label="reader.Read()", span="1682-1682"];
d704 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", label="reader.TokenType == JsonToken.StartArray", span="1684-1684"];
d706 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", label="reader.Read() && reader.TokenType != JsonToken.EndArray", span="1687-1687"];
d707 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", label="DeserializeValue(reader, document, manager, propertyName, currentNode)", span="1689-1689"];
d710 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", label="IXmlElement arrayElement = currentNode.ChildNodes.OfType<IXmlElement>().Single(n => n.LocalName == propertyName)", span="1695-1695"];
d711 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", label="AddJsonArrayAttribute(arrayElement, document)", span="1696-1696"];
d712 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", label="DeserializeValue(reader, document, manager, propertyName, currentNode)", span="1701-1701"];
d714 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", label="string constructorName = reader.Value.ToString()", span="1705-1705"];
d715 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", label="reader.Read() && reader.TokenType != JsonToken.EndConstructor", span="1707-1707"];
d716 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", label="DeserializeValue(reader, document, manager, constructorName, currentNode)", span="1709-1709"];
d718 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", label="currentNode.AppendChild(document.CreateComment((string)reader.Value))", span="1713-1713"];
d722 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", label="throw new JsonSerializationException(''Unexpected JsonToken when deserializing node: '' + reader.TokenType);", span="1719-1719"];
d513 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", label="reader.TokenType == JsonToken.StartArray", span="1327-1327"];
d517 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", span="1299-1299"];
d648 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", span="1499-1499"];
d609 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="Dictionary<string, string> attributeNameValues = new Dictionary<string, string>()", span="1501-1501"];
d612 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="reader.TokenType != JsonToken.String\r\n                && reader.TokenType != JsonToken.Null\r\n                && reader.TokenType != JsonToken.Boolean\r\n                && reader.TokenType != JsonToken.Integer\r\n                && reader.TokenType != JsonToken.Float\r\n                && reader.TokenType != JsonToken.Date\r\n                && reader.TokenType != JsonToken.StartConstructor", span="1506-1512"];
d613 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="!finishedAttributes && !finishedElement && reader.Read()", span="1515-1515"];
d614 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="reader.TokenType", span="1517-1517"];
d616 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="string attributeName = reader.Value.ToString()", span="1520-1520"];
d623 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="reader.Read()", span="1531-1531"];
d624 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="attributeValue = ConvertTokenToXmlValue(reader)", span="1532-1532"];
d628 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="manager.AddNamespace(namespacePrefix, attributeValue)", span="1538-1538"];
d631 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="reader.Read()", span="1543-1543"];
d632 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="attributeValue = reader.Value.ToString()", span="1544-1544"];
d633 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="string jsonPrefix = manager.LookupPrefix(JsonNamespaceUri)", span="1548-1548"];
d636 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="manager.LookupNamespace(''json'' + i) != null", span="1553-1553"];
d640 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="manager.AddNamespace(jsonPrefix, JsonNamespaceUri)", span="1560-1560"];
d646 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="throw new JsonSerializationException(''Unexpected JsonToken: '' + reader.TokenType);", span="1581-1581"];
d111 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", span="338-338"];
d113 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)", span="339-339"];
d586 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="IXmlElement nestedArrayElement = CreateElement(propertyName, document, elementPrefix, manager)", span="1460-1460"];
d697 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", span="1662-1662"];
d694 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", label="string ns = string.IsNullOrEmpty(elementPrefix) ? manager.DefaultNamespace : manager.LookupNamespace(elementPrefix)", span="1664-1664"];
d695 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", label="IXmlElement element = (!string.IsNullOrEmpty(ns)) ? document.CreateElement(elementName, ns) : document.CreateElement(elementName)", span="1666-1666"];
d522 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1456-1456"];
d585 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="string elementPrefix = MiscellaneousUtils.GetPrefix(propertyName)", span="1458-1458"];
d524 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", label="throw new JsonSerializationException(''XmlNodeConverter cannot convert JSON with an empty property name to XML.'');", span="1345-1345"];
d97 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)", span="331-331"];
d576 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", span="1409-1409"];
d619 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="string attributeValue", span="1525-1525"];
d556 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", label="reader.TokenType == JsonToken.String", span="1411-1411"];
d557 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", label="return reader.Value.ToString();", span="1413-1413"];
d558 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", label="reader.TokenType == JsonToken.Integer", span="1415-1415"];
d559 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", label="return XmlConvert.ToString(Convert.ToInt64(reader.Value, CultureInfo.InvariantCulture));", span="1417-1417"];
d560 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", label="reader.TokenType == JsonToken.Float", span="1419-1419"];
d561 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", label="reader.Value is decimal", span="1421-1421"];
d562 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", label="return XmlConvert.ToString((decimal)reader.Value);", span="1422-1422"];
d563 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", label="reader.Value is float", span="1423-1423"];
d564 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", label="return XmlConvert.ToString((float)reader.Value);", span="1424-1424"];
d565 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", label="return XmlConvert.ToString(Convert.ToDouble(reader.Value, CultureInfo.InvariantCulture));", span="1426-1426"];
d566 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", label="reader.TokenType == JsonToken.Boolean", span="1428-1428"];
d567 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", label="return XmlConvert.ToString(Convert.ToBoolean(reader.Value, CultureInfo.InvariantCulture));", span="1430-1430"];
d568 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", label="reader.TokenType == JsonToken.Date", span="1432-1432"];
d569 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", label="reader.Value is DateTimeOffset", span="1435-1435"];
d570 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", label="return XmlConvert.ToString((DateTimeOffset)reader.Value);", span="1436-1436"];
d571 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", label="DateTime d = Convert.ToDateTime(reader.Value, CultureInfo.InvariantCulture)", span="1439-1439"];
d573 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", label="reader.TokenType == JsonToken.Null", span="1446-1446"];
d575 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", label="throw JsonSerializationException.Create(reader, ''Cannot get an XML string value from token type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="1452-1452"];
d295 [cluster="string.IsNullOrEmpty(string)", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
d535 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", label=attributeNameValues, span="1371-1371"];
d518 [cluster="object.ToString()", label="Entry object.ToString()", span="0-0"];
d119 [cluster="Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", label="Entry Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="363-363"];
d552 [cluster="Unk.LookupNamespace", label="Entry Unk.LookupNamespace", span=""];
d51 [cluster="Unk.CreateAttribute", label="Entry Unk.CreateAttribute", span=""];
d536 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", label="string attributePrefix = MiscellaneousUtils.GetPrefix(nameValue.Key)", span="1373-1373"];
d286 [cluster="Unk.PushScope", label="Entry Unk.PushScope", span=""];
d454 [cluster="Unk.PopScope", label="Entry Unk.PopScope", span=""];
d555 [cluster="Unk.RemoveNamespace", label="Entry Unk.RemoveNamespace", span=""];
d490 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1236-1236"];
d460 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="reader.TokenType == JsonToken.Null", span="1238-1238"];
d465 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="typeof(XObject).IsAssignableFrom(objectType)", span="1246-1246"];
d466 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="objectType != typeof(XDocument) && objectType != typeof(XElement)", span="1248-1248"];
d471 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="typeof(XmlNode).IsAssignableFrom(objectType)", span="1257-1257"];
d472 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="objectType != typeof(XmlDocument)", span="1259-1259"];
d478 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="throw new JsonSerializationException(''Unexpected type when converting XML: '' + objectType);", span="1269-1269"];
d479 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="reader.TokenType != JsonToken.StartObject", span="1271-1271"];
d483 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="reader.Read()", span="1282-1282"];
d486 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="XElement element = (XElement)document.DocumentElement.WrappedNode", span="1289-1289"];
d521 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", span="1627-1627"];
d519 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", span="1589-1589"];
d590 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="DeserializeValue(reader, document, manager, propertyName, nestedArrayElement)", span="1467-1467"];
d500 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", label=propertyName, span="1301-1301"];
d502 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", label="currentNode.AppendChild(document.CreateTextNode(reader.Value.ToString()))", span="1304-1304"];
d504 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", label="currentNode.AppendChild(document.CreateCDataSection(reader.Value.ToString()))", span="1307-1307"];
d506 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", label="currentNode.AppendChild(document.CreateWhitespace(reader.Value.ToString()))", span="1310-1310"];
d508 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", label="currentNode.AppendChild(document.CreateSignificantWhitespace(reader.Value.ToString()))", span="1313-1313"];
d509 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", label="!string.IsNullOrEmpty(propertyName) && propertyName[0] == '?'", span="1317-1317"];
d510 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", label="CreateInstruction(reader, document, currentNode, propertyName)", span="1319-1319"];
d511 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", label="string.Equals(propertyName, ''!DOCTYPE'', StringComparison.OrdinalIgnoreCase)", span="1321-1321"];
d512 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", label="CreateDocumentType(reader, document, currentNode)", span="1323-1323"];
d514 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", label="ReadArrayElements(reader, document, propertyName, currentNode, manager)", span="1330-1330"];
d477 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="document == null || rootNode == null", span="1268-1268"];
d489 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="return document.WrappedNode;", span="1296-1296"];
d255 [cluster="XmlNamespaceManager.cstr", label="Entry XmlNamespaceManager.cstr", span=""];
d256 [cluster="NameTable.cstr", label="Entry NameTable.cstr", span=""];
d46 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", span="105-105"];
d116 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)", span="340-340"];
d176 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", span="529-529"];
d622 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="attributeName = attributeName.Substring(1)", span="1530-1530"];
d630 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="attributeName = attributeName.Substring(1)", span="1542-1542"];
d669 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", label="IXmlNode instruction = document.CreateProcessingInstruction(propertyName.Substring(1), reader.Value.ToString())", span="1622-1622"];
d245 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", label="IXmlNode node = WrapXml(value)", span="908-908"];
d247 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", label="PushParentNamespaces(node, manager)", span="911-911"];
d248 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", label="!OmitRootObject", span="913-913"];
d250 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", label="SerializeNode(writer, node, manager, !OmitRootObject)", span="916-916"];
d251 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", label="!OmitRootObject", span="918-918"];
d301 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="return ''@'' + ResolveFullName(node, manager);", span="988-988"];
d307 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="return ResolveFullName(node, manager);", span="994-994"];
d309 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="return ''?'' + ResolveFullName(node, manager);", span="996-996"];
d311 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="return ''!'' + ResolveFullName(node, manager);", span="998-998"];
d337 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="string nodeName = GetPropertyName(childNode, manager)", span="1029-1029"];
d348 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="writeArray = IsArray(groupedNodes[0])", span="1050-1050"];
d351 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="SerializeNode(writer, groupedNodes[0], manager, writePropertyName)", span="1059-1059"];
d358 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="SerializeNode(writer, groupedNodes[i], manager, false)", span="1072-1072"];
d371 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="SerializeGroupedNodes(writer, node, manager, writePropertyName)", span="1086-1086"];
d373 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="IsArray(node) && node.ChildNodes.All(n => n.LocalName == node.LocalName) && node.ChildNodes.Count > 0", span="1089-1089"];
d374 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="SerializeGroupedNodes(writer, node, manager, false)", span="1091-1091"];
d382 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="writer.WritePropertyName(GetPropertyName(node, manager))", span="1111-1111"];
d383 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="!ValueAttributes(node.Attributes).Any() && node.ChildNodes.Count == 1\r\n                            && node.ChildNodes[0].NodeType == XmlNodeType.Text", span="1113-1114"];
d393 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="SerializeNode(writer, node.Attributes[i], manager, true)", span="1135-1135"];
d395 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="SerializeGroupedNodes(writer, node, manager, true)", span="1138-1138"];
d413 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="writer.WritePropertyName(GetPropertyName(node, manager))", span="1167-1167"];
d417 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="writer.WritePropertyName(GetPropertyName(node, manager))", span="1172-1172"];
d431 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="writer.WritePropertyName(GetPropertyName(node, manager))", span="1195-1195"];
d592 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label=WriteArrayAttribute, span="1471-1471"];
d593 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="AddJsonArrayAttribute(nestedArrayElement, document)", span="1473-1473"];
d594 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="count == 1 && WriteArrayAttribute", span="1476-1476"];
d596 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="AddJsonArrayAttribute(arrayElement, document)", span="1479-1479"];
d627 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="IsNamespaceAttribute(attributeName, out namespacePrefix)", span="1536-1536"];
d709 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", label="count == 1 && WriteArrayAttribute", span="1693-1693"];
d88 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", label="Entry Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="310-310"];
d124 [cluster="Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", label="Exit Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="376-376"];
d185 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="551-551"];
d227 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", label="Entry Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="764-764"];
d587 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="currentNode.AppendChild(nestedArrayElement)", span="1462-1462"];
d668 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", label="currentNode.AppendChild(declaration)", span="1618-1618"];
d670 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", label="currentNode.AppendChild(instruction)", span="1623-1623"];
d692 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", label="currentNode.AppendChild(documentType)", span="1659-1659"];
d99 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", span="332-332"];
d101 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", span="333-333"];
d103 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", span="334-334"];
d667 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", label="IXmlNode declaration = document.CreateXmlDeclaration(version, encoding, standalone)", span="1617-1617"];
d691 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", label="IXmlNode documentType = document.CreateXmlDocumentType(name, publicId, systemId, internalSubset)", span="1658-1658"];
d95 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateComment(string)", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateComment(string)", span="330-330"];
d649 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", span="1731-1731"];
d729 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", label="attributeName.Length == 5", span="1735-1735"];
d735 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", label="prefix = null", span="1746-1746"];
d468 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="XDocument d = new XDocument()", span="1251-1251"];
d131 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", span="460-460"];
d474 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="XmlDocument d = new XmlDocument()", span="1262-1262"];
d0 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", span="49-49"];
d608 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", span="1483-1483"];
d604 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", label="element.SetAttributeNode(document.CreateAttribute(''json:Array'', JsonNamespaceUri, ''true''))", span="1485-1485"];
d605 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", label="element is XElementWrapper", span="1489-1489"];
d606 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", label="element.GetPrefixOfNamespace(JsonNamespaceUri) == null", span="1491-1491"];
d607 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", label="element.SetAttributeNode(document.CreateAttribute(''xmlns:json'', ''http://www.w3.org/2000/xmlns/'', JsonNamespaceUri))", span="1493-1493"];
d595 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="IXmlElement arrayElement = nestedArrayElement.ChildNodes.OfType<IXmlElement>().Single(n => n.LocalName == propertyName)", span="1478-1478"];
d496 [cluster="Newtonsoft.Json.JsonReader.Read()", label="Entry Newtonsoft.Json.JsonReader.Read()", span="365-365"];
d701 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", label="throw new JsonSerializationException(''JSON root object has multiple properties. The root object must have a single property in order to create a valid XML document. Consider specifing a DeserializeRootElementName.'');", span="1679-1679"];
d721 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", label="return;", span="1717-1717"];
d699 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", label="JsonToken.PropertyName", span="1677-1677"];
d713 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", label="JsonToken.StartConstructor", span="1704-1704"];
d717 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", label="JsonToken.Comment", span="1712-1712"];
d719 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", label="JsonToken.EndObject", span="1715-1715"];
d726 [cluster="lambda expression", label="n.LocalName == propertyName", span="1695-1695"];
d705 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", label="int count = 0", span="1686-1686"];
d708 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", label="count++", span="1690-1690"];
d599 [cluster="System.Collections.IEnumerable.OfType<TResult>()", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
d600 [cluster="Unk.Single", label="Entry Unk.Single", span=""];
d725 [cluster="lambda expression", label="Entry lambda expression", span="1695-1695"];
d492 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
d515 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", label="return;", span="1331-1331"];
d647 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="return attributeNameValues;", span="1586-1586"];
d610 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="bool finishedAttributes = false", span="1502-1502"];
d362 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
d625 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="attributeNameValues.Add(attributeName, attributeValue)", span="1533-1533"];
d639 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="attributeNameValues.Add(''xmlns:'' + jsonPrefix, JsonNamespaceUri)", span="1559-1559"];
d641 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="attributeNameValues.Add(jsonPrefix + '':'' + attributeName, attributeValue)", span="1563-1563"];
d611 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="bool finishedElement = false", span="1503-1503"];
d643 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="finishedAttributes = true", span="1573-1573"];
d642 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="finishedAttributes = true", span="1566-1566"];
d645 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="finishedElement = true", span="1578-1578"];
d615 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="JsonToken.PropertyName", span="1519-1519"];
d644 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="JsonToken.EndObject", span="1577-1577"];
d617 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="!string.IsNullOrEmpty(attributeName)", span="1522-1522"];
d618 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="char firstChar = attributeName[0]", span="1524-1524"];
d287 [cluster="Unk.AddNamespace", label="Entry Unk.AddNamespace", span=""];
d634 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="jsonPrefix == null", span="1549-1549"];
d294 [cluster="Unk.LookupPrefix", label="Entry Unk.LookupPrefix", span=""];
d635 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="int? i = null", span="1552-1552"];
d637 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="i = i.GetValueOrDefault() + 1", span="1555-1555"];
d638 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="jsonPrefix = ''json'' + i", span="1557-1557"];
d38 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", span="95-95"];
d112 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", span="338-338"];
d165 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", span="518-518"];
d43 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", span="100-100"];
d114 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)", span="339-339"];
d170 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", span="523-523"];
d696 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", label="return element;", span="1668-1668"];
d597 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1456-1456"];
d589 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="reader.Read() && reader.TokenType != JsonToken.EndArray", span="1465-1465"];
d602 [cluster="lambda expression", label="n.LocalName == propertyName", span="1478-1478"];
d8 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", span="60-60"];
d98 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)", span="331-331"];
d138 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)", span="483-483"];
d572 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", label="return XmlConvert.ToString(d, DateTimeUtils.ToSerializationMode(d.Kind));", span="1441-1441"];
d574 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", label="return null;", span="1448-1448"];
d620 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label=firstChar, span="1527-1527"];
d577 [cluster="System.Convert.ToInt64(object, System.IFormatProvider)", label="Entry System.Convert.ToInt64(object, System.IFormatProvider)", span="0-0"];
d578 [cluster="Unk.ToString", label="Entry Unk.ToString", span=""];
d579 [cluster="System.Convert.ToDouble(object, System.IFormatProvider)", label="Entry System.Convert.ToDouble(object, System.IFormatProvider)", span="0-0"];
d580 [cluster="System.Convert.ToBoolean(object, System.IFormatProvider)", label="Entry System.Convert.ToBoolean(object, System.IFormatProvider)", span="0-0"];
d581 [cluster="System.Convert.ToDateTime(object, System.IFormatProvider)", label="Entry System.Convert.ToDateTime(object, System.IFormatProvider)", span="0-0"];
d583 [cluster="string.FormatWith(System.IFormatProvider, object)", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
d584 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82"];
d290 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="!string.IsNullOrEmpty(prefix)", span="974-974"];
d419 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="!string.IsNullOrEmpty(declaration.Version)", span="1175-1175"];
d422 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="!string.IsNullOrEmpty(declaration.Encoding)", span="1180-1180"];
d425 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="!string.IsNullOrEmpty(declaration.Standalone)", span="1185-1185"];
d433 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="!string.IsNullOrEmpty(documentType.Name)", span="1198-1198"];
d436 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="!string.IsNullOrEmpty(documentType.Public)", span="1203-1203"];
d439 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="!string.IsNullOrEmpty(documentType.System)", span="1208-1208"];
d442 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="!string.IsNullOrEmpty(documentType.InternalSubset)", span="1213-1213"];
d656 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", label="reader.Value.ToString()", span="1598-1598"];
d659 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", label="version = reader.Value.ToString()", span="1602-1602"];
d662 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", label="encoding = reader.Value.ToString()", span="1606-1606"];
d665 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", label="standalone = reader.Value.ToString()", span="1610-1610"];
d677 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", label="reader.Value.ToString()", span="1635-1635"];
d680 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", label="name = reader.Value.ToString()", span="1639-1639"];
d683 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", label="publicId = reader.Value.ToString()", span="1643-1643"];
d686 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", label="systemId = reader.Value.ToString()", span="1647-1647"];
d689 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", label="internalSubset = reader.Value.ToString()", span="1651-1651"];
d60 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", label="Entry Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="143-143"];
d120 [cluster="Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", label="Exit Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="363-363"];
d233 [cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", label="Entry Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="827-827"];
d117 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string, string)", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string, string)", span="341-341"];
d47 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", label="XmlNodeWrapper attribute = new XmlNodeWrapper(_document.CreateAttribute(name))", span="107-107"];
d53 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", label="XmlNodeWrapper attribute = new XmlNodeWrapper(_document.CreateAttribute(qualifiedName, namespaceUri))", span="115-115"];
d278 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="manager.PushScope()", span="958-958"];
d375 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="manager.PushScope()", span="1095-1095"];
d397 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="manager.PopScope()", span="1143-1143"];
d461 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="return null;", span="1239-1239"];
d467 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="throw new JsonSerializationException(''XmlNodeConverter only supports deserializing XDocument or XElement.'');", span="1249-1249"];
d473 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="throw new JsonSerializationException(''XmlNodeConverter only supports deserializing XmlDocuments'');", span="1260-1260"];
d480 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="throw new JsonSerializationException(''XmlNodeConverter can only convert JSON that begins with an object.'');", span="1272-1272"];
d488 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="return element;", span="1292-1292"];
d491 [cluster="System.Type.IsAssignableFrom(System.Type)", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
d487 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="element.Remove()", span="1290-1290"];
d693 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", span="1627-1627"];
d672 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", label="string name = null", span="1629-1629"];
d676 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", label="reader.Read() && reader.TokenType != JsonToken.EndObject", span="1633-1633"];
d679 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", label="reader.Read()", span="1638-1638"];
d682 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", label="reader.Read()", span="1642-1642"];
d685 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", label="reader.Read()", span="1646-1646"];
d688 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", label="reader.Read()", span="1650-1650"];
d690 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", label="throw new JsonSerializationException(''Unexpected property name encountered while deserializing XmlDeclaration: '' + reader.Value);", span="1654-1654"];
d671 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", span="1589-1589"];
d651 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", label="propertyName == DeclarationName", span="1591-1591"];
d655 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", label="reader.Read() && reader.TokenType != JsonToken.EndObject", span="1596-1596"];
d658 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", label="reader.Read()", span="1601-1601"];
d661 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", label="reader.Read()", span="1605-1605"];
d664 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", label="reader.Read()", span="1609-1609"];
d666 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", label="throw new JsonSerializationException(''Unexpected property name encountered while deserializing XmlDeclaration: '' + reader.Value);", span="1613-1613"];
d591 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="count++", span="1468-1468"];
d501 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", label=TextName, span="1303-1303"];
d503 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", label=CDataName, span="1306-1306"];
d505 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", label=WhitespaceName, span="1309-1309"];
d507 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", label=SignificantWhitespaceName, span="1312-1312"];
d520 [cluster="string.Equals(string, string, System.StringComparison)", label="Entry string.Equals(string, string, System.StringComparison)", span="0-0"];
d246 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", label="XmlNamespaceManager manager = new XmlNamespaceManager(new NameTable())", span="910-910"];
d50 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", span="105-105"];
d48 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", label="attribute.Value = value", span="108-108"];
d178 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", span="529-529"];
d177 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", label="return new XAttributeWrapper(new XAttribute(name, value));", span="531-531"];
d621 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="'@'", span="1529-1529"];
d629 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="'$'", span="1541-1541"];
d109 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction(string, string)", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction(string, string)", span="337-337"];
d244 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="906-906"];
d257 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="936-936"];
d259 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="1080-1080"];
d254 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", span="922-922"];
d249 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", label="writer.WriteStartObject()", span="914-914"];
d252 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", label="writer.WriteEndObject()", span="919-919"];
d253 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="906-906"];
d296 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="980-980"];
d299 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="node.NamespaceUri == JsonNamespaceUri", span="985-985"];
d321 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="980-980"];
d288 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="968-968"];
d306 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="XmlNodeType.Element", span="993-993"];
d308 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="XmlNodeType.ProcessingInstruction", span="995-995"];
d310 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="XmlNodeType.DocumentType", span="997-997"];
d332 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="1021-1021"];
d336 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="IXmlNode childNode = node.ChildNodes[i]", span="1028-1028"];
d338 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="List<IXmlNode> nodes", span="1031-1031"];
d339 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="!nodesGroupedByName.TryGetValue(nodeName, out nodes)", span="1032-1032"];
d341 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="nodesGroupedByName.Add(nodeName, nodes)", span="1035-1035"];
d345 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="List<IXmlNode> groupedNodes = nodeNameGroup.Value", span="1045-1045"];
d347 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="groupedNodes.Count == 1", span="1048-1048"];
d350 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="!writeArray", span="1057-1057"];
d323 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", span="1012-1012"];
d344 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label=nodesGroupedByName, span="1043-1043"];
d357 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="i < groupedNodes.Count", span="1070-1070"];
d356 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="int i = 0", span="1070-1070"];
d745 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", span="1763-1763"];
d359 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="i++", span="1070-1070"];
d370 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="XmlNodeType.DocumentFragment", span="1085-1085"];
d447 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="1080-1080"];
d372 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="XmlNodeType.Element", span="1088-1088"];
d448 [cluster="Unk.All", label="Entry Unk.All", span=""];
d456 [cluster="lambda expression", label="Entry lambda expression", span="1089-1089"];
d381 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label=writePropertyName, span="1110-1110"];
d365 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="407-407"];
d384 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="writer.WriteValue(node.ChildNodes[0].Value)", span="1117-1117"];
d385 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="node.ChildNodes.Count == 0 && CollectionUtils.IsNullOrEmpty(node.Attributes)", span="1119-1119"];
d449 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)", span="1750-1750"];
d450 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
d392 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="i < node.Attributes.Count", span="1133-1133"];
d391 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="int i = 0", span="1133-1133"];
d394 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="i++", span="1133-1133"];
d396 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="writer.WriteEndObject()", span="1140-1140"];
d412 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label=writePropertyName, span="1166-1166"];
d414 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="writer.WriteValue(node.Value)", span="1168-1168"];
d416 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="IXmlDeclaration declaration = (IXmlDeclaration)node", span="1171-1171"];
d418 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="writer.WriteStartObject()", span="1173-1173"];
d430 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="IXmlDocumentType documentType = (IXmlDocumentType)node", span="1194-1194"];
d432 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="writer.WriteStartObject()", span="1196-1196"];
d588 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="int count = 0", span="1464-1464"];
d626 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", label="string namespacePrefix", span="1535-1535"];
d93 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", label="Exit Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="310-310"];
d89 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", label="XmlNodeWrapper xmlNodeWrapper = (XmlNodeWrapper) newChild", span="312-312"];
d92 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", label="return newChild;", span="316-316"];
d191 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="551-551"];
d192 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", label="Entry Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="710-710"];
d186 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", label="XDeclarationWrapper declarationWrapper = newChild as XDeclarationWrapper", span="553-553"];
d190 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", label="return base.AppendChild(newChild);", span="561-561"];
d229 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", label="Exit Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="764-764"];
d228 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", label="throw new InvalidOperationException();", span="766-766"];
d12 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", span="65-65"];
d100 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", span="332-332"];
d142 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", span="488-488"];
d16 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", span="70-70"];
d102 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", span="333-333"];
d146 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)", span="493-493"];
d20 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", span="75-75"];
d104 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", span="334-334"];
d149 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)", span="498-498"];
d652 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", label="string version = null", span="1593-1593"];
d653 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", label="string encoding = null", span="1594-1594"];
d654 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", label="string standalone = null", span="1595-1595"];
d105 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", span="335-335"];
d673 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", label="string publicId = null", span="1630-1630"];
d674 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", label="string systemId = null", span="1631-1631"];
d675 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", label="string internalSubset = null", span="1632-1632"];
d107 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDocumentType(string, string, string, string)", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDocumentType(string, string, string, string)", span="336-336"];
d3 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", span="55-55"];
d96 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateComment(string)", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateComment(string)", span="330-330"];
d133 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)", span="478-478"];
d737 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", span="1731-1731"];
d732 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", label="attributeName[5] == ':'", span="1740-1740"];
d733 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", label="prefix = attributeName.Substring(6, attributeName.Length - 6)", span="1742-1742"];
d730 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", label="prefix = string.Empty", span="1737-1737"];
d736 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", label="return false;", span="1747-1747"];
d493 [cluster="XDocument.cstr", label="Entry XDocument.cstr", span=""];
d132 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", span="460-460"];
d202 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", label="return new XDocumentWrapper((XDocument)node);", span="691-691"];
d494 [cluster="XmlDocument.cstr", label="Entry XmlDocument.cstr", span=""];
d2 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", span="49-49"];
d1 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", label="_document = document", span="52-52"];
d121 [cluster="Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", label="Entry Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", span="364-364"];
d601 [cluster="lambda expression", label="Entry lambda expression", span="1478-1478"];
d720 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", label="JsonToken.EndArray", span="1716-1716"];
d766 [label=propertyName, span=""];
d727 [cluster="lambda expression", label="Exit lambda expression", span="1695-1695"];
d335 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="i < node.ChildNodes.Count", span="1026-1026"];
d333 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="Dictionary<string, List<IXmlNode>> nodesGroupedByName = new Dictionary<string, List<IXmlNode>>()", span="1024-1024"];
d364 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
d281 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="manager.AddNamespace(attribute.LocalName, attribute.Value)", span="962-962"];
d380 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="manager.AddNamespace(namespacePrefix, namespaceUri)", span="1106-1106"];
d289 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="string prefix = (node.NamespaceUri == null || (node.LocalName == ''xmlns'' && node.NamespaceUri == ''http://www.w3.org/2000/xmlns/''))\r\n                ? null\r\n                : manager.LookupPrefix(node.NamespaceUri)", span="970-972"];
d650 [cluster="System.Nullable<T>.GetValueOrDefault()", label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0"];
d40 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", span="95-95"];
d39 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", label="return new XmlElementWrapper(_document.CreateElement(elementName));", span="97-97"];
d167 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", span="518-518"];
d166 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", label="return new XElementWrapper(new XElement(elementName));", span="520-520"];
d45 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", span="100-100"];
d44 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", label="return new XmlElementWrapper(_document.CreateElement(qualifiedName, namespaceUri));", span="102-102"];
d173 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", span="523-523"];
d171 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", label="string localName = MiscellaneousUtils.GetLocalName(qualifiedName)", span="525-525"];
d172 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", label="return new XElementWrapper(new XElement(XName.Get(localName, namespaceUri)));", span="526-526"];
d765 [label=string, span=""];
d603 [cluster="lambda expression", label="Exit lambda expression", span="1478-1478"];
d10 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", span="60-60"];
d9 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", label="return new XmlNodeWrapper(_document.CreateTextNode(text));", span="62-62"];
d140 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)", span="483-483"];
d139 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)", label="return new XObjectWrapper(new XText(text));", span="485-485"];
d582 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", span="60-60"];
d291 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="return prefix + '':'' + node.LocalName;", span="975-975"];
d292 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="return node.LocalName;", span="977-977"];
d420 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="writer.WritePropertyName(''@version'')", span="1177-1177"];
d421 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="writer.WriteValue(declaration.Version)", span="1178-1178"];
d423 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="writer.WritePropertyName(''@encoding'')", span="1182-1182"];
d424 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="writer.WriteValue(declaration.Encoding)", span="1183-1183"];
d426 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="writer.WritePropertyName(''@standalone'')", span="1187-1187"];
d428 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="writer.WriteEndObject()", span="1191-1191"];
d434 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="writer.WritePropertyName(''@name'')", span="1200-1200"];
d435 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="writer.WriteValue(documentType.Name)", span="1201-1201"];
d437 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="writer.WritePropertyName(''@public'')", span="1205-1205"];
d438 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="writer.WriteValue(documentType.Public)", span="1206-1206"];
d440 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="writer.WritePropertyName(''@system'')", span="1210-1210"];
d441 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="writer.WriteValue(documentType.System)", span="1211-1211"];
d443 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="writer.WritePropertyName(''@internalSubset'')", span="1215-1215"];
d445 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="writer.WriteEndObject()", span="1219-1219"];
d657 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", label="''@version''", span="1600-1600"];
d660 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", label="''@encoding''", span="1604-1604"];
d663 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", label="''@standalone''", span="1608-1608"];
d678 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", label="''@name''", span="1637-1637"];
d681 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", label="''@public''", span="1641-1641"];
d684 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", label="''@system''", span="1645-1645"];
d687 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", label="''@internalSubset''", span="1649-1649"];
d63 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", label="Exit Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="143-143"];
d61 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", label="XmlNodeWrapper xmlAttributeWrapper = (XmlNodeWrapper)attribute", span="145-145"];
d236 [cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", label="Exit Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="827-827"];
d234 [cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", label="XObjectWrapper wrapper = (XObjectWrapper)attribute", span="829-829"];
d52 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", span="113-113"];
d118 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string, string)", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string, string)", span="341-341"];
d181 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", span="534-534"];
d752 [label="Newtonsoft.Json.Converters.XmlDocumentWrapper", span=""];
d6 [cluster="XmlNodeWrapper.cstr", label="Entry XmlNodeWrapper.cstr", span=""];
d49 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", label="return attribute;", span="110-110"];
d54 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", label="attribute.Value = value", span="116-116"];
d55 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", label="return attribute;", span="118-118"];
d277 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label=parentElements, span="956-956"];
d279 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="parentElement.Attributes", span="959-959"];
d376 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="node.Attributes", span="1097-1097"];
d388 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="writer.WriteNull()", span="1125-1125"];
d389 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="writer.WriteValue(string.Empty)", span="1127-1127"];
d746 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", label="typeof(XObject).IsAssignableFrom(valueType)", span="1766-1766"];
d748 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", label="typeof(XmlNode).IsAssignableFrom(valueType)", span="1770-1770"];
d498 [cluster="Unk.Remove", label="Entry Unk.Remove", span=""];
d179 [cluster="Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", label="Entry Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", span="782-782"];
d180 [cluster="XAttribute.cstr", label="Entry XAttribute.cstr", span=""];
d34 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", span="90-90"];
d110 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction(string, string)", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction(string, string)", span="337-337"];
d160 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", span="513-513"];
d269 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="IXmlNode parent = node", span="940-940"];
d282 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="936-936"];
d268 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="List<IXmlNode> parentElements = null", span="938-938"];
d368 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="node.NodeType", span="1082-1082"];
d457 [cluster="lambda expression", label="n.LocalName == node.LocalName", span="1089-1089"];
d386 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="IXmlElement element = (IXmlElement)node", span="1121-1121"];
d390 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="writer.WriteStartObject()", span="1131-1131"];
d399 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label=writePropertyName, span="1148-1148"];
d400 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="writer.WriteComment(node.Value)", span="1149-1149"];
d407 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="node.NamespaceUri == ''http://www.w3.org/2000/xmlns/'' && node.Value == JsonNamespaceUri", span="1157-1157"];
d409 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="node.NamespaceUri == JsonNamespaceUri", span="1160-1160"];
d410 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="node.LocalName == ''Array''", span="1162-1162"];
d427 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="writer.WriteValue(declaration.Standalone)", span="1188-1188"];
d444 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="writer.WriteValue(documentType.InternalSubset)", span="1216-1216"];
d446 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="throw new JsonSerializationException(''Unexpected XmlNodeType when serializing nodes: '' + node.NodeType);", span="1222-1222"];
d200 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", label="Entry Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", span="688-688"];
d266 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", span="922-922"];
d261 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", label="value is XObject", span="925-925"];
d262 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", label="return XContainerWrapper.WrapNode((XObject)value);", span="926-926"];
d263 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", label="value is XmlNode", span="929-929"];
d264 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", label="return new XmlNodeWrapper((XmlNode)value);", span="930-930"];
d258 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="357-357"];
d260 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="365-365"];
d297 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="node.NodeType", span="982-982"];
d300 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="return ''$'' + node.LocalName;", span="986-986"];
d320 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="throw new JsonSerializationException(''Unexpected XmlNodeType when getting node name: '' + node.NodeType);", span="1008-1008"];
d298 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="XmlNodeType.Attribute", span="984-984"];
d303 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="return CDataName;", span="990-990"];
d305 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="return CommentName;", span="992-992"];
d313 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="return DeclarationName;", span="1000-1000"];
d315 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="return SignificantWhitespaceName;", span="1002-1002"];
d317 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="return TextName;", span="1004-1004"];
d319 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="return WhitespaceName;", span="1006-1006"];
d293 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="968-968"];
d361 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="1021-1021"];
d353 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label=writePropertyName, span="1065-1065"];
d354 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="writer.WritePropertyName(elementNames)", span="1066-1066"];
d355 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="writer.WriteStartArray()", span="1068-1068"];
d360 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="writer.WriteEndArray()", span="1075-1075"];
d334 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="int i = 0", span="1026-1026"];
d342 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="nodes.Add(childNode)", span="1038-1038"];
d340 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="nodes = new List<IXmlNode>()", span="1034-1034"];
d363 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
d346 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="bool writeArray", span="1046-1046"];
d352 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="string elementNames = nodeNameGroup.Key", span="1063-1063"];
d349 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="writeArray = true", span="1054-1054"];
d326 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", span="1012-1012"];
d324 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", label="IXmlNode jsonArrayAttribute = (node.Attributes != null)\r\n                ? node.Attributes.SingleOrDefault(a => a.LocalName == ''Array'' && a.NamespaceUri == JsonNamespaceUri)\r\n                : null", span="1014-1016"];
d751 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", span="1763-1763"];
d369 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="XmlNodeType.Document", span="1084-1084"];
d408 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="return;", span="1158-1158"];
d411 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="return;", span="1163-1163"];
d458 [cluster="lambda expression", label="Exit lambda expression", span="1089-1089"];
d451 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="810-810"];
d452 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", span="50-50"];
d740 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)", span="1750-1750"];
d739 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)", label="return c.Where(a => a.NamespaceUri != JsonNamespaceUri);", span="1752-1752"];
d366 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="373-373"];
d415 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="XmlNodeType.XmlDeclaration", span="1170-1170"];
d429 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="XmlNodeType.DocumentType", span="1193-1193"];
d90 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", label="_node.AppendChild(xmlNodeWrapper._node)", span="313-313"];
d91 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", label="_childNodes = null", span="314-314"];
d189 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", label="return declarationWrapper;", span="557-557"];
d223 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", label="Exit Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="710-710"];
d220 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", label="Container.Add(newChild.WrappedNode)", span="712-712"];
d222 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", label="return newChild;", span="715-715"];
d187 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", label="declarationWrapper != null", span="554-554"];
d188 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", label="Document.Declaration = declarationWrapper.Declaration", span="556-556"];
d759 [label="Newtonsoft.Json.Converters.XDocumentWrapper", span=""];
d230 [cluster="System.InvalidOperationException.InvalidOperationException()", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
d14 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", span="65-65"];
d13 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", label="return new XmlNodeWrapper(_document.CreateCDataSection(data));", span="67-67"];
d144 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", span="488-488"];
d143 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", label="return new XObjectWrapper(new XCData(data));", span="490-490"];
d18 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", span="70-70"];
d17 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", label="return new XmlNodeWrapper(_document.CreateWhitespace(text));", span="72-72"];
d148 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)", span="493-493"];
d147 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)", label="return new XObjectWrapper(new XText(text));", span="495-495"];
d22 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", span="75-75"];
d21 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", label="return new XmlNodeWrapper(_document.CreateSignificantWhitespace(text));", span="77-77"];
d151 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)", span="498-498"];
d150 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)", label="return new XObjectWrapper(new XText(text));", span="500-500"];
d24 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", span="80-80"];
d106 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", span="335-335"];
d152 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", span="503-503"];
d29 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", span="85-85"];
d108 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDocumentType(string, string, string, string)", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDocumentType(string, string, string, string)", span="336-336"];
d156 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", span="508-508"];
d5 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", span="55-55"];
d4 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", label="return new XmlNodeWrapper(_document.CreateComment(data));", span="57-57"];
d135 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)", span="478-478"];
d134 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)", label="return new XObjectWrapper(new XComment(text));", span="480-480"];
d731 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", label="return true;", span="1738-1738"];
d734 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", label="return true;", span="1743-1743"];
d738 [cluster="string.Substring(int, int)", label="Entry string.Substring(int, int)", span="0-0"];
d201 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", label="node is XDocument", span="690-690"];
d218 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", label="Exit Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", span="688-688"];
d65 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", label="Entry Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", span="150-150"];
d122 [cluster="Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", label="Exit Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", span="364-364"];
d241 [cluster="Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", label="Entry Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", span="854-854"];
d343 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="i++", span="1026-1026"];
d280 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="attribute.NamespaceUri == ''http://www.w3.org/2000/xmlns/'' && attribute.LocalName != ''xmlns''", span="961-961"];
d378 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="string namespacePrefix = (attribute.LocalName != ''xmlns'')\r\n                                    ? attribute.LocalName\r\n                                    : string.Empty", span="1101-1103"];
d379 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="string namespaceUri = attribute.Value", span="1104-1104"];
d41 [cluster="XmlElementWrapper.cstr", label="Entry XmlElementWrapper.cstr", span=""];
d42 [cluster="Unk.CreateElement", label="Entry Unk.CreateElement", span=""];
d168 [cluster="Newtonsoft.Json.Converters.XElementWrapper.XElementWrapper(XElement)", label="Entry Newtonsoft.Json.Converters.XElementWrapper.XElementWrapper(XElement)", span="822-822"];
d169 [cluster="XElement.cstr", label="Entry XElement.cstr", span=""];
d174 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.GetLocalName(string)", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.GetLocalName(string)", span="103-103"];
d175 [cluster="Unk.Get", label="Entry Unk.Get", span=""];
d11 [cluster="Unk.CreateTextNode", label="Entry Unk.CreateTextNode", span=""];
d136 [cluster="XObjectWrapper.cstr", label="Entry XObjectWrapper.cstr", span=""];
d141 [cluster="XText.cstr", label="Entry XText.cstr", span=""];
d62 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", label="_element.SetAttributeNode((XmlAttribute)xmlAttributeWrapper.WrappedNode)", span="147-147"];
d235 [cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", label="Element.Add(wrapper.WrappedNode)", span="830-830"];
d56 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", span="113-113"];
d184 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", span="534-534"];
d182 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", label="string localName = MiscellaneousUtils.GetLocalName(qualifiedName)", span="536-536"];
d183 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", label="return new XAttributeWrapper(new XAttribute(XName.Get(localName, namespaceUri), value));", span="537-537"];
d25 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", label="return new XmlDeclarationWrapper(_document.CreateXmlDeclaration(version, encoding, standalone));", span="82-82"];
d30 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", label="return new XmlDocumentTypeWrapper(_document.CreateDocumentType(name, publicId, systemId, null));", span="87-87"];
d35 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", label="return new XmlNodeWrapper(_document.CreateProcessingInstruction(target, data));", span="92-92"];
d276 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="parentElements.Reverse()", span="954-954"];
d273 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="parentElements = new List<IXmlNode>()", span="946-946"];
d377 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="attribute.NamespaceUri == ''http://www.w3.org/2000/xmlns/''", span="1099-1099"];
d387 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="element.IsEmpty", span="1124-1124"];
d453 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="772-772"];
d747 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", label="return true;", span="1767-1767"];
d749 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", label="return true;", span="1771-1771"];
d750 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", label="return false;", span="1774-1774"];
d214 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", label="return new XAttributeWrapper((XAttribute)node);", span="703-703"];
d231 [cluster="Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", label="Exit Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", span="782-782"];
d36 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", span="90-90"];
d162 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", span="513-513"];
d161 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", label="return new XProcessingInstructionWrapper(new XProcessingInstruction(target, data));", span="515-515"];
d270 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="(parent = parent.ParentNode) != null", span="941-941"];
d275 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="parentElements != null", span="952-952"];
d272 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="parentElements == null", span="945-945"];
d274 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="parentElements.Add(parent)", span="948-948"];
d398 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="XmlNodeType.Comment", span="1147-1147"];
d401 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="XmlNodeType.Attribute", span="1151-1151"];
d764 [label="Newtonsoft.Json.Converters.IXmlNode", span=""];
d455 [cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1237-1237"];
d406 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="XmlNodeType.SignificantWhitespace", span="1156-1156"];
d322 [cluster="JsonSerializationException.cstr", label="Entry JsonSerializationException.cstr", span=""];
d203 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", label="node is XElement", span="692-692"];
d204 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", label="return new XElementWrapper((XElement)node);", span="693-693"];
d205 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", label="node is XContainer", span="694-694"];
d206 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", label="return new XContainerWrapper((XContainer)node);", span="695-695"];
d207 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", label="node is XProcessingInstruction", span="696-696"];
d208 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", label="return new XProcessingInstructionWrapper((XProcessingInstruction)node);", span="697-697"];
d209 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", label="node is XText", span="698-698"];
d210 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", label="return new XTextWrapper((XText)node);", span="699-699"];
d211 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", label="node is XComment", span="700-700"];
d212 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", label="return new XCommentWrapper((XComment)node);", span="701-701"];
d213 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", label="node is XAttribute", span="702-702"];
d215 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", label="node is XDocumentType", span="704-704"];
d216 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", label="return new XDocumentTypeWrapper((XDocumentType)node);", span="705-705"];
d217 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", label="return new XObjectWrapper(node);", span="707-707"];
d265 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", label="throw new ArgumentException(''Value must be an XML object.'', ''value'');", span="933-933"];
d75 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", label="Entry Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", span="230-230"];
d302 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="XmlNodeType.CDATA", span="989-989"];
d304 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="XmlNodeType.Comment", span="991-991"];
d312 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="XmlNodeType.XmlDeclaration", span="999-999"];
d314 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="XmlNodeType.SignificantWhitespace", span="1001-1001"];
d316 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="XmlNodeType.Text", span="1003-1003"];
d318 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="XmlNodeType.Whitespace", span="1005-1005"];
d367 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="381-381"];
d284 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
d283 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
d325 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", label="return (jsonArrayAttribute != null && XmlConvert.ToBoolean(jsonArrayAttribute.Value));", span="1018-1018"];
d327 [cluster="Unk.SingleOrDefault", label="Entry Unk.SingleOrDefault", span=""];
d329 [cluster="lambda expression", label="Entry lambda expression", span="1015-1015"];
d741 [cluster="Unk.Where", label="Entry Unk.Where", span=""];
d742 [cluster="lambda expression", label="Entry lambda expression", span="1752-1752"];
d756 [label="Newtonsoft.Json.Converters.XmlNodeWrapper", span=""];
d94 [cluster="Unk.AppendChild", label="Entry Unk.AppendChild", span=""];
d760 [label="Newtonsoft.Json.Converters.XContainerWrapper", span=""];
d221 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", label="_childNodes = null", span="713-713"];
d224 [cluster="Unk.Add", label="Entry Unk.Add", span=""];
d15 [cluster="Unk.CreateCDataSection", label="Entry Unk.CreateCDataSection", span=""];
d145 [cluster="XCData.cstr", label="Entry XCData.cstr", span=""];
d19 [cluster="Unk.CreateWhitespace", label="Entry Unk.CreateWhitespace", span=""];
d23 [cluster="Unk.CreateSignificantWhitespace", label="Entry Unk.CreateSignificantWhitespace", span=""];
d26 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", span="80-80"];
d154 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", span="503-503"];
d153 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", label="return new XDeclarationWrapper(new XDeclaration(version, encoding, standalone));", span="505-505"];
d31 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", span="85-85"];
d158 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", span="508-508"];
d157 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", label="return new XDocumentTypeWrapper(new XDocumentType(name, publicId, systemId, internalSubset));", span="510-510"];
d7 [cluster="Unk.CreateComment", label="Entry Unk.CreateComment", span=""];
d137 [cluster="XComment.cstr", label="Entry XComment.cstr", span=""];
d67 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", label="Exit Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", span="150-150"];
d66 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", label="return _element.GetPrefixOfNamespace(namespaceUri);", span="152-152"];
d243 [cluster="Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", label="Exit Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", span="854-854"];
d242 [cluster="Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", label="return Element.GetPrefixOfNamespace(namespaceUri);", span="856-856"];
d232 [cluster="Newtonsoft.Json.Converters.XElementWrapper.XElementWrapper(XElement)", label="Exit Newtonsoft.Json.Converters.XElementWrapper.XElementWrapper(XElement)", span="822-822"];
d753 [label="Newtonsoft.Json.Converters.XmlElementWrapper", span=""];
d64 [cluster="Unk.SetAttributeNode", label="Entry Unk.SetAttributeNode", span=""];
d762 [label="Newtonsoft.Json.Converters.XElementWrapper", span=""];
d27 [cluster="XmlDeclarationWrapper.cstr", label="Entry XmlDeclarationWrapper.cstr", span=""];
d28 [cluster="Unk.CreateXmlDeclaration", label="Entry Unk.CreateXmlDeclaration", span=""];
d32 [cluster="XmlDocumentTypeWrapper.cstr", label="Entry XmlDocumentTypeWrapper.cstr", span=""];
d33 [cluster="Unk.CreateDocumentType", label="Entry Unk.CreateDocumentType", span=""];
d37 [cluster="Unk.CreateProcessingInstruction", label="Entry Unk.CreateProcessingInstruction", span=""];
d285 [cluster="System.Collections.Generic.List<T>.Reverse()", label="Entry System.Collections.Generic.List<T>.Reverse()", span="0-0"];
d163 [cluster="Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", label="Entry Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", span="633-633"];
d164 [cluster="XProcessingInstruction.cstr", label="Entry XProcessingInstruction.cstr", span=""];
d271 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", label="parent.NodeType == XmlNodeType.Element", span="943-943"];
d402 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="XmlNodeType.Text", span="1152-1152"];
d405 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="XmlNodeType.Whitespace", span="1155-1155"];
d198 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", label="Entry Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", span="659-659"];
d193 [cluster="Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", label="Entry Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", span="573-573"];
d195 [cluster="Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", label="Entry Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", span="603-603"];
d128 [cluster="Newtonsoft.Json.Converters.XDocumentTypeWrapper.XDocumentTypeWrapper(XDocumentType)", label="Entry Newtonsoft.Json.Converters.XDocumentTypeWrapper.XDocumentTypeWrapper(XDocumentType)", span="421-421"];
d219 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", label="Entry Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", span="723-723"];
d267 [cluster="System.ArgumentException.ArgumentException(string, string)", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
d77 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", label="Exit Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", span="230-230"];
d86 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", label="return new XmlNodeWrapper(node);", span="274-274"];
d76 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", label="_node = node", span="232-232"];
d328 [cluster="Unk.ToBoolean", label="Entry Unk.ToBoolean", span=""];
d331 [cluster="lambda expression", label="Exit lambda expression", span="1015-1015"];
d330 [cluster="lambda expression", label="a.LocalName == ''Array'' && a.NamespaceUri == JsonNamespaceUri", span="1015-1015"];
d744 [cluster="lambda expression", label="Exit lambda expression", span="1752-1752"];
d743 [cluster="lambda expression", label="a.NamespaceUri != JsonNamespaceUri", span="1752-1752"];
d125 [cluster="Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", label="Entry Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", span="388-388"];
d155 [cluster="XDeclaration.cstr", label="Entry XDeclaration.cstr", span=""];
d159 [cluster="XDocumentType.cstr", label="Entry XDocumentType.cstr", span=""];
d68 [cluster="Unk.GetPrefixOfNamespace", label="Entry Unk.GetPrefixOfNamespace", span=""];
d58 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", label="_element = element", span="140-140"];
d197 [cluster="Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", label="Exit Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", span="633-633"];
d403 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="XmlNodeType.CDATA", span="1153-1153"];
d404 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", label="XmlNodeType.ProcessingInstruction", span="1154-1154"];
d199 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", label="Exit Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", span="659-659"];
d194 [cluster="Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", label="Exit Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", span="573-573"];
d196 [cluster="Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", label="Exit Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", span="603-603"];
d130 [cluster="Newtonsoft.Json.Converters.XDocumentTypeWrapper.XDocumentTypeWrapper(XDocumentType)", label="Exit Newtonsoft.Json.Converters.XDocumentTypeWrapper.XDocumentTypeWrapper(XDocumentType)", span="421-421"];
d129 [cluster="Newtonsoft.Json.Converters.XDocumentTypeWrapper.XDocumentTypeWrapper(XDocumentType)", label="_documentType = documentType", span="424-424"];
d226 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", label="Exit Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", span="723-723"];
d225 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", label="_xmlObject = xmlObject", span="725-725"];
d78 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", label="Entry Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", span="263-263"];
d79 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", label="node.NodeType", span="265-265"];
d87 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", label="Exit Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", span="263-263"];
d127 [cluster="Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", label="Exit Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", span="388-388"];
d126 [cluster="Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", label="Declaration = declaration", span="391-391"];
d57 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", label="Entry Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", span="137-137"];
d59 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", label="Exit Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", span="137-137"];
d758 [label="Newtonsoft.Json.Converters.XDocumentTypeWrapper", span=""];
d761 [label="Newtonsoft.Json.Converters.XObjectWrapper", span=""];
d81 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", label="return new XmlElementWrapper((XmlElement) node);", span="268-268"];
d83 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", label="return new XmlDeclarationWrapper((XmlDeclaration) node);", span="270-270"];
d85 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", label="return new XmlDocumentTypeWrapper((XmlDocumentType) node);", span="272-272"];
d80 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", label="XmlNodeType.Element", span="267-267"];
d82 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", label="XmlNodeType.XmlDeclaration", span="269-269"];
d84 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", label="XmlNodeType.DocumentType", span="271-271"];
d757 [label="Newtonsoft.Json.Converters.XDeclarationWrapper", span=""];
d69 [cluster="Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)", label="Entry Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)", span="165-165"];
d72 [cluster="Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.XmlDocumentTypeWrapper(XmlDocumentType)", label="Entry Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.XmlDocumentTypeWrapper(XmlDocumentType)", span="193-193"];
d71 [cluster="Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)", label="Exit Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)", span="165-165"];
d70 [cluster="Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)", label="_declaration = declaration", span="168-168"];
d74 [cluster="Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.XmlDocumentTypeWrapper(XmlDocumentType)", label="Exit Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.XmlDocumentTypeWrapper(XmlDocumentType)", span="193-193"];
d73 [cluster="Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.XmlDocumentTypeWrapper(XmlDocumentType)", label="_documentType = documentType", span="196-196"];
d754 [label="Newtonsoft.Json.Converters.XmlDeclarationWrapper", span=""];
d755 [label="Newtonsoft.Json.Converters.XmlDocumentTypeWrapper", span=""];
n50 -> n1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest", style=dashed];
n3 -> n8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest", style=dashed];
n6 -> n8  [color=darkseagreen4, key=1, label=v, style=dashed];
n17 -> n34  [color=darkseagreen4, key=1, label=specTests, style=dashed];
n35 -> n47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n26 -> n34  [color=darkseagreen4, key=1, label=jsonSchemaSpecTest, style=dashed];
d495 -> d527  [color=green, key=1, label=string, style=dashed];
d495 -> d532  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
d495 -> d534  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
d495 -> d539  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d495 -> d540  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d495 -> d541  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d495 -> d542  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d495 -> d543  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
d495 -> d544  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d495 -> d545  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
d495 -> d546  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
d533 -> d538  [color=darkseagreen4, key=1, label=element, style=dashed];
d533 -> d540  [color=darkseagreen4, key=1, label=element, style=dashed];
d533 -> d544  [color=darkseagreen4, key=1, label=element, style=dashed];
d497 -> d700  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
d497 -> d703  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d497 -> d704  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d497 -> d706  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d497 -> d707  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d497 -> d711  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
d497 -> d712  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d497 -> d715  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d497 -> d716  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d497 -> d718  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d497 -> d722  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d497 -> d723  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d548 -> d612  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d548 -> d613  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d548 -> d614  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d548 -> d623  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d548 -> d628  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
d548 -> d631  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d548 -> d636  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
d548 -> d640  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
d548 -> d646  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d554 -> d557  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d554 -> d558  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d554 -> d559  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d554 -> d560  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d554 -> d561  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d554 -> d562  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d554 -> d563  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d554 -> d564  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d554 -> d565  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d554 -> d566  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d554 -> d567  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d554 -> d568  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d554 -> d569  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d554 -> d570  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d554 -> d573  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d554 -> d575  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d525 -> d535  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
d459 -> d482  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d459 -> d465  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d459 -> d466  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d459 -> d471  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d459 -> d472  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d459 -> d478  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d459 -> d479  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d459 -> d483  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d459 -> d484  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d459 -> d485  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d499 -> d516  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d499 -> d502  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d499 -> d504  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d499 -> d506  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d499 -> d508  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d499 -> d509  [color=darkseagreen4, key=1, label=string, style=dashed];
d499 -> d510  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d499 -> d511  [color=darkseagreen4, key=1, label=string, style=dashed];
d499 -> d512  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d499 -> d513  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d499 -> d514  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d463 -> d482  [color=darkseagreen4, key=1, label=document, style=dashed];
d463 -> d477  [color=darkseagreen4, key=1, label=document, style=dashed];
d463 -> d484  [color=darkseagreen4, key=1, label=document, style=dashed];
d463 -> d489  [color=darkseagreen4, key=1, label=document, style=dashed];
d464 -> d482  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
d464 -> d477  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
d464 -> d484  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
d462 -> d482  [color=darkseagreen4, key=1, label=manager, style=dashed];
d462 -> d484  [color=darkseagreen4, key=1, label=manager, style=dashed];
d763 -> d482  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d516  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d540  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d544  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d247  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d248  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d250  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d251  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d301  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d307  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d309  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d311  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d351  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d382  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d383  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d393  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d395  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d413  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d417  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d431  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d481  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d484  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d510  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d512  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d514  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d590  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d592  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d593  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d594  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d596  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d627  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d707  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d709  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d711  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d712  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d763 -> d716  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
d469 -> d482  [color=darkseagreen4, key=1, label=document, style=dashed];
d469 -> d477  [color=darkseagreen4, key=1, label=document, style=dashed];
d469 -> d484  [color=darkseagreen4, key=1, label=document, style=dashed];
d469 -> d489  [color=darkseagreen4, key=1, label=document, style=dashed];
d470 -> d482  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
d470 -> d477  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
d470 -> d484  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
d475 -> d482  [color=darkseagreen4, key=1, label=document, style=dashed];
d475 -> d477  [color=darkseagreen4, key=1, label=document, style=dashed];
d475 -> d484  [color=darkseagreen4, key=1, label=document, style=dashed];
d475 -> d489  [color=darkseagreen4, key=1, label=document, style=dashed];
d476 -> d482  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
d476 -> d484  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
d598 -> d605  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlElement", style=dashed];
d598 -> d606  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlElement", style=dashed];
d598 -> d607  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlElement", style=dashed];
d702 -> d707  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
d702 -> d726  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
d702 -> d712  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
d710 -> d725  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d714 -> d716  [color=darkseagreen4, key=1, label=constructorName, style=dashed];
d609 -> d625  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
d609 -> d639  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
d609 -> d641  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
d609 -> d647  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
d624 -> d628  [color=darkseagreen4, key=1, label=attributeValue, style=dashed];
d632 -> d641  [color=darkseagreen4, key=1, label=attributeValue, style=dashed];
d633 -> d641  [color=darkseagreen4, key=1, label=jsonPrefix, style=dashed];
d586 -> d590  [color=darkseagreen4, key=1, label=nestedArrayElement, style=dashed];
d586 -> d593  [color=darkseagreen4, key=1, label=nestedArrayElement, style=dashed];
d522 -> d587  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
d522 -> d589  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d522 -> d590  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d522 -> d593  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
d522 -> d602  [color=darkseagreen4, key=1, label=string, style=dashed];
d522 -> d596  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
d486 -> d488  [color=darkseagreen4, key=1, label=element, style=dashed];
d521 -> d676  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d521 -> d677  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d521 -> d679  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d521 -> d682  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d521 -> d685  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d521 -> d688  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d521 -> d690  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d521 -> d692  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
d519 -> d655  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d519 -> d656  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d519 -> d658  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d519 -> d661  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d519 -> d664  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d519 -> d666  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
d519 -> d668  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
d519 -> d670  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
d622 -> d625  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
d622 -> d627  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
d630 -> d641  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
d245 -> d247  [color=darkseagreen4, key=1, label=node, style=dashed];
d245 -> d250  [color=darkseagreen4, key=1, label=node, style=dashed];
d337 -> d339  [color=darkseagreen4, key=1, label=nodeName, style=dashed];
d337 -> d341  [color=darkseagreen4, key=1, label=nodeName, style=dashed];
d373 -> d456  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d88 -> d92  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
d185 -> d190  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
d649 -> d729  [color=darkseagreen4, key=1, label=string, style=dashed];
d649 -> d732  [color=darkseagreen4, key=1, label=string, style=dashed];
d735 -> d737  [color=darkseagreen4, key=1, label="out string", style=dashed];
d595 -> d601  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d705 -> d709  [color=darkseagreen4, key=1, label=count, style=dashed];
d705 -> d708  [color=darkseagreen4, key=1, label=count, style=dashed];
d708 -> d709  [color=darkseagreen4, key=1, label=count, style=dashed];
d708 -> d708  [color=darkseagreen4, key=1, label=count, style=dashed];
d610 -> d613  [color=darkseagreen4, key=1, label=finishedAttributes, style=dashed];
d611 -> d613  [color=darkseagreen4, key=1, label=finishedElement, style=dashed];
d618 -> d620  [color=darkseagreen4, key=1, label=firstChar, style=dashed];
d638 -> d640  [color=darkseagreen4, key=1, label=jsonPrefix, style=dashed];
d638 -> d641  [color=darkseagreen4, key=1, label=jsonPrefix, style=dashed];
d170 -> d172  [color=darkseagreen4, key=1, label=string, style=dashed];
d47 -> d49  [color=darkseagreen4, key=1, label=attribute, style=dashed];
d53 -> d55  [color=darkseagreen4, key=1, label=attribute, style=dashed];
d591 -> d594  [color=darkseagreen4, key=1, label=count, style=dashed];
d591 -> d591  [color=darkseagreen4, key=1, label=count, style=dashed];
d246 -> d250  [color=darkseagreen4, key=1, label=manager, style=dashed];
d244 -> d250  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d244 -> d249  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d244 -> d252  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d257 -> d278  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
d257 -> d281  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
d259 -> d371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d259 -> d373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
d259 -> d374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d259 -> d382  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d259 -> d383  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
d259 -> d393  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d259 -> d395  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d259 -> d413  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d259 -> d417  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d259 -> d431  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d259 -> d375  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
d259 -> d397  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
d259 -> d457  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
d259 -> d376  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
d259 -> d380  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
d259 -> d381  [color=darkseagreen4, key=1, label=bool, style=dashed];
d259 -> d384  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d259 -> d385  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
d259 -> d388  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d259 -> d389  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d259 -> d390  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d259 -> d392  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
d259 -> d396  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d259 -> d399  [color=darkseagreen4, key=1, label=bool, style=dashed];
d259 -> d400  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d259 -> d407  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
d259 -> d409  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
d259 -> d410  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
d259 -> d412  [color=darkseagreen4, key=1, label=bool, style=dashed];
d259 -> d414  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d259 -> d418  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d259 -> d420  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d259 -> d421  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d259 -> d423  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d259 -> d424  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d259 -> d426  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d259 -> d427  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d259 -> d428  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d259 -> d432  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d259 -> d434  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d259 -> d435  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d259 -> d437  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d259 -> d438  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d259 -> d440  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d259 -> d441  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d259 -> d443  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d259 -> d444  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d259 -> d445  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d259 -> d446  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
d254 -> d262  [color=darkseagreen4, key=1, label=object, style=dashed];
d254 -> d263  [color=darkseagreen4, key=1, label=object, style=dashed];
d254 -> d264  [color=darkseagreen4, key=1, label=object, style=dashed];
d296 -> d301  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
d296 -> d307  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
d296 -> d309  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
d296 -> d311  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
d296 -> d299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
d296 -> d300  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
d296 -> d320  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
d288 -> d291  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
d288 -> d292  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
d332 -> d351  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d332 -> d358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d332 -> d335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
d332 -> d353  [color=darkseagreen4, key=1, label=bool, style=dashed];
d332 -> d354  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d332 -> d355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d332 -> d360  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
d336 -> d342  [color=darkseagreen4, key=1, label=childNode, style=dashed];
d345 -> d351  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
d345 -> d358  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
d345 -> d347  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
d345 -> d357  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
d356 -> d358  [color=darkseagreen4, key=1, label=i, style=dashed];
d356 -> d359  [color=darkseagreen4, key=1, label=i, style=dashed];
d745 -> d748  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d359 -> d359  [color=darkseagreen4, key=1, label=i, style=dashed];
d391 -> d393  [color=darkseagreen4, key=1, label=i, style=dashed];
d391 -> d394  [color=darkseagreen4, key=1, label=i, style=dashed];
d394 -> d394  [color=darkseagreen4, key=1, label=i, style=dashed];
d416 -> d419  [color=darkseagreen4, key=1, label=declaration, style=dashed];
d416 -> d422  [color=darkseagreen4, key=1, label=declaration, style=dashed];
d416 -> d425  [color=darkseagreen4, key=1, label=declaration, style=dashed];
d416 -> d421  [color=darkseagreen4, key=1, label=declaration, style=dashed];
d416 -> d424  [color=darkseagreen4, key=1, label=declaration, style=dashed];
d416 -> d427  [color=darkseagreen4, key=1, label=declaration, style=dashed];
d430 -> d433  [color=darkseagreen4, key=1, label=documentType, style=dashed];
d430 -> d436  [color=darkseagreen4, key=1, label=documentType, style=dashed];
d430 -> d439  [color=darkseagreen4, key=1, label=documentType, style=dashed];
d430 -> d442  [color=darkseagreen4, key=1, label=documentType, style=dashed];
d430 -> d435  [color=darkseagreen4, key=1, label=documentType, style=dashed];
d430 -> d438  [color=darkseagreen4, key=1, label=documentType, style=dashed];
d430 -> d441  [color=darkseagreen4, key=1, label=documentType, style=dashed];
d430 -> d444  [color=darkseagreen4, key=1, label=documentType, style=dashed];
d588 -> d594  [color=darkseagreen4, key=1, label=count, style=dashed];
d588 -> d591  [color=darkseagreen4, key=1, label=count, style=dashed];
d192 -> d222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
d186 -> d189  [color=darkseagreen4, key=1, label=declarationWrapper, style=dashed];
d766 -> d726  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
d333 -> d339  [color=darkseagreen4, key=1, label=nodesGroupedByName, style=dashed];
d333 -> d341  [color=darkseagreen4, key=1, label=nodesGroupedByName, style=dashed];
d333 -> d344  [color=darkseagreen4, key=1, label=nodesGroupedByName, style=dashed];
d289 -> d291  [color=darkseagreen4, key=1, label=prefix, style=dashed];
d765 -> d602  [color=darkseagreen4, key=1, label=string, style=dashed];
d181 -> d183  [color=darkseagreen4, key=1, label=string, style=dashed];
d752 -> d39  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
d752 -> d44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
d752 -> d9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
d752 -> d4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
d752 -> d13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
d752 -> d17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
d752 -> d21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
d752 -> d25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
d752 -> d30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
d752 -> d35  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
d277 -> d279  [color=darkseagreen4, key=1, label=parentElement, style=dashed];
d279 -> d281  [color=darkseagreen4, key=1, label=attribute, style=dashed];
d268 -> d277  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
d268 -> d272  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
d268 -> d274  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
d268 -> d275  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
d268 -> d276  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
d200 -> d202  [color=darkseagreen4, key=1, label=XObject, style=dashed];
d200 -> d203  [color=darkseagreen4, key=1, label=XObject, style=dashed];
d200 -> d204  [color=darkseagreen4, key=1, label=XObject, style=dashed];
d200 -> d205  [color=darkseagreen4, key=1, label=XObject, style=dashed];
d200 -> d206  [color=darkseagreen4, key=1, label=XObject, style=dashed];
d200 -> d207  [color=darkseagreen4, key=1, label=XObject, style=dashed];
d200 -> d208  [color=darkseagreen4, key=1, label=XObject, style=dashed];
d200 -> d209  [color=darkseagreen4, key=1, label=XObject, style=dashed];
d200 -> d210  [color=darkseagreen4, key=1, label=XObject, style=dashed];
d200 -> d211  [color=darkseagreen4, key=1, label=XObject, style=dashed];
d200 -> d212  [color=darkseagreen4, key=1, label=XObject, style=dashed];
d200 -> d213  [color=darkseagreen4, key=1, label=XObject, style=dashed];
d200 -> d214  [color=darkseagreen4, key=1, label=XObject, style=dashed];
d200 -> d215  [color=darkseagreen4, key=1, label=XObject, style=dashed];
d200 -> d216  [color=darkseagreen4, key=1, label=XObject, style=dashed];
d200 -> d217  [color=darkseagreen4, key=1, label=XObject, style=dashed];
d334 -> d343  [color=darkseagreen4, key=1, label=i, style=dashed];
d340 -> d342  [color=darkseagreen4, key=1, label=nodes, style=dashed];
d352 -> d354  [color=darkseagreen4, key=1, label=elementNames, style=dashed];
d324 -> d329  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d739 -> d742  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d759 -> d190  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XDocumentWrapper", style=dashed];
d343 -> d343  [color=darkseagreen4, key=1, label=i, style=dashed];
d378 -> d380  [color=darkseagreen4, key=1, label=namespacePrefix, style=dashed];
d273 -> d277  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
d273 -> d276  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
d273 -> d275  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
d270 -> d274  [color=darkseagreen4, key=1, label=parent, style=dashed];
d764 -> d457  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
d756 -> d90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeWrapper", style=dashed];
d760 -> d220  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XContainerWrapper", style=dashed];
d753 -> d62  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlElementWrapper", style=dashed];
d753 -> d66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlElementWrapper", style=dashed];
d762 -> d235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XElementWrapper", style=dashed];
d762 -> d242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XElementWrapper", style=dashed];
d78 -> d86  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
d78 -> d81  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
d78 -> d83  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
d78 -> d85  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
}
