digraph  {
m0_238 [cluster="int.ToString(System.IFormatProvider)", file="BsonWriterTests.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m0_142 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", span="201-201"];
m0_143 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="BsonWriterTests.cs", label="MemoryStream ms = new MemoryStream()", span="203-203"];
m0_144 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="BsonWriterTests.cs", label="BsonWriter writer = new BsonWriter(ms)", span="204-204"];
m0_160 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="BsonWriterTests.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="229-229"];
m0_162 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="BsonWriterTests.cs", label="string bson = BytesToHex(ms.ToArray())", span="232-232"];
m0_145 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="BsonWriterTests.cs", label="writer.WriteStartObject()", span="205-205"];
m0_146 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="BsonWriterTests.cs", label="writer.WritePropertyName(''_id'')", span="207-207"];
m0_147 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="BsonWriterTests.cs", label="writer.WriteValue(HexToBytes(''4A-78-93-79-17-22-00-00-00-00-61-CF''))", span="208-208"];
m0_148 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="BsonWriterTests.cs", label="writer.WritePropertyName(''a'')", span="210-210"];
m0_149 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="BsonWriterTests.cs", label="writer.WriteStartArray()", span="211-211"];
m0_153 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="BsonWriterTests.cs", label="writer.WriteValue(value)", span="218-218"];
m0_155 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="BsonWriterTests.cs", label="writer.WriteEndArray()", span="220-220"];
m0_156 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="BsonWriterTests.cs", label="writer.WritePropertyName(''b'')", span="222-222"];
m0_157 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="BsonWriterTests.cs", label="writer.WriteValue(''test'')", span="223-223"];
m0_158 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="BsonWriterTests.cs", label="writer.WriteEndObject()", span="225-225"];
m0_159 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="BsonWriterTests.cs", label="writer.Flush()", span="227-227"];
m0_150 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="BsonWriterTests.cs", label="int i = 1", span="212-212"];
m0_151 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="BsonWriterTests.cs", label="i <= 8", span="212-212"];
m0_152 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="BsonWriterTests.cs", label="double value = (i != 5)\r\n                         ? Convert.ToDouble(i)\r\n                         : 5.78960446186581E+77d", span="214-216"];
m0_154 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="BsonWriterTests.cs", label="i++", span="212-212"];
m0_161 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="BsonWriterTests.cs", label="string expected = ''87-00-00-00-05-5F-69-64-00-0C-00-00-00-00-4A-78-93-79-17-22-00-00-00-00-61-CF-04-61-00-5D-00-00-00-01-30-00-00-00-00-00-00-00-F0-3F-01-31-00-00-00-00-00-00-00-00-40-01-32-00-00-00-00-00-00-00-08-40-01-33-00-00-00-00-00-00-00-10-40-01-34-00-00-00-00-00-00-00-14-50-01-35-00-00-00-00-00-00-00-18-40-01-36-00-00-00-00-00-00-00-1C-40-01-37-00-00-00-00-00-00-00-20-40-00-02-62-00-05-00-00-00-74-65-73-74-00-00''", span="231-231"];
m0_163 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="BsonWriterTests.cs", label="Assert.AreEqual(expected, bson)", span="234-234"];
m0_164 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="BsonWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", span="201-201"];
m0_293 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteConstructor()", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteConstructor()", span="426-426"];
m0_294 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteConstructor()", file="BsonWriterTests.cs", label="ExceptionAssert.Throws<JsonWriterException>(''Cannot write JSON constructor as BSON. Path ''.'',\r\n      () =>\r\n      {\r\n        MemoryStream ms = new MemoryStream();\r\n        BsonWriter writer = new BsonWriter(ms);\r\n\r\n        writer.WriteStartArray();\r\n        writer.WriteStartConstructor(''fail'');\r\n      })", span="428-436"];
m0_295 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteConstructor()", file="BsonWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteConstructor()", span="426-426"];
m0_96 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteArrayBsonFromSite()", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteArrayBsonFromSite()", span="148-148"];
m0_97 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteArrayBsonFromSite()", file="BsonWriterTests.cs", label="MemoryStream ms = new MemoryStream()", span="150-150"];
m0_98 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteArrayBsonFromSite()", file="BsonWriterTests.cs", label="BsonWriter writer = new BsonWriter(ms)", span="151-151"];
m0_105 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteArrayBsonFromSite()", file="BsonWriterTests.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="160-160"];
m0_107 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteArrayBsonFromSite()", file="BsonWriterTests.cs", label="string bson = BytesToHex(ms.ToArray())", span="163-163"];
m0_99 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteArrayBsonFromSite()", file="BsonWriterTests.cs", label="writer.WriteStartArray()", span="152-152"];
m0_100 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteArrayBsonFromSite()", file="BsonWriterTests.cs", label="writer.WriteValue(''a'')", span="153-153"];
m0_101 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteArrayBsonFromSite()", file="BsonWriterTests.cs", label="writer.WriteValue(''b'')", span="154-154"];
m0_102 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteArrayBsonFromSite()", file="BsonWriterTests.cs", label="writer.WriteValue(''c'')", span="155-155"];
m0_103 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteArrayBsonFromSite()", file="BsonWriterTests.cs", label="writer.WriteEndArray()", span="156-156"];
m0_104 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteArrayBsonFromSite()", file="BsonWriterTests.cs", label="writer.Flush()", span="158-158"];
m0_106 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteArrayBsonFromSite()", file="BsonWriterTests.cs", label="string expected = ''20-00-00-00-02-30-00-02-00-00-00-61-00-02-31-00-02-00-00-00-62-00-02-32-00-02-00-00-00-63-00-00''", span="162-162"];
m0_108 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteArrayBsonFromSite()", file="BsonWriterTests.cs", label="Assert.AreEqual(expected, bson)", span="165-165"];
m0_109 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteArrayBsonFromSite()", file="BsonWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteArrayBsonFromSite()", span="148-148"];
m0_112 [cluster="Newtonsoft.Json.Bson.BsonWriter.Flush()", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.Flush()", span="84-84"];
m0_211 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="769-769"];
m0_239 [cluster="System.Text.StringBuilder.ToString()", file="BsonWriterTests.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m0_0 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.CloseOutput()", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.CloseOutput()", span="55-55"];
m0_1 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.CloseOutput()", file="BsonWriterTests.cs", label="MemoryStream ms = new MemoryStream()", span="57-57"];
m0_2 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.CloseOutput()", file="BsonWriterTests.cs", label="BsonWriter writer = new BsonWriter(ms)", span="58-58"];
m0_3 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.CloseOutput()", file="BsonWriterTests.cs", label="Assert.IsTrue(ms.CanRead)", span="60-60"];
m0_5 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.CloseOutput()", file="BsonWriterTests.cs", label="Assert.IsFalse(ms.CanRead)", span="62-62"];
m0_4 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.CloseOutput()", file="BsonWriterTests.cs", label="writer.Close()", span="61-61"];
m0_6 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.CloseOutput()", file="BsonWriterTests.cs", label="ms = new MemoryStream()", span="64-64"];
m0_7 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.CloseOutput()", file="BsonWriterTests.cs", label="writer = new BsonWriter(ms) { CloseOutput = false }", span="65-65"];
m0_8 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.CloseOutput()", file="BsonWriterTests.cs", label="Assert.IsTrue(ms.CanRead)", span="67-67"];
m0_10 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.CloseOutput()", file="BsonWriterTests.cs", label="Assert.IsTrue(ms.CanRead)", span="69-69"];
m0_9 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.CloseOutput()", file="BsonWriterTests.cs", label="writer.Close()", span="68-68"];
m0_11 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.CloseOutput()", file="BsonWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.CloseOutput()", span="55-55"];
m0_110 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", span="265-265"];
m0_69 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.DateTimeOffset)", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.DateTimeOffset)", span="436-436"];
m0_16 [cluster="Unk.IsFalse", file="BsonWriterTests.cs", label="Entry Unk.IsFalse", span=""];
m0_59 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(uint)", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(uint)", span="289-289"];
m0_62 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(char)", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(char)", span="377-377"];
m0_72 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEnd()", span="423-423"];
m0_31 [cluster="System.IO.MemoryStream.ToArray()", file="BsonWriterTests.cs", label="Entry System.IO.MemoryStream.ToArray()", span="0-0"];
m0_209 [cluster="System.Collections.Generic.List<T>.Add(T)", file="BsonWriterTests.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m0_380 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRegexPlusContent()", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRegexPlusContent()", span="560-560"];
m0_381 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRegexPlusContent()", file="BsonWriterTests.cs", label="MemoryStream ms = new MemoryStream()", span="562-562"];
m0_382 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRegexPlusContent()", file="BsonWriterTests.cs", label="BsonWriter writer = new BsonWriter(ms)", span="563-563"];
m0_390 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRegexPlusContent()", file="BsonWriterTests.cs", label="CollectionAssert.AreEquivalent(expected, ms.ToArray())", span="574-574"];
m0_383 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRegexPlusContent()", file="BsonWriterTests.cs", label="writer.WriteStartObject()", span="565-565"];
m0_384 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRegexPlusContent()", file="BsonWriterTests.cs", label="writer.WritePropertyName(''regex'')", span="566-566"];
m0_385 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRegexPlusContent()", file="BsonWriterTests.cs", label="writer.WriteRegex(''abc'', ''i'')", span="567-567"];
m0_386 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRegexPlusContent()", file="BsonWriterTests.cs", label="writer.WritePropertyName(''test'')", span="568-568"];
m0_387 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRegexPlusContent()", file="BsonWriterTests.cs", label="writer.WriteRegex(string.Empty, null)", span="569-569"];
m0_388 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRegexPlusContent()", file="BsonWriterTests.cs", label="writer.WriteEndObject()", span="570-570"];
m0_389 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRegexPlusContent()", file="BsonWriterTests.cs", label="byte[] expected = HexToBytes(''1A-00-00-00-0B-72-65-67-65-78-00-61-62-63-00-69-00-0B-74-65-73-74-00-00-00-00'')", span="572-572"];
m0_391 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRegexPlusContent()", file="BsonWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRegexPlusContent()", span="560-560"];
m0_210 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="427-427"];
m0_66 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(bool)", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(bool)", span="346-346"];
m0_270 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="706-706"];
m0_140 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.Read()", span="241-241"];
m0_468 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValueOutsideOfObjectOrArray()", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValueOutsideOfObjectOrArray()", span="686-686"];
m0_469 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValueOutsideOfObjectOrArray()", file="BsonWriterTests.cs", label="ExceptionAssert.Throws<JsonWriterException>(''Error writing String value. BSON must start with an Object or Array. Path ''.'',\r\n      () =>\r\n      {\r\n        MemoryStream stream = new MemoryStream();\r\n\r\n        using (BsonWriter writer = new BsonWriter(stream))\r\n        {\r\n          writer.WriteValue(''test'');\r\n          writer.Flush();\r\n        }\r\n      })", span="688-698"];
m0_470 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValueOutsideOfObjectOrArray()", file="BsonWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValueOutsideOfObjectOrArray()", span="686-686"];
m0_60 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(byte)", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(byte)", span="393-393"];
m0_15 [cluster="Newtonsoft.Json.Bson.BsonWriter.Close()", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.Close()", span="174-174"];
m0_34 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValues()", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValues()", span="89-89"];
m0_35 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValues()", file="BsonWriterTests.cs", label="MemoryStream ms = new MemoryStream()", span="91-91"];
m0_36 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValues()", file="BsonWriterTests.cs", label="BsonWriter writer = new BsonWriter(ms)", span="92-92"];
m0_53 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValues()", file="BsonWriterTests.cs", label="string bson = BytesToHex(ms.ToArray())", span="111-111"];
m0_37 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValues()", file="BsonWriterTests.cs", label="writer.WriteStartArray()", span="94-94"];
m0_38 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValues()", file="BsonWriterTests.cs", label="writer.WriteValue(long.MaxValue)", span="95-95"];
m0_39 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValues()", file="BsonWriterTests.cs", label="writer.WriteValue((ulong)long.MaxValue)", span="96-96"];
m0_40 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValues()", file="BsonWriterTests.cs", label="writer.WriteValue(int.MaxValue)", span="97-97"];
m0_41 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValues()", file="BsonWriterTests.cs", label="writer.WriteValue((uint)int.MaxValue)", span="98-98"];
m0_42 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValues()", file="BsonWriterTests.cs", label="writer.WriteValue(byte.MaxValue)", span="99-99"];
m0_43 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValues()", file="BsonWriterTests.cs", label="writer.WriteValue(sbyte.MaxValue)", span="100-100"];
m0_44 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValues()", file="BsonWriterTests.cs", label="writer.WriteValue('a')", span="101-101"];
m0_45 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValues()", file="BsonWriterTests.cs", label="writer.WriteValue(decimal.MaxValue)", span="102-102"];
m0_46 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValues()", file="BsonWriterTests.cs", label="writer.WriteValue(double.MaxValue)", span="103-103"];
m0_47 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValues()", file="BsonWriterTests.cs", label="writer.WriteValue(float.MaxValue)", span="104-104"];
m0_48 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValues()", file="BsonWriterTests.cs", label="writer.WriteValue(true)", span="105-105"];
m0_49 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValues()", file="BsonWriterTests.cs", label="writer.WriteValue(new byte[] { 0, 1, 2, 3, 4 })", span="106-106"];
m0_50 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValues()", file="BsonWriterTests.cs", label="writer.WriteValue(new DateTimeOffset(2000, 12, 29, 12, 30, 0, TimeSpan.Zero))", span="107-107"];
m0_51 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValues()", file="BsonWriterTests.cs", label="writer.WriteValue(new DateTime(2000, 12, 29, 12, 30, 0, DateTimeKind.Utc))", span="108-108"];
m0_52 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValues()", file="BsonWriterTests.cs", label="writer.WriteEnd()", span="109-109"];
m0_54 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValues()", file="BsonWriterTests.cs", label="Assert.AreEqual(''8C-00-00-00-12-30-00-FF-FF-FF-FF-FF-FF-FF-7F-12-31-00-FF-FF-FF-FF-FF-FF-FF-7F-10-32-00-FF-FF-FF-7F-10-33-00-FF-FF-FF-7F-10-34-00-FF-00-00-00-10-35-00-7F-00-00-00-02-36-00-02-00-00-00-61-00-01-37-00-00-00-00-00-00-00-F0-45-01-38-00-FF-FF-FF-FF-FF-FF-EF-7F-01-39-00-00-00-00-E0-FF-FF-EF-47-08-31-30-00-01-05-31-31-00-05-00-00-00-00-00-01-02-03-04-09-31-32-00-40-C5-E2-BA-E3-00-00-00-09-31-33-00-40-C5-E2-BA-E3-00-00-00-00'', bson)", span="112-112"];
m0_55 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValues()", file="BsonWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValues()", span="89-89"];
m0_65 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(float)", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(float)", span="326-326"];
m0_213 [cluster="Unk.AreNotEqual", file="BsonWriterTests.cs", label="Entry Unk.AreNotEqual", span=""];
m0_28 [cluster="Newtonsoft.Json.Bson.BsonWriter.WritePropertyName(string)", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WritePropertyName(string)", span="164-164"];
m0_272 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteEmptyStrings()", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteEmptyStrings()", span="397-397"];
m0_273 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteEmptyStrings()", file="BsonWriterTests.cs", label="MemoryStream ms = new MemoryStream()", span="399-399"];
m0_274 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteEmptyStrings()", file="BsonWriterTests.cs", label="BsonWriter writer = new BsonWriter(ms)", span="400-400"];
m0_279 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteEmptyStrings()", file="BsonWriterTests.cs", label="string bson = BytesToHex(ms.ToArray())", span="407-407"];
m0_275 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteEmptyStrings()", file="BsonWriterTests.cs", label="writer.WriteStartObject()", span="402-402"];
m0_276 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteEmptyStrings()", file="BsonWriterTests.cs", label="writer.WritePropertyName('''')", span="403-403"];
m0_277 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteEmptyStrings()", file="BsonWriterTests.cs", label="writer.WriteValue('''')", span="404-404"];
m0_278 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteEmptyStrings()", file="BsonWriterTests.cs", label="writer.WriteEndObject()", span="405-405"];
m0_280 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteEmptyStrings()", file="BsonWriterTests.cs", label="Assert.AreEqual(''0C-00-00-00-02-00-01-00-00-00-00-00'', bson)", span="408-408"];
m0_281 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteEmptyStrings()", file="BsonWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteEmptyStrings()", span="397-397"];
m0_240 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", span="322-322"];
m0_241 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="BsonWriterTests.cs", label="string json = @''{\r\n  ''''name'''': ''''1600 Amphitheatre Parkway, Mountain View, CA, USA'''',\r\n  ''''Status'''': {\r\n    ''''code'''': 200,\r\n    ''''request'''': ''''geocode''''\r\n  },\r\n  ''''Placemark'''': [\r\n    {\r\n      ''''address'''': ''''1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA'''',\r\n      ''''AddressDetails'''': {\r\n        ''''Country'''': {\r\n          ''''CountryNameCode'''': ''''US'''',\r\n          ''''AdministrativeArea'''': {\r\n            ''''AdministrativeAreaName'''': ''''CA'''',\r\n            ''''SubAdministrativeArea'''': {\r\n              ''''SubAdministrativeAreaName'''': ''''Santa Clara'''',\r\n              ''''Locality'''': {\r\n                ''''LocalityName'''': ''''Mountain View'''',\r\n                ''''Thoroughfare'''': {\r\n                  ''''ThoroughfareName'''': ''''1600 Amphitheatre Pkwy''''\r\n                },\r\n                ''''PostalCode'''': {\r\n                  ''''PostalCodeNumber'''': ''''94043''''\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        ''''Accuracy'''': 8\r\n      },\r\n      ''''Point'''': {\r\n        ''''coordinates'''': [-122.083739, 37.423021, 0]\r\n      }\r\n    }\r\n  ]\r\n}''", span="324-359"];
m0_242 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="BsonWriterTests.cs", label="GoogleMapGeocoderStructure jsonGoogleMapGeocoder = JsonConvert.DeserializeObject<GoogleMapGeocoderStructure>(json)", span="361-361"];
m0_243 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="BsonWriterTests.cs", label="MemoryStream ms = new MemoryStream()", span="363-363"];
m0_246 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="BsonWriterTests.cs", label="serializer.Serialize(writer, jsonGoogleMapGeocoder)", span="367-367"];
m0_244 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="BsonWriterTests.cs", label="BsonWriter writer = new BsonWriter(ms)", span="364-364"];
m0_247 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="BsonWriterTests.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="369-369"];
m0_248 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="BsonWriterTests.cs", label="BsonReader reader = new BsonReader(ms)", span="370-370"];
m0_245 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="BsonWriterTests.cs", label="JsonSerializer serializer = new JsonSerializer()", span="366-366"];
m0_249 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="BsonWriterTests.cs", label="GoogleMapGeocoderStructure bsonGoogleMapGeocoder = (GoogleMapGeocoderStructure)serializer.Deserialize(reader, typeof (GoogleMapGeocoderStructure))", span="371-371"];
m0_250 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="BsonWriterTests.cs", label="Assert.IsNotNull(bsonGoogleMapGeocoder)", span="373-373"];
m0_251 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="BsonWriterTests.cs", label="Assert.AreEqual(''1600 Amphitheatre Parkway, Mountain View, CA, USA'', bsonGoogleMapGeocoder.Name)", span="374-374"];
m0_252 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="BsonWriterTests.cs", label="Assert.AreEqual(''200'', bsonGoogleMapGeocoder.Status.Code)", span="375-375"];
m0_253 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="BsonWriterTests.cs", label="Assert.AreEqual(''geocode'', bsonGoogleMapGeocoder.Status.Request)", span="376-376"];
m0_254 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="BsonWriterTests.cs", label="IList<Placemark> placemarks = bsonGoogleMapGeocoder.Placemark", span="378-378"];
m0_255 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="BsonWriterTests.cs", label="Assert.IsNotNull(placemarks)", span="379-379"];
m0_256 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="BsonWriterTests.cs", label="Assert.AreEqual(1, placemarks.Count)", span="380-380"];
m0_257 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="BsonWriterTests.cs", label="Placemark placemark = placemarks[0]", span="382-382"];
m0_258 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="BsonWriterTests.cs", label="Assert.AreEqual(''1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA'', placemark.Address)", span="383-383"];
m0_259 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="BsonWriterTests.cs", label="Assert.AreEqual(8, placemark.AddressDetails.Accuracy)", span="384-384"];
m0_260 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="BsonWriterTests.cs", label="Assert.AreEqual(''US'', placemark.AddressDetails.Country.CountryNameCode)", span="385-385"];
m0_261 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="BsonWriterTests.cs", label="Assert.AreEqual(''CA'', placemark.AddressDetails.Country.AdministrativeArea.AdministrativeAreaName)", span="386-386"];
m0_262 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="BsonWriterTests.cs", label="Assert.AreEqual(''Santa Clara'', placemark.AddressDetails.Country.AdministrativeArea.SubAdministrativeArea.SubAdministrativeAreaName)", span="387-387"];
m0_263 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="BsonWriterTests.cs", label="Assert.AreEqual(''Mountain View'', placemark.AddressDetails.Country.AdministrativeArea.SubAdministrativeArea.Locality.LocalityName)", span="388-388"];
m0_264 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="BsonWriterTests.cs", label="Assert.AreEqual(''1600 Amphitheatre Pkwy'', placemark.AddressDetails.Country.AdministrativeArea.SubAdministrativeArea.Locality.Thoroughfare.ThoroughfareName)", span="389-389"];
m0_265 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="BsonWriterTests.cs", label="Assert.AreEqual(''94043'', placemark.AddressDetails.Country.AdministrativeArea.SubAdministrativeArea.Locality.PostalCode.PostalCodeNumber)", span="390-390"];
m0_266 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="BsonWriterTests.cs", label="Assert.AreEqual(-122.083739m, placemark.Point.Coordinates[0])", span="391-391"];
m0_267 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="BsonWriterTests.cs", label="Assert.AreEqual(37.423021m, placemark.Point.Coordinates[1])", span="392-392"];
m0_268 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="BsonWriterTests.cs", label="Assert.AreEqual(0m, placemark.Point.Coordinates[2])", span="393-393"];
m0_269 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="BsonWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", span="322-322"];
m0_12 [cluster="System.IO.MemoryStream.MemoryStream()", file="BsonWriterTests.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m0_477 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.DateTimeZoneHandling()", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.DateTimeZoneHandling()", span="702-702"];
m0_478 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.DateTimeZoneHandling()", file="BsonWriterTests.cs", label="MemoryStream ms = new MemoryStream()", span="704-704"];
m0_479 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.DateTimeZoneHandling()", file="BsonWriterTests.cs", label="JsonWriter writer = new BsonWriter(ms)\r\n      {\r\n        DateTimeZoneHandling = Json.DateTimeZoneHandling.Utc\r\n      }", span="705-708"];
m0_483 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.DateTimeZoneHandling()", file="BsonWriterTests.cs", label="Assert.AreEqual(''10-00-00-00-09-30-00-C8-88-07-6B-DC-00-00-00-00'', (BitConverter.ToString(ms.ToArray())))", span="714-714"];
m0_480 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.DateTimeZoneHandling()", file="BsonWriterTests.cs", label="writer.WriteStartArray()", span="710-710"];
m0_481 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.DateTimeZoneHandling()", file="BsonWriterTests.cs", label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified))", span="711-711"];
m0_482 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.DateTimeZoneHandling()", file="BsonWriterTests.cs", label="writer.WriteEndArray()", span="712-712"];
m0_484 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.DateTimeZoneHandling()", file="BsonWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.DateTimeZoneHandling()", span="702-702"];
m0_313 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRawValue()", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRawValue()", span="454-454"];
m0_314 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRawValue()", file="BsonWriterTests.cs", label="ExceptionAssert.Throws<JsonWriterException>(''Cannot write raw JSON as BSON. Path ''.'',\r\n      () =>\r\n      {\r\n        MemoryStream ms = new MemoryStream();\r\n        BsonWriter writer = new BsonWriter(ms);\r\n\r\n        writer.WriteStartArray();\r\n        writer.WriteRawValue(''fail'');\r\n      })", span="456-464"];
m0_315 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRawValue()", file="BsonWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRawValue()", span="454-454"];
m0_322 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteRawValue(string)", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteRawValue(string)", span="135-135"];
m0_512 [cluster="Unk.WriteValue", file="BsonWriterTests.cs", label="Entry Unk.WriteValue", span=""];
m0_61 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(sbyte)", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(sbyte)", span="404-404"];
m0_236 [cluster="System.Text.StringBuilder.StringBuilder()", file="BsonWriterTests.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m0_217 [cluster="System.Console.WriteLine(int)", file="BsonWriterTests.cs", label="Entry System.Console.WriteLine(int)", span="0-0"];
m0_302 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteStartConstructor(string)", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteStartConstructor(string)", span="117-117"];
m0_71 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.DateTime)", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.DateTime)", span="424-424"];
m0_271 [cluster="Unk.IsNotNull", file="BsonWriterTests.cs", label="Entry Unk.IsNotNull", span=""];
m0_440 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", span="646-646"];
m0_441 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="BsonWriterTests.cs", label="MemoryStream ms = new MemoryStream()", span="648-648"];
m0_442 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="BsonWriterTests.cs", label="BsonWriter writer = new BsonWriter(ms)", span="649-649"];
m0_449 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="BsonWriterTests.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="658-658"];
m0_450 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="BsonWriterTests.cs", label="BsonReader reader = new BsonReader(ms)", span="660-660"];
m0_443 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="BsonWriterTests.cs", label="writer.DateTimeKindHandling = DateTimeKind.Unspecified", span="650-650"];
m0_444 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="BsonWriterTests.cs", label="writer.WriteStartArray()", span="652-652"];
m0_445 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="BsonWriterTests.cs", label="writer.WriteValue(new DateTime(2000, 10, 12, 20, 55, 0, DateTimeKind.Utc))", span="653-653"];
m0_446 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="BsonWriterTests.cs", label="writer.WriteValue(new DateTime(2000, 10, 12, 20, 55, 0, DateTimeKind.Local))", span="654-654"];
m0_447 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="BsonWriterTests.cs", label="writer.WriteValue(new DateTime(2000, 10, 12, 20, 55, 0, DateTimeKind.Unspecified))", span="655-655"];
m0_448 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="BsonWriterTests.cs", label="writer.WriteEndArray()", span="656-656"];
m0_451 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="BsonWriterTests.cs", label="reader.ReadRootValueAsArray = true", span="661-661"];
m0_452 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="BsonWriterTests.cs", label="reader.DateTimeKindHandling = DateTimeKind.Utc", span="662-662"];
m0_453 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="BsonWriterTests.cs", label="Assert.IsTrue(reader.Read())", span="664-664"];
m0_454 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="BsonWriterTests.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="665-665"];
m0_455 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="BsonWriterTests.cs", label="Assert.IsTrue(reader.Read())", span="667-667"];
m0_456 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="BsonWriterTests.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="668-668"];
m0_457 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="BsonWriterTests.cs", label="Assert.AreEqual(new DateTime(2000, 10, 12, 20, 55, 0, DateTimeKind.Utc), reader.Value)", span="669-669"];
m0_458 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="BsonWriterTests.cs", label="Assert.IsTrue(reader.Read())", span="671-671"];
m0_459 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="BsonWriterTests.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="672-672"];
m0_460 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="BsonWriterTests.cs", label="Assert.AreEqual(new DateTime(2000, 10, 12, 20, 55, 0, DateTimeKind.Utc), reader.Value)", span="673-673"];
m0_461 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="BsonWriterTests.cs", label="Assert.IsTrue(reader.Read())", span="675-675"];
m0_462 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="BsonWriterTests.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="676-676"];
m0_463 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="BsonWriterTests.cs", label="Assert.AreEqual(new DateTime(2000, 10, 12, 20, 55, 0, DateTimeKind.Utc), reader.Value)", span="677-677"];
m0_464 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="BsonWriterTests.cs", label="Assert.IsTrue(reader.Read())", span="679-679"];
m0_465 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="BsonWriterTests.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="680-680"];
m0_466 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="BsonWriterTests.cs", label="Assert.IsFalse(reader.Read())", span="682-682"];
m0_467 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="BsonWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", span="646-646"];
m0_166 [cluster="System.Convert.ToDouble(int)", file="BsonWriterTests.cs", label="Entry System.Convert.ToDouble(int)", span="0-0"];
m0_414 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", span="608-608"];
m0_415 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="BsonWriterTests.cs", label="MemoryStream ms = new MemoryStream()", span="610-610"];
m0_416 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="BsonWriterTests.cs", label="BsonWriter writer = new BsonWriter(ms)", span="611-611"];
m0_422 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="BsonWriterTests.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="619-619"];
m0_423 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="BsonWriterTests.cs", label="BsonReader reader = new BsonReader(ms)", span="621-621"];
m0_417 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="BsonWriterTests.cs", label="writer.WriteStartArray()", span="613-613"];
m0_418 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="BsonWriterTests.cs", label="writer.WriteValue(''Content!'')", span="614-614"];
m0_419 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="BsonWriterTests.cs", label="writer.WriteValue('''')", span="615-615"];
m0_420 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="BsonWriterTests.cs", label="writer.WriteValue((string)null)", span="616-616"];
m0_421 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="BsonWriterTests.cs", label="writer.WriteEndArray()", span="617-617"];
m0_424 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="BsonWriterTests.cs", label="reader.ReadRootValueAsArray = true", span="622-622"];
m0_425 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="BsonWriterTests.cs", label="Assert.IsTrue(reader.Read())", span="624-624"];
m0_426 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="BsonWriterTests.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="625-625"];
m0_427 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="BsonWriterTests.cs", label="Assert.IsTrue(reader.Read())", span="627-627"];
m0_428 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="BsonWriterTests.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="628-628"];
m0_429 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="BsonWriterTests.cs", label="Assert.AreEqual(''Content!'', reader.Value)", span="629-629"];
m0_430 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="BsonWriterTests.cs", label="Assert.IsTrue(reader.Read())", span="631-631"];
m0_431 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="BsonWriterTests.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="632-632"];
m0_432 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="BsonWriterTests.cs", label="Assert.AreEqual('''', reader.Value)", span="633-633"];
m0_433 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="BsonWriterTests.cs", label="Assert.IsTrue(reader.Read())", span="635-635"];
m0_434 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="BsonWriterTests.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="636-636"];
m0_435 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="BsonWriterTests.cs", label="Assert.AreEqual(null, reader.Value)", span="637-637"];
m0_436 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="BsonWriterTests.cs", label="Assert.IsTrue(reader.Read())", span="639-639"];
m0_437 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="BsonWriterTests.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="640-640"];
m0_438 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="BsonWriterTests.cs", label="Assert.IsFalse(reader.Read())", span="642-642"];
m0_439 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="BsonWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", span="608-608"];
m0_343 [cluster="System.BitConverter.ToString(byte[])", file="BsonWriterTests.cs", label="Entry System.BitConverter.ToString(byte[])", span="0-0"];
m0_17 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSingleObject()", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSingleObject()", span="73-73"];
m0_18 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSingleObject()", file="BsonWriterTests.cs", label="MemoryStream ms = new MemoryStream()", span="75-75"];
m0_19 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSingleObject()", file="BsonWriterTests.cs", label="BsonWriter writer = new BsonWriter(ms)", span="76-76"];
m0_24 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSingleObject()", file="BsonWriterTests.cs", label="string bson = BytesToHex(ms.ToArray())", span="83-83"];
m0_20 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSingleObject()", file="BsonWriterTests.cs", label="writer.WriteStartObject()", span="78-78"];
m0_21 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSingleObject()", file="BsonWriterTests.cs", label="writer.WritePropertyName(''Blah'')", span="79-79"];
m0_22 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSingleObject()", file="BsonWriterTests.cs", label="writer.WriteValue(1)", span="80-80"];
m0_23 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSingleObject()", file="BsonWriterTests.cs", label="writer.WriteEndObject()", span="81-81"];
m0_25 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSingleObject()", file="BsonWriterTests.cs", label="Assert.AreEqual(''0F-00-00-00-10-42-6C-61-68-00-01-00-00-00-00'', bson)", span="84-84"];
m0_26 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSingleObject()", file="BsonWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSingleObject()", span="73-73"];
m0_95 [cluster="System.Console.WriteLine(string)", file="BsonWriterTests.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m0_113 [cluster="System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", file="BsonWriterTests.cs", label="Entry System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", span="0-0"];
m0_14 [cluster="Unk.IsTrue", file="BsonWriterTests.cs", label="Entry Unk.IsTrue", span=""];
m0_367 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteObjectId(byte[])", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteObjectId(byte[])", span="488-488"];
m0_486 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", span="925-925"];
m0_513 [cluster="BigInteger.cstr", file="BsonWriterTests.cs", label="Entry BigInteger.cstr", span=""];
m0_342 [cluster="System.DateTime.Parse(string)", file="BsonWriterTests.cs", label="Entry System.DateTime.Parse(string)", span="0-0"];
m0_165 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", span="92-92"];
m0_93 [cluster="System.Guid.Guid(string)", file="BsonWriterTests.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m0_56 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", span="143-143"];
m0_32 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[])", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[])", span="78-78"];
m0_138 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="124-124"];
m0_393 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", span="578-578"];
m0_394 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="BsonWriterTests.cs", label="Product p = new Product()", span="580-580"];
m0_395 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="BsonWriterTests.cs", label="p.ExpiryDate = DateTime.Parse(''2009-04-05T14:45:00Z'')", span="581-581"];
m0_396 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="BsonWriterTests.cs", label="p.Name = null", span="582-582"];
m0_397 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="BsonWriterTests.cs", label="p.Price = 9.95m", span="583-583"];
m0_398 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="BsonWriterTests.cs", label="p.Sizes = new[] { ''Small'', '''', null }", span="584-584"];
m0_402 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="BsonWriterTests.cs", label="serializer.Serialize(writer, p)", span="590-590"];
m0_399 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="BsonWriterTests.cs", label="MemoryStream ms = new MemoryStream()", span="586-586"];
m0_400 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="BsonWriterTests.cs", label="JsonSerializer serializer = new JsonSerializer()", span="587-587"];
m0_401 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="BsonWriterTests.cs", label="BsonWriter writer = new BsonWriter(ms)", span="589-589"];
m0_403 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="BsonWriterTests.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="592-592"];
m0_404 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="BsonWriterTests.cs", label="BsonReader reader = new BsonReader(ms)", span="594-594"];
m0_405 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="BsonWriterTests.cs", label="Product deserializedProduct = serializer.Deserialize<Product>(reader)", span="595-595"];
m0_406 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="BsonWriterTests.cs", label="Console.WriteLine(deserializedProduct.Name)", span="597-597"];
m0_407 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="BsonWriterTests.cs", label="Assert.AreEqual(null, deserializedProduct.Name)", span="599-599"];
m0_408 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="BsonWriterTests.cs", label="Assert.AreEqual(9.95m, deserializedProduct.Price)", span="600-600"];
m0_409 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="BsonWriterTests.cs", label="Assert.AreEqual(3, deserializedProduct.Sizes.Length)", span="601-601"];
m0_410 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="BsonWriterTests.cs", label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="602-602"];
m0_411 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="BsonWriterTests.cs", label="Assert.AreEqual('''', deserializedProduct.Sizes[1])", span="603-603"];
m0_412 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="BsonWriterTests.cs", label="Assert.AreEqual(null, deserializedProduct.Sizes[2])", span="604-604"];
m0_413 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="BsonWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", span="578-578"];
m0_303 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRaw()", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRaw()", span="440-440"];
m0_304 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRaw()", file="BsonWriterTests.cs", label="ExceptionAssert.Throws<JsonWriterException>(''Cannot write raw JSON as BSON. Path ''.'',\r\n      () =>\r\n      {\r\n        MemoryStream ms = new MemoryStream();\r\n        BsonWriter writer = new BsonWriter(ms);\r\n\r\n        writer.WriteStartArray();\r\n        writer.WriteRaw(''fail'');\r\n      })", span="442-450"];
m0_305 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRaw()", file="BsonWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRaw()", span="440-440"];
m0_292 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteComment(string)", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteComment(string)", span="108-108"];
m0_139 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="BsonWriterTests.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m0_167 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", span="238-238"];
m0_168 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="MemoryStream ms = new MemoryStream()", span="240-240"];
m0_169 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="BsonWriter writer = new BsonWriter(ms)", span="241-241"];
m0_179 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="260-260"];
m0_180 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="BsonReader reader = new BsonReader(ms)", span="261-261"];
m0_199 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="CollectionAssert.AreEquivalent(ms.ToArray(), ms1.ToArray())", span="284-284"];
m0_203 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="int l2 = ms.ToArray().Length", span="290-290"];
m0_170 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="Store s1 = new Store()", span="243-243"];
m0_178 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="serializer.Serialize(writer, s1)", span="258-258"];
m0_171 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="s1.Color = StoreColor.White", span="244-244"];
m0_172 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="s1.Cost = 999.59m", span="245-245"];
m0_173 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="s1.Employees = int.MaxValue - 1", span="246-246"];
m0_174 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="s1.Open = true", span="247-247"];
m0_175 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="s1.product.Add(new Product\r\n                       {\r\n                         ExpiryDate = new DateTime(2000, 9, 28, 3, 59, 58, DateTimeKind.Local),\r\n                         Name = ''BSON!'',\r\n                         Price = -0.1m,\r\n                         Sizes = new [] { ''First'', ''Second'' }\r\n                       })", span="248-254"];
m0_176 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="s1.Establised = new DateTime(2000, 1, 1, 0, 0, 0, DateTimeKind.Local)", span="255-255"];
m0_182 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="Assert.AreNotEqual(s1, s2)", span="264-264"];
m0_183 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="Assert.AreEqual(s1.Color, s2.Color)", span="265-265"];
m0_184 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="Assert.AreEqual(s1.Cost, s2.Cost)", span="266-266"];
m0_185 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="Assert.AreEqual(s1.Employees, s2.Employees)", span="267-267"];
m0_186 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="Assert.AreEqual(s1.Escape, s2.Escape)", span="268-268"];
m0_187 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="Assert.AreEqual(s1.Establised, s2.Establised)", span="269-269"];
m0_188 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="Assert.AreEqual(s1.Mottos.Count, s2.Mottos.Count)", span="270-270"];
m0_189 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="Assert.AreEqual(s1.Mottos.First(), s2.Mottos.First())", span="271-271"];
m0_190 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="Assert.AreEqual(s1.Mottos.Last(), s2.Mottos.Last())", span="272-272"];
m0_191 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="Assert.AreEqual(s1.Open, s2.Open)", span="273-273"];
m0_192 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="Assert.AreEqual(s1.product.Count, s2.product.Count)", span="274-274"];
m0_193 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="Assert.AreEqual(s1.RoomsPerFloor.Length, s2.RoomsPerFloor.Length)", span="275-275"];
m0_194 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="Assert.AreEqual(s1.Symbol, s2.Symbol)", span="276-276"];
m0_195 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="Assert.AreEqual(s1.Width, s2.Width)", span="277-277"];
m0_198 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="serializer.Serialize(writer1, s1)", span="282-282"];
m0_200 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="string s = JsonConvert.SerializeObject(s1)", span="286-286"];
m0_177 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="JsonSerializer serializer = new JsonSerializer()", span="257-257"];
m0_181 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="Store s2 = (Store)serializer.Deserialize(reader, typeof (Store))", span="262-262"];
m0_196 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="MemoryStream ms1 = new MemoryStream()", span="279-279"];
m0_197 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="BsonWriter writer1 = new BsonWriter(ms1)", span="280-280"];
m0_201 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="byte[] textData = Encoding.UTF8.GetBytes(s)", span="287-287"];
m0_202 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="int l1 = textData.Length", span="289-289"];
m0_204 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="Console.WriteLine(l1)", span="292-292"];
m0_205 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="Console.WriteLine(l2)", span="293-293"];
m0_206 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="BsonWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", span="238-238"];
m0_94 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Guid)", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Guid)", span="457-457"];
m0_137 [cluster="System.Text.Encoding.GetBytes(string)", file="BsonWriterTests.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m0_285 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", span="177-177"];
m0_68 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="BsonWriterTests.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m0_27 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteStartObject()", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteStartObject()", span="153-153"];
m0_212 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="657-657"];
m0_218 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", span="297-297"];
m0_219 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", file="BsonWriterTests.cs", label="MemoryStream ms = new MemoryStream()", span="299-299"];
m0_220 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", file="BsonWriterTests.cs", label="BsonWriter writer = new BsonWriter(ms)", span="300-300"];
m0_233 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", file="BsonWriterTests.cs", label="string bson = BytesToHex(ms.ToArray())", span="317-317"];
m0_221 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", file="BsonWriterTests.cs", label="StringBuilder largeStringBuilder = new StringBuilder()", span="302-302"];
m0_229 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", file="BsonWriterTests.cs", label="writer.WriteStartObject()", span="312-312"];
m0_230 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", file="BsonWriterTests.cs", label="writer.WritePropertyName(largeString)", span="313-313"];
m0_231 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", file="BsonWriterTests.cs", label="writer.WriteValue(largeString)", span="314-314"];
m0_232 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", file="BsonWriterTests.cs", label="writer.WriteEndObject()", span="315-315"];
m0_222 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", file="BsonWriterTests.cs", label="int i = 0", span="303-303"];
m0_225 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", file="BsonWriterTests.cs", label="largeStringBuilder.Append(''-'')", span="306-306"];
m0_226 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", file="BsonWriterTests.cs", label="largeStringBuilder.Append(i.ToString(CultureInfo.InvariantCulture))", span="308-308"];
m0_228 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", file="BsonWriterTests.cs", label="string largeString = largeStringBuilder.ToString()", span="310-310"];
m0_223 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", file="BsonWriterTests.cs", label="i < 100", span="303-303"];
m0_224 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", file="BsonWriterTests.cs", label="i > 0", span="305-305"];
m0_227 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", file="BsonWriterTests.cs", label="i++", span="303-303"];
m0_234 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", file="BsonWriterTests.cs", label="Assert.AreEqual(''4E-02-00-00-02-30-2D-31-2D-32-2D-33-2D-34-2D-35-2D-36-2D-37-2D-38-2D-39-2D-31-30-2D-31-31-2D-31-32-2D-31-33-2D-31-34-2D-31-35-2D-31-36-2D-31-37-2D-31-38-2D-31-39-2D-32-30-2D-32-31-2D-32-32-2D-32-33-2D-32-34-2D-32-35-2D-32-36-2D-32-37-2D-32-38-2D-32-39-2D-33-30-2D-33-31-2D-33-32-2D-33-33-2D-33-34-2D-33-35-2D-33-36-2D-33-37-2D-33-38-2D-33-39-2D-34-30-2D-34-31-2D-34-32-2D-34-33-2D-34-34-2D-34-35-2D-34-36-2D-34-37-2D-34-38-2D-34-39-2D-35-30-2D-35-31-2D-35-32-2D-35-33-2D-35-34-2D-35-35-2D-35-36-2D-35-37-2D-35-38-2D-35-39-2D-36-30-2D-36-31-2D-36-32-2D-36-33-2D-36-34-2D-36-35-2D-36-36-2D-36-37-2D-36-38-2D-36-39-2D-37-30-2D-37-31-2D-37-32-2D-37-33-2D-37-34-2D-37-35-2D-37-36-2D-37-37-2D-37-38-2D-37-39-2D-38-30-2D-38-31-2D-38-32-2D-38-33-2D-38-34-2D-38-35-2D-38-36-2D-38-37-2D-38-38-2D-38-39-2D-39-30-2D-39-31-2D-39-32-2D-39-33-2D-39-34-2D-39-35-2D-39-36-2D-39-37-2D-39-38-2D-39-39-00-22-01-00-00-30-2D-31-2D-32-2D-33-2D-34-2D-35-2D-36-2D-37-2D-38-2D-39-2D-31-30-2D-31-31-2D-31-32-2D-31-33-2D-31-34-2D-31-35-2D-31-36-2D-31-37-2D-31-38-2D-31-39-2D-32-30-2D-32-31-2D-32-32-2D-32-33-2D-32-34-2D-32-35-2D-32-36-2D-32-37-2D-32-38-2D-32-39-2D-33-30-2D-33-31-2D-33-32-2D-33-33-2D-33-34-2D-33-35-2D-33-36-2D-33-37-2D-33-38-2D-33-39-2D-34-30-2D-34-31-2D-34-32-2D-34-33-2D-34-34-2D-34-35-2D-34-36-2D-34-37-2D-34-38-2D-34-39-2D-35-30-2D-35-31-2D-35-32-2D-35-33-2D-35-34-2D-35-35-2D-35-36-2D-35-37-2D-35-38-2D-35-39-2D-36-30-2D-36-31-2D-36-32-2D-36-33-2D-36-34-2D-36-35-2D-36-36-2D-36-37-2D-36-38-2D-36-39-2D-37-30-2D-37-31-2D-37-32-2D-37-33-2D-37-34-2D-37-35-2D-37-36-2D-37-37-2D-37-38-2D-37-39-2D-38-30-2D-38-31-2D-38-32-2D-38-33-2D-38-34-2D-38-35-2D-38-36-2D-38-37-2D-38-38-2D-38-39-2D-39-30-2D-39-31-2D-39-32-2D-39-33-2D-39-34-2D-39-35-2D-39-36-2D-39-37-2D-39-38-2D-39-39-00-00'', bson)", span="318-318"];
m0_235 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", file="BsonWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", span="297-297"];
m0_485 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="371-371"];
m0_215 [cluster="System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", file="BsonWriterTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", span="0-0"];
m0_64 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(double)", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(double)", span="336-336"];
m0_70 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="BsonWriterTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m0_368 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOidPlusContent()", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOidPlusContent()", span="542-542"];
m0_369 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOidPlusContent()", file="BsonWriterTests.cs", label="MemoryStream ms = new MemoryStream()", span="544-544"];
m0_370 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOidPlusContent()", file="BsonWriterTests.cs", label="BsonWriter writer = new BsonWriter(ms)", span="545-545"];
m0_378 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOidPlusContent()", file="BsonWriterTests.cs", label="CollectionAssert.AreEquivalent(expected, ms.ToArray())", span="556-556"];
m0_371 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOidPlusContent()", file="BsonWriterTests.cs", label="writer.WriteStartObject()", span="547-547"];
m0_372 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOidPlusContent()", file="BsonWriterTests.cs", label="writer.WritePropertyName(''_id'')", span="548-548"];
m0_373 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOidPlusContent()", file="BsonWriterTests.cs", label="writer.WriteObjectId(HexToBytes(''4ABBED9D1D8B0F0218000001''))", span="549-549"];
m0_374 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOidPlusContent()", file="BsonWriterTests.cs", label="writer.WritePropertyName(''test'')", span="550-550"];
m0_375 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOidPlusContent()", file="BsonWriterTests.cs", label="writer.WriteValue(''1234£56'')", span="551-551"];
m0_376 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOidPlusContent()", file="BsonWriterTests.cs", label="writer.WriteEndObject()", span="552-552"];
m0_377 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOidPlusContent()", file="BsonWriterTests.cs", label="byte[] expected = HexToBytes(''29000000075F6964004ABBED9D1D8B0F02180000010274657374000900000031323334C2A335360000'')", span="554-554"];
m0_379 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOidPlusContent()", file="BsonWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOidPlusContent()", span="542-542"];
m0_344 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="645-645"];
m0_511 [cluster="Unk.Parse", file="BsonWriterTests.cs", label="Entry Unk.Parse", span=""];
m0_487 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", span="719-719"];
m0_488 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", color=green, community=0, file="BsonWriterTests.cs", label="BigInteger i = BigInteger.Parse(''1999999999999999999999999999999999999999999999999999999999990'')", prediction=0, span="721-721"];
m0_489 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", color=green, community=0, file="BsonWriterTests.cs", label="MemoryStream ms = new MemoryStream()", prediction=1, span="723-723"];
m0_493 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", color=green, community=0, file="BsonWriterTests.cs", label="writer.WriteValue(i)", prediction=0, span="728-728"];
m0_506 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", color=green, community=0, file="BsonWriterTests.cs", label="Assert.AreEqual(i, new BigInteger((byte[])reader.Value))", prediction=0, span="745-745"];
m0_490 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", color=green, community=0, file="BsonWriterTests.cs", label="BsonWriter writer = new BsonWriter(ms)", prediction=0, span="724-724"];
m0_495 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", color=green, community=0, file="BsonWriterTests.cs", label="string bson = BytesToHex(ms.ToArray())", prediction=5, span="731-731"];
m0_497 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", color=green, community=0, file="BsonWriterTests.cs", label="ms.Seek(0, SeekOrigin.Begin)", prediction=1, span="734-734"];
m0_498 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", color=green, community=0, file="BsonWriterTests.cs", label="BsonReader reader = new BsonReader(ms)", prediction=0, span="735-735"];
m0_491 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", color=green, community=0, file="BsonWriterTests.cs", label="writer.WriteStartObject()", prediction=8, span="726-726"];
m0_492 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", color=green, community=0, file="BsonWriterTests.cs", label="writer.WritePropertyName(''Blah'')", prediction=0, span="727-727"];
m0_494 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", color=green, community=0, file="BsonWriterTests.cs", label="writer.WriteEndObject()", prediction=0, span="729-729"];
m0_496 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", color=green, community=0, file="BsonWriterTests.cs", label="Assert.AreEqual(''2A-00-00-00-05-42-6C-61-68-00-1A-00-00-00-00-F6-FF-FF-FF-FF-FF-FF-1F-B2-21-CB-28-59-84-C4-AE-03-8A-44-34-2F-4C-4E-9E-3E-01-00'', bson)", prediction=11, span="732-732"];
m0_499 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", color=green, community=0, file="BsonWriterTests.cs", label="Assert.IsTrue(reader.Read())", prediction=12, span="737-737"];
m0_500 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", color=green, community=0, file="BsonWriterTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", prediction=0, span="738-738"];
m0_501 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", color=green, community=0, file="BsonWriterTests.cs", label="Assert.IsTrue(reader.Read())", prediction=0, span="739-739"];
m0_502 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", color=green, community=0, file="BsonWriterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", prediction=0, span="740-740"];
m0_503 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", color=green, community=0, file="BsonWriterTests.cs", label="Assert.IsTrue(reader.Read())", prediction=0, span="742-742"];
m0_504 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", color=green, community=0, file="BsonWriterTests.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", prediction=0, span="743-743"];
m0_505 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", color=green, community=0, file="BsonWriterTests.cs", label="CollectionAssert.AreEqual(new byte[] { 246, 255, 255, 255, 255, 255, 255, 31, 178, 33, 203, 40, 89, 132, 196, 174, 3, 138, 68, 52, 47, 76, 78, 158, 62, 1 }, (byte[])reader.Value)", prediction=0, span="744-744"];
m0_507 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", color=green, community=0, file="BsonWriterTests.cs", label="Assert.IsTrue(reader.Read())", prediction=0, span="747-747"];
m0_508 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", file="BsonWriterTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="748-748"];
m0_509 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", file="BsonWriterTests.cs", label="Assert.IsFalse(reader.Read())", span="750-750"];
m0_510 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", file="BsonWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", span="719-719"];
m0_73 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDouble()", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDouble()", span="117-117"];
m0_74 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDouble()", file="BsonWriterTests.cs", label="MemoryStream ms = new MemoryStream()", span="119-119"];
m0_75 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDouble()", file="BsonWriterTests.cs", label="BsonWriter writer = new BsonWriter(ms)", span="120-120"];
m0_79 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDouble()", file="BsonWriterTests.cs", label="string bson = BytesToHex(ms.ToArray())", span="126-126"];
m0_76 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDouble()", file="BsonWriterTests.cs", label="writer.WriteStartArray()", span="122-122"];
m0_77 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDouble()", file="BsonWriterTests.cs", label="writer.WriteValue(99.99d)", span="123-123"];
m0_78 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDouble()", file="BsonWriterTests.cs", label="writer.WriteEnd()", span="124-124"];
m0_80 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDouble()", file="BsonWriterTests.cs", label="Assert.AreEqual(''10-00-00-00-01-30-00-8F-C2-F5-28-5C-FF-58-40-00'', bson)", span="127-127"];
m0_81 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDouble()", file="BsonWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDouble()", span="117-117"];
m0_237 [cluster="System.Text.StringBuilder.Append(string)", file="BsonWriterTests.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m0_214 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="BsonWriterTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m0_323 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", span="468-468"];
m0_324 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", file="BsonWriterTests.cs", label="Product p = new Product()", span="470-470"];
m0_325 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", file="BsonWriterTests.cs", label="p.ExpiryDate = DateTime.Parse(''2009-04-05T14:45:00Z'')", span="471-471"];
m0_326 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", file="BsonWriterTests.cs", label="p.Name = ''Carlos' Spicy Wieners''", span="472-472"];
m0_327 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", file="BsonWriterTests.cs", label="p.Price = 9.95m", span="473-473"];
m0_328 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", file="BsonWriterTests.cs", label="p.Sizes = new[] { ''Small'', ''Medium'', ''Large'' }", span="474-474"];
m0_332 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", file="BsonWriterTests.cs", label="serializer.Serialize(writer, p)", span="481-481"];
m0_329 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", file="BsonWriterTests.cs", label="MemoryStream ms = new MemoryStream()", span="476-476"];
m0_330 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", file="BsonWriterTests.cs", label="JsonSerializer serializer = new JsonSerializer()", span="477-477"];
m0_331 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", file="BsonWriterTests.cs", label="BsonWriter writer = new BsonWriter(ms)", span="480-480"];
m0_333 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", file="BsonWriterTests.cs", label="Console.WriteLine(BitConverter.ToString(ms.ToArray()))", span="483-483"];
m0_334 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", file="BsonWriterTests.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="493-493"];
m0_335 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", file="BsonWriterTests.cs", label="BsonReader reader = new BsonReader(ms)", span="496-496"];
m0_336 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", file="BsonWriterTests.cs", label="Product deserializedProduct = serializer.Deserialize<Product>(reader)", span="497-497"];
m0_337 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", file="BsonWriterTests.cs", label="Console.WriteLine(deserializedProduct.Name)", span="499-499"];
m0_338 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", file="BsonWriterTests.cs", label="Assert.AreEqual(''Carlos' Spicy Wieners'', deserializedProduct.Name)", span="503-503"];
m0_339 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", file="BsonWriterTests.cs", label="Assert.AreEqual(9.95m, deserializedProduct.Price)", span="504-504"];
m0_340 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", file="BsonWriterTests.cs", label="Assert.AreEqual(3, deserializedProduct.Sizes.Length)", span="505-505"];
m0_341 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", file="BsonWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", span="468-468"];
m0_63 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(decimal)", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(decimal)", span="414-414"];
m0_67 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(byte[])", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(byte[])", span="447-447"];
m0_13 [cluster="Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", span="65-65"];
m0_111 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="379-379"];
m0_30 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="363-363"];
m0_312 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteRaw(string)", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteRaw(string)", span="126-126"];
m0_33 [cluster="Unk.AreEqual", file="BsonWriterTests.cs", label="Entry Unk.AreEqual", span=""];
m0_114 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", span="169-169"];
m0_115 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="BsonWriterTests.cs", label="byte[] data = Encoding.UTF8.GetBytes(''Hello world!'')", span="171-171"];
m0_116 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="BsonWriterTests.cs", label="MemoryStream ms = new MemoryStream()", span="173-173"];
m0_121 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="BsonWriterTests.cs", label="writer.WriteValue(data)", span="178-178"];
m0_135 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="BsonWriterTests.cs", label="CollectionAssert.AreEquivalent(data, (byte[])reader.Value)", span="197-197"];
m0_117 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="BsonWriterTests.cs", label="BsonWriter writer = new BsonWriter(ms)", span="174-174"];
m0_124 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="BsonWriterTests.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="183-183"];
m0_126 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="BsonWriterTests.cs", label="string bson = BytesToHex(ms.ToArray())", span="186-186"];
m0_128 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="BsonWriterTests.cs", label="BsonReader reader = new BsonReader(new MemoryStream(ms.ToArray()))", span="190-190"];
m0_118 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="BsonWriterTests.cs", label="writer.WriteStartArray()", span="175-175"];
m0_119 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="BsonWriterTests.cs", label="writer.WriteValue(''a'')", span="176-176"];
m0_120 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="BsonWriterTests.cs", label="writer.WriteValue(''b'')", span="177-177"];
m0_122 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="BsonWriterTests.cs", label="writer.WriteEndArray()", span="179-179"];
m0_123 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="BsonWriterTests.cs", label="writer.Flush()", span="181-181"];
m0_125 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="BsonWriterTests.cs", label="string expected = ''2B-00-00-00-02-30-00-02-00-00-00-61-00-02-31-00-02-00-00-00-62-00-05-32-00-0C-00-00-00-00-48-65-6C-6C-6F-20-77-6F-72-6C-64-21-00''", span="185-185"];
m0_127 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="BsonWriterTests.cs", label="Assert.AreEqual(expected, bson)", span="188-188"];
m0_129 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="BsonWriterTests.cs", label="reader.ReadRootValueAsArray = true", span="191-191"];
m0_130 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="BsonWriterTests.cs", label="reader.Read()", span="192-192"];
m0_131 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="BsonWriterTests.cs", label="reader.Read()", span="193-193"];
m0_132 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="BsonWriterTests.cs", label="reader.Read()", span="194-194"];
m0_133 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="BsonWriterTests.cs", label="reader.Read()", span="195-195"];
m0_134 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="BsonWriterTests.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="196-196"];
m0_136 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="BsonWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", span="169-169"];
m0_208 [cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", span="29-29"];
m0_82 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteGuid()", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteGuid()", span="131-131"];
m0_83 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteGuid()", file="BsonWriterTests.cs", label="Guid g = new Guid(''D821EED7-4B5C-43C9-8AC2-6928E579B705'')", span="133-133"];
m0_84 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteGuid()", file="BsonWriterTests.cs", label="MemoryStream ms = new MemoryStream()", span="135-135"];
m0_87 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteGuid()", file="BsonWriterTests.cs", label="writer.WriteValue(g)", span="139-139"];
m0_85 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteGuid()", file="BsonWriterTests.cs", label="BsonWriter writer = new BsonWriter(ms)", span="136-136"];
m0_89 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteGuid()", file="BsonWriterTests.cs", label="string bson = BytesToHex(ms.ToArray())", span="142-142"];
m0_86 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteGuid()", file="BsonWriterTests.cs", label="writer.WriteStartArray()", span="138-138"];
m0_88 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteGuid()", file="BsonWriterTests.cs", label="writer.WriteEnd()", span="140-140"];
m0_90 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteGuid()", file="BsonWriterTests.cs", label="Console.WriteLine(bson)", span="143-143"];
m0_91 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteGuid()", file="BsonWriterTests.cs", label="Assert.AreEqual(''1D-00-00-00-05-30-00-10-00-00-00-04-D7-EE-21-D8-5C-4B-C9-43-8A-C2-69-28-E5-79-B7-05-00'', bson)", span="144-144"];
m0_92 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteGuid()", file="BsonWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteGuid()", span="131-131"];
m0_282 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteComment()", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteComment()", span="412-412"];
m0_283 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteComment()", file="BsonWriterTests.cs", label="ExceptionAssert.Throws<JsonWriterException>(''Cannot write JSON comment as BSON. Path ''.'',\r\n      () =>\r\n      {\r\n        MemoryStream ms = new MemoryStream();\r\n        BsonWriter writer = new BsonWriter(ms);\r\n\r\n        writer.WriteStartArray();\r\n        writer.WriteComment(''fail'');\r\n      })", span="414-422"];
m0_284 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteComment()", file="BsonWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteComment()", span="412-412"];
m0_57 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(long)", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(long)", span="302-302"];
m0_58 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(ulong)", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(ulong)", span="313-313"];
m0_345 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", span="509-509"];
m0_346 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="BsonWriterTests.cs", label="MemoryStream ms = new MemoryStream()", span="511-511"];
m0_347 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="BsonWriterTests.cs", label="BsonWriter writer = new BsonWriter(ms)", span="512-512"];
m0_353 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="BsonWriterTests.cs", label="string bson = BytesToHex(ms.ToArray())", span="521-521"];
m0_355 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="BsonWriterTests.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="524-524"];
m0_356 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="BsonWriterTests.cs", label="BsonReader reader = new BsonReader(ms)", span="525-525"];
m0_348 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="BsonWriterTests.cs", label="byte[] oid = new byte[] {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}", span="514-514"];
m0_349 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="BsonWriterTests.cs", label="writer.WriteStartObject()", span="516-516"];
m0_350 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="BsonWriterTests.cs", label="writer.WritePropertyName(''_oid'')", span="517-517"];
m0_351 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="BsonWriterTests.cs", label="writer.WriteObjectId(oid)", span="518-518"];
m0_352 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="BsonWriterTests.cs", label="writer.WriteEndObject()", span="519-519"];
m0_363 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="BsonWriterTests.cs", label="CollectionAssert.AreEquivalent(oid, (byte[])reader.Value)", span="535-535"];
m0_354 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="BsonWriterTests.cs", label="Assert.AreEqual(''17-00-00-00-07-5F-6F-69-64-00-01-02-03-04-05-06-07-08-09-0A-0B-0C-00'', bson)", span="522-522"];
m0_357 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="BsonWriterTests.cs", label="Assert.IsTrue(reader.Read())", span="527-527"];
m0_358 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="BsonWriterTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="528-528"];
m0_359 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="BsonWriterTests.cs", label="Assert.IsTrue(reader.Read())", span="530-530"];
m0_360 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="BsonWriterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="531-531"];
m0_361 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="BsonWriterTests.cs", label="Assert.IsTrue(reader.Read())", span="533-533"];
m0_362 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="BsonWriterTests.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="534-534"];
m0_364 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="BsonWriterTests.cs", label="Assert.IsTrue(reader.Read())", span="537-537"];
m0_365 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="BsonWriterTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="538-538"];
m0_366 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="BsonWriterTests.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", span="509-509"];
m0_141 [cluster="Unk.AreEquivalent", file="BsonWriterTests.cs", label="Entry Unk.AreEquivalent", span=""];
m0_392 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteRegex(string, string)", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteRegex(string, string)", span="506-506"];
m0_471 [cluster="lambda expression", file="BsonWriterTests.cs", label="Entry lambda expression", span="689-698"];
m0_286 [cluster="lambda expression", file="BsonWriterTests.cs", label="Entry lambda expression", span="415-422"];
m0_287 [cluster="lambda expression", file="BsonWriterTests.cs", label="MemoryStream ms = new MemoryStream()", span="417-417"];
m0_288 [cluster="lambda expression", file="BsonWriterTests.cs", label="BsonWriter writer = new BsonWriter(ms)", span="418-418"];
m0_289 [cluster="lambda expression", file="BsonWriterTests.cs", label="writer.WriteStartArray()", span="420-420"];
m0_290 [cluster="lambda expression", file="BsonWriterTests.cs", label="writer.WriteComment(''fail'')", span="421-421"];
m0_291 [cluster="lambda expression", file="BsonWriterTests.cs", label="Exit lambda expression", span="415-422"];
m0_296 [cluster="lambda expression", file="BsonWriterTests.cs", label="Entry lambda expression", span="429-436"];
m0_297 [cluster="lambda expression", file="BsonWriterTests.cs", label="MemoryStream ms = new MemoryStream()", span="431-431"];
m0_298 [cluster="lambda expression", file="BsonWriterTests.cs", label="BsonWriter writer = new BsonWriter(ms)", span="432-432"];
m0_299 [cluster="lambda expression", file="BsonWriterTests.cs", label="writer.WriteStartArray()", span="434-434"];
m0_300 [cluster="lambda expression", file="BsonWriterTests.cs", label="writer.WriteStartConstructor(''fail'')", span="435-435"];
m0_301 [cluster="lambda expression", file="BsonWriterTests.cs", label="Exit lambda expression", span="429-436"];
m0_306 [cluster="lambda expression", file="BsonWriterTests.cs", label="Entry lambda expression", span="443-450"];
m0_307 [cluster="lambda expression", file="BsonWriterTests.cs", label="MemoryStream ms = new MemoryStream()", span="445-445"];
m0_308 [cluster="lambda expression", file="BsonWriterTests.cs", label="BsonWriter writer = new BsonWriter(ms)", span="446-446"];
m0_309 [cluster="lambda expression", file="BsonWriterTests.cs", label="writer.WriteStartArray()", span="448-448"];
m0_310 [cluster="lambda expression", file="BsonWriterTests.cs", label="writer.WriteRaw(''fail'')", span="449-449"];
m0_311 [cluster="lambda expression", file="BsonWriterTests.cs", label="Exit lambda expression", span="443-450"];
m0_316 [cluster="lambda expression", file="BsonWriterTests.cs", label="Entry lambda expression", span="457-464"];
m0_317 [cluster="lambda expression", file="BsonWriterTests.cs", label="MemoryStream ms = new MemoryStream()", span="459-459"];
m0_318 [cluster="lambda expression", file="BsonWriterTests.cs", label="BsonWriter writer = new BsonWriter(ms)", span="460-460"];
m0_319 [cluster="lambda expression", file="BsonWriterTests.cs", label="writer.WriteStartArray()", span="462-462"];
m0_320 [cluster="lambda expression", file="BsonWriterTests.cs", label="writer.WriteRawValue(''fail'')", span="463-463"];
m0_321 [cluster="lambda expression", file="BsonWriterTests.cs", label="Exit lambda expression", span="457-464"];
m0_472 [cluster="lambda expression", file="BsonWriterTests.cs", label="MemoryStream stream = new MemoryStream()", span="691-691"];
m0_473 [cluster="lambda expression", file="BsonWriterTests.cs", label="BsonWriter writer = new BsonWriter(stream)", span="693-693"];
m0_474 [cluster="lambda expression", file="BsonWriterTests.cs", label="writer.WriteValue(''test'')", span="695-695"];
m0_475 [cluster="lambda expression", file="BsonWriterTests.cs", label="writer.Flush()", span="696-696"];
m0_476 [cluster="lambda expression", file="BsonWriterTests.cs", label="Exit lambda expression", span="689-698"];
m0_207 [cluster="Newtonsoft.Json.Tests.TestObjects.Store.Store()", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Store.Store()", span="46-46"];
m0_29 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(int)", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(int)", span="278-278"];
m0_216 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="BsonWriterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="516-516"];
m0_514 [file="BsonWriterTests.cs", label="Newtonsoft.Json.Tests.Bson.BsonWriterTests", span=""];
m1_49 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveProperties_IgnoreStatic()", file="ContractResolverTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveProperties_IgnoreStatic()", span="143-143"];
m1_50 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveProperties_IgnoreStatic()", file="ContractResolverTests.cs", label="var resolver = new DefaultContractResolver()", span="145-145"];
m1_51 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveProperties_IgnoreStatic()", file="ContractResolverTests.cs", label="var contract = (JsonObjectContract)resolver.ResolveContract(typeof(NumberFormatInfo))", span="146-146"];
m1_52 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveProperties_IgnoreStatic()", file="ContractResolverTests.cs", label="Assert.IsFalse(contract.Properties.Any(c => c.PropertyName == ''InvariantInfo''))", span="148-148"];
m1_53 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveProperties_IgnoreStatic()", file="ContractResolverTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveProperties_IgnoreStatic()", span="143-143"];
m1_54 [cluster="Unk.Any", file="ContractResolverTests.cs", label="Entry Unk.Any", span=""];
m1_68 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()", file="ContractResolverTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()", span="174-174"];
m1_69 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()", file="ContractResolverTests.cs", label="Book book = new Book\r\n                    {\r\n                      BookName = ''The Gathering Storm'',\r\n                      BookPrice = 16.19m,\r\n                      AuthorName = ''Brandon Sanderson'',\r\n                      AuthorAge = 34,\r\n                      AuthorCountry = ''United States of America''\r\n                    }", span="176-183"];
m1_70 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()", file="ContractResolverTests.cs", label="string startingWithA = JsonConvert.SerializeObject(book, Formatting.Indented,\r\n        new JsonSerializerSettings { ContractResolver = new DynamicContractResolver('A') })", span="185-186"];
m1_71 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()", file="ContractResolverTests.cs", label="string startingWithB = JsonConvert.SerializeObject(book, Formatting.Indented,\r\n        new JsonSerializerSettings { ContractResolver = new DynamicContractResolver('B') })", span="194-195"];
m1_72 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()", file="ContractResolverTests.cs", label="Assert.AreEqual(@''{\r\n  ''''AuthorName'''': ''''Brandon Sanderson'''',\r\n  ''''AuthorAge'''': 34,\r\n  ''''AuthorCountry'''': ''''United States of America''''\r\n}'', startingWithA)", span="202-206"];
m1_73 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()", file="ContractResolverTests.cs", label="Assert.AreEqual(@''{\r\n  ''''BookName'''': ''''The Gathering Storm'''',\r\n  ''''BookPrice'''': 16.19\r\n}'', startingWithB)", span="208-211"];
m1_74 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()", file="ContractResolverTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()", span="174-174"];
m1_42 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DeserializeDataMemberClassWithNoDataContract()", file="ContractResolverTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DeserializeDataMemberClassWithNoDataContract()", span="133-133"];
m1_43 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DeserializeDataMemberClassWithNoDataContract()", file="ContractResolverTests.cs", label="var resolver = new DefaultContractResolver()", span="135-135"];
m1_44 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DeserializeDataMemberClassWithNoDataContract()", file="ContractResolverTests.cs", label="var contract = (JsonObjectContract)resolver.ResolveContract(typeof(AddressWithDataMember))", span="136-136"];
m1_45 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DeserializeDataMemberClassWithNoDataContract()", file="ContractResolverTests.cs", label="Assert.AreEqual(''AddressLine1'', contract.Properties[0].PropertyName)", span="138-138"];
m1_46 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DeserializeDataMemberClassWithNoDataContract()", file="ContractResolverTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DeserializeDataMemberClassWithNoDataContract()", span="133-133"];
m1_36 [cluster="Newtonsoft.Json.Tests.Serialization.EscapedPropertiesContractResolver.EscapedPropertiesContractResolver()", file="ContractResolverTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.EscapedPropertiesContractResolver.EscapedPropertiesContractResolver()", span="70-70"];
m1_8 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="ContractResolverTests.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="893-893"];
m1_16 [cluster="Newtonsoft.Json.Tests.Serialization.EscapedPropertiesContractResolver.ResolvePropertyName(string)", file="ContractResolverTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.EscapedPropertiesContractResolver.ResolvePropertyName(string)", span="72-72"];
m1_17 [cluster="Newtonsoft.Json.Tests.Serialization.EscapedPropertiesContractResolver.ResolvePropertyName(string)", file="ContractResolverTests.cs", label="return base.ResolvePropertyName(propertyName + @''-'-''''-'');", span="74-74"];
m1_18 [cluster="Newtonsoft.Json.Tests.Serialization.EscapedPropertiesContractResolver.ResolvePropertyName(string)", file="ContractResolverTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.EscapedPropertiesContractResolver.ResolvePropertyName(string)", span="72-72"];
m1_39 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="ContractResolverTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73"];
m1_47 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="ContractResolverTests.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="174-174"];
m1_35 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="ContractResolverTests.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="347-347"];
m1_67 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="ContractResolverTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="585-585"];
m1_37 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="ContractResolverTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="570-570"];
m1_34 [cluster="Newtonsoft.Json.Tests.Serialization.AddressWithDataMember.AddressWithDataMember()", file="ContractResolverTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.AddressWithDataMember.AddressWithDataMember()", span="98-98"];
m1_19 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="ContractResolverTests.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", span="1121-1121"];
m1_26 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", file="ContractResolverTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", span="110-110"];
m1_27 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", file="ContractResolverTests.cs", label="string json = JsonConvert.SerializeObject(\r\n        new AddressWithDataMember\r\n          {\r\n            AddressLine1 = ''value!''\r\n          },\r\n        new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new EscapedPropertiesContractResolver()\r\n          })", span="112-120"];
m1_28 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", file="ContractResolverTests.cs", label="Assert.AreEqual(@''{''''AddressLine1-'-\''''-'''':''''value!''''}'', json)", span="122-122"];
m1_29 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", file="ContractResolverTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="124-124"];
m1_30 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", file="ContractResolverTests.cs", label="reader.Read()", span="125-125"];
m1_31 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", file="ContractResolverTests.cs", label="reader.Read()", span="126-126"];
m1_32 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", file="ContractResolverTests.cs", label="Assert.AreEqual(@''AddressLine1-'-''''-'', reader.Value)", span="128-128"];
m1_33 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", file="ContractResolverTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", span="110-110"];
m1_55 [cluster="Unk.IsFalse", file="ContractResolverTests.cs", label="Entry Unk.IsFalse", span=""];
m1_48 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="ContractResolverTests.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="221-221"];
m1_66 [cluster="Newtonsoft.Json.Tests.Serialization.IPersonContractResolver.IPersonContractResolver()", file="ContractResolverTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.IPersonContractResolver.IPersonContractResolver()", span="87-87"];
m1_64 [cluster="Newtonsoft.Json.Tests.TestObjects.Employee.Employee()", file="ContractResolverTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Employee.Employee()", span="61-61"];
m1_25 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="ContractResolverTests.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", span="776-776"];
m1_59 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeInterface()", file="ContractResolverTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeInterface()", span="152-152"];
m1_60 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeInterface()", file="ContractResolverTests.cs", label="Employee employee = new Employee\r\n         {\r\n           BirthDate = new DateTime(1977, 12, 30, 1, 1, 1, DateTimeKind.Utc),\r\n           FirstName = ''Maurice'',\r\n           LastName = ''Moss'',\r\n           Department = ''IT'',\r\n           JobTitle = ''Support''\r\n         }", span="154-161"];
m1_61 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeInterface()", file="ContractResolverTests.cs", label="string iPersonJson = JsonConvert.SerializeObject(employee, Formatting.Indented,\r\n        new JsonSerializerSettings { ContractResolver = new IPersonContractResolver() })", span="163-164"];
m1_62 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeInterface()", file="ContractResolverTests.cs", label="Assert.AreEqual(@''{\r\n  ''''FirstName'''': ''''Maurice'''',\r\n  ''''LastName'''': ''''Moss'''',\r\n  ''''BirthDate'''': ''''1977-12-30T01:01:01Z''''\r\n}'', iPersonJson)", span="166-170"];
m1_63 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeInterface()", file="ContractResolverTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeInterface()", span="152-152"];
m1_76 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", file="ContractResolverTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", span="216-216"];
m1_77 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", file="ContractResolverTests.cs", label="StructTest structTest = new StructTest\r\n        {\r\n          IntField = 1,\r\n          IntProperty = 2,\r\n          StringField = ''Field'',\r\n          StringProperty = ''Property''\r\n        }", span="218-224"];
m1_78 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", file="ContractResolverTests.cs", label="DefaultContractResolver skipCompilerGeneratedResolver = new DefaultContractResolver\r\n      {\r\n        DefaultMembersSearchFlags = BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.Public\r\n      }", span="226-229"];
m1_79 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", file="ContractResolverTests.cs", label="string skipCompilerGeneratedJson = JsonConvert.SerializeObject(structTest, Formatting.Indented,\r\n        new JsonSerializerSettings { ContractResolver = skipCompilerGeneratedResolver })", span="231-232"];
m1_82 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", file="ContractResolverTests.cs", label="string includeCompilerGeneratedJson = JsonConvert.SerializeObject(structTest, Formatting.Indented,\r\n        new JsonSerializerSettings { ContractResolver = includeCompilerGeneratedResolver })", span="247-248"];
m1_80 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", file="ContractResolverTests.cs", label="Assert.AreEqual(@''{\r\n  ''''StringField'''': ''''Field'''',\r\n  ''''IntField'''': 1,\r\n  ''''StringProperty'''': ''''Property'''',\r\n  ''''IntProperty'''': 2\r\n}'', skipCompilerGeneratedJson)", span="234-239"];
m1_81 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", file="ContractResolverTests.cs", label="DefaultContractResolver includeCompilerGeneratedResolver = new DefaultContractResolver\r\n      {\r\n        DefaultMembersSearchFlags = BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.Public,\r\n        SerializeCompilerGeneratedMembers = true\r\n      }", span="241-245"];
m1_83 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", file="ContractResolverTests.cs", label="Assert.AreEqual(@''{\r\n  ''''StringField'''': ''''Field'''',\r\n  ''''IntField'''': 1,\r\n  ''''<StringProperty>k__BackingField'''': ''''Property'''',\r\n  ''''<IntProperty>k__BackingField'''': 2,\r\n  ''''StringProperty'''': ''''Property'''',\r\n  ''''IntProperty'''': 2\r\n}'', includeCompilerGeneratedJson)", span="250-257"];
m1_84 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", file="ContractResolverTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", span="216-216"];
m1_10 [cluster="Unk.ToList", file="ContractResolverTests.cs", label="Entry Unk.ToList", span=""];
m1_9 [cluster="Unk.Where", file="ContractResolverTests.cs", label="Entry Unk.Where", span=""];
m1_75 [cluster="Newtonsoft.Json.Tests.Serialization.Book.Book()", file="ContractResolverTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Book.Book()", span="78-78"];
m1_41 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="ContractResolverTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="300-300"];
m1_38 [cluster="Unk.AreEqual", file="ContractResolverTests.cs", label="Entry Unk.AreEqual", span=""];
m1_3 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="ContractResolverTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="58-58"];
m1_4 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="ContractResolverTests.cs", label="IList<JsonProperty> properties = base.CreateProperties(type, memberSerialization)", span="60-60"];
m1_5 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="ContractResolverTests.cs", label="properties =\r\n        properties.Where(p => p.PropertyName.StartsWith(_startingWithChar.ToString())).ToList()", span="63-64"];
m1_6 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="ContractResolverTests.cs", label="return properties;", span="66-66"];
m1_7 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="ContractResolverTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="58-58"];
m1_15 [cluster="string.StartsWith(string)", file="ContractResolverTests.cs", label="Entry string.StartsWith(string)", span="0-0"];
m1_65 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="ContractResolverTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m1_85 [cluster="Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", file="ContractResolverTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", span="27-27"];
m1_14 [cluster="char.ToString()", file="ContractResolverTests.cs", label="Entry char.ToString()", span="0-0"];
m1_40 [cluster="System.IO.StringReader.StringReader(string)", file="ContractResolverTests.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m1_20 [cluster="Newtonsoft.Json.Tests.Serialization.IPersonContractResolver.CreateContract(System.Type)", file="ContractResolverTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.IPersonContractResolver.CreateContract(System.Type)", span="89-89"];
m1_21 [cluster="Newtonsoft.Json.Tests.Serialization.IPersonContractResolver.CreateContract(System.Type)", file="ContractResolverTests.cs", label="objectType == typeof(Employee)", span="91-91"];
m1_23 [cluster="Newtonsoft.Json.Tests.Serialization.IPersonContractResolver.CreateContract(System.Type)", file="ContractResolverTests.cs", label="return base.CreateContract(objectType);", span="94-94"];
m1_22 [cluster="Newtonsoft.Json.Tests.Serialization.IPersonContractResolver.CreateContract(System.Type)", file="ContractResolverTests.cs", label="objectType = typeof(IPerson)", span="92-92"];
m1_24 [cluster="Newtonsoft.Json.Tests.Serialization.IPersonContractResolver.CreateContract(System.Type)", file="ContractResolverTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.IPersonContractResolver.CreateContract(System.Type)", span="89-89"];
m1_56 [cluster="lambda expression", file="ContractResolverTests.cs", label="Entry lambda expression", span="148-148"];
m1_11 [cluster="lambda expression", file="ContractResolverTests.cs", label="Entry lambda expression", span="64-64"];
m1_12 [cluster="lambda expression", file="ContractResolverTests.cs", label="p.PropertyName.StartsWith(_startingWithChar.ToString())", span="64-64"];
m1_13 [cluster="lambda expression", file="ContractResolverTests.cs", label="Exit lambda expression", span="64-64"];
m1_57 [cluster="lambda expression", file="ContractResolverTests.cs", label="c.PropertyName == ''InvariantInfo''", span="148-148"];
m1_58 [cluster="lambda expression", file="ContractResolverTests.cs", label="Exit lambda expression", span="148-148"];
m1_0 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.DynamicContractResolver(char)", file="ContractResolverTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.DynamicContractResolver(char)", span="52-52"];
m1_1 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.DynamicContractResolver(char)", file="ContractResolverTests.cs", label="_startingWithChar = startingWithChar", span="55-55"];
m1_2 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.DynamicContractResolver(char)", file="ContractResolverTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.DynamicContractResolver(char)", span="52-52"];
m1_86 [file="ContractResolverTests.cs", label="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver", span=""];
m1_87 [file="ContractResolverTests.cs", label="Newtonsoft.Json.Tests.Serialization.EscapedPropertiesContractResolver", span=""];
m1_88 [file="ContractResolverTests.cs", label="Newtonsoft.Json.Tests.Serialization.IPersonContractResolver", span=""];
m2_115 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable()", file="CustomerDataSet.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable()", span="319-319"];
m2_161 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable()", color=green, community=0, file="CustomerDataSet.cs", label="this.TableName = ''Customers''", prediction=20, span="321-321"];
m2_162 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable()", color=green, community=0, file="CustomerDataSet.cs", label="this.BeginInit()", prediction=21, span="322-322"];
m2_163 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable()", color=green, community=0, file="CustomerDataSet.cs", label="this.InitClass()", prediction=21, span="323-323"];
m2_164 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable()", color=green, community=0, file="CustomerDataSet.cs", label="this.EndInit()", prediction=21, span="324-324"];
m2_165 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable()", file="CustomerDataSet.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable()", span="319-319"];
m2_116 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ShouldSerializeCustomers()", file="CustomerDataSet.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ShouldSerializeCustomers()", span="232-232"];
m2_117 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ShouldSerializeCustomers()", color=green, community=0, file="CustomerDataSet.cs", label="return false;", prediction=24, span="234-234"];
m2_118 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ShouldSerializeCustomers()", file="CustomerDataSet.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ShouldSerializeCustomers()", span="232-232"];
m2_250 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", span="530-530"];
m2_278 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="global::System.Xml.Schema.XmlSchema schema = null", prediction=25, span="562-562"];
m2_251 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType()", prediction=26, span="532-532"];
m2_252 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence()", prediction=27, span="533-533"];
m2_268 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="type.Attributes.Add(attribute1)", prediction=26, span="549-549"];
m2_272 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="type.Attributes.Add(attribute2)", prediction=26, span="553-553"];
m2_273 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="type.Particle = sequence", prediction=30, span="554-554"];
m2_275 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="xs.Contains(dsSchema.TargetNamespace)", prediction=31, span="556-556"];
m2_274 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable()", prediction=31, span="555-555"];
m2_276 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream()", prediction=31, span="558-558"];
m2_291 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="xs.Add(dsSchema)", prediction=31, span="597-597"];
m2_280 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator()", prediction=35, span="564-564"];
m2_279 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="dsSchema.Write(s1)", prediction=31, span="563-563"];
m2_281 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="schemas.MoveNext()", prediction=37, span="564-564"];
m2_282 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current))", prediction=31, span="566-566"];
m2_290 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="return type;", prediction=30, span="580-580"];
m2_292 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="return type;", prediction=30, span="598-598"];
m2_253 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="CustomerDataSet ds = new CustomerDataSet()", prediction=41, span="534-534"];
m2_259 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="sequence.Items.Add(any1)", prediction=27, span="540-540"];
m2_264 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="sequence.Items.Add(any2)", prediction=27, span="545-545"];
m2_267 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="attribute1.FixedValue = ds.Namespace", prediction=44, span="548-548"];
m2_269 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute()", prediction=45, span="550-550"];
m2_271 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="attribute2.FixedValue = ''CustomersDataTable''", prediction=46, span="552-552"];
m2_254 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny()", prediction=47, span="535-535"];
m2_258 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax", prediction=48, span="539-539"];
m2_260 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny()", prediction=49, span="541-541"];
m2_263 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax", prediction=50, span="544-544"];
m2_265 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute()", prediction=51, span="546-546"];
m2_255 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="any1.Namespace = ''http://www.w3.org/2001/XMLSchema''", prediction=52, span="536-536"];
m2_266 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="attribute1.Name = ''namespace''", prediction=53, span="547-547"];
m2_256 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="any1.MinOccurs = new decimal(0)", prediction=54, span="537-537"];
m2_257 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="any1.MaxOccurs = decimal.MaxValue", prediction=55, span="538-538"];
m2_261 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="any2.Namespace = ''urn:schemas-microsoft-com:xml-diffgram-v1''", prediction=56, span="542-542"];
m2_262 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="any2.MinOccurs = new decimal(1)", prediction=57, span="543-543"];
m2_270 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="attribute2.Name = ''tableTypeName''", prediction=58, span="551-551"];
m2_289 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="(s1.Position == s1.Length)", prediction=31, span="578-578"];
m2_277 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream()", prediction=31, span="559-559"];
m2_285 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="(s1.Length == s2.Length)", prediction=31, span="569-569"];
m2_286 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="s1.Position = 0", prediction=62, span="571-571"];
m2_288 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=3, file="CustomerDataSet.cs", label="((s1.Position != s1.Length)\r\n                            && (s1.ReadByte() == s2.ReadByte()))", prediction=31, span="573-574"];
m2_283 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="s2.SetLength(0)", prediction=31, span="567-567"];
m2_284 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="schema.Write(s2)", prediction=31, span="568-568"];
m2_287 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="s2.Position = 0", prediction=66, span="572-572"];
m2_293 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", span="530-530"];
m2_96 [cluster="System.IO.MemoryStream.MemoryStream()", file="CustomerDataSet.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m2_49 [cluster="Unk.Merge", file="CustomerDataSet.cs", label="Entry Unk.Merge", span=""];
m2_158 [cluster="System.Collections.IEnumerator.MoveNext()", file="CustomerDataSet.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m2_152 [cluster="global::System.Xml.Schema.XmlSchemaSequence.cstr", file="CustomerDataSet.cs", label="Entry global::System.Xml.Schema.XmlSchemaSequence.cstr", span=""];
m2_11 [cluster="Unk.EndInit", file="CustomerDataSet.cs", label="Entry Unk.EndInit", span=""];
m2_63 [cluster="Unk.Clone", file="CustomerDataSet.cs", label="Entry Unk.Clone", span=""];
m2_213 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.NewRowFromBuilder(System.Data.DataRowBuilder)", file="CustomerDataSet.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.NewRowFromBuilder(System.Data.DataRowBuilder)", span="465-465"];
m2_214 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.NewRowFromBuilder(System.Data.DataRowBuilder)", color=green, community=0, file="CustomerDataSet.cs", label="return new CustomersRow(builder);", prediction=67, span="467-467"];
m2_215 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.NewRowFromBuilder(System.Data.DataRowBuilder)", file="CustomerDataSet.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.NewRowFromBuilder(System.Data.DataRowBuilder)", span="465-465"];
m2_227 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRowChangeEventHandler.Invoke(object, Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRowChangeEvent)", file="CustomerDataSet.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRowChangeEventHandler.Invoke(object, Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRowChangeEvent)", span="305-305"];
m2_40 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars(bool)", file="CustomerDataSet.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars(bool)", span="206-206"];
m2_102 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars(bool)", color=green, community=0, file="CustomerDataSet.cs", label="this.tableCustomers = ((CustomersDataTable)(base.Tables[''Customers'']))", prediction=68, span="208-208"];
m2_103 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars(bool)", color=green, community=0, file="CustomerDataSet.cs", label="(initTable == true)", prediction=69, span="209-209"];
m2_104 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars(bool)", color=green, community=0, file="CustomerDataSet.cs", label="(this.tableCustomers != null)", prediction=70, span="211-211"];
m2_105 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars(bool)", color=green, community=0, file="CustomerDataSet.cs", label="this.tableCustomers.InitVars()", prediction=70, span="213-213"];
m2_106 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars(bool)", file="CustomerDataSet.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars(bool)", span="206-206"];
m2_193 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetEnumerator()", file="CustomerDataSet.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetEnumerator()", span="420-420"];
m2_194 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetEnumerator()", color=green, community=0, file="CustomerDataSet.cs", label="return this.Rows.GetEnumerator();", prediction=21, span="422-422"];
m2_195 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetEnumerator()", file="CustomerDataSet.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetEnumerator()", span="420-420"];
m2_0 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet()", file="CustomerDataSet.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet()", span="24-24"];
m2_1 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet()", color=green, community=0, file="CustomerDataSet.cs", label="this.BeginInit()", prediction=70, span="26-26"];
m2_2 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet()", color=green, community=0, file="CustomerDataSet.cs", label="this.InitClass()", prediction=70, span="27-27"];
m2_3 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet()", color=green, community=0, file="CustomerDataSet.cs", label="global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged)", prediction=75, span="28-28"];
m2_4 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet()", color=green, community=0, file="CustomerDataSet.cs", label="base.Tables.CollectionChanged += schemaChangedHandler", prediction=76, span="29-29"];
m2_5 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet()", color=green, community=0, file="CustomerDataSet.cs", label="base.Relations.CollectionChanged += schemaChangedHandler", prediction=77, span="30-30"];
m2_6 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet()", color=green, community=0, file="CustomerDataSet.cs", label="this.EndInit()", prediction=70, span="31-31"];
m2_7 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet()", file="CustomerDataSet.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet()", span="24-24"];
m2_90 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetSchemaSerializable()", file="CustomerDataSet.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetSchemaSerializable()", span="189-189"];
m2_91 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetSchemaSerializable()", color=green, community=0, file="CustomerDataSet.cs", label="global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream()", prediction=79, span="191-191"];
m2_92 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetSchemaSerializable()", color=green, community=0, file="CustomerDataSet.cs", label="this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null))", prediction=70, span="192-192"];
m2_93 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetSchemaSerializable()", color=green, community=0, file="CustomerDataSet.cs", label="stream.Position = 0", prediction=81, span="193-193"];
m2_94 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetSchemaSerializable()", color=green, community=0, file="CustomerDataSet.cs", label="return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);", prediction=79, span="194-194"];
m2_95 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetSchemaSerializable()", file="CustomerDataSet.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetSchemaSerializable()", span="189-189"];
m2_88 [cluster="Unk.Reset", file="CustomerDataSet.cs", label="Entry Unk.Reset", span=""];
m2_98 [cluster="Unk.WriteXmlSchema", file="CustomerDataSet.cs", label="Entry Unk.WriteXmlSchema", span=""];
m2_99 [cluster="Unk.Read", file="CustomerDataSet.cs", label="Entry Unk.Read", span=""];
m2_123 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", span="249-249"];
m2_124 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="CustomerDataSet ds = new CustomerDataSet()", prediction=83, span="251-251"];
m2_125 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType()", prediction=84, span="252-252"];
m2_128 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="any.Namespace = ds.Namespace", prediction=85, span="255-255"];
m2_131 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable()", prediction=86, span="258-258"];
m2_132 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="xs.Contains(dsSchema.TargetNamespace)", prediction=86, span="259-259"];
m2_133 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream()", prediction=86, span="261-261"];
m2_148 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="xs.Add(dsSchema)", prediction=86, span="300-300"];
m2_137 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator()", prediction=90, span="267-267"];
m2_136 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="dsSchema.Write(s1)", prediction=86, span="266-266"];
m2_138 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="schemas.MoveNext()", prediction=92, span="267-267"];
m2_139 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current))", prediction=86, span="269-269"];
m2_147 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="return type;", prediction=94, span="283-283"];
m2_149 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="return type;", prediction=94, span="301-301"];
m2_126 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence()", prediction=96, span="253-253"];
m2_130 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="type.Particle = sequence", prediction=94, span="257-257"];
m2_127 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny()", prediction=98, span="254-254"];
m2_129 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="sequence.Items.Add(any)", prediction=96, span="256-256"];
m2_146 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="(s1.Position == s1.Length)", prediction=86, span="281-281"];
m2_135 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="global::System.Xml.Schema.XmlSchema schema = null", prediction=101, span="265-265"];
m2_134 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream()", prediction=86, span="262-262"];
m2_142 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="(s1.Length == s2.Length)", prediction=86, span="272-272"];
m2_143 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="s1.Position = 0", prediction=104, span="274-274"];
m2_145 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=3, file="CustomerDataSet.cs", label="((s1.Position != s1.Length)\r\n                          && (s1.ReadByte() == s2.ReadByte()))", prediction=86, span="276-277"];
m2_140 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="s2.SetLength(0)", prediction=86, span="270-270"];
m2_141 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="schema.Write(s2)", prediction=86, span="271-271"];
m2_144 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", color=green, community=0, file="CustomerDataSet.cs", label="s2.Position = 0", prediction=108, span="275-275"];
m2_150 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", span="249-249"];
m2_166 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.InitClass()", file="CustomerDataSet.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.InitClass()", span="450-450"];
m2_206 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.InitClass()", color=green, community=0, file="CustomerDataSet.cs", label="this.columnCustomerID = new global::System.Data.DataColumn(''CustomerID'', typeof(string), null, global::System.Data.MappingType.Element)", prediction=109, span="452-452"];
m2_207 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.InitClass()", color=green, community=0, file="CustomerDataSet.cs", label="base.Columns.Add(this.columnCustomerID)", prediction=21, span="453-453"];
m2_208 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.InitClass()", file="CustomerDataSet.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.InitClass()", span="450-450"];
m2_249 [cluster="Unk.Remove", file="CustomerDataSet.cs", label="Entry Unk.Remove", span=""];
m2_10 [cluster="global::System.ComponentModel.CollectionChangeEventHandler.cstr", file="CustomerDataSet.cs", label="Entry global::System.ComponentModel.CollectionChangeEventHandler.cstr", span=""];
m2_9 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitClass()", file="CustomerDataSet.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitClass()", span="220-220"];
m2_108 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitClass()", color=green, community=0, file="CustomerDataSet.cs", label="this.DataSetName = ''CustomerDataSet''", prediction=111, span="222-222"];
m2_109 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitClass()", color=green, community=0, file="CustomerDataSet.cs", label="this.Prefix = ''''", prediction=112, span="223-223"];
m2_110 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitClass()", color=green, community=0, file="CustomerDataSet.cs", label="this.EnforceConstraints = true", prediction=113, span="224-224"];
m2_111 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitClass()", color=green, community=0, file="CustomerDataSet.cs", label="this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema", prediction=114, span="225-225"];
m2_112 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitClass()", color=green, community=0, file="CustomerDataSet.cs", label="this.tableCustomers = new CustomersDataTable()", prediction=115, span="226-226"];
m2_113 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitClass()", color=green, community=0, file="CustomerDataSet.cs", label="base.Tables.Add(this.tableCustomers)", prediction=70, span="227-227"];
m2_114 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitClass()", file="CustomerDataSet.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitClass()", span="220-220"];
m2_246 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.RemoveCustomersRow(Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow)", file="CustomerDataSet.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.RemoveCustomersRow(Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow)", span="523-523"];
m2_247 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.RemoveCustomersRow(Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow)", color=green, community=0, file="CustomerDataSet.cs", label="this.Rows.Remove(row)", prediction=21, span="525-525"];
m2_248 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.RemoveCustomersRow(Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow)", file="CustomerDataSet.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.RemoveCustomersRow(Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow)", span="523-523"];
m2_156 [cluster="Unk.Schemas", file="CustomerDataSet.cs", label="Entry Unk.Schemas", span=""];
m2_298 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow.IsCustomerIDNull()", file="CustomerDataSet.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow.IsCustomerIDNull()", span="641-641"];
m2_299 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow.IsCustomerIDNull()", color=green, community=0, file="CustomerDataSet.cs", label="return this.IsNull(this.tableCustomers.CustomerIDColumn);", prediction=118, span="643-643"];
m2_300 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow.IsCustomerIDNull()", file="CustomerDataSet.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow.IsCustomerIDNull()", span="641-641"];
m2_185 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(string)", file="CustomerDataSet.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(string)", span="408-408"];
m2_186 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(string)", color=green, community=0, file="CustomerDataSet.cs", label="CustomersRow rowCustomersRow = ((CustomersRow)(this.NewRow()))", prediction=119, span="410-410"];
m2_187 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(string)", color=green, community=3, file="CustomerDataSet.cs", label="object[] columnValuesArray = new object[] {\r\n                        CustomerID}", prediction=120, span="411-412"];
m2_188 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(string)", color=green, community=0, file="CustomerDataSet.cs", label="rowCustomersRow.ItemArray = columnValuesArray", prediction=121, span="413-413"];
m2_189 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(string)", color=green, community=0, file="CustomerDataSet.cs", label="this.Rows.Add(rowCustomersRow)", prediction=21, span="414-414"];
m2_190 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(string)", color=green, community=0, file="CustomerDataSet.cs", label="return rowCustomersRow;", prediction=121, span="415-415"];
m2_191 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(string)", file="CustomerDataSet.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(string)", span="408-408"];
m2_155 [cluster="Unk.Write", file="CustomerDataSet.cs", label="Entry Unk.Write", span=""];
m2_159 [cluster="System.IO.MemoryStream.SetLength(long)", file="CustomerDataSet.cs", label="Entry System.IO.MemoryStream.SetLength(long)", span="0-0"];
m2_151 [cluster="global::System.Xml.Schema.XmlSchemaComplexType.cstr", file="CustomerDataSet.cs", label="Entry global::System.Xml.Schema.XmlSchemaComplexType.cstr", span=""];
m2_167 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable(System.Data.DataTable)", file="CustomerDataSet.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable(System.Data.DataTable)", span="329-329"];
m2_168 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable(System.Data.DataTable)", color=green, community=0, file="CustomerDataSet.cs", label="this.TableName = table.TableName", prediction=124, span="331-331"];
m2_169 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable(System.Data.DataTable)", color=green, community=0, file="CustomerDataSet.cs", label="(table.CaseSensitive != table.DataSet.CaseSensitive)", prediction=125, span="332-332"];
m2_170 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable(System.Data.DataTable)", color=green, community=0, file="CustomerDataSet.cs", label="this.CaseSensitive = table.CaseSensitive", prediction=126, span="334-334"];
m2_171 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable(System.Data.DataTable)", color=green, community=0, file="CustomerDataSet.cs", label="(table.Locale.ToString() != table.DataSet.Locale.ToString())", prediction=125, span="336-336"];
m2_172 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable(System.Data.DataTable)", color=green, community=0, file="CustomerDataSet.cs", label="this.Locale = table.Locale", prediction=128, span="338-338"];
m2_173 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable(System.Data.DataTable)", color=green, community=0, file="CustomerDataSet.cs", label="(table.Namespace != table.DataSet.Namespace)", prediction=125, span="340-340"];
m2_174 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable(System.Data.DataTable)", color=green, community=0, file="CustomerDataSet.cs", label="this.Namespace = table.Namespace", prediction=130, span="342-342"];
m2_175 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable(System.Data.DataTable)", color=green, community=0, file="CustomerDataSet.cs", label="this.Prefix = table.Prefix", prediction=131, span="344-344"];
m2_176 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable(System.Data.DataTable)", color=green, community=0, file="CustomerDataSet.cs", label="this.MinimumCapacity = table.MinimumCapacity", prediction=132, span="345-345"];
m2_177 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable(System.Data.DataTable)", file="CustomerDataSet.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable(System.Data.DataTable)", span="329-329"];
m2_89 [cluster="Unk.ReadXml", file="CustomerDataSet.cs", label="Entry Unk.ReadXml", span=""];
m2_182 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow)", file="CustomerDataSet.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow)", span="401-401"];
m2_183 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow)", color=green, community=0, file="CustomerDataSet.cs", label="this.Rows.Add(row)", prediction=21, span="403-403"];
m2_184 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow)", file="CustomerDataSet.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow)", span="401-401"];
m2_44 [cluster="global::System.Xml.XmlTextReader.cstr", file="CustomerDataSet.cs", label="Entry global::System.Xml.XmlTextReader.cstr", span=""];
m2_209 [cluster="global::System.Data.DataColumn.cstr", file="CustomerDataSet.cs", label="Entry global::System.Data.DataColumn.cstr", span=""];
m2_160 [cluster="System.IO.MemoryStream.ReadByte()", file="CustomerDataSet.cs", label="Entry System.IO.MemoryStream.ReadByte()", span="0-0"];
m2_201 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CreateInstance()", file="CustomerDataSet.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CreateInstance()", span="436-436"];
m2_202 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CreateInstance()", color=green, community=0, file="CustomerDataSet.cs", label="return new CustomersDataTable();", prediction=134, span="438-438"];
m2_203 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CreateInstance()", file="CustomerDataSet.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CreateInstance()", span="436-436"];
m2_239 [cluster="Unk.OnRowDeleted", file="CustomerDataSet.cs", label="Entry Unk.OnRowDeleted", span=""];
m2_301 [cluster="Unk.IsNull", file="CustomerDataSet.cs", label="Entry Unk.IsNull", span=""];
m2_12 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="CustomerDataSet.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="36-36"];
m2_13 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", color=green, community=0, file="CustomerDataSet.cs", label="(this.IsBinarySerialized(info, context) == true)", prediction=70, span="39-39"];
m2_14 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", color=green, community=0, file="CustomerDataSet.cs", label="this.InitVars(false)", prediction=70, span="41-41"];
m2_19 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", color=green, community=0, file="CustomerDataSet.cs", label="string strSchema = ((string)(info.GetValue(''XmlSchema'', typeof(string))))", prediction=70, span="47-47"];
m2_20 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", color=green, community=0, file="CustomerDataSet.cs", label="(this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)", prediction=70, span="48-48"];
m2_22 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", color=green, community=0, file="CustomerDataSet.cs", label="ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)))", prediction=70, span="51-51"];
m2_33 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", color=green, community=0, file="CustomerDataSet.cs", label="this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)))", prediction=70, span="67-67"];
m2_21 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", color=green, community=0, file="CustomerDataSet.cs", label="global::System.Data.DataSet ds = new global::System.Data.DataSet()", prediction=70, span="50-50"];
m2_34 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", color=green, community=0, file="CustomerDataSet.cs", label="this.GetSerializationData(info, context)", prediction=70, span="69-69"];
m2_32 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", color=green, community=0, file="CustomerDataSet.cs", label="this.InitVars()", prediction=70, span="63-63"];
m2_35 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", color=green, community=0, file="CustomerDataSet.cs", label="global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged)", prediction=144, span="70-70"];
m2_15 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", color=green, community=0, file="CustomerDataSet.cs", label="global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged)", prediction=145, span="42-42"];
m2_16 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", color=green, community=0, file="CustomerDataSet.cs", label="this.Tables.CollectionChanged += schemaChangedHandler1", prediction=146, span="43-43"];
m2_17 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", color=green, community=0, file="CustomerDataSet.cs", label="this.Relations.CollectionChanged += schemaChangedHandler1", prediction=147, span="44-44"];
m2_18 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", color=green, community=0, file="CustomerDataSet.cs", label="return;", prediction=148, span="45-45"];
m2_23 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", color=green, community=0, file="CustomerDataSet.cs", label="(ds.Tables[''Customers''] != null)", prediction=70, span="52-52"];
m2_24 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", color=green, community=0, file="CustomerDataSet.cs", label="base.Tables.Add(new CustomersDataTable(ds.Tables[''Customers'']))", prediction=70, span="54-54"];
m2_25 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", color=green, community=0, file="CustomerDataSet.cs", label="this.DataSetName = ds.DataSetName", prediction=151, span="56-56"];
m2_26 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", color=green, community=0, file="CustomerDataSet.cs", label="this.Prefix = ds.Prefix", prediction=152, span="57-57"];
m2_27 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", color=green, community=0, file="CustomerDataSet.cs", label="this.Namespace = ds.Namespace", prediction=153, span="58-58"];
m2_28 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", color=green, community=0, file="CustomerDataSet.cs", label="this.Locale = ds.Locale", prediction=154, span="59-59"];
m2_29 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", color=green, community=0, file="CustomerDataSet.cs", label="this.CaseSensitive = ds.CaseSensitive", prediction=155, span="60-60"];
m2_30 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", color=green, community=0, file="CustomerDataSet.cs", label="this.EnforceConstraints = ds.EnforceConstraints", prediction=156, span="61-61"];
m2_31 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", color=green, community=0, file="CustomerDataSet.cs", label="this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add)", prediction=70, span="62-62"];
m2_36 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", color=green, community=0, file="CustomerDataSet.cs", label="base.Tables.CollectionChanged += schemaChangedHandler", prediction=158, span="71-71"];
m2_37 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", color=green, community=0, file="CustomerDataSet.cs", label="this.Relations.CollectionChanged += schemaChangedHandler", prediction=159, span="72-72"];
m2_38 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="CustomerDataSet.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="36-36"];
m2_47 [cluster="CustomersDataTable.cstr", file="CustomerDataSet.cs", label="Entry CustomersDataTable.cstr", span=""];
m2_154 [cluster="Unk.Contains", file="CustomerDataSet.cs", label="Entry Unk.Contains", span=""];
m2_157 [cluster="Unk.GetEnumerator", file="CustomerDataSet.cs", label="Entry Unk.GetEnumerator", span=""];
m2_234 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)", file="CustomerDataSet.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)", span="501-501"];
m2_235 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)", color=green, community=0, file="CustomerDataSet.cs", label="base.OnRowDeleted(e)", prediction=21, span="503-503"];
m2_236 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)", color=green, community=0, file="CustomerDataSet.cs", label="(this.CustomersRowDeleted != null)", prediction=21, span="504-504"];
m2_237 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)", color=green, community=0, file="CustomerDataSet.cs", label="this.CustomersRowDeleted(this, new CustomersRowChangeEvent(((CustomersRow)(e.Row)), e.Action))", prediction=21, span="506-506"];
m2_238 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)", file="CustomerDataSet.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)", span="501-501"];
m2_240 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)", file="CustomerDataSet.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)", span="512-512"];
m2_241 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)", color=green, community=0, file="CustomerDataSet.cs", label="base.OnRowDeleting(e)", prediction=21, span="514-514"];
m2_242 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)", color=green, community=0, file="CustomerDataSet.cs", label="(this.CustomersRowDeleting != null)", prediction=21, span="515-515"];
m2_243 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)", color=green, community=0, file="CustomerDataSet.cs", label="this.CustomersRowDeleting(this, new CustomersRowChangeEvent(((CustomersRow)(e.Row)), e.Action))", prediction=21, span="517-517"];
m2_244 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)", file="CustomerDataSet.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)", span="512-512"];
m2_50 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars()", file="CustomerDataSet.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars()", span="199-199"];
m2_100 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars()", color=green, community=0, file="CustomerDataSet.cs", label="this.InitVars(true)", prediction=70, span="201-201"];
m2_101 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars()", file="CustomerDataSet.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars()", span="199-199"];
m2_52 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitializeDerivedDataSet()", file="CustomerDataSet.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitializeDerivedDataSet()", span="127-127"];
m2_53 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitializeDerivedDataSet()", color=green, community=0, file="CustomerDataSet.cs", label="this.BeginInit()", prediction=70, span="129-129"];
m2_54 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitializeDerivedDataSet()", color=green, community=0, file="CustomerDataSet.cs", label="this.InitClass()", prediction=70, span="130-130"];
m2_55 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitializeDerivedDataSet()", color=green, community=0, file="CustomerDataSet.cs", label="this.EndInit()", prediction=70, span="131-131"];
m2_56 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitializeDerivedDataSet()", file="CustomerDataSet.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitializeDerivedDataSet()", span="127-127"];
m2_107 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.InitVars()", file="CustomerDataSet.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.InitVars()", span="443-443"];
m2_204 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.InitVars()", color=green, community=0, file="CustomerDataSet.cs", label="this.columnCustomerID = base.Columns[''CustomerID'']", prediction=170, span="445-445"];
m2_205 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.InitVars()", file="CustomerDataSet.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.InitVars()", span="443-443"];
m2_119 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.SchemaChanged(object, System.ComponentModel.CollectionChangeEventArgs)", file="CustomerDataSet.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.SchemaChanged(object, System.ComponentModel.CollectionChangeEventArgs)", span="239-239"];
m2_120 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.SchemaChanged(object, System.ComponentModel.CollectionChangeEventArgs)", color=green, community=0, file="CustomerDataSet.cs", label="(e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)", prediction=171, span="241-241"];
m2_121 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.SchemaChanged(object, System.ComponentModel.CollectionChangeEventArgs)", color=green, community=0, file="CustomerDataSet.cs", label="this.InitVars()", prediction=70, span="243-243"];
m2_122 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.SchemaChanged(object, System.ComponentModel.CollectionChangeEventArgs)", file="CustomerDataSet.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.SchemaChanged(object, System.ComponentModel.CollectionChangeEventArgs)", span="239-239"];
m2_42 [cluster="Unk.DetermineSchemaSerializationMode", file="CustomerDataSet.cs", label="Entry Unk.DetermineSchemaSerializationMode", span=""];
m2_179 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="CustomerDataSet.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="350-350"];
m2_180 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", color=green, community=0, file="CustomerDataSet.cs", label="this.InitVars()", prediction=21, span="353-353"];
m2_181 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="CustomerDataSet.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="350-350"];
m2_192 [cluster="Unk.NewRow", file="CustomerDataSet.cs", label="Entry Unk.NewRow", span=""];
m2_97 [cluster="global::System.Xml.XmlTextWriter.cstr", file="CustomerDataSet.cs", label="Entry global::System.Xml.XmlTextWriter.cstr", span=""];
m2_225 [cluster="Unk.OnRowChanged", file="CustomerDataSet.cs", label="Entry Unk.OnRowChanged", span=""];
m2_41 [cluster="System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", file="CustomerDataSet.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", span="0-0"];
m2_178 [cluster="Unk.ToString", file="CustomerDataSet.cs", label="Entry Unk.ToString", span=""];
m2_295 [cluster="global::System.Xml.Schema.XmlSchemaAttribute.cstr", file="CustomerDataSet.cs", label="Entry global::System.Xml.Schema.XmlSchemaAttribute.cstr", span=""];
m2_210 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.NewCustomersRow()", file="CustomerDataSet.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.NewCustomersRow()", span="458-458"];
m2_211 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.NewCustomersRow()", color=green, community=0, file="CustomerDataSet.cs", label="return ((CustomersRow)(this.NewRow()));", prediction=21, span="460-460"];
m2_212 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.NewCustomersRow()", file="CustomerDataSet.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.NewCustomersRow()", span="458-458"];
m2_216 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow.CustomersRow(System.Data.DataRowBuilder)", file="CustomerDataSet.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow.CustomersRow(System.Data.DataRowBuilder)", span="612-612"];
m2_296 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow.CustomersRow(System.Data.DataRowBuilder)", color=green, community=0, file="CustomerDataSet.cs", label="this.tableCustomers = ((CustomersDataTable)(this.Table))", prediction=175, span="615-615"];
m2_297 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow.CustomersRow(System.Data.DataRowBuilder)", file="CustomerDataSet.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow.CustomersRow(System.Data.DataRowBuilder)", span="612-612"];
m2_305 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRowChangeEvent.CustomersRowChangeEvent(Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow, System.Data.DataRowAction)", file="CustomerDataSet.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRowChangeEvent.CustomersRowChangeEvent(Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow, System.Data.DataRowAction)", span="667-667"];
m2_306 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRowChangeEvent.CustomersRowChangeEvent(Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow, System.Data.DataRowAction)", color=green, community=0, file="CustomerDataSet.cs", label="this.eventRow = row", prediction=176, span="669-669"];
m2_307 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRowChangeEvent.CustomersRowChangeEvent(Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow, System.Data.DataRowAction)", color=green, community=0, file="CustomerDataSet.cs", label="this.eventAction = action", prediction=177, span="670-670"];
m2_308 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRowChangeEvent.CustomersRowChangeEvent(Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow, System.Data.DataRowAction)", file="CustomerDataSet.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRowChangeEvent.CustomersRowChangeEvent(Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow, System.Data.DataRowAction)", span="667-667"];
m2_67 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ShouldSerializeRelations()", file="CustomerDataSet.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ShouldSerializeRelations()", span="153-153"];
m2_68 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ShouldSerializeRelations()", color=green, community=0, file="CustomerDataSet.cs", label="return false;", prediction=178, span="155-155"];
m2_69 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ShouldSerializeRelations()", file="CustomerDataSet.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ShouldSerializeRelations()", span="153-153"];
m2_226 [cluster="CustomersRowChangeEvent.cstr", file="CustomerDataSet.cs", label="Entry CustomersRowChangeEvent.cstr", span=""];
m2_39 [cluster="Unk.IsBinarySerialized", file="CustomerDataSet.cs", label="Entry Unk.IsBinarySerialized", span=""];
m2_46 [cluster="Unk.ReadXmlSchema", file="CustomerDataSet.cs", label="Entry Unk.ReadXmlSchema", span=""];
m2_153 [cluster="global::System.Xml.Schema.XmlSchemaAny.cstr", file="CustomerDataSet.cs", label="Entry global::System.Xml.Schema.XmlSchemaAny.cstr", span=""];
m2_70 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", file="CustomerDataSet.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", span="160-160"];
m2_71 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", color=green, community=0, file="CustomerDataSet.cs", label="(this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)", prediction=70, span="162-162"];
m2_72 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", color=green, community=0, file="CustomerDataSet.cs", label="this.Reset()", prediction=70, span="164-164"];
m2_85 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", color=green, community=0, file="CustomerDataSet.cs", label="this.ReadXml(reader)", prediction=70, span="182-182"];
m2_74 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", color=green, community=0, file="CustomerDataSet.cs", label="ds.ReadXml(reader)", prediction=70, span="166-166"];
m2_73 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", color=green, community=0, file="CustomerDataSet.cs", label="global::System.Data.DataSet ds = new global::System.Data.DataSet()", prediction=70, span="165-165"];
m2_75 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", color=green, community=0, file="CustomerDataSet.cs", label="(ds.Tables[''Customers''] != null)", prediction=70, span="167-167"];
m2_86 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", color=green, community=0, file="CustomerDataSet.cs", label="this.InitVars()", prediction=70, span="183-183"];
m2_76 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", color=green, community=0, file="CustomerDataSet.cs", label="base.Tables.Add(new CustomersDataTable(ds.Tables[''Customers'']))", prediction=70, span="169-169"];
m2_77 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", color=green, community=0, file="CustomerDataSet.cs", label="this.DataSetName = ds.DataSetName", prediction=187, span="171-171"];
m2_78 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", color=green, community=0, file="CustomerDataSet.cs", label="this.Prefix = ds.Prefix", prediction=188, span="172-172"];
m2_79 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", color=green, community=0, file="CustomerDataSet.cs", label="this.Namespace = ds.Namespace", prediction=189, span="173-173"];
m2_80 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", color=green, community=0, file="CustomerDataSet.cs", label="this.Locale = ds.Locale", prediction=190, span="174-174"];
m2_81 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", color=green, community=0, file="CustomerDataSet.cs", label="this.CaseSensitive = ds.CaseSensitive", prediction=191, span="175-175"];
m2_82 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", color=green, community=0, file="CustomerDataSet.cs", label="this.EnforceConstraints = ds.EnforceConstraints", prediction=192, span="176-176"];
m2_83 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", color=green, community=0, file="CustomerDataSet.cs", label="this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add)", prediction=70, span="177-177"];
m2_84 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", color=green, community=0, file="CustomerDataSet.cs", label="this.InitVars()", prediction=70, span="178-178"];
m2_87 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", file="CustomerDataSet.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", span="160-160"];
m2_217 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetRowType()", file="CustomerDataSet.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetRowType()", span="472-472"];
m2_218 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetRowType()", color=green, community=0, file="CustomerDataSet.cs", label="return typeof(CustomersRow);", prediction=195, span="474-474"];
m2_219 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetRowType()", file="CustomerDataSet.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetRowType()", span="472-472"];
m2_228 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)", file="CustomerDataSet.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)", span="490-490"];
m2_229 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)", color=green, community=0, file="CustomerDataSet.cs", label="base.OnRowChanging(e)", prediction=21, span="492-492"];
m2_230 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)", color=green, community=0, file="CustomerDataSet.cs", label="(this.CustomersRowChanging != null)", prediction=21, span="493-493"];
m2_231 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)", color=green, community=0, file="CustomerDataSet.cs", label="this.CustomersRowChanging(this, new CustomersRowChangeEvent(((CustomersRow)(e.Row)), e.Action))", prediction=21, span="495-495"];
m2_232 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)", file="CustomerDataSet.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)", span="490-490"];
m2_302 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow.SetCustomerIDNull()", file="CustomerDataSet.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow.SetCustomerIDNull()", span="648-648"];
m2_303 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow.SetCustomerIDNull()", color=green, community=0, file="CustomerDataSet.cs", label="this[this.tableCustomers.CustomerIDColumn] = global::System.Convert.DBNull", prediction=199, span="650-650"];
m2_304 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow.SetCustomerIDNull()", file="CustomerDataSet.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow.SetCustomerIDNull()", span="648-648"];
m2_43 [cluster="global::System.Data.DataSet.cstr", file="CustomerDataSet.cs", label="Entry global::System.Data.DataSet.cstr", span=""];
m2_45 [cluster="System.IO.StringReader.StringReader(string)", file="CustomerDataSet.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m2_294 [cluster="decimal.Decimal(int)", file="CustomerDataSet.cs", label="Entry decimal.Decimal(int)", span="0-0"];
m2_57 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.Clone()", file="CustomerDataSet.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.Clone()", span="136-136"];
m2_58 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.Clone()", color=green, community=0, file="CustomerDataSet.cs", label="CustomerDataSet cln = ((CustomerDataSet)(base.Clone()))", prediction=200, span="138-138"];
m2_59 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.Clone()", color=green, community=0, file="CustomerDataSet.cs", label="cln.InitVars()", prediction=201, span="139-139"];
m2_60 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.Clone()", color=green, community=0, file="CustomerDataSet.cs", label="cln.SchemaSerializationMode = this.SchemaSerializationMode", prediction=202, span="140-140"];
m2_61 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.Clone()", color=green, community=0, file="CustomerDataSet.cs", label="return cln;", prediction=200, span="141-141"];
m2_62 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.Clone()", file="CustomerDataSet.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.Clone()", span="136-136"];
m2_233 [cluster="Unk.OnRowChanging", file="CustomerDataSet.cs", label="Entry Unk.OnRowChanging", span=""];
m2_196 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.Clone()", file="CustomerDataSet.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.Clone()", span="427-427"];
m2_197 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.Clone()", color=green, community=0, file="CustomerDataSet.cs", label="CustomersDataTable cln = ((CustomersDataTable)(base.Clone()))", prediction=204, span="429-429"];
m2_198 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.Clone()", color=green, community=0, file="CustomerDataSet.cs", label="cln.InitVars()", prediction=205, span="430-430"];
m2_199 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.Clone()", color=green, community=0, file="CustomerDataSet.cs", label="return cln;", prediction=204, span="431-431"];
m2_200 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.Clone()", file="CustomerDataSet.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.Clone()", span="427-427"];
m2_220 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)", file="CustomerDataSet.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)", span="479-479"];
m2_221 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)", color=green, community=0, file="CustomerDataSet.cs", label="base.OnRowChanged(e)", prediction=21, span="481-481"];
m2_222 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)", color=green, community=0, file="CustomerDataSet.cs", label="(this.CustomersRowChanged != null)", prediction=21, span="482-482"];
m2_223 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)", color=green, community=0, file="CustomerDataSet.cs", label="this.CustomersRowChanged(this, new CustomersRowChangeEvent(((CustomersRow)(e.Row)), e.Action))", prediction=21, span="484-484"];
m2_224 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)", file="CustomerDataSet.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)", span="479-479"];
m2_245 [cluster="Unk.OnRowDeleting", file="CustomerDataSet.cs", label="Entry Unk.OnRowDeleting", span=""];
m2_64 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ShouldSerializeTables()", file="CustomerDataSet.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ShouldSerializeTables()", span="146-146"];
m2_65 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ShouldSerializeTables()", color=green, community=0, file="CustomerDataSet.cs", label="return false;", prediction=210, span="148-148"];
m2_66 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ShouldSerializeTables()", file="CustomerDataSet.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ShouldSerializeTables()", span="146-146"];
m2_51 [cluster="Unk.GetSerializationData", file="CustomerDataSet.cs", label="Entry Unk.GetSerializationData", span=""];
m2_48 [cluster="Unk.Add", file="CustomerDataSet.cs", label="Entry Unk.Add", span=""];
m2_8 [cluster="Unk.BeginInit", file="CustomerDataSet.cs", label="Entry Unk.BeginInit", span=""];
m2_309 [file="CustomerDataSet.cs", label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", span=""];
m2_310 [file="CustomerDataSet.cs", label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", span=""];
m2_311 [file="CustomerDataSet.cs", label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", span=""];
m2_312 [file="CustomerDataSet.cs", label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", span=""];
m2_313 [file="CustomerDataSet.cs", label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", span=""];
m2_314 [file="CustomerDataSet.cs", label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", span=""];
m2_315 [file="CustomerDataSet.cs", label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", span=""];
m2_316 [file="CustomerDataSet.cs", label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow", span=""];
m2_317 [file="CustomerDataSet.cs", label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRowChangeEvent", span=""];
m3_134 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", span="248-248"];
m3_135 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="DataSetConverter.cs", label="string json = @''{ ''''ItemName'''': ''''value'''', ''''u'''':netanelsalinger,''''r'''':9 }''", span="250-250"];
m3_136 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="252-252"];
m3_137 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="254-254"];
m3_138 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="255-255"];
m3_139 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="257-257"];
m3_140 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="258-258"];
m3_141 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="260-260"];
m3_142 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="261-261"];
m3_143 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="263-263"];
m3_144 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="264-264"];
m3_145 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected content while parsing JSON. Path 'u', line 1, position 27.'')", span="266-266"];
m3_146 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", span="248-248"];
m3_965 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="650-650"];
m3_28 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Integer, jsonTextReader.TokenType)", span="102-102"];
m3_665 [cluster="System.Convert.ToBase64String(byte[])", file="DataSetConverter.cs", label="Entry System.Convert.ToBase64String(byte[])", span="0-0"];
m3_915 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", span="1443-1443"];
m3_916 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DataSetConverter.cs", label="StringBuilder sb = new StringBuilder()", span="1445-1445"];
m3_917 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DataSetConverter.cs", label="StringWriter sw = new StringWriter(sb)", span="1446-1446"];
m3_943 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DataSetConverter.cs", label="string json = sb.ToString()", span="1485-1485"];
m3_918 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DataSetConverter.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="1448-1451"];
m3_919 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DataSetConverter.cs", label="jsonWriter.WriteStartArray()", span="1453-1453"];
m3_920 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DataSetConverter.cs", label="jsonWriter.WriteValue(true)", span="1454-1454"];
m3_921 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DataSetConverter.cs", label="jsonWriter.WriteStartObject()", span="1456-1456"];
m3_922 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DataSetConverter.cs", label="jsonWriter.WritePropertyName(''integer'')", span="1457-1457"];
m3_923 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DataSetConverter.cs", label="jsonWriter.WriteValue(99)", span="1458-1458"];
m3_924 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DataSetConverter.cs", label="jsonWriter.WritePropertyName(''string'')", span="1459-1459"];
m3_925 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DataSetConverter.cs", label="jsonWriter.WriteValue(''how now brown cow?'')", span="1460-1460"];
m3_926 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DataSetConverter.cs", label="jsonWriter.WritePropertyName(''array'')", span="1461-1461"];
m3_927 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DataSetConverter.cs", label="jsonWriter.WriteStartArray()", span="1463-1463"];
m3_930 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DataSetConverter.cs", label="jsonWriter.WriteValue(i)", span="1466-1466"];
m3_932 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DataSetConverter.cs", label="jsonWriter.WriteStartObject()", span="1469-1469"];
m3_933 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DataSetConverter.cs", label="jsonWriter.WritePropertyName(''decimal'')", span="1470-1470"];
m3_934 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DataSetConverter.cs", label="jsonWriter.WriteValue(990.00990099m)", span="1471-1471"];
m3_935 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DataSetConverter.cs", label="jsonWriter.WriteEndObject()", span="1472-1472"];
m3_936 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DataSetConverter.cs", label="jsonWriter.WriteValue(5)", span="1474-1474"];
m3_937 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DataSetConverter.cs", label="jsonWriter.WriteEndArray()", span="1475-1475"];
m3_938 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DataSetConverter.cs", label="jsonWriter.WriteEndObject()", span="1477-1477"];
m3_939 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DataSetConverter.cs", label="jsonWriter.WriteValue(''This is a string.'')", span="1479-1479"];
m3_940 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DataSetConverter.cs", label="jsonWriter.WriteNull()", span="1480-1480"];
m3_941 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DataSetConverter.cs", label="jsonWriter.WriteNull()", span="1481-1481"];
m3_942 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DataSetConverter.cs", label="jsonWriter.WriteEndArray()", span="1482-1482"];
m3_928 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DataSetConverter.cs", label="int i = 0", span="1464-1464"];
m3_929 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DataSetConverter.cs", label="i < 5", span="1464-1464"];
m3_931 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DataSetConverter.cs", label="i++", span="1464-1464"];
m3_944 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DataSetConverter.cs", label="JsonSerializer serializer = new JsonSerializer()", span="1487-1487"];
m3_945 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DataSetConverter.cs", label="object jsonObject = serializer.Deserialize(new JsonTextReader(new StringReader(json)))", span="1489-1489"];
m3_950 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DataSetConverter.cs", label="Assert.AreEqual(json, sb.ToString())", span="1502-1502"];
m3_949 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DataSetConverter.cs", label="serializer.Serialize(jsonWriter, jsonObject)", span="1499-1499"];
m3_946 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DataSetConverter.cs", label="sb = new StringBuilder()", span="1491-1491"];
m3_947 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DataSetConverter.cs", label="sw = new StringWriter(sb)", span="1492-1492"];
m3_948 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DataSetConverter.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="1494-1497"];
m3_951 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", span="1443-1443"];
m3_0 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", span="55-55"];
m3_3 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="DataSetConverter.cs", label="jsonTextReader.Read()", span="60-60"];
m3_2 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="DataSetConverter.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="59-59"];
m3_4 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="DataSetConverter.cs", label="jsonTextReader.Read()", span="61-61"];
m3_7 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", span="55-55"];
m3_1 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="DataSetConverter.cs", label="string json = @''{''''NameOfStore'''':''''Forest's Bakery And Cafe''''}''", span="57-57"];
m3_6 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="DataSetConverter.cs", label="Assert.AreEqual(@''Forest's Bakery And Cafe'', jsonTextReader.Value)", span="64-64"];
m3_5 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="DataSetConverter.cs", label="jsonTextReader.Read()", span="62-62"];
m3_8 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72"];
m3_9 [cluster="System.IO.StringReader.StringReader(string)", file="DataSetConverter.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m3_1349 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", span="2069-2069"];
m3_1350 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="DataSetConverter.cs", label="string json = @''{''''Offset'''':''''1/30/2011''''}''", span="2071-2071"];
m3_1351 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2073-2073"];
m3_1352 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="DataSetConverter.cs", label="reader.Culture = new CultureInfo(''en-US'')", span="2074-2074"];
m3_1353 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2076-2076"];
m3_1354 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2077-2077"];
m3_1355 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2079-2079"];
m3_1356 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2080-2080"];
m3_1357 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="DataSetConverter.cs", label="reader.ReadAsDateTimeOffset()", span="2082-2082"];
m3_1358 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2083-2083"];
m3_1359 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2084-2084"];
m3_1360 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="DataSetConverter.cs", label="DateTimeOffset dt = (DateTimeOffset)reader.Value", span="2086-2086"];
m3_1362 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2089-2089"];
m3_1363 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2090-2090"];
m3_1361 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="DataSetConverter.cs", label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", span="2087-2087"];
m3_1364 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", span="2069-2069"];
m3_880 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", span="1403-1403"];
m3_881 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DataSetConverter.cs", label="JsonTextReader reader = null", span="1405-1405"];
m3_882 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1407-1407"];
m3_883 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1408-1408"];
m3_884 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1409-1409"];
m3_885 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DataSetConverter.cs", label="Assert.AreEqual(1.1d, reader.Value)", span="1410-1410"];
m3_886 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(''-1.1''))", span="1412-1412"];
m3_887 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1413-1413"];
m3_888 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1414-1414"];
m3_889 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DataSetConverter.cs", label="Assert.AreEqual(-1.1d, reader.Value)", span="1415-1415"];
m3_890 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(''0.0''))", span="1417-1417"];
m3_891 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1418-1418"];
m3_892 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1419-1419"];
m3_893 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DataSetConverter.cs", label="Assert.AreEqual(0.0d, reader.Value)", span="1420-1420"];
m3_894 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(''-0.0''))", span="1422-1422"];
m3_895 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1423-1423"];
m3_896 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1424-1424"];
m3_897 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DataSetConverter.cs", label="Assert.AreEqual(-0.0d, reader.Value)", span="1425-1425"];
m3_898 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1427-1427"];
m3_899 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1428-1428"];
m3_900 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1430-1430"];
m3_901 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1431-1431"];
m3_902 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1432-1432"];
m3_903 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DataSetConverter.cs", label="Assert.AreEqual(0.000001d, reader.Value)", span="1433-1433"];
m3_904 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(''''))", span="1435-1435"];
m3_905 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DataSetConverter.cs", label="Assert.IsFalse(reader.Read())", span="1436-1436"];
m3_906 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(''-''))", span="1438-1438"];
m3_907 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Input string '-' is not a valid number. Path '', line 1, position 1.'')", span="1439-1439"];
m3_908 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", span="1403-1403"];
m3_1233 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", span="1894-1894"];
m3_1234 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="DataSetConverter.cs", label="string json = @''{''''Message'''':''''Hi,I\u0092ve send you smth''''}''", span="1896-1896"];
m3_1235 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1898-1898"];
m3_1236 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1903-1903"];
m3_1237 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1904-1904"];
m3_1238 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1906-1906"];
m3_1239 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1907-1907"];
m3_1240 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="DataSetConverter.cs", label="Assert.AreEqual(''Message'', reader.Value)", span="1908-1908"];
m3_1241 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1910-1910"];
m3_1242 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1911-1911"];
m3_1243 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="DataSetConverter.cs", label="Assert.AreEqual(@''Hi,I'' + '\u0092' + ''ve send you smth'', reader.Value)", span="1912-1912"];
m3_1244 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1914-1914"];
m3_1245 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1915-1915"];
m3_1246 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="DataSetConverter.cs", label="Assert.IsFalse(reader.Read())", span="1917-1917"];
m3_1247 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", span="1894-1894"];
m3_966 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="860-860"];
m3_2107 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", span="3222-3222"];
m3_2108 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", file="DataSetConverter.cs", label="bytes = content", span="3224-3224"];
m3_2110 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", file="DataSetConverter.cs", label="this.bytesPerRead = bytesPerRead", span="3226-3226"];
m3_2109 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", file="DataSetConverter.cs", label="totalBytesRead = 0", span="3225-3225"];
m3_2111 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", span="3222-3222"];
m3_963 [cluster="System.Text.StringBuilder.ToString()", file="DataSetConverter.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m3_1976 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", span="3033-3033"];
m3_1977 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="string json = @''[''''1970-01-01T00:00:00Z'''',''''\/Date(0)\/'''']''", span="3035-3035"];
m3_1978 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3037-3037"];
m3_1988 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3050-3050"];
m3_1998 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3063-3063"];
m3_2008 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3076-3076"];
m3_2018 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3089-3089"];
m3_1979 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTime", span="3038-3038"];
m3_1980 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="3040-3040"];
m3_1981 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="3041-3041"];
m3_1982 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3042-3042"];
m3_1983 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3043-3043"];
m3_1984 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="3044-3044"];
m3_1985 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3045-3045"];
m3_1986 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3046-3046"];
m3_1987 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="3047-3047"];
m3_1989 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTimeOffset", span="3051-3051"];
m3_1990 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="3053-3053"];
m3_1991 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="3054-3054"];
m3_1992 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3055-3055"];
m3_1993 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3056-3056"];
m3_1994 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="3057-3057"];
m3_1995 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3058-3058"];
m3_1996 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3059-3059"];
m3_1997 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="3060-3060"];
m3_1999 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="reader.DateParseHandling = Json.DateParseHandling.None", span="3064-3064"];
m3_2000 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="3066-3066"];
m3_2001 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="3067-3067"];
m3_2002 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="Assert.AreEqual(@''1970-01-01T00:00:00Z'', reader.Value)", span="3068-3068"];
m3_2003 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="3069-3069"];
m3_2004 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="3070-3070"];
m3_2005 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="Assert.AreEqual(@''/Date(0)/'', reader.Value)", span="3071-3071"];
m3_2006 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="3072-3072"];
m3_2007 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="3073-3073"];
m3_2009 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTime", span="3077-3077"];
m3_2010 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="3079-3079"];
m3_2011 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="reader.ReadAsDateTimeOffset()", span="3080-3080"];
m3_2012 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3081-3081"];
m3_2013 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3082-3082"];
m3_2014 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="reader.ReadAsDateTimeOffset()", span="3083-3083"];
m3_2015 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3084-3084"];
m3_2016 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3085-3085"];
m3_2017 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="3086-3086"];
m3_2019 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTimeOffset", span="3090-3090"];
m3_2020 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="3092-3092"];
m3_2021 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="reader.ReadAsDateTime()", span="3093-3093"];
m3_2022 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3094-3094"];
m3_2023 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3095-3095"];
m3_2024 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="reader.ReadAsDateTime()", span="3096-3096"];
m3_2025 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3097-3097"];
m3_2026 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3098-3098"];
m3_2027 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="3099-3099"];
m3_2028 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", span="3033-3033"];
m3_315 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", span="562-562"];
m3_316 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="DataSetConverter.cs", label="string json = @'''hi' a''", span="564-564"];
m3_317 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="566-566"];
m3_318 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                while (reader.Read())\r\n                {\r\n                }\r\n            }, ''Additional text encountered after finished reading JSON content: a. Path '', line 1, position 5.'')", span="568-573"];
m3_319 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", span="562-562"];
m3_43 [cluster="Unk.IsFalse", file="DataSetConverter.cs", label="Entry Unk.IsFalse", span=""];
m3_1366 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", span="2094-2094"];
m3_1367 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="DataSetConverter.cs", label="string json = @''{''''Offset'''':''''30/1/2011''''}''", span="2096-2096"];
m3_1368 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2098-2098"];
m3_1369 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="DataSetConverter.cs", label="reader.Culture = new CultureInfo(''en-NZ'')", span="2099-2099"];
m3_1370 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2101-2101"];
m3_1371 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2102-2102"];
m3_1372 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2104-2104"];
m3_1373 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2105-2105"];
m3_1374 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="DataSetConverter.cs", label="reader.ReadAsDateTimeOffset()", span="2107-2107"];
m3_1375 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2108-2108"];
m3_1376 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2109-2109"];
m3_1377 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="DataSetConverter.cs", label="DateTimeOffset dt = (DateTimeOffset)reader.Value", span="2111-2111"];
m3_1379 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2114-2114"];
m3_1380 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2115-2115"];
m3_1378 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="DataSetConverter.cs", label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", span="2112-2112"];
m3_1381 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", span="2094-2094"];
m3_323 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", span="577-577"];
m3_324 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="string input = @''{\r\n  CPU: 'Intel',\r\n  Drives: [\r\n    'DVD read/writer',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}''", span="579-585"];
m3_325 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="StringReader sr = new StringReader(input)", span="587-587"];
m3_326 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="JsonTextReader jsonReader = new JsonTextReader(sr)", span="589-589"];
m3_327 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.None)", span="595-595"];
m3_328 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Assert.AreEqual(0, jsonReader.LineNumber)", span="596-596"];
m3_329 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Assert.AreEqual(0, jsonReader.LinePosition)", span="597-597"];
m3_330 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="jsonReader.Read()", span="599-599"];
m3_331 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartObject)", span="600-600"];
m3_332 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Assert.AreEqual(1, jsonReader.LineNumber)", span="601-601"];
m3_333 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Assert.AreEqual(1, jsonReader.LinePosition)", span="602-602"];
m3_334 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="jsonReader.Read()", span="604-604"];
m3_335 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.PropertyName)", span="605-605"];
m3_336 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Assert.AreEqual(jsonReader.Value, ''CPU'')", span="606-606"];
m3_337 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Assert.AreEqual(2, jsonReader.LineNumber)", span="607-607"];
m3_338 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Assert.AreEqual(7, jsonReader.LinePosition)", span="608-608"];
m3_339 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="jsonReader.Read()", span="610-610"];
m3_340 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.String, jsonReader.TokenType)", span="611-611"];
m3_341 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Assert.AreEqual(''Intel'', jsonReader.Value)", span="612-612"];
m3_342 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Assert.AreEqual(2, jsonReader.LineNumber)", span="613-613"];
m3_343 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Assert.AreEqual(15, jsonReader.LinePosition)", span="614-614"];
m3_344 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="jsonReader.Read()", span="616-616"];
m3_345 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.PropertyName)", span="617-617"];
m3_346 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Assert.AreEqual(jsonReader.Value, ''Drives'')", span="618-618"];
m3_347 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Assert.AreEqual(3, jsonReader.LineNumber)", span="619-619"];
m3_348 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Assert.AreEqual(10, jsonReader.LinePosition)", span="620-620"];
m3_349 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="jsonReader.Read()", span="622-622"];
m3_350 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartArray)", span="623-623"];
m3_351 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Assert.AreEqual(3, jsonReader.LineNumber)", span="624-624"];
m3_352 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Assert.AreEqual(12, jsonReader.LinePosition)", span="625-625"];
m3_353 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="jsonReader.Read()", span="627-627"];
m3_354 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="628-628"];
m3_355 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Assert.AreEqual(jsonReader.Value, ''DVD read/writer'')", span="629-629"];
m3_356 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Assert.AreEqual(jsonReader.QuoteChar, '\'')", span="630-630"];
m3_357 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Assert.AreEqual(4, jsonReader.LineNumber)", span="631-631"];
m3_358 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Assert.AreEqual(22, jsonReader.LinePosition)", span="632-632"];
m3_359 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="jsonReader.Read()", span="634-634"];
m3_360 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="635-635"];
m3_361 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Assert.AreEqual(jsonReader.Value, ''500 gigabyte hard drive'')", span="636-636"];
m3_362 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Assert.AreEqual(jsonReader.QuoteChar, '''')", span="637-637"];
m3_363 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Assert.AreEqual(5, jsonReader.LineNumber)", span="638-638"];
m3_364 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Assert.AreEqual(30, jsonReader.LinePosition)", span="639-639"];
m3_365 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="jsonReader.Read()", span="641-641"];
m3_366 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndArray)", span="642-642"];
m3_367 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Assert.AreEqual(6, jsonReader.LineNumber)", span="643-643"];
m3_368 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Assert.AreEqual(4, jsonReader.LinePosition)", span="644-644"];
m3_369 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="jsonReader.Read()", span="646-646"];
m3_370 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndObject)", span="647-647"];
m3_371 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Assert.AreEqual(7, jsonReader.LineNumber)", span="648-648"];
m3_372 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Assert.AreEqual(2, jsonReader.LinePosition)", span="649-649"];
m3_373 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Assert.IsFalse(jsonReader.Read())", span="651-651"];
m3_374 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", span="577-577"];
m3_375 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", span="656-656"];
m3_376 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="string input = @''{\r\n  value:'Purple',\r\n  array:[1,2,new Date(1)],\r\n  subobject:{prop:1,proparray:[1]}\r\n}''", span="658-662"];
m3_377 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="StringReader sr = new StringReader(input)", span="664-664"];
m3_378 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="JsonReader reader = new JsonTextReader(sr)", span="666-666"];
m3_379 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(0, reader.Depth)", span="668-668"];
m3_380 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="reader.Read()", span="670-670"];
m3_381 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartObject)", span="671-671"];
m3_382 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(0, reader.Depth)", span="672-672"];
m3_383 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual('''', reader.Path)", span="673-673"];
m3_384 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="reader.Read()", span="675-675"];
m3_385 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="676-676"];
m3_386 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(1, reader.Depth)", span="677-677"];
m3_387 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(''value'', reader.Path)", span="678-678"];
m3_388 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="reader.Read()", span="680-680"];
m3_389 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.String)", span="681-681"];
m3_390 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(reader.Value, @''Purple'')", span="682-682"];
m3_391 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(reader.QuoteChar, '\'')", span="683-683"];
m3_392 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(1, reader.Depth)", span="684-684"];
m3_393 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(''value'', reader.Path)", span="685-685"];
m3_394 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="reader.Read()", span="687-687"];
m3_395 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="688-688"];
m3_396 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(1, reader.Depth)", span="689-689"];
m3_397 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(''array'', reader.Path)", span="690-690"];
m3_398 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="reader.Read()", span="692-692"];
m3_399 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartArray)", span="693-693"];
m3_400 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(1, reader.Depth)", span="694-694"];
m3_401 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(''array'', reader.Path)", span="695-695"];
m3_402 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="reader.Read()", span="697-697"];
m3_403 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="698-698"];
m3_404 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(1L, reader.Value)", span="699-699"];
m3_405 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(2, reader.Depth)", span="700-700"];
m3_406 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(''array[0]'', reader.Path)", span="701-701"];
m3_407 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="reader.Read()", span="703-703"];
m3_408 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="704-704"];
m3_409 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(2L, reader.Value)", span="705-705"];
m3_410 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(2, reader.Depth)", span="706-706"];
m3_411 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(''array[1]'', reader.Path)", span="707-707"];
m3_412 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="reader.Read()", span="709-709"];
m3_413 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartConstructor)", span="710-710"];
m3_414 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="711-711"];
m3_415 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(2, reader.Depth)", span="712-712"];
m3_416 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(''array[2]'', reader.Path)", span="713-713"];
m3_417 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="reader.Read()", span="715-715"];
m3_418 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="716-716"];
m3_419 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(1L, reader.Value)", span="717-717"];
m3_420 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(3, reader.Depth)", span="718-718"];
m3_421 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(''array[2][0]'', reader.Path)", span="719-719"];
m3_422 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="reader.Read()", span="721-721"];
m3_423 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndConstructor)", span="722-722"];
m3_424 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(null, reader.Value)", span="723-723"];
m3_425 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(2, reader.Depth)", span="724-724"];
m3_426 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(''array[2]'', reader.Path)", span="725-725"];
m3_427 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="reader.Read()", span="727-727"];
m3_428 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndArray)", span="728-728"];
m3_429 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(1, reader.Depth)", span="729-729"];
m3_430 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(''array'', reader.Path)", span="730-730"];
m3_431 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="reader.Read()", span="732-732"];
m3_432 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="733-733"];
m3_433 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(1, reader.Depth)", span="734-734"];
m3_434 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(''subobject'', reader.Path)", span="735-735"];
m3_435 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="reader.Read()", span="737-737"];
m3_436 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartObject)", span="738-738"];
m3_437 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(1, reader.Depth)", span="739-739"];
m3_438 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(''subobject'', reader.Path)", span="740-740"];
m3_439 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="reader.Read()", span="742-742"];
m3_440 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="743-743"];
m3_441 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(2, reader.Depth)", span="744-744"];
m3_442 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(''subobject.prop'', reader.Path)", span="745-745"];
m3_443 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="reader.Read()", span="747-747"];
m3_444 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="748-748"];
m3_445 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(2, reader.Depth)", span="749-749"];
m3_446 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(''subobject.prop'', reader.Path)", span="750-750"];
m3_447 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="reader.Read()", span="752-752"];
m3_448 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="753-753"];
m3_449 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(2, reader.Depth)", span="754-754"];
m3_450 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="755-755"];
m3_451 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="reader.Read()", span="757-757"];
m3_452 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartArray)", span="758-758"];
m3_453 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(2, reader.Depth)", span="759-759"];
m3_454 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="760-760"];
m3_455 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="reader.Read()", span="762-762"];
m3_456 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="763-763"];
m3_457 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(3, reader.Depth)", span="764-764"];
m3_458 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(''subobject.proparray[0]'', reader.Path)", span="765-765"];
m3_459 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="reader.Read()", span="767-767"];
m3_460 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndArray)", span="768-768"];
m3_461 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(2, reader.Depth)", span="769-769"];
m3_462 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="770-770"];
m3_463 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="reader.Read()", span="772-772"];
m3_464 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndObject)", span="773-773"];
m3_465 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(1, reader.Depth)", span="774-774"];
m3_466 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(''subobject'', reader.Path)", span="775-775"];
m3_467 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="reader.Read()", span="777-777"];
m3_468 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndObject)", span="778-778"];
m3_469 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual(0, reader.Depth)", span="779-779"];
m3_470 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Assert.AreEqual('''', reader.Path)", span="780-780"];
m3_471 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", span="656-656"];
m3_1100 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", span="1707-1707"];
m3_1101 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="DataSetConverter.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1709-1709"];
m3_1102 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="DataSetConverter.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1710-1710"];
m3_1103 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="DataSetConverter.cs", label="Assert.IsTrue(jsonReader.Read())", span="1712-1712"];
m3_1104 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1713-1713"];
m3_1105 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="DataSetConverter.cs", label="Assert.IsTrue(jsonReader.Read())", span="1715-1715"];
m3_1106 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1716-1716"];
m3_1107 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="1717-1717"];
m3_1108 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="DataSetConverter.cs", label="Assert.IsTrue(jsonReader.Read())", span="1719-1719"];
m3_1109 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1720-1720"];
m3_1110 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="1721-1721"];
m3_1111 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="DataSetConverter.cs", label="Assert.IsTrue(jsonReader.Read())", span="1723-1723"];
m3_1112 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1724-1724"];
m3_1113 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="1725-1725"];
m3_1114 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="DataSetConverter.cs", label="Assert.IsTrue(jsonReader.Read())", span="1727-1727"];
m3_1115 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1728-1728"];
m3_1116 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="DataSetConverter.cs", label="Assert.IsFalse(jsonReader.Read())", span="1730-1730"];
m3_1117 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", span="1707-1707"];
m3_491 [cluster="string.String(char, int)", file="DataSetConverter.cs", label="Entry string.String(char, int)", span="0-0"];
m3_676 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", span="1093-1093"];
m3_677 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="DataSetConverter.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{aww''))", span="1095-1095"];
m3_678 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1096-1096"];
m3_679 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing unquoted property name. Path '', line 1, position 4.'')", span="1098-1098"];
m3_680 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", span="1093-1093"];
m3_2105 [cluster="System.Exception.Exception(string)", file="DataSetConverter.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m3_219 [cluster="object.ToString()", file="DataSetConverter.cs", label="Entry object.ToString()", span="0-0"];
m3_516 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(int)", span="387-387"];
m3_675 [cluster="Unk.IsNull", file="DataSetConverter.cs", label="Entry Unk.IsNull", span=""];
m3_176 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", span="305-305"];
m3_177 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="DataSetConverter.cs", label="string json = ''[NaN]''", span="307-307"];
m3_178 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="309-309"];
m3_179 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="DataSetConverter.cs", label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="310-310"];
m3_180 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="312-312"];
m3_181 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="313-313"];
m3_182 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Cannot read NaN as a decimal.'')", span="315-315"];
m3_183 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", span="305-305"];
m3_1900 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", span="2925-2925"];
m3_1901 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DataSetConverter.cs", label="string json = ''[[[[]]],[[]]]''", span="2927-2927"];
m3_1902 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                MaxDepth = 1\r\n            }", span="2929-2932"];
m3_1903 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2934-2934"];
m3_1904 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DataSetConverter.cs", label="Assert.AreEqual(0, reader.Depth)", span="2935-2935"];
m3_1905 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'')", span="2937-2937"];
m3_1906 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DataSetConverter.cs", label="Assert.AreEqual(1, reader.Depth)", span="2938-2938"];
m3_1907 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2940-2940"];
m3_1908 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DataSetConverter.cs", label="Assert.AreEqual(2, reader.Depth)", span="2941-2941"];
m3_1909 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2943-2943"];
m3_1910 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DataSetConverter.cs", label="Assert.AreEqual(3, reader.Depth)", span="2944-2944"];
m3_1911 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2946-2946"];
m3_1912 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DataSetConverter.cs", label="Assert.AreEqual(3, reader.Depth)", span="2947-2947"];
m3_1913 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2949-2949"];
m3_1914 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DataSetConverter.cs", label="Assert.AreEqual(2, reader.Depth)", span="2950-2950"];
m3_1915 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2952-2952"];
m3_1916 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DataSetConverter.cs", label="Assert.AreEqual(1, reader.Depth)", span="2953-2953"];
m3_1917 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[1]', line 1, position 9.'')", span="2955-2955"];
m3_1918 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DataSetConverter.cs", label="Assert.AreEqual(1, reader.Depth)", span="2956-2956"];
m3_1919 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2958-2958"];
m3_1920 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DataSetConverter.cs", label="Assert.AreEqual(2, reader.Depth)", span="2959-2959"];
m3_1921 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2961-2961"];
m3_1922 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DataSetConverter.cs", label="Assert.AreEqual(2, reader.Depth)", span="2962-2962"];
m3_1923 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2964-2964"];
m3_1924 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DataSetConverter.cs", label="Assert.AreEqual(1, reader.Depth)", span="2965-2965"];
m3_1925 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2967-2967"];
m3_1926 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DataSetConverter.cs", label="Assert.AreEqual(0, reader.Depth)", span="2968-2968"];
m3_1927 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DataSetConverter.cs", label="Assert.IsFalse(reader.Read())", span="2970-2970"];
m3_1928 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", span="2925-2925"];
m3_805 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", span="1327-1327"];
m3_806 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DataSetConverter.cs", label="JsonTextReader reader = null", span="1329-1329"];
m3_807 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(''1''))", span="1331-1331"];
m3_808 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DataSetConverter.cs", label="Assert.AreEqual(1, reader.ReadAsInt32())", span="1332-1332"];
m3_809 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(''-1''))", span="1334-1334"];
m3_810 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DataSetConverter.cs", label="Assert.AreEqual(-1, reader.ReadAsInt32())", span="1335-1335"];
m3_811 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(''0''))", span="1337-1337"];
m3_812 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DataSetConverter.cs", label="Assert.AreEqual(0, reader.ReadAsInt32())", span="1338-1338"];
m3_813 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(''-0''))", span="1340-1340"];
m3_814 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DataSetConverter.cs", label="Assert.AreEqual(0, reader.ReadAsInt32())", span="1341-1341"];
m3_815 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(int.MaxValue.ToString()))", span="1343-1343"];
m3_816 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DataSetConverter.cs", label="Assert.AreEqual(int.MaxValue, reader.ReadAsInt32())", span="1344-1344"];
m3_817 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(int.MinValue.ToString()))", span="1346-1346"];
m3_818 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DataSetConverter.cs", label="Assert.AreEqual(int.MinValue, reader.ReadAsInt32())", span="1347-1347"];
m3_819 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(long.MaxValue.ToString()))", span="1349-1349"];
m3_820 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''JSON integer 9223372036854775807 is too large or small for an Int32. Path '', line 1, position 19.'')", span="1350-1350"];
m3_821 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1352-1352"];
m3_822 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1353-1353"];
m3_823 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1355-1355"];
m3_824 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Input string '1E-06' is not a valid integer. Path '', line 1, position 5.'')", span="1356-1356"];
m3_825 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1358-1358"];
m3_826 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Input string '1.1' is not a valid integer. Path '', line 1, position 3.'')", span="1359-1359"];
m3_827 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(''''))", span="1361-1361"];
m3_828 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DataSetConverter.cs", label="Assert.AreEqual(null, reader.ReadAsInt32())", span="1362-1362"];
m3_829 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(''-''))", span="1364-1364"];
m3_830 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Input string '-' is not a valid integer. Path '', line 1, position 1.'')", span="1365-1365"];
m3_831 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", span="1327-1327"];
m3_833 [cluster="long.ToString()", file="DataSetConverter.cs", label="Entry long.ToString()", span="0-0"];
m3_608 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", span="985-985"];
m3_609 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="DataSetConverter.cs", label="BigInteger i = new BigInteger(long.MinValue)", span="987-987"];
m3_610 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="989-989"];
m3_615 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="DataSetConverter.cs", label="BigInteger total = i + -j", span="995-995"];
m3_611 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="DataSetConverter.cs", label="reader.Read()", span="990-990"];
m3_612 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="991-991"];
m3_613 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="DataSetConverter.cs", label="int j = 1", span="993-993"];
m3_614 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="DataSetConverter.cs", label="j < 1000", span="993-993"];
m3_619 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="DataSetConverter.cs", label="j++", span="993-993"];
m3_616 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="997-997"];
m3_617 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="DataSetConverter.cs", label="reader.Read()", span="998-998"];
m3_618 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(BigInteger), reader.ValueType)", span="1000-1000"];
m3_620 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", span="985-985"];
m3_964 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="433-433"];
m3_1790 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", span="2760-2760"];
m3_1791 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="DataSetConverter.cs", label="string json = @''//comment''", span="2762-2762"];
m3_1792 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2764-2764"];
m3_1793 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2766-2766"];
m3_1794 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2767-2767"];
m3_1795 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="DataSetConverter.cs", label="Assert.AreEqual(''comment'', reader.Value)", span="2768-2768"];
m3_1796 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="DataSetConverter.cs", label="Assert.IsFalse(reader.Read())", span="2770-2770"];
m3_1797 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", span="2760-2760"];
m3_1889 [cluster="double.ToString(System.IFormatProvider)", file="DataSetConverter.cs", label="Entry double.ToString(System.IFormatProvider)", span="0-0"];
m3_1333 [cluster="System.TimeSpan.Add(System.TimeSpan)", file="DataSetConverter.cs", label="Entry System.TimeSpan.Add(System.TimeSpan)", span="0-0"];
m3_1413 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", span="2163-2163"];
m3_1414 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nulz''))", span="2165-2165"];
m3_1415 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing null value. Path '', line 0, position 0.'')", span="2167-2167"];
m3_1416 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", span="2163-2163"];
m3_1427 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", span="2179-2179"];
m3_1428 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/* sdf''))", span="2181-2181"];
m3_1429 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing comment. Path '', line 1, position 6.'')", span="2183-2183"];
m3_1430 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", span="2179-2179"];
m3_2032 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", span="3104-3104"];
m3_2033 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DataSetConverter.cs", label="ToggleReaderError toggleReaderError = new ToggleReaderError(new StringReader(''{'first':1,'second':2,'third':3}''))", span="3106-3106"];
m3_2034 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DataSetConverter.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(toggleReaderError)", span="3107-3107"];
m3_2036 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DataSetConverter.cs", label="toggleReaderError.Error = true", span="3111-3111"];
m3_2039 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DataSetConverter.cs", label="toggleReaderError.Error = false", span="3116-3116"];
m3_2042 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DataSetConverter.cs", label="toggleReaderError.Error = true", span="3121-3121"];
m3_2044 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DataSetConverter.cs", label="toggleReaderError.Error = false", span="3125-3125"];
m3_2047 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DataSetConverter.cs", label="toggleReaderError.Error = true", span="3130-3130"];
m3_2051 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DataSetConverter.cs", label="toggleReaderError.Error = false", span="3136-3136"];
m3_2035 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DataSetConverter.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="3109-3109"];
m3_2037 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3113-3113"];
m3_2038 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3114-3114"];
m3_2040 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DataSetConverter.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="3118-3118"];
m3_2041 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DataSetConverter.cs", label="Assert.AreEqual(''first'', jsonTextReader.Value)", span="3119-3119"];
m3_2043 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3123-3123"];
m3_2045 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DataSetConverter.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="3127-3127"];
m3_2046 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DataSetConverter.cs", label="Assert.AreEqual(1L, jsonTextReader.Value)", span="3128-3128"];
m3_2048 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3132-3132"];
m3_2049 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3133-3133"];
m3_2050 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3134-3134"];
m3_2052 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", span="3104-3104"];
m3_1820 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", span="2808-2808"];
m3_1821 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="DataSetConverter.cs", label="string json = @''[0,1,2 , 3]''", span="2810-2810"];
m3_1822 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2812-2812"];
m3_1823 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="DataSetConverter.cs", label="reader.Read()", span="2814-2814"];
m3_1824 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2815-2815"];
m3_1825 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="DataSetConverter.cs", label="reader.Read()", span="2817-2817"];
m3_1826 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2818-2818"];
m3_1827 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="DataSetConverter.cs", label="reader.Read()", span="2820-2820"];
m3_1828 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2821-2821"];
m3_1829 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="DataSetConverter.cs", label="reader.Read()", span="2823-2823"];
m3_1830 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2824-2824"];
m3_1831 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="DataSetConverter.cs", label="reader.Read()", span="2826-2826"];
m3_1832 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2827-2827"];
m3_1833 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="DataSetConverter.cs", label="reader.Read()", span="2829-2829"];
m3_1834 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2830-2830"];
m3_1835 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", span="2808-2808"];
m3_799 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="703-703"];
m3_1642 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", span="2522-2522"];
m3_1643 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DataSetConverter.cs", label="string json = ''\x00a0{\x00a0'h\x00a0i\x00a0'\x00a0:\x00a0[\x00a0true\x00a0,\x00a0new\x00a0Date\x00a0(\x00a0)\x00a0]\x00a0/*\x00a0comment\x00a0*/\x00a0}\x00a0''", span="2524-2524"];
m3_1644 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2525-2525"];
m3_1645 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2527-2527"];
m3_1646 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2528-2528"];
m3_1647 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2530-2530"];
m3_1648 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2531-2531"];
m3_1649 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2533-2533"];
m3_1650 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2534-2534"];
m3_1651 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2536-2536"];
m3_1652 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2537-2537"];
m3_1653 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2539-2539"];
m3_1654 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2540-2540"];
m3_1655 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2542-2542"];
m3_1656 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2543-2543"];
m3_1657 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2545-2545"];
m3_1658 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2546-2546"];
m3_1659 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2548-2548"];
m3_1660 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2549-2549"];
m3_1661 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2551-2551"];
m3_1662 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2552-2552"];
m3_1663 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DataSetConverter.cs", label="Assert.IsFalse(reader.Read())", span="2554-2554"];
m3_1664 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", span="2522-2522"];
m3_1586 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", span="2445-2445"];
m3_1587 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="DataSetConverter.cs", label="string json = ''new Date !''", span="2447-2447"];
m3_1588 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2448-2448"];
m3_1589 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected character while parsing constructor: !. Path '', line 1, position 9.'')", span="2450-2450"];
m3_1590 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", span="2445-2445"];
m3_292 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", span="513-513"];
m3_293 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="DataSetConverter.cs", label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n]content''", span="515-519"];
m3_294 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="521-521"];
m3_295 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="DataSetConverter.cs", label="reader.Read()", span="526-526"];
m3_296 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="DataSetConverter.cs", label="Assert.AreEqual(1, reader.LineNumber)", span="527-527"];
m3_297 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="DataSetConverter.cs", label="reader.Read()", span="529-529"];
m3_298 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="DataSetConverter.cs", label="Assert.AreEqual(2, reader.LineNumber)", span="530-530"];
m3_299 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="DataSetConverter.cs", label="reader.Read()", span="532-532"];
m3_300 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="DataSetConverter.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="533-533"];
m3_301 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="DataSetConverter.cs", label="reader.Read()", span="535-535"];
m3_302 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="DataSetConverter.cs", label="Assert.AreEqual(4, reader.LineNumber)", span="536-536"];
m3_303 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="DataSetConverter.cs", label="reader.Read()", span="538-538"];
m3_304 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="DataSetConverter.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="539-539"];
m3_305 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Additional text encountered after finished reading JSON content: c. Path '', line 5, position 2.'')", span="541-541"];
m3_306 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", span="513-513"];
m3_2128 [cluster="System.NotSupportedException.NotSupportedException()", file="DataSetConverter.cs", label="Entry System.NotSupportedException.NotSupportedException()", span="0-0"];
m3_29 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DataSetConverter.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="104-104"];
m3_57 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="354-354"];
m3_257 [cluster="System.IO.MemoryStream.MemoryStream()", file="DataSetConverter.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m3_651 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", span="1064-1064"];
m3_652 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="DataSetConverter.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''true''))", span="1066-1066"];
m3_653 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Error reading bytes. Unexpected token: Boolean. Path '', line 1, position 4.'')", span="1068-1068"];
m3_654 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", span="1064-1064"];
m3_175 [cluster="System.Convert.ToDecimal(double)", file="DataSetConverter.cs", label="Entry System.Convert.ToDecimal(double)", span="0-0"];
m3_27 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DataSetConverter.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="101-101"];
m3_264 [cluster="Newtonsoft.Json.JsonReader.Read()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="365-365"];
m3_1610 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", span="2479-2479"];
m3_1611 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="DataSetConverter.cs", label="string json = ''{}''", span="2481-2481"];
m3_1612 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2482-2482"];
m3_1613 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2484-2484"];
m3_1614 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2485-2485"];
m3_1615 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2487-2487"];
m3_1616 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2488-2488"];
m3_1617 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", span="2479-2479"];
m3_1481 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", span="2270-2270"];
m3_1482 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="DataSetConverter.cs", label="string json = @''/*comment*/ { /*comment*/\r\n        ''''Name'''': /*comment*/ ''''Apple'''' /*comment*/, /*comment*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment*/ [ /*comment*/\r\n          ''''Small'''', /*comment*/\r\n          ''''Medium'''' /*comment*/,\r\n          /*comment*/ ''''Large''''\r\n        /*comment*/ ] /*comment*/\r\n      } /*comment*/''", span="2272-2281"];
m3_1483 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2283-2283"];
m3_1484 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="DataSetConverter.cs", label="int i = 0", span="2288-2288"];
m3_1486 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2290-2290"];
m3_1488 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2293-2293"];
m3_1489 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2294-2294"];
m3_1490 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="DataSetConverter.cs", label="Assert.IsFalse(reader.Read())", span="2296-2296"];
m3_1485 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="DataSetConverter.cs", label="i < 26", span="2288-2288"];
m3_1487 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="DataSetConverter.cs", label="i++", span="2288-2288"];
m3_1491 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", span="2270-2270"];
m3_1076 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", span="1673-1673"];
m3_1077 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="DataSetConverter.cs", label="string json = @''{\r\n    ''''A'''' : true,\r\n    ''''B'''' ''''''", span="1675-1677"];
m3_1078 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1679-1679"];
m3_1079 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="DataSetConverter.cs", label="reader.Read()", span="1681-1681"];
m3_1080 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1682-1682"];
m3_1081 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="DataSetConverter.cs", label="reader.Read()", span="1684-1684"];
m3_1082 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1685-1685"];
m3_1083 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="DataSetConverter.cs", label="reader.Read()", span="1687-1687"];
m3_1084 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="1688-1688"];
m3_1085 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, @''Invalid character after parsing property name. Expected ':' but got: ''''. Path 'A', line 3, position 9.'')", span="1690-1690"];
m3_1086 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", span="1673-1673"];
m3_472 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", span="785-785"];
m3_473 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<ArgumentNullException> (\r\n                () => { new JsonTextReader (null); },\r\n                new string[] { \r\n                    ''Value cannot be null.'' + Environment.NewLine + ''Parameter name: reader'',\r\n                    ''Argument cannot be null.'' + Environment.NewLine + ''Parameter name: reader'' // Mono\r\n                })", span="787-792"];
m3_474 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", span="785-785"];
m3_1888 [cluster="System.Convert.ToDouble(string, System.IFormatProvider)", file="DataSetConverter.cs", label="Entry System.Convert.ToDouble(string, System.IFormatProvider)", span="0-0"];
m3_258 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.JsonTextReader.Close()", span="1616-1616"];
m3_952 [cluster="System.Text.StringBuilder.StringBuilder()", file="DataSetConverter.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m3_1633 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", span="2513-2513"];
m3_1634 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="DataSetConverter.cs", label="string json = ''new Date,()''", span="2515-2515"];
m3_1635 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2516-2516"];
m3_1636 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''Unexpected character while parsing constructor: ,. Path '', line 1, position 8.'')", span="2518-2518"];
m3_1637 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", span="2513-2513"];
m3_1470 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", span="2240-2240"];
m3_1471 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="DataSetConverter.cs", label="string json = @''[\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  },\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  }\r\n]''", span="2242-2253"];
m3_1472 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2255-2255"];
m3_1473 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="DataSetConverter.cs", label="int i = 0", span="2260-2260"];
m3_1475 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="DataSetConverter.cs", label="reader.Read()", span="2262-2262"];
m3_1477 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2265-2265"];
m3_1478 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="DataSetConverter.cs", label="Assert.AreEqual(new DateTime(631136448000000000), reader.Value)", span="2266-2266"];
m3_1474 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="DataSetConverter.cs", label="i < 13", span="2260-2260"];
m3_1476 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="DataSetConverter.cs", label="i++", span="2260-2260"];
m3_1479 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", span="2240-2240"];
m3_235 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", span="405-405"];
m3_236 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="DataSetConverter.cs", label="MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(@'''''''' + input + @''''''''))", span="407-407"];
m3_237 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(ms))", span="409-409"];
m3_238 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="DataSetConverter.cs", label="reader.Read()", span="410-410"];
m3_239 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="DataSetConverter.cs", label="string s = (string)reader.Value", span="412-412"];
m3_240 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="DataSetConverter.cs", label="return s;", span="414-414"];
m3_241 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", span="405-405"];
m3_800 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", span="1296-1296"];
m3_801 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="DataSetConverter.cs", label="string json = @''[\r\n  true,\r\n  {\r\n    ''''integer'''': 99,\r\n    ''''string'''': ''''how now brown cow?'''',\r\n    ''''array'''': [\r\n      0,\r\n      1,\r\n      2,\r\n      3,\r\n      4,\r\n      {\r\n        ''''decimal'''': 990.00990099\r\n      },\r\n      5\r\n    ]\r\n  },\r\n  ''''This is a string.'''',\r\n  null,\r\n  null\r\n]''", span="1298-1318"];
m3_802 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1320-1320"];
m3_803 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="DataSetConverter.cs", label="reader.Read()", span="1321-1321"];
m3_804 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", span="1296-1296"];
m3_283 [cluster="System.Text.UTF8Encoding.UTF8Encoding(bool)", file="DataSetConverter.cs", label="Entry System.Text.UTF8Encoding.UTF8Encoding(bool)", span="0-0"];
m3_1012 [cluster="System.Convert.ToChar(string)", file="DataSetConverter.cs", label="Entry System.Convert.ToChar(string)", span="0-0"];
m3_2030 [cluster="System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", file="DataSetConverter.cs", label="Entry System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", span="0-0"];
m3_1098 [cluster="Unk.IsNotNull", file="DataSetConverter.cs", label="Entry Unk.IsNotNull", span=""];
m3_1618 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", span="2492-2492"];
m3_1619 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''true/''))", span="2494-2494"];
m3_1620 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing boolean value. Path '', line 1, position 4.'')", span="2496-2496"];
m3_1621 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", span="2492-2492"];
m3_1139 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", span="1764-1764"];
m3_1140 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DataSetConverter.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1766-1766"];
m3_1141 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DataSetConverter.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1767-1767"];
m3_1142 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DataSetConverter.cs", label="Assert.IsTrue(jsonReader.Read())", span="1769-1769"];
m3_1143 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1770-1770"];
m3_1144 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DataSetConverter.cs", label="jsonReader.ReadAsInt32()", span="1772-1772"];
m3_1145 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1773-1773"];
m3_1146 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1774-1774"];
m3_1147 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DataSetConverter.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="1775-1775"];
m3_1148 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DataSetConverter.cs", label="jsonReader.ReadAsInt32()", span="1777-1777"];
m3_1149 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1778-1778"];
m3_1150 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1779-1779"];
m3_1151 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DataSetConverter.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="1780-1780"];
m3_1152 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DataSetConverter.cs", label="jsonReader.ReadAsInt32()", span="1782-1782"];
m3_1153 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1783-1783"];
m3_1154 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1784-1784"];
m3_1155 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DataSetConverter.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="1785-1785"];
m3_1156 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DataSetConverter.cs", label="Assert.IsTrue(jsonReader.Read())", span="1787-1787"];
m3_1157 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1788-1788"];
m3_1158 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DataSetConverter.cs", label="Assert.IsFalse(jsonReader.Read())", span="1790-1790"];
m3_1159 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", span="1764-1764"];
m3_960 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="940-940"];
m3_1277 [cluster="System.TimeSpan.FromHours(double)", file="DataSetConverter.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m3_1261 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", span="1943-1943"];
m3_1262 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="DataSetConverter.cs", label="string json = ''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}''", span="1945-1945"];
m3_1263 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1947-1947"];
m3_1264 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1949-1949"];
m3_1265 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1950-1950"];
m3_1266 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1952-1952"];
m3_1267 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1953-1953"];
m3_1268 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="DataSetConverter.cs", label="reader.ReadAsDateTimeOffset()", span="1955-1955"];
m3_1269 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="1956-1956"];
m3_1270 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="1957-1957"];
m3_1271 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="DataSetConverter.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="1958-1958"];
m3_1272 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1960-1960"];
m3_1273 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1961-1961"];
m3_1274 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", span="1943-1943"];
m3_61 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="335-335"];
m3_1198 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", span="1849-1849"];
m3_1199 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1851-1851"];
m3_1200 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Error reading bytes. Unexpected token: StartConstructor. Path '', line 1, position 9.'')", span="1853-1853"];
m3_1201 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", span="1849-1849"];
m3_282 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", span="3229-3229"];
m3_2112 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", span="3229-3229"];
m3_959 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="819-819"];
m3_221 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", span="371-371"];
m3_222 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="DataSetConverter.cs", label="Assert.AreEqual(''ABC \ud800\udc00 DEF'', ReadString(''ABC \\ud800\\udc00 DEF''))", span="374-374"];
m3_223 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="DataSetConverter.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd DEF'', ReadString(''ABC \\ud800\\ud800 DEF''))", span="377-377"];
m3_224 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="DataSetConverter.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd\u1234 DEF'', ReadString(''ABC \\ud800\\ud800\\u1234 DEF''))", span="380-380"];
m3_225 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="DataSetConverter.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd\ufffd DEF'', ReadString(''ABC \\ud800\\ud800\\ud800 DEF''))", span="383-383"];
m3_226 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="DataSetConverter.cs", label="Assert.AreEqual(''ABC \ufffd\ud800\udc00 DEF'', ReadString(''ABC \\ud800\\ud800\\udc00 DEF''))", span="386-386"];
m3_227 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="DataSetConverter.cs", label="Assert.AreEqual(''ABC \ufffd'', ReadString(''ABC \\ud800''))", span="389-389"];
m3_228 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="DataSetConverter.cs", label="Assert.AreEqual(''ABC \ufffd DEF'', ReadString(''ABC \\ud800 DEF''))", span="392-392"];
m3_229 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="DataSetConverter.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd DEF'', ReadString(''ABC \\udc00\\ud800 DEF''))", span="395-395"];
m3_230 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="DataSetConverter.cs", label="Assert.AreEqual(''\ufffd\ufffd\ufffd'', ReadString(''\udc00\ud800\ud800''))", span="398-398"];
m3_231 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="DataSetConverter.cs", label="Assert.AreEqual(''ABC \ufffd\b'', ReadString(''ABC \\ud800\\b''))", span="400-400"];
m3_232 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="DataSetConverter.cs", label="Assert.AreEqual(''ABC \ufffd '', ReadString(''ABC \\ud800 ''))", span="401-401"];
m3_233 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="DataSetConverter.cs", label="Assert.AreEqual(''ABC \b\ufffd'', ReadString(''ABC \\b\\ud800''))", span="402-402"];
m3_234 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", span="371-371"];
m3_1000 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", span="1562-1562"];
m3_1001 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="DataSetConverter.cs", label="string json = @''[''''\u003c'''',''''\u5f20'''']''", span="1564-1564"];
m3_1002 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1566-1566"];
m3_1003 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="DataSetConverter.cs", label="reader.Read()", span="1571-1571"];
m3_1004 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1572-1572"];
m3_1005 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="DataSetConverter.cs", label="reader.Read()", span="1574-1574"];
m3_1006 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="DataSetConverter.cs", label="Assert.AreEqual(''<'', reader.Value)", span="1575-1575"];
m3_1007 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="DataSetConverter.cs", label="reader.Read()", span="1577-1577"];
m3_1008 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="DataSetConverter.cs", label="Assert.AreEqual(24352, Convert.ToInt32(Convert.ToChar((string)reader.Value)))", span="1578-1578"];
m3_1009 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="DataSetConverter.cs", label="reader.Read()", span="1580-1580"];
m3_1010 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1581-1581"];
m3_1011 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", span="1562-1562"];
m3_1090 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", span="1694-1694"];
m3_1091 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="DataSetConverter.cs", label="StringReader s = new StringReader(@''''''SGVsbG8gd29ybGQu'''''')", span="1696-1696"];
m3_1092 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(s)", span="1697-1697"];
m3_1093 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="DataSetConverter.cs", label="byte[] data = reader.ReadAsBytes()", span="1699-1699"];
m3_1094 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="DataSetConverter.cs", label="Assert.IsNotNull(data)", span="1700-1700"];
m3_1095 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="DataSetConverter.cs", label="string text = Encoding.UTF8.GetString(data, 0, data.Length)", span="1702-1702"];
m3_1096 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="DataSetConverter.cs", label="Assert.AreEqual(''Hello world.'', text)", span="1703-1703"];
m3_1097 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", span="1694-1694"];
m3_310 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", span="545-545"];
m3_311 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="DataSetConverter.cs", label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n]   \r\n\r\n''", span="547-553"];
m3_312 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="555-555"];
m3_313 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="DataSetConverter.cs", label="reader.Read()", span="556-556"];
m3_314 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", span="545-545"];
m3_1625 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", span="2500-2500"];
m3_1626 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="DataSetConverter.cs", label="string json = ''new Date()''", span="2502-2502"];
m3_1627 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2503-2503"];
m3_1628 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2505-2505"];
m3_1629 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2506-2506"];
m3_1630 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2508-2508"];
m3_1631 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2509-2509"];
m3_1632 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", span="2500-2500"];
m3_478 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", span="796-796"];
m3_479 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="DataSetConverter.cs", label="JsonReader reader = new JsonTextReader(new StringReader('''hi''))", span="798-798"];
m3_480 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unterminated string. Expected delimiter: '. Path '', line 1, position 3.'')", span="800-800"];
m3_481 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", span="796-796"];
m3_1501 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", span="2317-2317"];
m3_1502 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="DataSetConverter.cs", label="string json = ''new Date\n()''", span="2319-2319"];
m3_1503 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2320-2320"];
m3_1504 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2322-2322"];
m3_1505 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="DataSetConverter.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2323-2323"];
m3_1506 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2324-2324"];
m3_1507 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2326-2326"];
m3_1508 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2327-2327"];
m3_1509 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", span="2317-2317"];
m3_658 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytes()", span="383-383"];
m3_265 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", span="468-468"];
m3_266 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="DataSetConverter.cs", label="string json = @''{''''DefaultConverter'''':new Date(0, ''''hi''''),''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}''", span="470-470"];
m3_267 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="DataSetConverter.cs", label="JsonReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="472-472"];
m3_268 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="474-474"];
m3_269 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="475-475"];
m3_270 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="476-476"];
m3_271 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="477-477"];
m3_272 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="DataSetConverter.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="478-478"];
m3_273 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="480-480"];
m3_274 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="DataSetConverter.cs", label="Assert.AreEqual(0L, reader.Value)", span="481-481"];
m3_275 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="483-483"];
m3_276 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="DataSetConverter.cs", label="Assert.AreEqual(''hi'', reader.Value)", span="484-484"];
m3_277 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="486-486"];
m3_278 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="487-487"];
m3_279 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="489-489"];
m3_280 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="DataSetConverter.cs", label="Assert.AreEqual(''MemberConverter'', reader.Value)", span="490-490"];
m3_281 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", span="468-468"];
m3_607 [cluster="Unk.ToString", file="DataSetConverter.cs", label="Entry Unk.ToString", span=""];
m3_19 [cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs", label="reader.Read()", span="76-76"];
m3_605 [cluster="BigInteger.cstr", file="DataSetConverter.cs", label="Entry BigInteger.cstr", span=""];
m3_957 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="407-407"];
m3_958 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="828-828"];
m3_1276 [cluster="System.DateTime.DateTime(int, int, int)", file="DataSetConverter.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m3_1420 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", span="2171-2171"];
m3_1421 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nullz''))", span="2173-2173"];
m3_1422 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing null value. Path '', line 1, position 4.'')", span="2175-2175"];
m3_1423 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", span="2171-2171"];
m3_10 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="299-299"];
m3_953 [cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", file="DataSetConverter.cs", label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", span="0-0"];
m3_1890 [cluster="double.ToString(string)", file="DataSetConverter.cs", label="Entry double.ToString(string)", span="0-0"];
m3_1578 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", span="2436-2436"];
m3_1579 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="DataSetConverter.cs", label="string json = ''new Dat''", span="2438-2438"];
m3_1580 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2439-2439"];
m3_1581 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing constructor. Path '', line 1, position 7.'')", span="2441-2441"];
m3_1582 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", span="2436-2436"];
m3_1798 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", span="2774-2774"];
m3_1799 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="DataSetConverter.cs", label="string json = @''/''", span="2776-2776"];
m3_1800 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2778-2778"];
m3_1801 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing comment. Path '', line 1, position 1.'')", span="2780-2780"];
m3_1802 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", span="2774-2774"];
m3_985 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", span="1539-1539"];
m3_986 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="DataSetConverter.cs", label="int length = 20000", span="1541-1541"];
m3_987 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="DataSetConverter.cs", label="string json = @''['''''' + new string(' ', length) + @'''''']''", span="1542-1542"];
m3_988 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1544-1544"];
m3_989 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="DataSetConverter.cs", label="reader.Read()", span="1546-1546"];
m3_990 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1547-1547"];
m3_991 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="DataSetConverter.cs", label="reader.Read()", span="1549-1549"];
m3_992 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1550-1550"];
m3_993 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="1551-1551"];
m3_994 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="DataSetConverter.cs", label="Assert.AreEqual(20000, reader.Value.ToString().Length)", span="1552-1552"];
m3_995 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1554-1554"];
m3_996 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1555-1555"];
m3_997 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="DataSetConverter.cs", label="Assert.IsFalse(reader.Read())", span="1557-1557"];
m3_998 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1558-1558"];
m3_999 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", span="1539-1539"];
m3_967 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", span="1506-1506"];
m3_968 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="DataSetConverter.cs", label="string input = @''[\r\n  NaN,\r\n  Infinity,\r\n  -Infinity\r\n]''", span="1508-1512"];
m3_969 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="DataSetConverter.cs", label="StringReader sr = new StringReader(input)", span="1514-1514"];
m3_970 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="DataSetConverter.cs", label="JsonReader jsonReader = new JsonTextReader(sr)", span="1516-1516"];
m3_971 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="DataSetConverter.cs", label="jsonReader.Read()", span="1518-1518"];
m3_972 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="DataSetConverter.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartArray)", span="1519-1519"];
m3_973 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="DataSetConverter.cs", label="jsonReader.Read()", span="1521-1521"];
m3_974 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="DataSetConverter.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1522-1522"];
m3_975 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="DataSetConverter.cs", label="Assert.AreEqual(jsonReader.Value, double.NaN)", span="1523-1523"];
m3_976 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="DataSetConverter.cs", label="jsonReader.Read()", span="1525-1525"];
m3_977 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="DataSetConverter.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1526-1526"];
m3_978 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="DataSetConverter.cs", label="Assert.AreEqual(jsonReader.Value, double.PositiveInfinity)", span="1527-1527"];
m3_979 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="DataSetConverter.cs", label="jsonReader.Read()", span="1529-1529"];
m3_980 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="DataSetConverter.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1530-1530"];
m3_981 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="DataSetConverter.cs", label="Assert.AreEqual(jsonReader.Value, double.NegativeInfinity)", span="1531-1531"];
m3_982 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="DataSetConverter.cs", label="jsonReader.Read()", span="1533-1533"];
m3_983 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="DataSetConverter.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndArray)", span="1534-1534"];
m3_984 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", span="1506-1506"];
m3_518 [cluster="System.IO.StringWriter.ToString()", file="DataSetConverter.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m3_1278 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", span="1965-1965"];
m3_1279 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="DataSetConverter.cs", label="string json = @''{''''Offset'''':''''\/Date(946706400000-0600)\/''''}''", span="1967-1967"];
m3_1280 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1969-1969"];
m3_1281 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1971-1971"];
m3_1282 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1972-1972"];
m3_1283 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1974-1974"];
m3_1284 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1975-1975"];
m3_1285 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="DataSetConverter.cs", label="reader.ReadAsDateTimeOffset()", span="1977-1977"];
m3_1286 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="1978-1978"];
m3_1287 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="1979-1979"];
m3_1288 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="DataSetConverter.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6)), reader.Value)", span="1980-1980"];
m3_1289 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1982-1982"];
m3_1290 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1983-1983"];
m3_1291 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", span="1965-1965"];
m3_621 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", span="1006-1006"];
m3_622 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="DataSetConverter.cs", label="string json = @''\r\n{\r\n  ''''description'''': ''''A person'''',\r\n  ''''type'''': ''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''name'''': {''''type'''':''''string''''},\r\n    ''''hobbies'''': {\r\n      ''''type'''': ''''array'''',\r\n      ''''items'''': {''''type'''':''''string''''}\r\n    }\r\n  }\r\n}\r\n''", span="1008-1021"];
m3_623 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1023-1023"];
m3_624 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="DataSetConverter.cs", label="int i = 0", span="1028-1028"];
m3_626 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1030-1030"];
m3_628 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1033-1033"];
m3_629 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1034-1034"];
m3_630 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="DataSetConverter.cs", label="Assert.AreEqual(''type'', reader.Value)", span="1035-1035"];
m3_625 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="DataSetConverter.cs", label="i < 14", span="1028-1028"];
m3_627 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="DataSetConverter.cs", label="i++", span="1028-1028"];
m3_631 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", span="1006-1006"];
m3_1292 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", span="1987-1987"];
m3_1293 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="DataSetConverter.cs", label="string json = @''{''''Offset'''':''''blablahbla''''}''", span="1989-1989"];
m3_1294 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1991-1991"];
m3_1295 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1993-1993"];
m3_1296 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1994-1994"];
m3_1297 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1996-1996"];
m3_1298 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1997-1997"];
m3_1299 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTimeOffset(); }, ''Could not convert string to DateTimeOffset: blablahbla. Path 'Offset', line 1, position 22.'')", span="1999-1999"];
m3_1300 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", span="1987-1987"];
m3_26 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="99-99"];
m3_1168 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", span="1804-1804"];
m3_1169 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1806-1806"];
m3_1170 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="DataSetConverter.cs", label="Assert.IsNull(reader.ReadAsDecimal())", span="1808-1808"];
m3_1171 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1809-1809"];
m3_1172 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", span="1804-1804"];
m3_62 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", span="147-147"];
m3_63 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="DataSetConverter.cs", label="string json = @''[\r\n  333333333333333333333333333333333333333,\r\n  3.3,\r\n  ,\r\n  0f\r\n]''", span="149-154"];
m3_64 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="DataSetConverter.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="156-156"];
m3_65 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="DataSetConverter.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="158-158"];
m3_66 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonTextReader.TokenType)", span="159-159"];
m3_67 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''JSON integer 333333333333333333333333333333333333333 is too large or small for an Int32. Path '[0]', line 2, position 42.'')", span="161-161"];
m3_68 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''Input string '3.3' is not a valid integer. Path '[1]', line 3, position 6.'')", span="163-163"];
m3_69 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''Error reading integer. Unexpected token: Undefined. Path '[2]', line 4, position 3.'')", span="165-165"];
m3_70 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''Input string '0f' is not a valid integer. Path '[3]', line 5, position 5.'')", span="167-167"];
m3_71 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="DataSetConverter.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="169-169"];
m3_72 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonTextReader.TokenType)", span="170-170"];
m3_73 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="DataSetConverter.cs", label="Assert.IsFalse(jsonTextReader.Read())", span="172-172"];
m3_74 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", span="147-147"];
m3_1178 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", span="1822-1822"];
m3_1179 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{''))", span="1824-1824"];
m3_1180 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected end when reading bytes. Path '', line 1, position 1.'')", span="1826-1826"];
m3_1181 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", span="1822-1822"];
m3_1594 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", span="2454-2454"];
m3_1595 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="DataSetConverter.cs", label="string json = ''{hi:1, ''", span="2456-2456"];
m3_1596 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2457-2457"];
m3_1597 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2459-2459"];
m3_1598 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2460-2460"];
m3_1599 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2461-2461"];
m3_1600 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="DataSetConverter.cs", label="Assert.IsFalse(reader.Read())", span="2462-2462"];
m3_1601 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", span="2454-2454"];
m3_259 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", span="436-436"];
m3_260 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="DataSetConverter.cs", label="string input = @''{\r\n''''matches'''' : [\r\n{''''t'''':''''C'''', ''''n'''':''''Citigroup Inc.'''', ''''e'''':''''NYSE'''', ''''id'''':''''662713''''}\r\n,{''''t'''':''''CHL'''', ''''n'''':''''China Mobile Ltd. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''660998''''}\r\n,{''''t'''':''''PTR'''', ''''n'''':''''PetroChina Company Limited (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''664536''''}\r\n,{''''t'''':''''RIO'''', ''''n'''':''''Companhia Vale do Rio Doce (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''671472''''}\r\n,{''''t'''':''''RIOPR'''', ''''n'''':''''Companhia Vale do Rio Doce (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''3512643''''}\r\n,{''''t'''':''''CSCO'''', ''''n'''':''''Cisco Systems, Inc.'''', ''''e'''':''''NASDAQ'''', ''''id'''':''''99624''''}\r\n,{''''t'''':''''CVX'''', ''''n'''':''''Chevron Corporation'''', ''''e'''':''''NYSE'''', ''''id'''':''''667226''''}\r\n,{''''t'''':''''TM'''', ''''n'''':''''Toyota Motor Corporation (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''655880''''}\r\n,{''''t'''':''''JPM'''', ''''n'''':''''JPMorgan Chase \\x26 Co.'''', ''''e'''':''''NYSE'''', ''''id'''':''''665639''''}\r\n,{''''t'''':''''COP'''', ''''n'''':''''ConocoPhillips'''', ''''e'''':''''NYSE'''', ''''id'''':''''1691168''''}\r\n,{''''t'''':''''LFC'''', ''''n'''':''''China Life Insurance Company Ltd. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''688679''''}\r\n,{''''t'''':''''NOK'''', ''''n'''':''''Nokia Corporation (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''657729''''}\r\n,{''''t'''':''''KO'''', ''''n'''':''''The Coca-Cola Company'''', ''''e'''':''''NYSE'''', ''''id'''':''''6550''''}\r\n,{''''t'''':''''VZ'''', ''''n'''':''''Verizon Communications Inc.'''', ''''e'''':''''NYSE'''', ''''id'''':''''664887''''}\r\n,{''''t'''':''''AMX'''', ''''n'''':''''America Movil S.A.B de C.V. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''665834''''}],\r\n''''all'''' : false\r\n}\r\n''", span="438-457"];
m3_261 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="DataSetConverter.cs", label="JsonReader jsonReader = new JsonTextReader(new StringReader(input))", span="459-459"];
m3_262 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="DataSetConverter.cs", label="jsonReader.Read()", span="461-461"];
m3_263 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", span="436-436"];
m3_12 [cluster="Unk.GetResolvedPropertyName", file="DataSetConverter.cs", label="Entry Unk.GetResolvedPropertyName", span=""];
m3_14 [cluster="Unk.WriteJson", file="DataSetConverter.cs", label="Entry Unk.WriteJson", span=""];
m3_15 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="363-363"];
m3_16 [cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="70-70"];
m3_17 [cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="DataSetConverter.cs", label="DataSet ds = new DataSet()", prediction=211, span="72-72"];
m3_18 [cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="DataSetConverter.cs", label="DataTableConverter converter = new DataTableConverter()", prediction=212, span="74-74"];
m3_1638 [cluster="Unk.>", file="DataSetConverter.cs", label="Entry Unk.>", span=""];
m3_2132 [cluster="Newtonsoft.Json.Tests.SlowStream.Write(byte[], int, int)", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.Write(byte[], int, int)", span="3287-3287"];
m3_2133 [cluster="Newtonsoft.Json.Tests.SlowStream.Write(byte[], int, int)", file="DataSetConverter.cs", label="throw new NotSupportedException();", span="3289-3289"];
m3_2134 [cluster="Newtonsoft.Json.Tests.SlowStream.Write(byte[], int, int)", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.Write(byte[], int, int)", span="3287-3287"];
m3_1334 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", span="2047-2047"];
m3_1335 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="DataSetConverter.cs", label="string json = @''{''''Offset'''':''''2011-08-01T21:25Z''''}''", span="2049-2049"];
m3_1336 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2051-2051"];
m3_1337 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2053-2053"];
m3_1338 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2054-2054"];
m3_1339 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2056-2056"];
m3_1340 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2057-2057"];
m3_1341 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="DataSetConverter.cs", label="reader.ReadAsDateTimeOffset()", span="2059-2059"];
m3_1342 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2060-2060"];
m3_1343 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2061-2061"];
m3_1344 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="DataSetConverter.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2011, 8, 1, 21, 25, 0, DateTimeKind.Utc), TimeSpan.Zero), reader.Value)", span="2062-2062"];
m3_1345 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2064-2064"];
m3_1346 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2065-2065"];
m3_1347 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", span="2047-2047"];
m3_1382 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", span="2120-2120"];
m3_1383 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="DataSetConverter.cs", label="string json = @''{''''Name'''':1}''", span="2122-2122"];
m3_1384 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2124-2124"];
m3_1385 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2126-2126"];
m3_1386 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2127-2127"];
m3_1387 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2129-2129"];
m3_1388 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2130-2130"];
m3_1389 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="DataSetConverter.cs", label="reader.ReadAsDecimal()", span="2132-2132"];
m3_1390 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2133-2133"];
m3_1391 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2134-2134"];
m3_1392 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="DataSetConverter.cs", label="Assert.AreEqual(1m, reader.Value)", span="2135-2135"];
m3_1393 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", span="2120-2120"];
m3_1492 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", span="2300-2300"];
m3_1493 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="DataSetConverter.cs", label="string json = ''new Date\0()''", span="2302-2302"];
m3_1494 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2303-2303"];
m3_1495 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2308-2308"];
m3_1496 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="DataSetConverter.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2309-2309"];
m3_1497 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2310-2310"];
m3_1498 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2312-2312"];
m3_1499 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2313-2313"];
m3_1500 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", span="2300-2300"];
m3_560 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", span="923-923"];
m3_561 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="DataSetConverter.cs", label="long i = int.MaxValue", span="925-925"];
m3_562 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="927-927"];
m3_567 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="DataSetConverter.cs", label="long total = j + i", span="933-933"];
m3_563 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="DataSetConverter.cs", label="reader.Read()", span="928-928"];
m3_564 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="929-929"];
m3_568 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n                {\r\n                    reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)));\r\n                    reader.ReadAsInt32();\r\n                }, ''JSON integer '' + total + '' is too large or small for an Int32. Path '', line 1, position 10.'')", span="934-938"];
m3_565 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="DataSetConverter.cs", label="int j = 1", span="931-931"];
m3_566 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="DataSetConverter.cs", label="j < 1000", span="931-931"];
m3_569 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="DataSetConverter.cs", label="j++", span="931-931"];
m3_570 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", span="923-923"];
m3_1441 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", span="2195-2195"];
m3_1442 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="DataSetConverter.cs", label="string json = @''{''''decimal'''':-7.92281625142643E+28}''", span="2197-2197"];
m3_1443 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2199-2199"];
m3_1444 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2201-2201"];
m3_1445 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2202-2202"];
m3_1446 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2204-2204"];
m3_1447 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2205-2205"];
m3_1448 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="DataSetConverter.cs", label="decimal? d = reader.ReadAsDecimal()", span="2207-2207"];
m3_1449 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2208-2208"];
m3_1450 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2209-2209"];
m3_1452 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2212-2212"];
m3_1453 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2213-2213"];
m3_1451 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="DataSetConverter.cs", label="Assert.AreEqual(-79228162514264300000000000000m, d)", span="2210-2210"];
m3_1454 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", span="2195-2195"];
m3_1836 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", span="2834-2834"];
m3_1837 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="DataSetConverter.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{}}''))", span="2836-2836"];
m3_1838 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2837-2837"];
m3_1839 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2838-2838"];
m3_1840 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Additional text encountered after finished reading JSON content: }. Path '', line 1, position 2.'')", span="2840-2840"];
m3_1841 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", span="2834-2834"];
m3_1935 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", span="2974-2974"];
m3_1936 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="string json = ''[false, true, true, false, 'test!', 1.11, 0e-10, 0E-10, 0.25e-5, 0.3e10, 6.0221418e23, 'Purple\\r \\n monkey\\'s:\\tdishwasher']''", span="2976-2976"];
m3_1937 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2978-2978"];
m3_1938 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2980-2980"];
m3_1939 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2982-2982"];
m3_1940 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Assert.AreEqual(false, reader.Value)", span="2983-2983"];
m3_1941 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2985-2985"];
m3_1942 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2986-2986"];
m3_1943 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Assert.AreEqual(true, reader.Value)", span="2987-2987"];
m3_1944 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2989-2989"];
m3_1945 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2990-2990"];
m3_1946 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Assert.AreEqual(true, reader.Value)", span="2991-2991"];
m3_1947 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2993-2993"];
m3_1948 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2994-2994"];
m3_1949 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Assert.AreEqual(false, reader.Value)", span="2995-2995"];
m3_1950 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2997-2997"];
m3_1951 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2998-2998"];
m3_1952 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Assert.AreEqual(''test!'', reader.Value)", span="2999-2999"];
m3_1953 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="3001-3001"];
m3_1954 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3002-3002"];
m3_1955 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Assert.AreEqual(1.11d, reader.Value)", span="3003-3003"];
m3_1956 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="3005-3005"];
m3_1957 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3006-3006"];
m3_1958 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Assert.AreEqual(0d, reader.Value)", span="3007-3007"];
m3_1959 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="3009-3009"];
m3_1960 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3010-3010"];
m3_1961 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Assert.AreEqual(0d, reader.Value)", span="3011-3011"];
m3_1962 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="3013-3013"];
m3_1963 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3014-3014"];
m3_1964 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Assert.AreEqual(0.0000025d, reader.Value)", span="3015-3015"];
m3_1965 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="3017-3017"];
m3_1966 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3018-3018"];
m3_1967 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Assert.AreEqual(3000000000d, reader.Value)", span="3019-3019"];
m3_1968 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="3021-3021"];
m3_1969 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3022-3022"];
m3_1970 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="3023-3023"];
m3_1971 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="3025-3025"];
m3_1972 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="3026-3026"];
m3_1973 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Assert.AreEqual(reader.Value, ''Purple\r \n monkey's:\tdishwasher'')", span="3027-3027"];
m3_1974 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="3029-3029"];
m3_1975 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", span="2974-2974"];
m3_187 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", span="319-319"];
m3_188 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="DataSetConverter.cs", label="string json = @''{''''recipe_id'''':''''12'''',''''recipe_name'''':''''Apocalypse Leather Armors'''',''''recipe_text'''':''''#C16------------------------------\r\n#C12Ingredients #C20\r\n#C16------------------------------\r\n\r\na piece of Leather Armor\r\n( ie #L \''''Enhanced Leather Armor Boots\'''' \''''85644\'''' )\r\n<img src=rdb:\/\/13264>\r\n\r\n#L \''''Hacker Tool\'''' \''''87814\''''\r\n<img src=rdb:\/\/99282>\r\n\r\n#L \''''Clanalizer\'''' \''''208313\''''\r\n<img src=rdb:\/\/156479>\r\n\r\n#C16------------------------------\r\n#C12Recipe #C16\r\n#C16------------------------------#C20\r\n\r\nHacker Tool\r\n#C15+#C20\r\na piece of Leather Armor\r\n#C15=#C20\r\n<img src=rdb:\/\/13264>\r\na piece of Hacked Leather Armor\r\n( ie : #L \''''Hacked Leather Armor Boots\'''' \''''245979\'''' )\r\n#C16Skills: |  BE  |#C20\r\n\r\n#C14------------------------------#C20\r\n\r\nClanalizer\r\n#C15+#C20\r\na piece of Hacked Leather Armor\r\n#C15=#C20\r\n<img src=rdb:\/\/13264>\r\na piece of Apocalypse Leather Armor\r\n( ie : #L \''''Apocalypse Leather Armor Boots\'''' \''''245966\'''' )\r\n#C16Skills: |  ??  |#C20\r\n\r\n#C16------------------------------\r\n#C12Details#C16\r\n#C16------------------------------#C20\r\n\r\n#L \''''Apocalypse Leather Armor Boots\'''' \''''245967\''''\r\n#L \''''Apocalypse Leather Armor Gloves\'''' \''''245969\''''\r\n#L \''''Apocalypse Leather Armor Helmet\'''' \''''245975\''''\r\n#L \''''Apocalypse Leather Armor Pants\'''' \''''245971\''''\r\n#L \''''Apocalypse Leather Armor Sleeves\'''' \''''245973\''''\r\n#L \''''Apocalypse Leather Body Armor\'''' \''''245965\''''\r\n\r\n#C16------------------------------\r\n#C12Comments#C16\r\n#C16------------------------------#C20\r\n\r\nNice froob armor.. but ugleh!\r\n\r\n'''',''''recipe_author'''':null}''", span="321-321"];
m3_189 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="323-323"];
m3_190 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="325-325"];
m3_191 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="326-326"];
m3_192 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="328-328"];
m3_193 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="329-329"];
m3_194 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="331-331"];
m3_195 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="332-332"];
m3_196 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="334-334"];
m3_197 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="335-335"];
m3_198 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="337-337"];
m3_199 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="338-338"];
m3_200 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="340-340"];
m3_201 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="341-341"];
m3_202 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="DataSetConverter.cs", label="Assert.AreEqual(''recipe_text'', reader.Value)", span="342-342"];
m3_203 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="344-344"];
m3_204 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="345-345"];
m3_205 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="DataSetConverter.cs", label="Assert.AreEqual(''#C16------------------------------\r\n#C12Ingredients #C20\r\n#C16------------------------------\r\n\r\na piece of Leather Armor\r\n( ie #L \''Enhanced Leather Armor Boots\'' \''85644\'' )\r\n<img src=rdb://13264>\r\n\r\n#L \''Hacker Tool\'' \''87814\''\r\n<img src=rdb://99282>\r\n\r\n#L \''Clanalizer\'' \''208313\''\r\n<img src=rdb://156479>\r\n\r\n#C16------------------------------\r\n#C12Recipe #C16\r\n#C16------------------------------#C20\r\n\r\nHacker Tool\r\n#C15+#C20\r\na piece of Leather Armor\r\n#C15=#C20\r\n<img src=rdb://13264>\r\na piece of Hacked Leather Armor\r\n( ie : #L \''Hacked Leather Armor Boots\'' \''245979\'' )\r\n#C16Skills: |  BE  |#C20\r\n\r\n#C14------------------------------#C20\r\n\r\nClanalizer\r\n#C15+#C20\r\na piece of Hacked Leather Armor\r\n#C15=#C20\r\n<img src=rdb://13264>\r\na piece of Apocalypse Leather Armor\r\n( ie : #L \''Apocalypse Leather Armor Boots\'' \''245966\'' )\r\n#C16Skills: |  ??  |#C20\r\n\r\n#C16------------------------------\r\n#C12Details#C16\r\n#C16------------------------------#C20\r\n\r\n#L \''Apocalypse Leather Armor Boots\'' \''245967\''\r\n#L \''Apocalypse Leather Armor Gloves\'' \''245969\''\r\n#L \''Apocalypse Leather Armor Helmet\'' \''245975\''\r\n#L \''Apocalypse Leather Armor Pants\'' \''245971\''\r\n#L \''Apocalypse Leather Armor Sleeves\'' \''245973\''\r\n#L \''Apocalypse Leather Body Armor\'' \''245965\''\r\n\r\n#C16------------------------------\r\n#C12Comments#C16\r\n#C16------------------------------#C20\r\n\r\nNice froob armor.. but ugleh!\r\n\r\n'', reader.Value)", span="347-347"];
m3_206 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", span="319-319"];
m3_514 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="124-124"];
m3_729 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", span="1193-1193"];
m3_730 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="DataSetConverter.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{'hi\r\nbye':1}''))", span="1195-1195"];
m3_731 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1196-1196"];
m3_732 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1197-1197"];
m3_733 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1198-1198"];
m3_734 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="DataSetConverter.cs", label="Assert.AreEqual(''hi\r\nbye'', reader.Value)", span="1199-1199"];
m3_735 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1200-1200"];
m3_736 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1201-1201"];
m3_737 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="DataSetConverter.cs", label="Assert.AreEqual(1L, reader.Value)", span="1202-1202"];
m3_738 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1203-1203"];
m3_739 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1204-1204"];
m3_740 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="DataSetConverter.cs", label="Assert.IsFalse(reader.Read())", span="1205-1205"];
m3_741 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", span="1193-1193"];
m3_1191 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", span="1841-1841"];
m3_1192 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1843-1843"];
m3_1193 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDecimal(); }, ''Error reading decimal. Unexpected token: StartConstructor. Path '', line 1, position 9.'')", span="1845-1845"];
m3_1194 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", span="1841-1841"];
m3_1205 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", span="1858-1858"];
m3_1206 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1860-1860"];
m3_1207 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTimeOffset(); }, ''Error reading date. Unexpected token: StartConstructor. Path '', line 1, position 9.'')", span="1862-1862"];
m3_1208 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", span="1858-1858"];
m3_1173 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", span="1813-1813"];
m3_1174 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1815-1815"];
m3_1175 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="DataSetConverter.cs", label="Assert.IsNull(reader.ReadAsBytes())", span="1817-1817"];
m3_1176 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1818-1818"];
m3_1177 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", span="1813-1813"];
m3_1365 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="DataSetConverter.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m3_242 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="DataSetConverter.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m3_100 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="317-317"];
m3_1394 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", span="2139-2139"];
m3_1395 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="DataSetConverter.cs", label="string json = @''{''''Name'''': 1.1}''", span="2141-2141"];
m3_1396 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2143-2143"];
m3_1397 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2145-2145"];
m3_1398 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2146-2146"];
m3_1399 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2148-2148"];
m3_1400 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2149-2149"];
m3_1401 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsInt32(); }, ''Input string '1.1' is not a valid integer. Path 'Name', line 1, position 12.'')", span="2151-2151"];
m3_1402 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", span="2139-2139"];
m3_1480 [cluster="System.DateTime.DateTime(long)", file="DataSetConverter.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m3_1455 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", span="2217-2217"];
m3_1456 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="DataSetConverter.cs", label="string json = @''{''''decimal'''':''''9,99''''}''", span="2219-2219"];
m3_1457 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2221-2221"];
m3_1458 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="DataSetConverter.cs", label="reader.Culture = new CultureInfo(''fr-FR'')", span="2222-2222"];
m3_1459 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2224-2224"];
m3_1460 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2225-2225"];
m3_1461 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2227-2227"];
m3_1462 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2228-2228"];
m3_1463 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="DataSetConverter.cs", label="decimal? d = reader.ReadAsDecimal()", span="2230-2230"];
m3_1464 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2231-2231"];
m3_1465 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2232-2232"];
m3_1467 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2235-2235"];
m3_1468 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2236-2236"];
m3_1466 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="DataSetConverter.cs", label="Assert.AreEqual(9.99m, d)", span="2233-2233"];
m3_1469 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", span="2217-2217"];
m3_243 [cluster="System.Text.Encoding.GetBytes(string)", file="DataSetConverter.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m3_245 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", span="418-418"];
m3_246 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="DataSetConverter.cs", label="MemoryStream ms = new MemoryStream()", span="420-420"];
m3_247 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(ms))", span="421-421"];
m3_248 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="DataSetConverter.cs", label="Assert.IsTrue(ms.CanRead)", span="423-423"];
m3_250 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="DataSetConverter.cs", label="Assert.IsFalse(ms.CanRead)", span="425-425"];
m3_249 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="DataSetConverter.cs", label="reader.Close()", span="424-424"];
m3_251 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="DataSetConverter.cs", label="ms = new MemoryStream()", span="427-427"];
m3_252 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StreamReader(ms)) { CloseInput = false }", span="428-428"];
m3_253 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="DataSetConverter.cs", label="Assert.IsTrue(ms.CanRead)", span="430-430"];
m3_255 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="DataSetConverter.cs", label="Assert.IsTrue(ms.CanRead)", span="432-432"];
m3_254 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="DataSetConverter.cs", label="reader.Close()", span="431-431"];
m3_256 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", span="418-418"];
m3_1219 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", span="1878-1878"];
m3_1220 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1''))", span="1880-1880"];
m3_1221 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected end when reading bytes. Path '[0]', line 1, position 2.'')", span="1882-1882"];
m3_1222 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", span="1878-1878"];
m3_1528 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", span="2359-2359"];
m3_1529 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{'prop1':[1]} 1 2 ''''name'''' [][]null {}{} 1.1''))", span="2361-2361"];
m3_1530 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="reader.SupportMultipleContent = true", span="2362-2362"];
m3_1531 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2364-2364"];
m3_1532 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2365-2365"];
m3_1533 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2367-2367"];
m3_1534 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2368-2368"];
m3_1535 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2370-2370"];
m3_1536 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2371-2371"];
m3_1537 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2373-2373"];
m3_1538 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2374-2374"];
m3_1539 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2376-2376"];
m3_1540 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2377-2377"];
m3_1541 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2379-2379"];
m3_1542 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2380-2380"];
m3_1543 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2382-2382"];
m3_1544 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2383-2383"];
m3_1545 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2385-2385"];
m3_1546 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2386-2386"];
m3_1547 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2388-2388"];
m3_1548 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2389-2389"];
m3_1549 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2391-2391"];
m3_1550 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2392-2392"];
m3_1551 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2394-2394"];
m3_1552 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2395-2395"];
m3_1553 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2397-2397"];
m3_1554 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2398-2398"];
m3_1555 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2400-2400"];
m3_1556 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2401-2401"];
m3_1557 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2403-2403"];
m3_1558 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2404-2404"];
m3_1559 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2406-2406"];
m3_1560 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2407-2407"];
m3_1561 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2409-2409"];
m3_1562 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2410-2410"];
m3_1563 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2412-2412"];
m3_1564 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2413-2413"];
m3_1565 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2415-2415"];
m3_1566 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2416-2416"];
m3_1567 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2418-2418"];
m3_1568 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2419-2419"];
m3_1569 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Assert.IsFalse(reader.Read())", span="2421-2421"];
m3_1570 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", span="2359-2359"];
m3_1806 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", span="2784-2784"];
m3_1807 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="DataSetConverter.cs", label="string json = @''010''", span="2786-2786"];
m3_1808 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2788-2788"];
m3_1809 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="DataSetConverter.cs", label="reader.ReadAsDecimal()", span="2790-2790"];
m3_1810 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2791-2791"];
m3_1811 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(8m, reader.Value)", span="2792-2792"];
m3_1812 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", span="2784-2784"];
m3_758 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", span="1229-1229"];
m3_759 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="DataSetConverter.cs", label="string helloWorld = ''Hello world!''", span="1231-1231"];
m3_760 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="DataSetConverter.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1232-1232"];
m3_761 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="DataSetConverter.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{num:1,data:''' + Convert.ToBase64String(helloWorldData) + @'''}''))", span="1234-1234"];
m3_769 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="DataSetConverter.cs", label="CollectionAssert.AreEquivalent(helloWorldData, data)", span="1242-1242"];
m3_762 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1235-1235"];
m3_763 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1236-1236"];
m3_764 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1237-1237"];
m3_765 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1238-1238"];
m3_766 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1239-1239"];
m3_767 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1240-1240"];
m3_768 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="DataSetConverter.cs", label="byte[] data = reader.ReadAsBytes()", span="1241-1241"];
m3_770 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="1243-1243"];
m3_771 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1244-1244"];
m3_772 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1245-1245"];
m3_773 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="DataSetConverter.cs", label="Assert.IsFalse(reader.Read())", span="1247-1247"];
m3_774 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", span="1229-1229"];
m3_592 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", span="965-965"];
m3_593 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="DataSetConverter.cs", label="BigInteger i = new BigInteger(long.MaxValue)", span="967-967"];
m3_594 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="969-969"];
m3_599 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="DataSetConverter.cs", label="BigInteger total = i + j", span="975-975"];
m3_595 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="DataSetConverter.cs", label="reader.Read()", span="970-970"];
m3_596 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="971-971"];
m3_597 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="DataSetConverter.cs", label="int j = 1", span="973-973"];
m3_598 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="DataSetConverter.cs", label="j < 1000", span="973-973"];
m3_603 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="DataSetConverter.cs", label="j++", span="973-973"];
m3_600 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="977-977"];
m3_601 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="DataSetConverter.cs", label="reader.Read()", span="978-978"];
m3_602 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(BigInteger), reader.ValueType)", span="980-980"];
m3_604 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", span="965-965"];
m3_2129 [cluster="Newtonsoft.Json.Tests.SlowStream.SetLength(long)", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.SetLength(long)", span="3282-3282"];
m3_2130 [cluster="Newtonsoft.Json.Tests.SlowStream.SetLength(long)", file="DataSetConverter.cs", label="throw new NotSupportedException();", span="3284-3284"];
m3_2131 [cluster="Newtonsoft.Json.Tests.SlowStream.SetLength(long)", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.SetLength(long)", span="3282-3282"];
m3_742 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", span="1209-1209"];
m3_743 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="DataSetConverter.cs", label="string helloWorld = ''Hello world!''", span="1211-1211"];
m3_744 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="DataSetConverter.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1212-1212"];
m3_745 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="DataSetConverter.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''[1,''' + Convert.ToBase64String(helloWorldData) + @''']''))", span="1214-1214"];
m3_751 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="DataSetConverter.cs", label="CollectionAssert.AreEquivalent(helloWorldData, data)", span="1220-1220"];
m3_746 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1215-1215"];
m3_747 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1216-1216"];
m3_748 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1217-1217"];
m3_749 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1218-1218"];
m3_750 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="DataSetConverter.cs", label="byte[] data = reader.ReadAsBytes()", span="1219-1219"];
m3_752 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="1221-1221"];
m3_753 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1222-1222"];
m3_754 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1223-1223"];
m3_755 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="DataSetConverter.cs", label="Assert.IsFalse(reader.Read())", span="1225-1225"];
m3_756 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", span="1209-1209"];
m3_1813 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", span="2796-2796"];
m3_1814 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="DataSetConverter.cs", label="string json = @''0x20''", span="2798-2798"];
m3_1815 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2800-2800"];
m3_1816 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="DataSetConverter.cs", label="reader.ReadAsDecimal()", span="2802-2802"];
m3_1817 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2803-2803"];
m3_1818 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(32m, reader.Value)", span="2804-2804"];
m3_1819 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", span="2796-2796"];
m3_644 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", span="1056-1056"];
m3_645 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="DataSetConverter.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\''))", span="1058-1058"];
m3_646 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unterminated string. Expected delimiter: '. Path '', line 1, position 3.'')", span="1060-1060"];
m3_647 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", span="1056-1056"];
m3_849 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", span="1369-1369"];
m3_850 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DataSetConverter.cs", label="JsonTextReader reader = null", span="1371-1371"];
m3_851 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1373-1373"];
m3_852 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DataSetConverter.cs", label="Assert.AreEqual(1.1m, reader.ReadAsDecimal())", span="1374-1374"];
m3_853 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(''-1.1''))", span="1376-1376"];
m3_854 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DataSetConverter.cs", label="Assert.AreEqual(-1.1m, reader.ReadAsDecimal())", span="1377-1377"];
m3_855 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(''0.0''))", span="1379-1379"];
m3_856 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DataSetConverter.cs", label="Assert.AreEqual(0.0m, reader.ReadAsDecimal())", span="1380-1380"];
m3_857 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(''-0.0''))", span="1382-1382"];
m3_858 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DataSetConverter.cs", label="Assert.AreEqual(0, reader.ReadAsDecimal())", span="1383-1383"];
m3_859 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1385-1385"];
m3_860 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsDecimal(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1386-1386"];
m3_861 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1388-1388"];
m3_862 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DataSetConverter.cs", label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="1389-1389"];
m3_863 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1390-1390"];
m3_864 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1392-1392"];
m3_865 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DataSetConverter.cs", label="Assert.AreEqual(0.000001m, reader.ReadAsDecimal())", span="1393-1393"];
m3_866 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(''''))", span="1395-1395"];
m3_867 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DataSetConverter.cs", label="Assert.AreEqual(null, reader.ReadAsDecimal())", span="1396-1396"];
m3_868 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(''-''))", span="1398-1398"];
m3_869 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsDecimal(), ''Input string '-' is not a valid decimal. Path '', line 1, position 1.'')", span="1399-1399"];
m3_870 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", span="1369-1369"];
m3_1099 [cluster="System.Text.Encoding.GetString(byte[], int, int)", file="DataSetConverter.cs", label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0"];
m3_1248 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", span="1921-1921"];
m3_1249 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="DataSetConverter.cs", label="string json = @''{''''text'''':0xabcdef12345}''", span="1923-1923"];
m3_1250 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1925-1925"];
m3_1251 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1927-1927"];
m3_1252 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1928-1928"];
m3_1253 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1930-1930"];
m3_1254 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1931-1931"];
m3_1255 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1933-1933"];
m3_1256 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1934-1934"];
m3_1257 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="DataSetConverter.cs", label="Assert.AreEqual(11806310474565, reader.Value)", span="1935-1935"];
m3_1258 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1937-1937"];
m3_1259 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1938-1938"];
m3_1260 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", span="1921-1921"];
m3_954 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="373-373"];
m3_1510 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", span="2331-2331"];
m3_1511 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="DataSetConverter.cs", label="string json = ''[,,, \n\r\n \0   \r  , ,    ]''", span="2333-2333"];
m3_1512 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2334-2334"];
m3_1513 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2336-2336"];
m3_1514 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2337-2337"];
m3_1515 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2339-2339"];
m3_1516 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2340-2340"];
m3_1517 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2342-2342"];
m3_1518 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2343-2343"];
m3_1519 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2345-2345"];
m3_1520 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2346-2346"];
m3_1521 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2348-2348"];
m3_1522 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2349-2349"];
m3_1523 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2351-2351"];
m3_1524 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2352-2352"];
m3_1525 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2354-2354"];
m3_1526 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2355-2355"];
m3_1527 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", span="2331-2331"];
m3_1332 [cluster="System.TimeSpan.FromMinutes(double)", file="DataSetConverter.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m3_1160 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", span="1794-1794"];
m3_1161 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[}''))", span="1796-1796"];
m3_1162 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="DataSetConverter.cs", label="reader.Read()", span="1798-1798"];
m3_1163 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected character encountered while parsing value: }. Path '', line 1, position 1.'')", span="1800-1800"];
m3_1164 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", span="1794-1794"];
m3_795 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", span="1282-1282"];
m3_796 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", file="DataSetConverter.cs", label="string input = @''{\r\n  CPU: 'Intel',\r\n  Drives: [ /* Com*ment */\r\n    'DVD read/writer',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}'' + '\n'", span="1284-1290"];
m3_797 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", file="DataSetConverter.cs", label="object o = JsonConvert.DeserializeObject(input)", span="1292-1292"];
m3_798 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", span="1282-1282"];
m3_1226 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", span="1886-1886"];
m3_1227 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1.0]''))", span="1888-1888"];
m3_1228 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected token when reading bytes: Float. Path '[0]', line 1, position 4.'')", span="1890-1890"];
m3_1229 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", span="1886-1886"];
m3_22 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DataSetConverter.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="93-93"];
m3_24 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", color=green, community=0, file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", prediction=211, span="96-96"];
m3_23 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", color=green, community=0, file="DataSetConverter.cs", label="Assert.IsTrue(jsonTextReader.Read())", prediction=214, span="95-95"];
m3_20 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", span="86-86"];
m3_21 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DataSetConverter.cs", label="string json = @''{\r\n    ParentId: 1,\r\n    ChildId: 333333333333333333333333333333333333333,\r\n}''", span="88-91"];
m3_1190 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="363-363"];
m3_1348 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="DataSetConverter.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m3_1013 [cluster="System.Convert.ToInt32(char)", file="DataSetConverter.cs", label="Entry System.Convert.ToInt32(char)", span="0-0"];
m3_2072 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", span="3143-3143"];
m3_2073 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="DataSetConverter.cs", label="StringWriter sw = new StringWriter()", span="3145-3145"];
m3_2074 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="DataSetConverter.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="3146-3146"];
m3_2079 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="DataSetConverter.cs", label="string json = sw.ToString()", span="3153-3153"];
m3_2075 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="DataSetConverter.cs", label="writer.WriteStartArray()", span="3148-3148"];
m3_2076 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="DataSetConverter.cs", label="writer.WriteValue(decimal.MaxValue)", span="3149-3149"];
m3_2077 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="DataSetConverter.cs", label="writer.WriteValue(decimal.MinValue)", span="3150-3150"];
m3_2078 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="DataSetConverter.cs", label="writer.WriteEndArray()", span="3151-3151"];
m3_2080 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="DataSetConverter.cs", label="StringReader sr = new StringReader(json)", span="3155-3155"];
m3_2081 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(sr)", span="3156-3156"];
m3_2082 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="3158-3158"];
m3_2083 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="DataSetConverter.cs", label="decimal? max = reader.ReadAsDecimal()", span="3160-3160"];
m3_2085 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="DataSetConverter.cs", label="decimal? min = reader.ReadAsDecimal()", span="3163-3163"];
m3_2087 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="3166-3166"];
m3_2084 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="DataSetConverter.cs", label="Assert.AreEqual(decimal.MaxValue, max)", span="3161-3161"];
m3_2086 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="DataSetConverter.cs", label="Assert.AreEqual(decimal.MinValue, min)", span="3164-3164"];
m3_2088 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", span="3143-3143"];
m3_515 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="174-174"];
m3_42 [cluster="Unk.Parse", file="DataSetConverter.cs", label="Entry Unk.Parse", span=""];
m3_606 [cluster="StringReader.cstr", file="DataSetConverter.cs", label="Entry StringReader.cstr", span=""];
m3_1304 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", span="2003-2003"];
m3_1305 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="DataSetConverter.cs", label="string json = ''{\''Offset\'':\''\\/Date(946663200000+06)\\/\''}''", span="2005-2005"];
m3_1306 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2007-2007"];
m3_1307 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2009-2009"];
m3_1308 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2010-2010"];
m3_1309 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2012-2012"];
m3_1310 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2013-2013"];
m3_1311 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="DataSetConverter.cs", label="reader.ReadAsDateTimeOffset()", span="2015-2015"];
m3_1312 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2016-2016"];
m3_1313 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2017-2017"];
m3_1314 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="DataSetConverter.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="2018-2018"];
m3_1315 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2020-2020"];
m3_1316 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2021-2021"];
m3_1317 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", span="2003-2003"];
m3_1318 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", span="2025-2025"];
m3_1319 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="DataSetConverter.cs", label="string json = @''{''''Offset'''':''''\/Date(946708260000-0631)\/''''}''", span="2027-2027"];
m3_1320 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2029-2029"];
m3_1321 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2031-2031"];
m3_1322 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2032-2032"];
m3_1323 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2034-2034"];
m3_1324 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2035-2035"];
m3_1325 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="DataSetConverter.cs", label="reader.ReadAsDateTimeOffset()", span="2037-2037"];
m3_1326 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2038-2038"];
m3_1327 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2039-2039"];
m3_1328 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="DataSetConverter.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6).Add(TimeSpan.FromMinutes(-31))), reader.Value)", span="2040-2040"];
m3_1329 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2042-2042"];
m3_1330 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2043-2043"];
m3_1331 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", span="2025-2025"];
m3_2031 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="353-353"];
m3_519 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", span="840-840"];
m3_520 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="DataSetConverter.cs", label="string json = ''\0{\0'\0h\0i\0'\0:\0[\01\0,\0'\0'\0\0,\0null\0]\0,\0do\0:true\0}\0\0/*\0sd\0f\0*/\0/*\0sd\0f\0*/ \0''", span="842-842"];
m3_521 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="843-843"];
m3_522 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="845-845"];
m3_523 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="846-846"];
m3_524 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="848-848"];
m3_525 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="849-849"];
m3_526 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="851-851"];
m3_527 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="852-852"];
m3_528 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="854-854"];
m3_529 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="855-855"];
m3_530 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="857-857"];
m3_531 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="858-858"];
m3_532 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="860-860"];
m3_533 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="861-861"];
m3_534 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="863-863"];
m3_535 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="864-864"];
m3_536 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="866-866"];
m3_537 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="867-867"];
m3_538 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="869-869"];
m3_539 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="870-870"];
m3_540 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="872-872"];
m3_541 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="873-873"];
m3_542 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="875-875"];
m3_543 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="876-876"];
m3_544 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="DataSetConverter.cs", label="Assert.AreEqual(''\0sd\0f\0'', reader.Value)", span="877-877"];
m3_545 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="879-879"];
m3_546 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="880-880"];
m3_547 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="DataSetConverter.cs", label="Assert.AreEqual(''\0sd\0f\0'', reader.Value)", span="881-881"];
m3_548 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="DataSetConverter.cs", label="Assert.IsFalse(reader.Read())", span="883-883"];
m3_549 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", span="840-840"];
m3_1704 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", span="2623-2623"];
m3_1705 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="string json = @''//comment*//*hi*/\r\n{//comment\r\nName://comment\r\ntrue//comment after true'' + StringUtils.CarriageReturn +\r\n@'',//comment after comma'' + StringUtils.CarriageReturnLineFeed + \r\n@''''''ExpiryDate''''://comment''  + StringUtils.LineFeed + \r\n@''new '' + StringUtils.LineFeed +\r\n@''Date\r\n(//comment\r\nnull//comment\r\n),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': //comment\r\n[//comment\r\n\r\n          ''''Small''''//comment\r\n]//comment\r\n}//comment \r\n//comment 1 ''", span="2625-2643"];
m3_1706 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2645-2645"];
m3_1707 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2647-2647"];
m3_1708 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2648-2648"];
m3_1709 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(''comment*//*hi*/'', reader.Value)", span="2649-2649"];
m3_1710 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(2, reader.LineNumber)", span="2650-2650"];
m3_1711 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2652-2652"];
m3_1712 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(2, reader.LineNumber)", span="2653-2653"];
m3_1713 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2654-2654"];
m3_1714 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2656-2656"];
m3_1715 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2657-2657"];
m3_1716 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="2658-2658"];
m3_1717 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2660-2660"];
m3_1718 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2661-2661"];
m3_1719 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(''Name'', reader.Value)", span="2662-2662"];
m3_1720 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="2663-2663"];
m3_1721 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2665-2665"];
m3_1722 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2666-2666"];
m3_1723 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(4, reader.LineNumber)", span="2667-2667"];
m3_1724 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2669-2669"];
m3_1725 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2670-2670"];
m3_1726 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(true, reader.Value)", span="2671-2671"];
m3_1727 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(4, reader.LineNumber)", span="2672-2672"];
m3_1728 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2674-2674"];
m3_1729 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2675-2675"];
m3_1730 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(''comment after true'', reader.Value)", span="2676-2676"];
m3_1731 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="2677-2677"];
m3_1732 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2679-2679"];
m3_1733 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2680-2680"];
m3_1734 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(''comment after comma'', reader.Value)", span="2681-2681"];
m3_1735 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(6, reader.LineNumber)", span="2682-2682"];
m3_1736 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2684-2684"];
m3_1737 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2685-2685"];
m3_1738 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(''ExpiryDate'', reader.Value)", span="2686-2686"];
m3_1739 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(6, reader.LineNumber)", span="2687-2687"];
m3_1740 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2689-2689"];
m3_1741 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2690-2690"];
m3_1742 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(7, reader.LineNumber)", span="2691-2691"];
m3_1743 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2693-2693"];
m3_1744 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2694-2694"];
m3_1745 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(9, reader.LineNumber)", span="2695-2695"];
m3_1746 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2696-2696"];
m3_1747 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2698-2698"];
m3_1748 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2699-2699"];
m3_1749 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2701-2701"];
m3_1750 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2702-2702"];
m3_1751 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(10, reader.LineNumber)", span="2703-2703"];
m3_1752 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2705-2705"];
m3_1753 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2706-2706"];
m3_1754 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(11, reader.LineNumber)", span="2707-2707"];
m3_1755 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2709-2709"];
m3_1756 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2710-2710"];
m3_1757 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(11, reader.LineNumber)", span="2711-2711"];
m3_1758 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2713-2713"];
m3_1759 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2714-2714"];
m3_1760 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(''Price'', reader.Value)", span="2715-2715"];
m3_1761 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2717-2717"];
m3_1762 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2718-2718"];
m3_1763 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2720-2720"];
m3_1764 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2721-2721"];
m3_1765 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(''Sizes'', reader.Value)", span="2722-2722"];
m3_1766 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2724-2724"];
m3_1767 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2725-2725"];
m3_1768 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2727-2727"];
m3_1769 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2728-2728"];
m3_1770 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2730-2730"];
m3_1771 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2731-2731"];
m3_1772 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2733-2733"];
m3_1773 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2734-2734"];
m3_1774 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2736-2736"];
m3_1775 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2737-2737"];
m3_1776 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2739-2739"];
m3_1777 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2740-2740"];
m3_1778 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2742-2742"];
m3_1779 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2743-2743"];
m3_1780 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2745-2745"];
m3_1781 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2746-2746"];
m3_1782 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2748-2748"];
m3_1783 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2749-2749"];
m3_1784 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(''comment '', reader.Value)", span="2750-2750"];
m3_1785 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2752-2752"];
m3_1786 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2753-2753"];
m3_1787 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.AreEqual(''comment 1 '', reader.Value)", span="2754-2754"];
m3_1788 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Assert.IsFalse(reader.Read())", span="2756-2756"];
m3_1789 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", span="2623-2623"];
m3_962 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="781-781"];
m3_2124 [cluster="System.Array.Copy(System.Array, int, System.Array, int, int)", file="DataSetConverter.cs", label="Entry System.Array.Copy(System.Array, int, System.Array, int, int)", span="0-0"];
m3_571 [cluster="long.ToString(System.IFormatProvider)", file="DataSetConverter.cs", label="Entry long.ToString(System.IFormatProvider)", span="0-0"];
m3_150 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", span="270-270"];
m3_151 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DataSetConverter.cs", label="string json = ''[1.0,1,9.9,1E-06]''", span="272-272"];
m3_152 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="274-274"];
m3_153 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DataSetConverter.cs", label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="275-275"];
m3_154 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="277-277"];
m3_155 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="278-278"];
m3_156 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="280-280"];
m3_157 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DataSetConverter.cs", label="Assert.AreEqual(1.0m, reader.Value)", span="281-281"];
m3_158 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="282-282"];
m3_159 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="283-283"];
m3_160 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="285-285"];
m3_161 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DataSetConverter.cs", label="Assert.AreEqual(1L, reader.Value)", span="286-286"];
m3_162 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="287-287"];
m3_163 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="288-288"];
m3_164 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="290-290"];
m3_165 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DataSetConverter.cs", label="Assert.AreEqual(9.9m, reader.Value)", span="291-291"];
m3_166 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="292-292"];
m3_167 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="293-293"];
m3_168 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="295-295"];
m3_169 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DataSetConverter.cs", label="Assert.AreEqual(Convert.ToDecimal(1E-06), reader.Value)", span="296-296"];
m3_170 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="297-297"];
m3_171 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="298-298"];
m3_172 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="300-300"];
m3_173 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="301-301"];
m3_174 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", span="270-270"];
m3_2089 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", span="545-545"];
m3_2100 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", span="3207-3207"];
m3_2101 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="DataSetConverter.cs", label=Error, span="3209-3209"];
m3_2103 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="DataSetConverter.cs", label="return _inner.Read(buffer, index, 1);", span="3212-3212"];
m3_2102 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="DataSetConverter.cs", label="throw new Exception(''Read error'');", span="3210-3210"];
m3_2104 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", span="3207-3207"];
m3_1212 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", span="1867-1867"];
m3_1213 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[/*hi*/1/*hi*/,2/*hi*/]''))", span="1869-1869"];
m3_1214 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="DataSetConverter.cs", label="byte[] data = reader.ReadAsBytes()", span="1871-1871"];
m3_1215 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="DataSetConverter.cs", label="Assert.AreEqual(2, data.Length)", span="1872-1872"];
m3_1216 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="DataSetConverter.cs", label="Assert.AreEqual(1, data[0])", span="1873-1873"];
m3_1217 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="DataSetConverter.cs", label="Assert.AreEqual(2, data[1])", span="1874-1874"];
m3_1218 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", span="1867-1867"];
m3_284 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", span="494-494"];
m3_285 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="DataSetConverter.cs", label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n],''", span="496-500"];
m3_286 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="502-502"];
m3_287 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                while (reader.Read())\r\n                {\r\n                }\r\n            }, ''Additional text encountered after finished reading JSON content: ,. Path '', line 5, position 2.'')", span="504-509"];
m3_288 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", span="494-494"];
m3_1571 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", span="2425-2425"];
m3_1572 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="DataSetConverter.cs", label="string json = ''[true ''", span="2427-2427"];
m3_1573 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2428-2428"];
m3_1574 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2430-2430"];
m3_1575 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2431-2431"];
m3_1576 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="DataSetConverter.cs", label="Assert.IsFalse(reader.Read())", span="2432-2432"];
m3_1577 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", span="2425-2425"];
m3_659 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", span="1072-1072"];
m3_660 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="DataSetConverter.cs", label="string helloWorld = ''Hello world!''", span="1074-1074"];
m3_661 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="DataSetConverter.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1075-1075"];
m3_662 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="DataSetConverter.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''''' + Convert.ToBase64String(helloWorldData)))", span="1077-1077"];
m3_663 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unterminated string. Expected delimiter: '. Path '', line 1, position 17.'')", span="1079-1079"];
m3_664 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", span="1072-1072"];
m3_1275 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="DataSetConverter.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0"];
m3_2115 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", span="3264-3264"];
m3_2116 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="DataSetConverter.cs", label="int toReturn = Math.Min(count, bytesPerRead)", span="3266-3266"];
m3_2119 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="DataSetConverter.cs", label="Array.Copy(bytes, totalBytesRead, buffer, offset, toReturn)", span="3270-3270"];
m3_2117 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="DataSetConverter.cs", label="toReturn = Math.Min(toReturn, bytes.Length - totalBytesRead)", span="3267-3267"];
m3_2118 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="DataSetConverter.cs", label="toReturn > 0", span="3268-3268"];
m3_2120 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="DataSetConverter.cs", label="totalBytesRead += toReturn", span="3273-3273"];
m3_2121 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="DataSetConverter.cs", label="return toReturn;", span="3274-3274"];
m3_2122 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", span="3264-3264"];
m3_11 [cluster="Unk.AreEqual", file="DataSetConverter.cs", label="Entry Unk.AreEqual", span=""];
m3_956 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="357-357"];
m3_38 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DataSetConverter.cs", label="JObject o = JObject.Parse(json)", span="117-117"];
m3_30 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="105-105"];
m3_31 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DataSetConverter.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="107-107"];
m3_32 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Integer, jsonTextReader.TokenType)", span="108-108"];
m3_33 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(BigInteger), jsonTextReader.ValueType)", span="109-109"];
m3_34 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DataSetConverter.cs", label="Assert.AreEqual(BigInteger.Parse(''333333333333333333333333333333333333333''), jsonTextReader.Value)", span="110-110"];
m3_35 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DataSetConverter.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="112-112"];
m3_36 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="113-113"];
m3_37 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DataSetConverter.cs", label="Assert.IsFalse(jsonTextReader.Read())", span="115-115"];
m3_39 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DataSetConverter.cs", label="var i = (BigInteger)((JValue)o[''ChildId'']).Value", span="118-118"];
m3_40 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DataSetConverter.cs", label="Assert.AreEqual(BigInteger.Parse(''333333333333333333333333333333333333333''), i)", span="119-119"];
m3_41 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", span="86-86"];
m3_1406 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", span="2155-2155"];
m3_1407 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nul''))", span="2157-2157"];
m3_1408 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing null value. Path '', line 0, position 0.'')", span="2159-2159"];
m3_1409 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", span="2155-2155"];
m3_1891 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", span="2910-2910"];
m3_1892 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="DataSetConverter.cs", label="string json = ''[[]]''", span="2912-2912"];
m3_1893 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                MaxDepth = 1\r\n            }", span="2914-2917"];
m3_1894 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2919-2919"];
m3_1895 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'')", span="2921-2921"];
m3_1896 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", span="2910-2910"];
m3_1434 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", span="2187-2187"];
m3_1435 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/sdf''))", span="2189-2189"];
m3_1436 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing comment. Expected: *, got s. Path '', line 1, position 1.'')", span="2191-2191"];
m3_1437 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", span="2187-2187"];
m3_45 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", span="124-124"];
m3_46 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="DataSetConverter.cs", label="string json = @''{\r\n    ChildId: 333333333333333333333333333333333333333\r\n}''", span="126-128"];
m3_47 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="DataSetConverter.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="130-130"];
m3_48 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="DataSetConverter.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="132-132"];
m3_49 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="133-133"];
m3_50 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="DataSetConverter.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="135-135"];
m3_51 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="136-136"];
m3_52 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''JSON integer 333333333333333333333333333333333333333 is too large or small for an Int32. Path 'ChildId', line 2, position 53.'')", span="138-138"];
m3_53 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="DataSetConverter.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="140-140"];
m3_54 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="141-141"];
m3_55 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="DataSetConverter.cs", label="Assert.IsFalse(jsonTextReader.Read())", span="143-143"];
m3_56 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", span="124-124"];
m3_1665 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", span="2558-2558"];
m3_1666 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="string json = @''/*comment*/{/*comment*/Name:/*comment*/true/*comment*/,/*comment*/\r\n        ''''ExpiryDate'''':/*comment*/new\r\n'' + StringUtils.LineFeed +\r\n                          @''Date\r\n(/*comment*/null/*comment*/),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''':/*comment*/[/*comment*/\r\n          ''''Small''''/*comment*/]/*comment*/}/*comment*/''", span="2560-2567"];
m3_1667 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2569-2569"];
m3_1668 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2571-2571"];
m3_1669 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2572-2572"];
m3_1670 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2574-2574"];
m3_1671 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2575-2575"];
m3_1672 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2577-2577"];
m3_1673 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2578-2578"];
m3_1674 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2580-2580"];
m3_1675 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2581-2581"];
m3_1676 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="Assert.AreEqual(''Name'', reader.Value)", span="2582-2582"];
m3_1677 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2584-2584"];
m3_1678 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2585-2585"];
m3_1679 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2587-2587"];
m3_1680 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2588-2588"];
m3_1681 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="Assert.AreEqual(true, reader.Value)", span="2589-2589"];
m3_1682 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2591-2591"];
m3_1683 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2592-2592"];
m3_1684 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2594-2594"];
m3_1685 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2595-2595"];
m3_1686 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2597-2597"];
m3_1687 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2598-2598"];
m3_1688 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="Assert.AreEqual(''ExpiryDate'', reader.Value)", span="2599-2599"];
m3_1689 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2601-2601"];
m3_1690 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2602-2602"];
m3_1691 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2604-2604"];
m3_1692 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2605-2605"];
m3_1693 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="2606-2606"];
m3_1694 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2607-2607"];
m3_1695 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2609-2609"];
m3_1696 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2610-2610"];
m3_1697 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2612-2612"];
m3_1698 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2613-2613"];
m3_1699 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2615-2615"];
m3_1700 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2616-2616"];
m3_1701 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2618-2618"];
m3_1702 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2619-2619"];
m3_1703 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", span="2558-2558"];
m3_576 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", span="943-943"];
m3_577 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="DataSetConverter.cs", label="long i = int.MinValue", span="945-945"];
m3_578 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="947-947"];
m3_581 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="DataSetConverter.cs", label="Assert.AreEqual(i, reader.Value)", span="950-950"];
m3_584 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="DataSetConverter.cs", label="long total = -j + i", span="954-954"];
m3_579 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="DataSetConverter.cs", label="reader.Read()", span="948-948"];
m3_580 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="949-949"];
m3_585 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n                {\r\n                    reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)));\r\n                    reader.ReadAsInt32();\r\n                }, ''JSON integer '' + total + '' is too large or small for an Int32. Path '', line 1, position 11.'')", span="955-959"];
m3_582 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="DataSetConverter.cs", label="int j = 1", span="952-952"];
m3_583 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="DataSetConverter.cs", label="j < 1000", span="952-952"];
m3_586 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="DataSetConverter.cs", label="j++", span="952-952"];
m3_587 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", span="943-943"];
m3_101 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", span="205-205"];
m3_102 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="DataSetConverter.cs", label="string json = @''{\r\n    ChildId: '\/Date(9467082_PIE_340000-0631)\/'\r\n}''", span="207-209"];
m3_103 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="DataSetConverter.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="211-211"];
m3_104 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="DataSetConverter.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="213-213"];
m3_105 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="214-214"];
m3_106 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="DataSetConverter.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="216-216"];
m3_107 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="217-217"];
m3_108 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="DataSetConverter.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="219-219"];
m3_109 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="220-220"];
m3_110 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="DataSetConverter.cs", label="Assert.AreEqual(@''/Date(9467082_PIE_340000-0631)/'', jsonTextReader.Value)", span="221-221"];
m3_111 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="DataSetConverter.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="223-223"];
m3_112 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="224-224"];
m3_113 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="DataSetConverter.cs", label="Assert.IsFalse(jsonTextReader.Read())", span="226-226"];
m3_114 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", span="205-205"];
m3_832 [cluster="int.ToString()", file="DataSetConverter.cs", label="Entry int.ToString()", span="0-0"];
m3_1185 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", span="1831-1831"];
m3_1186 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1833-1833"];
m3_1187 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="DataSetConverter.cs", label="Assert.IsNull(reader.ReadAsDateTimeOffset())", span="1835-1835"];
m3_1188 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1836-1836"];
m3_1189 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", span="1831-1831"];
m3_2029 [cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="DataSetConverter.cs", label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0"];
m3_87 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", span="176-176"];
m3_88 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="DataSetConverter.cs", label="string json = @''{\r\n    ChildId: '123'\r\n}''", span="178-180"];
m3_89 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="DataSetConverter.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="182-182"];
m3_90 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="DataSetConverter.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="184-184"];
m3_91 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="185-185"];
m3_92 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="DataSetConverter.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="187-187"];
m3_93 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="188-188"];
m3_94 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="DataSetConverter.cs", label="jsonTextReader.ReadAsBytes()", span="192-192"];
m3_96 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="DataSetConverter.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="198-198"];
m3_97 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="199-199"];
m3_98 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="DataSetConverter.cs", label="Assert.IsFalse(jsonTextReader.Read())", span="201-201"];
m3_95 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="DataSetConverter.cs", label=FormatException, span="194-194"];
m3_99 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", span="176-176"];
m3_2053 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", span="3202-3202"];
m3_2098 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="DataSetConverter.cs", label="_inner = inner", span="3204-3204"];
m3_2099 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", span="3202-3202"];
m3_517 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="381-381"];
m3_637 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", span="1048-1048"];
m3_638 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="DataSetConverter.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\u123''))", span="1050-1050"];
m3_639 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing unicode character. Path '', line 1, position 4.'')", span="1052-1052"];
m3_640 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", span="1048-1048"];
m3_1118 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", span="1734-1734"];
m3_1119 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DataSetConverter.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1736-1736"];
m3_1120 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DataSetConverter.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1737-1737"];
m3_1121 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DataSetConverter.cs", label="Assert.IsTrue(jsonReader.Read())", span="1739-1739"];
m3_1122 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1740-1740"];
m3_1123 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DataSetConverter.cs", label="jsonReader.Read()", span="1742-1742"];
m3_1124 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1743-1743"];
m3_1125 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1744-1744"];
m3_1126 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DataSetConverter.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1745-1745"];
m3_1127 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DataSetConverter.cs", label="jsonReader.Read()", span="1747-1747"];
m3_1128 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1748-1748"];
m3_1129 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1749-1749"];
m3_1130 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DataSetConverter.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1750-1750"];
m3_1131 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DataSetConverter.cs", label="jsonReader.Read()", span="1752-1752"];
m3_1132 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1753-1753"];
m3_1133 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DataSetConverter.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1754-1754"];
m3_1134 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DataSetConverter.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1755-1755"];
m3_1135 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DataSetConverter.cs", label="Assert.IsTrue(jsonReader.Read())", span="1757-1757"];
m3_1136 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1758-1758"];
m3_1137 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DataSetConverter.cs", label="Assert.IsFalse(jsonReader.Read())", span="1760-1760"];
m3_1138 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", span="1734-1734"];
m3_961 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="365-365"];
m3_775 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", span="1251-1251"];
m3_776 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DataSetConverter.cs", label="string input = ''{value:'Purple\\r \\n monkey\\'s:\\tdishwasher'}''", span="1253-1253"];
m3_777 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DataSetConverter.cs", label="StringReader sr = new StringReader(input)", span="1255-1255"];
m3_778 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DataSetConverter.cs", label="JsonReader jsonReader = new JsonTextReader(sr)", span="1257-1257"];
m3_779 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DataSetConverter.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1259-1259"];
m3_780 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DataSetConverter.cs", label="jsonReader.Read()", span="1261-1261"];
m3_781 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonReader.TokenType)", span="1262-1262"];
m3_782 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DataSetConverter.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1263-1263"];
m3_783 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DataSetConverter.cs", label="jsonReader.Read()", span="1265-1265"];
m3_784 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonReader.TokenType)", span="1266-1266"];
m3_785 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DataSetConverter.cs", label="Assert.AreEqual(1, jsonReader.Depth)", span="1267-1267"];
m3_786 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DataSetConverter.cs", label="jsonReader.Read()", span="1269-1269"];
m3_787 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DataSetConverter.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="1270-1270"];
m3_788 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DataSetConverter.cs", label="Assert.AreEqual(''Purple\r \n monkey's:\tdishwasher'', jsonReader.Value)", span="1271-1271"];
m3_789 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DataSetConverter.cs", label="Assert.AreEqual('\'', jsonReader.QuoteChar)", span="1272-1272"];
m3_790 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DataSetConverter.cs", label="Assert.AreEqual(1, jsonReader.Depth)", span="1273-1273"];
m3_791 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DataSetConverter.cs", label="jsonReader.Read()", span="1275-1275"];
m3_792 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonReader.TokenType)", span="1276-1276"];
m3_793 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DataSetConverter.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1277-1277"];
m3_794 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", span="1251-1251"];
m3_955 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="884-884"];
m3_1845 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", span="2844-2844"];
m3_1846 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="double d", span="2846-2846"];
m3_1847 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="d = Convert.ToDouble(''6.0221418e23'', CultureInfo.InvariantCulture)", span="2848-2848"];
m3_1848 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="Assert.AreEqual(''6,0221418E+23'', d.ToString(new CultureInfo(''fr-FR'')))", span="2850-2850"];
m3_1849 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="Assert.AreEqual(''602214180000000000000000'', d.ToString(''0.#############################################################################''))", span="2851-2851"];
m3_1850 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="string json = @''[0e-10,0E-10,0.25e-5,0.3e10,6.0221418e23]''", span="2853-2853"];
m3_1851 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2855-2855"];
m3_1869 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(json))", span="2882-2882"];
m3_1852 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="reader.Read()", span="2857-2857"];
m3_1853 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="reader.Read()", span="2859-2859"];
m3_1854 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2860-2860"];
m3_1855 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="Assert.AreEqual(0d, reader.Value)", span="2861-2861"];
m3_1856 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="reader.Read()", span="2863-2863"];
m3_1857 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2864-2864"];
m3_1858 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="Assert.AreEqual(0d, reader.Value)", span="2865-2865"];
m3_1859 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="reader.Read()", span="2867-2867"];
m3_1860 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2868-2868"];
m3_1861 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="Assert.AreEqual(0.0000025d, reader.Value)", span="2869-2869"];
m3_1862 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="reader.Read()", span="2871-2871"];
m3_1863 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2872-2872"];
m3_1864 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="Assert.AreEqual(3000000000d, reader.Value)", span="2873-2873"];
m3_1865 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="reader.Read()", span="2875-2875"];
m3_1866 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2876-2876"];
m3_1867 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="2877-2877"];
m3_1868 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="reader.Read()", span="2879-2879"];
m3_1870 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="reader.Read()", span="2884-2884"];
m3_1871 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="reader.ReadAsDecimal()", span="2886-2886"];
m3_1872 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2887-2887"];
m3_1873 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="Assert.AreEqual(0m, reader.Value)", span="2888-2888"];
m3_1874 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="reader.ReadAsDecimal()", span="2890-2890"];
m3_1875 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2891-2891"];
m3_1876 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="Assert.AreEqual(0m, reader.Value)", span="2892-2892"];
m3_1877 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="reader.ReadAsDecimal()", span="2894-2894"];
m3_1878 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2895-2895"];
m3_1879 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="Assert.AreEqual(0.0000025m, reader.Value)", span="2896-2896"];
m3_1880 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="reader.ReadAsDecimal()", span="2898-2898"];
m3_1881 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2899-2899"];
m3_1882 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="Assert.AreEqual(3000000000m, reader.Value)", span="2900-2900"];
m3_1883 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="reader.ReadAsDecimal()", span="2902-2902"];
m3_1884 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2903-2903"];
m3_1885 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="Assert.AreEqual(602214180000000000000000m, reader.Value)", span="2904-2904"];
m3_1886 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="reader.Read()", span="2906-2906"];
m3_1887 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", span="2844-2844"];
m3_485 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", span="804-804"];
m3_486 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="DataSetConverter.cs", label="string s = new string('a', 10000)", span="806-806"];
m3_487 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="DataSetConverter.cs", label="JsonReader reader = new JsonTextReader(new StringReader(''''' + s + '''''))", span="807-807"];
m3_489 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="DataSetConverter.cs", label="Assert.AreEqual(s, reader.Value)", span="810-810"];
m3_488 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="DataSetConverter.cs", label="reader.Read()", span="808-808"];
m3_490 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", span="804-804"];
m3_2113 [cluster="Newtonsoft.Json.Tests.SlowStream.Flush()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.Flush()", span="3249-3249"];
m3_2114 [cluster="Newtonsoft.Json.Tests.SlowStream.Flush()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.Flush()", span="3249-3249"];
m3_207 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", span="351-351"];
m3_208 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="DataSetConverter.cs", label="string json = @''{ ''''MATHEMATICAL ITALIC CAPITAL ALPHA'''': ''''\uD835\uDEE2'''' }''", span="353-353"];
m3_209 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="355-355"];
m3_210 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="357-357"];
m3_211 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="358-358"];
m3_212 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="360-360"];
m3_213 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="361-361"];
m3_214 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="DataSetConverter.cs", label="string s = reader.Value.ToString()", span="363-363"];
m3_215 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="DataSetConverter.cs", label="Assert.AreEqual(2, s.Length)", span="364-364"];
m3_216 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="DataSetConverter.cs", label="StringInfo stringInfo = new StringInfo(s)", span="366-366"];
m3_217 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="DataSetConverter.cs", label="Assert.AreEqual(1, stringInfo.LengthInTextElements)", span="367-367"];
m3_218 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", span="351-351"];
m3_492 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", span="814-814"];
m3_493 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="DataSetConverter.cs", label="int valueCount = 10000", span="816-816"];
m3_494 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="DataSetConverter.cs", label="StringWriter sw = new StringWriter()", span="817-817"];
m3_498 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="DataSetConverter.cs", label="i < valueCount", span="820-820"];
m3_506 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="DataSetConverter.cs", label="i < valueCount", span="830-830"];
m3_495 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="DataSetConverter.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="818-818"];
m3_502 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="DataSetConverter.cs", label="string json = sw.ToString()", span="826-826"];
m3_496 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="DataSetConverter.cs", label="writer.WriteStartArray()", span="819-819"];
m3_499 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="DataSetConverter.cs", label="writer.WriteValue(i)", span="822-822"];
m3_501 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="DataSetConverter.cs", label="writer.WriteEndArray()", span="824-824"];
m3_497 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="DataSetConverter.cs", label="int i = 0", span="820-820"];
m3_500 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="DataSetConverter.cs", label="i++", span="820-820"];
m3_503 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="828-828"];
m3_504 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="829-829"];
m3_507 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="832-832"];
m3_508 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="DataSetConverter.cs", label="Assert.AreEqual((long)i, reader.Value)", span="833-833"];
m3_510 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="835-835"];
m3_511 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="DataSetConverter.cs", label="Assert.IsFalse(reader.Read())", span="836-836"];
m3_505 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="DataSetConverter.cs", label="int i = 0", span="830-830"];
m3_509 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="DataSetConverter.cs", label="i++", span="830-830"];
m3_512 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", span="814-814"];
m3_2090 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", span="3170-3170"];
m3_2091 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="DataSetConverter.cs", label="string json = @''{\r\n  ''''frameworks'''': {\r\n    ''''dnxcore50'''': {\r\n      ''''dependencies'''': {\r\n        ''''System.Xml.ReaderWriter'''': {\r\n          ''''source'''': !!! !!!\r\n        }\r\n      }\r\n    }\r\n  }\r\n}''", span="3172-3182"];
m3_2092 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () =>\r\n                {\r\n                    JsonTextReader reader = new JsonTextReader(new StringReader(json));\r\n                    while (reader.Read())\r\n                    {\r\n                    }\r\n                },\r\n                ''Unexpected character encountered while parsing value: !. Path 'frameworks.dnxcore50.dependencies.['System.Xml.ReaderWriter'].source', line 6, position 21.'')", span="3184-3192"];
m3_2093 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", span="3170-3170"];
m3_728 [cluster="System.IO.StringReader.ReadLine()", file="DataSetConverter.cs", label="Entry System.IO.StringReader.ReadLine()", span="0-0"];
m3_130 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="326-326"];
m3_1602 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", span="2466-2466"];
m3_1603 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="DataSetConverter.cs", label="string json = ''[]''", span="2468-2468"];
m3_1604 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2469-2469"];
m3_1605 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2471-2471"];
m3_1606 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2472-2472"];
m3_1607 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2474-2474"];
m3_1608 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2475-2475"];
m3_1609 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", span="2466-2466"];
m3_2123 [cluster="System.Math.Min(int, int)", file="DataSetConverter.cs", label="Entry System.Math.Min(int, int)", span="0-0"];
m3_44 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="359-359"];
m3_244 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="DataSetConverter.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m3_513 [cluster="System.IO.StringWriter.StringWriter()", file="DataSetConverter.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m3_550 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", span="887-887"];
m3_551 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="DataSetConverter.cs", label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''e1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''e2'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$ref'''': ''''1''''\r\n  },\r\n  {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n]''", span="889-906"];
m3_552 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="908-908"];
m3_553 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="DataSetConverter.cs", label="int i = 0", span="913-913"];
m3_555 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="DataSetConverter.cs", label="reader.Read()", span="915-915"];
m3_557 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="DataSetConverter.cs", label="reader.Read()", span="918-918"];
m3_558 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="919-919"];
m3_554 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="DataSetConverter.cs", label="i < 15", span="913-913"];
m3_556 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="DataSetConverter.cs", label="i++", span="913-913"];
m3_559 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", span="887-887"];
m3_220 [cluster="System.Globalization.StringInfo.StringInfo(string)", file="DataSetConverter.cs", label="Entry System.Globalization.StringInfo.StringInfo(string)", span="0-0"];
m3_757 [cluster="Unk.AreEquivalent", file="DataSetConverter.cs", label="Entry Unk.AreEquivalent", span=""];
m3_1014 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", span="1585-1585"];
m3_1015 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="string json =\r\n                @''[0.0,0.0,0.1,1.0,1.000001,1E-06,4.94065645841247E-324,Infinity,-Infinity,NaN,1.7976931348623157E+308,-1.7976931348623157E+308,Infinity,-Infinity,NaN,0e-10,0.25e-5,0.3e10]''", span="1587-1588"];
m3_1016 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="JsonReader jsonReader = new JsonTextReader(new StringReader(json))", span="1590-1590"];
m3_1017 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="jsonReader.Read()", span="1592-1592"];
m3_1018 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1593-1593"];
m3_1019 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="jsonReader.Read()", span="1595-1595"];
m3_1020 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1596-1596"];
m3_1021 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(0.0, jsonReader.Value)", span="1597-1597"];
m3_1022 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="jsonReader.Read()", span="1599-1599"];
m3_1023 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1600-1600"];
m3_1024 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(0.0, jsonReader.Value)", span="1601-1601"];
m3_1025 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="jsonReader.Read()", span="1603-1603"];
m3_1026 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1604-1604"];
m3_1027 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(0.1, jsonReader.Value)", span="1605-1605"];
m3_1028 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="jsonReader.Read()", span="1607-1607"];
m3_1029 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1608-1608"];
m3_1030 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(1.0, jsonReader.Value)", span="1609-1609"];
m3_1031 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="jsonReader.Read()", span="1611-1611"];
m3_1032 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1612-1612"];
m3_1033 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(1.000001, jsonReader.Value)", span="1613-1613"];
m3_1034 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="jsonReader.Read()", span="1615-1615"];
m3_1035 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1616-1616"];
m3_1036 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(1E-06, jsonReader.Value)", span="1617-1617"];
m3_1037 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="jsonReader.Read()", span="1619-1619"];
m3_1038 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1620-1620"];
m3_1039 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(4.94065645841247E-324, jsonReader.Value)", span="1621-1621"];
m3_1040 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="jsonReader.Read()", span="1623-1623"];
m3_1041 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1624-1624"];
m3_1042 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(double.PositiveInfinity, jsonReader.Value)", span="1625-1625"];
m3_1043 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="jsonReader.Read()", span="1627-1627"];
m3_1044 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1628-1628"];
m3_1045 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(double.NegativeInfinity, jsonReader.Value)", span="1629-1629"];
m3_1046 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="jsonReader.Read()", span="1631-1631"];
m3_1047 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1632-1632"];
m3_1048 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(double.NaN, jsonReader.Value)", span="1633-1633"];
m3_1049 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="jsonReader.Read()", span="1635-1635"];
m3_1050 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1636-1636"];
m3_1051 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(double.MaxValue, jsonReader.Value)", span="1637-1637"];
m3_1052 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="jsonReader.Read()", span="1639-1639"];
m3_1053 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1640-1640"];
m3_1054 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(double.MinValue, jsonReader.Value)", span="1641-1641"];
m3_1055 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="jsonReader.Read()", span="1643-1643"];
m3_1056 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1644-1644"];
m3_1057 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(double.PositiveInfinity, jsonReader.Value)", span="1645-1645"];
m3_1058 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="jsonReader.Read()", span="1647-1647"];
m3_1059 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1648-1648"];
m3_1060 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(double.NegativeInfinity, jsonReader.Value)", span="1649-1649"];
m3_1061 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="jsonReader.Read()", span="1651-1651"];
m3_1062 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1652-1652"];
m3_1063 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(double.NaN, jsonReader.Value)", span="1653-1653"];
m3_1064 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="jsonReader.Read()", span="1655-1655"];
m3_1065 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1656-1656"];
m3_1066 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(0d, jsonReader.Value)", span="1657-1657"];
m3_1067 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="jsonReader.Read()", span="1659-1659"];
m3_1068 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1660-1660"];
m3_1069 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(0.0000025d, jsonReader.Value)", span="1661-1661"];
m3_1070 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="jsonReader.Read()", span="1663-1663"];
m3_1071 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1664-1664"];
m3_1072 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(3000000000d, jsonReader.Value)", span="1665-1665"];
m3_1073 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="jsonReader.Read()", span="1667-1667"];
m3_1074 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1668-1668"];
m3_1075 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", span="1585-1585"];
m3_2106 [cluster="System.IO.TextReader.Read(char[], int, int)", file="DataSetConverter.cs", label="Entry System.IO.TextReader.Read(char[], int, int)", span="0-0"];
m3_2094 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="3185-3191"];
m3_59 [cluster="lambda expression", file="DataSetConverter.cs", label="jsonTextReader.ReadAsInt32()", span="138-138"];
m3_58 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="138-138"];
m3_60 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="138-138"];
m3_76 [cluster="lambda expression", file="DataSetConverter.cs", label="jsonTextReader.ReadAsInt32()", span="161-161"];
m3_79 [cluster="lambda expression", file="DataSetConverter.cs", label="jsonTextReader.ReadAsInt32()", span="163-163"];
m3_82 [cluster="lambda expression", file="DataSetConverter.cs", label="jsonTextReader.ReadAsInt32()", span="165-165"];
m3_85 [cluster="lambda expression", file="DataSetConverter.cs", label="jsonTextReader.ReadAsInt32()", span="167-167"];
m3_75 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="161-161"];
m3_78 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="163-163"];
m3_81 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="165-165"];
m3_84 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="167-167"];
m3_77 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="161-161"];
m3_80 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="163-163"];
m3_83 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="165-165"];
m3_86 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="167-167"];
m3_125 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.Read()", span="236-236"];
m3_124 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="236-236"];
m3_128 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.ReadAsDecimal()", span="240-240"];
m3_127 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="240-240"];
m3_132 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.ReadAsInt32()", span="244-244"];
m3_131 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="244-244"];
m3_126 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="236-236"];
m3_129 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="240-240"];
m3_133 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="244-244"];
m3_148 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.Read()", span="266-266"];
m3_147 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="266-266"];
m3_149 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="266-266"];
m3_185 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.Read()", span="315-315"];
m3_184 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="315-315"];
m3_186 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="315-315"];
m3_290 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.Read()", span="506-506"];
m3_289 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="504-509"];
m3_291 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="504-509"];
m3_308 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.Read()", span="541-541"];
m3_307 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="541-541"];
m3_309 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="541-541"];
m3_321 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.Read()", span="570-570"];
m3_320 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="568-573"];
m3_322 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="568-573"];
m3_475 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="788-788"];
m3_476 [cluster="lambda expression", file="DataSetConverter.cs", label="new JsonTextReader (null)", span="788-788"];
m3_477 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="788-788"];
m3_483 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.Read()", span="800-800"];
m3_482 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="800-800"];
m3_484 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="800-800"];
m3_573 [cluster="lambda expression", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="936-936"];
m3_572 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="934-938"];
m3_574 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.ReadAsInt32()", span="937-937"];
m3_575 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="934-938"];
m3_589 [cluster="lambda expression", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="957-957"];
m3_588 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="955-959"];
m3_590 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.ReadAsInt32()", span="958-958"];
m3_591 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="955-959"];
m3_642 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.Read()", span="1052-1052"];
m3_641 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="1052-1052"];
m3_643 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="1052-1052"];
m3_649 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.Read()", span="1060-1060"];
m3_648 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="1060-1060"];
m3_650 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="1060-1060"];
m3_656 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.ReadAsBytes()", span="1068-1068"];
m3_655 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="1068-1068"];
m3_657 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="1068-1068"];
m3_667 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.ReadAsBytes()", span="1079-1079"];
m3_666 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="1079-1079"];
m3_668 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="1079-1079"];
m3_682 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.Read()", span="1098-1098"];
m3_681 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="1098-1098"];
m3_683 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="1098-1098"];
m3_835 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.ReadAsInt32()", span="1350-1350"];
m3_834 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="1350-1350"];
m3_838 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.ReadAsInt32()", span="1353-1353"];
m3_837 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="1353-1353"];
m3_841 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.ReadAsInt32()", span="1356-1356"];
m3_840 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="1356-1356"];
m3_844 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.ReadAsInt32()", span="1359-1359"];
m3_843 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="1359-1359"];
m3_847 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.ReadAsInt32()", span="1365-1365"];
m3_846 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="1365-1365"];
m3_836 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="1350-1350"];
m3_839 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="1353-1353"];
m3_842 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="1356-1356"];
m3_845 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="1359-1359"];
m3_848 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="1365-1365"];
m3_872 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.ReadAsDecimal()", span="1386-1386"];
m3_871 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="1386-1386"];
m3_875 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.Read()", span="1390-1390"];
m3_874 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="1390-1390"];
m3_878 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.ReadAsDecimal()", span="1399-1399"];
m3_877 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="1399-1399"];
m3_873 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="1386-1386"];
m3_876 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="1390-1390"];
m3_879 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="1399-1399"];
m3_910 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.Read()", span="1428-1428"];
m3_909 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="1428-1428"];
m3_913 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.Read()", span="1439-1439"];
m3_912 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="1439-1439"];
m3_911 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="1428-1428"];
m3_914 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="1439-1439"];
m3_1088 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.Read()", span="1690-1690"];
m3_1087 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="1690-1690"];
m3_1089 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="1690-1690"];
m3_1166 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.Read()", span="1800-1800"];
m3_1165 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="1800-1800"];
m3_1167 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="1800-1800"];
m3_1183 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.ReadAsBytes()", span="1826-1826"];
m3_1182 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="1826-1826"];
m3_1184 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="1826-1826"];
m3_1196 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.ReadAsDecimal()", span="1845-1845"];
m3_1195 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="1845-1845"];
m3_1197 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="1845-1845"];
m3_1203 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.ReadAsBytes()", span="1853-1853"];
m3_1202 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="1853-1853"];
m3_1204 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="1853-1853"];
m3_1210 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.ReadAsDateTimeOffset()", span="1862-1862"];
m3_1209 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="1862-1862"];
m3_1211 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="1862-1862"];
m3_1224 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.ReadAsBytes()", span="1882-1882"];
m3_1223 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="1882-1882"];
m3_1225 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="1882-1882"];
m3_1231 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.ReadAsBytes()", span="1890-1890"];
m3_1230 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="1890-1890"];
m3_1232 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="1890-1890"];
m3_1302 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.ReadAsDateTimeOffset()", span="1999-1999"];
m3_1301 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="1999-1999"];
m3_1303 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="1999-1999"];
m3_1404 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.ReadAsInt32()", span="2151-2151"];
m3_1403 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="2151-2151"];
m3_1405 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="2151-2151"];
m3_1411 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.Read()", span="2159-2159"];
m3_1410 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="2159-2159"];
m3_1412 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="2159-2159"];
m3_1418 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.Read()", span="2167-2167"];
m3_1417 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="2167-2167"];
m3_1419 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="2167-2167"];
m3_1425 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.Read()", span="2175-2175"];
m3_1424 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="2175-2175"];
m3_1426 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="2175-2175"];
m3_1432 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.Read()", span="2183-2183"];
m3_1431 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="2183-2183"];
m3_1433 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="2183-2183"];
m3_1439 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.Read()", span="2191-2191"];
m3_1438 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="2191-2191"];
m3_1440 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="2191-2191"];
m3_1584 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.Read()", span="2441-2441"];
m3_1583 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="2441-2441"];
m3_1585 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="2441-2441"];
m3_1592 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.Read()", span="2450-2450"];
m3_1591 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="2450-2450"];
m3_1593 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="2450-2450"];
m3_1623 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.Read()", span="2496-2496"];
m3_1622 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="2496-2496"];
m3_1624 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="2496-2496"];
m3_1640 [cluster="lambda expression", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2518-2518"];
m3_1639 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="2518-2518"];
m3_1641 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="2518-2518"];
m3_1804 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.Read()", span="2780-2780"];
m3_1803 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="2780-2780"];
m3_1805 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="2780-2780"];
m3_1843 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.Read()", span="2840-2840"];
m3_1842 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="2840-2840"];
m3_1844 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="2840-2840"];
m3_1898 [cluster="lambda expression", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2921-2921"];
m3_1897 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="2921-2921"];
m3_1899 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="2921-2921"];
m3_1930 [cluster="lambda expression", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2937-2937"];
m3_1933 [cluster="lambda expression", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="2955-2955"];
m3_1929 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="2937-2937"];
m3_1932 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="2955-2955"];
m3_1931 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="2937-2937"];
m3_1934 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="2955-2955"];
m3_2055 [cluster="lambda expression", file="DataSetConverter.cs", label="jsonTextReader.Read()", span="3113-3113"];
m3_2058 [cluster="lambda expression", file="DataSetConverter.cs", label="jsonTextReader.Read()", span="3114-3114"];
m3_2061 [cluster="lambda expression", file="DataSetConverter.cs", label="jsonTextReader.Read()", span="3123-3123"];
m3_2064 [cluster="lambda expression", file="DataSetConverter.cs", label="jsonTextReader.Read()", span="3132-3132"];
m3_2067 [cluster="lambda expression", file="DataSetConverter.cs", label="jsonTextReader.Read()", span="3133-3133"];
m3_2070 [cluster="lambda expression", file="DataSetConverter.cs", label="jsonTextReader.Read()", span="3134-3134"];
m3_2054 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="3113-3113"];
m3_2057 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="3114-3114"];
m3_2060 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="3123-3123"];
m3_2063 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="3132-3132"];
m3_2066 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="3133-3133"];
m3_2069 [cluster="lambda expression", file="DataSetConverter.cs", label="Entry lambda expression", span="3134-3134"];
m3_2056 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="3113-3113"];
m3_2059 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="3114-3114"];
m3_2062 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="3123-3123"];
m3_2065 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="3132-3132"];
m3_2068 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="3133-3133"];
m3_2071 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="3134-3134"];
m3_2095 [cluster="lambda expression", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3187-3187"];
m3_2096 [cluster="lambda expression", file="DataSetConverter.cs", label="reader.Read()", span="3188-3188"];
m3_2097 [cluster="lambda expression", file="DataSetConverter.cs", label="Exit lambda expression", span="3185-3191"];
m3_115 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", span="230-230"];
m3_116 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="DataSetConverter.cs", label="string json = ''0aq2dun13.hod''", span="232-232"];
m3_117 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="234-234"];
m3_119 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(json))", span="238-238"];
m3_121 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="DataSetConverter.cs", label="reader = new JsonTextReader(new StringReader(json))", span="242-242"];
m3_118 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected character encountered while parsing number: q. Path '', line 1, position 2.'')", span="236-236"];
m3_120 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDecimal(); }, ''Unexpected character encountered while parsing number: q. Path '', line 1, position 2.'')", span="240-240"];
m3_122 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="DataSetConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsInt32(); }, ''Unexpected character encountered while parsing number: q. Path '', line 1, position 2.'')", span="244-244"];
m3_123 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", span="230-230"];
m3_684 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", span="1102-1102"];
m3_685 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="string newLinesText = StringUtils.CarriageReturn + StringUtils.CarriageReturnLineFeed + StringUtils.LineFeed + StringUtils.CarriageReturnLineFeed + '' '' + StringUtils.CarriageReturn + StringUtils.CarriageReturnLineFeed", span="1104-1104"];
m3_686 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="string json =\r\n                newLinesText\r\n                + ''{'' + newLinesText\r\n                + ''''' + newLinesText\r\n                + ''name1'' + newLinesText\r\n                + ''''' + newLinesText\r\n                + '':'' + newLinesText\r\n                + ''['' + newLinesText\r\n                + ''new'' + newLinesText\r\n                + ''Date'' + newLinesText\r\n                + ''('' + newLinesText\r\n                + ''1'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''null'' + newLinesText\r\n                + ''/*'' + newLinesText\r\n                + ''blah comment'' + newLinesText\r\n                + ''*/'' + newLinesText\r\n                + '')'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''1.1111'' + newLinesText\r\n                + '']'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''name2'' + newLinesText\r\n                + '':'' + newLinesText\r\n                + ''{'' + newLinesText\r\n                + ''}'' + newLinesText\r\n                + ''}'' + newLinesText", span="1106-1132"];
m3_688 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="StringReader sr = new StringReader(newLinesText)", span="1135-1135"];
m3_696 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="Assert.AreEqual(newLinesText + ''name1'' + newLinesText, reader.Value)", span="1147-1147"];
m3_711 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="Assert.AreEqual(newLinesText + ''blah comment'' + newLinesText, reader.Value)", span="1167-1167"];
m3_687 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="int count = 0", span="1134-1134"];
m3_691 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="1141-1141"];
m3_690 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="count++", span="1138-1138"];
m3_689 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="sr.ReadLine() != null", span="1136-1136"];
m3_692 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1142-1142"];
m3_693 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="Assert.AreEqual(7, reader.LineNumber)", span="1143-1143"];
m3_694 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1145-1145"];
m3_695 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="Assert.AreEqual(31, reader.LineNumber)", span="1146-1146"];
m3_697 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1149-1149"];
m3_698 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="Assert.AreEqual(37, reader.LineNumber)", span="1150-1150"];
m3_699 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1152-1152"];
m3_700 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="Assert.AreEqual(55, reader.LineNumber)", span="1153-1153"];
m3_701 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="1154-1154"];
m3_702 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="1155-1155"];
m3_703 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1157-1157"];
m3_704 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="Assert.AreEqual(61, reader.LineNumber)", span="1158-1158"];
m3_705 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="Assert.AreEqual(1L, reader.Value)", span="1159-1159"];
m3_706 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1161-1161"];
m3_707 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="Assert.AreEqual(73, reader.LineNumber)", span="1162-1162"];
m3_708 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="Assert.AreEqual(null, reader.Value)", span="1163-1163"];
m3_709 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1165-1165"];
m3_710 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="Assert.AreEqual(91, reader.LineNumber)", span="1166-1166"];
m3_712 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1169-1169"];
m3_713 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="Assert.AreEqual(97, reader.LineNumber)", span="1170-1170"];
m3_714 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1172-1172"];
m3_715 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="Assert.AreEqual(109, reader.LineNumber)", span="1173-1173"];
m3_716 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1175-1175"];
m3_717 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="Assert.AreEqual(115, reader.LineNumber)", span="1176-1176"];
m3_718 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1178-1178"];
m3_719 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="Assert.AreEqual(133, reader.LineNumber)", span="1179-1179"];
m3_720 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="Assert.AreEqual(''name2'', reader.Value)", span="1180-1180"];
m3_721 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1182-1182"];
m3_722 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="Assert.AreEqual(139, reader.LineNumber)", span="1183-1183"];
m3_723 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1185-1185"];
m3_724 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="Assert.AreEqual(145, reader.LineNumber)", span="1186-1186"];
m3_725 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1188-1188"];
m3_726 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="Assert.AreEqual(151, reader.LineNumber)", span="1189-1189"];
m3_727 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", span="1102-1102"];
m3_632 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", span="1039-1039"];
m3_633 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="DataSetConverter.cs", label="JsonReader reader = new JsonTextReader(new StringReader('''h\0i'''))", span="1041-1041"];
m3_634 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1042-1042"];
m3_635 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="DataSetConverter.cs", label="Assert.AreEqual(''h\0i'', reader.Value)", span="1044-1044"];
m3_636 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", span="1039-1039"];
m3_2125 [cluster="Newtonsoft.Json.Tests.SlowStream.Seek(long, System.IO.SeekOrigin)", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.Seek(long, System.IO.SeekOrigin)", span="3277-3277"];
m3_2126 [cluster="Newtonsoft.Json.Tests.SlowStream.Seek(long, System.IO.SeekOrigin)", file="DataSetConverter.cs", label="throw new NotSupportedException();", span="3279-3279"];
m3_2127 [cluster="Newtonsoft.Json.Tests.SlowStream.Seek(long, System.IO.SeekOrigin)", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.Seek(long, System.IO.SeekOrigin)", span="3277-3277"];
m3_669 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", span="1083-1083"];
m3_670 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="DataSetConverter.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''[  ''))", span="1085-1085"];
m3_671 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="DataSetConverter.cs", label="Assert.IsTrue(reader.Read())", span="1086-1086"];
m3_672 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="DataSetConverter.cs", label="Assert.IsNull(reader.ReadAsBytes())", span="1088-1088"];
m3_673 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="DataSetConverter.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1089-1089"];
m3_674 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", span="1083-1083"];
m3_2135 [file="DataSetConverter.cs", label=jsonTextReader, span=""];
m3_2136 [file="DataSetConverter.cs", label=jsonTextReader, span=""];
m3_2137 [file="DataSetConverter.cs", label=reader, span=""];
m3_2138 [file="DataSetConverter.cs", label=reader, span=""];
m3_2139 [file="DataSetConverter.cs", label=reader, span=""];
m3_2140 [file="DataSetConverter.cs", label="Newtonsoft.Json.Tests.JsonTextReaderTest", span=""];
m3_2141 [file="DataSetConverter.cs", label=reader, span=""];
m3_2142 [file="DataSetConverter.cs", label=reader, span=""];
m3_2143 [file="DataSetConverter.cs", label=reader, span=""];
m3_2144 [file="DataSetConverter.cs", label=reader, span=""];
m3_2145 [file="DataSetConverter.cs", label=total, span=""];
m3_2146 [file="DataSetConverter.cs", label=total, span=""];
m3_2147 [file="DataSetConverter.cs", label=reader, span=""];
m3_2148 [file="DataSetConverter.cs", label=reader, span=""];
m3_2149 [file="DataSetConverter.cs", label=reader, span=""];
m3_2150 [file="DataSetConverter.cs", label=reader, span=""];
m3_2151 [file="DataSetConverter.cs", label=reader, span=""];
m3_2152 [file="DataSetConverter.cs", label=reader, span=""];
m3_2153 [file="DataSetConverter.cs", label=reader, span=""];
m3_2154 [file="DataSetConverter.cs", label=reader, span=""];
m3_2155 [file="DataSetConverter.cs", label=reader, span=""];
m3_2156 [file="DataSetConverter.cs", label=reader, span=""];
m3_2157 [file="DataSetConverter.cs", label=reader, span=""];
m3_2158 [file="DataSetConverter.cs", label=reader, span=""];
m3_2159 [file="DataSetConverter.cs", label=reader, span=""];
m3_2160 [file="DataSetConverter.cs", label=reader, span=""];
m3_2161 [file="DataSetConverter.cs", label=reader, span=""];
m3_2162 [file="DataSetConverter.cs", label=reader, span=""];
m3_2163 [file="DataSetConverter.cs", label=reader, span=""];
m3_2164 [file="DataSetConverter.cs", label=reader, span=""];
m3_2165 [file="DataSetConverter.cs", label=reader, span=""];
m3_2166 [file="DataSetConverter.cs", label=reader, span=""];
m3_2167 [file="DataSetConverter.cs", label=reader, span=""];
m3_2168 [file="DataSetConverter.cs", label=reader, span=""];
m3_2169 [file="DataSetConverter.cs", label=reader, span=""];
m3_2170 [file="DataSetConverter.cs", label=reader, span=""];
m3_2171 [file="DataSetConverter.cs", label=reader, span=""];
m3_2172 [file="DataSetConverter.cs", label=reader, span=""];
m3_2173 [file="DataSetConverter.cs", label=reader, span=""];
m3_2174 [file="DataSetConverter.cs", label=reader, span=""];
m3_2175 [file="DataSetConverter.cs", label=reader, span=""];
m3_2176 [file="DataSetConverter.cs", label=reader, span=""];
m3_2177 [file="DataSetConverter.cs", label=reader, span=""];
m3_2178 [file="DataSetConverter.cs", label=jsonTextReader, span=""];
m3_2179 [file="DataSetConverter.cs", label=json, span=""];
m3_2180 [file="DataSetConverter.cs", label="Newtonsoft.Json.Tests.ToggleReaderError", span=""];
m3_2181 [file="DataSetConverter.cs", label="Newtonsoft.Json.Tests.SlowStream", span=""];
m4_140 [cluster="System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", file="DataTableConverter.cs", label="Entry System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", span="64-64"];
m4_86 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", span="72-72"];
m4_536 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", span="185-185"];
m4_4 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.GetHashCode()", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.ResolverContractKey.GetHashCode()", span="67-67"];
m4_5 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.GetHashCode()", file="DataTableConverter.cs", label="return _resolverType.GetHashCode() ^ _contractType.GetHashCode();", span="69-69"];
m4_6 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.GetHashCode()", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.ResolverContractKey.GetHashCode()", span="67-67"];
m4_107 [cluster="System.Type.IsGenericType()", file="DataTableConverter.cs", label="Entry System.Type.IsGenericType()", span="153-153"];
m4_20 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", span="211-211"];
m4_21 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", color=green, community=0, file="DataTableConverter.cs", label="_sharedCache = shareCache", prediction=215, span="214-214"];
m4_22 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", color=green, community=0, file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", prediction=216, span="211-211"];
m4_23 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetState()", color=green, community=0, file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetState()", prediction=216, span="217-217"];
m4_25 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetState()", color=green, community=0, file="DataTableConverter.cs", label="return _sharedState;", prediction=218, span="221-221"];
m4_24 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetState()", color=green, community=0, file="DataTableConverter.cs", label=_sharedCache, prediction=216, span="219-219"];
m4_28 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="234-234"];
m4_33 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DataTableConverter.cs", label="ResolverContractKey key = new ResolverContractKey(GetType(), type)", span="244-244"];
m4_35 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DataTableConverter.cs", label="cache == null || !cache.TryGetValue(key, out contract)", span="246-246"];
m4_39 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DataTableConverter.cs", label="Dictionary<ResolverContractKey, JsonContract> updatedCache = (cache != null)\r\n                        ? new Dictionary<ResolverContractKey, JsonContract>(cache)\r\n                        : new Dictionary<ResolverContractKey, JsonContract>()", span="254-256"];
m4_41 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DataTableConverter.cs", label="state.ContractCache = updatedCache", span="259-259"];
m4_26 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetState()", color=green, community=0, file="DataTableConverter.cs", label="return _instanceState;", prediction=216, span="225-225"];
m4_27 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetState()", color=green, community=0, file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetState()", prediction=216, span="217-217"];
m4_40 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DataTableConverter.cs", label="updatedCache[key] = contract", span="257-257"];
m4_29 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DataTableConverter.cs", label="type == null", span="236-236"];
m4_30 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DataTableConverter.cs", label="throw new ArgumentNullException(nameof(type));", span="238-238"];
m4_31 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DataTableConverter.cs", label="DefaultContractResolverState state = GetState()", span="241-241"];
m4_32 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DataTableConverter.cs", label="JsonContract contract", span="243-243"];
m4_34 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DataTableConverter.cs", label="Dictionary<ResolverContractKey, JsonContract> cache = state.ContractCache", span="245-245"];
m4_36 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DataTableConverter.cs", label="contract = CreateContract(type)", span="248-248"];
m4_37 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DataTableConverter.cs", label=TypeContractCacheLock, span="251-251"];
m4_38 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DataTableConverter.cs", label="cache = state.ContractCache", span="253-253"];
m4_42 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DataTableConverter.cs", label="return contract;", span="263-263"];
m4_182 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="DataTableConverter.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
m4_139 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="1272-1272"];
m4_580 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DataTableConverter.cs", label="List<MemberInfo> members = GetSerializableMembers(type)", span="1274-1274"];
m4_583 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DataTableConverter.cs", label="JsonPropertyCollection properties = new JsonPropertyCollection(type)", span="1280-1280"];
m4_585 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DataTableConverter.cs", label="JsonProperty property = CreateProperty(member, memberSerialization)", span="1284-1284"];
m4_581 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DataTableConverter.cs", label="members == null", span="1275-1275"];
m4_584 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DataTableConverter.cs", label=members, span="1282-1282"];
m4_582 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DataTableConverter.cs", label="throw new JsonSerializationException(''Null collection of seralizable members returned.'');", span="1277-1277"];
m4_590 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DataTableConverter.cs", label="properties.AddProperty(property)", span="1296-1296"];
m4_591 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DataTableConverter.cs", label="IList<JsonProperty> orderedProperties = properties.OrderBy(p => p.Order ?? -1).ToList()", span="1300-1300"];
m4_586 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DataTableConverter.cs", label="property != null", span="1286-1286"];
m4_589 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DataTableConverter.cs", label="property.PropertyName = state.NameTable.Add(property.PropertyName)", span="1293-1293"];
m4_587 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DataTableConverter.cs", label="DefaultContractResolverState state = GetState()", span="1288-1288"];
m4_588 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DataTableConverter.cs", label="state.NameTable", span="1291-1291"];
m4_592 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DataTableConverter.cs", label="return orderedProperties;", span="1301-1301"];
m4_593 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="1272-1272"];
m4_185 [cluster="System.Type.GetGenericArguments()", file="DataTableConverter.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m4_709 [cluster="System.Type.GetField(string)", file="DataTableConverter.cs", label="Entry System.Type.GetField(string)", span="0-0"];
m4_464 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", span="1013-1013"];
m4_465 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="DataTableConverter.cs", label="JsonPrimitiveContract contract = new JsonPrimitiveContract(objectType)", span="1015-1015"];
m4_466 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="DataTableConverter.cs", label="InitializeContract(contract)", span="1016-1016"];
m4_467 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="DataTableConverter.cs", label="return contract;", span="1018-1018"];
m4_468 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", span="1013-1013"];
m4_238 [cluster="string.FormatWith(System.IFormatProvider, object)", file="DataTableConverter.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m4_13 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(Newtonsoft.Json.Serialization.ResolverContractKey)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.ResolverContractKey.Equals(Newtonsoft.Json.Serialization.ResolverContractKey)", span="82-82"];
m4_15 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(Newtonsoft.Json.Serialization.ResolverContractKey)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.ResolverContractKey.Equals(Newtonsoft.Json.Serialization.ResolverContractKey)", span="82-82"];
m4_298 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", span="70-70"];
m4_347 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", span="239-239"];
m4_271 [cluster="System.Type.GetConstructors(System.Reflection.BindingFlags)", file="DataTableConverter.cs", label="Entry System.Type.GetConstructors(System.Reflection.BindingFlags)", span="0-0"];
m4_596 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="DataTableConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m4_429 [cluster="System.Type.BaseType()", file="DataTableConverter.cs", label="Entry System.Type.BaseType()", span="171-171"];
m4_470 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", span="1026-1026"];
m4_471 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="DataTableConverter.cs", label="JsonLinqContract contract = new JsonLinqContract(objectType)", span="1028-1028"];
m4_472 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="DataTableConverter.cs", label="InitializeContract(contract)", span="1029-1029"];
m4_473 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="DataTableConverter.cs", label="return contract;", span="1031-1031"];
m4_474 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", span="1026-1026"];
m4_43 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="234-234"];
m4_66 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DataTableConverter.cs", label="JsonTypeReflector.GetAttribute<JsonRequiredAttribute>(member) != null", span="316-316"];
m4_552 [cluster="System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", file="DataTableConverter.cs", label="Entry System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", span="0-0"];
m4_46 [cluster="Unk.Contains", file="DataTableConverter.cs", label="Entry Unk.Contains", span=""];
m4_688 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])", span="180-180"];
m4_89 [cluster="System.Collections.Generic.List<T>.Add(T)", file="DataTableConverter.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m4_686 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataMemberAttribute(System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataMemberAttribute(System.Reflection.MemberInfo)", span="91-91"];
m4_541 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="267-267"];
m4_529 [cluster="System.Type.IsSubclassOf(System.Type)", file="DataTableConverter.cs", label="Entry System.Type.IsSubclassOf(System.Type)", span="0-0"];
m4_161 [cluster="System.Type.GetFields(System.Reflection.BindingFlags)", file="DataTableConverter.cs", label="Entry System.Type.GetFields(System.Reflection.BindingFlags)", span="0-0"];
m4_321 [cluster="Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()", span="38-38"];
m4_323 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", span="1367-1367"];
m4_627 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="DataContractAttribute dataContractAttribute = JsonTypeReflector.GetDataContractAttribute(declaringType)", span="1370-1370"];
m4_628 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="MemberInfo memberInfo = attributeProvider as MemberInfo", span="1372-1372"];
m4_633 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="JsonPropertyAttribute propertyAttribute = JsonTypeReflector.GetAttribute<JsonPropertyAttribute>(attributeProvider)", span="1385-1385"];
m4_634 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="JsonRequiredAttribute requiredAttribute = JsonTypeReflector.GetAttribute<JsonRequiredAttribute>(attributeProvider)", span="1386-1386"];
m4_640 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="mappedName = name", span="1401-1401"];
m4_641 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="property.PropertyName = ResolvePropertyName(mappedName)", span="1404-1404"];
m4_642 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="property.UnderlyingName = name", span="1405-1405"];
m4_645 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="property._required = propertyAttribute._required", span="1410-1410"];
m4_646 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="property.Order = propertyAttribute._order", span="1411-1411"];
m4_647 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="property.DefaultValueHandling = propertyAttribute._defaultValueHandling", span="1412-1412"];
m4_650 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="property._required = (dataMemberAttribute.IsRequired) ? Required.AllowNull : Required.Default", span="1418-1418"];
m4_651 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="property.Order = (dataMemberAttribute.Order != -1) ? (int?)dataMemberAttribute.Order : null", span="1419-1419"];
m4_652 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="property.DefaultValueHandling = (!dataMemberAttribute.EmitDefaultValue) ? (DefaultValueHandling?)DefaultValueHandling.Ignore : null", span="1420-1420"];
m4_655 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="property._required = Required.Always", span="1426-1426"];
m4_657 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="property.HasMemberAttribute = hasMemberAttribute", span="1430-1430"];
m4_658 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="bool hasJsonIgnoreAttribute =\r\n                JsonTypeReflector.GetAttribute<JsonIgnoreAttribute>(attributeProvider) != null\r\n                    // automatically ignore extension data dictionary property if it is public\r\n                || JsonTypeReflector.GetAttribute<JsonExtensionDataAttribute>(attributeProvider) != null\r\n#if !(DOTNET || PORTABLE40 || PORTABLE)\r\n                || JsonTypeReflector.GetAttribute<NonSerializedAttribute>(attributeProvider) != null", span="1432-1437"];
m4_659 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="memberSerialization != MemberSerialization.OptIn", span="1441-1441"];
m4_661 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="hasIgnoreDataMemberAttribute = (JsonTypeReflector.GetAttribute<IgnoreDataMemberAttribute>(attributeProvider) != null)", span="1446-1446"];
m4_662 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="property.Ignored = (hasJsonIgnoreAttribute || hasIgnoreDataMemberAttribute)", span="1450-1450"];
m4_663 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="property.Ignored = (hasJsonIgnoreAttribute || !hasMemberAttribute)", span="1455-1455"];
m4_664 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="property.Converter = JsonTypeReflector.GetJsonConverter(attributeProvider)", span="1460-1460"];
m4_665 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="property.MemberConverter = JsonTypeReflector.GetJsonConverter(attributeProvider)", span="1461-1461"];
m4_666 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="DefaultValueAttribute defaultValueAttribute = JsonTypeReflector.GetAttribute<DefaultValueAttribute>(attributeProvider)", span="1463-1463"];
m4_668 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="property.DefaultValue = defaultValueAttribute.Value", span="1466-1466"];
m4_669 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="property.NullValueHandling = (propertyAttribute != null) ? propertyAttribute._nullValueHandling : null", span="1469-1469"];
m4_670 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="property.ReferenceLoopHandling = (propertyAttribute != null) ? propertyAttribute._referenceLoopHandling : null", span="1470-1470"];
m4_671 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="property.ObjectCreationHandling = (propertyAttribute != null) ? propertyAttribute._objectCreationHandling : null", span="1471-1471"];
m4_672 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="property.TypeNameHandling = (propertyAttribute != null) ? propertyAttribute._typeNameHandling : null", span="1472-1472"];
m4_673 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="property.IsReference = (propertyAttribute != null) ? propertyAttribute._isReference : null", span="1473-1473"];
m4_674 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="property.ItemIsReference = (propertyAttribute != null) ? propertyAttribute._itemIsReference : null", span="1475-1475"];
m4_675 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="property.ItemConverter =\r\n                (propertyAttribute != null && propertyAttribute.ItemConverterType != null)\r\n                    ? JsonTypeReflector.CreateJsonConverterInstance(propertyAttribute.ItemConverterType, propertyAttribute.ItemConverterParameters)\r\n                    : null", span="1476-1479"];
m4_676 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="property.ItemReferenceLoopHandling = (propertyAttribute != null) ? propertyAttribute._itemReferenceLoopHandling : null", span="1480-1480"];
m4_677 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="property.ItemTypeNameHandling = (propertyAttribute != null) ? propertyAttribute._itemTypeNameHandling : null", span="1481-1481"];
m4_683 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="memberSerialization == MemberSerialization.Fields", span="1494-1494"];
m4_630 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="dataContractAttribute != null && memberInfo != null", span="1375-1375"];
m4_629 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="DataMemberAttribute dataMemberAttribute", span="1374-1374"];
m4_631 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="dataMemberAttribute = JsonTypeReflector.GetDataMemberAttribute((MemberInfo)memberInfo)", span="1377-1377"];
m4_632 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="dataMemberAttribute = null", span="1381-1381"];
m4_638 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="dataMemberAttribute != null && dataMemberAttribute.Name != null", span="1394-1394"];
m4_639 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="mappedName = dataMemberAttribute.Name", span="1396-1396"];
m4_649 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="dataMemberAttribute != null", span="1416-1416"];
m4_636 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="propertyAttribute != null && propertyAttribute.PropertyName != null", span="1389-1389"];
m4_637 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="mappedName = propertyAttribute.PropertyName", span="1391-1391"];
m4_644 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="propertyAttribute != null", span="1408-1408"];
m4_635 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="string mappedName", span="1388-1388"];
m4_654 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="requiredAttribute != null", span="1424-1424"];
m4_643 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="bool hasMemberAttribute = false", span="1407-1407"];
m4_681 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label=hasMemberAttribute, span="1490-1490"];
m4_648 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="hasMemberAttribute = true", span="1413-1413"];
m4_653 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="hasMemberAttribute = true", span="1421-1421"];
m4_656 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="hasMemberAttribute = true", span="1427-1427"];
m4_660 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="bool hasIgnoreDataMemberAttribute = false", span="1443-1443"];
m4_667 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="defaultValueAttribute != null", span="1464-1464"];
m4_678 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="allowNonPublicAccess = false", span="1483-1483"];
m4_679 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="(DefaultMembersSearchFlags & BindingFlags.NonPublic) == BindingFlags.NonPublic", span="1485-1485"];
m4_680 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="allowNonPublicAccess = true", span="1487-1487"];
m4_682 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="allowNonPublicAccess = true", span="1492-1492"];
m4_684 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="allowNonPublicAccess = true", span="1496-1496"];
m4_685 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", span="1367-1367"];
m4_109 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", span="380-380"];
m4_110 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DataTableConverter.cs", label="JsonObjectContract contract = new JsonObjectContract(objectType)", span="382-382"];
m4_111 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DataTableConverter.cs", label="InitializeContract(contract)", span="383-383"];
m4_114 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DataTableConverter.cs", label="contract.MemberSerialization = JsonTypeReflector.GetObjectMemberSerialization(contract.NonNullableUnderlyingType, ignoreSerializableAttribute)", span="392-392"];
m4_115 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DataTableConverter.cs", label="contract.Properties.AddRange(CreateProperties(contract.NonNullableUnderlyingType, contract.MemberSerialization))", span="393-393"];
m4_116 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DataTableConverter.cs", label="JsonObjectAttribute attribute = JsonTypeReflector.GetCachedAttribute<JsonObjectAttribute>(contract.NonNullableUnderlyingType)", span="395-395"];
m4_118 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DataTableConverter.cs", label="contract.ItemRequired = attribute._itemRequired", span="398-398"];
m4_119 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DataTableConverter.cs", label="contract.IsInstantiable", span="401-401"];
m4_120 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DataTableConverter.cs", label="ConstructorInfo overrideConstructor = GetAttributeConstructor(contract.NonNullableUnderlyingType)", span="403-403"];
m4_122 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DataTableConverter.cs", label="contract.OverrideConstructor = overrideConstructor", span="409-409"];
m4_123 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DataTableConverter.cs", label="contract.CreatorParameters.AddRange(CreateConstructorParameters(overrideConstructor, contract.Properties))", span="411-411"];
m4_124 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DataTableConverter.cs", label="contract.MemberSerialization == MemberSerialization.Fields", span="413-413"];
m4_126 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DataTableConverter.cs", label="contract.DefaultCreator = contract.GetUninitializedObject", span="420-420"];
m4_127 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DataTableConverter.cs", label="contract.DefaultCreator == null || contract.DefaultCreatorNonPublic", span="424-424"];
m4_128 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DataTableConverter.cs", label="ConstructorInfo constructor = GetParameterizedConstructor(contract.NonNullableUnderlyingType)", span="426-426"];
m4_130 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DataTableConverter.cs", label="contract.ParametrizedConstructor = constructor", span="430-430"];
m4_131 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DataTableConverter.cs", label="contract.CreatorParameters.AddRange(CreateConstructorParameters(constructor, contract.Properties))", span="432-432"];
m4_132 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DataTableConverter.cs", label="MemberInfo extensionDataMember = GetExtensionDataMemberForType(contract.NonNullableUnderlyingType)", span="437-437"];
m4_134 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DataTableConverter.cs", label="SetExtensionDataDelegates(contract, extensionDataMember)", span="440-440"];
m4_135 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DataTableConverter.cs", label="return contract;", span="443-443"];
m4_112 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DataTableConverter.cs", label="bool ignoreSerializableAttribute", span="385-385"];
m4_113 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DataTableConverter.cs", label="ignoreSerializableAttribute = IgnoreSerializableAttribute", span="387-387"];
m4_117 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DataTableConverter.cs", label="attribute != null", span="396-396"];
m4_121 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DataTableConverter.cs", label="overrideConstructor != null", span="406-406"];
m4_125 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DataTableConverter.cs", label="JsonTypeReflector.FullyTrusted", span="418-418"];
m4_129 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DataTableConverter.cs", label="constructor != null", span="427-427"];
m4_133 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DataTableConverter.cs", label="extensionDataMember != null", span="438-438"];
m4_136 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", span="380-380"];
m4_144 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", span="626-626"];
m4_276 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", file="DataTableConverter.cs", label="IList<ConstructorInfo> constructors = objectType.GetConstructors(BindingFlags.Public | BindingFlags.Instance).ToList()", span="628-628"];
m4_277 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", file="DataTableConverter.cs", label="constructors.Count == 1", span="630-630"];
m4_278 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", file="DataTableConverter.cs", label="return constructors[0];", span="632-632"];
m4_279 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", file="DataTableConverter.cs", label="return null;", span="636-636"];
m4_280 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", span="626-626"];
m4_47 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", span="121-121"];
m4_0 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", span="61-61"];
m4_1 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", file="DataTableConverter.cs", label="_resolverType = resolverType", span="63-63"];
m4_2 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", file="DataTableConverter.cs", label="_contractType = contractType", span="64-64"];
m4_3 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", span="61-61"];
m4_366 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", span="813-813"];
m4_367 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="onSerializing = null", span="815-815"];
m4_372 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="GetClassHierarchyForType(type)", span="821-821"];
m4_368 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="onSerialized = null", span="816-816"];
m4_385 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="onSerializing = onSerializing ?? new List<SerializationCallback>()", span="847-847"];
m4_369 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="onDeserializing = null", span="817-817"];
m4_389 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="onSerialized = onSerialized ?? new List<SerializationCallback>()", span="853-853"];
m4_370 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="onDeserialized = null", span="818-818"];
m4_393 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="onDeserializing = onDeserializing ?? new List<SerializationCallback>()", span="859-859"];
m4_371 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="onError = null", span="819-819"];
m4_397 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="onDeserialized = onDeserialized ?? new List<SerializationCallback>()", span="865-865"];
m4_401 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="onError = onError ?? new List<SerializationErrorCallback>()", span="871-871"];
m4_373 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="MethodInfo currentOnSerializing = null", span="824-824"];
m4_378 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="bool skipSerializing = ShouldSkipSerializing(baseType)", span="830-830"];
m4_379 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="bool skipDeserialized = ShouldSkipDeserialized(baseType)", span="831-831"];
m4_380 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="baseType.GetMethods(BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)", span="833-833"];
m4_374 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="MethodInfo currentOnSerialized = null", span="825-825"];
m4_384 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="!skipSerializing && IsValidCallback(method, parameters, typeof(OnSerializingAttribute), currentOnSerializing, ref prevAttributeType)", span="845-845"];
m4_375 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="MethodInfo currentOnDeserializing = null", span="826-826"];
m4_388 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="IsValidCallback(method, parameters, typeof(OnSerializedAttribute), currentOnSerialized, ref prevAttributeType)", span="851-851"];
m4_376 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="MethodInfo currentOnDeserialized = null", span="827-827"];
m4_392 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="IsValidCallback(method, parameters, typeof(OnDeserializingAttribute), currentOnDeserializing, ref prevAttributeType)", span="857-857"];
m4_377 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="MethodInfo currentOnError = null", span="828-828"];
m4_396 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="!skipDeserialized && IsValidCallback(method, parameters, typeof(OnDeserializedAttribute), currentOnDeserialized, ref prevAttributeType)", span="863-863"];
m4_400 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="IsValidCallback(method, parameters, typeof(OnErrorAttribute), currentOnError, ref prevAttributeType)", span="869-869"];
m4_381 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="method.ContainsGenericParameters", span="837-837"];
m4_383 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="ParameterInfo[] parameters = method.GetParameters()", span="843-843"];
m4_386 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="onSerializing.Add(JsonContract.CreateSerializationCallback(method))", span="848-848"];
m4_387 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="currentOnSerializing = method", span="849-849"];
m4_390 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="onSerialized.Add(JsonContract.CreateSerializationCallback(method))", span="854-854"];
m4_391 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="currentOnSerialized = method", span="855-855"];
m4_394 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="onDeserializing.Add(JsonContract.CreateSerializationCallback(method))", span="860-860"];
m4_395 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="currentOnDeserializing = method", span="861-861"];
m4_398 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="onDeserialized.Add(JsonContract.CreateSerializationCallback(method))", span="866-866"];
m4_399 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="currentOnDeserialized = method", span="867-867"];
m4_402 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="onError.Add(JsonContract.CreateSerializationErrorCallback(method))", span="872-872"];
m4_403 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="currentOnError = method", span="873-873"];
m4_382 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="Type prevAttributeType = null", span="842-842"];
m4_404 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", span="813-813"];
m4_530 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", span="92-92"];
m4_410 [cluster="Newtonsoft.Json.Serialization.JsonContract.CreateSerializationErrorCallback(System.Reflection.MethodInfo)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonContract.CreateSerializationErrorCallback(System.Reflection.MethodInfo)", span="386-386"];
m4_216 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", span="281-281"];
m4_322 [cluster="Newtonsoft.Json.Serialization.ReflectionAttributeProvider.ReflectionAttributeProvider(object)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.ReflectionAttributeProvider.ReflectionAttributeProvider(object)", span="43-43"];
m4_179 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", span="562-562"];
m4_448 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", span="975-975"];
m4_449 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DataTableConverter.cs", label="JsonArrayContract contract = new JsonArrayContract(objectType)", span="977-977"];
m4_450 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DataTableConverter.cs", label="InitializeContract(contract)", span="978-978"];
m4_451 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DataTableConverter.cs", label="ConstructorInfo overrideConstructor = GetAttributeConstructor(contract.NonNullableUnderlyingType)", span="980-980"];
m4_454 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DataTableConverter.cs", label="Type expectedParameterType = (contract.CollectionItemType != null)\r\n                    ? typeof(IEnumerable<>).MakeGenericType(contract.CollectionItemType)\r\n                    : typeof(IEnumerable)", span="985-987"];
m4_456 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DataTableConverter.cs", label="contract.HasParameterizedCreator = false", span="991-991"];
m4_458 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DataTableConverter.cs", label="contract.HasParameterizedCreator = true", span="995-995"];
m4_459 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DataTableConverter.cs", label="throw new JsonException(''Constructor for '{0}' must have no parameters or a single parameter that implements '{1}'.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType, expectedParameterType));", span="999-999"];
m4_460 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DataTableConverter.cs", label="contract.OverrideCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(overrideConstructor)", span="1002-1002"];
m4_461 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DataTableConverter.cs", label="return contract;", span="1005-1005"];
m4_452 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DataTableConverter.cs", label="overrideConstructor != null", span="982-982"];
m4_453 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DataTableConverter.cs", label="ParameterInfo[] parameters = overrideConstructor.GetParameters()", span="984-984"];
m4_455 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DataTableConverter.cs", label="parameters.Length == 0", span="989-989"];
m4_457 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DataTableConverter.cs", label="parameters.Length == 1 && expectedParameterType.IsAssignableFrom(parameters[0].ParameterType)", span="993-993"];
m4_462 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", span="975-975"];
m4_327 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", span="158-158"];
m4_49 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="DataTableConverter.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m4_218 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateGet<T>(System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateGet<T>(System.Reflection.MemberInfo)", span="38-38"];
m4_607 [cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.DynamicValueProvider(System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DynamicValueProvider.DynamicValueProvider(System.Reflection.MemberInfo)", span="51-51"];
m4_222 [cluster="System.Type.GetMethod(string, System.Type[])", file="DataTableConverter.cs", label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0"];
m4_494 [cluster="Newtonsoft.Json.Serialization.JsonDynamicContract.JsonDynamicContract(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonDynamicContract.JsonDynamicContract(System.Type)", span="77-77"];
m4_237 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
m4_348 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="777-777"];
m4_349 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DataTableConverter.cs", label="List<SerializationCallback> onSerializing", span="779-779"];
m4_354 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DataTableConverter.cs", label="GetCallbackMethodsForType(t, out onSerializing, out onSerialized, out onDeserializing, out onDeserialized, out onError)", span="785-785"];
m4_356 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DataTableConverter.cs", label="contract.OnSerializingCallbacks.AddRange(onSerializing)", span="789-789"];
m4_358 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DataTableConverter.cs", label="contract.OnSerializedCallbacks.AddRange(onSerialized)", span="794-794"];
m4_360 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DataTableConverter.cs", label="contract.OnDeserializingCallbacks.AddRange(onDeserializing)", span="799-799"];
m4_362 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DataTableConverter.cs", label="contract.OnDeserializedCallbacks.AddRange(onDeserialized)", span="804-804"];
m4_364 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DataTableConverter.cs", label="contract.OnErrorCallbacks.AddRange(onError)", span="809-809"];
m4_350 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DataTableConverter.cs", label="List<SerializationCallback> onSerialized", span="780-780"];
m4_351 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DataTableConverter.cs", label="List<SerializationCallback> onDeserializing", span="781-781"];
m4_352 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DataTableConverter.cs", label="List<SerializationCallback> onDeserialized", span="782-782"];
m4_353 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DataTableConverter.cs", label="List<SerializationErrorCallback> onError", span="783-783"];
m4_355 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DataTableConverter.cs", label="onSerializing != null", span="787-787"];
m4_357 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DataTableConverter.cs", label="onSerialized != null", span="792-792"];
m4_359 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DataTableConverter.cs", label="onDeserializing != null", span="797-797"];
m4_361 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DataTableConverter.cs", label="onDeserialized != null", span="802-802"];
m4_363 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DataTableConverter.cs", label="onError != null", span="807-807"];
m4_365 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="777-777"];
m4_44 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="DataTableConverter.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m4_16 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="190-190"];
m4_17 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="DataTableConverter.cs", label="IgnoreSerializableAttribute = true", span="193-193"];
m4_18 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="DataTableConverter.cs", label="DefaultMembersSearchFlags = BindingFlags.Instance | BindingFlags.Public", span="197-197"];
m4_19 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="190-190"];
m4_152 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="DataTableConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m4_219 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", span="604-604"];
m4_224 [cluster="System.Type.GetConstructors()", file="DataTableConverter.cs", label="Entry System.Type.GetConstructors()", span="0-0"];
m4_137 [cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", span="202-202"];
m4_409 [cluster="Newtonsoft.Json.Serialization.JsonContract.CreateSerializationCallback(System.Reflection.MethodInfo)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonContract.CreateSerializationCallback(System.Reflection.MethodInfo)", span="381-381"];
m4_294 [cluster="System.Reflection.MethodBase.GetParameters()", file="DataTableConverter.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m4_715 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", span="1553-1553"];
m4_716 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", file="DataTableConverter.cs", label="return ResolvePropertyName(dictionaryKey);", span="1555-1555"];
m4_717 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", span="1553-1553"];
m4_249 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", span="584-584"];
m4_250 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", file="DataTableConverter.cs", label="ValidationUtils.ArgumentNotNull(e, nameof(e))", span="586-586"];
m4_251 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", file="DataTableConverter.cs", label="_e = e", span="587-587"];
m4_252 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", span="584-584"];
m4_48 [cluster="DataColumn.cstr", file="DataTableConverter.cs", label="Entry DataColumn.cstr", span=""];
m4_501 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DataTableConverter.cs", label="IsJsonPrimitiveType(objectType)", span="1095-1095"];
m4_502 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DataTableConverter.cs", label="return CreatePrimitiveContract(objectType);", span="1097-1097"];
m4_503 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DataTableConverter.cs", label="Type t = ReflectionUtils.EnsureNotNullableType(objectType)", span="1100-1100"];
m4_506 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DataTableConverter.cs", label="return CreateObjectContract(objectType);", span="1105-1105"];
m4_508 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DataTableConverter.cs", label="return CreateArrayContract(objectType);", span="1110-1110"];
m4_510 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DataTableConverter.cs", label="return CreateDictionaryContract(objectType);", span="1115-1115"];
m4_512 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DataTableConverter.cs", label="return CreateLinqContract(objectType);", span="1120-1120"];
m4_514 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DataTableConverter.cs", label="return CreateDictionaryContract(objectType);", span="1125-1125"];
m4_516 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DataTableConverter.cs", label="return CreateArrayContract(objectType);", span="1130-1130"];
m4_518 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DataTableConverter.cs", label="return CreateStringContract(objectType);", span="1135-1135"];
m4_520 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DataTableConverter.cs", label="return CreateISerializableContract(objectType);", span="1141-1141"];
m4_522 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DataTableConverter.cs", label="return CreateDynamicContract(objectType);", span="1148-1148"];
m4_525 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DataTableConverter.cs", label="return CreateObjectContract(objectType);", span="1160-1160"];
m4_504 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DataTableConverter.cs", label="JsonContainerAttribute containerAttribute = JsonTypeReflector.GetCachedAttribute<JsonContainerAttribute>(t)", span="1101-1101"];
m4_511 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DataTableConverter.cs", label="t == typeof(JToken) || t.IsSubclassOf(typeof(JToken))", span="1118-1118"];
m4_513 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DataTableConverter.cs", label="CollectionUtils.IsDictionaryType(t)", span="1123-1123"];
m4_515 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DataTableConverter.cs", label="typeof(IEnumerable).IsAssignableFrom(t)", span="1128-1128"];
m4_517 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DataTableConverter.cs", label="CanConvertToString(t)", span="1133-1133"];
m4_519 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DataTableConverter.cs", label="!IgnoreSerializableInterface && typeof(ISerializable).IsAssignableFrom(t)", span="1139-1139"];
m4_521 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DataTableConverter.cs", label="typeof(IDynamicMetaObjectProvider).IsAssignableFrom(t)", span="1146-1146"];
m4_523 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DataTableConverter.cs", label="IsIConvertible(t)", span="1154-1154"];
m4_524 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DataTableConverter.cs", label="return CreatePrimitiveContract(t);", span="1156-1156"];
m4_505 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DataTableConverter.cs", label="containerAttribute is JsonObjectAttribute", span="1103-1103"];
m4_507 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DataTableConverter.cs", label="containerAttribute is JsonArrayAttribute", span="1108-1108"];
m4_509 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DataTableConverter.cs", label="containerAttribute is JsonDictionaryAttribute", span="1113-1113"];
m4_526 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", span="1093-1093"];
m4_281 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="DataTableConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m4_485 [cluster="Newtonsoft.Json.Serialization.JsonISerializableContract.JsonISerializableContract(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonISerializableContract.JsonISerializableContract(System.Type)", span="46-46"];
m4_430 [cluster="System.Collections.Generic.List<T>.Reverse()", file="DataTableConverter.cs", label="Entry System.Collections.Generic.List<T>.Reverse()", span="0-0"];
m4_85 [cluster="System.Collections.Generic.List<T>.List()", file="DataTableConverter.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m4_408 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", span="1209-1209"];
m4_553 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DataTableConverter.cs", label="!method.IsDefined(attributeType, false)", span="1211-1211"];
m4_555 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DataTableConverter.cs", label="currentCallback != null", span="1216-1216"];
m4_556 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DataTableConverter.cs", label="throw new JsonException(''Invalid attribute. Both '{0}' and '{1}' in type '{2}' have '{3}'.''.FormatWith(CultureInfo.InvariantCulture, method, currentCallback, GetClrTypeFullName(method.DeclaringType), attributeType));", span="1218-1218"];
m4_557 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DataTableConverter.cs", label="prevAttributeType != null", span="1221-1221"];
m4_558 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DataTableConverter.cs", label="throw new JsonException(''Invalid Callback. Method '{3}' in type '{2}' has both '{0}' and '{1}'.''.FormatWith(CultureInfo.InvariantCulture, prevAttributeType, attributeType, GetClrTypeFullName(method.DeclaringType), method));", span="1223-1223"];
m4_559 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DataTableConverter.cs", label="method.IsVirtual", span="1226-1226"];
m4_560 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DataTableConverter.cs", label="throw new JsonException(''Virtual Method '{0}' of type '{1}' cannot be marked with '{2}' attribute.''.FormatWith(CultureInfo.InvariantCulture, method, GetClrTypeFullName(method.DeclaringType), attributeType));", span="1228-1228"];
m4_561 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DataTableConverter.cs", label="method.ReturnType != typeof(void)", span="1231-1231"];
m4_562 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DataTableConverter.cs", label="throw new JsonException(''Serialization Callback '{1}' in type '{0}' must return void.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method));", span="1233-1233"];
m4_563 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DataTableConverter.cs", label="attributeType == typeof(OnErrorAttribute)", span="1236-1236"];
m4_564 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DataTableConverter.cs", label="parameters == null || parameters.Length != 2 || parameters[0].ParameterType != typeof(StreamingContext) || parameters[1].ParameterType != typeof(ErrorContext)", span="1238-1238"];
m4_565 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DataTableConverter.cs", label="throw new JsonException(''Serialization Error Callback '{1}' in type '{0}' must have two parameters of type '{2}' and '{3}'.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method, typeof(StreamingContext), typeof(ErrorContext)));", span="1240-1240"];
m4_566 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DataTableConverter.cs", label="parameters == null || parameters.Length != 1 || parameters[0].ParameterType != typeof(StreamingContext)", span="1245-1245"];
m4_567 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DataTableConverter.cs", label="throw new JsonException(''Serialization Callback '{1}' in type '{0}' must have a single parameter of type '{2}'.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method, typeof(StreamingContext)));", span="1247-1247"];
m4_568 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DataTableConverter.cs", label="prevAttributeType = attributeType", span="1251-1251"];
m4_554 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DataTableConverter.cs", label="return false;", span="1213-1213"];
m4_569 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DataTableConverter.cs", label="return true;", span="1253-1253"];
m4_570 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", span="1209-1209"];
m4_50 [cluster="Unk.EndEdit", file="DataTableConverter.cs", label="Entry Unk.EndEdit", span=""];
m4_181 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", span="1256-1256"];
m4_573 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DataTableConverter.cs", label="type.IsGenericTypeDefinition() || !type.ContainsGenericParameters()", span="1258-1258"];
m4_574 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DataTableConverter.cs", label="return type.FullName;", span="1260-1260"];
m4_575 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DataTableConverter.cs", label="return string.Format(CultureInfo.InvariantCulture, ''{0}.{1}'', new object[] { type.Namespace, type.Name });", span="1263-1263"];
m4_576 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", span="1256-1256"];
m4_476 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", span="1040-1040"];
m4_477 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DataTableConverter.cs", label="JsonISerializableContract contract = new JsonISerializableContract(objectType)", span="1042-1042"];
m4_478 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DataTableConverter.cs", label="InitializeContract(contract)", span="1043-1043"];
m4_479 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DataTableConverter.cs", label="ConstructorInfo constructorInfo = contract.NonNullableUnderlyingType.GetConstructor(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance, null, new[] { typeof(SerializationInfo), typeof(StreamingContext) }, null)", span="1045-1045"];
m4_482 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DataTableConverter.cs", label="contract.ISerializableCreator = creator", span="1050-1050"];
m4_483 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DataTableConverter.cs", label="return contract;", span="1053-1053"];
m4_480 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DataTableConverter.cs", label="constructorInfo != null", span="1046-1046"];
m4_481 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DataTableConverter.cs", label="ObjectConstructor<object> creator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(constructorInfo)", span="1048-1048"];
m4_484 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", span="1040-1040"];
m4_221 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", span="74-74"];
m4_88 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="DataTableConverter.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m4_344 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", span="1108-1108"];
m4_406 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", span="879-879"];
m4_411 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", file="DataTableConverter.cs", label="t.IsGenericType() && t.GetGenericTypeDefinition() == typeof(ConcurrentDictionary<,>)", span="883-883"];
m4_413 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", file="DataTableConverter.cs", label="t.Name == FSharpUtils.FSharpSetTypeName || t.Name == FSharpUtils.FSharpMapTypeName", span="889-889"];
m4_412 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", file="DataTableConverter.cs", label="return true;", span="885-885"];
m4_414 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", file="DataTableConverter.cs", label="return true;", span="891-891"];
m4_415 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", file="DataTableConverter.cs", label="return false;", span="895-895"];
m4_416 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", span="879-879"];
m4_577 [cluster="System.Type.IsGenericTypeDefinition()", file="DataTableConverter.cs", label="Entry System.Type.IsGenericTypeDefinition()", span="162-162"];
m4_45 [cluster="Unk.NewRow", file="DataTableConverter.cs", label="Entry Unk.NewRow", span=""];
m4_92 [cluster="System.Type.AssignableToTypeName(string, out System.Type)", file="DataTableConverter.cs", label="Entry System.Type.AssignableToTypeName(string, out System.Type)", span="576-576"];
m4_236 [cluster="System.Func<T, TResult>.Invoke(T)", file="DataTableConverter.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m4_328 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", span="732-732"];
m4_329 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", file="DataTableConverter.cs", label="return JsonTypeReflector.ReflectionDelegateFactory.CreateDefaultConstructor<object>(createdType);", span="734-734"];
m4_330 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", span="732-732"];
m4_254 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", span="590-590"];
m4_255 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", file="DataTableConverter.cs", label=_e, span="592-592"];
m4_256 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", file="DataTableConverter.cs", label="yield return new KeyValuePair<object, object>(item.Key, item.Value);", span="594-594"];
m4_257 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", span="590-590"];
m4_595 [cluster="Newtonsoft.Json.Utilities.PropertyNameTable.Add(string)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Utilities.PropertyNameTable.Add(string)", span="76-76"];
m4_578 [cluster="System.Type.ContainsGenericParameters()", file="DataTableConverter.cs", label="Entry System.Type.ContainsGenericParameters()", span="135-135"];
m4_96 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", span="471-471"];
m4_626 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", span="1515-1515"];
m4_698 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DataTableConverter.cs", label="MemberInfo specifiedMember = member.DeclaringType.GetProperty(member.Name + JsonTypeReflector.SpecifiedPostfix)", span="1517-1517"];
m4_700 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DataTableConverter.cs", label="specifiedMember = member.DeclaringType.GetField(member.Name + JsonTypeReflector.SpecifiedPostfix)", span="1520-1520"];
m4_704 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DataTableConverter.cs", label="property.GetIsSpecified = o => (bool)specifiedPropertyGet(o)", span="1530-1530"];
m4_705 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DataTableConverter.cs", label="ReflectionUtils.CanSetMemberValue(specifiedMember, allowNonPublicAccess, false)", span="1532-1532"];
m4_706 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DataTableConverter.cs", label="property.SetIsSpecified = JsonTypeReflector.ReflectionDelegateFactory.CreateSet<object>(specifiedMember)", span="1534-1534"];
m4_699 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DataTableConverter.cs", label="specifiedMember == null", span="1518-1518"];
m4_701 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DataTableConverter.cs", label="specifiedMember == null || ReflectionUtils.GetMemberUnderlyingType(specifiedMember) != typeof(bool)", span="1523-1523"];
m4_703 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DataTableConverter.cs", label="Func<object, object> specifiedPropertyGet = JsonTypeReflector.ReflectionDelegateFactory.CreateGet<object>(specifiedMember)", span="1528-1528"];
m4_702 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DataTableConverter.cs", label="return;", span="1525-1525"];
m4_707 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", span="1515-1515"];
m4_259 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", span="598-598"];
m4_260 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", file="DataTableConverter.cs", label="return GetEnumerator();", span="600-600"];
m4_261 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", span="598-598"];
m4_91 [cluster="System.Reflection.MemberInfo.MemberType()", file="DataTableConverter.cs", label="Entry System.Reflection.MemberInfo.MemberType()", span="107-107"];
m4_180 [cluster="Newtonsoft.Json.JsonException.JsonException(string)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.JsonException.JsonException(string)", span="54-54"];
m4_239 [cluster="System.Func<TResult>.Invoke()", file="DataTableConverter.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m4_226 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", span="73-73"];
m4_143 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", span="646-646"];
m4_282 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DataTableConverter.cs", label="var constructorParameters = constructor.GetParameters()", span="648-648"];
m4_283 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DataTableConverter.cs", label="JsonPropertyCollection parameterCollection = new JsonPropertyCollection(constructor.DeclaringType)", span="650-650"];
m4_285 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DataTableConverter.cs", label="JsonProperty matchingMemberProperty = (parameterInfo.Name != null) ? memberProperties.GetClosestMatchProperty(parameterInfo.Name) : null", span="656-656"];
m4_284 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DataTableConverter.cs", label=constructorParameters, span="652-652"];
m4_291 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DataTableConverter.cs", label="parameterCollection.AddProperty(property)", span="672-672"];
m4_292 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DataTableConverter.cs", label="return parameterCollection;", span="677-677"];
m4_286 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DataTableConverter.cs", label="matchingMemberProperty != null && matchingMemberProperty.PropertyType != parameterInfo.ParameterType", span="659-659"];
m4_288 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DataTableConverter.cs", label="matchingMemberProperty != null || parameterInfo.Name != null", span="666-666"];
m4_289 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DataTableConverter.cs", label="JsonProperty property = CreatePropertyFromConstructorParameter(matchingMemberProperty, parameterInfo)", span="668-668"];
m4_287 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DataTableConverter.cs", label="matchingMemberProperty = null", span="661-661"];
m4_290 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DataTableConverter.cs", label="property != null", span="670-670"];
m4_293 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", span="646-646"];
m4_600 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="1309-1309"];
m4_601 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="IValueProvider valueProvider", span="1312-1312"];
m4_603 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="valueProvider = new DynamicValueProvider(member)", span="1317-1317"];
m4_604 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="valueProvider = new ReflectionValueProvider(member)", span="1321-1321"];
m4_602 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DataTableConverter.cs", label=DynamicCodeGeneration, span="1315-1315"];
m4_605 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="return valueProvider;", span="1329-1329"];
m4_606 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="1309-1309"];
m4_572 [cluster="string.FormatWith(System.IFormatProvider, object, object, object)", file="DataTableConverter.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object, object)", span="57-57"];
m4_687 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", span="1543-1543"];
m4_713 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="DataTableConverter.cs", label="return propertyName;", span="1545-1545"];
m4_714 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", span="1543-1543"];
m4_253 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="31-31"];
m4_82 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", span="645-645"];
m4_486 [cluster="System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])", file="DataTableConverter.cs", label="Entry System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])", span="0-0"];
m4_51 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label=tokenType, span="123-123"];
m4_52 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="JsonToken.Integer", span="125-125"];
m4_54 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="JsonToken.Float", span="127-127"];
m4_55 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="return typeof (double);", span="128-128"];
m4_58 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="JsonToken.Undefined", span="131-131"];
m4_59 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="return typeof (string);", span="132-132"];
m4_73 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DataTableConverter.cs", label="objectType.AssignableToTypeName(''System.Data.Objects.DataClasses.EntityObject'', out match)", span="337-337"];
m4_53 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="return typeof (long);", span="126-126"];
m4_57 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="JsonToken.Null", span="130-130"];
m4_70 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DataTableConverter.cs", label="memberSerialization == MemberSerialization.Fields && member.MemberType() == MemberTypes.Field", span="326-326"];
m4_56 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="JsonToken.String", span="129-129"];
m4_60 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="JsonToken.Boolean", span="133-133"];
m4_75 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DataTableConverter.cs", label=allMembers, span="346-346"];
m4_63 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="return typeof (DateTime);", span="136-136"];
m4_65 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", span="121-121"];
m4_67 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DataTableConverter.cs", label="serializableMembers.Add(member)", span="318-318"];
m4_69 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DataTableConverter.cs", label="serializableMembers.Add(member)", span="323-323"];
m4_71 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DataTableConverter.cs", label="serializableMembers.Add(member)", span="328-328"];
m4_74 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DataTableConverter.cs", label="serializableMembers = serializableMembers.Where(ShouldSerializeEntityMember).ToList()", span="339-339"];
m4_78 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DataTableConverter.cs", label="serializableMembers.Add(member)", span="351-351"];
m4_79 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DataTableConverter.cs", label="return serializableMembers;", span="356-356"];
m4_68 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DataTableConverter.cs", label="dataContractAttribute != null && JsonTypeReflector.GetAttribute<DataMemberAttribute>(member) != null", span="321-321"];
m4_62 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="JsonToken.Date", span="135-135"];
m4_61 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="return typeof (bool);", span="134-134"];
m4_72 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DataTableConverter.cs", label="Type match", span="335-335"];
m4_64 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="throw new ArgumentOutOfRangeException();", span="138-138"];
m4_76 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DataTableConverter.cs", label="FieldInfo field = member as FieldInfo", span="348-348"];
m4_77 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DataTableConverter.cs", label="field != null && !field.IsStatic", span="349-349"];
m4_80 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", span="271-271"];
m4_160 [cluster="System.Type.GetProperties(System.Reflection.BindingFlags)", file="DataTableConverter.cs", label="Entry System.Type.GetProperties(System.Reflection.BindingFlags)", span="0-0"];
m4_475 [cluster="Newtonsoft.Json.Serialization.JsonLinqContract.JsonLinqContract(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonLinqContract.JsonLinqContract(System.Type)", span="38-38"];
m4_718 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", span="1563-1563"];
m4_719 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", file="DataTableConverter.cs", label="return ResolvePropertyName(propertyName);", span="1567-1567"];
m4_720 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", span="1563-1563"];
m4_248 [cluster="Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", span="31-31"];
m4_487 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", span="1063-1063"];
m4_488 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="DataTableConverter.cs", label="JsonDynamicContract contract = new JsonDynamicContract(objectType)", span="1065-1065"];
m4_491 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="DataTableConverter.cs", label="contract.Properties.AddRange(CreateProperties(objectType, MemberSerialization.OptOut))", span="1069-1069"];
m4_489 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="DataTableConverter.cs", label="InitializeContract(contract)", span="1066-1066"];
m4_490 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="DataTableConverter.cs", label="contract.PropertyNameResolver = ResolvePropertyName", span="1068-1068"];
m4_492 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="DataTableConverter.cs", label="return contract;", span="1071-1071"];
m4_493 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", span="1063-1063"];
m4_531 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", span="1183-1183"];
m4_543 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DataTableConverter.cs", label="TypeConverter converter = ConvertUtils.GetConverter(type)", span="1186-1186"];
m4_547 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DataTableConverter.cs", label="type == typeof(Type) || type.IsSubclassOf(typeof(Type))", span="1201-1201"];
m4_544 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DataTableConverter.cs", label="converter != null\r\n                && !(converter is ComponentConverter)\r\n                && !(converter is ReferenceConverter)\r\n                && converter.GetType() != typeof(TypeConverter)", span="1189-1192"];
m4_545 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DataTableConverter.cs", label="converter.CanConvertTo(typeof(string))", span="1194-1194"];
m4_546 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DataTableConverter.cs", label="return true;", span="1196-1196"];
m4_548 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DataTableConverter.cs", label="return true;", span="1203-1203"];
m4_549 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DataTableConverter.cs", label="return false;", span="1206-1206"];
m4_550 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", span="1183-1183"];
m4_500 [cluster="Newtonsoft.Json.Serialization.JsonStringContract.JsonStringContract(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonStringContract.JsonStringContract(System.Type)", span="38-38"];
m4_241 [cluster="Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", span="27-27"];
m4_272 [cluster="System.Type.GetConstructor(System.Type[])", file="DataTableConverter.cs", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0"];
m4_151 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", span="914-914"];
m4_421 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DataTableConverter.cs", label="List<Type> ret = new List<Type>()", span="916-916"];
m4_422 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DataTableConverter.cs", label="Type current = type", span="918-918"];
m4_424 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DataTableConverter.cs", label="ret.Add(current)", span="921-921"];
m4_426 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DataTableConverter.cs", label="ret.Reverse()", span="926-926"];
m4_427 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DataTableConverter.cs", label="return ret;", span="927-927"];
m4_423 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DataTableConverter.cs", label="current != null && current != typeof(object)", span="919-919"];
m4_425 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DataTableConverter.cs", label="current = current.BaseType()", span="922-922"];
m4_428 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", span="914-914"];
m4_625 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", span="1500-1500"];
m4_689 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="MethodInfo shouldSerializeMethod = member.DeclaringType.GetMethod(JsonTypeReflector.ShouldSerializePrefix + member.Name, ReflectionUtils.EmptyTypes)", span="1502-1502"];
m4_690 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="shouldSerializeMethod == null || shouldSerializeMethod.ReturnType != typeof(bool)", span="1504-1504"];
m4_692 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="MethodCall<object, object> shouldSerializeCall =\r\n                JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(shouldSerializeMethod)", span="1509-1510"];
m4_691 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="return null;", span="1506-1506"];
m4_693 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="return o => (bool)shouldSerializeCall(o);", span="1512-1512"];
m4_694 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", span="1500-1500"];
m4_8 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", span="72-72"];
m4_9 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", file="DataTableConverter.cs", label="!(obj is ResolverContractKey)", span="74-74"];
m4_10 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", file="DataTableConverter.cs", label="return false;", span="76-76"];
m4_12 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", span="72-72"];
m4_142 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", span="604-604"];
m4_262 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DataTableConverter.cs", label="IList<ConstructorInfo> markedConstructors = objectType.GetConstructors(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).Where(c => c.IsDefined(typeof(JsonConstructorAttribute), true)).ToList()", span="606-606"];
m4_267 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DataTableConverter.cs", label="objectType == typeof(Version)", span="618-618"];
m4_268 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DataTableConverter.cs", label="return objectType.GetConstructor(new[] { typeof(int), typeof(int), typeof(int), typeof(int) });", span="620-620"];
m4_263 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DataTableConverter.cs", label="markedConstructors.Count > 1", span="608-608"];
m4_265 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DataTableConverter.cs", label="markedConstructors.Count == 1", span="612-612"];
m4_266 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DataTableConverter.cs", label="return markedConstructors[0];", span="614-614"];
m4_264 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DataTableConverter.cs", label="throw new JsonException(''Multiple constructors with the JsonConstructorAttribute.'');", span="610-610"];
m4_269 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DataTableConverter.cs", label="return null;", span="623-623"];
m4_270 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", span="604-604"];
m4_141 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)", span="66-66"];
m4_146 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", span="496-496"];
m4_187 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="JsonExtensionDataAttribute extensionDataAttribute = ReflectionUtils.GetAttribute<JsonExtensionDataAttribute>(member)", span="498-498"];
m4_190 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="Type t = ReflectionUtils.GetMemberUnderlyingType(member)", span="504-504"];
m4_199 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="Func<object, object> getExtensionDataDictionary = JsonTypeReflector.ReflectionDelegateFactory.CreateGet<object>(member)", span="524-524"];
m4_201 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="Action<object, object> setExtensionDataDictionary = (ReflectionUtils.CanSetMemberValue(member, true, false))\r\n                 ? JsonTypeReflector.ReflectionDelegateFactory.CreateSet<object>(member)\r\n                 : null", span="528-530"];
m4_205 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="ExtensionDataSetter extensionDataSetter = (o, key, value) =>\r\n                {\r\n                    object dictionary = getExtensionDataDictionary(o);\r\n                    if (dictionary == null)\r\n                    {\r\n                        if (setExtensionDataDictionary == null)\r\n                        {\r\n                            throw new JsonSerializationException(''Cannot set value onto extension data member '{0}'. The extension data collection is null and it cannot be set.''.FormatWith(CultureInfo.InvariantCulture, member.Name));\r\n                        }\r\n\r\n                        dictionary = createExtensionDataDictionary();\r\n                        setExtensionDataDictionary(o, dictionary);\r\n                    }\r\n\r\n                    setExtensionDataDictionaryValue(dictionary, key, value);\r\n                }", span="535-550"];
m4_206 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="contract.ExtensionDataSetter = extensionDataSetter", span="552-552"];
m4_212 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="contract.ExtensionDataGetter = extensionDataGetter", span="572-572"];
m4_213 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="contract.ExtensionDataValueType = valueType", span="575-575"];
m4_188 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="extensionDataAttribute == null", span="499-499"];
m4_200 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="extensionDataAttribute.ReadData", span="526-526"];
m4_207 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="extensionDataAttribute.WriteData", span="555-555"];
m4_189 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="return;", span="501-501"];
m4_191 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="Type dictionaryType", span="506-506"];
m4_192 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="ReflectionUtils.ImplementsGenericDefinition(t, typeof(IDictionary<,>), out dictionaryType)", span="507-507"];
m4_196 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="ReflectionUtils.IsGenericDefinition(t, typeof(IDictionary<,>))", span="515-515"];
m4_198 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="createdType = t", span="521-521"];
m4_203 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="MethodInfo addMethod = t.GetMethod(''Add'', new[] { keyType, valueType })", span="532-532"];
m4_193 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="Type keyType = dictionaryType.GetGenericArguments()[0]", span="509-509"];
m4_194 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="Type valueType = dictionaryType.GetGenericArguments()[1]", span="510-510"];
m4_197 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="createdType = typeof(Dictionary<,>).MakeGenericType(keyType, valueType)", span="517-517"];
m4_208 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="Type enumerableWrapper = typeof(EnumerableDictionaryWrapper<,>).MakeGenericType(keyType, valueType)", span="557-557"];
m4_195 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="Type createdType", span="512-512"];
m4_202 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="Func<object> createExtensionDataDictionary = JsonTypeReflector.ReflectionDelegateFactory.CreateDefaultConstructor<object>(createdType)", span="531-531"];
m4_211 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="ExtensionDataGetter extensionDataGetter = o =>\r\n                {\r\n                    object dictionary = getExtensionDataDictionary(o);\r\n                    if (dictionary == null)\r\n                    {\r\n                        return null;\r\n                    }\r\n\r\n                    return (IEnumerable<KeyValuePair<object, object>>)createEnumerableWrapper(dictionary);\r\n                }", span="561-570"];
m4_204 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="MethodCall<object, object> setExtensionDataDictionaryValue = JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(addMethod)", span="533-533"];
m4_209 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="ConstructorInfo constructors = enumerableWrapper.GetConstructors().First()", span="558-558"];
m4_210 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="ObjectConstructor<object> createEnumerableWrapper = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(constructors)", span="559-559"];
m4_214 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", span="496-496"];
m4_579 [cluster="string.Format(System.IFormatProvider, string, params object[])", file="DataTableConverter.cs", label="Entry string.Format(System.IFormatProvider, string, params object[])", span="0-0"];
m4_469 [cluster="Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", span="42-42"];
m4_551 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", span="703-703"];
m4_153 [cluster="Unk.LastOrDefault", file="DataTableConverter.cs", label="Entry Unk.LastOrDefault", span=""];
m4_346 [cluster="System.Type.IsValueType()", file="DataTableConverter.cs", label="Entry System.Type.IsValueType()", span="567-567"];
m4_324 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", span="727-727"];
m4_325 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="DataTableConverter.cs", label="return JsonTypeReflector.GetJsonConverter(objectType);", span="729-729"];
m4_326 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", span="727-727"];
m4_223 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", span="72-72"];
m4_296 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", span="125-125"];
m4_594 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", span="1338-1338"];
m4_609 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DataTableConverter.cs", label="JsonProperty property = new JsonProperty()", span="1340-1340"];
m4_610 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DataTableConverter.cs", label="property.PropertyType = ReflectionUtils.GetMemberUnderlyingType(member)", span="1341-1341"];
m4_611 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DataTableConverter.cs", label="property.DeclaringType = member.DeclaringType", span="1342-1342"];
m4_612 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DataTableConverter.cs", label="property.ValueProvider = CreateMemberValueProvider(member)", span="1343-1343"];
m4_613 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DataTableConverter.cs", label="property.AttributeProvider = new ReflectionAttributeProvider(member)", span="1344-1344"];
m4_615 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DataTableConverter.cs", label="SetPropertySettingsFromAttributes(property, member, member.Name, member.DeclaringType, memberSerialization, out allowNonPublicAccess)", span="1347-1347"];
m4_616 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DataTableConverter.cs", label="memberSerialization != MemberSerialization.Fields", span="1349-1349"];
m4_617 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DataTableConverter.cs", label="property.Readable = ReflectionUtils.CanReadMemberValue(member, allowNonPublicAccess)", span="1351-1351"];
m4_618 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DataTableConverter.cs", label="property.Writable = ReflectionUtils.CanSetMemberValue(member, allowNonPublicAccess, property.HasMemberAttribute)", span="1352-1352"];
m4_621 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DataTableConverter.cs", label="property.ShouldSerialize = CreateShouldSerializeTest(member)", span="1360-1360"];
m4_622 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DataTableConverter.cs", label="SetIsSpecifiedActions(property, member, allowNonPublicAccess)", span="1362-1362"];
m4_619 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DataTableConverter.cs", label="property.Readable = true", span="1357-1357"];
m4_620 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DataTableConverter.cs", label="property.Writable = true", span="1358-1358"];
m4_623 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DataTableConverter.cs", label="return property;", span="1364-1364"];
m4_614 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DataTableConverter.cs", label="bool allowNonPublicAccess", span="1346-1346"];
m4_624 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", span="1338-1338"];
m4_225 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="DataTableConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m4_258 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="DataTableConverter.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m4_81 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", span="127-127"];
m4_90 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", span="353-353"];
m4_87 [cluster="System.Reflection.MemberInfo.IsDefined(System.Type, bool)", file="DataTableConverter.cs", label="Entry System.Reflection.MemberInfo.IsDefined(System.Type, bool)", span="0-0"];
m4_407 [cluster="System.Type.GetMethods(System.Reflection.BindingFlags)", file="DataTableConverter.cs", label="Entry System.Type.GetMethods(System.Reflection.BindingFlags)", span="0-0"];
m4_528 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", span="274-274"];
m4_100 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", span="360-360"];
m4_101 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="PropertyInfo propertyInfo = memberInfo as PropertyInfo", span="362-362"];
m4_102 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="propertyInfo != null", span="363-363"];
m4_103 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="propertyInfo.PropertyType.IsGenericType() && propertyInfo.PropertyType.GetGenericTypeDefinition().FullName == ''System.Data.Objects.DataClasses.EntityReference`1''", span="365-365"];
m4_105 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="return true;", span="371-371"];
m4_104 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="return false;", span="367-367"];
m4_106 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", span="360-360"];
m4_240 [cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="DataTableConverter.cs", label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0"];
m4_297 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", span="686-686"];
m4_299 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DataTableConverter.cs", label="JsonProperty property = new JsonProperty()", span="688-688"];
m4_300 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DataTableConverter.cs", label="property.PropertyType = parameterInfo.ParameterType", span="689-689"];
m4_301 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DataTableConverter.cs", label="property.AttributeProvider = new ReflectionAttributeProvider(parameterInfo)", span="690-690"];
m4_303 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DataTableConverter.cs", label="SetPropertySettingsFromAttributes(property, parameterInfo, parameterInfo.Name, parameterInfo.Member.DeclaringType, MemberSerialization.OptOut, out allowNonPublicAccess)", span="693-693"];
m4_306 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DataTableConverter.cs", label="matchingMemberProperty != null", span="699-699"];
m4_307 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DataTableConverter.cs", label="property.PropertyName = (property.PropertyName != parameterInfo.Name) ? property.PropertyName : matchingMemberProperty.PropertyName", span="701-701"];
m4_308 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DataTableConverter.cs", label="property.Converter = property.Converter ?? matchingMemberProperty.Converter", span="702-702"];
m4_309 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DataTableConverter.cs", label="property.MemberConverter = property.MemberConverter ?? matchingMemberProperty.MemberConverter", span="703-703"];
m4_310 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DataTableConverter.cs", label="!property._hasExplicitDefaultValue && matchingMemberProperty._hasExplicitDefaultValue", span="705-705"];
m4_311 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DataTableConverter.cs", label="property.DefaultValue = matchingMemberProperty.DefaultValue", span="707-707"];
m4_312 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DataTableConverter.cs", label="property._required = property._required ?? matchingMemberProperty._required", span="710-710"];
m4_313 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DataTableConverter.cs", label="property.IsReference = property.IsReference ?? matchingMemberProperty.IsReference", span="711-711"];
m4_314 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DataTableConverter.cs", label="property.NullValueHandling = property.NullValueHandling ?? matchingMemberProperty.NullValueHandling", span="712-712"];
m4_315 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DataTableConverter.cs", label="property.DefaultValueHandling = property.DefaultValueHandling ?? matchingMemberProperty.DefaultValueHandling", span="713-713"];
m4_316 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DataTableConverter.cs", label="property.ReferenceLoopHandling = property.ReferenceLoopHandling ?? matchingMemberProperty.ReferenceLoopHandling", span="714-714"];
m4_317 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DataTableConverter.cs", label="property.ObjectCreationHandling = property.ObjectCreationHandling ?? matchingMemberProperty.ObjectCreationHandling", span="715-715"];
m4_318 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DataTableConverter.cs", label="property.TypeNameHandling = property.TypeNameHandling ?? matchingMemberProperty.TypeNameHandling", span="716-716"];
m4_304 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DataTableConverter.cs", label="property.Readable = false", span="695-695"];
m4_305 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DataTableConverter.cs", label="property.Writable = true", span="696-696"];
m4_319 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DataTableConverter.cs", label="return property;", span="719-719"];
m4_302 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DataTableConverter.cs", label="bool allowNonPublicAccess", span="692-692"];
m4_320 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", span="686-686"];
m4_447 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", span="126-126"];
m4_608 [cluster="Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", span="43-43"];
m4_108 [cluster="System.Type.GetGenericTypeDefinition()", file="DataTableConverter.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m4_527 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", span="1163-1163"];
m4_533 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", file="DataTableConverter.cs", label="PrimitiveTypeCode typeCode = ConvertUtils.GetTypeCode(t)", span="1165-1165"];
m4_534 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", file="DataTableConverter.cs", label="return (typeCode != PrimitiveTypeCode.Empty && typeCode != PrimitiveTypeCode.Object);", span="1167-1167"];
m4_535 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", span="1163-1163"];
m4_220 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.MemberInfo)", span="55-55"];
m4_184 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", span="298-298"];
m4_463 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", span="117-117"];
m4_495 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", span="1080-1080"];
m4_496 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="DataTableConverter.cs", label="JsonStringContract contract = new JsonStringContract(objectType)", span="1082-1082"];
m4_497 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="DataTableConverter.cs", label="InitializeContract(contract)", span="1083-1083"];
m4_498 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="DataTableConverter.cs", label="return contract;", span="1085-1085"];
m4_499 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", span="1080-1080"];
m4_186 [cluster="System.Type.IsAssignableFrom(System.Type)", file="DataTableConverter.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m4_532 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsIConvertible(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.IsIConvertible(System.Type)", span="1171-1171"];
m4_537 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsIConvertible(System.Type)", file="DataTableConverter.cs", label="typeof(IConvertible).IsAssignableFrom(t)\r\n                || (ReflectionUtils.IsNullableType(t) && typeof(IConvertible).IsAssignableFrom(Nullable.GetUnderlyingType(t)))", span="1173-1174"];
m4_538 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsIConvertible(System.Type)", file="DataTableConverter.cs", label="return !typeof(JToken).IsAssignableFrom(t);", span="1176-1176"];
m4_539 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsIConvertible(System.Type)", file="DataTableConverter.cs", label="return false;", span="1179-1179"];
m4_540 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsIConvertible(System.Type)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.IsIConvertible(System.Type)", span="1171-1171"];
m4_542 [cluster="System.Nullable.GetUnderlyingType(System.Type)", file="DataTableConverter.cs", label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0"];
m4_708 [cluster="System.Type.GetProperty(string)", file="DataTableConverter.cs", label="Entry System.Type.GetProperty(string)", span="0-0"];
m4_84 [cluster="Unk.ToList", file="DataTableConverter.cs", label="Entry Unk.ToList", span=""];
m4_405 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", span="898-898"];
m4_417 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", file="DataTableConverter.cs", label="t.Name == FSharpUtils.FSharpSetTypeName || t.Name == FSharpUtils.FSharpMapTypeName", span="901-901"];
m4_418 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", file="DataTableConverter.cs", label="return true;", span="903-903"];
m4_419 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", file="DataTableConverter.cs", label="return false;", span="911-911"];
m4_420 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", span="898-898"];
m4_83 [cluster="Unk.Where", file="DataTableConverter.cs", label="Entry Unk.Where", span=""];
m4_345 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", span="227-227"];
m4_138 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", span="741-741"];
m4_331 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DataTableConverter.cs", label="JsonContainerAttribute containerAttribute = JsonTypeReflector.GetCachedAttribute<JsonContainerAttribute>(contract.NonNullableUnderlyingType)", span="743-743"];
m4_333 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DataTableConverter.cs", label="contract.IsReference = containerAttribute._isReference", span="746-746"];
m4_334 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DataTableConverter.cs", label="DataContractAttribute dataContractAttribute = JsonTypeReflector.GetDataContractAttribute(contract.NonNullableUnderlyingType)", span="751-751"];
m4_336 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DataTableConverter.cs", label="contract.IsReference = true", span="755-755"];
m4_337 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DataTableConverter.cs", label="contract.Converter = ResolveContractConverter(contract.NonNullableUnderlyingType)", span="760-760"];
m4_338 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DataTableConverter.cs", label="contract.InternalConverter = JsonSerializer.GetMatchingConverter(BuiltInConverters, contract.NonNullableUnderlyingType)", span="763-763"];
m4_339 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DataTableConverter.cs", label="contract.IsInstantiable\r\n                && (ReflectionUtils.HasDefaultConstructor(contract.CreatedType, true) || contract.CreatedType.IsValueType())", span="765-766"];
m4_340 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DataTableConverter.cs", label="contract.DefaultCreator = GetDefaultCreator(contract.CreatedType)", span="768-768"];
m4_341 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DataTableConverter.cs", label="contract.DefaultCreatorNonPublic = (!contract.CreatedType.IsValueType() &&\r\n                                                    ReflectionUtils.GetDefaultConstructor(contract.CreatedType) == null)", span="770-771"];
m4_342 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DataTableConverter.cs", label="ResolveCallbackMethods(contract, contract.NonNullableUnderlyingType)", span="774-774"];
m4_332 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DataTableConverter.cs", label="containerAttribute != null", span="744-744"];
m4_335 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DataTableConverter.cs", label="dataContractAttribute != null && dataContractAttribute.IsReference", span="753-753"];
m4_343 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", span="741-741"];
m4_431 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", span="935-935"];
m4_432 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DataTableConverter.cs", label="JsonDictionaryContract contract = new JsonDictionaryContract(objectType)", span="937-937"];
m4_433 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DataTableConverter.cs", label="InitializeContract(contract)", span="938-938"];
m4_434 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DataTableConverter.cs", label="contract.DictionaryKeyResolver = ResolveDictionaryKey", span="940-940"];
m4_435 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DataTableConverter.cs", label="ConstructorInfo overrideConstructor = GetAttributeConstructor(contract.NonNullableUnderlyingType)", span="942-942"];
m4_438 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DataTableConverter.cs", label="Type expectedParameterType = (contract.DictionaryKeyType != null && contract.DictionaryValueType != null)\r\n                    ? typeof(IEnumerable<>).MakeGenericType(typeof(KeyValuePair<,>).MakeGenericType(contract.DictionaryKeyType, contract.DictionaryValueType))\r\n                    : typeof(IDictionary)", span="947-949"];
m4_440 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DataTableConverter.cs", label="contract.HasParameterizedCreator = false", span="953-953"];
m4_442 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DataTableConverter.cs", label="contract.HasParameterizedCreator = true", span="957-957"];
m4_443 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DataTableConverter.cs", label="throw new JsonException(''Constructor for '{0}' must have no parameters or a single parameter that implements '{1}'.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType, expectedParameterType));", span="961-961"];
m4_444 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DataTableConverter.cs", label="contract.OverrideCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(overrideConstructor)", span="964-964"];
m4_445 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DataTableConverter.cs", label="return contract;", span="967-967"];
m4_436 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DataTableConverter.cs", label="overrideConstructor != null", span="944-944"];
m4_437 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DataTableConverter.cs", label="ParameterInfo[] parameters = overrideConstructor.GetParameters()", span="946-946"];
m4_439 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DataTableConverter.cs", label="parameters.Length == 0", span="951-951"];
m4_441 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DataTableConverter.cs", label="parameters.Length == 1 && expectedParameterType.IsAssignableFrom(parameters[0].ParameterType)", span="955-955"];
m4_446 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", span="935-935"];
m4_295 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", span="46-46"];
m4_183 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", span="445-445"];
m4_215 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object)", span="729-729"];
m4_145 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)", span="446-446"];
m4_147 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)", file="DataTableConverter.cs", label="IEnumerable<MemberInfo> members = GetClassHierarchyForType(type).SelectMany(baseType =>\r\n            {\r\n                IList<MemberInfo> m = new List<MemberInfo>();\r\n                m.AddRange(baseType.GetProperties(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));\r\n                m.AddRange(baseType.GetFields(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));\r\n\r\n                return m;\r\n            })", span="448-455"];
m4_148 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)", file="DataTableConverter.cs", label="MemberInfo extensionDataMember = members.LastOrDefault(m =>\r\n            {\r\n                MemberTypes memberType = m.MemberType();\r\n                if (memberType != MemberTypes.Property && memberType != MemberTypes.Field)\r\n                {\r\n                    return false;\r\n                }\r\n\r\n                // last instance of attribute wins on type if there are multiple\r\n                if (!m.IsDefined(typeof(JsonExtensionDataAttribute), false))\r\n                {\r\n                    return false;\r\n                }\r\n\r\n                if (!ReflectionUtils.CanReadMemberValue(m, true))\r\n                {\r\n                    throw new JsonException(''Invalid extension data attribute on '{0}'. Member '{1}' must have a getter.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(m.DeclaringType), m.Name));\r\n                }\r\n\r\n                Type t = ReflectionUtils.GetMemberUnderlyingType(m);\r\n\r\n                Type dictionaryType;\r\n                if (ReflectionUtils.ImplementsGenericDefinition(t, typeof(IDictionary<,>), out dictionaryType))\r\n                {\r\n                    Type keyType = dictionaryType.GetGenericArguments()[0];\r\n                    Type valueType = dictionaryType.GetGenericArguments()[1];\r\n\r\n                    if (keyType.IsAssignableFrom(typeof(string)) && valueType.IsAssignableFrom(typeof(JToken)))\r\n                    {\r\n                        return true;\r\n                    }\r\n                }\r\n\r\n                throw new JsonException(''Invalid extension data attribute on '{0}'. Member '{1}' type must implement IDictionary<string, JToken>.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(m.DeclaringType), m.Name));\r\n            })", span="457-491"];
m4_149 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)", file="DataTableConverter.cs", label="return extensionDataMember;", span="493-493"];
m4_150 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)", span="446-446"];
m4_7 [cluster="System.Type.GetHashCode()", file="DataTableConverter.cs", label="Entry System.Type.GetHashCode()", span="0-0"];
m4_217 [cluster="System.Type.MakeGenericType(params System.Type[])", file="DataTableConverter.cs", label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0"];
m4_710 [cluster="lambda expression", file="DataTableConverter.cs", label="Entry lambda expression", span="1530-1530"];
m4_93 [cluster="lambda expression", file="DataTableConverter.cs", label="Entry lambda expression", span="283-283"];
m4_97 [cluster="lambda expression", file="DataTableConverter.cs", label="Entry lambda expression", span="295-295"];
m4_94 [cluster="lambda expression", file="DataTableConverter.cs", label="!ReflectionUtils.IsIndexedProperty(m)", span="283-283"];
m4_95 [cluster="lambda expression", file="DataTableConverter.cs", label="Exit lambda expression", span="283-283"];
m4_98 [cluster="lambda expression", file="DataTableConverter.cs", label="!ReflectionUtils.IsIndexedProperty(m)", span="295-295"];
m4_99 [cluster="lambda expression", file="DataTableConverter.cs", label="Exit lambda expression", span="295-295"];
m4_154 [cluster="lambda expression", file="DataTableConverter.cs", label="Entry lambda expression", span="448-455"];
m4_162 [cluster="lambda expression", file="DataTableConverter.cs", label="Entry lambda expression", span="457-491"];
m4_155 [cluster="lambda expression", file="DataTableConverter.cs", label="IList<MemberInfo> m = new List<MemberInfo>()", span="450-450"];
m4_156 [cluster="lambda expression", file="DataTableConverter.cs", label="m.AddRange(baseType.GetProperties(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly))", span="451-451"];
m4_157 [cluster="lambda expression", file="DataTableConverter.cs", label="m.AddRange(baseType.GetFields(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly))", span="452-452"];
m4_158 [cluster="lambda expression", file="DataTableConverter.cs", label="return m;", span="454-454"];
m4_159 [cluster="lambda expression", file="DataTableConverter.cs", label="Exit lambda expression", span="448-455"];
m4_163 [cluster="lambda expression", file="DataTableConverter.cs", label="MemberTypes memberType = m.MemberType()", span="459-459"];
m4_166 [cluster="lambda expression", file="DataTableConverter.cs", label="!m.IsDefined(typeof(JsonExtensionDataAttribute), false)", span="466-466"];
m4_168 [cluster="lambda expression", file="DataTableConverter.cs", label="!ReflectionUtils.CanReadMemberValue(m, true)", span="471-471"];
m4_169 [cluster="lambda expression", file="DataTableConverter.cs", label="throw new JsonException(''Invalid extension data attribute on '{0}'. Member '{1}' must have a getter.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(m.DeclaringType), m.Name));", span="473-473"];
m4_170 [cluster="lambda expression", file="DataTableConverter.cs", label="Type t = ReflectionUtils.GetMemberUnderlyingType(m)", span="476-476"];
m4_177 [cluster="lambda expression", file="DataTableConverter.cs", label="throw new JsonException(''Invalid extension data attribute on '{0}'. Member '{1}' type must implement IDictionary<string, JToken>.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(m.DeclaringType), m.Name));", span="490-490"];
m4_164 [cluster="lambda expression", file="DataTableConverter.cs", label="memberType != MemberTypes.Property && memberType != MemberTypes.Field", span="460-460"];
m4_165 [cluster="lambda expression", file="DataTableConverter.cs", label="return false;", span="462-462"];
m4_167 [cluster="lambda expression", file="DataTableConverter.cs", label="return false;", span="468-468"];
m4_171 [cluster="lambda expression", file="DataTableConverter.cs", label="Type dictionaryType", span="478-478"];
m4_172 [cluster="lambda expression", file="DataTableConverter.cs", label="ReflectionUtils.ImplementsGenericDefinition(t, typeof(IDictionary<,>), out dictionaryType)", span="479-479"];
m4_173 [cluster="lambda expression", file="DataTableConverter.cs", label="Type keyType = dictionaryType.GetGenericArguments()[0]", span="481-481"];
m4_174 [cluster="lambda expression", file="DataTableConverter.cs", label="Type valueType = dictionaryType.GetGenericArguments()[1]", span="482-482"];
m4_175 [cluster="lambda expression", file="DataTableConverter.cs", label="keyType.IsAssignableFrom(typeof(string)) && valueType.IsAssignableFrom(typeof(JToken))", span="484-484"];
m4_176 [cluster="lambda expression", file="DataTableConverter.cs", label="return true;", span="486-486"];
m4_178 [cluster="lambda expression", file="DataTableConverter.cs", label="Exit lambda expression", span="457-491"];
m4_231 [cluster="lambda expression", file="DataTableConverter.cs", label="throw new JsonSerializationException(''Cannot set value onto extension data member '{0}'. The extension data collection is null and it cannot be set.''.FormatWith(CultureInfo.InvariantCulture, member.Name));", span="542-542"];
m4_228 [cluster="lambda expression", file="DataTableConverter.cs", label="object dictionary = getExtensionDataDictionary(o)", span="537-537"];
m4_243 [cluster="lambda expression", file="DataTableConverter.cs", label="object dictionary = getExtensionDataDictionary(o)", span="563-563"];
m4_230 [cluster="lambda expression", file="DataTableConverter.cs", label="setExtensionDataDictionary == null", span="540-540"];
m4_233 [cluster="lambda expression", file="DataTableConverter.cs", label="setExtensionDataDictionary(o, dictionary)", span="546-546"];
m4_232 [cluster="lambda expression", file="DataTableConverter.cs", label="dictionary = createExtensionDataDictionary()", span="545-545"];
m4_234 [cluster="lambda expression", file="DataTableConverter.cs", label="setExtensionDataDictionaryValue(dictionary, key, value)", span="549-549"];
m4_246 [cluster="lambda expression", file="DataTableConverter.cs", label="return (IEnumerable<KeyValuePair<object, object>>)createEnumerableWrapper(dictionary);", span="569-569"];
m4_227 [cluster="lambda expression", file="DataTableConverter.cs", label="Entry lambda expression", span="535-550"];
m4_229 [cluster="lambda expression", file="DataTableConverter.cs", label="dictionary == null", span="538-538"];
m4_235 [cluster="lambda expression", file="DataTableConverter.cs", label="Exit lambda expression", span="535-550"];
m4_242 [cluster="lambda expression", file="DataTableConverter.cs", label="Entry lambda expression", span="561-570"];
m4_244 [cluster="lambda expression", file="DataTableConverter.cs", label="dictionary == null", span="564-564"];
m4_245 [cluster="lambda expression", file="DataTableConverter.cs", label="return null;", span="566-566"];
m4_247 [cluster="lambda expression", file="DataTableConverter.cs", label="Exit lambda expression", span="561-570"];
m4_273 [cluster="lambda expression", file="DataTableConverter.cs", label="Entry lambda expression", span="606-606"];
m4_274 [cluster="lambda expression", file="DataTableConverter.cs", label="c.IsDefined(typeof(JsonConstructorAttribute), true)", span="606-606"];
m4_275 [cluster="lambda expression", file="DataTableConverter.cs", label="Exit lambda expression", span="606-606"];
m4_597 [cluster="lambda expression", file="DataTableConverter.cs", label="Entry lambda expression", span="1300-1300"];
m4_598 [cluster="lambda expression", file="DataTableConverter.cs", label="p.Order ?? -1", span="1300-1300"];
m4_599 [cluster="lambda expression", file="DataTableConverter.cs", label="Exit lambda expression", span="1300-1300"];
m4_696 [cluster="lambda expression", file="DataTableConverter.cs", label="(bool)shouldSerializeCall(o)", span="1512-1512"];
m4_695 [cluster="lambda expression", file="DataTableConverter.cs", label="Entry lambda expression", span="1512-1512"];
m4_697 [cluster="lambda expression", file="DataTableConverter.cs", label="Exit lambda expression", span="1512-1512"];
m4_711 [cluster="lambda expression", file="DataTableConverter.cs", label="(bool)specifiedPropertyGet(o)", span="1530-1530"];
m4_712 [cluster="lambda expression", file="DataTableConverter.cs", label="Exit lambda expression", span="1530-1530"];
m4_571 [cluster="string.FormatWith(System.IFormatProvider, object, object, object, object)", file="DataTableConverter.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object, object, object)", span="62-62"];
m4_721 [file="DataTableConverter.cs", label="out Newtonsoft.Json.Serialization.ResolverContractKey", span=""];
m4_722 [file="DataTableConverter.cs", label="Newtonsoft.Json.Serialization.ResolverContractKey", span=""];
m4_723 [file="DataTableConverter.cs", label="ref Newtonsoft.Json.Serialization.ResolverContractKey", span=""];
m4_724 [file="DataTableConverter.cs", label="Newtonsoft.Json.Serialization.DefaultContractResolver", span=""];
m4_725 [file="DataTableConverter.cs", label=getExtensionDataDictionary, span=""];
m4_726 [file="DataTableConverter.cs", label=setExtensionDataDictionary, span=""];
m4_727 [file="DataTableConverter.cs", label="System.Reflection.MemberInfo", span=""];
m4_728 [file="DataTableConverter.cs", label=createExtensionDataDictionary, span=""];
m4_729 [file="DataTableConverter.cs", label=setExtensionDataDictionaryValue, span=""];
m4_730 [file="DataTableConverter.cs", label=createEnumerableWrapper, span=""];
m4_731 [file="DataTableConverter.cs", label="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>", span=""];
m4_732 [file="DataTableConverter.cs", label=shouldSerializeCall, span=""];
m4_733 [file="DataTableConverter.cs", label=specifiedPropertyGet, span=""];
m5_81 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", span="170-170"];
m5_82 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="DataTableConverterTests.cs", label="string.IsNullOrEmpty(s)", span="172-172"];
m5_83 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="DataTableConverterTests.cs", label="return s;", span="174-174"];
m5_84 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="DataTableConverterTests.cs", label="!char.IsUpper(s[0])", span="177-177"];
m5_85 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="DataTableConverterTests.cs", label="return s;", span="179-179"];
m5_86 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="DataTableConverterTests.cs", label="char[] chars = s.ToCharArray()", span="182-182"];
m5_87 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="DataTableConverterTests.cs", label="int i = 0", span="184-184"];
m5_88 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="DataTableConverterTests.cs", label="i < chars.Length", span="184-184"];
m5_89 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="DataTableConverterTests.cs", label="bool hasNext = (i + 1 < chars.Length)", span="186-186"];
m5_90 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="DataTableConverterTests.cs", label="i > 0 && hasNext && !char.IsUpper(chars[i + 1])", span="187-187"];
m5_91 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="DataTableConverterTests.cs", label="chars[i] = char.ToLower(chars[i], CultureInfo.InvariantCulture)", span="193-193"];
m5_93 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="DataTableConverterTests.cs", label="return new string(chars);", span="199-199"];
m5_92 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="DataTableConverterTests.cs", label="i++", span="184-184"];
m5_94 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", span="170-170"];
m5_58 [cluster="Newtonsoft.Json.Utilities.MathUtils.IntToHex(int)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.MathUtils.IntToHex(int)", span="119-119"];
m5_103 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", span="211-211"];
m5_104 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", file="DataTableConverterTests.cs", label="return char.IsLowSurrogate(c);", span="214-214"];
m5_105 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", span="211-211"];
m5_3 [cluster="string.FormatWith(System.IFormatProvider, params object[])", file="DataTableConverterTests.cs", label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="67-67"];
m5_50 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", span="136-136"];
m5_51 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="DataTableConverterTests.cs", label="buffer[0] = '\\'", span="138-138"];
m5_52 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="DataTableConverterTests.cs", label="buffer[1] = 'u'", span="139-139"];
m5_53 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="DataTableConverterTests.cs", label="buffer[2] = MathUtils.IntToHex((c >> 12) & '\x000f')", span="140-140"];
m5_54 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="DataTableConverterTests.cs", label="buffer[3] = MathUtils.IntToHex((c >> 8) & '\x000f')", span="141-141"];
m5_55 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="DataTableConverterTests.cs", label="buffer[4] = MathUtils.IntToHex((c >> 4) & '\x000f')", span="142-142"];
m5_56 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="DataTableConverterTests.cs", label="buffer[5] = MathUtils.IntToHex(c & '\x000f')", span="143-143"];
m5_57 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", span="136-136"];
m5_32 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="DataTableConverterTests.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m5_7 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object, object)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object, object)", span="57-57"];
m5_8 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object, object)", file="DataTableConverterTests.cs", label="return format.FormatWith(provider, new[] { arg0, arg1, arg2 });", span="59-59"];
m5_9 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object, object)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object, object)", span="57-57"];
m5_72 [cluster="Unk.SingleOrDefault", file="DataTableConverterTests.cs", label="Entry Unk.SingleOrDefault", span=""];
m5_110 [cluster="Newtonsoft.Json.Utilities.StringUtils.EndsWith(string, char)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.EndsWith(string, char)", span="225-225"];
m5_111 [cluster="Newtonsoft.Json.Utilities.StringUtils.EndsWith(string, char)", file="DataTableConverterTests.cs", label="return (source.Length > 0 && source[source.Length - 1] == value);", span="227-227"];
m5_112 [cluster="Newtonsoft.Json.Utilities.StringUtils.EndsWith(string, char)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.EndsWith(string, char)", span="225-225"];
m5_43 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="DataTableConverterTests.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m5_37 [cluster="string.IsNullOrEmpty(string)", file="DataTableConverterTests.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m5_18 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="31-31"];
m5_107 [cluster="Newtonsoft.Json.Utilities.StringUtils.StartsWith(string, char)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.StartsWith(string, char)", span="220-220"];
m5_108 [cluster="Newtonsoft.Json.Utilities.StringUtils.StartsWith(string, char)", file="DataTableConverterTests.cs", label="return (source.Length > 0 && source[0] == value);", span="222-222"];
m5_109 [cluster="Newtonsoft.Json.Utilities.StringUtils.StartsWith(string, char)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.StartsWith(string, char)", span="220-220"];
m5_4 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object)", span="52-52"];
m5_5 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object)", file="DataTableConverterTests.cs", label="return format.FormatWith(provider, new[] { arg0, arg1 });", span="54-54"];
m5_6 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object)", span="52-52"];
m5_95 [cluster="char.IsUpper(char)", file="DataTableConverterTests.cs", label="Entry char.IsUpper(char)", span="0-0"];
m5_38 [cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", span="116-116"];
m5_39 [cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="DataTableConverterTests.cs", label="StringBuilder sb = new StringBuilder(capacity)", span="118-118"];
m5_40 [cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="DataTableConverterTests.cs", label="StringWriter sw = new StringWriter(sb, CultureInfo.InvariantCulture)", span="119-119"];
m5_41 [cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="DataTableConverterTests.cs", label="return sw;", span="121-121"];
m5_42 [cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", span="116-116"];
m5_102 [cluster="char.IsHighSurrogate(char)", file="DataTableConverterTests.cs", label="Entry char.IsHighSurrogate(char)", span="0-0"];
m5_98 [cluster="string.String(char[])", file="DataTableConverterTests.cs", label="Entry string.String(char[])", span="0-0"];
m5_44 [cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder, System.IFormatProvider)", file="DataTableConverterTests.cs", label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder, System.IFormatProvider)", span="0-0"];
m5_106 [cluster="char.IsLowSurrogate(char)", file="DataTableConverterTests.cs", label="Entry char.IsLowSurrogate(char)", span="0-0"];
m5_70 [cluster="Unk.Where", file="DataTableConverterTests.cs", label="Entry Unk.Where", span=""];
m5_99 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", span="202-202"];
m5_100 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", file="DataTableConverterTests.cs", label="return char.IsHighSurrogate(c);", span="205-205"];
m5_101 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", span="202-202"];
m5_71 [cluster="Unk.Count", file="DataTableConverterTests.cs", label="Entry Unk.Count", span=""];
m5_0 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object)", span="47-47"];
m5_1 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object)", file="DataTableConverterTests.cs", label="return format.FormatWith(provider, new[] { arg0 });", span="49-49"];
m5_2 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object)", span="47-47"];
m5_97 [cluster="char.ToLower(char, System.Globalization.CultureInfo)", file="DataTableConverterTests.cs", label="Entry char.ToLower(char, System.Globalization.CultureInfo)", span="0-0"];
m5_77 [cluster="string.Equals(string, string, System.StringComparison)", file="DataTableConverterTests.cs", label="Entry string.Equals(string, string, System.StringComparison)", span="0-0"];
m5_45 [cluster="Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", span="124-124"];
m5_46 [cluster="Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", file="DataTableConverterTests.cs", label="value == null", span="126-126"];
m5_48 [cluster="Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", file="DataTableConverterTests.cs", label="return value.Length;", span="132-132"];
m5_47 [cluster="Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", file="DataTableConverterTests.cs", label="return null;", span="128-128"];
m5_49 [cluster="Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", span="124-124"];
m5_33 [cluster="char.IsWhiteSpace(char)", file="DataTableConverterTests.cs", label="Entry char.IsWhiteSpace(char)", span="0-0"];
m5_19 [cluster="string.Format(System.IFormatProvider, string, params object[])", file="DataTableConverterTests.cs", label="Entry string.Format(System.IFormatProvider, string, params object[])", span="0-0"];
m5_34 [cluster="Newtonsoft.Json.Utilities.StringUtils.NullEmptyString(string)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.NullEmptyString(string)", span="111-111"];
m5_35 [cluster="Newtonsoft.Json.Utilities.StringUtils.NullEmptyString(string)", file="DataTableConverterTests.cs", label="return (string.IsNullOrEmpty(s)) ? null : s;", span="113-113"];
m5_36 [cluster="Newtonsoft.Json.Utilities.StringUtils.NullEmptyString(string)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.NullEmptyString(string)", span="111-111"];
m5_13 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, params object[])", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, params object[])", span="67-67"];
m5_14 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, params object[])", file="DataTableConverterTests.cs", label="ValidationUtils.ArgumentNotNull(format, nameof(format))", span="71-71"];
m5_15 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, params object[])", file="DataTableConverterTests.cs", label="return string.Format(provider, format, args);", span="73-73"];
m5_16 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, params object[])", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, params object[])", span="67-67"];
m5_96 [cluster="string.ToCharArray()", file="DataTableConverterTests.cs", label="Entry string.ToCharArray()", span="0-0"];
m5_20 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", span="83-83"];
m5_21 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="DataTableConverterTests.cs", label="s == null", span="85-85"];
m5_22 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="DataTableConverterTests.cs", label="throw new ArgumentNullException(nameof(s));", span="87-87"];
m5_23 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="DataTableConverterTests.cs", label="s.Length == 0", span="90-90"];
m5_26 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="DataTableConverterTests.cs", label="i < s.Length", span="95-95"];
m5_27 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="DataTableConverterTests.cs", label="!char.IsWhiteSpace(s[i])", span="97-97"];
m5_24 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="DataTableConverterTests.cs", label="return false;", span="92-92"];
m5_25 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="DataTableConverterTests.cs", label="int i = 0", span="95-95"];
m5_29 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="DataTableConverterTests.cs", label="i++", span="95-95"];
m5_30 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="DataTableConverterTests.cs", label="return true;", span="103-103"];
m5_28 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="DataTableConverterTests.cs", label="return false;", span="99-99"];
m5_31 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", span="83-83"];
m5_17 [cluster="Unk.nameof", file="DataTableConverterTests.cs", label="Entry Unk.nameof", span=""];
m5_59 [cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", span="146-146"];
m5_60 [cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="DataTableConverterTests.cs", label="source == null", span="148-148"];
m5_61 [cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="DataTableConverterTests.cs", label="throw new ArgumentNullException(nameof(source));", span="150-150"];
m5_62 [cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="DataTableConverterTests.cs", label="valueSelector == null", span="152-152"];
m5_63 [cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="DataTableConverterTests.cs", label="throw new ArgumentNullException(nameof(valueSelector));", span="154-154"];
m5_64 [cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="DataTableConverterTests.cs", label="var caseInsensitiveResults = source.Where(s => string.Equals(valueSelector(s), testValue, StringComparison.OrdinalIgnoreCase))", span="157-157"];
m5_67 [cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="DataTableConverterTests.cs", label="var caseSensitiveResults = source.Where(s => string.Equals(valueSelector(s), testValue, StringComparison.Ordinal))", span="165-165"];
m5_65 [cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="DataTableConverterTests.cs", label="caseInsensitiveResults.Count() <= 1", span="158-158"];
m5_66 [cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="DataTableConverterTests.cs", label="return caseInsensitiveResults.SingleOrDefault();", span="160-160"];
m5_68 [cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="DataTableConverterTests.cs", label="return caseSensitiveResults.SingleOrDefault();", span="166-166"];
m5_69 [cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", span="146-146"];
m5_76 [cluster="System.Func<T, TResult>.Invoke(T)", file="DataTableConverterTests.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m5_78 [cluster="lambda expression", file="DataTableConverterTests.cs", label="Entry lambda expression", span="165-165"];
m5_74 [cluster="lambda expression", file="DataTableConverterTests.cs", label="string.Equals(valueSelector(s), testValue, StringComparison.OrdinalIgnoreCase)", span="157-157"];
m5_79 [cluster="lambda expression", file="DataTableConverterTests.cs", label="string.Equals(valueSelector(s), testValue, StringComparison.Ordinal)", span="165-165"];
m5_73 [cluster="lambda expression", file="DataTableConverterTests.cs", label="Entry lambda expression", span="157-157"];
m5_75 [cluster="lambda expression", file="DataTableConverterTests.cs", label="Exit lambda expression", span="157-157"];
m5_80 [cluster="lambda expression", file="DataTableConverterTests.cs", label="Exit lambda expression", span="165-165"];
m5_10 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object, object, object)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object, object, object)", span="62-62"];
m5_11 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object, object, object)", file="DataTableConverterTests.cs", label="return format.FormatWith(provider, new[] { arg0, arg1, arg2, arg3 });", span="64-64"];
m5_12 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object, object, object)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object, object, object)", span="62-62"];
m5_113 [file="DataTableConverterTests.cs", label="System.Func<TSource, string>", span=""];
m5_114 [file="DataTableConverterTests.cs", label=string, span=""];
m6_137 [cluster="System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", span="64-64"];
m6_87 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", span="118-118"];
m6_4 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.GetHashCode()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.ResolverContractKey.GetHashCode()", span="65-65"];
m6_5 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.GetHashCode()", file="DefaultContractResolver.cs", label="return _resolverType.GetHashCode() ^ _contractType.GetHashCode();", span="67-67"];
m6_6 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.GetHashCode()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.ResolverContractKey.GetHashCode()", span="65-65"];
m6_108 [cluster="System.Type.IsGenericType()", file="DefaultContractResolver.cs", label="Entry System.Type.IsGenericType()", span="125-125"];
m6_416 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="DefaultContractResolver.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
m6_136 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="893-893"];
m6_424 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="List<MemberInfo> members = GetSerializableMembers(type)", span="895-895"];
m6_427 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="JsonPropertyCollection properties = new JsonPropertyCollection(type)", span="899-899"];
m6_429 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="JsonProperty property = CreateProperty(member, memberSerialization)", span="903-903"];
m6_425 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="members == null", span="896-896"];
m6_428 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label=members, span="901-901"];
m6_426 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="throw new JsonSerializationException(''Null collection of seralizable members returned.'');", span="897-897"];
m6_431 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="properties.AddProperty(property)", span="906-906"];
m6_432 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="IList<JsonProperty> orderedProperties = properties.OrderBy(p => p.Order ?? -1).ToList()", span="909-909"];
m6_430 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="property != null", span="905-905"];
m6_433 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="return orderedProperties;", span="910-910"];
m6_434 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="893-893"];
m6_414 [cluster="string.FormatWith(System.IFormatProvider, params object[])", file="DefaultContractResolver.cs", label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="62-62"];
m6_175 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", span="45-45"];
m6_553 [cluster="System.Type.GetField(string)", file="DefaultContractResolver.cs", label="Entry System.Type.GetField(string)", span="0-0"];
m6_312 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="MethodInfo currentOnError = null", span="666-666"];
m6_313 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="baseType.GetMethods(BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)", span="668-668"];
m6_314 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="DefaultContractResolver.cs", label="InitializeContract(contract)", span="699-699"];
m6_315 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="Type prevAttributeType = null", span="675-675"];
m6_316 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", span="696-696"];
m6_13 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(Newtonsoft.Json.Serialization.ResolverContractKey)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.ResolverContractKey.Equals(Newtonsoft.Json.Serialization.ResolverContractKey)", span="78-78"];
m6_14 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(Newtonsoft.Json.Serialization.ResolverContractKey)", file="DefaultContractResolver.cs", label="return (_resolverType == other._resolverType && _contractType == other._contractType);", span="80-80"];
m6_15 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(Newtonsoft.Json.Serialization.ResolverContractKey)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.ResolverContractKey.Equals(Newtonsoft.Json.Serialization.ResolverContractKey)", span="78-78"];
m6_178 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", span="66-66"];
m6_227 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", span="223-223"];
m6_151 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataForType(System.Type)", color=green, community=0, file="DefaultContractResolver.cs", label="memberType != MemberTypes.Property && memberType != MemberTypes.Field", prediction=222, span="410-410"];
m6_437 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m6_23 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", span="200-200"];
m6_24 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", file="DefaultContractResolver.cs", label=_sharedCache, span="202-202"];
m6_25 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", file="DefaultContractResolver.cs", label="return _sharedContractCache;", span="203-203"];
m6_26 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", file="DefaultContractResolver.cs", label="return _instanceContractCache;", span="205-205"];
m6_27 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", span="200-200"];
m6_297 [cluster="System.Type.BaseType()", file="DefaultContractResolver.cs", label="Entry System.Type.BaseType()", span="143-143"];
m6_318 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", span="709-709"];
m6_319 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="DefaultContractResolver.cs", label="JsonLinqContract contract = new JsonLinqContract(objectType)", span="711-711"];
m6_320 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="DefaultContractResolver.cs", label="InitializeContract(contract)", span="712-712"];
m6_321 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="DefaultContractResolver.cs", label="return contract;", span="714-714"];
m6_322 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", span="709-709"];
m6_394 [cluster="System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", file="DefaultContractResolver.cs", label="Entry System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", span="0-0"];
m6_49 [cluster="object.GetType()", file="DefaultContractResolver.cs", label="Entry object.GetType()", span="0-0"];
m6_90 [cluster="System.Collections.Generic.List<T>.Add(T)", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m6_529 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataMemberAttribute(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataMemberAttribute(System.Reflection.MemberInfo)", span="135-135"];
m6_143 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs", label="markedConstructors.Count > 1", span="398-398"];
m6_144 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", color=green, community=0, file="DefaultContractResolver.cs", label="throw new JsonException(''Multiple constructors with the JsonConstructorAttribute.'');", prediction=223, span="399-399"];
m6_145 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", color=green, community=0, file="DefaultContractResolver.cs", label="markedConstructors.Count == 1", prediction=224, span="400-400"];
m6_168 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", color=green, community=0, file="DefaultContractResolver.cs", label="matchingMemberProperty = null", prediction=225, span="440-440"];
m6_166 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", color=green, community=0, file="DefaultContractResolver.cs", label="JsonProperty matchingMemberProperty = (parameterInfo.Name != null) ? memberProperties.GetClosestMatchProperty(parameterInfo.Name) : null", prediction=224, span="436-436"];
m6_149 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", color=green, community=0, file="DefaultContractResolver.cs", label="return null;", prediction=224, span="407-407"];
m6_146 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", color=green, community=0, file="DefaultContractResolver.cs", label="return markedConstructors[0];", prediction=224, span="401-401"];
m6_147 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", color=green, community=0, file="DefaultContractResolver.cs", label="objectType == typeof(Version)", prediction=224, span="404-404"];
m6_148 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", color=green, community=0, file="DefaultContractResolver.cs", label="return objectType.GetConstructor(new [] { typeof(int), typeof(int), typeof(int), typeof(int) });", prediction=224, span="405-405"];
m6_152 [cluster="Newtonsoft.Json.JsonException.JsonException(string)", color=green, community=0, file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.JsonException.JsonException(string)", prediction=224, span="54-54"];
m6_150 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", color=green, community=0, file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", prediction=232, span="394-394"];
m6_153 [cluster="System.Type.GetConstructor(System.Type[])", color=green, community=0, file="DefaultContractResolver.cs", label="Entry System.Type.GetConstructor(System.Type[])", prediction=224, span="0-0"];
m6_162 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", color=green, community=0, file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", prediction=224, span="0-0"];
m6_163 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", color=green, community=0, file="DefaultContractResolver.cs", label="var constructorParameters = constructor.GetParameters()", prediction=224, span="428-428"];
m6_167 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", color=green, community=0, file="DefaultContractResolver.cs", label="matchingMemberProperty != null && matchingMemberProperty.PropertyType != parameterInfo.ParameterType", prediction=224, span="439-439"];
m6_154 [cluster="lambda expression", color=green, community=0, file="DefaultContractResolver.cs", label="Entry lambda expression", prediction=224, span="396-396"];
m6_155 [cluster="lambda expression", color=green, community=0, file="DefaultContractResolver.cs", label="c.IsDefined(typeof(JsonConstructorAttribute), true)", prediction=224, span="396-396"];
m6_158 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", color=green, community=0, file="DefaultContractResolver.cs", label="constructors.Count == 1", prediction=224, span="414-414"];
m6_161 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", color=green, community=0, file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", prediction=224, span="410-410"];
m6_164 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", color=green, community=0, file="DefaultContractResolver.cs", label="JsonPropertyCollection parameterCollection = new JsonPropertyCollection(constructor.DeclaringType)", prediction=241, span="430-430"];
m6_160 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", color=green, community=0, file="DefaultContractResolver.cs", label="return null;", prediction=224, span="417-417"];
m6_156 [cluster="lambda expression", color=green, community=0, file="DefaultContractResolver.cs", label="Exit lambda expression", prediction=224, span="396-396"];
m6_157 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", color=green, community=0, file="DefaultContractResolver.cs", label="IList<ConstructorInfo> constructors = objectType.GetConstructors(BindingFlags.Public | BindingFlags.Instance).ToList()", prediction=224, span="412-412"];
m6_159 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", color=green, community=0, file="DefaultContractResolver.cs", label="return constructors[0];", prediction=224, span="415-415"];
m6_165 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", color=green, community=0, file="DefaultContractResolver.cs", label=constructorParameters, prediction=224, span="432-432"];
m6_169 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs", label="JsonProperty property = CreatePropertyFromConstructorParameter(matchingMemberProperty, parameterInfo)", span="442-442"];
m6_381 [cluster="System.Type.IsSubclassOf(System.Type)", file="DefaultContractResolver.cs", label="Entry System.Type.IsSubclassOf(System.Type)", span="0-0"];
m6_200 [cluster="Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()", span="37-37"];
m6_172 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs", label="return parameterCollection;", span="450-450"];
m6_256 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="MethodInfo currentOnDeserializing = null", span="599-599"];
m6_201 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", span="971-971"];
m6_470 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="DataContractAttribute dataContractAttribute = JsonTypeReflector.GetDataContractAttribute(declaringType)", span="974-974"];
m6_471 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="MemberInfo memberInfo = attributeProvider as MemberInfo", span="976-976"];
m6_476 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="JsonPropertyAttribute propertyAttribute = JsonTypeReflector.GetAttribute<JsonPropertyAttribute>(attributeProvider)", span="985-985"];
m6_478 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.HasMemberAttribute = true", span="987-987"];
m6_484 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="mappedName = name", span="997-997"];
m6_485 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.PropertyName = ResolvePropertyName(mappedName)", span="999-999"];
m6_486 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.UnderlyingName = name", span="1000-1000"];
m6_489 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property._required = propertyAttribute._required", span="1005-1005"];
m6_490 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.Order = propertyAttribute._order", span="1006-1006"];
m6_491 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.DefaultValueHandling = propertyAttribute._defaultValueHandling", span="1007-1007"];
m6_494 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property._required = (dataMemberAttribute.IsRequired) ? Required.AllowNull : Required.Default", span="1013-1013"];
m6_495 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.Order = (dataMemberAttribute.Order != -1) ? (int?) dataMemberAttribute.Order : null", span="1014-1014"];
m6_496 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.DefaultValueHandling = (!dataMemberAttribute.EmitDefaultValue) ? (DefaultValueHandling?) DefaultValueHandling.Ignore : null", span="1015-1015"];
m6_498 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="bool hasJsonIgnoreAttribute =\r\n        JsonTypeReflector.GetAttribute<JsonIgnoreAttribute>(attributeProvider) != null\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE40 || PORTABLE)\r\n        || JsonTypeReflector.GetAttribute<NonSerializedAttribute>(attributeProvider) != null", span="1020-1023"];
m6_499 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="memberSerialization != MemberSerialization.OptIn", span="1027-1027"];
m6_501 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="hasIgnoreDataMemberAttribute = (JsonTypeReflector.GetAttribute<IgnoreDataMemberAttribute>(attributeProvider) != null)", span="1032-1032"];
m6_502 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.Ignored = (hasJsonIgnoreAttribute || hasIgnoreDataMemberAttribute)", span="1036-1036"];
m6_503 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.Ignored = (hasJsonIgnoreAttribute || !hasMemberAttribute)", span="1041-1041"];
m6_504 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.Converter = JsonTypeReflector.GetJsonConverter(attributeProvider, property.PropertyType)", span="1046-1046"];
m6_505 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.MemberConverter = JsonTypeReflector.GetJsonConverter(attributeProvider, property.PropertyType)", span="1047-1047"];
m6_506 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="DefaultValueAttribute defaultValueAttribute = JsonTypeReflector.GetAttribute<DefaultValueAttribute>(attributeProvider)", span="1049-1049"];
m6_508 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.DefaultValue = defaultValueAttribute.Value", span="1051-1051"];
m6_509 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.NullValueHandling = (propertyAttribute != null) ? propertyAttribute._nullValueHandling : null", span="1053-1053"];
m6_510 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.ReferenceLoopHandling = (propertyAttribute != null) ? propertyAttribute._referenceLoopHandling : null", span="1054-1054"];
m6_511 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.ObjectCreationHandling = (propertyAttribute != null) ? propertyAttribute._objectCreationHandling : null", span="1055-1055"];
m6_512 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.TypeNameHandling = (propertyAttribute != null) ? propertyAttribute._typeNameHandling : null", span="1056-1056"];
m6_513 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.IsReference = (propertyAttribute != null) ? propertyAttribute._isReference : null", span="1057-1057"];
m6_514 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.ItemIsReference = (propertyAttribute != null) ? propertyAttribute._itemIsReference : null", span="1059-1059"];
m6_515 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", span="1151-1151"];
m6_516 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.ItemReferenceLoopHandling = (propertyAttribute != null) ? propertyAttribute._itemReferenceLoopHandling : null", span="1064-1064"];
m6_517 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.ItemTypeNameHandling = (propertyAttribute != null) ? propertyAttribute._itemTypeNameHandling : null", span="1065-1065"];
m6_523 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="memberSerialization == MemberSerialization.Fields", span="1072-1072"];
m6_527 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.HasMemberAttribute = true", span="1079-1079"];
m6_473 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="dataContractAttribute != null && memberInfo != null", span="979-979"];
m6_472 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="DataMemberAttribute dataMemberAttribute", span="978-978"];
m6_474 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="dataMemberAttribute = JsonTypeReflector.GetDataMemberAttribute((MemberInfo) memberInfo)", span="980-980"];
m6_475 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="dataMemberAttribute = null", span="982-982"];
m6_482 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="dataMemberAttribute != null && dataMemberAttribute.Name != null", span="993-993"];
m6_483 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="mappedName = dataMemberAttribute.Name", span="994-994"];
m6_493 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="dataMemberAttribute != null", span="1011-1011"];
m6_525 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="dataMemberAttribute != null", span="1076-1076"];
m6_477 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="propertyAttribute != null", span="986-986"];
m6_480 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="propertyAttribute != null && propertyAttribute.PropertyName != null", span="990-990"];
m6_481 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="mappedName = propertyAttribute.PropertyName", span="991-991"];
m6_488 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="propertyAttribute != null", span="1003-1003"];
m6_521 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="propertyAttribute != null", span="1070-1070"];
m6_479 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="string mappedName", span="989-989"];
m6_487 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="bool hasMemberAttribute = false", span="1002-1002"];
m6_492 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="hasMemberAttribute = true", span="1008-1008"];
m6_497 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="hasMemberAttribute = true", span="1016-1016"];
m6_500 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="bool hasIgnoreDataMemberAttribute = false", span="1029-1029"];
m6_507 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="defaultValueAttribute != null", span="1050-1050"];
m6_518 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="allowNonPublicAccess = false", span="1067-1067"];
m6_519 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="(DefaultMembersSearchFlags & BindingFlags.NonPublic) == BindingFlags.NonPublic", span="1068-1068"];
m6_520 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="allowNonPublicAccess = true", span="1069-1069"];
m6_522 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="allowNonPublicAccess = true", span="1071-1071"];
m6_524 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="allowNonPublicAccess = true", span="1073-1073"];
m6_526 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="allowNonPublicAccess = true", span="1078-1078"];
m6_545 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", color=green, community=0, file="DefaultContractResolver.cs", label="specifiedMember == null || ReflectionUtils.GetMemberUnderlyingType(specifiedMember) != typeof(bool)", prediction=247, span="1103-1103"];
m6_540 [cluster="lambda expression", file="DefaultContractResolver.cs", label="(bool)shouldSerializeCall(o)", span="1094-1094"];
m6_539 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="1094-1094"];
m6_544 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DefaultContractResolver.cs", label="specifiedMember = member.DeclaringType.GetField(member.Name + JsonTypeReflector.SpecifiedPostfix)", span="1101-1101"];
m6_546 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DefaultContractResolver.cs", label="return;", span="1105-1105"];
m6_549 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DefaultContractResolver.cs", label="ReflectionUtils.CanSetMemberValue(specifiedMember, allowNonPublicAccess, false)", span="1112-1112"];
m6_550 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DefaultContractResolver.cs", label="property.SetIsSpecified = JsonTypeReflector.ReflectionDelegateFactory.CreateSet<object>(specifiedMember)", span="1113-1113"];
m6_528 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", span="971-971"];
m6_205 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object, System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object, System.Type)", span="205-205"];
m6_110 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", span="346-346"];
m6_111 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="JsonObjectContract contract = new JsonObjectContract(objectType)", span="348-348"];
m6_112 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="InitializeContract(contract)", span="349-349"];
m6_115 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.MemberSerialization = JsonTypeReflector.GetObjectMemberSerialization(contract.NonNullableUnderlyingType, ignoreSerializableAttribute)", span="358-358"];
m6_116 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.Properties.AddRange(CreateProperties(contract.NonNullableUnderlyingType, contract.MemberSerialization))", span="359-359"];
m6_117 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="JsonObjectAttribute attribute = JsonTypeReflector.GetJsonObjectAttribute(contract.NonNullableUnderlyingType)", span="361-361"];
m6_119 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.ItemRequired = attribute._itemRequired", span="363-363"];
m6_120 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="ConstructorInfo overrideConstructor = GetAttributeConstructor(contract.NonNullableUnderlyingType)", span="365-365"];
m6_122 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.OverrideConstructor = overrideConstructor", span="370-370"];
m6_123 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.ConstructorParameters.AddRange(CreateConstructorParameters(overrideConstructor, contract.Properties))", span="371-371"];
m6_124 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.MemberSerialization == MemberSerialization.Fields", span="373-373"];
m6_126 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.DefaultCreator = contract.GetUninitializedObject", span="379-379"];
m6_127 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.DefaultCreator == null || contract.DefaultCreatorNonPublic", span="382-382"];
m6_128 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="ConstructorInfo constructor = GetParametrizedConstructor(contract.NonNullableUnderlyingType)", span="384-384"];
m6_130 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.ParametrizedConstructor = constructor", span="387-387"];
m6_131 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.ConstructorParameters.AddRange(CreateConstructorParameters(constructor, contract.Properties))", span="388-388"];
m6_132 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", color=green, community=0, file="DefaultContractResolver.cs", label="contract.ExtensionDataSetter = GetExtensionDataForType(contract.NonNullableUnderlyingType)", prediction=248, span="392-392"];
m6_113 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="bool ignoreSerializableAttribute", span="351-351"];
m6_114 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="ignoreSerializableAttribute = IgnoreSerializableAttribute", span="353-353"];
m6_118 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="attribute != null", span="362-362"];
m6_121 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="overrideConstructor != null", span="368-368"];
m6_125 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="JsonTypeReflector.FullyTrusted", span="378-378"];
m6_129 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="constructor != null", span="385-385"];
m6_133 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", color=green, community=0, file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", prediction=249, span="346-346"];
m6_50 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m6_0 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", span="59-59"];
m6_1 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", file="DefaultContractResolver.cs", label="_resolverType = resolverType", span="61-61"];
m6_2 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", file="DefaultContractResolver.cs", label="_contractType = contractType", span="62-62"];
m6_3 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", span="59-59"];
m6_247 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", span="585-585"];
m6_248 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onSerializing = null", span="587-587"];
m6_253 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="GetClassHierarchyForType(type)", span="593-593"];
m6_249 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onSerialized = null", span="588-588"];
m6_264 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onSerializing = onSerializing ?? new List<SerializationCallback>()", span="615-615"];
m6_250 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onDeserializing = null", span="589-589"];
m6_268 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onSerialized = onSerialized ?? new List<SerializationCallback>()", span="621-621"];
m6_251 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onDeserialized = null", span="590-590"];
m6_272 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onDeserializing = onDeserializing ?? new List<SerializationCallback>()", span="627-627"];
m6_252 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onError = null", span="591-591"];
m6_276 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onDeserialized = onDeserialized ?? new List<SerializationCallback>()", span="633-633"];
m6_280 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onError = onError ?? new List<SerializationErrorCallback>()", span="639-639"];
m6_254 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="MethodInfo currentOnSerializing = null", span="597-597"];
m6_259 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="baseType.GetMethods(BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)", span="603-603"];
m6_255 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="MethodInfo currentOnSerialized = null", span="598-598"];
m6_263 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="IsValidCallback(method, parameters, typeof(OnSerializingAttribute), currentOnSerializing, ref prevAttributeType)", span="613-613"];
m6_267 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="IsValidCallback(method, parameters, typeof(OnSerializedAttribute), currentOnSerialized, ref prevAttributeType)", span="619-619"];
m6_257 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="MethodInfo currentOnDeserialized = null", span="600-600"];
m6_271 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="IsValidCallback(method, parameters, typeof(OnDeserializingAttribute), currentOnDeserializing, ref prevAttributeType)", span="625-625"];
m6_258 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="MethodInfo currentOnError = null", span="601-601"];
m6_275 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="IsValidCallback(method, parameters, typeof(OnDeserializedAttribute), currentOnDeserialized, ref prevAttributeType)", span="631-631"];
m6_279 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="IsValidCallback(method, parameters, typeof(OnErrorAttribute), currentOnError, ref prevAttributeType)", span="637-637"];
m6_260 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="method.ContainsGenericParameters", span="607-607"];
m6_262 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="ParameterInfo[] parameters = method.GetParameters()", span="611-611"];
m6_265 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onSerializing.Add(JsonContract.CreateSerializationCallback(method))", span="616-616"];
m6_266 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="currentOnSerializing = method", span="617-617"];
m6_269 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onSerialized.Add(JsonContract.CreateSerializationCallback(method))", span="622-622"];
m6_270 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="currentOnSerialized = method", span="623-623"];
m6_273 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onDeserializing.Add(JsonContract.CreateSerializationCallback(method))", span="628-628"];
m6_274 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="currentOnDeserializing = method", span="629-629"];
m6_277 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onDeserialized.Add(JsonContract.CreateSerializationCallback(method))", span="634-634"];
m6_278 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="currentOnDeserialized = method", span="635-635"];
m6_281 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onError.Add(JsonContract.CreateSerializationErrorCallback(method))", span="640-640"];
m6_282 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="currentOnError = method", span="641-641"];
m6_261 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="Type prevAttributeType = null", span="610-610"];
m6_308 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", color=green, community=0, file="DefaultContractResolver.cs", label="InitializeContract(contract)", prediction=224, span="686-686"];
m6_309 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs", label="return contract;", span="688-688"];
m6_310 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", span="683-683"];
m6_311 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", span="73-73"];
m6_307 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs", label="JsonArrayContract contract = new JsonArrayContract(objectType)", span="685-685"];
m6_317 [cluster="Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", span="44-44"];
m6_283 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", span="585-585"];
m6_382 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", span="88-88"];
m6_288 [cluster="Newtonsoft.Json.Serialization.JsonContract.CreateSerializationErrorCallback(System.Reflection.MethodInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonContract.CreateSerializationErrorCallback(System.Reflection.MethodInfo)", span="385-385"];
m6_176 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", span="115-115"];
m6_466 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", span="530-530"];
m6_306 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", span="683-683"];
m6_554 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateGet<T>(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateGet<T>(System.Reflection.MemberInfo)", span="37-37"];
m6_52 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m6_448 [cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.DynamicValueProvider(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DynamicValueProvider.DynamicValueProvider(System.Reflection.MemberInfo)", span="51-51"];
m6_347 [cluster="Newtonsoft.Json.Serialization.JsonDynamicContract.JsonDynamicContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonDynamicContract.JsonDynamicContract(System.Type)", span="77-77"];
m6_538 [cluster="System.Type.GetMethod(string, System.Type[])", file="DefaultContractResolver.cs", label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0"];
m6_435 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
m6_228 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="544-544"];
m6_229 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="List<SerializationCallback> onSerializing", span="546-546"];
m6_234 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="GetCallbackMethodsForType(t, out onSerializing, out onSerialized, out onDeserializing, out onDeserialized, out onError)", span="552-552"];
m6_236 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="contract.OnSerializingCallbacks.AddRange(onSerializing)", span="560-560"];
m6_238 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="contract.OnSerializedCallbacks.AddRange(onSerialized)", span="565-565"];
m6_240 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="contract.OnDeserializingCallbacks.AddRange(onDeserializing)", span="568-568"];
m6_242 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="!t.IsGenericType() || (t.GetGenericTypeDefinition() != typeof(ConcurrentDictionary<,>))", span="574-574"];
m6_243 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="contract.OnDeserializedCallbacks.AddRange(onDeserialized)", span="575-575"];
m6_245 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="contract.OnErrorCallbacks.AddRange(onError)", span="582-582"];
m6_230 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="List<SerializationCallback> onSerialized", span="547-547"];
m6_231 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="List<SerializationCallback> onDeserializing", span="548-548"];
m6_232 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="List<SerializationCallback> onDeserialized", span="549-549"];
m6_233 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="List<SerializationErrorCallback> onError", span="550-550"];
m6_235 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="onSerializing != null", span="554-554"];
m6_237 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="onSerialized != null", span="564-564"];
m6_239 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="onDeserializing != null", span="567-567"];
m6_241 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="onDeserialized != null", span="570-570"];
m6_244 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="onError != null", span="581-581"];
m6_246 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="544-544"];
m6_16 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="174-174"];
m6_17 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="174-174"];
m6_467 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", span="564-564"];
m6_134 [cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", span="112-112"];
m6_287 [cluster="Newtonsoft.Json.Serialization.JsonContract.CreateSerializationCallback(System.Reflection.MethodInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonContract.CreateSerializationCallback(System.Reflection.MethodInfo)", span="380-380"];
m6_174 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", span="276-276"];
m6_51 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", span="776-776"];
m6_354 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="Type t = ReflectionUtils.EnsureNotNullableType(objectType)", span="778-778"];
m6_355 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="JsonConvert.IsJsonPrimitiveType(objectType)", span="780-780"];
m6_356 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreatePrimitiveContract(objectType);", span="781-781"];
m6_358 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreateObjectContract(objectType);", span="784-784"];
m6_360 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreateArrayContract(objectType);", span="787-787"];
m6_362 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreateDictionaryContract(objectType);", span="790-790"];
m6_364 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreateLinqContract(objectType);", span="793-793"];
m6_366 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreateDictionaryContract(objectType);", span="796-796"];
m6_368 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreateArrayContract(objectType);", span="799-799"];
m6_370 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreateStringContract(objectType);", span="802-802"];
m6_372 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreateISerializableContract(objectType);", span="806-806"];
m6_374 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreateDynamicContract(objectType);", span="811-811"];
m6_375 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreateObjectContract(objectType);", span="814-814"];
m6_357 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="JsonTypeReflector.GetJsonObjectAttribute(t) != null", span="783-783"];
m6_359 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="JsonTypeReflector.GetJsonArrayAttribute(t) != null", span="786-786"];
m6_361 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="JsonTypeReflector.GetJsonDictionaryAttribute(t) != null", span="789-789"];
m6_363 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="t == typeof(JToken) || t.IsSubclassOf(typeof(JToken))", span="792-792"];
m6_365 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="CollectionUtils.IsDictionaryType(t)", span="795-795"];
m6_367 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="typeof(IEnumerable).IsAssignableFrom(t)", span="798-798"];
m6_369 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="CanConvertToString(t)", span="801-801"];
m6_371 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="!IgnoreSerializableInterface && typeof(ISerializable).IsAssignableFrom(t)", span="805-805"];
m6_373 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="typeof(IDynamicMetaObjectProvider).IsAssignableFrom(t)", span="810-810"];
m6_376 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", span="776-776"];
m6_18 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", span="188-188"];
m6_19 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", file="DefaultContractResolver.cs", label="DefaultMembersSearchFlags = BindingFlags.Public | BindingFlags.Instance", span="191-191"];
m6_21 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", file="DefaultContractResolver.cs", label="_sharedCache = shareCache", span="197-197"];
m6_20 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", file="DefaultContractResolver.cs", label="IgnoreSerializableAttribute = true", span="194-194"];
m6_22 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", span="188-188"];
m6_333 [cluster="Newtonsoft.Json.Serialization.JsonISerializableContract.JsonISerializableContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonISerializableContract.JsonISerializableContract(System.Type)", span="45-45"];
m6_298 [cluster="System.Collections.Generic.List<T>.Reverse()", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.List<T>.Reverse()", span="0-0"];
m6_86 [cluster="System.Collections.Generic.List<T>.List()", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m6_339 [cluster="Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", span="27-27"];
m6_286 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", span="846-846"];
m6_395 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="!method.IsDefined(attributeType, false)", span="848-848"];
m6_397 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="currentCallback != null", span="851-851"];
m6_398 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="throw new JsonException(''Invalid attribute. Both '{0}' and '{1}' in type '{2}' have '{3}'.''.FormatWith(CultureInfo.InvariantCulture, method, currentCallback, GetClrTypeFullName(method.DeclaringType), attributeType));", span="852-852"];
m6_399 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="prevAttributeType != null", span="854-854"];
m6_400 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="throw new JsonException(''Invalid Callback. Method '{3}' in type '{2}' has both '{0}' and '{1}'.''.FormatWith(CultureInfo.InvariantCulture, prevAttributeType, attributeType, GetClrTypeFullName(method.DeclaringType), method));", span="855-855"];
m6_401 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="method.IsVirtual", span="857-857"];
m6_402 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="throw new JsonException(''Virtual Method '{0}' of type '{1}' cannot be marked with '{2}' attribute.''.FormatWith(CultureInfo.InvariantCulture, method, GetClrTypeFullName(method.DeclaringType), attributeType));", span="858-858"];
m6_403 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="method.ReturnType != typeof(void)", span="860-860"];
m6_404 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="throw new JsonException(''Serialization Callback '{1}' in type '{0}' must return void.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method));", span="861-861"];
m6_405 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="attributeType == typeof(OnErrorAttribute)", span="863-863"];
m6_406 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="parameters == null || parameters.Length != 2 || parameters[0].ParameterType != typeof(StreamingContext) || parameters[1].ParameterType != typeof(ErrorContext)", span="865-865"];
m6_407 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="throw new JsonException(''Serialization Error Callback '{1}' in type '{0}' must have two parameters of type '{2}' and '{3}'.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method, typeof(StreamingContext), typeof(ErrorContext)));", span="866-866"];
m6_408 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="parameters == null || parameters.Length != 1 || parameters[0].ParameterType != typeof(StreamingContext)", span="870-870"];
m6_409 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="throw new JsonException(''Serialization Callback '{1}' in type '{0}' must have a single parameter of type '{2}'.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method, typeof(StreamingContext)));", span="871-871"];
m6_410 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="prevAttributeType = attributeType", span="874-874"];
m6_396 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="return false;", span="849-849"];
m6_411 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="return true;", span="876-876"];
m6_412 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", span="846-846"];
m6_53 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m6_413 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", span="879-879"];
m6_417 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DefaultContractResolver.cs", label="type.IsGenericTypeDefinition() || !type.ContainsGenericParameters()", span="881-881"];
m6_418 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DefaultContractResolver.cs", label="return type.FullName;", span="882-882"];
m6_419 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DefaultContractResolver.cs", label="return string.Format(CultureInfo.InvariantCulture, ''{0}.{1}'', new object[] { type.Namespace, type.Name });", span="884-884"];
m6_420 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", span="879-879"];
m6_324 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", span="723-723"];
m6_325 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DefaultContractResolver.cs", label="JsonISerializableContract contract = new JsonISerializableContract(objectType)", span="725-725"];
m6_326 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DefaultContractResolver.cs", label="InitializeContract(contract)", span="726-726"];
m6_327 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DefaultContractResolver.cs", label="ConstructorInfo constructorInfo = contract.NonNullableUnderlyingType.GetConstructor(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance, null, new[] { typeof(SerializationInfo), typeof(StreamingContext) }, null)", span="728-728"];
m6_330 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DefaultContractResolver.cs", label="contract.ISerializableCreator = (args => methodCall(null, args))", span="733-733"];
m6_331 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DefaultContractResolver.cs", label="return contract;", span="736-736"];
m6_328 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DefaultContractResolver.cs", label="constructorInfo != null", span="729-729"];
m6_329 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DefaultContractResolver.cs", label="MethodCall<object, object> methodCall = JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(constructorInfo)", span="731-731"];
m6_332 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", span="723-723"];
m6_209 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", span="64-64"];
m6_142 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs", label="IList<ConstructorInfo> markedConstructors = objectType.GetConstructors(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).Where(c => c.IsDefined(typeof(JsonConstructorAttribute), true)).ToList()", span="396-396"];
m6_141 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", span="410-410"];
m6_89 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m6_224 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", span="861-861"];
m6_421 [cluster="System.Type.IsGenericTypeDefinition()", file="DefaultContractResolver.cs", label="Entry System.Type.IsGenericTypeDefinition()", span="134-134"];
m6_93 [cluster="System.Type.AssignableToTypeName(string, out System.Type)", file="DefaultContractResolver.cs", label="Entry System.Type.AssignableToTypeName(string, out System.Type)", span="523-523"];
m6_559 [cluster="System.Func<T, TResult>.Invoke(T)", file="DefaultContractResolver.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m6_206 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", span="502-502"];
m6_207 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", file="DefaultContractResolver.cs", label="return JsonTypeReflector.ReflectionDelegateFactory.CreateDefaultConstructor<object>(createdType);", span="504-504"];
m6_208 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", span="502-502"];
m6_380 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonDictionaryAttribute(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonDictionaryAttribute(System.Type)", span="105-105"];
m6_422 [cluster="System.Type.ContainsGenericParameters()", file="DefaultContractResolver.cs", label="Entry System.Type.ContainsGenericParameters()", span="107-107"];
m6_97 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", span="443-443"];
m6_469 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", span="1097-1097"];
m6_542 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DefaultContractResolver.cs", label="MemberInfo specifiedMember = member.DeclaringType.GetProperty(member.Name + JsonTypeReflector.SpecifiedPostfix)", span="1099-1099"];
m6_548 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DefaultContractResolver.cs", label="property.GetIsSpecified = o => (bool)specifiedPropertyGet(o)", span="1110-1110"];
m6_543 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DefaultContractResolver.cs", label="specifiedMember == null", span="1100-1100"];
m6_547 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DefaultContractResolver.cs", label="Func<object, object> specifiedPropertyGet = JsonTypeReflector.ReflectionDelegateFactory.CreateGet<object>(specifiedMember)", span="1108-1108"];
m6_551 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", span="1097-1097"];
m6_92 [cluster="System.Reflection.MemberInfo.MemberType()", file="DefaultContractResolver.cs", label="Entry System.Reflection.MemberInfo.MemberType()", span="89-89"];
m6_195 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.ReferenceLoopHandling = property.ReferenceLoopHandling ?? matchingMemberProperty.ReferenceLoopHandling", span="484-484"];
m6_140 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", span="460-460"];
m6_171 [cluster="System.Type.GetProperties(System.Reflection.BindingFlags)", file="DefaultContractResolver.cs", label="Entry System.Type.GetProperties(System.Reflection.BindingFlags)", span="0-0"];
m6_170 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs", label="property != null", span="444-444"];
m6_173 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", span="426-426"];
m6_441 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="918-918"];
m6_442 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="IValueProvider valueProvider", span="921-921"];
m6_444 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="valueProvider = new DynamicValueProvider(member)", span="925-925"];
m6_445 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="valueProvider = new ReflectionValueProvider(member)", span="927-927"];
m6_443 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label=DynamicCodeGeneration, span="924-924"];
m6_446 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="return valueProvider;", span="934-934"];
m6_447 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="918-918"];
m6_415 [cluster="string.FormatWith(System.IFormatProvider, object, object, object)", file="DefaultContractResolver.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object, object)", span="57-57"];
m6_530 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", span="1121-1121"];
m6_560 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="DefaultContractResolver.cs", label="return propertyName;", span="1123-1123"];
m6_561 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", span="1121-1121"];
m6_138 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonObjectAttribute(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonObjectAttribute(System.Type)", span="95-95"];
m6_83 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", span="591-591"];
m6_334 [cluster="System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])", file="DefaultContractResolver.cs", label="Entry System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])", span="0-0"];
m6_54 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", span="255-255"];
m6_55 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="bool ignoreSerializableAttribute", span="257-257"];
m6_57 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="MemberSerialization memberSerialization = JsonTypeReflector.GetObjectMemberSerialization(objectType, ignoreSerializableAttribute)", span="264-264"];
m6_58 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="List<MemberInfo> allMembers = ReflectionUtils.GetFieldsAndProperties(objectType, BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Static)\r\n        .Where(m => !ReflectionUtils.IsIndexedProperty(m)).ToList()", span="266-267"];
m6_61 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="DataContractAttribute dataContractAttribute = JsonTypeReflector.GetDataContractAttribute(objectType)", span="274-274"];
m6_62 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="List<MemberInfo> defaultMembers = ReflectionUtils.GetFieldsAndProperties(objectType, DefaultMembersSearchFlags)\r\n         .Where(m => !ReflectionUtils.IsIndexedProperty(m)).ToList()", span="277-278"];
m6_74 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="objectType.AssignableToTypeName(''System.Data.Objects.DataClasses.EntityObject'', out match)", span="309-309"];
m6_56 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="ignoreSerializableAttribute = IgnoreSerializableAttribute", span="259-259"];
m6_60 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="memberSerialization != MemberSerialization.Fields", span="271-271"];
m6_71 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="memberSerialization == MemberSerialization.Fields && member.MemberType() == MemberTypes.Field", span="300-300"];
m6_59 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="List<MemberInfo> serializableMembers = new List<MemberInfo>()", span="269-269"];
m6_63 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label=allMembers, span="280-280"];
m6_76 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label=allMembers, span="316-316"];
m6_66 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="serializableMembers.Add(member)", span="288-288"];
m6_68 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="serializableMembers.Add(member)", span="295-295"];
m6_70 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="serializableMembers.Add(member)", span="298-298"];
m6_72 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="serializableMembers.Add(member)", span="301-301"];
m6_75 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="serializableMembers = serializableMembers.Where(ShouldSerializeEntityMember).ToList()", span="310-310"];
m6_79 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="serializableMembers.Add(member)", span="320-320"];
m6_80 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="return serializableMembers;", span="324-324"];
m6_69 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="dataContractAttribute != null && JsonTypeReflector.GetAttribute<DataMemberAttribute>(member) != null", span="297-297"];
m6_65 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="defaultMembers.Contains(member)", span="285-285"];
m6_64 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="SerializeCompilerGeneratedMembers || !member.IsDefined(typeof (CompilerGeneratedAttribute), true)", span="283-283"];
m6_73 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="Type match", span="307-307"];
m6_67 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="JsonTypeReflector.GetAttribute<JsonPropertyAttribute>(member) != null", span="294-294"];
m6_77 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="FieldInfo field = member as FieldInfo", span="318-318"];
m6_78 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="field != null && !field.IsStatic", span="319-319"];
m6_81 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", span="255-255"];
m6_323 [cluster="Newtonsoft.Json.Serialization.JsonLinqContract.JsonLinqContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonLinqContract.JsonLinqContract(System.Type)", span="38-38"];
m6_562 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", span="1131-1131"];
m6_563 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", file="DefaultContractResolver.cs", label="return ResolvePropertyName(propertyName);", span="1135-1135"];
m6_564 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", span="1131-1131"];
m6_340 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", span="746-746"];
m6_341 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="DefaultContractResolver.cs", label="JsonDynamicContract contract = new JsonDynamicContract(objectType)", span="748-748"];
m6_344 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="DefaultContractResolver.cs", label="contract.Properties.AddRange(CreateProperties(objectType, MemberSerialization.OptOut))", span="752-752"];
m6_342 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="DefaultContractResolver.cs", label="InitializeContract(contract)", span="749-749"];
m6_343 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="DefaultContractResolver.cs", label="contract.PropertyNameResolver = ResolvePropertyName", span="751-751"];
m6_345 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="DefaultContractResolver.cs", label="return contract;", span="754-754"];
m6_346 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", span="746-746"];
m6_384 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", span="817-817"];
m6_385 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DefaultContractResolver.cs", label="TypeConverter converter = ConvertUtils.GetConverter(type)", span="820-820"];
m6_389 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DefaultContractResolver.cs", label="type == typeof(Type) || type.IsSubclassOf(typeof(Type))", span="835-835"];
m6_386 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DefaultContractResolver.cs", label="converter != null\r\n#if !SILVERLIGHT\r\n && !(converter is ComponentConverter)\r\n && !(converter is ReferenceConverter)\r\n#endif\r\n && converter.GetType() != typeof(TypeConverter)", span="823-828"];
m6_387 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DefaultContractResolver.cs", label="converter.CanConvertTo(typeof(string))", span="830-830"];
m6_388 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DefaultContractResolver.cs", label="return true;", span="831-831"];
m6_390 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DefaultContractResolver.cs", label="return true;", span="836-836"];
m6_391 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DefaultContractResolver.cs", label="return false;", span="843-843"];
m6_392 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", span="817-817"];
m6_353 [cluster="Newtonsoft.Json.Serialization.JsonStringContract.JsonStringContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonStringContract.JsonStringContract(System.Type)", span="38-38"];
m6_284 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", span="647-647"];
m6_289 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DefaultContractResolver.cs", label="List<Type> ret = new List<Type>()", span="649-649"];
m6_290 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DefaultContractResolver.cs", label="Type current = type", span="651-651"];
m6_292 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DefaultContractResolver.cs", label="ret.Add(current)", span="654-654"];
m6_294 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DefaultContractResolver.cs", label="ret.Reverse()", span="659-659"];
m6_295 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DefaultContractResolver.cs", label="return ret;", span="660-660"];
m6_291 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DefaultContractResolver.cs", label="current != null && current != typeof(object)", span="652-652"];
m6_293 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DefaultContractResolver.cs", label="current = current.BaseType()", span="655-655"];
m6_296 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", span="647-647"];
m6_468 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", span="1084-1084"];
m6_532 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="MethodInfo shouldSerializeMethod = member.DeclaringType.GetMethod(JsonTypeReflector.ShouldSerializePrefix + member.Name, ReflectionUtils.EmptyTypes)", span="1086-1086"];
m6_533 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="shouldSerializeMethod == null || shouldSerializeMethod.ReturnType != typeof(bool)", span="1088-1088"];
m6_535 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="MethodCall<object, object> shouldSerializeCall =\r\n        JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(shouldSerializeMethod)", span="1091-1092"];
m6_534 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="return null;", span="1089-1089"];
m6_536 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="return o => (bool)shouldSerializeCall(o);", span="1094-1094"];
m6_537 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", span="1084-1084"];
m6_378 [cluster="Newtonsoft.Json.JsonConvert.IsJsonPrimitiveType(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.JsonConvert.IsJsonPrimitiveType(System.Type)", span="492-492"];
m6_8 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", span="70-70"];
m6_9 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", file="DefaultContractResolver.cs", label="!(obj is ResolverContractKey)", span="72-72"];
m6_11 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", file="DefaultContractResolver.cs", label="return Equals((ResolverContractKey)obj);", span="75-75"];
m6_10 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", file="DefaultContractResolver.cs", label="return false;", span="73-73"];
m6_12 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", span="70-70"];
m6_139 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", span="394-394"];
m6_423 [cluster="string.Format(System.IFormatProvider, string, params object[])", file="DefaultContractResolver.cs", label="Entry string.Format(System.IFormatProvider, string, params object[])", span="0-0"];
m6_28 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>)", span="208-208"];
m6_29 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>)", file="DefaultContractResolver.cs", label=_sharedCache, span="210-210"];
m6_30 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>)", file="DefaultContractResolver.cs", label="_sharedContractCache = cache", span="211-211"];
m6_31 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>)", file="DefaultContractResolver.cs", label="_instanceContractCache = cache", span="213-213"];
m6_32 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>)", span="208-208"];
m6_393 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", span="558-558"];
m6_226 [cluster="System.Type.IsValueType()", file="DefaultContractResolver.cs", label="Entry System.Type.IsValueType()", span="514-514"];
m6_202 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", span="497-497"];
m6_203 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="DefaultContractResolver.cs", label="return JsonTypeReflector.GetJsonConverter(objectType, objectType);", span="499-499"];
m6_204 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", span="497-497"];
m6_335 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", span="63-63"];
m6_436 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", span="943-943"];
m6_450 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="JsonProperty property = new JsonProperty()", span="945-945"];
m6_451 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="property.PropertyType = ReflectionUtils.GetMemberUnderlyingType(member)", span="946-946"];
m6_452 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="property.DeclaringType = member.DeclaringType", span="947-947"];
m6_453 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="property.ValueProvider = CreateMemberValueProvider(member)", span="948-948"];
m6_455 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="SetPropertySettingsFromAttributes(property, member, member.Name, member.DeclaringType, memberSerialization, out allowNonPublicAccess)", span="951-951"];
m6_456 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="memberSerialization != MemberSerialization.Fields", span="953-953"];
m6_457 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="property.Readable = ReflectionUtils.CanReadMemberValue(member, allowNonPublicAccess)", span="955-955"];
m6_458 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="property.Writable = ReflectionUtils.CanSetMemberValue(member, allowNonPublicAccess, property.HasMemberAttribute)", span="956-956"];
m6_461 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="property.ShouldSerialize = CreateShouldSerializeTest(member)", span="964-964"];
m6_462 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="SetIsSpecifiedActions(property, member, allowNonPublicAccess)", span="966-966"];
m6_459 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="property.Readable = true", span="961-961"];
m6_460 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="property.Writable = true", span="962-962"];
m6_463 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="return property;", span="968-968"];
m6_454 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="bool allowNonPublicAccess", span="950-950"];
m6_464 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", span="943-943"];
m6_82 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", span="167-167"];
m6_91 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", span="345-345"];
m6_88 [cluster="System.Reflection.MemberInfo.IsDefined(System.Type, bool)", file="DefaultContractResolver.cs", label="Entry System.Reflection.MemberInfo.IsDefined(System.Type, bool)", span="0-0"];
m6_285 [cluster="System.Type.GetMethods(System.Reflection.BindingFlags)", file="DefaultContractResolver.cs", label="Entry System.Type.GetMethods(System.Reflection.BindingFlags)", span="0-0"];
m6_377 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", span="254-254"];
m6_48 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="DefaultContractResolver.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m6_101 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", span="328-328"];
m6_102 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="PropertyInfo propertyInfo = memberInfo as PropertyInfo", span="330-330"];
m6_103 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="propertyInfo != null", span="331-331"];
m6_104 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="propertyInfo.PropertyType.IsGenericType() && propertyInfo.PropertyType.GetGenericTypeDefinition().FullName == ''System.Data.Objects.DataClasses.EntityReference`1''", span="333-333"];
m6_106 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="return true;", span="337-337"];
m6_105 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="return false;", span="334-334"];
m6_107 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", span="328-328"];
m6_305 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", span="76-76"];
m6_177 [cluster="System.Type.MakeGenericType(params System.Type[])", file="DefaultContractResolver.cs", label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0"];
m6_179 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="JsonProperty property = new JsonProperty()", span="461-461"];
m6_180 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.PropertyType = parameterInfo.ParameterType", span="462-462"];
m6_182 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="SetPropertySettingsFromAttributes(property, parameterInfo, parameterInfo.Name, parameterInfo.Member.DeclaringType, MemberSerialization.OptOut, out allowNonPublicAccess)", span="465-465"];
m6_185 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="matchingMemberProperty != null", span="471-471"];
m6_186 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.PropertyName = (property.PropertyName != parameterInfo.Name) ? property.PropertyName : matchingMemberProperty.PropertyName", span="473-473"];
m6_187 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="437-447"];
m6_188 [cluster="lambda expression", color=green, community=0, file="DefaultContractResolver.cs", label="object dictionary = getExtensionDataDictionary(o)", prediction=224, span="439-439"];
m6_189 [cluster="lambda expression", color=green, community=0, file="DefaultContractResolver.cs", label="dictionary == null", prediction=224, span="440-440"];
m6_190 [cluster="lambda expression", color=green, community=0, file="DefaultContractResolver.cs", label="dictionary = createExtensionDataDictionary()", prediction=224, span="442-442"];
m6_191 [cluster="lambda expression", color=green, community=0, file="DefaultContractResolver.cs", label="setExtensionDataDictionary(o, dictionary)", prediction=224, span="443-443"];
m6_192 [cluster="lambda expression", color=green, community=0, file="DefaultContractResolver.cs", label="setExtensionDataDictionaryValue(dictionary, key, value)", prediction=224, span="446-446"];
m6_193 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="437-447"];
m6_194 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.DefaultValueHandling = property.DefaultValueHandling ?? matchingMemberProperty.DefaultValueHandling", span="483-483"];
m6_196 [cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="DefaultContractResolver.cs", label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0"];
m6_197 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.TypeNameHandling = property.TypeNameHandling ?? matchingMemberProperty.TypeNameHandling", span="486-486"];
m6_183 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.Readable = false", span="467-467"];
m6_184 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.Writable = true", span="468-468"];
m6_198 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="return property;", span="489-489"];
m6_181 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="bool allowNonPublicAccess", span="464-464"];
m6_199 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", span="459-459"];
m6_449 [cluster="Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", span="43-43"];
m6_109 [cluster="System.Type.GetGenericTypeDefinition()", file="DefaultContractResolver.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m6_555 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.MemberInfo)", span="50-50"];
m6_33 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="221-221"];
m6_34 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="type == null", span="223-223"];
m6_37 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="ResolverContractKey key = new ResolverContractKey(GetType(), type)", span="227-227"];
m6_40 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="contract = CreateContract(type)", span="231-231"];
m6_35 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="throw new ArgumentNullException(''type'');", span="224-224"];
m6_36 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="JsonContract contract", span="226-226"];
m6_38 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="Dictionary<ResolverContractKey, JsonContract> cache = GetCache()", span="228-228"];
m6_39 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="cache == null || !cache.TryGetValue(key, out contract)", span="229-229"];
m6_44 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="updatedCache[key] = contract", span="241-241"];
m6_46 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="return contract;", span="247-247"];
m6_41 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label=_typeContractCacheLock, span="234-234"];
m6_42 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="cache = GetCache()", span="236-236"];
m6_43 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="Dictionary<ResolverContractKey, JsonContract> updatedCache =\r\n            (cache != null)\r\n              ? new Dictionary<ResolverContractKey, JsonContract>(cache)\r\n              : new Dictionary<ResolverContractKey, JsonContract>()", span="237-240"];
m6_45 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="UpdateCache(updatedCache)", span="243-243"];
m6_47 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="221-221"];
m6_348 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", span="763-763"];
m6_349 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="DefaultContractResolver.cs", label="JsonStringContract contract = new JsonStringContract(objectType)", span="765-765"];
m6_350 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="DefaultContractResolver.cs", label="InitializeContract(contract)", span="766-766"];
m6_351 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="DefaultContractResolver.cs", label="return contract;", span="768-768"];
m6_352 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", span="763-763"];
m6_383 [cluster="System.Type.IsAssignableFrom(System.Type)", file="DefaultContractResolver.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m6_552 [cluster="System.Type.GetProperty(string)", file="DefaultContractResolver.cs", label="Entry System.Type.GetProperty(string)", span="0-0"];
m6_85 [cluster="Unk.ToList", file="DefaultContractResolver.cs", label="Entry Unk.ToList", span=""];
m6_379 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonArrayAttribute(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonArrayAttribute(System.Type)", span="100-100"];
m6_84 [cluster="Unk.Where", file="DefaultContractResolver.cs", label="Entry Unk.Where", span=""];
m6_225 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", span="213-213"];
m6_135 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", span="510-510"];
m6_210 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="JsonContainerAttribute containerAttribute = JsonTypeReflector.GetJsonContainerAttribute(contract.NonNullableUnderlyingType)", span="512-512"];
m6_212 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="contract.IsReference = containerAttribute._isReference", span="515-515"];
m6_213 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="DataContractAttribute dataContractAttribute = JsonTypeReflector.GetDataContractAttribute(contract.NonNullableUnderlyingType)", span="520-520"];
m6_215 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="contract.IsReference = true", span="523-523"];
m6_216 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="contract.Converter = ResolveContractConverter(contract.NonNullableUnderlyingType)", span="527-527"];
m6_217 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="contract.InternalConverter = JsonSerializer.GetMatchingConverter(BuiltInConverters, contract.NonNullableUnderlyingType)", span="530-530"];
m6_218 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="ReflectionUtils.HasDefaultConstructor(contract.CreatedType, true)\r\n        || contract.CreatedType.IsValueType()", span="532-533"];
m6_219 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="contract.DefaultCreator = GetDefaultCreator(contract.CreatedType)", span="535-535"];
m6_220 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="contract.DefaultCreatorNonPublic = (!contract.CreatedType.IsValueType() &&\r\n                                            ReflectionUtils.GetDefaultConstructor(contract.CreatedType) == null)", span="537-538"];
m6_221 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="ResolveCallbackMethods(contract, contract.NonNullableUnderlyingType)", span="541-541"];
m6_211 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="containerAttribute != null", span="513-513"];
m6_214 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="dataContractAttribute != null && dataContractAttribute.IsReference", span="522-522"];
m6_222 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", span="510-510"];
m6_299 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", span="668-668"];
m6_300 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="JsonDictionaryContract contract = new JsonDictionaryContract(objectType)", span="670-670"];
m6_301 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="InitializeContract(contract)", span="671-671"];
m6_302 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="contract.PropertyNameResolver = ResolvePropertyName", span="673-673"];
m6_303 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="return contract;", span="675-675"];
m6_304 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", span="668-668"];
m6_465 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", span="419-419"];
m6_7 [cluster="System.Type.GetHashCode()", file="DefaultContractResolver.cs", label="Entry System.Type.GetHashCode()", span="0-0"];
m6_223 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonContainerAttribute(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonContainerAttribute(System.Type)", span="90-90"];
m6_94 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="267-267"];
m6_98 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="278-278"];
m6_95 [cluster="lambda expression", file="DefaultContractResolver.cs", label="!ReflectionUtils.IsIndexedProperty(m)", span="267-267"];
m6_96 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="267-267"];
m6_99 [cluster="lambda expression", file="DefaultContractResolver.cs", label="!ReflectionUtils.IsIndexedProperty(m)", span="278-278"];
m6_100 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="278-278"];
m6_337 [cluster="lambda expression", file="DefaultContractResolver.cs", label="methodCall(null, args)", span="733-733"];
m6_336 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="733-733"];
m6_338 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="733-733"];
m6_438 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="909-909"];
m6_439 [cluster="lambda expression", file="DefaultContractResolver.cs", label="p.Order ?? -1", span="909-909"];
m6_440 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="909-909"];
m6_541 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="1094-1094"];
m6_557 [cluster="lambda expression", file="DefaultContractResolver.cs", label="(bool)specifiedPropertyGet(o)", span="1110-1110"];
m6_556 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="1110-1110"];
m6_558 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="1110-1110"];
m6_531 [cluster="Newtonsoft.Json.JsonConverterAttribute.CreateJsonConverterInstance(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.JsonConverterAttribute.CreateJsonConverterInstance(System.Type)", span="60-60"];
m6_565 [file="DefaultContractResolver.cs", label="out Newtonsoft.Json.Serialization.ResolverContractKey", span=""];
m6_566 [file="DefaultContractResolver.cs", label="Newtonsoft.Json.Serialization.ResolverContractKey", span=""];
m6_567 [file="DefaultContractResolver.cs", label="ref Newtonsoft.Json.Serialization.ResolverContractKey", span=""];
m6_568 [file="DefaultContractResolver.cs", label="Newtonsoft.Json.Serialization.DefaultContractResolver", span=""];
m6_569 [file="DefaultContractResolver.cs", label=methodCall, span=""];
m6_570 [file="DefaultContractResolver.cs", label=shouldSerializeCall, span=""];
m6_571 [file="DefaultContractResolver.cs", label=specifiedPropertyGet, span=""];
m6_612 [file="DefaultContractResolver.cs", label=getExtensionDataDictionary, span=""];
m6_614 [file="DefaultContractResolver.cs", label=setExtensionDataDictionary, span=""];
m6_613 [file="DefaultContractResolver.cs", label=createExtensionDataDictionary, span=""];
m6_615 [file="DefaultContractResolver.cs", label=setExtensionDataDictionaryValue, span=""];
m7_19 [cluster="System.Type.GetType(string)", file="DefaultSerializationBinder.cs", label="Entry System.Type.GetType(string)", span="0-0"];
m7_24 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.GetHashCode()", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.GetHashCode()", span="89-89"];
m7_25 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.GetHashCode()", file="DefaultSerializationBinder.cs", label="return ((AssemblyName != null) ? AssemblyName.GetHashCode() : 0) ^ ((TypeName != null) ? TypeName.GetHashCode() : 0);", span="91-91"];
m7_26 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.GetHashCode()", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.GetHashCode()", span="89-89"];
m7_0 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", span="42-42"];
m7_1 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="string assemblyName = typeNameKey.AssemblyName", span="44-44"];
m7_2 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="string typeName = typeNameKey.TypeName", span="45-45"];
m7_3 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="assemblyName != null", span="47-47"];
m7_5 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="assembly = Assembly.LoadWithPartialName(assemblyName)", span="55-55"];
m7_7 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", color=green, community=0, file="DefaultSerializationBinder.cs", label="Assembly[] loadedAssemblies = AppDomain.CurrentDomain.GetAssemblies()", prediction=256, span="67-67"];
m7_8 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", color=green, community=2, file="DefaultSerializationBinder.cs", label=loadedAssemblies, prediction=257, span="68-68"];
m7_10 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", color=green, community=0, file="DefaultSerializationBinder.cs", label="assembly = a", prediction=257, span="72-72"];
m7_12 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="return Type.GetType(typeName);", span="74-74"];
m7_4 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="Assembly assembly", span="49-49"];
m7_6 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", color=green, community=0, file="DefaultSerializationBinder.cs", label="assembly == null", prediction=259, span="64-64"];
m7_9 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", color=green, community=0, file="DefaultSerializationBinder.cs", label="a.FullName == assemblyName", prediction=260, span="70-70"];
m7_11 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="return type;", span="70-70"];
m7_13 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", span="42-42"];
m7_15 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
m7_18 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="DefaultSerializationBinder.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
m7_17 [cluster="System.Reflection.Assembly.GetType(string)", file="DefaultSerializationBinder.cs", label="Entry System.Reflection.Assembly.GetType(string)", span="0-0"];
m7_28 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(object)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(object)", span="94-94"];
m7_29 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(object)", file="DefaultSerializationBinder.cs", label="!(obj is TypeNameKey)", span="96-96"];
m7_31 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(object)", file="DefaultSerializationBinder.cs", label="return Equals((TypeNameKey)obj);", span="99-99"];
m7_30 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(object)", file="DefaultSerializationBinder.cs", label="return false;", span="97-97"];
m7_32 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(object)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(object)", span="94-94"];
m7_39 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", span="50-50"];
m7_27 [cluster="string.GetHashCode()", file="DefaultSerializationBinder.cs", label="Entry string.GetHashCode()", span="0-0"];
m7_40 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToName(System.Type, out string, out string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToName(System.Type, out string, out string)", span="128-128"];
m7_41 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToName(System.Type, out string, out string)", file="DefaultSerializationBinder.cs", label="assemblyName = serializedType.Assembly.FullName", span="134-134"];
m7_42 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToName(System.Type, out string, out string)", file="DefaultSerializationBinder.cs", label="typeName = serializedType.FullName", span="135-135"];
m7_43 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToName(System.Type, out string, out string)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToName(System.Type, out string, out string)", span="128-128"];
m7_14 [cluster="System.Reflection.Assembly.LoadWithPartialName(string)", file="DefaultSerializationBinder.cs", label="Entry System.Reflection.Assembly.LoadWithPartialName(string)", span="0-0"];
m7_33 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", span="102-102"];
m7_34 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="return (AssemblyName == other.AssemblyName && TypeName == other.TypeName);", span="104-104"];
m7_35 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", span="102-102"];
m7_20 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.TypeNameKey(string, string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.TypeNameKey(string, string)", span="83-83"];
m7_36 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToType(string, string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToType(string, string)", span="116-116"];
m7_37 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToType(string, string)", file="DefaultSerializationBinder.cs", label="return _typeCache.Get(new TypeNameKey(assemblyName, typeName));", span="118-118"];
m7_38 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToType(string, string)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToType(string, string)", span="116-116"];
m7_16 [cluster="string.FormatWith(System.IFormatProvider, object)", file="DefaultSerializationBinder.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m7_21 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.TypeNameKey(string, string)", file="DefaultSerializationBinder.cs", label="AssemblyName = assemblyName", span="85-85"];
m7_22 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.TypeNameKey(string, string)", file="DefaultSerializationBinder.cs", label="TypeName = typeName", span="86-86"];
m7_23 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.TypeNameKey(string, string)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.TypeNameKey(string, string)", span="83-83"];
m7_44 [file="DefaultSerializationBinder.cs", label="out Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", span=""];
m7_45 [file="DefaultSerializationBinder.cs", label="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", span=""];
m7_46 [file="DefaultSerializationBinder.cs", label="ref Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", span=""];
m7_47 [file="DefaultSerializationBinder.cs", label="Newtonsoft.Json.Serialization.DefaultSerializationBinder", span=""];
m8_55 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarString()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(o, t)", span="180-180"];
m8_56 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarString()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarString()", span="174-174"];
m8_57 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarTypeString()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarTypeString()", span="184-184"];
m8_59 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarTypeString()", file="DefaultValueHandlingTests.cs", label="JToken t = o.SelectToken(''$values[1]'')", span="189-189"];
m8_61 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarTypeString()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarTypeString()", span="184-184"];
m8_58 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarTypeString()", file="DefaultValueHandlingTests.cs", label="JObject o = new JObject(\r\n                new JProperty(''$values'', new JArray(1, 2, 3)))", span="186-187"];
m8_60 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarTypeString()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, (int)t)", span="190-190"];
m8_62 [cluster="Newtonsoft.Json.Linq.JArray.JArray(params object[])", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray(params object[])", span="82-82"];
m8_63 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSingleProperty()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSingleProperty()", span="194-194"];
m8_473 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", span="839-839"];
m8_475 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="DefaultValueHandlingTests.cs", label="string name = (string)o.SelectToken(''Manufacturers[0].Name'')", span="872-872"];
m8_476 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="DefaultValueHandlingTests.cs", label="decimal productPrice = (decimal)o.SelectToken(''Manufacturers[0].Products[0].Price'')", span="875-875"];
m8_477 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="DefaultValueHandlingTests.cs", label="string productName = (string)o.SelectToken(''Manufacturers[1].Products[0].Name'')", span="878-878"];
m8_481 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="DefaultValueHandlingTests.cs", label="IList<string> storeNames = o.SelectToken(''Stores'').Select(s => (string)s).ToList()", span="885-885"];
m8_478 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''Acme Co'', name)", span="881-881"];
m8_479 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(50m, productPrice)", span="882-882"];
m8_480 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''Elbow Grease'', productName)", span="883-883"];
m8_484 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, storeNames.Count)", span="896-896"];
m8_485 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''Lambton Quay'', storeNames[0])", span="897-897"];
m8_486 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''Willis Street'', storeNames[1])", span="898-898"];
m8_487 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, firstProductNames.Count)", span="899-899"];
m8_488 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(null, firstProductNames[0])", span="900-900"];
m8_489 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''Headlight Fluid'', firstProductNames[1])", span="901-901"];
m8_490 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(149.95m, totalPrice)", span="902-902"];
m8_474 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="DefaultValueHandlingTests.cs", label="JObject o = JObject.Parse(@''{\r\n        ''''Stores'''': [\r\n          ''''Lambton Quay'''',\r\n          ''''Willis Street''''\r\n        ],\r\n        ''''Manufacturers'''': [\r\n          {\r\n            ''''Name'''': ''''Acme Co'''',\r\n            ''''Products'''': [\r\n              {\r\n                ''''Name'''': ''''Anvil'''',\r\n                ''''Price'''': 50\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            ''''Name'''': ''''Contoso'''',\r\n            ''''Products'''': [\r\n              {\r\n                ''''Name'''': ''''Elbow Grease'''',\r\n                ''''Price'''': 99.95\r\n              },\r\n              {\r\n                ''''Name'''': ''''Headlight Fluid'''',\r\n                ''''Price'''': 4\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }'')", span="841-870"];
m8_482 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="DefaultValueHandlingTests.cs", label="IList<string> firstProductNames = o[''Manufacturers''].Select(m => (string)m.SelectToken(''Products[1].Name'')).ToList()", span="889-889"];
m8_483 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="DefaultValueHandlingTests.cs", label="decimal totalPrice = o[''Manufacturers''].Sum(m => (decimal)m.SelectToken(''Products[0].Price''))", span="893-893"];
m8_491 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", span="839-839"];
m8_0 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.Include()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.Include()", span="49-49"];
m8_4 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.Include()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.Include()", span="49-49"];
m8_5 [cluster="Newtonsoft.Json.Tests.TestObjects.Invoice.Invoice()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Invoice.Invoice()", span="30-30"];
m8_6 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="347-347"];
m8_7 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="585-585"];
m8_3 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.Include()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Company'''': ''''Acme Ltd.'''',\r\n  ''''Amount'''': 50.0,\r\n  ''''Paid'''': false,\r\n  ''''PaidDate'''': null,\r\n  ''''FollowUpDays'''': 30,\r\n  ''''FollowUpEmailAddress'''': ''''''''\r\n}'', included)", span="65-72"];
m8_2 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.Include()", file="DefaultValueHandlingTests.cs", label="string included = JsonConvert.SerializeObject(invoice,\r\n        Formatting.Indented,\r\n        new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Include })", span="61-63"];
m8_1 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.Include()", file="DefaultValueHandlingTests.cs", label="Invoice invoice = new Invoice\r\n      {\r\n        Company = ''Acme Ltd.'',\r\n        Amount = 50.0m,\r\n        Paid = false,\r\n        FollowUpDays = 30,\r\n        FollowUpEmailAddress = string.Empty,\r\n        PaidDate = null\r\n      }", span="51-59"];
m8_8 [cluster="Unk.AreEqual", file="DefaultValueHandlingTests.cs", label="Entry Unk.AreEqual", span=""];
m8_82 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QuoteName()", file="DefaultValueHandlingTests.cs", label="JToken t = o.SelectToken(''['Blah']'')", span="225-225"];
m8_83 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QuoteName()", file="DefaultValueHandlingTests.cs", label="Assert.IsNotNull(t)", span="226-226"];
m8_84 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QuoteName()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JTokenType.Integer, t.Type)", span="227-227"];
m8_85 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QuoteName()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, (int)t)", span="228-228"];
m8_86 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QuoteName()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QuoteName()", span="220-220"];
m8_87 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingProperty()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingProperty()", span="232-232"];
m8_88 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingProperty()", file="DefaultValueHandlingTests.cs", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1))", span="234-235"];
m8_89 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingProperty()", file="DefaultValueHandlingTests.cs", label="JToken t = o.SelectToken(''Missing[1]'')", span="237-237"];
m8_90 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithPopulate()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithPopulate()", span="275-275"];
m8_91 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithPopulate()", file="DefaultValueHandlingTests.cs", label="string json = @''{}''", span="277-277"];
m8_35 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyString()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyString()", span="141-141"];
m8_36 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyString()", file="DefaultValueHandlingTests.cs", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1))", span="143-144"];
m8_37 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyString()", file="DefaultValueHandlingTests.cs", label="JToken t = o.SelectToken('''')", span="146-146"];
m8_38 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyString()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(o, t)", span="147-147"];
m8_39 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyString()", color=green, community=0, file="DefaultValueHandlingTests.cs", label="t = o.SelectToken(''['']'')", prediction=261, span="149-149"];
m8_40 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyString()", color=green, community=0, file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(null, t)", prediction=262, span="150-150"];
m8_54 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarString()", file="DefaultValueHandlingTests.cs", label="JToken t = o.SelectToken(''$'')", span="179-179"];
m8_139 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateNoResultsWithMultipleArrayIndexes()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateNoResultsWithMultipleArrayIndexes()", span="304-304"];
m8_140 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateNoResultsWithMultipleArrayIndexes()", file="DefaultValueHandlingTests.cs", label="JArray a = new JArray(1, 2, 3, 4, 5)", span="306-306"];
m8_141 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateNoResultsWithMultipleArrayIndexes()", file="DefaultValueHandlingTests.cs", label="ExceptionAssert.Throws<JsonException>(() => { a.SelectToken(''[9,10]'', true); }, @''Index 9 outside the bounds of JArray.'')", span="308-308"];
m8_142 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateNoResultsWithMultipleArrayIndexes()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateNoResultsWithMultipleArrayIndexes()", span="304-304"];
m8_431 [cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Linq.JArray.Parse(string)", span="157-157"];
m8_217 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArray()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArray()", span="397-397"];
m8_219 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArray()", file="DefaultValueHandlingTests.cs", label="JToken t = a.SelectToken(''[1]'')", span="401-401"];
m8_221 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArray()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JTokenType.Integer, t.Type)", span="403-403"];
m8_222 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArray()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, (int)t)", span="404-404"];
m8_218 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArray()", file="DefaultValueHandlingTests.cs", label="JArray a = new JArray(1, 2, 3, 4)", span="399-399"];
m8_220 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArray()", file="DefaultValueHandlingTests.cs", label="Assert.IsNotNull(t)", span="402-402"];
m8_223 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArray()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArray()", span="397-397"];
m8_362 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EqualsQuery()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EqualsQuery()", span="589-589"];
m8_366 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EqualsQuery()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, t.Count)", span="597-597"];
m8_363 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EqualsQuery()", file="DefaultValueHandlingTests.cs", label="JArray a = new JArray(\r\n                new JObject(new JProperty(''hi'', ''ho'')),\r\n                new JObject(new JProperty(''hi'', ''ha'')))", span="591-593"];
m8_367 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EqualsQuery()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''hi'', ''ha'')), t[0]))", span="598-598"];
m8_364 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EqualsQuery()", file="DefaultValueHandlingTests.cs", label="IList<JToken> t = a.SelectTokens(''[ ?( @.['hi'] == 'ha' ) ]'').ToList()", span="595-595"];
m8_365 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EqualsQuery()", file="DefaultValueHandlingTests.cs", label="Assert.IsNotNull(t)", span="596-596"];
m8_368 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EqualsQuery()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EqualsQuery()", span="589-589"];
m8_92 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithPopulate()", file="DefaultValueHandlingTests.cs", label="var o = JsonConvert.DeserializeObject<DefaultValueHandlingDeserializePopulate>(json, new JsonSerializerSettings\r\n      {\r\n        DefaultValueHandling = DefaultValueHandling.Populate\r\n      })", span="279-282"];
m8_103 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Entry lambda expression", span="257-257"];
m8_68 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSingleProperty()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, (int)t)", span="202-202"];
m8_120 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArray()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArray()", span="279-279"];
m8_122 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArray()", file="DefaultValueHandlingTests.cs", label="JToken t = a.SelectToken(''BlahBlah'')", span="283-283"];
m8_121 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArray()", file="DefaultValueHandlingTests.cs", label="JArray a = new JArray(1, 2, 3, 4, 5)", span="281-281"];
m8_123 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArray()", file="DefaultValueHandlingTests.cs", label="Assert.IsNull(t)", span="284-284"];
m8_124 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArray()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArray()", span="279-279"];
m8_350 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateLastSingleCharacterProperty()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateLastSingleCharacterProperty()", span="569-569"];
m8_352 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateLastSingleCharacterProperty()", file="DefaultValueHandlingTests.cs", label="string a2 = (string)o2.SelectToken(''People[0].N'')", span="572-572"];
m8_353 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateLastSingleCharacterProperty()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''Jeff'', a2)", span="574-574"];
m8_351 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateLastSingleCharacterProperty()", file="DefaultValueHandlingTests.cs", label="JObject o2 = JObject.Parse(''{'People':[{'N':'Jeff'}]}'')", span="571-571"];
m8_354 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateLastSingleCharacterProperty()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateLastSingleCharacterProperty()", span="569-569"];
m8_93 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithPopulate()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, o.IntValue1)", span="284-284"];
m8_95 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithPopulate()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(null, o.ClassValue)", span="286-286"];
m8_94 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithPopulate()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(0, o.IntValue2)", span="285-285"];
m8_96 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithPopulate()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithPopulate()", span="275-275"];
m8_97 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder.DefaultValueHandlingDeserializeHolder()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder.DefaultValueHandlingDeserializeHolder()", span="297-297"];
m8_41 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.IgnoreNumberTypeDifferencesWithDefaultValue()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.IgnoreNumberTypeDifferencesWithDefaultValue()", span="183-183"];
m8_426 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.PathWithConstructor()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.PathWithConstructor()", span="715-715"];
m8_428 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.PathWithConstructor()", file="DefaultValueHandlingTests.cs", label="JValue v = (JValue)a.SelectToken(''[1].Property2[1][0]'')", span="738-738"];
m8_429 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.PathWithConstructor()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1L, v.Value)", span="739-739"];
m8_427 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.PathWithConstructor()", file="DefaultValueHandlingTests.cs", label="JArray a = JArray.Parse(@''[\r\n  {\r\n    ''''Property1'''': [\r\n      1,\r\n      [\r\n        [\r\n          []\r\n        ]\r\n      ]\r\n    ]\r\n  },\r\n  {\r\n    ''''Property2'''': new Constructor1(\r\n      null,\r\n      [\r\n        1\r\n      ]\r\n    )\r\n  }\r\n]'')", span="717-736"];
m8_430 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.PathWithConstructor()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.PathWithConstructor()", span="715-715"];
m8_294 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", span="497-497"];
m8_300 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(5, t.Count)", span="505-505"];
m8_303 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, (int)t[2])", span="508-508"];
m8_305 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, (int)t[4])", span="510-510"];
m8_298 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", file="DefaultValueHandlingTests.cs", label="IList<JToken> t = a.SelectTokens(''$..*'').ToList()", span="503-503"];
m8_299 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", file="DefaultValueHandlingTests.cs", label="Assert.IsNotNull(t)", span="504-504"];
m8_301 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(JToken.DeepEquals(a, t[0]))", span="506-506"];
m8_302 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(JToken.DeepEquals(o1, t[1]))", span="507-507"];
m8_304 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(JToken.DeepEquals(o2, t[3]))", span="509-509"];
m8_297 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", file="DefaultValueHandlingTests.cs", label="JArray a = new JArray(o1, o2)", span="501-501"];
m8_295 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", file="DefaultValueHandlingTests.cs", label="JObject o1 = new JObject { { ''Name'', 1 } }", span="499-499"];
m8_296 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", file="DefaultValueHandlingTests.cs", label="JObject o2 = new JObject { { ''Name'', 2 } }", span="500-500"];
m8_306 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", span="497-497"];
m8_10 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeInvoice()", file="DefaultValueHandlingTests.cs", label="Invoice invoice = new Invoice\r\n      {\r\n        Company = ''Acme Ltd.'',\r\n        Amount = 50.0m,\r\n        Paid = false,\r\n        FollowUpDays = 30,\r\n        FollowUpEmailAddress = string.Empty,\r\n        PaidDate = null\r\n      }", span="78-86"];
m8_184 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySliceWithError()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySliceWithError()", span="364-364"];
m8_185 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySliceWithError()", file="DefaultValueHandlingTests.cs", label="JArray a = new JArray(1, 2, 3, 4, 5)", span="366-366"];
m8_186 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySliceWithError()", file="DefaultValueHandlingTests.cs", label="ExceptionAssert.Throws<JsonException>(() => { a.SelectToken(''[99:]'', true); }, ''Array slice of 99 to * returned no results.'')", span="368-368"];
m8_187 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySliceWithError()", file="DefaultValueHandlingTests.cs", label="ExceptionAssert.Throws<JsonException>(() => { a.SelectToken(''[1:-19]'', true); }, ''Array slice of 1 to -19 returned no results.'')", span="370-370"];
m8_188 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySliceWithError()", file="DefaultValueHandlingTests.cs", label="ExceptionAssert.Throws<JsonException>(() => { a.SelectToken(''[:-19]'', true); }, ''Array slice of * to -19 returned no results.'')", span="372-372"];
m8_190 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySliceWithError()", file="DefaultValueHandlingTests.cs", label="ExceptionAssert.Throws<JsonException>(() => { a.SelectToken(''[:]'', true); }, ''Array slice of * to * returned no results.'')", span="376-376"];
m8_189 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySliceWithError()", file="DefaultValueHandlingTests.cs", label="a = new JArray()", span="374-374"];
m8_191 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySliceWithError()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySliceWithError()", span="364-364"];
m8_102 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder.DefaultValueHandlingDeserializeHolder()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder.DefaultValueHandlingDeserializeHolder()", span="297-297"];
m8_27 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyPropertyIndexer()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyPropertyIndexer()", span="131-131"];
m8_28 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyPropertyIndexer()", file="DefaultValueHandlingTests.cs", label="JObject o = new JObject(\r\n                new JProperty('''', 1))", span="133-134"];
m8_29 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyPropertyIndexer()", file="DefaultValueHandlingTests.cs", label="JToken t = o.SelectToken(''['']'')", span="136-136"];
m8_31 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyPropertyIndexer()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyPropertyIndexer()", span="131-131"];
m8_30 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyPropertyIndexer()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, (int)t)", span="137-137"];
m8_32 [cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="114-114"];
m8_33 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="321-321"];
m8_154 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateConstructorOutOfBoundsIndxer()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateConstructorOutOfBoundsIndxer()", span="320-320"];
m8_156 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateConstructorOutOfBoundsIndxer()", file="DefaultValueHandlingTests.cs", label="Assert.IsNull(c.SelectToken(''[1]''))", span="324-324"];
m8_155 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateConstructorOutOfBoundsIndxer()", file="DefaultValueHandlingTests.cs", label="JConstructor c = new JConstructor(''Blah'')", span="322-322"];
m8_157 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateConstructorOutOfBoundsIndxer()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateConstructorOutOfBoundsIndxer()", span="320-320"];
m8_418 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", span="690-690"];
m8_422 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, t.Count)", span="709-709"];
m8_423 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''Bad Boys'', (string)t[0])", span="710-710"];
m8_424 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''Independence Day'', (string)t[1])", span="711-711"];
m8_419 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", file="DefaultValueHandlingTests.cs", label="JArray a = new JArray(\r\n                new JObject(\r\n                    new JProperty(''name'', ''Bad Boys''),\r\n                    new JProperty(''cast'', new JArray(\r\n                        new JObject(new JProperty(''name'', ''Will Smith''))))),\r\n                new JObject(\r\n                    new JProperty(''name'', ''Independence Day''),\r\n                    new JProperty(''cast'', new JArray(\r\n                        new JObject(new JProperty(''name'', ''Will Smith''))))),\r\n                new JObject(\r\n                    new JProperty(''name'', ''The Rock''),\r\n                    new JProperty(''cast'', new JArray(\r\n                        new JObject(new JProperty(''name'', ''Nick Cage'')))))\r\n                )", span="692-705"];
m8_420 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", file="DefaultValueHandlingTests.cs", label="IList<JToken> t = a.SelectTokens(''[?(@.cast[?(@.name=='Will Smith')])].name'').ToList()", span="707-707"];
m8_421 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", file="DefaultValueHandlingTests.cs", label="Assert.IsNotNull(t)", span="708-708"];
m8_425 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", span="690-690"];
m8_307 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="155-155"];
m8_66 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSingleProperty()", file="DefaultValueHandlingTests.cs", label="Assert.IsNotNull(t)", span="200-200"];
m8_210 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayOutOfBoundsIndxerWithError()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayOutOfBoundsIndxerWithError()", span="389-389"];
m8_211 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayOutOfBoundsIndxerWithError()", file="DefaultValueHandlingTests.cs", label="JArray a = new JArray(1, 2, 3, 4, 5)", span="391-391"];
m8_212 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayOutOfBoundsIndxerWithError()", file="DefaultValueHandlingTests.cs", label="ExceptionAssert.Throws<JsonException>(() => { a.SelectToken(''[1000].Ha'', true); }, ''Index 1000 outside the bounds of JArray.'')", span="393-393"];
m8_213 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayOutOfBoundsIndxerWithError()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayOutOfBoundsIndxerWithError()", span="389-389"];
m8_80 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingPropertyClass.DefaultValueHandlingPropertyClass()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingPropertyClass.DefaultValueHandlingPropertyClass()", span="339-339"];
m8_81 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="529-529"];
m8_283 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScan()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScan()", span="483-483"];
m8_289 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScan()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, t.Count)", span="491-491"];
m8_290 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScan()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, (int)t[0])", span="492-492"];
m8_291 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScan()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, (int)t[1])", span="493-493"];
m8_287 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScan()", file="DefaultValueHandlingTests.cs", label="IList<JToken> t = a.SelectTokens(''$..Name'').ToList()", span="489-489"];
m8_288 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScan()", file="DefaultValueHandlingTests.cs", label="Assert.IsNotNull(t)", span="490-490"];
m8_286 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScan()", file="DefaultValueHandlingTests.cs", label="JArray a = new JArray(o1, o2)", span="487-487"];
m8_284 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScan()", file="DefaultValueHandlingTests.cs", label="JObject o1 = new JObject { { ''Name'', 1 } }", span="485-485"];
m8_285 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScan()", file="DefaultValueHandlingTests.cs", label="JObject o2 = new JObject { { ''Name'', 2 } }", span="486-486"];
m8_292 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScan()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScan()", span="483-483"];
m8_293 [cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="88-88"];
m8_13 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeInvoice()", file="DefaultValueHandlingTests.cs", label="string ignored = JsonConvert.SerializeObject(invoice,\r\n        Formatting.Indented,\r\n        new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Ignore })", span="101-103"];
m8_17 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", file="DefaultValueHandlingTests.cs", label="string json = JsonConvert.SerializeObject(new DefaultValueAttributeTestClass(),\r\n        Formatting.None, new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Ignore })", span="114-115"];
m8_18 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(@''{''''TestField1'''':0,''''TestProperty1'''':null}'', json)", span="116-116"];
m8_16 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", span="112-112"];
m8_15 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeInvoice()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeInvoice()", span="76-76"];
m8_14 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeInvoice()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Company'''': ''''Acme Ltd.'''',\r\n  ''''Amount'''': 50.0\r\n}'', ignored)", span="105-108"];
m8_19 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", file="DefaultValueHandlingTests.cs", label="json = JsonConvert.SerializeObject(new DefaultValueAttributeTestClass { TestField1 = int.MinValue, TestProperty1 = ''NotDefault'' },\r\n        Formatting.None, new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Ignore })", span="118-119"];
m8_71 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardProperty()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardProperty()", span="206-206"];
m8_72 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardProperty()", file="DefaultValueHandlingTests.cs", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1),\r\n                new JProperty(''Blah2'', 2))", span="208-210"];
m8_73 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardProperty()", file="DefaultValueHandlingTests.cs", label="IList<JToken> t = o.SelectTokens(''$.*'').ToList()", span="212-212"];
m8_75 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardProperty()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, t.Count)", span="214-214"];
m8_77 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardProperty()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, (int)t[1])", span="216-216"];
m8_74 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardProperty()", file="DefaultValueHandlingTests.cs", label="Assert.IsNotNull(t)", span="213-213"];
m8_76 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardProperty()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, (int)t[0])", span="215-215"];
m8_78 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardProperty()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardProperty()", span="206-206"];
m8_79 [cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="105-105"];
m8_42 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.IgnoreNumberTypeDifferencesWithDefaultValue()", file="DefaultValueHandlingTests.cs", label="NetworkUser user = new NetworkUser\r\n      {\r\n        Firstname = ''blub''\r\n      }", span="185-188"];
m8_43 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.IgnoreNumberTypeDifferencesWithDefaultValue()", color=green, community=0, file="DefaultValueHandlingTests.cs", label="string json = JsonConvert.SerializeObject(user, Formatting.None, new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Ignore, NullValueHandling = NullValueHandling.Ignore })", prediction=263, span="190-190"];
m8_44 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.IgnoreNumberTypeDifferencesWithDefaultValue()", color=green, community=0, file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(@''{''''firstName'''':''''blub''''}'', json)", prediction=264, span="192-192"];
m8_45 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.IgnoreNumberTypeDifferencesWithDefaultValue()", color=green, community=0, file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.IgnoreNumberTypeDifferencesWithDefaultValue()", prediction=265, span="183-183"];
m8_46 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.ApproxEquals()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.ApproxEquals()", span="196-196"];
m8_432 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.WildcardWithProperty()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.WildcardWithProperty()", span="743-743"];
m8_436 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.WildcardWithProperty()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''Sort system'', (string)tokens[i++][''text''])", span="779-779"];
m8_437 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.WildcardWithProperty()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''TSP-1'', (string)tokens[i++][''text''])", span="780-780"];
m8_438 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.WildcardWithProperty()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''Passenger 15'', (string)tokens[i++][''text''])", span="781-781"];
m8_439 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.WildcardWithProperty()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''Yard 11'', (string)tokens[i++][''text''])", span="782-782"];
m8_440 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.WildcardWithProperty()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''Sort yard 12'', (string)tokens[i++][''text''])", span="783-783"];
m8_441 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.WildcardWithProperty()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''Yard 13'', (string)tokens[i++][''text''])", span="784-784"];
m8_442 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.WildcardWithProperty()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(6, tokens.Count)", span="785-785"];
m8_434 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.WildcardWithProperty()", file="DefaultValueHandlingTests.cs", label="IList<JToken> tokens = o.SelectTokens(''$..*[?(@.text)]'').ToList()", span="777-777"];
m8_435 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.WildcardWithProperty()", file="DefaultValueHandlingTests.cs", label="int i = 0", span="778-778"];
m8_433 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.WildcardWithProperty()", file="DefaultValueHandlingTests.cs", label="JObject o = JObject.Parse(@''{\r\n    ''''station'''': 92000041000001, \r\n    ''''containers'''': [\r\n        {\r\n            ''''id'''': 1,\r\n            ''''text'''': ''''Sort system'''',\r\n            ''''containers'''': [\r\n                {\r\n                    ''''id'''': ''''2'''',\r\n                    ''''text'''': ''''Yard 11''''\r\n                },\r\n                {\r\n                    ''''id'''': ''''92000020100006'''',\r\n                    ''''text'''': ''''Sort yard 12''''\r\n                },\r\n                {\r\n                    ''''id'''': ''''92000020100005'''',\r\n                    ''''text'''': ''''Yard 13''''\r\n                } \r\n            ]\r\n        }, \r\n        {\r\n            ''''id'''': ''''92000020100011'''',\r\n            ''''text'''': ''''TSP-1''''\r\n        }, \r\n        {\r\n            ''''id'''':''''92000020100007'''',\r\n            ''''text'''': ''''Passenger 15''''\r\n        }\r\n    ]\r\n}'')", span="745-775"];
m8_443 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.WildcardWithProperty()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.WildcardWithProperty()", span="743-743"];
m8_98 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder.DefaultValueHandlingDeserializeHolder()", file="DefaultValueHandlingTests.cs", label="ClassValue = new DefaultValueHandlingDeserialize\r\n        {\r\n          Derp = ''Derp!''\r\n        }", span="299-302"];
m8_99 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder.DefaultValueHandlingDeserializeHolder()", file="DefaultValueHandlingTests.cs", label="IntValue1 = int.MaxValue", span="303-303"];
m8_100 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder.DefaultValueHandlingDeserializeHolder()", file="DefaultValueHandlingTests.cs", label="IntValue2 = int.MinValue", span="304-304"];
m8_101 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder.DefaultValueHandlingDeserializeHolder()", file="DefaultValueHandlingTests.cs", label="IntValue3 = int.MaxValue", span="305-305"];
m8_70 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="516-516"];
m8_465 [cluster="System.TimeSpan.FromHours(double)", file="DefaultValueHandlingTests.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m8_9 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="395-395"];
m8_11 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="DefaultValueHandlingTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m8_12 [cluster="Unk.AreEqual", file="DefaultValueHandlingTests.cs", label="Entry Unk.AreEqual", span=""];
m8_177 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultiPropertyIndexOnArrayWithError()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultiPropertyIndexOnArrayWithError()", span="356-356"];
m8_178 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultiPropertyIndexOnArrayWithError()", file="DefaultValueHandlingTests.cs", label="JArray a = new JArray(1, 2, 3, 4, 5)", span="358-358"];
m8_179 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultiPropertyIndexOnArrayWithError()", file="DefaultValueHandlingTests.cs", label="ExceptionAssert.Throws<JsonException>(() => { a.SelectToken(''['Missing','Missing2']'', true); }, ''Properties 'Missing', 'Missing2' not valid on JArray.'')", span="360-360"];
m8_180 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultiPropertyIndexOnArrayWithError()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultiPropertyIndexOnArrayWithError()", span="356-356"];
m8_376 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NoPathQuery()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NoPathQuery()", span="615-615"];
m8_380 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NoPathQuery()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, t.Count)", span="621-621"];
m8_381 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NoPathQuery()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, (int)t[0])", span="622-622"];
m8_382 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NoPathQuery()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(3, (int)t[1])", span="623-623"];
m8_378 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NoPathQuery()", file="DefaultValueHandlingTests.cs", label="IList<JToken> t = a.SelectTokens(''[ ?( @ > 1 ) ]'').ToList()", span="619-619"];
m8_379 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NoPathQuery()", file="DefaultValueHandlingTests.cs", label="Assert.IsNotNull(t)", span="620-620"];
m8_377 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NoPathQuery()", file="DefaultValueHandlingTests.cs", label="JArray a = new JArray(1, 2, 3)", span="617-617"];
m8_383 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NoPathQuery()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NoPathQuery()", span="615-615"];
m8_460 [cluster="System.Collections.Generic.List<T>.List()", file="DefaultValueHandlingTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m8_468 [cluster="JArray.cstr", file="DefaultValueHandlingTests.cs", label="Entry JArray.cstr", span=""];
m8_34 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="769-769"];
m8_308 [cluster="Unk.IsTrue", file="DefaultValueHandlingTests.cs", label="Entry Unk.IsTrue", span=""];
m8_53 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarString()", file="DefaultValueHandlingTests.cs", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1))", span="176-177"];
m8_407 [cluster="BigInteger.cstr", file="DefaultValueHandlingTests.cs", label="Entry BigInteger.cstr", span=""];
m8_272 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", span="470-470"];
m8_276 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(3, t.Count())", span="476-476"];
m8_277 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, (int)t.ElementAt(0))", span="477-477"];
m8_278 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(3, (int)t.ElementAt(1))", span="478-478"];
m8_279 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, (int)t.ElementAt(2))", span="479-479"];
m8_274 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", file="DefaultValueHandlingTests.cs", label="IEnumerable<JToken> t = a.SelectTokens(''[1,2,0]'')", span="474-474"];
m8_275 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", file="DefaultValueHandlingTests.cs", label="Assert.IsNotNull(t)", span="475-475"];
m8_273 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", file="DefaultValueHandlingTests.cs", label="JArray a = new JArray(1, 2, 3, 4)", span="472-472"];
m8_280 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", span="470-470"];
m8_462 [cluster="System.Uri.Uri(string)", file="DefaultValueHandlingTests.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m8_165 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithoutError()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithoutError()", span="337-337"];
m8_168 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithoutError()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, v.Value)", span="343-343"];
m8_166 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithoutError()", file="DefaultValueHandlingTests.cs", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1))", span="339-340"];
m8_167 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithoutError()", file="DefaultValueHandlingTests.cs", label="JValue v = (JValue)o.SelectToken(''Blah'', true)", span="342-342"];
m8_169 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithoutError()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithoutError()", span="337-337"];
m8_65 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSingleProperty()", file="DefaultValueHandlingTests.cs", label="JToken t = o.SelectToken(''Blah'')", span="199-199"];
m8_369 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsQuery()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsQuery()", span="602-602"];
m8_373 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsQuery()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, t.Count)", span="610-610"];
m8_370 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsQuery()", file="DefaultValueHandlingTests.cs", label="JArray a = new JArray(\r\n                new JArray(new JObject(new JProperty(''hi'', ''ho''))),\r\n                new JArray(new JObject(new JProperty(''hi'', ''ha''))))", span="604-606"];
m8_374 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsQuery()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(new JObject(new JProperty(''hi'', ''ho''))), t[0]))", span="611-611"];
m8_371 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsQuery()", file="DefaultValueHandlingTests.cs", label="IList<JToken> t = a.SelectTokens(''[ ?( @..hi <> 'ha' ) ]'').ToList()", span="608-608"];
m8_372 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsQuery()", file="DefaultValueHandlingTests.cs", label="Assert.IsNotNull(t)", span="609-609"];
m8_375 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsQuery()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsQuery()", span="602-602"];
m8_26 [cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string, bool)", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.SelectToken(string, bool)", span="2310-2310"];
m8_461 [cluster="System.Guid.Guid(string)", file="DefaultValueHandlingTests.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m8_192 [cluster="Newtonsoft.Json.Linq.JArray.JArray()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray()", span="65-65"];
m8_262 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", span="456-456"];
m8_266 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(4, t.Count)", span="462-462"];
m8_267 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, (int)t[0])", span="463-463"];
m8_268 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, (int)t[1])", span="464-464"];
m8_269 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(3, (int)t[2])", span="465-465"];
m8_270 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(4, (int)t[3])", span="466-466"];
m8_264 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", file="DefaultValueHandlingTests.cs", label="List<JToken> t = a.SelectTokens(''[*]'').ToList()", span="460-460"];
m8_265 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", file="DefaultValueHandlingTests.cs", label="Assert.IsNotNull(t)", span="461-461"];
m8_263 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", file="DefaultValueHandlingTests.cs", label="JArray a = new JArray(1, 2, 3, 4)", span="458-458"];
m8_271 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", span="456-456"];
m8_398 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQueryBigInteger()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQueryBigInteger()", span="656-656"];
m8_402 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQueryBigInteger()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, t.Count)", span="665-665"];
m8_399 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQueryBigInteger()", file="DefaultValueHandlingTests.cs", label="JArray a = new JArray(\r\n                new JObject(new JProperty(''hi'', new BigInteger(1))),\r\n                new JObject(new JProperty(''hi'', new BigInteger(2))),\r\n                new JObject(new JProperty(''hi'', new BigInteger(3))))", span="658-661"];
m8_403 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQueryBigInteger()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''hi'', 2)), t[0]))", span="666-666"];
m8_404 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQueryBigInteger()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''hi'', 3)), t[1]))", span="667-667"];
m8_400 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQueryBigInteger()", file="DefaultValueHandlingTests.cs", label="IList<JToken> t = a.SelectTokens(''[ ?( @.hi > 1 ) ]'').ToList()", span="663-663"];
m8_401 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQueryBigInteger()", file="DefaultValueHandlingTests.cs", label="Assert.IsNotNull(t)", span="664-664"];
m8_405 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQueryBigInteger()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQueryBigInteger()", span="656-656"];
m8_466 [cluster="System.Text.Encoding.GetBytes(string)", file="DefaultValueHandlingTests.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m8_390 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQuery()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQuery()", span="640-640"];
m8_394 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQuery()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, t.Count)", span="649-649"];
m8_391 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQuery()", file="DefaultValueHandlingTests.cs", label="JArray a = new JArray(\r\n                new JObject(new JProperty(''hi'', 1)),\r\n                new JObject(new JProperty(''hi'', 2)),\r\n                new JObject(new JProperty(''hi'', 3)))", span="642-645"];
m8_395 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQuery()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''hi'', 2)), t[0]))", span="650-650"];
m8_396 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQuery()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''hi'', 3)), t[1]))", span="651-651"];
m8_392 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQuery()", file="DefaultValueHandlingTests.cs", label="IList<JToken> t = a.SelectTokens(''[ ?( @.hi > 1 ) ]'').ToList()", span="647-647"];
m8_393 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQuery()", file="DefaultValueHandlingTests.cs", label="Assert.IsNotNull(t)", span="648-648"];
m8_397 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQuery()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQuery()", span="640-640"];
m8_323 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", span="531-531"];
m8_330 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(9, t.Count)", span="540-540"];
m8_333 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, (int)t[2])", span="544-544"];
m8_335 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, (int)t[4])", span="546-546"];
m8_339 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(3, (int)t[8])", span="550-550"];
m8_328 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", file="DefaultValueHandlingTests.cs", label="IList<JToken> t = a.SelectTokens(''$..*'').ToList()", span="538-538"];
m8_329 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", file="DefaultValueHandlingTests.cs", label="Assert.IsNotNull(t)", span="539-539"];
m8_331 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(JToken.DeepEquals(a, t[0]))", span="542-542"];
m8_332 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(JToken.DeepEquals(o1, t[1]))", span="543-543"];
m8_334 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(JToken.DeepEquals(o2, t[3]))", span="545-545"];
m8_336 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(JToken.DeepEquals(o3, t[5]))", span="547-547"];
m8_338 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(3), t[7]))", span="549-549"];
m8_327 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", file="DefaultValueHandlingTests.cs", label="JArray a = new JArray(o1, o2, o3)", span="536-536"];
m8_337 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JObject { { ''Name'', new JArray(3) } }, t[6]))", span="548-548"];
m8_324 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", file="DefaultValueHandlingTests.cs", label="JObject o1 = new JObject { { ''Name'', 1 } }", span="533-533"];
m8_325 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", file="DefaultValueHandlingTests.cs", label="JObject o2 = new JObject { { ''Name'', 2 } }", span="534-534"];
m8_326 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", file="DefaultValueHandlingTests.cs", label="JObject o3 = new JObject { { ''Name'', new JObject { { ''Name'', new JArray(3) } } } }", span="535-535"];
m8_340 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", span="531-531"];
m8_104 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="o.SelectToken(''[1]'', true)", span="257-257"];
m8_105 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Exit lambda expression", span="257-257"];
m8_106 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardIndexOnObjectWithError()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardIndexOnObjectWithError()", span="261-261"];
m8_107 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardIndexOnObjectWithError()", file="DefaultValueHandlingTests.cs", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1))", span="263-264"];
m8_108 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardIndexOnObjectWithError()", file="DefaultValueHandlingTests.cs", label="ExceptionAssert.Throws<JsonException>(() => { o.SelectToken(''[*]'', true); }, @''Index * not valid on JObject.'')", span="266-266"];
m8_355 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.ExistsQuery()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.ExistsQuery()", span="578-578"];
m8_359 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.ExistsQuery()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, t.Count)", span="584-584"];
m8_356 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.ExistsQuery()", file="DefaultValueHandlingTests.cs", label="JArray a = new JArray(new JObject(new JProperty(''hi'', ''ho'')), new JObject(new JProperty(''hi2'', ''ha'')))", span="580-580"];
m8_360 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.ExistsQuery()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''hi'', ''ho'')), t[0]))", span="585-585"];
m8_357 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.ExistsQuery()", file="DefaultValueHandlingTests.cs", label="IList<JToken> t = a.SelectTokens(''[ ?( @.hi ) ]'').ToList()", span="582-582"];
m8_358 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.ExistsQuery()", file="DefaultValueHandlingTests.cs", label="Assert.IsNotNull(t)", span="583-583"];
m8_361 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.ExistsQuery()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.ExistsQuery()", span="578-578"];
m8_493 [cluster="System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, decimal>)", file="DefaultValueHandlingTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, decimal>)", span="0-0"];
m8_464 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="DefaultValueHandlingTests.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m8_463 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="DefaultValueHandlingTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m8_20 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithRequired()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithRequired()", span="120-120"];
m8_21 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithRequired()", file="DefaultValueHandlingTests.cs", label="string json = ''{\''bookId\'':\''1000\''}''", span="122-122"];
m8_22 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithRequired()", file="DefaultValueHandlingTests.cs", label="JObject o = JObject.Parse(json)", span="123-123"];
m8_23 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithRequired()", file="DefaultValueHandlingTests.cs", label="string bookId = (string)o.SelectToken(''bookId'', true)", span="125-125"];
m8_24 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithRequired()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''1000'', bookId)", span="127-127"];
m8_25 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithRequired()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithRequired()", span="120-120"];
m8_109 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardIndexOnObjectWithError()", file="DefaultValueHandlingTests.cs", label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser", span=""];
m8_113 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSliceOnObjectWithError()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSliceOnObjectWithError()", span="270-270"];
m8_114 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSliceOnObjectWithError()", file="DefaultValueHandlingTests.cs", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1))", span="272-273"];
m8_115 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSliceOnObjectWithError()", file="DefaultValueHandlingTests.cs", label="ExceptionAssert.Throws<JsonException>(() => { o.SelectToken(''[:]'', true); }, @''Array slice is not valid on JObject.'')", span="275-275"];
m8_116 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSliceOnObjectWithError()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSliceOnObjectWithError()", span="270-270"];
m8_322 [cluster="Newtonsoft.Json.Linq.JArray.JArray(object)", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray(object)", span="91-91"];
m8_67 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSingleProperty()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JTokenType.Integer, t.Type)", span="201-201"];
m8_282 [cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="DefaultValueHandlingTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0"];
m8_224 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", span="408-408"];
m8_228 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(3, t.Count)", span="414-414"];
m8_229 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(7, (int)t[0])", span="415-415"];
m8_230 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(8, (int)t[1])", span="416-416"];
m8_231 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(9, (int)t[2])", span="417-417"];
m8_233 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, t.Count)", span="420-420"];
m8_234 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(9, (int)t[0])", span="421-421"];
m8_236 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, t.Count)", span="424-424"];
m8_237 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(8, (int)t[0])", span="425-425"];
m8_239 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(0, t.Count)", span="428-428"];
m8_241 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, t.Count)", span="431-431"];
m8_242 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, (int)t[0])", span="432-432"];
m8_244 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(9, t.Count)", span="435-435"];
m8_245 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(9, (int)t[0])", span="436-436"];
m8_246 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(8, (int)t[1])", span="437-437"];
m8_247 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(7, (int)t[2])", span="438-438"];
m8_248 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(6, (int)t[3])", span="439-439"];
m8_249 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(5, (int)t[4])", span="440-440"];
m8_250 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(4, (int)t[5])", span="441-441"];
m8_251 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(3, (int)t[6])", span="442-442"];
m8_252 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, (int)t[7])", span="443-443"];
m8_253 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, (int)t[8])", span="444-444"];
m8_255 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(5, t.Count)", span="447-447"];
m8_256 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(9, (int)t[0])", span="448-448"];
m8_257 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(7, (int)t[1])", span="449-449"];
m8_258 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(5, (int)t[2])", span="450-450"];
m8_259 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(3, (int)t[3])", span="451-451"];
m8_260 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, (int)t[4])", span="452-452"];
m8_227 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="DefaultValueHandlingTests.cs", label="t = a.SelectTokens(''[-3:]'').ToList()", span="413-413"];
m8_232 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="DefaultValueHandlingTests.cs", label="t = a.SelectTokens(''[-1:-2:-1]'').ToList()", span="419-419"];
m8_235 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="DefaultValueHandlingTests.cs", label="t = a.SelectTokens(''[-2:-1]'').ToList()", span="423-423"];
m8_238 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="DefaultValueHandlingTests.cs", label="t = a.SelectTokens(''[1:1]'').ToList()", span="427-427"];
m8_240 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="DefaultValueHandlingTests.cs", label="t = a.SelectTokens(''[1:2]'').ToList()", span="430-430"];
m8_243 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="DefaultValueHandlingTests.cs", label="t = a.SelectTokens(''[::-1]'').ToList()", span="434-434"];
m8_254 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="DefaultValueHandlingTests.cs", label="t = a.SelectTokens(''[::-2]'').ToList()", span="446-446"];
m8_225 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="DefaultValueHandlingTests.cs", label="JArray a = new JArray(1, 2, 3, 4, 5, 6, 7, 8, 9)", span="410-410"];
m8_226 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="DefaultValueHandlingTests.cs", label="IList<JToken> t = null", span="411-411"];
m8_261 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", span="408-408"];
m8_444 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", span="789-789"];
m8_448 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, t.Count)", span="818-818"];
m8_450 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, t.Count)", span="821-821"];
m8_452 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, t.Count)", span="824-824"];
m8_454 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, t.Count)", span="828-828"];
m8_456 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, t.Count)", span="832-832"];
m8_458 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, t.Count)", span="835-835"];
m8_446 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", file="DefaultValueHandlingTests.cs", label="JObject o = new JObject(\r\n                new JProperty(''prop'',\r\n                    new JArray(\r\n                        values.Select(v => new JObject(new JProperty(''childProp'', v)))\r\n                        )\r\n                    )\r\n                )", span="809-815"];
m8_447 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", file="DefaultValueHandlingTests.cs", label="IList<JToken> t = o.SelectTokens(''$.prop[?(@.childProp =='ff2dc672-6e15-4aa2-afb0-18f4f69596ad')]'').ToList()", span="817-817"];
m8_449 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", file="DefaultValueHandlingTests.cs", label="t = o.SelectTokens(''$.prop[?(@.childProp =='http://localhost')]'').ToList()", span="820-820"];
m8_451 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", file="DefaultValueHandlingTests.cs", label="t = o.SelectTokens(''$.prop[?(@.childProp =='2000-12-05T05:07:59Z')]'').ToList()", span="823-823"];
m8_453 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", file="DefaultValueHandlingTests.cs", label="t = o.SelectTokens(''$.prop[?(@.childProp =='2000-12-05T05:07:59-10:00')]'').ToList()", span="827-827"];
m8_455 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", file="DefaultValueHandlingTests.cs", label="t = o.SelectTokens(''$.prop[?(@.childProp =='SGVsbG8gd29ybGQ=')]'').ToList()", span="831-831"];
m8_457 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", file="DefaultValueHandlingTests.cs", label="t = o.SelectTokens(''$.prop[?(@.childProp =='365.23:59:59')]'').ToList()", span="834-834"];
m8_445 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", file="DefaultValueHandlingTests.cs", label="IList<object> values = new List<object>\r\n            {\r\n                ''ff2dc672-6e15-4aa2-afb0-18f4f69596ad'',\r\n                new Guid(''ff2dc672-6e15-4aa2-afb0-18f4f69596ad''),\r\n                ''http://localhost'',\r\n                new Uri(''http://localhost''),\r\n                ''2000-12-05T05:07:59Z'',\r\n                new DateTime(2000, 12, 5, 5, 7, 59, DateTimeKind.Utc),\r\n#if !NET20\r\n                ''2000-12-05T05:07:59-10:00'',\r\n                new DateTimeOffset(2000, 12, 5, 5, 7, 59, -TimeSpan.FromHours(10)),\r\n#endif\r\n                ''SGVsbG8gd29ybGQ='',\r\n                Encoding.UTF8.GetBytes(''Hello world''),\r\n                ''365.23:59:59'',\r\n                new TimeSpan(365, 23, 59, 59)\r\n            }", span="791-807"];
m8_459 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", span="789-789"];
m8_406 [cluster="JProperty.cstr", file="DefaultValueHandlingTests.cs", label="Entry JProperty.cstr", span=""];
m8_64 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSingleProperty()", file="DefaultValueHandlingTests.cs", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1))", span="196-197"];
m8_132 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArrayWithError()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArrayWithError()", span="296-296"];
m8_133 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArrayWithError()", file="DefaultValueHandlingTests.cs", label="JArray a = new JArray(1, 2, 3, 4, 5)", span="298-298"];
m8_134 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArrayWithError()", file="DefaultValueHandlingTests.cs", label="ExceptionAssert.Throws<JsonException>(() => { a.SelectToken(''BlahBlah'', true); }, @''Property 'BlahBlah' not valid on JArray.'')", span="300-300"];
m8_135 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArrayWithError()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArrayWithError()", span="296-296"];
m8_469 [cluster="Unk.Select", file="DefaultValueHandlingTests.cs", label="Entry Unk.Select", span=""];
m8_341 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", span="554-554"];
m8_343 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", file="DefaultValueHandlingTests.cs", label="JToken t = o.SelectToken(''Blah'')", span="559-559"];
m8_346 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", file="DefaultValueHandlingTests.cs", label="t = o.SelectToken(''Blah[2]'')", span="563-563"];
m8_345 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JTokenType.Array, t.Type)", span="561-561"];
m8_347 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JTokenType.Integer, t.Type)", span="564-564"];
m8_348 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(3, (int)t)", span="565-565"];
m8_342 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", file="DefaultValueHandlingTests.cs", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', new[] { 1, 2, 3 }))", span="556-557"];
m8_344 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", file="DefaultValueHandlingTests.cs", label="Assert.IsNotNull(t)", span="560-560"];
m8_349 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", span="554-554"];
m8_146 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateConstructorOutOfBoundsIndxerWithError()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateConstructorOutOfBoundsIndxerWithError()", span="312-312"];
m8_147 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateConstructorOutOfBoundsIndxerWithError()", file="DefaultValueHandlingTests.cs", label="JConstructor c = new JConstructor(''Blah'')", span="314-314"];
m8_148 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateConstructorOutOfBoundsIndxerWithError()", file="DefaultValueHandlingTests.cs", label="ExceptionAssert.Throws<JsonException>(() => { c.SelectToken(''[1]'', true); }, @''Index 1 outside the bounds of JConstructor.'')", span="316-316"];
m8_149 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateConstructorOutOfBoundsIndxerWithError()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateConstructorOutOfBoundsIndxerWithError()", span="312-312"];
m8_384 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.MultipleQueries()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.MultipleQueries()", span="627-627"];
m8_388 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.MultipleQueries()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(0, t.Count)", span="636-636"];
m8_386 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.MultipleQueries()", file="DefaultValueHandlingTests.cs", label="IList<JToken> t = a.SelectTokens(''[?(@ <> 1)][?(@ <> 4)][?(@ < 7)]'').ToList()", span="634-634"];
m8_387 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.MultipleQueries()", file="DefaultValueHandlingTests.cs", label="Assert.IsNotNull(t)", span="635-635"];
m8_385 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.MultipleQueries()", file="DefaultValueHandlingTests.cs", label="JArray a = new JArray(1, 2, 3, 4, 5, 6, 7, 8, 9)", span="629-629"];
m8_389 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.MultipleQueries()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.MultipleQueries()", span="627-627"];
m8_467 [cluster="System.TimeSpan.TimeSpan(int, int, int, int)", file="DefaultValueHandlingTests.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0"];
m8_205 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateOutOfBoundsIndxer()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateOutOfBoundsIndxer()", span="380-380"];
m8_207 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateOutOfBoundsIndxer()", file="DefaultValueHandlingTests.cs", label="JToken t = a.SelectToken(''[1000].Ha'')", span="384-384"];
m8_206 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateOutOfBoundsIndxer()", file="DefaultValueHandlingTests.cs", label="JArray a = new JArray(1, 2, 3, 4, 5)", span="382-382"];
m8_208 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateOutOfBoundsIndxer()", file="DefaultValueHandlingTests.cs", label="Assert.IsNull(t)", span="385-385"];
m8_209 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateOutOfBoundsIndxer()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateOutOfBoundsIndxer()", span="380-380"];
m8_69 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSingleProperty()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSingleProperty()", span="194-194"];
m8_125 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultipleResultsError()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultipleResultsError()", span="288-288"];
m8_126 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultipleResultsError()", file="DefaultValueHandlingTests.cs", label="JArray a = new JArray(1, 2, 3, 4, 5)", span="290-290"];
m8_127 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultipleResultsError()", file="DefaultValueHandlingTests.cs", label="ExceptionAssert.Throws<JsonException>(() => { a.SelectToken(''[0, 1]''); }, @''Path returned multiple tokens.'')", span="292-292"];
m8_128 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultipleResultsError()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultipleResultsError()", span="288-288"];
m8_492 [cluster="Unk.ToList", file="DefaultValueHandlingTests.cs", label="Entry Unk.ToList", span=""];
m8_150 [cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor(string)", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor(string)", span="126-126"];
m8_158 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingPropertyWithError()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingPropertyWithError()", span="328-328"];
m8_159 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingPropertyWithError()", file="DefaultValueHandlingTests.cs", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1))", span="330-331"];
m8_160 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingPropertyWithError()", file="DefaultValueHandlingTests.cs", label="ExceptionAssert.Throws<JsonException>(() => { o.SelectToken(''Missing'', true); }, ''Property 'Missing' does not exist on JObject.'')", span="333-333"];
m8_161 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingPropertyWithError()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingPropertyWithError()", span="328-328"];
m8_503 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsAndNonPrimativeValues()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsAndNonPrimativeValues()", span="906-906"];
m8_507 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsAndNonPrimativeValues()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(4, result.Count)", span="937-937"];
m8_509 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsAndNonPrimativeValues()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(4, result.Count)", span="940-940"];
m8_511 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsAndNonPrimativeValues()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(4, result.Count)", span="943-943"];
m8_513 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsAndNonPrimativeValues()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(3, result.Count)", span="946-946"];
m8_515 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsAndNonPrimativeValues()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(4, result.Count)", span="949-949"];
m8_506 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsAndNonPrimativeValues()", file="DefaultValueHandlingTests.cs", label="List<JToken> result = a.SelectTokens(''$.[?(@.value!=1)]'').ToList()", span="936-936"];
m8_508 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsAndNonPrimativeValues()", file="DefaultValueHandlingTests.cs", label="result = a.SelectTokens(''$.[?(@.value!='2000-12-05T05:07:59-10:00')]'').ToList()", span="939-939"];
m8_510 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsAndNonPrimativeValues()", file="DefaultValueHandlingTests.cs", label="result = a.SelectTokens(''$.[?(@.value!=null)]'').ToList()", span="942-942"];
m8_512 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsAndNonPrimativeValues()", file="DefaultValueHandlingTests.cs", label="result = a.SelectTokens(''$.[?(@.value!=123)]'').ToList()", span="945-945"];
m8_514 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsAndNonPrimativeValues()", file="DefaultValueHandlingTests.cs", label="result = a.SelectTokens(''$.[?(@.value)]'').ToList()", span="948-948"];
m8_505 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsAndNonPrimativeValues()", file="DefaultValueHandlingTests.cs", label="JArray a = JArray.Parse(json)", span="934-934"];
m8_504 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsAndNonPrimativeValues()", file="DefaultValueHandlingTests.cs", label="string json = @''[\r\n  {\r\n    ''''name'''': ''''string'''',\r\n    ''''value'''': ''''aString''''\r\n  },\r\n  {\r\n    ''''name'''': ''''number'''',\r\n    ''''value'''': 123\r\n  },\r\n  {\r\n    ''''name'''': ''''array'''',\r\n    ''''value'''': [\r\n      1,\r\n      2,\r\n      3,\r\n      4\r\n    ]\r\n  },\r\n  {\r\n    ''''name'''': ''''object'''',\r\n    ''''value'''': {\r\n      ''''1'''': 1\r\n    }\r\n  }\r\n]''", span="908-932"];
m8_516 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsAndNonPrimativeValues()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsAndNonPrimativeValues()", span="906-906"];
m8_47 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.ApproxEquals()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(MathUtils.ApproxEquals(0.0, 0.0))", span="198-198"];
m8_48 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.ApproxEquals()", color=green, community=0, file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(MathUtils.ApproxEquals(1000.0, 1000.0000000000001))", prediction=266, span="199-199"];
m8_49 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.ApproxEquals()", color=green, community=0, file="DefaultValueHandlingTests.cs", label="Assert.IsFalse(MathUtils.ApproxEquals(1000.0, 1000.000000000001))", prediction=267, span="201-201"];
m8_50 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.ApproxEquals()", color=green, community=0, file="DefaultValueHandlingTests.cs", label="Assert.IsFalse(MathUtils.ApproxEquals(0.0, 0.00001))", prediction=266, span="202-202"];
m8_51 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.ApproxEquals()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.ApproxEquals()", span="196-196"];
m8_52 [cluster="Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", span="103-103"];
m8_309 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", span="514-514"];
m8_316 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(4, t.Count)", span="523-523"];
m8_317 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, (int)t[0])", span="524-524"];
m8_318 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, (int)t[1])", span="525-525"];
m8_314 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", file="DefaultValueHandlingTests.cs", label="IList<JToken> t = a.SelectTokens(''$..Name'').ToList()", span="521-521"];
m8_315 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", file="DefaultValueHandlingTests.cs", label="Assert.IsNotNull(t)", span="522-522"];
m8_319 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JObject { { ''Name'', new JArray(3) } }, t[2]))", span="526-526"];
m8_313 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", file="DefaultValueHandlingTests.cs", label="JArray a = new JArray(o1, o2, o3)", span="519-519"];
m8_320 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(3), t[3]))", span="527-527"];
m8_312 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", file="DefaultValueHandlingTests.cs", label="JObject o3 = new JObject { { ''Name'', new JObject { { ''Name'', new JArray(3) } } } }", span="518-518"];
m8_310 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", file="DefaultValueHandlingTests.cs", label="JObject o1 = new JObject { { ''Name'', 1 } }", span="516-516"];
m8_311 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", file="DefaultValueHandlingTests.cs", label="JObject o2 = new JObject { { ''Name'', 2 } }", span="517-517"];
m8_321 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", span="514-514"];
m8_281 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="DefaultValueHandlingTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m8_408 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", span="672-672"];
m8_412 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(4, t.Count)", span="682-682"];
m8_409 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", file="DefaultValueHandlingTests.cs", label="JArray a = new JArray(\r\n                new JObject(new JProperty(''hi'', 1)),\r\n                new JObject(new JProperty(''hi'', 2)),\r\n                new JObject(new JProperty(''hi'', 2.0)),\r\n                new JObject(new JProperty(''hi'', 3)))", span="674-678"];
m8_413 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''hi'', 1)), t[0]))", span="683-683"];
m8_414 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''hi'', 2)), t[1]))", span="684-684"];
m8_415 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''hi'', 2.0)), t[2]))", span="685-685"];
m8_416 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''hi'', 3)), t[3]))", span="686-686"];
m8_410 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", file="DefaultValueHandlingTests.cs", label="IList<JToken> t = a.SelectTokens(''[ ?( @.hi >= 1 ) ]'').ToList()", span="680-680"];
m8_411 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", file="DefaultValueHandlingTests.cs", label="Assert.IsNotNull(t)", span="681-681"];
m8_417 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", span="672-672"];
m8_214 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Entry lambda expression", span="393-393"];
m8_130 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="a.SelectToken(''[0, 1]'')", span="292-292"];
m8_498 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="(string)m.SelectToken(''Products[1].Name'')", span="889-889"];
m8_501 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="(decimal)m.SelectToken(''Products[0].Price'')", span="893-893"];
m8_471 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="new JObject(new JProperty(''childProp'', v))", span="812-812"];
m8_129 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Entry lambda expression", span="292-292"];
m8_131 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Exit lambda expression", span="292-292"];
m8_494 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Entry lambda expression", span="885-885"];
m8_497 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Entry lambda expression", span="889-889"];
m8_499 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Exit lambda expression", span="889-889"];
m8_500 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Entry lambda expression", span="893-893"];
m8_502 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Exit lambda expression", span="893-893"];
m8_111 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializePopulate", span=""];
m8_118 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="o.SelectToken(''[:]'', true)", span="275-275"];
m8_163 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="o.SelectToken(''Missing'', true)", span="333-333"];
m8_175 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="o.SelectToken(''['Missing','Missing2']'', true)", span="352-352"];
m8_470 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Entry lambda expression", span="812-812"];
m8_472 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Exit lambda expression", span="812-812"];
m8_496 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Exit lambda expression", span="885-885"];
m8_495 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="(string)s", span="885-885"];
m8_110 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder", span=""];
m8_112 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Exit lambda expression", span="266-266"];
m8_117 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Entry lambda expression", span="275-275"];
m8_119 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Exit lambda expression", span="275-275"];
m8_162 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Entry lambda expression", span="333-333"];
m8_164 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Exit lambda expression", span="333-333"];
m8_174 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Entry lambda expression", span="352-352"];
m8_176 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Exit lambda expression", span="352-352"];
m8_137 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="a.SelectToken(''BlahBlah'', true)", span="300-300"];
m8_144 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="a.SelectToken(''[9,10]'', true)", span="308-308"];
m8_152 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="c.SelectToken(''[1]'', true)", span="316-316"];
m8_182 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="a.SelectToken(''['Missing','Missing2']'', true)", span="360-360"];
m8_194 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="a.SelectToken(''[99:]'', true)", span="368-368"];
m8_197 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="a.SelectToken(''[1:-19]'', true)", span="370-370"];
m8_200 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="a.SelectToken(''[:-19]'', true)", span="372-372"];
m8_203 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="a.SelectToken(''[:]'', true)", span="376-376"];
m8_215 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="a.SelectToken(''[1000].Ha'', true)", span="393-393"];
m8_136 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Entry lambda expression", span="300-300"];
m8_138 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Exit lambda expression", span="300-300"];
m8_143 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Entry lambda expression", span="308-308"];
m8_145 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Exit lambda expression", span="308-308"];
m8_151 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Entry lambda expression", span="316-316"];
m8_153 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Exit lambda expression", span="316-316"];
m8_181 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Entry lambda expression", span="360-360"];
m8_183 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Exit lambda expression", span="360-360"];
m8_193 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Entry lambda expression", span="368-368"];
m8_195 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Exit lambda expression", span="368-368"];
m8_196 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Entry lambda expression", span="370-370"];
m8_198 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Exit lambda expression", span="370-370"];
m8_199 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Entry lambda expression", span="372-372"];
m8_201 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Exit lambda expression", span="372-372"];
m8_202 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Entry lambda expression", span="376-376"];
m8_204 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Exit lambda expression", span="376-376"];
m8_216 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Exit lambda expression", span="393-393"];
m8_170 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingPropertyIndexWithError()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingPropertyIndexWithError()", span="347-347"];
m8_171 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingPropertyIndexWithError()", file="DefaultValueHandlingTests.cs", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1))", span="349-350"];
m8_172 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingPropertyIndexWithError()", file="DefaultValueHandlingTests.cs", label="ExceptionAssert.Throws<JsonException>(() => { o.SelectToken(''['Missing','Missing2']'', true); }, ''Property 'Missing' does not exist on JObject.'')", span="352-352"];
m8_173 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingPropertyIndexWithError()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingPropertyIndexWithError()", span="347-347"];
m8_520 [file="DefaultValueHandlingTests.cs", label=a, span=""];
m8_517 [file="DefaultValueHandlingTests.cs", label=o, span=""];
m8_518 [file="DefaultValueHandlingTests.cs", label=o, span=""];
m8_519 [file="DefaultValueHandlingTests.cs", label=o, span=""];
m8_524 [file="DefaultValueHandlingTests.cs", label=o, span=""];
m8_525 [file="DefaultValueHandlingTests.cs", label=o, span=""];
m8_521 [file="DefaultValueHandlingTests.cs", label=a, span=""];
m8_522 [file="DefaultValueHandlingTests.cs", label=a, span=""];
m8_523 [file="DefaultValueHandlingTests.cs", label=c, span=""];
m8_526 [file="DefaultValueHandlingTests.cs", label=a, span=""];
m8_527 [file="DefaultValueHandlingTests.cs", label=a, span=""];
m8_528 [file="DefaultValueHandlingTests.cs", label=a, span=""];
m9_101 [cluster="System.Dynamic.DynamicObject.TryConvert(System.Dynamic.ConvertBinder, out object)", file="DynamicTests.cs", label="Entry System.Dynamic.DynamicObject.TryConvert(System.Dynamic.ConvertBinder, out object)", span="0-0"];
m9_33 [cluster="Newtonsoft.Json.Serialization.JsonDynamicContract.TryGetMember(System.Dynamic.IDynamicMetaObjectProvider, string, out object)", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonDynamicContract.TryGetMember(System.Dynamic.IDynamicMetaObjectProvider, string, out object)", span="85-85"];
m9_105 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="DynamicTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m9_57 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="DynamicTests.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="347-347"];
m9_58 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="DynamicTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="585-585"];
m9_63 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.NoPublicDefaultConstructor()", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DynamicTests.NoPublicDefaultConstructor()", span="154-154"];
m9_64 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.NoPublicDefaultConstructor()", file="DynamicTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(''Unable to find a default constructor to use for type System.Dynamic.DynamicObject. Path 'contributors', line 2, position 18.'',\r\n      () =>\r\n      {\r\n        var settings = new JsonSerializerSettings();\r\n        settings.NullValueHandling = NullValueHandling.Ignore;\r\n        var json = @''{\r\n  ''''contributors'''': null\r\n}'';\r\n\r\n        JsonConvert.DeserializeObject<DynamicObject>(json, settings);\r\n      })", span="156-166"];
m9_65 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.NoPublicDefaultConstructor()", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DynamicTests.NoPublicDefaultConstructor()", span="154-154"];
m9_77 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.DictionaryDynamicObject.TrySetMember(System.Dynamic.SetMemberBinder, object)", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DynamicTests.DictionaryDynamicObject.TrySetMember(System.Dynamic.SetMemberBinder, object)", span="178-178"];
m9_78 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.DictionaryDynamicObject.TrySetMember(System.Dynamic.SetMemberBinder, object)", file="DynamicTests.cs", label="Values[binder.Name] = value", span="180-180"];
m9_79 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.DictionaryDynamicObject.TrySetMember(System.Dynamic.SetMemberBinder, object)", file="DynamicTests.cs", label="return true;", span="181-181"];
m9_80 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.DictionaryDynamicObject.TrySetMember(System.Dynamic.SetMemberBinder, object)", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DynamicTests.DictionaryDynamicObject.TrySetMember(System.Dynamic.SetMemberBinder, object)", span="178-178"];
m9_102 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TryDeleteMember(System.Dynamic.DeleteMemberBinder)", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TryDeleteMember(System.Dynamic.DeleteMemberBinder)", span="300-300"];
m9_103 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TryDeleteMember(System.Dynamic.DeleteMemberBinder)", file="DynamicTests.cs", label="return _members.Remove(binder.Name);", span="302-302"];
m9_104 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TryDeleteMember(System.Dynamic.DeleteMemberBinder)", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TryDeleteMember(System.Dynamic.DeleteMemberBinder)", span="300-300"];
m9_27 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TestDynamicObject()", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TestDynamicObject()", span="274-274"];
m9_88 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TestDynamicObject()", file="DynamicTests.cs", label="_members = new Dictionary<string, object>()", span="276-276"];
m9_89 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TestDynamicObject()", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TestDynamicObject()", span="274-274"];
m9_60 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", span="141-141"];
m9_36 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="DynamicTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="529-529"];
m9_62 [cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="152-152"];
m9_93 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TryConvert(System.Dynamic.ConvertBinder, out object)", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TryConvert(System.Dynamic.ConvertBinder, out object)", span="284-284"];
m9_94 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TryConvert(System.Dynamic.ConvertBinder, out object)", file="DynamicTests.cs", label="Type targetType = binder.Type", span="286-286"];
m9_98 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TryConvert(System.Dynamic.ConvertBinder, out object)", file="DynamicTests.cs", label="return base.TryConvert(binder, out result);", span="296-296"];
m9_95 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TryConvert(System.Dynamic.ConvertBinder, out object)", file="DynamicTests.cs", label="targetType == typeof(IDictionary<string, object>) ||\r\n          targetType == typeof(IDictionary)", span="288-289"];
m9_96 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TryConvert(System.Dynamic.ConvertBinder, out object)", file="DynamicTests.cs", label="result = new Dictionary<string, object>(_members)", span="291-291"];
m9_97 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TryConvert(System.Dynamic.ConvertBinder, out object)", file="DynamicTests.cs", label="return true;", span="292-292"];
m9_99 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TryConvert(System.Dynamic.ConvertBinder, out object)", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TryConvert(System.Dynamic.ConvertBinder, out object)", span="284-284"];
m9_34 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="DynamicTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m9_61 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="DynamicTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="800-800"];
m9_74 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.DictionaryDynamicObject.DictionaryDynamicObject()", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DynamicTests.DictionaryDynamicObject.DictionaryDynamicObject()", span="173-173"];
m9_75 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.DictionaryDynamicObject.DictionaryDynamicObject()", file="DynamicTests.cs", label="Values = new Dictionary<string, object>()", span="175-175"];
m9_76 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.DictionaryDynamicObject.DictionaryDynamicObject()", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DynamicTests.DictionaryDynamicObject.DictionaryDynamicObject()", span="173-173"];
m9_106 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TryGetMember(System.Dynamic.GetMemberBinder, out object)", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TryGetMember(System.Dynamic.GetMemberBinder, out object)", span="305-305"];
m9_107 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TryGetMember(System.Dynamic.GetMemberBinder, out object)", file="DynamicTests.cs", label="return _members.TryGetValue(binder.Name, out result);", span="307-307"];
m9_108 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TryGetMember(System.Dynamic.GetMemberBinder, out object)", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TryGetMember(System.Dynamic.GetMemberBinder, out object)", span="305-305"];
m9_30 [cluster="object.GetType()", file="DynamicTests.cs", label="Entry object.GetType()", span="0-0"];
m9_28 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicChildObject.DynamicChildObject()", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DynamicChildObject.DynamicChildObject()", span="254-254"];
m9_66 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", span="177-177"];
m9_59 [cluster="System.Console.WriteLine(string)", file="DynamicTests.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m9_35 [cluster="Unk.AreEqual", file="DynamicTests.cs", label="Entry Unk.AreEqual", span=""];
m9_38 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", span="104-104"];
m9_39 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", file="DynamicTests.cs", label="dynamic o = new ExpandoObject()", span="106-106"];
m9_40 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", file="DynamicTests.cs", label="o.Text = ''Text!''", span="107-107"];
m9_41 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", file="DynamicTests.cs", label="o.Integer = int.MaxValue", span="108-108"];
m9_42 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", file="DynamicTests.cs", label="o.DynamicChildObject = new DynamicChildObject\r\n        {\r\n          Integer = int.MinValue,\r\n          Text = ''Child text!''\r\n        }", span="109-113"];
m9_43 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", file="DynamicTests.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.All,\r\n          TypeNameAssemblyFormat = FormatterAssemblyStyle.Full\r\n        })", span="115-119"];
m9_44 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", file="DynamicTests.cs", label="Console.WriteLine(json)", span="121-121"];
m9_47 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", file="DynamicTests.cs", label="Assert.AreEqual(@''{\r\n  ''''$type'''': '''''' + expandoObjectTypeName + @'''''',\r\n  ''''Text'''': ''''Text!'''',\r\n  ''''Integer'''': 2147483647,\r\n  ''''DynamicChildObject'''': {\r\n    ''''$type'''': '''''' + dynamicChildObjectTypeName + @'''''',\r\n    ''''Text'''': ''''Child text!'''',\r\n    ''''Integer'''': -2147483648\r\n  }\r\n}'', json)", span="126-135"];
m9_48 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", file="DynamicTests.cs", label="dynamic n = JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.All,\r\n          TypeNameAssemblyFormat = FormatterAssemblyStyle.Full\r\n        })", span="137-141"];
m9_45 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", file="DynamicTests.cs", label="string dynamicChildObjectTypeName = ReflectionUtils.GetTypeName(typeof(DynamicChildObject), FormatterAssemblyStyle.Full, null)", span="123-123"];
m9_46 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", file="DynamicTests.cs", label="string expandoObjectTypeName = ReflectionUtils.GetTypeName(typeof(ExpandoObject), FormatterAssemblyStyle.Full, null)", span="124-124"];
m9_49 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", file="DynamicTests.cs", label="CustomAssert.IsInstanceOfType(typeof(ExpandoObject), n)", span="143-143"];
m9_50 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", file="DynamicTests.cs", label="Assert.AreEqual(''Text!'', n.Text)", span="144-144"];
m9_51 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", file="DynamicTests.cs", label="Assert.AreEqual(int.MaxValue, n.Integer)", span="145-145"];
m9_52 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", file="DynamicTests.cs", label="CustomAssert.IsInstanceOfType(typeof(DynamicChildObject), n.DynamicChildObject)", span="147-147"];
m9_53 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", file="DynamicTests.cs", label="Assert.AreEqual(''Child text!'', n.DynamicChildObject.Text)", span="148-148"];
m9_54 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", file="DynamicTests.cs", label="Assert.AreEqual(int.MinValue, n.DynamicChildObject.Integer)", span="149-149"];
m9_55 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", span="104-104"];
m9_29 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DynamicTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m9_114 [cluster="Newtonsoft.Json.Tests.Serialization.ErrorSettingDynamicObject.TrySetMember(System.Dynamic.SetMemberBinder, object)", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ErrorSettingDynamicObject.TrySetMember(System.Dynamic.SetMemberBinder, object)", span="319-319"];
m9_115 [cluster="Newtonsoft.Json.Tests.Serialization.ErrorSettingDynamicObject.TrySetMember(System.Dynamic.SetMemberBinder, object)", file="DynamicTests.cs", label="return false;", span="321-321"];
m9_116 [cluster="Newtonsoft.Json.Tests.Serialization.ErrorSettingDynamicObject.TrySetMember(System.Dynamic.SetMemberBinder, object)", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ErrorSettingDynamicObject.TrySetMember(System.Dynamic.SetMemberBinder, object)", span="319-319"];
m9_37 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="DynamicTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="706-706"];
m9_73 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="DynamicTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="769-769"];
m9_100 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="DynamicTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m9_81 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.AllowNonPublicDefaultConstructor()", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DynamicTests.AllowNonPublicDefaultConstructor()", span="186-186"];
m9_82 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.AllowNonPublicDefaultConstructor()", file="DynamicTests.cs", label="var settings = new JsonSerializerSettings()", span="188-188"];
m9_83 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.AllowNonPublicDefaultConstructor()", file="DynamicTests.cs", label="settings.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="189-189"];
m9_85 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.AllowNonPublicDefaultConstructor()", file="DynamicTests.cs", label="DictionaryDynamicObject foo = JsonConvert.DeserializeObject<DictionaryDynamicObject>(json, settings)", span="248-248"];
m9_84 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.AllowNonPublicDefaultConstructor()", file="DynamicTests.cs", label="var json = @''{\r\n  ''''contributors'''': null,\r\n  ''''retweeted'''': false,\r\n  ''''text'''': ''''Guys SX4 diesel is launched.what are your plans?catch us at #facebook http://bit.ly/dV3H1a #auto #car #maruti #india #delhi'''',\r\n  ''''in_reply_to_user_id_str'''': null,\r\n  ''''retweet_count'''': 0,\r\n  ''''geo'''': null,\r\n  ''''id_str'''': ''''40678260320768000'''',\r\n  ''''in_reply_to_status_id'''': null,\r\n  ''''source'''': ''''<a href=\''''http://www.tweetdeck.com\'''' rel=\''''nofollow\''''>TweetDeck</a>'''',\r\n  ''''created_at'''': ''''Thu Feb 24 07:43:47 +0000 2011'''',\r\n  ''''place'''': null,\r\n  ''''coordinates'''': null,\r\n  ''''truncated'''': false,\r\n  ''''favorited'''': false,\r\n  ''''user'''': {\r\n    ''''profile_background_image_url'''': ''''http://a1.twimg.com/profile_background_images/206944715/twitter_bg.jpg'''',\r\n    ''''url'''': ''''http://bit.ly/dcFwWC'''',\r\n    ''''screen_name'''': ''''marutisuzukisx4'''',\r\n    ''''verified'''': false,\r\n    ''''friends_count'''': 45,\r\n    ''''description'''': ''''This is the Official Maruti Suzuki SX4 Twitter ID! Men are Back - mail us on social (at) sx4bymaruti (dot) com'''',\r\n    ''''follow_request_sent'''': null,\r\n    ''''time_zone'''': ''''Chennai'''',\r\n    ''''profile_text_color'''': ''''333333'''',\r\n    ''''location'''': ''''India'''',\r\n    ''''notifications'''': null,\r\n    ''''profile_sidebar_fill_color'''': ''''efefef'''',\r\n    ''''id_str'''': ''''196143889'''',\r\n    ''''contributors_enabled'''': false,\r\n    ''''lang'''': ''''en'''',\r\n    ''''profile_background_tile'''': false,\r\n    ''''created_at'''': ''''Tue Sep 28 12:55:15 +0000 2010'''',\r\n    ''''followers_count'''': 117,\r\n    ''''show_all_inline_media'''': true,\r\n    ''''listed_count'''': 1,\r\n    ''''geo_enabled'''': true,\r\n    ''''profile_link_color'''': ''''009999'''',\r\n    ''''profile_sidebar_border_color'''': ''''eeeeee'''',\r\n    ''''protected'''': false,\r\n    ''''name'''': ''''Maruti Suzuki SX4'''',\r\n    ''''statuses_count'''': 637,\r\n    ''''following'''': null,\r\n    ''''profile_use_background_image'''': true,\r\n    ''''profile_image_url'''': ''''http://a3.twimg.com/profile_images/1170694644/Slide1_normal.JPG'''',\r\n    ''''id'''': 196143889,\r\n    ''''is_translator'''': false,\r\n    ''''utc_offset'''': 19800,\r\n    ''''favourites_count'''': 0,\r\n    ''''profile_background_color'''': ''''131516''''\r\n  },\r\n  ''''in_reply_to_screen_name'''': null,\r\n  ''''id'''': 40678260320768000,\r\n  ''''in_reply_to_status_id_str'''': null,\r\n  ''''in_reply_to_user_id'''': null\r\n}''", span="191-246"];
m9_86 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.AllowNonPublicDefaultConstructor()", file="DynamicTests.cs", label="Assert.AreEqual(false, foo.Values[''retweeted''])", span="250-250"];
m9_87 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.AllowNonPublicDefaultConstructor()", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DynamicTests.AllowNonPublicDefaultConstructor()", span="186-186"];
m9_109 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="DynamicTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m9_110 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TrySetMember(System.Dynamic.SetMemberBinder, object)", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TrySetMember(System.Dynamic.SetMemberBinder, object)", span="310-310"];
m9_111 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TrySetMember(System.Dynamic.SetMemberBinder, object)", file="DynamicTests.cs", label="_members[binder.Name] = value", span="312-312"];
m9_112 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TrySetMember(System.Dynamic.SetMemberBinder, object)", file="DynamicTests.cs", label="return true;", span="313-313"];
m9_113 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TrySetMember(System.Dynamic.SetMemberBinder, object)", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TrySetMember(System.Dynamic.SetMemberBinder, object)", span="310-310"];
m9_56 [cluster="System.Dynamic.ExpandoObject.ExpandoObject()", file="DynamicTests.cs", label="Entry System.Dynamic.ExpandoObject.ExpandoObject()", span="0-0"];
m9_0 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", span="53-53"];
m9_1 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", file="DynamicTests.cs", label="TestDynamicObject dynamicObject = new TestDynamicObject()", span="55-55"];
m9_2 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", file="DynamicTests.cs", label="dynamicObject.Explicit = true", span="56-56"];
m9_3 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", file="DynamicTests.cs", label="dynamic d = dynamicObject", span="58-58"];
m9_9 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", file="DynamicTests.cs", label="JsonDynamicContract dynamicContract = (JsonDynamicContract)c.ResolveContract(dynamicObject.GetType())", span="66-66"];
m9_10 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", file="DynamicTests.cs", label="dynamicObject.GetDynamicMemberNames()", span="68-68"];
m9_12 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", file="DynamicTests.cs", label="dynamicContract.TryGetMember(dynamicObject, memberName, out value)", span="71-71"];
m9_17 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", file="DynamicTests.cs", label="string json = JsonConvert.SerializeObject(dynamicObject, Formatting.Indented)", span="80-80"];
m9_24 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", file="DynamicTests.cs", label="Assert.AreEqual(dynamicObject.ChildObject.Integer, d.ChildObject.Integer)", span="98-98"];
m9_25 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", file="DynamicTests.cs", label="Assert.AreEqual(dynamicObject.ChildObject.Text, d.ChildObject.Text)", span="99-99"];
m9_4 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", file="DynamicTests.cs", label="d.Int = 1", span="59-59"];
m9_5 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", file="DynamicTests.cs", label="d.Decimal = 99.9d", span="60-60"];
m9_6 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", file="DynamicTests.cs", label="d.ChildObject = new DynamicChildObject()", span="61-61"];
m9_14 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", file="DynamicTests.cs", label="Assert.AreEqual(d.Int, values[''Int''])", span="76-76"];
m9_15 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", file="DynamicTests.cs", label="Assert.AreEqual(d.Decimal, values[''Decimal''])", span="77-77"];
m9_16 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", file="DynamicTests.cs", label="Assert.AreEqual(d.ChildObject, values[''ChildObject''])", span="78-78"];
m9_7 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", file="DynamicTests.cs", label="Dictionary<string, object> values = new Dictionary<string, object>()", span="63-63"];
m9_8 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", file="DynamicTests.cs", label="IContractResolver c = DefaultContractResolver.Instance", span="65-65"];
m9_13 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", file="DynamicTests.cs", label="values.Add(memberName, value)", span="73-73"];
m9_11 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", file="DynamicTests.cs", label="object value", span="70-70"];
m9_18 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", file="DynamicTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Explicit'''': true,\r\n  ''''Decimal'''': 99.9,\r\n  ''''Int'''': 1,\r\n  ''''ChildObject'''': {\r\n    ''''Text'''': null,\r\n    ''''Integer'''': 0\r\n  }\r\n}'', json)", span="81-89"];
m9_19 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", file="DynamicTests.cs", label="TestDynamicObject newDynamicObject = JsonConvert.DeserializeObject<TestDynamicObject>(json)", span="91-91"];
m9_20 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", file="DynamicTests.cs", label="Assert.AreEqual(true, newDynamicObject.Explicit)", span="92-92"];
m9_21 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", file="DynamicTests.cs", label="d = newDynamicObject", span="94-94"];
m9_22 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", file="DynamicTests.cs", label="Assert.AreEqual(99.9, d.Decimal)", span="96-96"];
m9_23 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", file="DynamicTests.cs", label="Assert.AreEqual(1, d.Int)", span="97-97"];
m9_26 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", span="53-53"];
m9_67 [cluster="lambda expression", file="DynamicTests.cs", label="Entry lambda expression", span="157-166"];
m9_68 [cluster="lambda expression", file="DynamicTests.cs", label="var settings = new JsonSerializerSettings()", span="159-159"];
m9_69 [cluster="lambda expression", file="DynamicTests.cs", label="settings.NullValueHandling = NullValueHandling.Ignore", span="160-160"];
m9_71 [cluster="lambda expression", file="DynamicTests.cs", label="JsonConvert.DeserializeObject<DynamicObject>(json, settings)", span="165-165"];
m9_70 [cluster="lambda expression", file="DynamicTests.cs", label="var json = @''{\r\n  ''''contributors'''': null\r\n}''", span="161-163"];
m9_72 [cluster="lambda expression", file="DynamicTests.cs", label="Exit lambda expression", span="157-166"];
m9_31 [cluster="Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", span="43-43"];
m9_32 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.GetDynamicMemberNames()", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TestDynamicObject.GetDynamicMemberNames()", span="279-279"];
m9_90 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.GetDynamicMemberNames()", file="DynamicTests.cs", label="return _members.Keys.Union(new[] { ''Int'', ''ChildObject'' });", span="281-281"];
m9_91 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.GetDynamicMemberNames()", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TestDynamicObject.GetDynamicMemberNames()", span="279-279"];
m9_92 [cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="DynamicTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m9_117 [file="DynamicTests.cs", label="Newtonsoft.Json.Tests.Serialization.DynamicTests.DictionaryDynamicObject", span=""];
m9_118 [file="DynamicTests.cs", label="Newtonsoft.Json.Tests.Serialization.TestDynamicObject", span=""];
m10_114 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="isReference == null", span="231-231"];
m10_24 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", color=green, community=0, file="ExpressionReflectionDelegateFactory.cs", label="callExpression = EnsureCastExpression(callExpression, type)", prediction=269, span="85-85"];
m10_550 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="ExpressionReflectionDelegateFactory.cs", label="ClearErrorContext()", span="1013-1013"];
m10_551 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="ExpressionReflectionDelegateFactory.cs", label="writer.WriteState == WriteState.Property", span="1015-1015"];
m10_552 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="ExpressionReflectionDelegateFactory.cs", label="writer.WriteNull()", span="1016-1016"];
m10_553 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="ExpressionReflectionDelegateFactory.cs", label="writer.Top > initialDepth", span="1018-1018"];
m10_554 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="ExpressionReflectionDelegateFactory.cs", label="writer.WriteEnd()", span="1020-1020"];
m10_555 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", span="1011-1011"];
m10_33 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", file="ExpressionReflectionDelegateFactory.cs", label="return null;", span="115-115"];
m10_55 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="value == null", span="144-144"];
m10_178 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="ExpressionReflectionDelegateFactory.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
m10_95 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="ExpressionReflectionDelegateFactory.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m10_352 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="708-708"];
m10_393 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="bool isReference = ResolveIsReference(contract, member, containerContract, containerProperty) ?? HasFlag(Serializer._preserveReferencesHandling, PreserveReferencesHandling.Arrays)", span="710-710"];
m10_394 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="isReference = (isReference && (member == null || member.Writable))", span="712-712"];
m10_395 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="bool includeTypeDetails = ShouldWriteType(TypeNameHandling.Arrays, contract, member, containerContract, containerProperty)", span="714-714"];
m10_398 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="writer.WriteStartObject()", span="719-719"];
m10_400 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="WriteReferenceIdProperty(writer, contract.UnderlyingType, values)", span="723-723"];
m10_402 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="WriteTypeProperty(writer, values.GetType())", span="727-727"];
m10_403 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="writer.WritePropertyName(JsonTypeReflector.ArrayValuesPropertyName, false)", span="729-729"];
m10_404 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="contract.ItemContract == null", span="732-732"];
m10_405 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="contract.ItemContract = Serializer._contractResolver.ResolveContract(contract.CollectionItemType ?? typeof(object))", span="733-733"];
m10_396 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="bool writeMetadataObject = isReference || includeTypeDetails", span="715-715"];
m10_399 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label=isReference, span="721-721"];
m10_401 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label=includeTypeDetails, span="725-725"];
m10_397 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label=writeMetadataObject, span="717-717"];
m10_406 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="return writeMetadataObject;", span="735-735"];
m10_407 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="708-708"];
m10_125 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ExpressionReflectionDelegateFactory.cs", label="MethodInfo setMethod = propertyInfo.GetSetMethod(true)", span="231-231"];
m10_126 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ExpressionReflectionDelegateFactory.cs", label="Expression setExpression", span="233-233"];
m10_128 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ExpressionReflectionDelegateFactory.cs", label="setExpression = Expression.Call(setMethod, readValueParameter)", span="236-236"];
m10_127 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ExpressionReflectionDelegateFactory.cs", label="setMethod.IsStatic", span="234-234"];
m10_129 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ExpressionReflectionDelegateFactory.cs", label="Expression readInstanceParameter = EnsureCastExpression(instanceParameter, propertyInfo.DeclaringType)", span="240-240"];
m10_130 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ExpressionReflectionDelegateFactory.cs", label="setExpression = Expression.Call(readInstanceParameter, setMethod, readValueParameter)", span="242-242"];
m10_131 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ExpressionReflectionDelegateFactory.cs", label="LambdaExpression lambdaExpression = Expression.Lambda(typeof(Action<T, object>), setExpression, instanceParameter, valueParameter)", span="245-245"];
m10_20 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="ExpressionReflectionDelegateFactory.cs", label="callExpression = Expression.Call(readParameter, (MethodInfo)method, argsExpression)", span="78-78"];
m10_109 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ExpressionReflectionDelegateFactory.cs", label="LambdaExpression lambdaExpression = Expression.Lambda(typeof(Action<T, object>), assignExpression, sourceParameterExpression, valueParameterExpression)", span="208-208"];
m10_111 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ExpressionReflectionDelegateFactory.cs", label="return compiled;", span="211-211"];
m10_113 [cluster="System.Type.IsValueType()", file="ExpressionReflectionDelegateFactory.cs", label="Entry System.Type.IsValueType()", span="522-522"];
m10_115 [cluster="System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)", file="ExpressionReflectionDelegateFactory.cs", label="Entry System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)", span="0-0"];
m10_120 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ExpressionReflectionDelegateFactory.cs", label="Type instanceType = typeof(T)", span="223-223"];
m10_110 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ExpressionReflectionDelegateFactory.cs", label="Action<T, object> compiled = (Action<T, object>)lambdaExpression.Compile()", span="210-210"];
m10_112 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", span="180-180"];
m10_118 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ExpressionReflectionDelegateFactory.cs", label="propertyInfo.DeclaringType.IsValueType()", span="220-220"];
m10_116 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", span="214-214"];
m10_117 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ExpressionReflectionDelegateFactory.cs", label="ValidationUtils.ArgumentNotNull(propertyInfo, ''propertyInfo'')", span="216-216"];
m10_119 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ExpressionReflectionDelegateFactory.cs", label="return LateBoundReflectionDelegateFactory.Instance.CreateSet<T>(propertyInfo);", span="221-221"];
m10_121 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ExpressionReflectionDelegateFactory.cs", label="Type valueType = typeof(object)", span="224-224"];
m10_165 [cluster="string.FormatWith(System.IFormatProvider, object)", file="ExpressionReflectionDelegateFactory.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m10_42 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="WriteTypeProperty(writer, contract.CreatedType)", span="129-129"];
m10_48 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="120-120"];
m10_47 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="JsonWriter.WriteValue(writer, contract.TypeCode, value)", span="139-139"];
m10_46 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="return;", span="135-135"];
m10_49 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="873-873"];
m10_44 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="JsonWriter.WriteValue(writer, contract.TypeCode, value)", span="132-132"];
m10_43 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="writer.WritePropertyName(JsonTypeReflector.ValuePropertyName, false)", span="130-130"];
m10_50 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="357-357"];
m10_45 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="writer.WriteEndObject()", span="134-134"];
m10_52 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string, bool)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string, bool)", span="417-417"];
m10_51 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", span="528-528"];
m10_53 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", span="1271-1271"];
m10_258 [cluster="Newtonsoft.Json.Serialization.ExtensionDataGetter.Invoke(object)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Serialization.ExtensionDataGetter.Invoke(object)", span="75-75"];
m10_307 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", span="141-141"];
m10_87 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="ExpressionReflectionDelegateFactory.cs", label="Expression sourceExpression = EnsureCastExpression(sourceParameter, fieldInfo.DeclaringType)", span="169-169"];
m10_219 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="OnSerializing(writer, contract, value)", span="393-393"];
m10_220 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="_serializeStack.Add(value)", span="395-395"];
m10_221 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="WriteObjectStart(writer, value, contract, member, collectionContract, containerProperty)", span="397-397"];
m10_222 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="int initialDepth = writer.Top", span="399-399"];
m10_224 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="index < contract.Properties.Count", span="401-401"];
m10_225 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="JsonProperty property = contract.Properties[index]", span="403-403"];
m10_228 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="!CalculatePropertyValues(writer, value, contract, member, property, out memberContract, out memberValue)", span="409-409"];
m10_229 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="property.WritePropertyName(writer)", span="412-412"];
m10_230 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="SerializeValue(writer, memberValue, memberContract, property, contract, member)", span="413-413"];
m10_232 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="IsErrorHandled(value, contract, property.PropertyName, null, writer.ContainerPath, ex)", span="417-417"];
m10_233 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="HandleError(writer, initialDepth)", span="418-418"];
m10_236 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="contract.ExtensionDataGetter != null", span="424-424"];
m10_237 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="IEnumerable<KeyValuePair<object, object>> extensionData = contract.ExtensionDataGetter(value)", span="426-426"];
m10_243 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="string propertyName = GetPropertyName(writer, e.Key, keyContract, out escape)", span="435-435"];
m10_244 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="ShouldWriteReference(e.Value, null, valueContract, contract, member)", span="437-437"];
m10_245 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="writer.WritePropertyName(propertyName)", span="439-439"];
m10_246 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="WriteReference(writer, e.Value)", span="440-440"];
m10_247 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="!CheckForCircularReference(writer, e.Value, null, valueContract, contract, member)", span="444-444"];
m10_248 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="writer.WritePropertyName(propertyName)", span="447-447"];
m10_249 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="SerializeValue(writer, e.Value, valueContract, null, contract, member)", span="449-449"];
m10_250 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="writer.WriteEndObject()", span="455-455"];
m10_252 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="OnSerialized(writer, contract, value)", span="459-459"];
m10_223 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="int index = 0", span="401-401"];
m10_235 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="index++", span="401-401"];
m10_226 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="object memberValue", span="406-406"];
m10_227 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="JsonContract memberContract", span="407-407"];
m10_231 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label=Exception, span="415-415"];
m10_234 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="throw;", span="420-420"];
m10_238 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="extensionData != null", span="427-427"];
m10_239 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label=extensionData, span="429-429"];
m10_240 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="JsonContract keyContract = GetContractSafe(e.Key)", span="431-431"];
m10_241 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="JsonContract valueContract = GetContractSafe(e.Value)", span="432-432"];
m10_242 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="bool escape", span="434-434"];
m10_251 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="457-457"];
m10_253 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="391-391"];
m10_185 [cluster="Newtonsoft.Json.Serialization.IReferenceResolver.GetReference(object, object)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.GetReference(object, object)", span="46-46"];
m10_63 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="JsonContractType.Object", span="166-166"];
m10_72 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="JsonContractType.String", span="179-179"];
m10_74 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="JsonContractType.Dictionary", span="182-182"];
m10_68 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="SerializeList(writer, (IEnumerable)value, arrayContract, member, containerContract, containerProperty)", span="172-172"];
m10_67 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="!arrayContract.IsMultidimensionalArray", span="171-171"];
m10_66 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="JsonArrayContract arrayContract = (JsonArrayContract)valueContract", span="170-170"];
m10_70 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="JsonContractType.Primitive", span="176-176"];
m10_73 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="SerializeString(writer, value, (JsonStringContract)valueContract)", span="180-180"];
m10_71 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="SerializePrimitive(writer, value, (JsonPrimitiveContract)valueContract, member, containerContract, containerProperty)", span="177-177"];
m10_75 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="JsonDictionaryContract dictionaryContract = (JsonDictionaryContract)valueContract", span="183-183"];
m10_69 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="SerializeMultidimensionalArray(writer, (Array)value, arrayContract, member, containerContract, containerProperty)", span="174-174"];
m10_65 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="JsonContractType.Array", span="169-169"];
m10_64 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="SerializeObject(writer, value, (JsonObjectContract)valueContract, member, containerContract, containerProperty)", span="167-167"];
m10_76 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="SerializeDictionary(writer, (value is IDictionary) ? (IDictionary)value : dictionaryContract.CreateWrapper(value), dictionaryContract, member, containerContract, containerProperty)", span="184-184"];
m10_77 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="JsonContractType.Dynamic", span="187-187"];
m10_78 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="SerializeDynamic(writer, (IDynamicMetaObjectProvider)value, (JsonDynamicContract)valueContract, member, containerContract, containerProperty)", span="188-188"];
m10_144 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="referenceLoopHandling == null && containerContract != null", span="271-271"];
m10_39 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="bool includeTypeDetails = ShouldWriteType(TypeNameHandling.Objects, contract, member, containerContract, containerProperty)", span="125-125"];
m10_418 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="JsonContract valueContract = GetContractSafe(serializationEntry.Value)", span="763-763"];
m10_94 [cluster="System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", file="ExpressionReflectionDelegateFactory.cs", label="Entry System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0"];
m10_408 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="!JsonTypeReflector.FullyTrusted", span="744-744"];
m10_410 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="message = message.FormatWith(CultureInfo.InvariantCulture, value.GetType())", span="748-748"];
m10_411 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="throw JsonSerializationException.Create(null, writer.ContainerPath, message, null);", span="750-750"];
m10_412 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="OnSerializing(writer, contract, value)", span="753-753"];
m10_413 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="_serializeStack.Add(value)", span="754-754"];
m10_414 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="WriteObjectStart(writer, value, contract, member, collectionContract, containerProperty)", span="756-756"];
m10_415 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="SerializationInfo serializationInfo = new SerializationInfo(contract.UnderlyingType, new FormatterConverter())", span="758-758"];
m10_416 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="value.GetObjectData(serializationInfo, Serializer._context)", span="759-759"];
m10_419 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="ShouldWriteReference(serializationEntry.Value, null, valueContract, contract, member)", span="765-765"];
m10_420 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="writer.WritePropertyName(serializationEntry.Name)", span="767-767"];
m10_421 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="WriteReference(writer, serializationEntry.Value)", span="768-768"];
m10_422 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="CheckForCircularReference(writer, serializationEntry.Value, null, valueContract, contract, member)", span="770-770"];
m10_423 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="writer.WritePropertyName(serializationEntry.Name)", span="772-772"];
m10_424 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="SerializeValue(writer, serializationEntry.Value, valueContract, null, contract, member)", span="773-773"];
m10_425 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="writer.WriteEndObject()", span="777-777"];
m10_427 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="OnSerialized(writer, contract, value)", span="780-780"];
m10_409 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="string message = @''Type '{0}' implements ISerializable but cannot be serialized using the ISerializable interface because the current application is not fully trusted and ISerializable can expose secure data.'' + Environment.NewLine +\r\n                                 @''To fix this error either change the environment to be fully trusted, change the application to not deserialize the type, add JsonObjectAttribute to the type or change the JsonSerializer setting ContractResolver to use a new DefaultContractResolver with IgnoreSerializableInterface set to true.'' + Environment.NewLine", span="746-747"];
m10_417 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label=serializationInfo, span="761-761"];
m10_426 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="779-779"];
m10_428 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="742-742"];
m10_199 [cluster="System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", file="ExpressionReflectionDelegateFactory.cs", label="Entry System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", span="0-0"];
m10_549 [cluster="object.ToString()", file="ExpressionReflectionDelegateFactory.cs", label="Entry object.ToString()", span="0-0"];
m10_36 [cluster="System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, params System.Linq.Expressions.Expression[])", file="ExpressionReflectionDelegateFactory.cs", label="Entry System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, params System.Linq.Expressions.Expression[])", span="0-0"];
m10_556 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEnd()", span="425-425"];
m10_301 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="ExpressionReflectionDelegateFactory.cs", label="string typeName = ReflectionUtils.GetTypeName(type, Serializer._typeNameAssemblyFormat, Serializer._binder)", span="530-530"];
m10_303 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="ExpressionReflectionDelegateFactory.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, ''Writing type name '{0}' for {1}.''.FormatWith(CultureInfo.InvariantCulture, typeName, type)), null)", span="533-533"];
m10_304 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="ExpressionReflectionDelegateFactory.cs", label="writer.WritePropertyName(JsonTypeReflector.TypePropertyName, false)", span="535-535"];
m10_305 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="ExpressionReflectionDelegateFactory.cs", label="writer.WriteValue(typeName)", span="536-536"];
m10_302 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="ExpressionReflectionDelegateFactory.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="532-532"];
m10_306 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", span="528-528"];
m10_254 [cluster="System.Collections.Generic.List<T>.Add(T)", file="ExpressionReflectionDelegateFactory.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m10_59 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="converter != null && converter.CanWrite", span="158-158"];
m10_207 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", span="375-375"];
m10_209 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="ExpressionReflectionDelegateFactory.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="377-377"];
m10_210 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="ExpressionReflectionDelegateFactory.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(null, writer.Path, ''Started serializing {0}''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="378-378"];
m10_211 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="ExpressionReflectionDelegateFactory.cs", label="contract.InvokeOnSerializing(value, Serializer._context)", span="380-380"];
m10_212 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", span="375-375"];
m10_124 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ExpressionReflectionDelegateFactory.cs", label="Expression readValueParameter = EnsureCastExpression(valueParameter, propertyInfo.PropertyType)", span="229-229"];
m10_200 [cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="ExpressionReflectionDelegateFactory.cs", label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0"];
m10_96 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", span="180-180"];
m10_429 [cluster="System.Runtime.Serialization.SerializationInfo.SerializationInfo(System.Type, System.Runtime.Serialization.IFormatterConverter)", file="ExpressionReflectionDelegateFactory.cs", label="Entry System.Runtime.Serialization.SerializationInfo.SerializationInfo(System.Type, System.Runtime.Serialization.IFormatterConverter)", span="0-0"];
m10_392 [cluster="System.Array.GetValue(params int[])", file="ExpressionReflectionDelegateFactory.cs", label="Entry System.Array.GetValue(params int[])", span="0-0"];
m10_168 [cluster="Newtonsoft.Json.Serialization.ITraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Serialization.ITraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", span="25-25"];
m10_105 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="isReference == null", span="216-216"];
m10_107 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="return isReference;", span="219-219"];
m10_100 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="isReference = property.IsReference", span="208-208"];
m10_101 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="isReference == null && containerProperty != null", span="210-210"];
m10_103 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="isReference == null && collectionContract != null", span="213-213"];
m10_106 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="isReference = contract.IsReference", span="217-217"];
m10_104 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="isReference = collectionContract.ItemIsReference", span="214-214"];
m10_108 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="202-202"];
m10_98 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="bool? isReference = null", span="204-204"];
m10_102 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="isReference = containerProperty.ItemIsReference", span="211-211"];
m10_97 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="202-202"];
m10_99 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="property != null", span="207-207"];
m10_177 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)", span="314-314"];
m10_180 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)", file="ExpressionReflectionDelegateFactory.cs", label="string reference = Serializer.GetReferenceResolver().GetReference(this, value)", span="318-318"];
m10_183 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)", file="ExpressionReflectionDelegateFactory.cs", label="throw JsonSerializationException.Create(null, writer.ContainerPath, ''Error writing object reference for '{0}'.''.FormatWith(CultureInfo.InvariantCulture, value.GetType()), ex);", span="324-324"];
m10_181 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)", file="ExpressionReflectionDelegateFactory.cs", label="return reference;", span="320-320"];
m10_182 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)", file="ExpressionReflectionDelegateFactory.cs", label=Exception, span="322-322"];
m10_184 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)", span="314-314"];
m10_31 [cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalWriter)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalWriter)", span="222-222"];
m10_54 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="365-365"];
m10_93 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="785-785"];
m10_135 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.ValueEquals(object, object)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.ValueEquals(object, object)", span="39-39"];
m10_40 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label=includeTypeDetails, span="126-126"];
m10_213 [cluster="Newtonsoft.Json.Serialization.JsonContract.InvokeOnSerializing(object, System.Runtime.Serialization.StreamingContext)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Serialization.JsonContract.InvokeOnSerializing(object, System.Runtime.Serialization.StreamingContext)", span="345-345"];
m10_294 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", span="517-517"];
m10_295 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="ExpressionReflectionDelegateFactory.cs", label="string reference = GetReference(writer, value)", span="519-519"];
m10_297 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="ExpressionReflectionDelegateFactory.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, ''Writing object reference Id '{0}' for {1}.''.FormatWith(CultureInfo.InvariantCulture, reference, type)), null)", span="522-522"];
m10_298 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="ExpressionReflectionDelegateFactory.cs", label="writer.WritePropertyName(JsonTypeReflector.IdPropertyName, false)", span="524-524"];
m10_299 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="ExpressionReflectionDelegateFactory.cs", label="writer.WriteValue(reference)", span="525-525"];
m10_296 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="ExpressionReflectionDelegateFactory.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="521-521"];
m10_300 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", span="517-517"];
m10_123 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ExpressionReflectionDelegateFactory.cs", label="ParameterExpression valueParameter = Expression.Parameter(valueType, ''value'')", span="228-228"];
m10_167 [cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", span="104-104"];
m10_35 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", span="112-112"];
m10_138 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="return true;", span="261-261"];
m10_139 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="ReferenceLoopHandling? referenceLoopHandling = null", span="263-263"];
m10_140 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="property != null", span="265-265"];
m10_141 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="referenceLoopHandling = property.ReferenceLoopHandling", span="266-266"];
m10_142 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="referenceLoopHandling == null && containerProperty != null", span="268-268"];
m10_32 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", file="ExpressionReflectionDelegateFactory.cs", label="value == null", span="114-114"];
m10_89 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="ExpressionReflectionDelegateFactory.cs", label="fieldExpression = EnsureCastExpression(fieldExpression, typeof(object))", span="174-174"];
m10_355 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="OnSerializing(writer, contract, values)", span="639-639"];
m10_356 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="_serializeStack.Add(values)", span="641-641"];
m10_357 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="bool hasWrittenMetadataObject = WriteStartArray(writer, values, contract, member, collectionContract, containerProperty)", span="643-643"];
m10_358 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="SerializeMultidimensionalArray(writer, values, contract, member, writer.Top, new int[0])", span="645-645"];
m10_360 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="writer.WriteEndObject()", span="648-648"];
m10_362 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="OnSerialized(writer, contract, values)", span="652-652"];
m10_359 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label=hasWrittenMetadataObject, span="647-647"];
m10_361 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="650-650"];
m10_363 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="637-637"];
m10_23 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", color=green, community=0, file="ExpressionReflectionDelegateFactory.cs", label="m.ReturnType != typeof(void)", prediction=270, span="84-84"];
m10_179 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="819-819"];
m10_564 [cluster="System.Predicate<T>.Invoke(T)", file="ExpressionReflectionDelegateFactory.cs", label="Entry System.Predicate<T>.Invoke(T)", span="0-0"];
m10_164 [cluster="System.Collections.Generic.List<T>.IndexOf(T)", file="ExpressionReflectionDelegateFactory.cs", label="Entry System.Collections.Generic.List<T>.IndexOf(T)", span="0-0"];
m10_286 [cluster="Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", span="44-44"];
m10_430 [cluster="System.Runtime.Serialization.FormatterConverter.FormatterConverter()", file="ExpressionReflectionDelegateFactory.cs", label="Entry System.Runtime.Serialization.FormatterConverter.FormatterConverter()", span="0-0"];
m10_260 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="407-407"];
m10_134 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", span="214-214"];
m10_432 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="OnSerializing(writer, contract, value)", span="787-787"];
m10_433 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="_serializeStack.Add(value)", span="788-788"];
m10_434 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="WriteObjectStart(writer, value, contract, member, collectionContract, containerProperty)", span="790-790"];
m10_435 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="int initialDepth = writer.Top", span="792-792"];
m10_437 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="index < contract.Properties.Count", span="794-794"];
m10_438 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="JsonProperty property = contract.Properties[index]", span="796-796"];
m10_442 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="!CalculatePropertyValues(writer, value, contract, member, property, out memberContract, out memberValue)", span="806-806"];
m10_443 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="property.WritePropertyName(writer)", span="809-809"];
m10_444 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="SerializeValue(writer, memberValue, memberContract, property, contract, member)", span="810-810"];
m10_446 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="IsErrorHandled(value, contract, property.PropertyName, null, writer.ContainerPath, ex)", span="814-814"];
m10_447 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="HandleError(writer, initialDepth)", span="815-815"];
m10_450 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="value.GetDynamicMemberNames()", span="822-822"];
m10_452 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="contract.TryGetMember(value, memberName, out memberValue)", span="825-825"];
m10_455 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="CheckForCircularReference(writer, memberValue, null, valueContract, contract, member)", span="834-834"];
m10_456 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="string resolvedPropertyName = (contract.PropertyNameResolver != null)\r\n                                ? contract.PropertyNameResolver(memberName)\r\n                                : memberName", span="836-838"];
m10_457 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="writer.WritePropertyName(resolvedPropertyName)", span="840-840"];
m10_458 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="SerializeValue(writer, memberValue, valueContract, null, contract, member)", span="841-841"];
m10_460 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="IsErrorHandled(value, contract, memberName, null, writer.ContainerPath, ex)", span="846-846"];
m10_461 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="HandleError(writer, initialDepth)", span="847-847"];
m10_463 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="writer.WriteEndObject()", span="854-854"];
m10_465 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="OnSerialized(writer, contract, value)", span="857-857"];
m10_436 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="int index = 0", span="794-794"];
m10_449 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="index++", span="794-794"];
m10_439 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="property.HasMemberAttribute", span="799-799"];
m10_440 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="object memberValue", span="803-803"];
m10_441 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="JsonContract memberContract", span="804-804"];
m10_445 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label=Exception, span="812-812"];
m10_448 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="throw;", span="817-817"];
m10_451 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="object memberValue", span="824-824"];
m10_453 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="JsonContract valueContract = GetContractSafe(memberValue)", span="829-829"];
m10_454 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="!ShouldWriteDynamicProperty(memberValue)", span="831-831"];
m10_459 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label=Exception, span="844-844"];
m10_462 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="throw;", span="849-849"];
m10_464 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="856-856"];
m10_466 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="785-785"];
m10_261 [cluster="System.Collections.Generic.List<T>.RemoveAt(int)", file="ExpressionReflectionDelegateFactory.cs", label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0"];
m10_470 [cluster="System.Func<T, TResult>.Invoke(T)", file="ExpressionReflectionDelegateFactory.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m10_86 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="ExpressionReflectionDelegateFactory.cs", label="fieldExpression = Expression.Field(null, fieldInfo)", span="165-165"];
m10_315 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="ShouldWriteReference(value, null, contract, collectionContract, containerProperty)", span="556-556"];
m10_316 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="WriteReference(writer, value)", span="558-558"];
m10_317 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="!CheckForCircularReference(writer, value, null, contract, collectionContract, containerProperty)", span="562-562"];
m10_319 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="_serializeStack.Add(value)", span="565-565"];
m10_321 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(null, writer.Path, ''Started serializing {0} with converter {1}.''.FormatWith(CultureInfo.InvariantCulture, value.GetType(), converter.GetType())), null)", span="568-568"];
m10_322 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="converter.WriteJson(writer, value, GetInternalSerializer())", span="570-570"];
m10_324 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(null, writer.Path, ''Finished serializing {0} with converter {1}.''.FormatWith(CultureInfo.InvariantCulture, value.GetType(), converter.GetType())), null)", span="573-573"];
m10_318 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="return;", span="563-563"];
m10_320 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="567-567"];
m10_323 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="572-572"];
m10_325 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="575-575"];
m10_326 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="554-554"];
m10_546 [cluster="System.IO.StringWriter.ToString()", file="ExpressionReflectionDelegateFactory.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m10_166 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", span="92-92"];
m10_25 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", color=green, community=0, file="ExpressionReflectionDelegateFactory.cs", label="callExpression = Expression.Block(callExpression, Expression.Constant(null))", prediction=271, span="87-87"];
m10_137 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="value == null || contract.ContractType == JsonContractType.Primitive || contract.ContractType == JsonContractType.String", span="260-260"];
m10_548 [cluster="System.Convert.ToString(object, System.IFormatProvider)", file="ExpressionReflectionDelegateFactory.cs", label="Entry System.Convert.ToString(object, System.IFormatProvider)", span="0-0"];
m10_37 [cluster="System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, params System.Linq.Expressions.Expression[])", file="ExpressionReflectionDelegateFactory.cs", label="Entry System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, params System.Linq.Expressions.Expression[])", span="0-0"];
m10_38 [cluster="System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, params System.Linq.Expressions.Expression[])", file="ExpressionReflectionDelegateFactory.cs", label="Entry System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, params System.Linq.Expressions.Expression[])", span="0-0"];
m10_41 [cluster="System.Linq.Expressions.LambdaExpression.Compile()", file="ExpressionReflectionDelegateFactory.cs", label="Entry System.Linq.Expressions.LambdaExpression.Compile()", span="0-0"];
m10_257 [cluster="Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", span="285-285"];
m10_327 [cluster="Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="44-44"];
m10_256 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", span="462-462"];
m10_262 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="ExpressionReflectionDelegateFactory.cs", label="!property.Ignored && property.Readable && ShouldSerialize(writer, property, value) && IsSpecified(writer, property, value)", span="464-464"];
m10_263 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="ExpressionReflectionDelegateFactory.cs", label="property.PropertyContract == null", span="466-466"];
m10_264 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="ExpressionReflectionDelegateFactory.cs", label="property.PropertyContract = Serializer._contractResolver.ResolveContract(property.PropertyType)", span="467-467"];
m10_265 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="ExpressionReflectionDelegateFactory.cs", label="memberValue = property.ValueProvider.GetValue(value)", span="469-469"];
m10_266 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="ExpressionReflectionDelegateFactory.cs", label="memberContract = (property.PropertyContract.IsSealed) ? property.PropertyContract : GetContractSafe(memberValue)", span="470-470"];
m10_267 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="ExpressionReflectionDelegateFactory.cs", label="ShouldWriteProperty(memberValue, property)", span="472-472"];
m10_268 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="ExpressionReflectionDelegateFactory.cs", label="ShouldWriteReference(memberValue, property, memberContract, contract, member)", span="474-474"];
m10_269 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="ExpressionReflectionDelegateFactory.cs", label="property.WritePropertyName(writer)", span="476-476"];
m10_270 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="ExpressionReflectionDelegateFactory.cs", label="WriteReference(writer, memberValue)", span="477-477"];
m10_272 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="ExpressionReflectionDelegateFactory.cs", label="!CheckForCircularReference(writer, memberValue, property, memberContract, contract, member)", span="481-481"];
m10_275 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="ExpressionReflectionDelegateFactory.cs", label="JsonObjectContract objectContract = contract as JsonObjectContract", span="486-486"];
m10_276 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="ExpressionReflectionDelegateFactory.cs", label="Required resolvedRequired = property._required ?? ((objectContract != null) ? objectContract.ItemRequired : null) ?? Required.Default", span="487-487"];
m10_278 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="ExpressionReflectionDelegateFactory.cs", label="throw JsonSerializationException.Create(null, writer.ContainerPath, ''Cannot write a null value for property '{0}'. Property requires a value.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName), null);", span="489-489"];
m10_280 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="ExpressionReflectionDelegateFactory.cs", label="memberContract = null", span="496-496"];
m10_274 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="ExpressionReflectionDelegateFactory.cs", label="memberValue == null", span="484-484"];
m10_271 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="ExpressionReflectionDelegateFactory.cs", label="return false;", span="478-478"];
m10_273 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="ExpressionReflectionDelegateFactory.cs", label="return false;", span="482-482"];
m10_279 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="ExpressionReflectionDelegateFactory.cs", label="return true;", span="492-492"];
m10_277 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="ExpressionReflectionDelegateFactory.cs", label="resolvedRequired == Required.Always", span="488-488"];
m10_281 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="ExpressionReflectionDelegateFactory.cs", label="memberValue = null", span="497-497"];
m10_282 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="ExpressionReflectionDelegateFactory.cs", label="return false;", span="498-498"];
m10_283 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", span="462-462"];
m10_565 [cluster="string.FormatWith(System.IFormatProvider, object, object, object)", file="ExpressionReflectionDelegateFactory.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object, object)", span="57-57"];
m10_30 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", span="104-104"];
m10_391 [cluster="System.Array.GetLength(int)", file="ExpressionReflectionDelegateFactory.cs", label="Entry System.Array.GetLength(int)", span="0-0"];
m10_208 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", span="383-383"];
m10_214 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="ExpressionReflectionDelegateFactory.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="385-385"];
m10_215 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="ExpressionReflectionDelegateFactory.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(null, writer.Path, ''Finished serializing {0}''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="386-386"];
m10_216 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="ExpressionReflectionDelegateFactory.cs", label="contract.InvokeOnSerialized(value, Serializer._context)", span="388-388"];
m10_217 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", span="383-383"];
m10_431 [cluster="System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ExpressionReflectionDelegateFactory.cs", label="Entry System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="0-0"];
m10_285 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", span="1037-1037"];
m10_566 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="ExpressionReflectionDelegateFactory.cs", label="property.GetIsSpecified == null", span="1039-1039"];
m10_568 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="ExpressionReflectionDelegateFactory.cs", label="bool isSpecified = property.GetIsSpecified(target)", span="1042-1042"];
m10_570 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="ExpressionReflectionDelegateFactory.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, ''IsSpecified result for property '{0}' on {1}: {2}''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName, property.DeclaringType, isSpecified)), null)", span="1045-1045"];
m10_567 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="ExpressionReflectionDelegateFactory.cs", label="return true;", span="1040-1040"];
m10_569 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="ExpressionReflectionDelegateFactory.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="1044-1044"];
m10_571 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="ExpressionReflectionDelegateFactory.cs", label="return isSpecified;", span="1047-1047"];
m10_572 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", span="1037-1037"];
m10_79 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="JsonContractType.Serializable", span="192-192"];
m10_545 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", span="421-421"];
m10_22 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", color=green, community=0, file="ExpressionReflectionDelegateFactory.cs", label="MethodInfo m = (MethodInfo)method", prediction=272, span="83-83"];
m10_56 [cluster="lambda expression", file="ExpressionReflectionDelegateFactory.cs", label="Entry lambda expression", span="102-102"];
m10_58 [cluster="lambda expression", file="ExpressionReflectionDelegateFactory.cs", label="Exit lambda expression", span="102-102"];
m10_60 [cluster="lambda expression", file="ExpressionReflectionDelegateFactory.cs", label="Entry lambda expression", span="121-121"];
m10_62 [cluster="lambda expression", file="ExpressionReflectionDelegateFactory.cs", label="Exit lambda expression", span="121-121"];
m10_80 [cluster="System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression, System.Reflection.MemberInfo)", file="ExpressionReflectionDelegateFactory.cs", label="Entry System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression, System.Reflection.MemberInfo)", span="0-0"];
m10_82 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="ExpressionReflectionDelegateFactory.cs", label="ValidationUtils.ArgumentNotNull(fieldInfo, ''fieldInfo'')", span="158-158"];
m10_57 [cluster="lambda expression", file="ExpressionReflectionDelegateFactory.cs", label="(T)Activator.CreateInstance(type)", span="102-102"];
m10_61 [cluster="lambda expression", file="ExpressionReflectionDelegateFactory.cs", label="(T)Activator.CreateInstance(type)", span="121-121"];
m10_81 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", span="156-156"];
m10_83 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="ExpressionReflectionDelegateFactory.cs", label="ParameterExpression sourceParameter = Expression.Parameter(typeof(T), ''source'')", span="160-160"];
m10_469 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", span="861-861"];
m10_471 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="ExpressionReflectionDelegateFactory.cs", label="Serializer._nullValueHandling == NullValueHandling.Ignore && memberValue == null", span="863-863"];
m10_473 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="ExpressionReflectionDelegateFactory.cs", label="HasFlag(Serializer._defaultValueHandling, DefaultValueHandling.Ignore) &&\r\n                (memberValue == null || MiscellaneousUtils.ValueEquals(memberValue, ReflectionUtils.GetDefaultValue(memberValue.GetType())))", span="866-867"];
m10_472 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="ExpressionReflectionDelegateFactory.cs", label="return false;", span="864-864"];
m10_474 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="ExpressionReflectionDelegateFactory.cs", label="return false;", span="868-868"];
m10_475 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="ExpressionReflectionDelegateFactory.cs", label="return true;", span="870-870"];
m10_476 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", span="861-861"];
m10_353 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="373-373"];
m10_364 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", span="655-655"];
m10_365 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="ExpressionReflectionDelegateFactory.cs", label="int dimension = indices.Length", span="657-657"];
m10_369 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="ExpressionReflectionDelegateFactory.cs", label="newIndices[i] = indices[i]", span="661-661"];
m10_371 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="ExpressionReflectionDelegateFactory.cs", label="writer.WriteStartArray()", span="664-664"];
m10_373 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="ExpressionReflectionDelegateFactory.cs", label="i < values.GetLength(dimension)", span="666-666"];
m10_375 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="ExpressionReflectionDelegateFactory.cs", label="bool isTopLevel = (newIndices.Length == values.Rank)", span="669-669"];
m10_377 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="ExpressionReflectionDelegateFactory.cs", label="object value = values.GetValue(newIndices)", span="673-673"];
m10_378 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="ExpressionReflectionDelegateFactory.cs", label="JsonContract valueContract = contract.FinalItemContract ?? GetContractSafe(value)", span="677-677"];
m10_379 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="ExpressionReflectionDelegateFactory.cs", label="ShouldWriteReference(value, null, valueContract, contract, member)", span="679-679"];
m10_380 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="ExpressionReflectionDelegateFactory.cs", label="WriteReference(writer, value)", span="681-681"];
m10_381 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="ExpressionReflectionDelegateFactory.cs", label="CheckForCircularReference(writer, value, null, valueContract, contract, member)", span="685-685"];
m10_382 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="ExpressionReflectionDelegateFactory.cs", label="SerializeValue(writer, value, valueContract, null, contract, member)", span="687-687"];
m10_384 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="ExpressionReflectionDelegateFactory.cs", label="IsErrorHandled(values, contract, i, null, writer.ContainerPath, ex)", span="693-693"];
m10_385 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="ExpressionReflectionDelegateFactory.cs", label="HandleError(writer, initialDepth + 1)", span="694-694"];
m10_387 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="ExpressionReflectionDelegateFactory.cs", label="SerializeMultidimensionalArray(writer, values, contract, member, initialDepth + 1, newIndices)", span="701-701"];
m10_389 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="ExpressionReflectionDelegateFactory.cs", label="writer.WriteEndArray()", span="705-705"];
m10_366 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="ExpressionReflectionDelegateFactory.cs", label="int[] newIndices = new int[dimension + 1]", span="658-658"];
m10_368 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="ExpressionReflectionDelegateFactory.cs", label="i < dimension", span="659-659"];
m10_374 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="ExpressionReflectionDelegateFactory.cs", label="newIndices[dimension] = i", span="668-668"];
m10_367 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="ExpressionReflectionDelegateFactory.cs", label="int i = 0", span="659-659"];
m10_370 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="ExpressionReflectionDelegateFactory.cs", label="i++", span="659-659"];
m10_372 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="ExpressionReflectionDelegateFactory.cs", label="int i = 0", span="666-666"];
m10_388 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="ExpressionReflectionDelegateFactory.cs", label="i++", span="666-666"];
m10_376 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="ExpressionReflectionDelegateFactory.cs", label=isTopLevel, span="671-671"];
m10_383 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="ExpressionReflectionDelegateFactory.cs", label=Exception, span="691-691"];
m10_386 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="ExpressionReflectionDelegateFactory.cs", label="throw;", span="696-696"];
m10_390 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", span="655-655"];
m10_133 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ExpressionReflectionDelegateFactory.cs", label="return compiled;", span="248-248"];
m10_308 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="ExpressionReflectionDelegateFactory.cs", label="return ((value & flag) == flag);", span="541-541"];
m10_309 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", span="539-539"];
m10_478 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="TypeNameHandling resolvedTypeNameHandling =\r\n                ((member != null) ? member.TypeNameHandling : null)\r\n                ?? ((containerProperty != null) ? containerProperty.ItemTypeNameHandling : null)\r\n                ?? ((containerContract != null) ? containerContract.ItemTypeNameHandling : null)\r\n                ?? Serializer._typeNameHandling", span="875-879"];
m10_479 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="HasFlag(resolvedTypeNameHandling, typeNameHandlingFlag)", span="881-881"];
m10_482 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="member != null", span="887-887"];
m10_483 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="contract.UnderlyingType != member.PropertyContract.CreatedType", span="889-889"];
m10_485 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="containerContract != null", span="892-892"];
m10_486 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="containerContract.ItemContract == null || contract.UnderlyingType != containerContract.ItemContract.CreatedType", span="894-894"];
m10_489 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="contract.UnderlyingType != _rootContract.CreatedType", span="899-899"];
m10_481 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="HasFlag(resolvedTypeNameHandling, TypeNameHandling.Auto)", span="885-885"];
m10_480 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="return true;", span="882-882"];
m10_491 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="return false;", span="904-904"];
m10_484 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="return true;", span="890-890"];
m10_488 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="_rootContract != null && _serializeStack.Count == _rootLevel", span="897-897"];
m10_487 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="return true;", span="895-895"];
m10_490 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="return true;", span="900-900"];
m10_492 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="873-873"];
m10_88 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="ExpressionReflectionDelegateFactory.cs", label="fieldExpression = Expression.Field(sourceExpression, fieldInfo)", span="171-171"];
m10_328 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="IWrappedCollection wrappedCollection = values as IWrappedCollection", span="581-581"];
m10_329 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="object underlyingList = wrappedCollection != null ? wrappedCollection.UnderlyingCollection : values", span="582-582"];
m10_330 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="OnSerializing(writer, contract, underlyingList)", span="584-584"];
m10_332 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="bool hasWrittenMetadataObject = WriteStartArray(writer, underlyingList, contract, member, collectionContract, containerProperty)", span="588-588"];
m10_333 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="writer.WriteStartArray()", span="590-590"];
m10_334 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="int initialDepth = writer.Top", span="592-592"];
m10_336 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label=values, span="596-596"];
m10_337 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="JsonContract valueContract = contract.FinalItemContract ?? GetContractSafe(value)", span="600-600"];
m10_338 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="ShouldWriteReference(value, null, valueContract, contract, member)", span="602-602"];
m10_339 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="WriteReference(writer, value)", span="604-604"];
m10_340 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="CheckForCircularReference(writer, value, null, valueContract, contract, member)", span="608-608"];
m10_341 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="SerializeValue(writer, value, valueContract, null, contract, member)", span="610-610"];
m10_343 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="IsErrorHandled(underlyingList, contract, index, null, writer.ContainerPath, ex)", span="616-616"];
m10_344 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="HandleError(writer, initialDepth)", span="617-617"];
m10_346 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="writer.WriteEndArray()", span="627-627"];
m10_348 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="writer.WriteEndObject()", span="630-630"];
m10_350 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="OnSerialized(writer, contract, underlyingList)", span="634-634"];
m10_331 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="_serializeStack.Add(underlyingList)", span="586-586"];
m10_347 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label=hasWrittenMetadataObject, span="629-629"];
m10_335 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="int index = 0", span="594-594"];
m10_342 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label=Exception, span="614-614"];
m10_345 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="throw;", span="619-619"];
m10_349 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="632-632"];
m10_351 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="579-579"];
m10_34 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", file="ExpressionReflectionDelegateFactory.cs", label="return Serializer._contractResolver.ResolveContract(value.GetType());", span="117-117"];
m10_85 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="ExpressionReflectionDelegateFactory.cs", label="fieldInfo.IsStatic", span="163-163"];
m10_19 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="ExpressionReflectionDelegateFactory.cs", label="Expression readParameter = EnsureCastExpression(targetParameterExpression, method.DeclaringType)", span="76-76"];
m10_259 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", span="970-970"];
m10_523 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ExpressionReflectionDelegateFactory.cs", label="string propertyName", span="972-972"];
m10_524 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ExpressionReflectionDelegateFactory.cs", label="contract.ContractType == JsonContractType.Primitive", span="974-974"];
m10_525 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ExpressionReflectionDelegateFactory.cs", label="JsonPrimitiveContract primitiveContract = (JsonPrimitiveContract)contract", span="976-976"];
m10_529 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ExpressionReflectionDelegateFactory.cs", label="DateTimeUtils.WriteDateTimeString(sw, (DateTime)name, writer.DateFormatHandling, writer.DateFormatString, writer.Culture)", span="981-981"];
m10_534 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ExpressionReflectionDelegateFactory.cs", label="DateTimeUtils.WriteDateTimeOffsetString(sw, (DateTimeOffset)name, writer.DateFormatHandling, writer.DateFormatString, writer.Culture)", span="989-989"];
m10_537 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ExpressionReflectionDelegateFactory.cs", label="return Convert.ToString(name, CultureInfo.InvariantCulture);", span="996-996"];
m10_538 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ExpressionReflectionDelegateFactory.cs", label="TryConvertToString(name, name.GetType(), out propertyName)", span="999-999"];
m10_542 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ExpressionReflectionDelegateFactory.cs", label="return name.ToString();", span="1007-1007"];
m10_526 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ExpressionReflectionDelegateFactory.cs", label="primitiveContract.TypeCode == PrimitiveTypeCode.DateTime || primitiveContract.TypeCode == PrimitiveTypeCode.DateTimeNullable", span="977-977"];
m10_531 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ExpressionReflectionDelegateFactory.cs", label="primitiveContract.TypeCode == PrimitiveTypeCode.DateTimeOffset || primitiveContract.TypeCode == PrimitiveTypeCode.DateTimeOffsetNullable", span="985-985"];
m10_527 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ExpressionReflectionDelegateFactory.cs", label="escape = false", span="979-979"];
m10_528 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ExpressionReflectionDelegateFactory.cs", label="StringWriter sw = new StringWriter(CultureInfo.InvariantCulture)", span="980-980"];
m10_530 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ExpressionReflectionDelegateFactory.cs", label="return sw.ToString();", span="982-982"];
m10_532 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ExpressionReflectionDelegateFactory.cs", label="escape = false", span="987-987"];
m10_536 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ExpressionReflectionDelegateFactory.cs", label="escape = true", span="995-995"];
m10_533 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ExpressionReflectionDelegateFactory.cs", label="StringWriter sw = new StringWriter(CultureInfo.InvariantCulture)", span="988-988"];
m10_535 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ExpressionReflectionDelegateFactory.cs", label="return sw.ToString();", span="990-990"];
m10_539 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ExpressionReflectionDelegateFactory.cs", label="escape = true", span="1001-1001"];
m10_541 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ExpressionReflectionDelegateFactory.cs", label="escape = true", span="1006-1006"];
m10_540 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ExpressionReflectionDelegateFactory.cs", label="return propertyName;", span="1002-1002"];
m10_543 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", span="970-970"];
m10_198 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", span="622-622"];
m10_544 [cluster="System.IO.StringWriter.StringWriter(System.IFormatProvider)", file="ExpressionReflectionDelegateFactory.cs", label="Entry System.IO.StringWriter.StringWriter(System.IFormatProvider)", span="0-0"];
m10_84 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="ExpressionReflectionDelegateFactory.cs", label="Expression fieldExpression", span="162-162"];
m10_477 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", span="992-992"];
m10_186 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", span="328-328"];
m10_187 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="ExpressionReflectionDelegateFactory.cs", label="TypeConverter converter = ConvertUtils.GetConverter(type)", span="331-331"];
m10_190 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="ExpressionReflectionDelegateFactory.cs", label="s = converter.ConvertToInvariantString(value)", span="340-340"];
m10_192 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="ExpressionReflectionDelegateFactory.cs", label="value is Type", span="354-354"];
m10_193 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="ExpressionReflectionDelegateFactory.cs", label="s = ((Type)value).AssemblyQualifiedName", span="356-356"];
m10_188 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="ExpressionReflectionDelegateFactory.cs", label="converter != null\r\n                && !(converter is ComponentConverter)\r\n                && converter.GetType() != typeof(TypeConverter)", span="334-336"];
m10_189 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="ExpressionReflectionDelegateFactory.cs", label="converter.CanConvertTo(typeof(string))", span="338-338"];
m10_191 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="ExpressionReflectionDelegateFactory.cs", label="return true;", span="341-341"];
m10_195 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="ExpressionReflectionDelegateFactory.cs", label="s = null", span="360-360"];
m10_194 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="ExpressionReflectionDelegateFactory.cs", label="return true;", span="357-357"];
m10_196 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="ExpressionReflectionDelegateFactory.cs", label="return false;", span="361-361"];
m10_197 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", span="328-328"];
m10_468 [cluster="Newtonsoft.Json.Serialization.JsonDynamicContract.TryGetMember(System.Dynamic.IDynamicMetaObjectProvider, string, out object)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Serialization.JsonDynamicContract.TryGetMember(System.Dynamic.IDynamicMetaObjectProvider, string, out object)", span="85-85"];
m10_17 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="ExpressionReflectionDelegateFactory.cs", label="method.IsStatic", span="70-70"];
m10_21 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="ExpressionReflectionDelegateFactory.cs", label="method is MethodInfo", span="81-81"];
m10_169 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="ExpressionReflectionDelegateFactory.cs", label="string reference = GetReference(writer, value)", span="303-303"];
m10_171 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="ExpressionReflectionDelegateFactory.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(null, writer.Path, ''Writing object reference to Id '{0}' for {1}.''.FormatWith(CultureInfo.InvariantCulture, reference, value.GetType())), null)", span="306-306"];
m10_172 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="ExpressionReflectionDelegateFactory.cs", label="writer.WriteStartObject()", span="308-308"];
m10_173 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="ExpressionReflectionDelegateFactory.cs", label="writer.WritePropertyName(JsonTypeReflector.RefPropertyName, false)", span="309-309"];
m10_174 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="ExpressionReflectionDelegateFactory.cs", label="writer.WriteValue(reference)", span="310-310"];
m10_175 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="ExpressionReflectionDelegateFactory.cs", label="writer.WriteEndObject()", span="311-311"];
m10_170 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="ExpressionReflectionDelegateFactory.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="305-305"];
m10_176 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", span="301-301"];
m10_255 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="501-501"];
m10_287 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="writer.WriteStartObject()", span="503-503"];
m10_288 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="bool isReference = ResolveIsReference(contract, member, collectionContract, containerProperty) ?? HasFlag(Serializer._preserveReferencesHandling, PreserveReferencesHandling.Objects)", span="505-505"];
m10_289 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="isReference && (member == null || member.Writable)", span="507-507"];
m10_290 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="WriteReferenceIdProperty(writer, contract.UnderlyingType, value)", span="509-509"];
m10_291 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="ShouldWriteType(TypeNameHandling.Objects, contract, member, collectionContract, containerProperty)", span="511-511"];
m10_292 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="WriteTypeProperty(writer, contract.UnderlyingType)", span="513-513"];
m10_293 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="501-501"];
m10_312 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", span="549-549"];
m10_313 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", file="ExpressionReflectionDelegateFactory.cs", label="return ((value & flag) == flag);", span="551-551"];
m10_314 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", span="549-549"];
m10_122 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ExpressionReflectionDelegateFactory.cs", label="ParameterExpression instanceParameter = Expression.Parameter(instanceType, ''instance'')", span="226-226"];
m10_310 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", file="ExpressionReflectionDelegateFactory.cs", label="return ((value & flag) == flag);", span="546-546"];
m10_311 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", span="544-544"];
m10_0 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", span="41-41"];
m10_1 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="ExpressionReflectionDelegateFactory.cs", label="ValidationUtils.ArgumentNotNull(method, ''method'')", span="43-43"];
m10_26 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="ExpressionReflectionDelegateFactory.cs", label="LambdaExpression lambdaExpression = Expression.Lambda(typeof(MethodCall<T, object>), callExpression, targetParameterExpression, argsParameterExpression)", span="90-90"];
m10_27 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="ExpressionReflectionDelegateFactory.cs", label="MethodCall<T, object> compiled = (MethodCall<T, object>)lambdaExpression.Compile()", span="92-92"];
m10_28 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="ExpressionReflectionDelegateFactory.cs", label="return compiled;", span="93-93"];
m10_29 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", span="41-41"];
m10_92 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", span="156-156"];
m10_493 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="IWrappedDictionary wrappedDictionary = values as IWrappedDictionary", span="909-909"];
m10_494 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="object underlyingDictionary = wrappedDictionary != null ? wrappedDictionary.UnderlyingDictionary : values", span="910-910"];
m10_495 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="OnSerializing(writer, contract, underlyingDictionary)", span="912-912"];
m10_497 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="WriteObjectStart(writer, underlyingDictionary, contract, member, collectionContract, containerProperty)", span="915-915"];
m10_498 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="contract.ItemContract == null", span="917-917"];
m10_499 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="contract.ItemContract = Serializer._contractResolver.ResolveContract(contract.DictionaryValueType ?? typeof(object))", span="918-918"];
m10_500 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="contract.KeyContract == null", span="920-920"];
m10_501 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="contract.KeyContract = Serializer._contractResolver.ResolveContract(contract.DictionaryKeyType ?? typeof(object))", span="921-921"];
m10_502 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="int initialDepth = writer.Top", span="923-923"];
m10_503 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label=values, span="925-925"];
m10_505 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="string propertyName = GetPropertyName(writer, entry.Key, contract.KeyContract, out escape)", span="928-928"];
m10_506 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="propertyName = (contract.DictionaryKeyResolver != null)\r\n                    ? contract.DictionaryKeyResolver(propertyName)\r\n                    : propertyName", span="930-932"];
m10_508 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="JsonContract valueContract = contract.FinalItemContract ?? GetContractSafe(value)", span="937-937"];
m10_509 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="ShouldWriteReference(value, null, valueContract, contract, member)", span="939-939"];
m10_510 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="writer.WritePropertyName(propertyName, escape)", span="941-941"];
m10_511 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="WriteReference(writer, value)", span="942-942"];
m10_512 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="!CheckForCircularReference(writer, value, null, valueContract, contract, member)", span="946-946"];
m10_513 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="writer.WritePropertyName(propertyName, escape)", span="949-949"];
m10_514 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="SerializeValue(writer, value, valueContract, null, contract, member)", span="951-951"];
m10_516 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="IsErrorHandled(underlyingDictionary, contract, propertyName, null, writer.ContainerPath, ex)", span="956-956"];
m10_517 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="HandleError(writer, initialDepth)", span="957-957"];
m10_519 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="writer.WriteEndObject()", span="963-963"];
m10_521 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="OnSerialized(writer, contract, underlyingDictionary)", span="967-967"];
m10_496 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="_serializeStack.Add(underlyingDictionary)", span="913-913"];
m10_504 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="bool escape", span="927-927"];
m10_507 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="object value = entry.Value", span="936-936"];
m10_515 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label=Exception, span="954-954"];
m10_518 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="throw;", span="959-959"];
m10_520 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="965-965"];
m10_522 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="907-907"];
m10_218 [cluster="Newtonsoft.Json.Serialization.JsonContract.InvokeOnSerialized(object, System.Runtime.Serialization.StreamingContext)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Serialization.JsonContract.InvokeOnSerialized(object, System.Runtime.Serialization.StreamingContext)", span="356-356"];
m10_91 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="ExpressionReflectionDelegateFactory.cs", label="return compiled;", span="177-177"];
m10_354 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="381-381"];
m10_143 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="referenceLoopHandling = containerProperty.ItemReferenceLoopHandling", span="269-269"];
m10_136 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="258-258"];
m10_132 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ExpressionReflectionDelegateFactory.cs", label="Action<T, object> compiled = (Action<T, object>)lambdaExpression.Compile()", span="247-247"];
m10_16 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", span="60-60"];
m10_18 [cluster="Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", span="43-43"];
m10_2 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", span="60-60"];
m10_5 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="ExpressionReflectionDelegateFactory.cs", label="_rootContract = (objectType != null) ? Serializer._contractResolver.ResolveContract(objectType) : null", span="65-65"];
m10_15 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="ExpressionReflectionDelegateFactory.cs", label="throw;", span="93-93"];
m10_11 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="ExpressionReflectionDelegateFactory.cs", label=Exception, span="81-81"];
m10_6 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="ExpressionReflectionDelegateFactory.cs", label="_rootLevel = _serializeStack.Count + 1", span="66-66"];
m10_3 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="ExpressionReflectionDelegateFactory.cs", label="jsonWriter == null", span="62-62"];
m10_4 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="ExpressionReflectionDelegateFactory.cs", label="throw new ArgumentNullException(''jsonWriter'');", span="63-63"];
m10_10 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="ExpressionReflectionDelegateFactory.cs", label="SerializeValue(jsonWriter, value, contract, null, null, null)", span="78-78"];
m10_14 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="ExpressionReflectionDelegateFactory.cs", label="ClearErrorContext()", span="92-92"];
m10_9 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="ExpressionReflectionDelegateFactory.cs", label="WriteReference(jsonWriter, value)", span="74-74"];
m10_8 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="ExpressionReflectionDelegateFactory.cs", label="ShouldWriteReference(value, null, contract, null, null)", span="72-72"];
m10_7 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="ExpressionReflectionDelegateFactory.cs", label="JsonContract contract = GetContractSafe(value)", span="68-68"];
m10_12 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="ExpressionReflectionDelegateFactory.cs", label="IsErrorHandled(null, contract, null, null, jsonWriter.Path, ex)", span="83-83"];
m10_13 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="ExpressionReflectionDelegateFactory.cs", label="HandleError(jsonWriter, 0)", span="85-85"];
m10_284 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", span="1024-1024"];
m10_557 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="ExpressionReflectionDelegateFactory.cs", label="property.ShouldSerialize == null", span="1026-1026"];
m10_559 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="ExpressionReflectionDelegateFactory.cs", label="bool shouldSerialize = property.ShouldSerialize(target)", span="1029-1029"];
m10_561 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="ExpressionReflectionDelegateFactory.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, ''ShouldSerialize result for property '{0}' on {1}: {2}''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName, property.DeclaringType, shouldSerialize)), null)", span="1032-1032"];
m10_558 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="ExpressionReflectionDelegateFactory.cs", label="return true;", span="1027-1027"];
m10_560 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="ExpressionReflectionDelegateFactory.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="1031-1031"];
m10_562 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="ExpressionReflectionDelegateFactory.cs", label="return shouldSerialize;", span="1034-1034"];
m10_563 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", span="1024-1024"];
m10_145 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory", span=""];
m10_146 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="System.Type", span=""];
m10_148 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="property != null", span="277-277"];
m10_149 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="message += '' for property '{0}'''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName)", span="278-278"];
m10_150 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="message += '' with type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, value.GetType())", span="279-279"];
m10_153 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="throw JsonSerializationException.Create(null, writer.ContainerPath, message, null);", span="284-284"];
m10_156 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, message + ''. Skipping serializing self referenced value.''), null)", span="287-287"];
m10_160 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, message + ''. Serializing self referenced value.''), null)", span="292-292"];
m10_151 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="referenceLoopHandling.GetValueOrDefault(Serializer._referenceLoopHandling)", span="281-281"];
m10_147 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="string message = ''Self referencing loop detected''", span="276-276"];
m10_162 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="return true;", span="298-298"];
m10_152 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="ReferenceLoopHandling.Error", span="283-283"];
m10_154 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="ReferenceLoopHandling.Ignore", span="285-285"];
m10_158 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="ReferenceLoopHandling.Serialize", span="290-290"];
m10_155 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="286-286"];
m10_157 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="return false;", span="289-289"];
m10_159 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="291-291"];
m10_161 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="return true;", span="294-294"];
m10_163 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="258-258"];
m10_90 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", span="364-364"];
m10_547 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffsetString(System.IO.TextWriter, System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffsetString(System.IO.TextWriter, System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", span="553-553"];
m10_201 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="ExpressionReflectionDelegateFactory.cs", label="OnSerializing(writer, contract, value)", span="366-366"];
m10_203 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="ExpressionReflectionDelegateFactory.cs", label="TryConvertToString(value, contract.UnderlyingType, out s)", span="369-369"];
m10_204 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="ExpressionReflectionDelegateFactory.cs", label="writer.WriteValue(s)", span="370-370"];
m10_205 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="ExpressionReflectionDelegateFactory.cs", label="OnSerialized(writer, contract, value)", span="372-372"];
m10_202 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="ExpressionReflectionDelegateFactory.cs", label="string s", span="368-368"];
m10_206 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", span="364-364"];
m10_467 [cluster="System.Dynamic.IDynamicMetaObjectProvider.GetDynamicMemberNames()", file="ExpressionReflectionDelegateFactory.cs", label="Entry System.Dynamic.IDynamicMetaObjectProvider.GetDynamicMemberNames()", span="139-139"];
m10_573 [file="ExpressionReflectionDelegateFactory.cs", label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", span=""];
m11_10 [cluster="Newtonsoft.Json.Linq.JArray.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JArray.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="95-95"];
m11_11 [cluster="Newtonsoft.Json.Linq.JArray.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JArray.cs", label="JArray t = node as JArray", span="97-97"];
m11_12 [cluster="Newtonsoft.Json.Linq.JArray.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JArray.cs", label="return (t != null && ContentsEqual(t));", span="98-98"];
m11_13 [cluster="Newtonsoft.Json.Linq.JArray.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JArray.cs", label="Exit Newtonsoft.Json.Linq.JArray.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="95-95"];
m11_71 [cluster="Newtonsoft.Json.Linq.JContainer.IndexOfItem(Newtonsoft.Json.Linq.JToken)", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JContainer.IndexOfItem(Newtonsoft.Json.Linq.JToken)", span="326-326"];
m11_79 [cluster="Newtonsoft.Json.Linq.JContainer.RemoveItemAt(int)", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JContainer.RemoveItemAt(int)", span="368-368"];
m11_72 [cluster="Newtonsoft.Json.Linq.JArray.Insert(int, Newtonsoft.Json.Linq.JToken)", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JArray.Insert(int, Newtonsoft.Json.Linq.JToken)", span="256-256"];
m11_73 [cluster="Newtonsoft.Json.Linq.JArray.Insert(int, Newtonsoft.Json.Linq.JToken)", file="JArray.cs", label="InsertItem(index, item, false)", span="258-258"];
m11_74 [cluster="Newtonsoft.Json.Linq.JArray.Insert(int, Newtonsoft.Json.Linq.JToken)", file="JArray.cs", label="Exit Newtonsoft.Json.Linq.JArray.Insert(int, Newtonsoft.Json.Linq.JToken)", span="256-256"];
m11_76 [cluster="Newtonsoft.Json.Linq.JArray.RemoveAt(int)", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JArray.RemoveAt(int)", span="268-268"];
m11_77 [cluster="Newtonsoft.Json.Linq.JArray.RemoveAt(int)", file="JArray.cs", label="RemoveItemAt(index)", span="270-270"];
m11_78 [cluster="Newtonsoft.Json.Linq.JArray.RemoveAt(int)", file="JArray.cs", label="Exit Newtonsoft.Json.Linq.JArray.RemoveAt(int)", span="268-268"];
m11_31 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JArray.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="332-332"];
m11_43 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JArray.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73"];
m11_33 [cluster="string.FormatWith(System.IFormatProvider, object)", file="JArray.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m11_57 [cluster="Newtonsoft.Json.Linq.JArray.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JArray.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="186-186"];
m11_58 [cluster="Newtonsoft.Json.Linq.JArray.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JArray.cs", label="writer.WriteStartArray()", span="188-188"];
m11_61 [cluster="Newtonsoft.Json.Linq.JArray.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JArray.cs", label="_values[i].WriteTo(writer, converters)", span="192-192"];
m11_63 [cluster="Newtonsoft.Json.Linq.JArray.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JArray.cs", label="writer.WriteEndArray()", span="195-195"];
m11_59 [cluster="Newtonsoft.Json.Linq.JArray.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JArray.cs", label="int i = 0", span="190-190"];
m11_60 [cluster="Newtonsoft.Json.Linq.JArray.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JArray.cs", label="i < _values.Count", span="190-190"];
m11_62 [cluster="Newtonsoft.Json.Linq.JArray.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JArray.cs", label="i++", span="190-190"];
m11_64 [cluster="Newtonsoft.Json.Linq.JArray.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JArray.cs", label="Exit Newtonsoft.Json.Linq.JArray.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="186-186"];
m11_9 [cluster="Newtonsoft.Json.Linq.JContainer.Add(object)", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Add(object)", span="549-549"];
m11_2 [cluster="Newtonsoft.Json.Linq.JArray.JArray(Newtonsoft.Json.Linq.JArray)", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray(Newtonsoft.Json.Linq.JArray)", span="72-72"];
m11_3 [cluster="Newtonsoft.Json.Linq.JArray.JArray(Newtonsoft.Json.Linq.JArray)", file="JArray.cs", label="Exit Newtonsoft.Json.Linq.JArray.JArray(Newtonsoft.Json.Linq.JArray)", span="72-72"];
m11_83 [cluster="Newtonsoft.Json.Linq.JArray.Clear()", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JArray.Clear()", span="291-291"];
m11_84 [cluster="Newtonsoft.Json.Linq.JArray.Clear()", file="JArray.cs", label="ClearItems()", span="293-293"];
m11_85 [cluster="Newtonsoft.Json.Linq.JArray.Clear()", file="JArray.cs", label="Exit Newtonsoft.Json.Linq.JArray.Clear()", span="291-291"];
m11_34 [cluster="Newtonsoft.Json.Linq.JToken.SetLineInfo(Newtonsoft.Json.IJsonLineInfo)", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JToken.SetLineInfo(Newtonsoft.Json.IJsonLineInfo)", span="1789-1789"];
m11_56 [cluster="System.ArgumentException.ArgumentException(string)", file="JArray.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m11_36 [cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JArray.Parse(string)", span="143-143"];
m11_37 [cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", file="JArray.cs", label="JsonReader reader = new JsonTextReader(new StringReader(json))", span="145-145"];
m11_38 [cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", file="JArray.cs", label="JArray a = Load(reader)", span="147-147"];
m11_39 [cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", file="JArray.cs", label="reader.Read() && reader.TokenType != JsonToken.Comment", span="149-149"];
m11_40 [cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", file="JArray.cs", label="throw JsonReaderException.Create(reader, ''Additional text found in JSON string after parsing content.'');", span="150-150"];
m11_41 [cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", file="JArray.cs", label="return a;", span="152-152"];
m11_42 [cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", file="JArray.cs", label="Exit Newtonsoft.Json.Linq.JArray.Parse(string)", span="143-143"];
m11_67 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JArray.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="379-379"];
m11_49 [cluster="Newtonsoft.Json.Linq.JArray.FromObject(object, Newtonsoft.Json.JsonSerializer)", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JArray.FromObject(object, Newtonsoft.Json.JsonSerializer)", span="171-171"];
m11_50 [cluster="Newtonsoft.Json.Linq.JArray.FromObject(object, Newtonsoft.Json.JsonSerializer)", file="JArray.cs", label="JToken token = FromObjectInternal(o, jsonSerializer)", span="173-173"];
m11_51 [cluster="Newtonsoft.Json.Linq.JArray.FromObject(object, Newtonsoft.Json.JsonSerializer)", file="JArray.cs", label="token.Type != JTokenType.Array", span="175-175"];
m11_52 [cluster="Newtonsoft.Json.Linq.JArray.FromObject(object, Newtonsoft.Json.JsonSerializer)", file="JArray.cs", label="throw new ArgumentException(''Object serialized to {0}. JArray instance expected.''.FormatWith(CultureInfo.InvariantCulture, token.Type));", span="176-176"];
m11_53 [cluster="Newtonsoft.Json.Linq.JArray.FromObject(object, Newtonsoft.Json.JsonSerializer)", file="JArray.cs", label="return (JArray)token;", span="178-178"];
m11_54 [cluster="Newtonsoft.Json.Linq.JArray.FromObject(object, Newtonsoft.Json.JsonSerializer)", file="JArray.cs", label="Exit Newtonsoft.Json.Linq.JArray.FromObject(object, Newtonsoft.Json.JsonSerializer)", span="171-171"];
m11_91 [cluster="Newtonsoft.Json.Linq.JArray.System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.CopyTo(Newtonsoft.Json.Linq.JToken[], int)", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JArray.System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.CopyTo(Newtonsoft.Json.Linq.JToken[], int)", span="308-308"];
m11_92 [cluster="Newtonsoft.Json.Linq.JArray.System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.CopyTo(Newtonsoft.Json.Linq.JToken[], int)", file="JArray.cs", label="CopyItemsTo(array, arrayIndex)", span="310-310"];
m11_93 [cluster="Newtonsoft.Json.Linq.JArray.System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.CopyTo(Newtonsoft.Json.Linq.JToken[], int)", file="JArray.cs", label="Exit Newtonsoft.Json.Linq.JArray.System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.CopyTo(Newtonsoft.Json.Linq.JToken[], int)", span="308-308"];
m11_99 [cluster="Newtonsoft.Json.Linq.JArray.GetDeepHashCode()", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JArray.GetDeepHashCode()", span="333-333"];
m11_100 [cluster="Newtonsoft.Json.Linq.JArray.GetDeepHashCode()", file="JArray.cs", label="return ContentsHashCode();", span="335-335"];
m11_101 [cluster="Newtonsoft.Json.Linq.JArray.GetDeepHashCode()", file="JArray.cs", label="Exit Newtonsoft.Json.Linq.JArray.GetDeepHashCode()", span="333-333"];
m11_55 [cluster="Newtonsoft.Json.Linq.JToken.FromObjectInternal(object, Newtonsoft.Json.JsonSerializer)", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JToken.FromObjectInternal(object, Newtonsoft.Json.JsonSerializer)", span="1552-1552"];
m11_102 [cluster="Newtonsoft.Json.Linq.JContainer.ContentsHashCode()", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JContainer.ContentsHashCode()", span="743-743"];
m11_15 [cluster="Newtonsoft.Json.Linq.JArray.CloneToken()", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JArray.CloneToken()", span="101-101"];
m11_16 [cluster="Newtonsoft.Json.Linq.JArray.CloneToken()", file="JArray.cs", label="return new JArray(this);", span="103-103"];
m11_17 [cluster="Newtonsoft.Json.Linq.JArray.CloneToken()", file="JArray.cs", label="Exit Newtonsoft.Json.Linq.JArray.CloneToken()", span="101-101"];
m11_4 [cluster="Newtonsoft.Json.Linq.JArray.JArray(params object[])", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray(params object[])", span="81-81"];
m11_5 [cluster="Newtonsoft.Json.Linq.JArray.JArray(params object[])", file="JArray.cs", label="Exit Newtonsoft.Json.Linq.JArray.JArray(params object[])", span="81-81"];
m11_65 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JArray.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="371-371"];
m11_98 [cluster="Newtonsoft.Json.Linq.JContainer.RemoveItem(Newtonsoft.Json.Linq.JToken)", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JContainer.RemoveItem(Newtonsoft.Json.Linq.JToken)", span="402-402"];
m11_32 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="JArray.cs", label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="108-108"];
m11_45 [cluster="Newtonsoft.Json.Linq.JArray.FromObject(object)", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JArray.FromObject(object)", span="160-160"];
m11_46 [cluster="Newtonsoft.Json.Linq.JArray.FromObject(object)", file="JArray.cs", label="return FromObject(o, JsonSerializer.CreateDefault());", span="162-162"];
m11_47 [cluster="Newtonsoft.Json.Linq.JArray.FromObject(object)", file="JArray.cs", label="Exit Newtonsoft.Json.Linq.JArray.FromObject(object)", span="160-160"];
m11_18 [cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", span="111-111"];
m11_19 [cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", file="JArray.cs", label="reader.TokenType == JsonToken.None", span="113-113"];
m11_20 [cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", file="JArray.cs", label="!reader.Read()", span="115-115"];
m11_21 [cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", file="JArray.cs", label="throw JsonReaderException.Create(reader, ''Error reading JArray from JsonReader.'');", span="116-116"];
m11_22 [cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", file="JArray.cs", label="reader.TokenType == JsonToken.Comment", span="119-119"];
m11_23 [cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", file="JArray.cs", label="reader.Read()", span="121-121"];
m11_24 [cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", file="JArray.cs", label="reader.TokenType != JsonToken.StartArray", span="124-124"];
m11_25 [cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", file="JArray.cs", label="throw JsonReaderException.Create(reader, ''Error reading JArray from JsonReader. Current JsonReader item is not an array: {0}''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="125-125"];
m11_27 [cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", file="JArray.cs", label="a.SetLineInfo(reader as IJsonLineInfo)", span="128-128"];
m11_28 [cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", file="JArray.cs", label="a.ReadTokenFrom(reader)", span="130-130"];
m11_26 [cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", file="JArray.cs", label="JArray a = new JArray()", span="127-127"];
m11_29 [cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", file="JArray.cs", label="return a;", span="132-132"];
m11_30 [cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", file="JArray.cs", label="Exit Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", span="111-111"];
m11_48 [cluster="Newtonsoft.Json.JsonSerializer.CreateDefault()", file="JArray.cs", label="Entry Newtonsoft.Json.JsonSerializer.CreateDefault()", span="484-484"];
m11_66 [cluster="Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="385-385"];
m11_90 [cluster="Newtonsoft.Json.Linq.JContainer.ContainsItem(Newtonsoft.Json.Linq.JToken)", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JContainer.ContainsItem(Newtonsoft.Json.Linq.JToken)", span="498-498"];
m11_86 [cluster="Newtonsoft.Json.Linq.JContainer.ClearItems()", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JContainer.ClearItems()", span="466-466"];
m11_87 [cluster="Newtonsoft.Json.Linq.JArray.Contains(Newtonsoft.Json.Linq.JToken)", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JArray.Contains(Newtonsoft.Json.Linq.JToken)", span="303-303"];
m11_88 [cluster="Newtonsoft.Json.Linq.JArray.Contains(Newtonsoft.Json.Linq.JToken)", file="JArray.cs", label="return ContainsItem(item);", span="305-305"];
m11_89 [cluster="Newtonsoft.Json.Linq.JArray.Contains(Newtonsoft.Json.Linq.JToken)", file="JArray.cs", label="Exit Newtonsoft.Json.Linq.JArray.Contains(Newtonsoft.Json.Linq.JToken)", span="303-303"];
m11_6 [cluster="Newtonsoft.Json.Linq.JArray.JArray(object)", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray(object)", span="90-90"];
m11_7 [cluster="Newtonsoft.Json.Linq.JArray.JArray(object)", file="JArray.cs", label="Add(content)", span="92-92"];
m11_8 [cluster="Newtonsoft.Json.Linq.JArray.JArray(object)", file="JArray.cs", label="Exit Newtonsoft.Json.Linq.JArray.JArray(object)", span="90-90"];
m11_68 [cluster="Newtonsoft.Json.Linq.JArray.IndexOf(Newtonsoft.Json.Linq.JToken)", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JArray.IndexOf(Newtonsoft.Json.Linq.JToken)", span="243-243"];
m11_69 [cluster="Newtonsoft.Json.Linq.JArray.IndexOf(Newtonsoft.Json.Linq.JToken)", file="JArray.cs", label="return IndexOfItem(item);", span="245-245"];
m11_70 [cluster="Newtonsoft.Json.Linq.JArray.IndexOf(Newtonsoft.Json.Linq.JToken)", file="JArray.cs", label="Exit Newtonsoft.Json.Linq.JArray.IndexOf(Newtonsoft.Json.Linq.JToken)", span="243-243"];
m11_95 [cluster="Newtonsoft.Json.Linq.JArray.Remove(Newtonsoft.Json.Linq.JToken)", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JArray.Remove(Newtonsoft.Json.Linq.JToken)", span="326-326"];
m11_96 [cluster="Newtonsoft.Json.Linq.JArray.Remove(Newtonsoft.Json.Linq.JToken)", file="JArray.cs", label="return RemoveItem(item);", span="328-328"];
m11_97 [cluster="Newtonsoft.Json.Linq.JArray.Remove(Newtonsoft.Json.Linq.JToken)", file="JArray.cs", label="Exit Newtonsoft.Json.Linq.JArray.Remove(Newtonsoft.Json.Linq.JToken)", span="326-326"];
m11_44 [cluster="System.IO.StringReader.StringReader(string)", file="JArray.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m11_14 [cluster="Newtonsoft.Json.Linq.JContainer.ContentsEqual(Newtonsoft.Json.Linq.JContainer)", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JContainer.ContentsEqual(Newtonsoft.Json.Linq.JContainer)", span="200-200"];
m11_80 [cluster="Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", span="282-282"];
m11_81 [cluster="Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", file="JArray.cs", label="Add((object)item)", span="284-284"];
m11_82 [cluster="Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", file="JArray.cs", label="Exit Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", span="282-282"];
m11_35 [cluster="Newtonsoft.Json.Linq.JContainer.ReadTokenFrom(Newtonsoft.Json.JsonReader)", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JContainer.ReadTokenFrom(Newtonsoft.Json.JsonReader)", span="624-624"];
m11_94 [cluster="Newtonsoft.Json.Linq.JContainer.CopyItemsTo(System.Array, int)", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JContainer.CopyItemsTo(System.Array, int)", span="503-503"];
m11_75 [cluster="Newtonsoft.Json.Linq.JContainer.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JContainer.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", span="331-331"];
m11_0 [cluster="Newtonsoft.Json.Linq.JArray.JArray()", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray()", span="64-64"];
m11_1 [cluster="Newtonsoft.Json.Linq.JArray.JArray()", file="JArray.cs", label="Exit Newtonsoft.Json.Linq.JArray.JArray()", span="64-64"];
m11_103 [file="JArray.cs", label="Newtonsoft.Json.Linq.JArray", span=""];
m13_11 [cluster="Unk.AreEqual", file="JsonConvertTest.cs", label="Entry Unk.AreEqual", span=""];
m13_13 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", color=green, community=0, file="JsonConvertTest.cs", label="string json = @''''''first line\r\nsecond line\r\nthird line''''''", prediction=273, span="70-72"];
m13_14 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", color=green, community=0, file="JsonConvertTest.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", prediction=274, span="74-74"];
m13_15 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonConvertTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="76-76"];
m13_134 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f '''''', result)", span="275-275"];
m13_136 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''!\''''#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]'''''', result)", span="280-280"];
m13_137 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(''^_`abcdefghijklmnopqrstuvwxyz{|}~'', '''', true)", span="282-282"];
m13_139 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="string data =\r\n        ''\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\''#$%&\u0027()*+,-./0123456789:;\u003c=\u003e?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~''", span="285-286"];
m13_141 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(data, '''', true)", span="290-290"];
m13_143 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(''Fred's cat.'', '\'', true)", span="293-293"];
m13_138 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''^_`abcdefghijklmnopqrstuvwxyz{|}~'''''', result)", span="283-283"];
m13_140 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="string expected =\r\n        @''''''\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\''''#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~''''''", span="287-288"];
m13_142 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Assert.AreEqual(expected, result)", span="291-291"];
m13_144 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Assert.AreEqual(result, @'''Fred\'s cat.''')", span="294-294"];
m13_145 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(@''''''How are you gentlemen?'''' said Cats.'', '''', true)", span="296-296"];
m13_135 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="result =\r\n        JavaScriptUtils.ToEscapedJavaScriptString(\r\n          ''!\''#$%&\u0027()*+,-./0123456789:;\u003c=\u003e?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]'', '''', true)", span="277-279"];
m13_146 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Assert.AreEqual(result, @''''''\''''How are you gentlemen?\'''' said Cats.'''''')", span="297-297"];
m13_96 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonConvertTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="198-198"];
m13_97 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="199-199"];
m13_98 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonConvertTest.cs", label="Assert.IsFalse(jsonTextReader.Read())", span="201-201"];
m13_99 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", span="176-176"];
m13_965 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="650-650"];
m13_478 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", span="796-796"];
m13_455 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonConvertTest.cs", label="reader.Read()", span="762-762"];
m13_665 [cluster="System.Convert.ToBase64String(byte[])", file="JsonConvertTest.cs", label="Entry System.Convert.ToBase64String(byte[])", span="0-0"];
m13_915 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", span="1443-1443"];
m13_945 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonConvertTest.cs", label="object jsonObject = serializer.Deserialize(new JsonTextReader(new StringReader(json)))", span="1489-1489"];
m13_950 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonConvertTest.cs", label="Assert.AreEqual(json, sb.ToString())", span="1502-1502"];
m13_943 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonConvertTest.cs", label="string json = sb.ToString()", span="1485-1485"];
m13_944 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonConvertTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="1487-1487"];
m13_946 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonConvertTest.cs", label="sb = new StringBuilder()", span="1491-1491"];
m13_949 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonConvertTest.cs", label="serializer.Serialize(jsonWriter, jsonObject)", span="1499-1499"];
m13_916 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonConvertTest.cs", label="StringBuilder sb = new StringBuilder()", span="1445-1445"];
m13_942 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonConvertTest.cs", label="jsonWriter.WriteEndArray()", span="1482-1482"];
m13_947 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonConvertTest.cs", label="sw = new StringWriter(sb)", span="1492-1492"];
m13_948 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonConvertTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="1494-1497"];
m13_917 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonConvertTest.cs", label="StringWriter sw = new StringWriter(sb)", span="1446-1446"];
m13_918 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonConvertTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="1448-1451"];
m13_941 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonConvertTest.cs", label="jsonWriter.WriteNull()", span="1481-1481"];
m13_937 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonConvertTest.cs", label="jsonWriter.WriteEndArray()", span="1475-1475"];
m13_919 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonConvertTest.cs", label="jsonWriter.WriteStartArray()", span="1453-1453"];
m13_920 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonConvertTest.cs", label="jsonWriter.WriteValue(true)", span="1454-1454"];
m13_921 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonConvertTest.cs", label="jsonWriter.WriteStartObject()", span="1456-1456"];
m13_922 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonConvertTest.cs", label="jsonWriter.WritePropertyName(''integer'')", span="1457-1457"];
m13_923 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonConvertTest.cs", label="jsonWriter.WriteValue(99)", span="1458-1458"];
m13_924 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonConvertTest.cs", label="jsonWriter.WritePropertyName(''string'')", span="1459-1459"];
m13_925 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonConvertTest.cs", label="jsonWriter.WriteValue(''how now brown cow?'')", span="1460-1460"];
m13_926 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonConvertTest.cs", label="jsonWriter.WritePropertyName(''array'')", span="1461-1461"];
m13_927 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonConvertTest.cs", label="jsonWriter.WriteStartArray()", span="1463-1463"];
m13_930 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonConvertTest.cs", label="jsonWriter.WriteValue(i)", span="1466-1466"];
m13_932 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonConvertTest.cs", label="jsonWriter.WriteStartObject()", span="1469-1469"];
m13_933 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonConvertTest.cs", label="jsonWriter.WritePropertyName(''decimal'')", span="1470-1470"];
m13_934 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonConvertTest.cs", label="jsonWriter.WriteValue(990.00990099m)", span="1471-1471"];
m13_935 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonConvertTest.cs", label="jsonWriter.WriteEndObject()", span="1472-1472"];
m13_936 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonConvertTest.cs", label="jsonWriter.WriteValue(5)", span="1474-1474"];
m13_938 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonConvertTest.cs", label="jsonWriter.WriteEndObject()", span="1477-1477"];
m13_939 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonConvertTest.cs", label="jsonWriter.WriteValue(''This is a string.'')", span="1479-1479"];
m13_940 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonConvertTest.cs", label="jsonWriter.WriteNull()", span="1480-1480"];
m13_928 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonConvertTest.cs", label="int i = 0", span="1464-1464"];
m13_929 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonConvertTest.cs", label="i < 5", span="1464-1464"];
m13_931 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonConvertTest.cs", label="i++", span="1464-1464"];
m13_951 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", span="1443-1443"];
m13_1349 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", span="2069-2069"];
m13_1351 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2073-2073"];
m13_1353 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2076-2076"];
m13_1355 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2079-2079"];
m13_1362 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2089-2089"];
m13_1354 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2077-2077"];
m13_1356 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2080-2080"];
m13_1358 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2083-2083"];
m13_1359 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2084-2084"];
m13_1363 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2090-2090"];
m13_1361 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonConvertTest.cs", label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", span="2087-2087"];
m13_1350 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonConvertTest.cs", label="string json = @''{''''Offset'''':''''1/30/2011''''}''", span="2071-2071"];
m13_1352 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonConvertTest.cs", label="reader.Culture = new CultureInfo(''en-US'')", span="2074-2074"];
m13_1357 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonConvertTest.cs", label="reader.ReadAsDateTimeOffset()", span="2082-2082"];
m13_1360 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonConvertTest.cs", label="DateTimeOffset dt = (DateTimeOffset)reader.Value", span="2086-2086"];
m13_1364 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", span="2069-2069"];
m13_880 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", span="1403-1403"];
m13_882 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1407-1407"];
m13_886 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(''-1.1''))", span="1412-1412"];
m13_890 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(''0.0''))", span="1417-1417"];
m13_894 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(''-0.0''))", span="1422-1422"];
m13_898 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1427-1427"];
m13_900 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1430-1430"];
m13_904 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(''''))", span="1435-1435"];
m13_906 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(''-''))", span="1438-1438"];
m13_883 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1408-1408"];
m13_887 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1413-1413"];
m13_891 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1418-1418"];
m13_895 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1423-1423"];
m13_901 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1431-1431"];
m13_905 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonConvertTest.cs", label="Assert.IsFalse(reader.Read())", span="1436-1436"];
m13_884 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1409-1409"];
m13_885 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonConvertTest.cs", label="Assert.AreEqual(1.1d, reader.Value)", span="1410-1410"];
m13_888 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1414-1414"];
m13_889 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonConvertTest.cs", label="Assert.AreEqual(-1.1d, reader.Value)", span="1415-1415"];
m13_892 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1419-1419"];
m13_893 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonConvertTest.cs", label="Assert.AreEqual(0.0d, reader.Value)", span="1420-1420"];
m13_896 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1424-1424"];
m13_897 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonConvertTest.cs", label="Assert.AreEqual(-0.0d, reader.Value)", span="1425-1425"];
m13_902 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1432-1432"];
m13_903 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonConvertTest.cs", label="Assert.AreEqual(0.000001d, reader.Value)", span="1433-1433"];
m13_899 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1428-1428"];
m13_907 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Input string '-' is not a valid number. Path '', line 1, position 1.'')", span="1439-1439"];
m13_881 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonConvertTest.cs", label="JsonTextReader reader = null", span="1405-1405"];
m13_908 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", span="1403-1403"];
m13_1233 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", span="1894-1894"];
m13_1235 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1898-1898"];
m13_1236 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1903-1903"];
m13_1238 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1906-1906"];
m13_1241 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1910-1910"];
m13_1244 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1914-1914"];
m13_1246 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonConvertTest.cs", label="Assert.IsFalse(reader.Read())", span="1917-1917"];
m13_1237 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1904-1904"];
m13_1239 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1907-1907"];
m13_1240 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonConvertTest.cs", label="Assert.AreEqual(''Message'', reader.Value)", span="1908-1908"];
m13_1242 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1911-1911"];
m13_1243 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''Hi,I'' + '\u0092' + ''ve send you smth'', reader.Value)", span="1912-1912"];
m13_1245 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1915-1915"];
m13_1234 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonConvertTest.cs", label="string json = @''{''''Message'''':''''Hi,I\u0092ve send you smth''''}''", span="1896-1896"];
m13_1247 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", span="1894-1894"];
m13_966 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="860-860"];
m13_578 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="947-947"];
m13_545 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="879-879"];
m13_1976 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", span="3033-3033"];
m13_1978 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3037-3037"];
m13_1988 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3050-3050"];
m13_1998 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3063-3063"];
m13_2008 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3076-3076"];
m13_2018 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3089-3089"];
m13_1980 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="3040-3040"];
m13_1981 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="3041-3041"];
m13_1984 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="3044-3044"];
m13_1987 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="3047-3047"];
m13_1990 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="3053-3053"];
m13_1991 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="3054-3054"];
m13_1994 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="3057-3057"];
m13_1997 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="3060-3060"];
m13_2000 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="3066-3066"];
m13_2001 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="3067-3067"];
m13_2004 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="3070-3070"];
m13_2007 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="3073-3073"];
m13_2010 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="3079-3079"];
m13_2017 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="3086-3086"];
m13_2020 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="3092-3092"];
m13_2027 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="3099-3099"];
m13_1982 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3042-3042"];
m13_1983 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3043-3043"];
m13_1985 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3045-3045"];
m13_1986 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3046-3046"];
m13_1992 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3055-3055"];
m13_1993 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3056-3056"];
m13_1995 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3058-3058"];
m13_1996 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3059-3059"];
m13_2002 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''1970-01-01T00:00:00Z'', reader.Value)", span="3068-3068"];
m13_2003 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="3069-3069"];
m13_2005 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''/Date(0)/'', reader.Value)", span="3071-3071"];
m13_2006 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="3072-3072"];
m13_2012 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3081-3081"];
m13_2013 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3082-3082"];
m13_2015 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3084-3084"];
m13_2016 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3085-3085"];
m13_2022 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3094-3094"];
m13_2023 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3095-3095"];
m13_2025 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3097-3097"];
m13_2026 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3098-3098"];
m13_1977 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="string json = @''[''''1970-01-01T00:00:00Z'''',''''\/Date(0)\/'''']''", span="3035-3035"];
m13_1979 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTime", span="3038-3038"];
m13_1989 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTimeOffset", span="3051-3051"];
m13_1999 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="reader.DateParseHandling = Json.DateParseHandling.None", span="3064-3064"];
m13_2009 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTime", span="3077-3077"];
m13_2011 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="reader.ReadAsDateTimeOffset()", span="3080-3080"];
m13_2014 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="reader.ReadAsDateTimeOffset()", span="3083-3083"];
m13_2019 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTimeOffset", span="3090-3090"];
m13_2021 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="reader.ReadAsDateTime()", span="3093-3093"];
m13_2024 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="reader.ReadAsDateTime()", span="3096-3096"];
m13_2028 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", span="3033-3033"];
m13_31 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", color=green, community=0, file="JsonConvertTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", prediction=275, span="107-107"];
m13_32 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", color=green, community=0, file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonTextReader.TokenType)", prediction=275, span="108-108"];
m13_33 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", color=green, community=0, file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(BigInteger), jsonTextReader.ValueType)", prediction=275, span="109-109"];
m13_34 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", color=green, community=0, file="JsonConvertTest.cs", label="Assert.AreEqual(BigInteger.Parse(''333333333333333333333333333333333333333''), jsonTextReader.Value)", prediction=275, span="110-110"];
m13_36 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", color=green, community=0, file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", prediction=275, span="113-113"];
m13_35 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", color=green, community=0, file="JsonConvertTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", prediction=275, span="112-112"];
m13_37 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", color=green, community=0, file="JsonConvertTest.cs", label="Assert.IsFalse(jsonTextReader.Read())", prediction=275, span="115-115"];
m13_46 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", color=green, community=0, file="JsonConvertTest.cs", label="string json = @''{\r\n    ChildId: 333333333333333333333333333333333333333\r\n}''", prediction=282, span="126-128"];
m13_50 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonConvertTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="135-135"];
m13_315 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(year2000local) + GetOffset(year2000local, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateUnspecified)", span="530-530"];
m13_317 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="DateTime millisecondsLocal = new DateTime(2000, 1, 1, 1, 1, 1, 999, DateTimeKind.Local)", span="533-533"];
m13_318 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="localToUtcDate = millisecondsLocal.ToUniversalTime().ToString(''yyyy-MM-ddTHH:mm:ss.FFFFFFFK'')", span="534-534"];
m13_316 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(year2000local) + @'')\/'', result.MsDateUtc)", span="531-531"];
m13_319 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="result = TestDateTime(''DateTime Local with milliseconds'', millisecondsLocal)", span="536-536"];
m13_323 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(localToUtcDate, result.IsoDateUtc)", span="540-540"];
m13_326 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(millisecondsLocal) + GetOffset(millisecondsLocal, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateUnspecified)", span="543-543"];
m13_325 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(millisecondsLocal) + GetOffset(millisecondsLocal, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateLocal)", span="542-542"];
m13_330 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="result = TestDateTime(''DateTime Local with ticks'', ticksLocal)", span="549-549"];
m13_334 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(localToUtcDate, result.IsoDateUtc)", span="553-553"];
m13_339 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="DateTime year2000Unspecified = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified)", span="559-559"];
m13_344 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2000-01-01T01:01:01Z'', result.IsoDateUtc)", span="565-565"];
m13_349 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="DateTime year2000Utc = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="571-571"];
m13_353 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(utcTolocalDate + GetOffset(year2000Utc, DateFormatHandling.IsoDateFormat), result.IsoDateLocal)", span="576-576"];
m13_359 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(946688461000)\/'', result.MsDateUtc)", span="582-582"];
m13_365 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1970-01-01T00:00:00'', result.IsoDateUnspecified)", span="590-590"];
m13_369 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(DateTime.SpecifyKind(unixEpoc, DateTimeKind.Unspecified)) + GetOffset(unixEpoc, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateUnspecified)", span="594-594"];
m13_373 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''0001-01-01T00:00:00'' + GetOffset(DateTime.MinValue, DateFormatHandling.IsoDateFormat), result.IsoDateLocal)", span="599-599"];
m13_327 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(millisecondsLocal) + @'')\/'', result.MsDateUtc)", span="544-544"];
m13_328 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="DateTime ticksLocal = new DateTime(634663873826822481, DateTimeKind.Local)", span="546-546"];
m13_329 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="localToUtcDate = ticksLocal.ToUniversalTime().ToString(''yyyy-MM-ddTHH:mm:ss.FFFFFFFK'')", span="547-547"];
m13_331 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2012-03-03T16:03:02.6822481'' + GetOffset(ticksLocal, DateFormatHandling.IsoDateFormat), result.IsoDateRoundtrip)", span="550-550"];
m13_332 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2012-03-03T16:03:02.6822481'' + GetOffset(ticksLocal, DateFormatHandling.IsoDateFormat), result.IsoDateLocal)", span="551-551"];
m13_333 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2012-03-03T16:03:02.6822481'', result.IsoDateUnspecified)", span="552-552"];
m13_335 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(ticksLocal) + GetOffset(ticksLocal, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateRoundtrip)", span="554-554"];
m13_336 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(ticksLocal) + GetOffset(ticksLocal, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateLocal)", span="555-555"];
m13_337 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(ticksLocal) + GetOffset(ticksLocal, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateUnspecified)", span="556-556"];
m13_338 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(ticksLocal) + @'')\/'', result.MsDateUtc)", span="557-557"];
m13_340 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="result = TestDateTime(''DateTime Unspecified'', year2000Unspecified)", span="561-561"];
m13_341 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2000-01-01T01:01:01'', result.IsoDateRoundtrip)", span="562-562"];
m13_342 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2000-01-01T01:01:01'' + GetOffset(year2000Unspecified, DateFormatHandling.IsoDateFormat), result.IsoDateLocal)", span="563-563"];
m13_343 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2000-01-01T01:01:01'', result.IsoDateUnspecified)", span="564-564"];
m13_345 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(year2000Unspecified) + GetOffset(year2000Unspecified, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateRoundtrip)", span="566-566"];
m13_346 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(year2000Unspecified) + GetOffset(year2000Unspecified, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateLocal)", span="567-567"];
m13_347 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(year2000Unspecified) + GetOffset(year2000Unspecified, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateUnspecified)", span="568-568"];
m13_348 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(year2000Unspecified.ToLocalTime()) + @'')\/'', result.MsDateUtc)", span="569-569"];
m13_350 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="string utcTolocalDate = year2000Utc.ToLocalTime().ToString(''yyyy-MM-ddTHH:mm:ss'')", span="572-572"];
m13_351 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="result = TestDateTime(''DateTime Utc'', year2000Utc)", span="574-574"];
m13_352 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2000-01-01T01:01:01Z'', result.IsoDateRoundtrip)", span="575-575"];
m13_354 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2000-01-01T01:01:01'', result.IsoDateUnspecified)", span="577-577"];
m13_355 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2000-01-01T01:01:01Z'', result.IsoDateUtc)", span="578-578"];
m13_356 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(946688461000)\/'', result.MsDateRoundtrip)", span="579-579"];
m13_357 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(946688461000'' + GetOffset(year2000Utc, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateLocal)", span="580-580"];
m13_358 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(DateTime.SpecifyKind(year2000Utc, DateTimeKind.Unspecified)) + GetOffset(year2000Utc, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateUnspecified)", span="581-581"];
m13_360 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="DateTime unixEpoc = new DateTime(621355968000000000, DateTimeKind.Utc)", span="584-584"];
m13_361 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="utcTolocalDate = unixEpoc.ToLocalTime().ToString(''yyyy-MM-ddTHH:mm:ss'')", span="585-585"];
m13_362 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="result = TestDateTime(''DateTime Unix Epoc'', unixEpoc)", span="587-587"];
m13_363 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1970-01-01T00:00:00Z'', result.IsoDateRoundtrip)", span="588-588"];
m13_364 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(utcTolocalDate + GetOffset(unixEpoc, DateFormatHandling.IsoDateFormat), result.IsoDateLocal)", span="589-589"];
m13_366 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1970-01-01T00:00:00Z'', result.IsoDateUtc)", span="591-591"];
m13_367 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(0)\/'', result.MsDateRoundtrip)", span="592-592"];
m13_368 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(0'' + GetOffset(unixEpoc, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateLocal)", span="593-593"];
m13_370 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(0)\/'', result.MsDateUtc)", span="595-595"];
m13_371 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="result = TestDateTime(''DateTime Min'', DateTime.MinValue)", span="597-597"];
m13_372 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''0001-01-01T00:00:00'', result.IsoDateRoundtrip)", span="598-598"];
m13_324 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(millisecondsLocal) + GetOffset(millisecondsLocal, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateRoundtrip)", span="541-541"];
m13_374 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''0001-01-01T00:00:00'', result.IsoDateUnspecified)", span="600-600"];
m13_375 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''0001-01-01T00:00:00Z'', result.IsoDateUtc)", span="601-601"];
m13_378 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(-62135596800000)\/'', result.MsDateUnspecified)", span="604-604"];
m13_377 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(-62135596800000'' + GetOffset(DateTime.MinValue, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateLocal)", span="603-603"];
m13_379 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(-62135596800000)\/'', result.MsDateUtc)", span="605-605"];
m13_381 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''0001-01-01T00:00:00'', result.IsoDateRoundtrip)", span="608-608"];
m13_382 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''0001-01-01T00:00:00'' + GetOffset(default(DateTime), DateFormatHandling.IsoDateFormat), result.IsoDateLocal)", span="609-609"];
m13_383 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''0001-01-01T00:00:00'', result.IsoDateUnspecified)", span="610-610"];
m13_385 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(-62135596800000)\/'', result.MsDateRoundtrip)", span="612-612"];
m13_386 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(-62135596800000'' + GetOffset(default(DateTime), DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateLocal)", span="613-613"];
m13_387 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(-62135596800000)\/'', result.MsDateUnspecified)", span="614-614"];
m13_389 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="result = TestDateTime(''DateTimeOffset TimeSpan Zero'', new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero))", span="618-618"];
m13_390 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2000-01-01T01:01:01+00:00'', result.IsoDateRoundtrip)", span="619-619"];
m13_391 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(946688461000+0000)\/'', result.MsDateRoundtrip)", span="620-620"];
m13_392 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="result = TestDateTime(''DateTimeOffset TimeSpan 1 hour'', new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(1)))", span="622-622"];
m13_393 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2000-01-01T01:01:01+01:00'', result.IsoDateRoundtrip)", span="623-623"];
m13_395 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="result = TestDateTime(''DateTimeOffset TimeSpan 1.5 hour'', new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(1.5)))", span="626-626"];
m13_396 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2000-01-01T01:01:01+01:30'', result.IsoDateRoundtrip)", span="627-627"];
m13_397 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(946683061000+0130)\/'', result.MsDateRoundtrip)", span="628-628"];
m13_399 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2000-01-01T01:01:01+13:00'', result.IsoDateRoundtrip)", span="631-631"];
m13_400 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(946641661000+1300)\/'', result.MsDateRoundtrip)", span="632-632"];
m13_401 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="result = TestDateTime(''DateTimeOffset TimeSpan with ticks'', new DateTimeOffset(634663873826822481, TimeSpan.Zero))", span="634-634"];
m13_403 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(1330790582682+0000)\/'', result.MsDateRoundtrip)", span="636-636"];
m13_404 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="result = TestDateTime(''DateTimeOffset Min'', DateTimeOffset.MinValue)", span="638-638"];
m13_405 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''0001-01-01T00:00:00+00:00'', result.IsoDateRoundtrip)", span="639-639"];
m13_406 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(-62135596800000+0000)\/'', result.MsDateRoundtrip)", span="640-640"];
m13_408 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''9999-12-31T23:59:59.9999999+00:00'', result.IsoDateRoundtrip)", span="643-643"];
m13_409 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(253402300799999+0000)\/'', result.MsDateRoundtrip)", span="644-644"];
m13_410 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="result = TestDateTime(''DateTimeOffset Default'', default(DateTimeOffset))", span="646-646"];
m13_411 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''0001-01-01T00:00:00+00:00'', result.IsoDateRoundtrip)", span="647-647"];
m13_413 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", span="506-506"];
m13_414 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", span="665-665"];
m13_415 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", span="70-70"];
m13_416 [cluster="System.DateTime.ToUniversalTime()", file="JsonConvertTest.cs", label="Entry System.DateTime.ToUniversalTime()", span="0-0"];
m13_418 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime)", span="164-164"];
m13_419 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", file="JsonConvertTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m13_420 [cluster="System.DateTime.ToLocalTime()", file="JsonConvertTest.cs", label="Entry System.DateTime.ToLocalTime()", span="0-0"];
m13_421 [cluster="System.DateTime.SpecifyKind(System.DateTime, System.DateTimeKind)", file="JsonConvertTest.cs", label="Entry System.DateTime.SpecifyKind(System.DateTime, System.DateTimeKind)", span="0-0"];
m13_423 [cluster="System.TimeSpan.FromHours(double)", file="JsonConvertTest.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m13_424 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="Console.WriteLine(name)", span="667-667"];
m13_425 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="DateTimeResult result = new DateTimeResult()", span="669-669"];
m13_426 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="result.IsoDateRoundtrip = TestDateTimeFormat(value, DateFormatHandling.IsoDateFormat, DateTimeZoneHandling.RoundtripKind)", span="671-671"];
m13_428 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="result.IsoDateLocal = TestDateTimeFormat(value, DateFormatHandling.IsoDateFormat, DateTimeZoneHandling.Local)", span="674-674"];
m13_429 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="result.IsoDateUnspecified = TestDateTimeFormat(value, DateFormatHandling.IsoDateFormat, DateTimeZoneHandling.Unspecified)", span="675-675"];
m13_430 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="result.IsoDateUtc = TestDateTimeFormat(value, DateFormatHandling.IsoDateFormat, DateTimeZoneHandling.Utc)", span="676-676"];
m13_432 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="value is DateTime", span="680-680"];
m13_433 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="result.MsDateLocal = TestDateTimeFormat(value, DateFormatHandling.MicrosoftDateFormat, DateTimeZoneHandling.Local)", span="682-682"];
m13_434 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="result.MsDateUnspecified = TestDateTimeFormat(value, DateFormatHandling.MicrosoftDateFormat, DateTimeZoneHandling.Unspecified)", span="683-683"];
m13_436 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="TestDateTimeFormat(value, new IsoDateTimeConverter())", span="687-687"];
m13_437 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="value is DateTime", span="690-690"];
m13_438 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="Console.WriteLine(XmlConvert.ToString((DateTime)(object)value, XmlDateTimeSerializationMode.RoundtripKind))", span="692-692"];
m13_440 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="MemoryStream ms = new MemoryStream()", span="701-701"];
m13_441 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="DataContractSerializer s = new DataContractSerializer(typeof(T))", span="702-702"];
m13_442 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="s.WriteObject(ms, value)", span="703-703"];
m13_444 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="Console.WriteLine(json)", span="705-705"];
m13_445 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="Console.WriteLine()", span="708-708"];
m13_446 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="return result;", span="710-710"];
m13_448 [cluster="System.Console.WriteLine(string)", file="JsonConvertTest.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m13_449 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DateTimeResult.DateTimeResult()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.DateTimeResult.DateTimeResult()", span="652-652"];
m13_450 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", span="713-713"];
m13_452 [cluster="Unk.ToString", file="JsonConvertTest.cs", label="Entry Unk.ToString", span=""];
m13_453 [cluster="Unk.WriteLine", file="JsonConvertTest.cs", label="Entry Unk.WriteLine", span=""];
m13_454 [cluster="System.IO.MemoryStream.MemoryStream()", file="JsonConvertTest.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m13_456 [cluster="Unk.WriteObject", file="JsonConvertTest.cs", label="Entry Unk.WriteObject", span=""];
m13_457 [cluster="System.IO.MemoryStream.ToArray()", file="JsonConvertTest.cs", label="Entry System.IO.MemoryStream.ToArray()", span="0-0"];
m13_458 [cluster="System.Convert.ToInt32(long)", file="JsonConvertTest.cs", label="Entry System.Convert.ToInt32(long)", span="0-0"];
m13_460 [cluster="System.Console.WriteLine()", file="JsonConvertTest.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m13_461 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="string date = null", span="715-715"];
m13_462 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="value is DateTime", span="717-717"];
m13_464 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="date = JsonConvert.ToString((DateTimeOffset)(object)value, format)", span="724-724"];
m13_465 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="Console.WriteLine(format.ToString(''g'') + ''-'' + timeZoneHandling.ToString(''g'') + '': '' + date)", span="728-728"];
m13_466 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="timeZoneHandling == DateTimeZoneHandling.RoundtripKind", span="730-730"];
m13_468 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="Assert.AreEqual(value, parsed)", span="735-735"];
m13_469 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label=Exception, span="737-737"];
m13_470 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="long valueTicks = GetTicks(value)", span="739-739"];
m13_380 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="result = TestDateTime(''DateTime Default'', default(DateTime))", span="607-607"];
m13_384 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''0001-01-01T00:00:00Z'', result.IsoDateUtc)", span="611-611"];
m13_388 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(-62135596800000)\/'', result.MsDateUtc)", span="615-615"];
m13_394 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(946684861000+0100)\/'', result.MsDateRoundtrip)", span="624-624"];
m13_398 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="result = TestDateTime(''DateTimeOffset TimeSpan 13 hour'', new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)))", span="630-630"];
m13_402 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2012-03-03T16:03:02.6822481+00:00'', result.IsoDateRoundtrip)", span="635-635"];
m13_407 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="result = TestDateTime(''DateTimeOffset Max'', DateTimeOffset.MaxValue)", span="642-642"];
m13_412 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(-62135596800000+0000)\/'', result.MsDateRoundtrip)", span="648-648"];
m13_417 [cluster="System.DateTime.ToString(string)", file="JsonConvertTest.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m13_422 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JsonConvertTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m13_427 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="value is DateTime", span="672-672"];
m13_431 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="result.MsDateRoundtrip = TestDateTimeFormat(value, DateFormatHandling.MicrosoftDateFormat, DateTimeZoneHandling.RoundtripKind)", span="679-679"];
m13_435 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="result.MsDateUtc = TestDateTimeFormat(value, DateFormatHandling.MicrosoftDateFormat, DateTimeZoneHandling.Utc)", span="684-684"];
m13_439 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="Console.WriteLine(XmlConvert.ToString((DateTimeOffset)(object)value))", span="696-696"];
m13_443 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="string json = Encoding.UTF8.GetString(ms.ToArray(), 0, Convert.ToInt32(ms.Length))", span="704-704"];
m13_447 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", span="665-665"];
m13_451 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.JsonConverter)", span="751-751"];
m13_459 [cluster="System.Text.Encoding.GetString(byte[], int, int)", file="JsonConvertTest.cs", label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0"];
m13_463 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="date = JsonConvert.ToString((DateTime)(object)value, format, timeZoneHandling)", span="719-719"];
m13_467 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="T parsed = JsonConvert.DeserializeObject<T>(date)", span="732-732"];
m13_376 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(-62135596800000)\/'', result.MsDateRoundtrip)", span="602-602"];
m13_471 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="long parsedTicks = GetTicks(parsed)", span="740-740"];
m13_1100 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", span="1707-1707"];
m13_1102 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonConvertTest.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1710-1710"];
m13_1101 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonConvertTest.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1709-1709"];
m13_1103 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonConvertTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="1712-1712"];
m13_1105 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonConvertTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="1715-1715"];
m13_1108 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonConvertTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="1719-1719"];
m13_1111 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonConvertTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="1723-1723"];
m13_1114 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonConvertTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="1727-1727"];
m13_1116 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonConvertTest.cs", label="Assert.IsFalse(jsonReader.Read())", span="1730-1730"];
m13_1104 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1713-1713"];
m13_1106 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1716-1716"];
m13_1107 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="1717-1717"];
m13_1109 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1720-1720"];
m13_1110 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="1721-1721"];
m13_1112 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1724-1724"];
m13_1113 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="1725-1725"];
m13_1115 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1728-1728"];
m13_1117 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", span="1707-1707"];
m13_1366 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", span="2094-2094"];
m13_1368 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2098-2098"];
m13_1370 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2101-2101"];
m13_1372 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2104-2104"];
m13_1379 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2114-2114"];
m13_1371 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2102-2102"];
m13_1373 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2105-2105"];
m13_1375 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2108-2108"];
m13_1376 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2109-2109"];
m13_1380 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2115-2115"];
m13_1378 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonConvertTest.cs", label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", span="2112-2112"];
m13_1367 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonConvertTest.cs", label="string json = @''{''''Offset'''':''''30/1/2011''''}''", span="2096-2096"];
m13_1369 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonConvertTest.cs", label="reader.Culture = new CultureInfo(''en-NZ'')", span="2099-2099"];
m13_1374 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonConvertTest.cs", label="reader.ReadAsDateTimeOffset()", span="2107-2107"];
m13_1377 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonConvertTest.cs", label="DateTimeOffset dt = (DateTimeOffset)reader.Value", span="2111-2111"];
m13_1381 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", span="2094-2094"];
m13_491 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Read<T>(string, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.Read<T>(string, Newtonsoft.Json.JsonConverter)", span="790-790"];
m13_676 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", span="1093-1093"];
m13_677 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonConvertTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{aww''))", span="1095-1095"];
m13_678 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1096-1096"];
m13_679 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing unquoted property name. Path '', line 1, position 4.'')", span="1098-1098"];
m13_680 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", span="1093-1093"];
m13_54 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", color=green, community=0, file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", prediction=283, span="141-141"];
m13_2105 [cluster="System.Exception.Exception(string)", file="JsonConvertTest.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m13_84 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="195-195"];
m13_85 [cluster="lambda expression", color=green, community=0, file="JsonConvertTest.cs", label="jsonTextReader.ReadAsInt32()", prediction=284, span="167-167"];
m13_86 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="writer.WriteValue(i * 2)", span="198-198"];
m13_87 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", span="176-176"];
m13_551 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonConvertTest.cs", label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''e1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''e2'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$ref'''': ''''1''''\r\n  },\r\n  {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n]''", span="889-906"];
m13_490 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", span="804-804"];
m13_675 [cluster="Unk.IsNull", file="JsonConvertTest.cs", label="Entry Unk.IsNull", span=""];
m13_101 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", span="205-205"];
m13_553 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonConvertTest.cs", label="int i = 0", span="913-913"];
m13_546 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="880-880"];
m13_219 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = DBNull.Value", span="405-405"];
m13_516 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="task = JsonConvert.SerializeObjectAsync(new[] {1, 2, 3, 4, 5}, Formatting.Indented)", span="809-809"];
m13_229 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonConvertTest.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd DEF'', ReadString(''ABC \\udc00\\ud800 DEF''))", span="395-395"];
m13_176 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.GuidToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''bed7f4ea-1a96-11d2-8f08-00a0c9a6186d'''''', json)", span="339-339"];
m13_178 [cluster="System.Guid.Guid(string)", file="JsonConvertTest.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m13_180 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EnumToString()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.EnumToString()", span="343-343"];
m13_181 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EnumToString()", file="JsonConvertTest.cs", label="string json = JsonConvert.ToString(StringComparison.CurrentCultureIgnoreCase)", span="345-345"];
m13_182 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EnumToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1'', json)", span="346-346"];
m13_177 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.GuidToString()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.GuidToString()", span="335-335"];
m13_179 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Guid)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.Guid)", span="350-350"];
m13_183 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EnumToString()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.EnumToString()", span="343-343"];
m13_1900 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", span="2925-2925"];
m13_1902 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                MaxDepth = 1\r\n            }", span="2929-2932"];
m13_1903 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2934-2934"];
m13_1907 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2940-2940"];
m13_1909 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2943-2943"];
m13_1911 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2946-2946"];
m13_1913 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2949-2949"];
m13_1915 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2952-2952"];
m13_1919 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2958-2958"];
m13_1921 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2961-2961"];
m13_1923 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2964-2964"];
m13_1925 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2967-2967"];
m13_1927 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonConvertTest.cs", label="Assert.IsFalse(reader.Read())", span="2970-2970"];
m13_1904 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonConvertTest.cs", label="Assert.AreEqual(0, reader.Depth)", span="2935-2935"];
m13_1906 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonConvertTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="2938-2938"];
m13_1908 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonConvertTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="2941-2941"];
m13_1910 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonConvertTest.cs", label="Assert.AreEqual(3, reader.Depth)", span="2944-2944"];
m13_1912 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonConvertTest.cs", label="Assert.AreEqual(3, reader.Depth)", span="2947-2947"];
m13_1914 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonConvertTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="2950-2950"];
m13_1916 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonConvertTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="2953-2953"];
m13_1918 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonConvertTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="2956-2956"];
m13_1920 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonConvertTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="2959-2959"];
m13_1922 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonConvertTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="2962-2962"];
m13_1924 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonConvertTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="2965-2965"];
m13_1926 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonConvertTest.cs", label="Assert.AreEqual(0, reader.Depth)", span="2968-2968"];
m13_1901 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonConvertTest.cs", label="string json = ''[[[[]]],[[]]]''", span="2927-2927"];
m13_1905 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'')", span="2937-2937"];
m13_1917 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[1]', line 1, position 9.'')", span="2955-2955"];
m13_1928 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", span="2925-2925"];
m13_805 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", span="1327-1327"];
m13_807 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(''1''))", span="1331-1331"];
m13_809 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(''-1''))", span="1334-1334"];
m13_811 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(''0''))", span="1337-1337"];
m13_813 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(''-0''))", span="1340-1340"];
m13_815 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(int.MaxValue.ToString()))", span="1343-1343"];
m13_817 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(int.MinValue.ToString()))", span="1346-1346"];
m13_819 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(long.MaxValue.ToString()))", span="1349-1349"];
m13_821 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1352-1352"];
m13_823 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1355-1355"];
m13_825 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1358-1358"];
m13_827 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(''''))", span="1361-1361"];
m13_829 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(''-''))", span="1364-1364"];
m13_808 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonConvertTest.cs", label="Assert.AreEqual(1, reader.ReadAsInt32())", span="1332-1332"];
m13_810 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonConvertTest.cs", label="Assert.AreEqual(-1, reader.ReadAsInt32())", span="1335-1335"];
m13_812 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonConvertTest.cs", label="Assert.AreEqual(0, reader.ReadAsInt32())", span="1338-1338"];
m13_814 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonConvertTest.cs", label="Assert.AreEqual(0, reader.ReadAsInt32())", span="1341-1341"];
m13_816 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonConvertTest.cs", label="Assert.AreEqual(int.MaxValue, reader.ReadAsInt32())", span="1344-1344"];
m13_818 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonConvertTest.cs", label="Assert.AreEqual(int.MinValue, reader.ReadAsInt32())", span="1347-1347"];
m13_828 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonConvertTest.cs", label="Assert.AreEqual(null, reader.ReadAsInt32())", span="1362-1362"];
m13_820 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''JSON integer 9223372036854775807 is too large or small for an Int32. Path '', line 1, position 19.'')", span="1350-1350"];
m13_822 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1353-1353"];
m13_824 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Input string '1E-06' is not a valid integer. Path '', line 1, position 5.'')", span="1356-1356"];
m13_826 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Input string '1.1' is not a valid integer. Path '', line 1, position 3.'')", span="1359-1359"];
m13_830 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Input string '-' is not a valid integer. Path '', line 1, position 1.'')", span="1365-1365"];
m13_806 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonConvertTest.cs", label="JsonTextReader reader = null", span="1329-1329"];
m13_831 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", span="1327-1327"];
m13_658 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytes()", span="383-383"];
m13_119 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="238-238"];
m13_120 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDecimal(); }, ''Unexpected character encountered while parsing number: q. Path '', line 1, position 2.'')", span="240-240"];
m13_121 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="242-242"];
m13_122 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsInt32(); }, ''Unexpected character encountered while parsing number: q. Path '', line 1, position 2.'')", span="244-244"];
m13_123 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", span="230-230"];
m13_124 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="236-236"];
m13_125 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.Read()", span="236-236"];
m13_126 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="236-236"];
m13_127 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="240-240"];
m13_128 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.ReadAsDecimal()", span="240-240"];
m13_129 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="240-240"];
m13_130 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="326-326"];
m13_131 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="244-244"];
m13_132 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.ReadAsInt32()", span="244-244"];
m13_133 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="244-244"];
m13_147 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="266-266"];
m13_148 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.Read()", span="266-266"];
m13_149 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="266-266"];
m13_150 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", span="270-270"];
m13_151 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonConvertTest.cs", label="string json = ''[1.0,1,9.9,1E-06]''", span="272-272"];
m13_152 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="274-274"];
m13_153 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonConvertTest.cs", label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="275-275"];
m13_833 [cluster="long.ToString()", file="JsonConvertTest.cs", label="Entry long.ToString()", span="0-0"];
m13_608 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", span="985-985"];
m13_610 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="989-989"];
m13_616 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="997-997"];
m13_611 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonConvertTest.cs", label="reader.Read()", span="990-990"];
m13_617 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonConvertTest.cs", label="reader.Read()", span="998-998"];
m13_612 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="991-991"];
m13_618 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(BigInteger), reader.ValueType)", span="1000-1000"];
m13_609 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonConvertTest.cs", label="BigInteger i = new BigInteger(long.MinValue)", span="987-987"];
m13_615 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonConvertTest.cs", label="BigInteger total = i + -j", span="995-995"];
m13_613 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonConvertTest.cs", label="int j = 1", span="993-993"];
m13_619 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonConvertTest.cs", label="j++", span="993-993"];
m13_614 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonConvertTest.cs", label="j < 1000", span="993-993"];
m13_620 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", span="985-985"];
m13_53 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonConvertTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="140-140"];
m13_964 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="433-433"];
m13_56 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", span="124-124"];
m13_1790 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", span="2760-2760"];
m13_1792 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2764-2764"];
m13_1793 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2766-2766"];
m13_1796 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonConvertTest.cs", label="Assert.IsFalse(reader.Read())", span="2770-2770"];
m13_1794 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2767-2767"];
m13_1795 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonConvertTest.cs", label="Assert.AreEqual(''comment'', reader.Value)", span="2768-2768"];
m13_1791 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonConvertTest.cs", label="string json = @''//comment''", span="2762-2762"];
m13_1797 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", span="2760-2760"];
m13_1889 [cluster="double.ToString(System.IFormatProvider)", file="JsonConvertTest.cs", label="Entry double.ToString(System.IFormatProvider)", span="0-0"];
m13_110 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", color=green, community=0, file="JsonConvertTest.cs", label="Assert.AreEqual(@''/Date(9467082_PIE_340000-0631)/'', jsonTextReader.Value)", prediction=285, span="221-221"];
m13_542 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="875-875"];
m13_1413 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", span="2163-2163"];
m13_1414 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nulz''))", span="2165-2165"];
m13_1415 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing null value. Path '', line 0, position 0.'')", span="2167-2167"];
m13_1416 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", span="2163-2163"];
m13_1427 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", span="2179-2179"];
m13_1428 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/* sdf''))", span="2181-2181"];
m13_1429 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing comment. Path '', line 1, position 6.'')", span="2183-2183"];
m13_1430 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", span="2179-2179"];
m13_1333 [cluster="System.TimeSpan.Add(System.TimeSpan)", file="JsonConvertTest.cs", label="Entry System.TimeSpan.Add(System.TimeSpan)", span="0-0"];
m13_2032 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", span="3104-3104"];
m13_2034 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonConvertTest.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(toggleReaderError)", span="3107-3107"];
m13_2033 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonConvertTest.cs", label="ToggleReaderError toggleReaderError = new ToggleReaderError(new StringReader(''{'first':1,'second':2,'third':3}''))", span="3106-3106"];
m13_2035 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonConvertTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="3109-3109"];
m13_2040 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonConvertTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="3118-3118"];
m13_2045 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonConvertTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="3127-3127"];
m13_2041 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonConvertTest.cs", label="Assert.AreEqual(''first'', jsonTextReader.Value)", span="3119-3119"];
m13_2046 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonConvertTest.cs", label="Assert.AreEqual(1L, jsonTextReader.Value)", span="3128-3128"];
m13_2037 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3113-3113"];
m13_2038 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3114-3114"];
m13_2043 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3123-3123"];
m13_2048 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3132-3132"];
m13_2049 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3133-3133"];
m13_2050 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3134-3134"];
m13_2036 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonConvertTest.cs", label="toggleReaderError.Error = true", span="3111-3111"];
m13_2039 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonConvertTest.cs", label="toggleReaderError.Error = false", span="3116-3116"];
m13_2042 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonConvertTest.cs", label="toggleReaderError.Error = true", span="3121-3121"];
m13_2044 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonConvertTest.cs", label="toggleReaderError.Error = false", span="3125-3125"];
m13_2047 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonConvertTest.cs", label="toggleReaderError.Error = true", span="3130-3130"];
m13_2051 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonConvertTest.cs", label="toggleReaderError.Error = false", span="3136-3136"];
m13_2052 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", span="3104-3104"];
m13_1820 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", span="2808-2808"];
m13_1822 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2812-2812"];
m13_1823 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonConvertTest.cs", label="reader.Read()", span="2814-2814"];
m13_1825 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonConvertTest.cs", label="reader.Read()", span="2817-2817"];
m13_1827 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonConvertTest.cs", label="reader.Read()", span="2820-2820"];
m13_1829 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonConvertTest.cs", label="reader.Read()", span="2823-2823"];
m13_1831 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonConvertTest.cs", label="reader.Read()", span="2826-2826"];
m13_1833 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonConvertTest.cs", label="reader.Read()", span="2829-2829"];
m13_1824 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2815-2815"];
m13_1826 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2818-2818"];
m13_1828 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2821-2821"];
m13_1830 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2824-2824"];
m13_1832 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2827-2827"];
m13_1834 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2830-2830"];
m13_1821 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonConvertTest.cs", label="string json = @''[0,1,2 , 3]''", span="2810-2810"];
m13_1835 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", span="2808-2808"];
m13_100 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="317-317"];
m13_1642 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", span="2522-2522"];
m13_1644 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2525-2525"];
m13_1645 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2527-2527"];
m13_1647 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2530-2530"];
m13_1649 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2533-2533"];
m13_1651 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2536-2536"];
m13_1653 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2539-2539"];
m13_1655 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2542-2542"];
m13_1657 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2545-2545"];
m13_1659 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2548-2548"];
m13_1661 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2551-2551"];
m13_1663 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonConvertTest.cs", label="Assert.IsFalse(reader.Read())", span="2554-2554"];
m13_1646 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2528-2528"];
m13_1648 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2531-2531"];
m13_1650 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2534-2534"];
m13_1652 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2537-2537"];
m13_1654 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2540-2540"];
m13_1656 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2543-2543"];
m13_1658 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2546-2546"];
m13_1660 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2549-2549"];
m13_1662 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2552-2552"];
m13_1643 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonConvertTest.cs", label="string json = ''\x00a0{\x00a0'h\x00a0i\x00a0'\x00a0:\x00a0[\x00a0true\x00a0,\x00a0new\x00a0Date\x00a0(\x00a0)\x00a0]\x00a0/*\x00a0comment\x00a0*/\x00a0}\x00a0''", span="2524-2524"];
m13_1664 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", span="2522-2522"];
m13_1586 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", span="2445-2445"];
m13_1588 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2448-2448"];
m13_1589 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected character while parsing constructor: !. Path '', line 1, position 9.'')", span="2450-2450"];
m13_1587 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonConvertTest.cs", label="string json = ''new Date !''", span="2447-2447"];
m13_1590 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", span="2445-2445"];
m13_292 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StringEscaping()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''It's a good day\r\n\''''sunshine\'''''''''', json)", span="502-502"];
m13_294 [cluster="Newtonsoft.Json.JsonConvert.ToString(string)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(string)", span="406-406"];
m13_295 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", span="506-506"];
m13_297 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="result = TestDateTime(''DateTime Max'', DateTime.MaxValue)", span="510-510"];
m13_299 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''9999-12-31T23:59:59.9999999'' + GetOffset(DateTime.MaxValue, DateFormatHandling.IsoDateFormat), result.IsoDateLocal)", span="512-512"];
m13_301 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''9999-12-31T23:59:59.9999999Z'', result.IsoDateUtc)", span="514-514"];
m13_303 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(253402300799999'' + GetOffset(DateTime.MaxValue, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateLocal)", span="516-516"];
m13_296 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="DateTimeResult result = null", span="508-508"];
m13_298 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''9999-12-31T23:59:59.9999999'', result.IsoDateRoundtrip)", span="511-511"];
m13_300 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''9999-12-31T23:59:59.9999999'', result.IsoDateUnspecified)", span="513-513"];
m13_302 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(253402300799999)\/'', result.MsDateRoundtrip)", span="515-515"];
m13_304 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(253402300799999)\/'', result.MsDateUnspecified)", span="517-517"];
m13_305 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(253402300799999)\/'', result.MsDateUtc)", span="518-518"];
m13_293 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StringEscaping()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.StringEscaping()", span="496-496"];
m13_306 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="DateTime year2000local = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Local)", span="520-520"];
m13_78 [cluster="Newtonsoft.Json.JsonSerializer.CreateDefault(Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.CreateDefault(Newtonsoft.Json.JsonSerializerSettings)", span="501-501"];
m13_550 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", span="887-887"];
m13_632 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", span="1039-1039"];
m13_633 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonConvertTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader('''h\0i'''))", span="1041-1041"];
m13_635 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonConvertTest.cs", label="Assert.AreEqual(''h\0i'', reader.Value)", span="1044-1044"];
m13_634 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1042-1042"];
m13_636 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", span="1039-1039"];
m13_111 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", color=green, community=0, file="JsonConvertTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", prediction=285, span="223-223"];
m13_112 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", color=green, community=0, file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", prediction=285, span="224-224"];
m13_113 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonConvertTest.cs", label="Assert.IsFalse(jsonTextReader.Read())", span="226-226"];
m13_114 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", span="205-205"];
m13_289 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="504-509"];
m13_290 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.Read()", span="506-506"];
m13_291 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="504-509"];
m13_502 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonConvertTest.cs", label="string json = sw.ToString()", span="826-826"];
m13_57 [cluster="Newtonsoft.Json.JsonSerializer.Create()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Create()", span="452-452"];
m13_543 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="876-876"];
m13_651 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", span="1064-1064"];
m13_652 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonConvertTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''true''))", span="1066-1066"];
m13_653 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Error reading bytes. Unexpected token: Boolean. Path '', line 1, position 4.'')", span="1068-1068"];
m13_654 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", span="1064-1064"];
m13_175 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.GuidToString()", file="JsonConvertTest.cs", label="string json = JsonConvert.ToString(guid)", span="338-338"];
m13_264 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''-1.0'', JsonConvert.ToString(-1d))", span="468-468"];
m13_1610 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", span="2479-2479"];
m13_1612 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2482-2482"];
m13_1613 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2484-2484"];
m13_1615 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2487-2487"];
m13_1614 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2485-2485"];
m13_1616 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2488-2488"];
m13_1611 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonConvertTest.cs", label="string json = ''{}''", span="2481-2481"];
m13_1617 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", span="2479-2479"];
m13_115 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", span="230-230"];
m13_116 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonConvertTest.cs", label="string json = ''0aq2dun13.hod''", span="232-232"];
m13_117 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="234-234"];
m13_118 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected character encountered while parsing number: q. Path '', line 1, position 2.'')", span="236-236"];
m13_10 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="299-299"];
m13_1481 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", span="2270-2270"];
m13_1483 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2283-2283"];
m13_1486 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2290-2290"];
m13_1488 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2293-2293"];
m13_1490 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonConvertTest.cs", label="Assert.IsFalse(reader.Read())", span="2296-2296"];
m13_1489 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2294-2294"];
m13_1482 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonConvertTest.cs", label="string json = @''/*comment*/ { /*comment*/\r\n        ''''Name'''': /*comment*/ ''''Apple'''' /*comment*/, /*comment*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment*/ [ /*comment*/\r\n          ''''Small'''', /*comment*/\r\n          ''''Medium'''' /*comment*/,\r\n          /*comment*/ ''''Large''''\r\n        /*comment*/ ] /*comment*/\r\n      } /*comment*/''", span="2272-2281"];
m13_1484 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonConvertTest.cs", label="int i = 0", span="2288-2288"];
m13_1485 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonConvertTest.cs", label="i < 26", span="2288-2288"];
m13_1487 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonConvertTest.cs", label="i++", span="2288-2288"];
m13_1491 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", span="2270-2270"];
m13_476 [cluster="lambda expression", file="JsonConvertTest.cs", label="new JsonTextReader (null)", span="788-788"];
m13_1076 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", span="1673-1673"];
m13_1078 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1679-1679"];
m13_1079 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonConvertTest.cs", label="reader.Read()", span="1681-1681"];
m13_1081 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonConvertTest.cs", label="reader.Read()", span="1684-1684"];
m13_1083 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonConvertTest.cs", label="reader.Read()", span="1687-1687"];
m13_1080 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1682-1682"];
m13_1082 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1685-1685"];
m13_1084 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="1688-1688"];
m13_1085 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, @''Invalid character after parsing property name. Expected ':' but got: ''''. Path 'A', line 3, position 9.'')", span="1690-1690"];
m13_1077 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonConvertTest.cs", label="string json = @''{\r\n    ''''A'''' : true,\r\n    ''''B'''' ''''''", span="1675-1677"];
m13_1086 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", span="1673-1673"];
m13_92 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", color=green, community=0, file="JsonConvertTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", prediction=288, span="187-187"];
m13_472 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="valueTicks = (valueTicks/10000)*10000", span="742-742"];
m13_473 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="Assert.AreEqual(valueTicks, parsedTicks)", span="744-744"];
m13_474 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="return date.Trim('''');", span="748-748"];
m13_1888 [cluster="System.Convert.ToDouble(string, System.IFormatProvider)", file="JsonConvertTest.cs", label="Entry System.Convert.ToDouble(string, System.IFormatProvider)", span="0-0"];
m13_477 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="788-788"];
m13_492 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", span="814-814"];
m13_493 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonConvertTest.cs", label="int valueCount = 10000", span="816-816"];
m13_576 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", span="943-943"];
m13_1633 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", span="2513-2513"];
m13_1635 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2516-2516"];
m13_1634 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonConvertTest.cs", label="string json = ''new Date,()''", span="2515-2515"];
m13_1636 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''Unexpected character while parsing constructor: ,. Path '', line 1, position 8.'')", span="2518-2518"];
m13_1637 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", span="2513-2513"];
m13_288 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", span="494-494"];
m13_258 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.111'', JsonConvert.ToString(1.111))", span="462-462"];
m13_1470 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", span="2240-2240"];
m13_1472 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2255-2255"];
m13_1475 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonConvertTest.cs", label="reader.Read()", span="2262-2262"];
m13_1477 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2265-2265"];
m13_1478 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonConvertTest.cs", label="Assert.AreEqual(new DateTime(631136448000000000), reader.Value)", span="2266-2266"];
m13_1471 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonConvertTest.cs", label="string json = @''[\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  },\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  }\r\n]''", span="2242-2253"];
m13_1473 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonConvertTest.cs", label="int i = 0", span="2260-2260"];
m13_1474 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonConvertTest.cs", label="i < 13", span="2260-2260"];
m13_1476 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonConvertTest.cs", label="i++", span="2260-2260"];
m13_1479 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", span="2240-2240"];
m13_235 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="423-433"];
m13_237 [cluster="lambda expression", file="JsonConvertTest.cs", label="string serialized = JsonConvert.SerializeObject(orig)", span="427-427"];
m13_238 [cluster="lambda expression", file="JsonConvertTest.cs", label="serialized = serialized.Replace(@''\'''''', ''\'''')", span="430-430"];
m13_236 [cluster="lambda expression", file="JsonConvertTest.cs", label="string orig = @''this is a string ''''that has quotes'''' ''", span="425-425"];
m13_239 [cluster="lambda expression", file="JsonConvertTest.cs", label="JsonConvert.DeserializeObject<string>(serialized)", span="432-432"];
m13_240 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="423-433"];
m13_241 [cluster="string.Replace(string, string)", file="JsonConvertTest.cs", label="Entry string.Replace(string, string)", span="0-0"];
m13_800 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", span="1296-1296"];
m13_802 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1320-1320"];
m13_803 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonConvertTest.cs", label="reader.Read()", span="1321-1321"];
m13_801 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonConvertTest.cs", label="string json = @''[\r\n  true,\r\n  {\r\n    ''''integer'''': 99,\r\n    ''''string'''': ''''how now brown cow?'''',\r\n    ''''array'''': [\r\n      0,\r\n      1,\r\n      2,\r\n      3,\r\n      4,\r\n      {\r\n        ''''decimal'''': 990.00990099\r\n      },\r\n      5\r\n    ]\r\n  },\r\n  ''''This is a string.'''',\r\n  null,\r\n  null\r\n]''", span="1298-1318"];
m13_804 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", span="1296-1296"];
m13_2030 [cluster="System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", file="JsonConvertTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", span="0-0"];
m13_230 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonConvertTest.cs", label="Assert.AreEqual(''\ufffd\ufffd\ufffd'', ReadString(''\udc00\ud800\ud800''))", span="398-398"];
m13_283 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DecimalToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.01'', JsonConvert.ToString(1.01m))", span="489-489"];
m13_1012 [cluster="System.Convert.ToChar(string)", file="JsonConvertTest.cs", label="Entry System.Convert.ToChar(string)", span="0-0"];
m13_669 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", span="1083-1083"];
m13_670 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonConvertTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''[  ''))", span="1085-1085"];
m13_673 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1089-1089"];
m13_671 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1086-1086"];
m13_672 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonConvertTest.cs", label="Assert.IsNull(reader.ReadAsBytes())", span="1088-1088"];
m13_674 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", span="1083-1083"];
m13_1618 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", span="2492-2492"];
m13_1619 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''true/''))", span="2494-2494"];
m13_1620 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing boolean value. Path '', line 1, position 4.'')", span="2496-2496"];
m13_1621 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", span="2492-2492"];
m13_1098 [cluster="Unk.IsNotNull", file="JsonConvertTest.cs", label="Entry Unk.IsNotNull", span=""];
m13_1139 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", span="1764-1764"];
m13_1141 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonConvertTest.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1767-1767"];
m13_1140 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonConvertTest.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1766-1766"];
m13_1142 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonConvertTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="1769-1769"];
m13_1156 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonConvertTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="1787-1787"];
m13_1158 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonConvertTest.cs", label="Assert.IsFalse(jsonReader.Read())", span="1790-1790"];
m13_1143 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1770-1770"];
m13_1145 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1773-1773"];
m13_1146 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1774-1774"];
m13_1147 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonConvertTest.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="1775-1775"];
m13_1149 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1778-1778"];
m13_1150 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1779-1779"];
m13_1151 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonConvertTest.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="1780-1780"];
m13_1153 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1783-1783"];
m13_1154 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1784-1784"];
m13_1155 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonConvertTest.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="1785-1785"];
m13_1157 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1788-1788"];
m13_1144 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonConvertTest.cs", label="jsonReader.ReadAsInt32()", span="1772-1772"];
m13_1148 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonConvertTest.cs", label="jsonReader.ReadAsInt32()", span="1777-1777"];
m13_1152 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonConvertTest.cs", label="jsonReader.ReadAsInt32()", span="1782-1782"];
m13_1159 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", span="1764-1764"];
m13_960 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="940-940"];
m13_1277 [cluster="System.TimeSpan.FromHours(double)", file="JsonConvertTest.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m13_1261 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", span="1943-1943"];
m13_1263 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1947-1947"];
m13_1264 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1949-1949"];
m13_1266 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1952-1952"];
m13_1272 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1960-1960"];
m13_1265 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1950-1950"];
m13_1267 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1953-1953"];
m13_1269 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="1956-1956"];
m13_1270 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="1957-1957"];
m13_1271 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonConvertTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="1958-1958"];
m13_1273 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1961-1961"];
m13_1262 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonConvertTest.cs", label="string json = ''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}''", span="1945-1945"];
m13_1268 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonConvertTest.cs", label="reader.ReadAsDateTimeOffset()", span="1955-1955"];
m13_1274 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", span="1943-1943"];
m13_61 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_CreateWithSettings()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_CreateWithSettings()", span="150-150"];
m13_1198 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", span="1849-1849"];
m13_1199 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1851-1851"];
m13_1200 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Error reading bytes. Unexpected token: StartConstructor. Path '', line 1, position 9.'')", span="1853-1853"];
m13_1201 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", span="1849-1849"];
m13_282 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DecimalToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.0'', JsonConvert.ToString(1m))", span="488-488"];
m13_2112 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", span="3229-3229"];
m13_959 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="819-819"];
m13_1000 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", span="1562-1562"];
m13_1002 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1566-1566"];
m13_1003 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonConvertTest.cs", label="reader.Read()", span="1571-1571"];
m13_1005 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonConvertTest.cs", label="reader.Read()", span="1574-1574"];
m13_1007 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonConvertTest.cs", label="reader.Read()", span="1577-1577"];
m13_1009 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonConvertTest.cs", label="reader.Read()", span="1580-1580"];
m13_1004 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1572-1572"];
m13_1006 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonConvertTest.cs", label="Assert.AreEqual(''<'', reader.Value)", span="1575-1575"];
m13_1008 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonConvertTest.cs", label="Assert.AreEqual(24352, Convert.ToInt32(Convert.ToChar((string)reader.Value)))", span="1578-1578"];
m13_1010 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1581-1581"];
m13_1001 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonConvertTest.cs", label="string json = @''[''''\u003c'''',''''\u5f20'''']''", span="1564-1564"];
m13_1011 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", span="1562-1562"];
m13_1090 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", span="1694-1694"];
m13_1092 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(s)", span="1697-1697"];
m13_1091 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonConvertTest.cs", label="StringReader s = new StringReader(@''''''SGVsbG8gd29ybGQu'''''')", span="1696-1696"];
m13_1096 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonConvertTest.cs", label="Assert.AreEqual(''Hello world.'', text)", span="1703-1703"];
m13_1093 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonConvertTest.cs", label="byte[] data = reader.ReadAsBytes()", span="1699-1699"];
m13_1095 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonConvertTest.cs", label="string text = Encoding.UTF8.GetString(data, 0, data.Length)", span="1702-1702"];
m13_1094 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonConvertTest.cs", label="Assert.IsNotNull(data)", span="1700-1700"];
m13_1097 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", span="1694-1694"];
m13_221 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = ''I am a string''", span="409-409"];
m13_222 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''I am a string'''''', JsonConvert.ToString(value))", span="410-410"];
m13_223 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = true", span="412-412"];
m13_224 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''true'', JsonConvert.ToString(value))", span="413-413"];
m13_225 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = 'c'", span="415-415"];
m13_226 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''c'''''', JsonConvert.ToString(value))", span="416-416"];
m13_227 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", span="350-350"];
m13_228 [cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JsonConvertTest.cs", label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0"];
m13_231 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling)", span="145-145"];
m13_232 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestInvalidStrings()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.TestInvalidStrings()", span="420-420"];
m13_233 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestInvalidStrings()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Additional text encountered after finished reading JSON content: t. Path '', line 1, position 19.'',\r\n      () =>\r\n      {\r\n        string orig = @''this is a string ''''that has quotes'''' '';\r\n\r\n        string serialized = JsonConvert.SerializeObject(orig);\r\n\r\n        // *** Make string invalid by stripping \'' \''\r\n        serialized = serialized.Replace(@''\'''''', ''\'''');\r\n\r\n        JsonConvert.DeserializeObject<string>(serialized);\r\n      })", span="422-433"];
m13_234 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestInvalidStrings()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.TestInvalidStrings()", span="420-420"];
m13_254 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonConvertTest.cs", label="reader.Close()", span="431-431"];
m13_310 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2000-01-01T01:01:01'' + GetOffset(year2000local, DateFormatHandling.IsoDateFormat), result.IsoDateLocal)", span="525-525"];
m13_312 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(localToUtcDate, result.IsoDateUtc)", span="527-527"];
m13_313 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(year2000local) + GetOffset(year2000local, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateRoundtrip)", span="528-528"];
m13_311 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2000-01-01T01:01:01'', result.IsoDateUnspecified)", span="526-526"];
m13_314 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(year2000local) + GetOffset(year2000local, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateLocal)", span="529-529"];
m13_79 [cluster="lambda expression", color=green, community=0, file="JsonConvertTest.cs", label="jsonTextReader.ReadAsInt32()", prediction=284, span="163-163"];
m13_1625 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", span="2500-2500"];
m13_1627 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2503-2503"];
m13_1628 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2505-2505"];
m13_1630 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2508-2508"];
m13_1629 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2506-2506"];
m13_1631 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2509-2509"];
m13_1626 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonConvertTest.cs", label="string json = ''new Date()''", span="2502-2502"];
m13_1632 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", span="2500-2500"];
m13_255 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonConvertTest.cs", label="Assert.IsTrue(ms.CanRead)", span="432-432"];
m13_256 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", span="418-418"];
m13_257 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.11'', JsonConvert.ToString(1.11))", span="461-461"];
m13_259 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", span="436-436"];
m13_260 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonConvertTest.cs", label="string input = @''{\r\n''''matches'''' : [\r\n{''''t'''':''''C'''', ''''n'''':''''Citigroup Inc.'''', ''''e'''':''''NYSE'''', ''''id'''':''''662713''''}\r\n,{''''t'''':''''CHL'''', ''''n'''':''''China Mobile Ltd. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''660998''''}\r\n,{''''t'''':''''PTR'''', ''''n'''':''''PetroChina Company Limited (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''664536''''}\r\n,{''''t'''':''''RIO'''', ''''n'''':''''Companhia Vale do Rio Doce (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''671472''''}\r\n,{''''t'''':''''RIOPR'''', ''''n'''':''''Companhia Vale do Rio Doce (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''3512643''''}\r\n,{''''t'''':''''CSCO'''', ''''n'''':''''Cisco Systems, Inc.'''', ''''e'''':''''NASDAQ'''', ''''id'''':''''99624''''}\r\n,{''''t'''':''''CVX'''', ''''n'''':''''Chevron Corporation'''', ''''e'''':''''NYSE'''', ''''id'''':''''667226''''}\r\n,{''''t'''':''''TM'''', ''''n'''':''''Toyota Motor Corporation (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''655880''''}\r\n,{''''t'''':''''JPM'''', ''''n'''':''''JPMorgan Chase \\x26 Co.'''', ''''e'''':''''NYSE'''', ''''id'''':''''665639''''}\r\n,{''''t'''':''''COP'''', ''''n'''':''''ConocoPhillips'''', ''''e'''':''''NYSE'''', ''''id'''':''''1691168''''}\r\n,{''''t'''':''''LFC'''', ''''n'''':''''China Life Insurance Company Ltd. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''688679''''}\r\n,{''''t'''':''''NOK'''', ''''n'''':''''Nokia Corporation (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''657729''''}\r\n,{''''t'''':''''KO'''', ''''n'''':''''The Coca-Cola Company'''', ''''e'''':''''NYSE'''', ''''id'''':''''6550''''}\r\n,{''''t'''':''''VZ'''', ''''n'''':''''Verizon Communications Inc.'''', ''''e'''':''''NYSE'''', ''''id'''':''''664887''''}\r\n,{''''t'''':''''AMX'''', ''''n'''':''''America Movil S.A.B de C.V. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''665834''''}],\r\n''''all'''' : false\r\n}\r\n''", span="438-457"];
m13_261 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonConvertTest.cs", label="JsonReader jsonReader = new JsonTextReader(new StringReader(input))", span="459-459"];
m13_262 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonConvertTest.cs", label="jsonReader.Read()", span="461-461"];
m13_263 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", span="436-436"];
m13_265 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", span="468-468"];
m13_266 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonConvertTest.cs", label="string json = @''{''''DefaultConverter'''':new Date(0, ''''hi''''),''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}''", span="470-470"];
m13_267 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonConvertTest.cs", label="JsonReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="472-472"];
m13_268 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="474-474"];
m13_269 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="475-475"];
m13_270 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="476-476"];
m13_51 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", color=green, community=0, file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", prediction=290, span="136-136"];
m13_173 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="301-301"];
m13_174 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", span="270-270"];
m13_271 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="477-477"];
m13_479 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="string date = Write(value, converter)", span="753-753"];
m13_480 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="Console.WriteLine(converter.GetType().Name + '': '' + date)", span="755-755"];
m13_481 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="T parsed = Read<T>(date, converter)", span="757-757"];
m13_1501 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", span="2317-2317"];
m13_1503 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2320-2320"];
m13_1504 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2322-2322"];
m13_1507 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2326-2326"];
m13_1505 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonConvertTest.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2323-2323"];
m13_1506 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2324-2324"];
m13_1508 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2327-2327"];
m13_1502 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonConvertTest.cs", label="string json = ''new Date\n()''", span="2319-2319"];
m13_1509 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", span="2317-2317"];
m13_607 [cluster="Unk.ToString", file="JsonConvertTest.cs", label="Entry Unk.ToString", span=""];
m13_958 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="828-828"];
m13_88 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", color=green, community=0, file="JsonConvertTest.cs", label="string json = @''{\r\n    ChildId: '123'\r\n}''", prediction=291, span="178-180"];
m13_19 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="74-77"];
m13_272 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DecimalToString()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.DecimalToString()", span="477-477"];
m13_274 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DecimalToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.11'', JsonConvert.ToString(1.11m))", span="480-480"];
m13_276 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DecimalToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.1111'', JsonConvert.ToString(1.1111m))", span="482-482"];
m13_278 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DecimalToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.111111'', JsonConvert.ToString(1.111111m))", span="484-484"];
m13_280 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DecimalToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''-1.0'', JsonConvert.ToString(-1.0m))", span="486-486"];
m13_273 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DecimalToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.1'', JsonConvert.ToString(1.1m))", span="479-479"];
m13_275 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DecimalToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.111'', JsonConvert.ToString(1.111m))", span="481-481"];
m13_277 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DecimalToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.11111'', JsonConvert.ToString(1.11111m))", span="483-483"];
m13_279 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DecimalToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.0'', JsonConvert.ToString(1.0m))", span="485-485"];
m13_281 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DecimalToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''-1.0'', JsonConvert.ToString(-1m))", span="487-487"];
m13_1420 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", span="2171-2171"];
m13_1421 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nullz''))", span="2173-2173"];
m13_1422 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing null value. Path '', line 1, position 4.'')", span="2175-2175"];
m13_1423 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", span="2171-2171"];
m13_1276 [cluster="System.DateTime.DateTime(int, int, int)", file="JsonConvertTest.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m13_605 [cluster="BigInteger.cstr", file="JsonConvertTest.cs", label="Entry BigInteger.cstr", span=""];
m13_552 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="908-908"];
m13_475 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="788-788"];
m13_953 [cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", file="JsonConvertTest.cs", label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", span="0-0"];
m13_63 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", color=green, community=0, file="JsonConvertTest.cs", label="string json = @''[\r\n  333333333333333333333333333333333333333,\r\n  3.3,\r\n  ,\r\n  0f\r\n]''", prediction=292, span="149-154"];
m13_66 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", color=green, community=0, file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonTextReader.TokenType)", prediction=293, span="159-159"];
m13_70 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", color=green, community=0, file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''Input string '0f' is not a valid integer. Path '[3]', line 5, position 5.'')", prediction=294, span="167-167"];
m13_67 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", color=green, community=0, file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''JSON integer 333333333333333333333333333333333333333 is too large or small for an Int32. Path '[0]', line 2, position 42.'')", prediction=274, span="161-161"];
m13_69 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", color=green, community=0, file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''Error reading integer. Unexpected token: Undefined. Path '[2]', line 4, position 3.'')", prediction=296, span="165-165"];
m13_68 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", color=green, community=0, file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''Input string '3.3' is not a valid integer. Path '[1]', line 3, position 6.'')", prediction=297, span="163-163"];
m13_71 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", color=green, community=0, file="JsonConvertTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", prediction=298, span="169-169"];
m13_72 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", color=green, community=0, file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonTextReader.TokenType)", prediction=299, span="170-170"];
m13_73 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", color=green, community=0, file="JsonConvertTest.cs", label="Assert.IsFalse(jsonTextReader.Read())", prediction=300, span="172-172"];
m13_76 [cluster="lambda expression", color=green, community=0, file="JsonConvertTest.cs", label="jsonTextReader.ReadAsInt32()", prediction=284, span="161-161"];
m13_1890 [cluster="double.ToString(string)", file="JsonConvertTest.cs", label="Entry double.ToString(string)", span="0-0"];
m13_1578 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", span="2436-2436"];
m13_1580 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2439-2439"];
m13_1581 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing constructor. Path '', line 1, position 7.'')", span="2441-2441"];
m13_1579 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonConvertTest.cs", label="string json = ''new Dat''", span="2438-2438"];
m13_1582 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", span="2436-2436"];
m13_503 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="828-828"];
m13_505 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonConvertTest.cs", label="int i = 0", span="830-830"];
m13_504 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="829-829"];
m13_506 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonConvertTest.cs", label="i < valueCount", span="830-830"];
m13_1798 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", span="2774-2774"];
m13_1800 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2778-2778"];
m13_1801 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing comment. Path '', line 1, position 1.'')", span="2780-2780"];
m13_1799 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonConvertTest.cs", label="string json = @''/''", span="2776-2776"];
m13_1802 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", span="2774-2774"];
m13_106 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", color=green, community=0, file="JsonConvertTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", prediction=285, span="216-216"];
m13_107 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="217-217"];
m13_108 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonConvertTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="219-219"];
m13_109 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="220-220"];
m13_985 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", span="1539-1539"];
m13_988 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1544-1544"];
m13_989 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonConvertTest.cs", label="reader.Read()", span="1546-1546"];
m13_991 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonConvertTest.cs", label="reader.Read()", span="1549-1549"];
m13_995 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1554-1554"];
m13_997 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonConvertTest.cs", label="Assert.IsFalse(reader.Read())", span="1557-1557"];
m13_990 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1547-1547"];
m13_992 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1550-1550"];
m13_993 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="1551-1551"];
m13_994 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonConvertTest.cs", label="Assert.AreEqual(20000, reader.Value.ToString().Length)", span="1552-1552"];
m13_996 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1555-1555"];
m13_998 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1558-1558"];
m13_987 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonConvertTest.cs", label="string json = @''['''''' + new string(' ', length) + @'''''']''", span="1542-1542"];
m13_986 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonConvertTest.cs", label="int length = 20000", span="1541-1541"];
m13_999 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", span="1539-1539"];
m13_967 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", span="1506-1506"];
m13_970 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonConvertTest.cs", label="JsonReader jsonReader = new JsonTextReader(sr)", span="1516-1516"];
m13_969 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonConvertTest.cs", label="StringReader sr = new StringReader(input)", span="1514-1514"];
m13_972 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonConvertTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartArray)", span="1519-1519"];
m13_974 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonConvertTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1522-1522"];
m13_975 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonConvertTest.cs", label="Assert.AreEqual(jsonReader.Value, double.NaN)", span="1523-1523"];
m13_977 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonConvertTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1526-1526"];
m13_978 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonConvertTest.cs", label="Assert.AreEqual(jsonReader.Value, double.PositiveInfinity)", span="1527-1527"];
m13_980 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonConvertTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1530-1530"];
m13_981 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonConvertTest.cs", label="Assert.AreEqual(jsonReader.Value, double.NegativeInfinity)", span="1531-1531"];
m13_983 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonConvertTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndArray)", span="1534-1534"];
m13_971 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonConvertTest.cs", label="jsonReader.Read()", span="1518-1518"];
m13_973 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonConvertTest.cs", label="jsonReader.Read()", span="1521-1521"];
m13_976 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonConvertTest.cs", label="jsonReader.Read()", span="1525-1525"];
m13_979 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonConvertTest.cs", label="jsonReader.Read()", span="1529-1529"];
m13_982 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonConvertTest.cs", label="jsonReader.Read()", span="1533-1533"];
m13_968 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonConvertTest.cs", label="string input = @''[\r\n  NaN,\r\n  Infinity,\r\n  -Infinity\r\n]''", span="1508-1512"];
m13_984 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", span="1506-1506"];
m13_518 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''[\r\n  1,\r\n  2,\r\n  3,\r\n  4,\r\n  5\r\n]'', task.Result)", span="812-818"];
m13_55 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", color=green, community=0, file="JsonConvertTest.cs", label="Assert.IsFalse(jsonTextReader.Read())", prediction=303, span="143-143"];
m13_547 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonConvertTest.cs", label="Assert.AreEqual(''\0sd\0f\0'', reader.Value)", span="881-881"];
m13_27 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonConvertTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="101-101"];
m13_621 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", span="1006-1006"];
m13_623 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1023-1023"];
m13_626 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1030-1030"];
m13_628 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1033-1033"];
m13_629 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1034-1034"];
m13_630 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonConvertTest.cs", label="Assert.AreEqual(''type'', reader.Value)", span="1035-1035"];
m13_622 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonConvertTest.cs", label="string json = @''\r\n{\r\n  ''''description'''': ''''A person'''',\r\n  ''''type'''': ''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''name'''': {''''type'''':''''string''''},\r\n    ''''hobbies'''': {\r\n      ''''type'''': ''''array'''',\r\n      ''''items'''': {''''type'''':''''string''''}\r\n    }\r\n  }\r\n}\r\n''", span="1008-1021"];
m13_624 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonConvertTest.cs", label="int i = 0", span="1028-1028"];
m13_625 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonConvertTest.cs", label="i < 14", span="1028-1028"];
m13_627 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonConvertTest.cs", label="i++", span="1028-1028"];
m13_631 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", span="1006-1006"];
m13_1168 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", span="1804-1804"];
m13_1169 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1806-1806"];
m13_1171 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1809-1809"];
m13_1170 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonConvertTest.cs", label="Assert.IsNull(reader.ReadAsDecimal())", span="1808-1808"];
m13_1172 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", span="1804-1804"];
m13_1278 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", span="1965-1965"];
m13_1280 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1969-1969"];
m13_1281 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1971-1971"];
m13_1283 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1974-1974"];
m13_1289 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1982-1982"];
m13_1282 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1972-1972"];
m13_1284 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1975-1975"];
m13_1286 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="1978-1978"];
m13_1287 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="1979-1979"];
m13_1288 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonConvertTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6)), reader.Value)", span="1980-1980"];
m13_1290 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1983-1983"];
m13_1279 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonConvertTest.cs", label="string json = @''{''''Offset'''':''''\/Date(946706400000-0600)\/''''}''", span="1967-1967"];
m13_1285 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonConvertTest.cs", label="reader.ReadAsDateTimeOffset()", span="1977-1977"];
m13_1291 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", span="1965-1965"];
m13_1178 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", span="1822-1822"];
m13_1179 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{''))", span="1824-1824"];
m13_1180 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected end when reading bytes. Path '', line 1, position 1.'')", span="1826-1826"];
m13_1181 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", span="1822-1822"];
m13_1292 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", span="1987-1987"];
m13_1294 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1991-1991"];
m13_1295 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1993-1993"];
m13_1297 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1996-1996"];
m13_1296 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1994-1994"];
m13_1298 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1997-1997"];
m13_1299 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTimeOffset(); }, ''Could not convert string to DateTimeOffset: blablahbla. Path 'Offset', line 1, position 22.'')", span="1999-1999"];
m13_1293 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonConvertTest.cs", label="string json = @''{''''Offset'''':''''blablahbla''''}''", span="1989-1989"];
m13_1300 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", span="1987-1987"];
m13_171 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="298-298"];
m13_482 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="800-800"];
m13_484 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="800-800"];
m13_485 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", span="804-804"];
m13_483 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.Read()", span="800-800"];
m13_486 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonConvertTest.cs", label="string s = new string('a', 10000)", span="806-806"];
m13_487 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonConvertTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(''''' + s + '''''))", span="807-807"];
m13_488 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonConvertTest.cs", label="reader.Read()", span="808-808"];
m13_16 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="570-570"];
m13_17 [cluster="lambda expression", color=green, community=0, file="JsonConvertTest.cs", label="Entry lambda expression", prediction=274, span="74-77"];
m13_1594 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", span="2454-2454"];
m13_1596 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2457-2457"];
m13_1597 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2459-2459"];
m13_1598 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2460-2460"];
m13_1599 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2461-2461"];
m13_1600 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonConvertTest.cs", label="Assert.IsFalse(reader.Read())", span="2462-2462"];
m13_1595 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonConvertTest.cs", label="string json = ''{hi:1, ''", span="2456-2456"];
m13_1601 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", span="2454-2454"];
m13_1638 [cluster="Unk.>", file="JsonConvertTest.cs", label="Entry Unk.>", span=""];
m13_1334 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", span="2047-2047"];
m13_1336 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2051-2051"];
m13_1337 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2053-2053"];
m13_1339 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2056-2056"];
m13_1345 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2064-2064"];
m13_1338 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2054-2054"];
m13_1340 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2057-2057"];
m13_1342 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2060-2060"];
m13_1343 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2061-2061"];
m13_1344 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonConvertTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2011, 8, 1, 21, 25, 0, DateTimeKind.Utc), TimeSpan.Zero), reader.Value)", span="2062-2062"];
m13_1346 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2065-2065"];
m13_1335 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonConvertTest.cs", label="string json = @''{''''Offset'''':''''2011-08-01T21:25Z''''}''", span="2049-2049"];
m13_1341 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonConvertTest.cs", label="reader.ReadAsDateTimeOffset()", span="2059-2059"];
m13_1347 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", span="2047-2047"];
m13_1382 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", span="2120-2120"];
m13_1384 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2124-2124"];
m13_1385 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2126-2126"];
m13_1387 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2129-2129"];
m13_1386 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2127-2127"];
m13_1388 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2130-2130"];
m13_1390 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2133-2133"];
m13_1391 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2134-2134"];
m13_1392 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonConvertTest.cs", label="Assert.AreEqual(1m, reader.Value)", span="2135-2135"];
m13_1383 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonConvertTest.cs", label="string json = @''{''''Name'''':1}''", span="2122-2122"];
m13_1389 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonConvertTest.cs", label="reader.ReadAsDecimal()", span="2132-2132"];
m13_1393 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", span="2120-2120"];
m13_1492 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", span="2300-2300"];
m13_1494 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2303-2303"];
m13_1495 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2308-2308"];
m13_1498 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2312-2312"];
m13_1496 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonConvertTest.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2309-2309"];
m13_1497 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2310-2310"];
m13_1499 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2313-2313"];
m13_1493 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonConvertTest.cs", label="string json = ''new Date\0()''", span="2302-2302"];
m13_1500 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", span="2300-2300"];
m13_102 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonConvertTest.cs", label="string json = @''{\r\n    ChildId: '\/Date(9467082_PIE_340000-0631)\/'\r\n}''", span="207-209"];
m13_103 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonConvertTest.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="211-211"];
m13_104 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", color=green, community=0, file="JsonConvertTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", prediction=305, span="213-213"];
m13_105 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", color=green, community=0, file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", prediction=285, span="214-214"];
m13_507 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="832-832"];
m13_560 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", span="885-885"];
m13_562 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", file="JsonConvertTest.cs", label="int depth = 900", span="889-889"];
m13_563 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", file="JsonConvertTest.cs", label="int i = 0", span="890-890"];
m13_564 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", file="JsonConvertTest.cs", label="i < depth", span="890-890"];
m13_568 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", file="JsonConvertTest.cs", label="int i = 0", span="897-897"];
m13_561 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", file="JsonConvertTest.cs", label="StringBuilder sb = new StringBuilder()", span="887-887"];
m13_567 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", file="JsonConvertTest.cs", label="sb.Append(''{***}'')", span="896-896"];
m13_565 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", file="JsonConvertTest.cs", label="sb.Append(''{'A':'')", span="892-892"];
m13_569 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", file="JsonConvertTest.cs", label="i < depth", span="897-897"];
m13_566 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", file="JsonConvertTest.cs", label="i++", span="890-890"];
m13_570 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", file="JsonConvertTest.cs", label="sb.Append(''}'')", span="899-899"];
m13_1441 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", span="2195-2195"];
m13_1443 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2199-2199"];
m13_1444 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2201-2201"];
m13_1446 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2204-2204"];
m13_1452 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2212-2212"];
m13_1445 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2202-2202"];
m13_1447 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2205-2205"];
m13_1449 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2208-2208"];
m13_1450 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2209-2209"];
m13_1453 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2213-2213"];
m13_1451 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonConvertTest.cs", label="Assert.AreEqual(-79228162514264300000000000000m, d)", span="2210-2210"];
m13_1442 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonConvertTest.cs", label="string json = @''{''''decimal'''':-7.92281625142643E+28}''", span="2197-2197"];
m13_1448 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonConvertTest.cs", label="decimal? d = reader.ReadAsDecimal()", span="2207-2207"];
m13_1454 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", span="2195-2195"];
m13_1836 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", span="2834-2834"];
m13_1837 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonConvertTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{}}''))", span="2836-2836"];
m13_1838 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2837-2837"];
m13_1839 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2838-2838"];
m13_1840 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Additional text encountered after finished reading JSON content: }. Path '', line 1, position 2.'')", span="2840-2840"];
m13_1841 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", span="2834-2834"];
m13_1935 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", span="2974-2974"];
m13_1937 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2978-2978"];
m13_1938 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2980-2980"];
m13_1939 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2982-2982"];
m13_1941 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2985-2985"];
m13_1944 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2989-2989"];
m13_1947 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2993-2993"];
m13_1950 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2997-2997"];
m13_1953 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="3001-3001"];
m13_1956 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="3005-3005"];
m13_1959 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="3009-3009"];
m13_1962 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="3013-3013"];
m13_1965 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="3017-3017"];
m13_1968 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="3021-3021"];
m13_1971 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="3025-3025"];
m13_1974 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="3029-3029"];
m13_1940 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Assert.AreEqual(false, reader.Value)", span="2983-2983"];
m13_1942 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2986-2986"];
m13_1943 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Assert.AreEqual(true, reader.Value)", span="2987-2987"];
m13_1945 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2990-2990"];
m13_1946 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Assert.AreEqual(true, reader.Value)", span="2991-2991"];
m13_1948 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2994-2994"];
m13_1949 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Assert.AreEqual(false, reader.Value)", span="2995-2995"];
m13_1951 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2998-2998"];
m13_1952 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Assert.AreEqual(''test!'', reader.Value)", span="2999-2999"];
m13_1954 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3002-3002"];
m13_1955 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Assert.AreEqual(1.11d, reader.Value)", span="3003-3003"];
m13_1957 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3006-3006"];
m13_1958 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Assert.AreEqual(0d, reader.Value)", span="3007-3007"];
m13_1960 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3010-3010"];
m13_1961 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Assert.AreEqual(0d, reader.Value)", span="3011-3011"];
m13_1963 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3014-3014"];
m13_1964 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Assert.AreEqual(0.0000025d, reader.Value)", span="3015-3015"];
m13_1966 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3018-3018"];
m13_1967 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Assert.AreEqual(3000000000d, reader.Value)", span="3019-3019"];
m13_1969 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3022-3022"];
m13_1970 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="3023-3023"];
m13_1972 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="3026-3026"];
m13_1973 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Assert.AreEqual(reader.Value, ''Purple\r \n monkey's:\tdishwasher'')", span="3027-3027"];
m13_1936 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="string json = ''[false, true, true, false, 'test!', 1.11, 0e-10, 0E-10, 0.25e-5, 0.3e10, 6.0221418e23, 'Purple\\r \\n monkey\\'s:\\tdishwasher']''", span="2976-2976"];
m13_1975 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", span="2974-2974"];
m13_501 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonConvertTest.cs", label="writer.WriteEndArray()", span="824-824"];
m13_187 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = 1", span="354-354"];
m13_189 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = 1.1", span="357-357"];
m13_190 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.1'', JsonConvert.ToString(value))", span="358-358"];
m13_192 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.1'', JsonConvert.ToString(value))", span="361-361"];
m13_194 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.1'', JsonConvert.ToString(value))", span="364-364"];
m13_196 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1'', JsonConvert.ToString(value))", span="367-367"];
m13_198 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1'', JsonConvert.ToString(value))", span="370-370"];
m13_200 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1'', JsonConvert.ToString(value))", span="373-373"];
m13_203 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = (ushort)1", span="378-378"];
m13_191 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = 1.1m", span="360-360"];
m13_193 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = (float)1.1", span="363-363"];
m13_195 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = (short)1", span="366-366"];
m13_197 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = (long)1", span="369-369"];
m13_199 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = (byte)1", span="372-372"];
m13_201 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = (uint)1", span="375-375"];
m13_202 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1'', JsonConvert.ToString(value))", span="376-376"];
m13_204 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1'', JsonConvert.ToString(value))", span="379-379"];
m13_205 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = (sbyte)1", span="381-381"];
m13_188 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1'', JsonConvert.ToString(value))", span="355-355"];
m13_206 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1'', JsonConvert.ToString(value))", span="382-382"];
m13_500 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonConvertTest.cs", label="i++", span="820-820"];
m13_729 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", span="1193-1193"];
m13_730 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonConvertTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{'hi\r\nbye':1}''))", span="1195-1195"];
m13_733 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1198-1198"];
m13_734 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonConvertTest.cs", label="Assert.AreEqual(''hi\r\nbye'', reader.Value)", span="1199-1199"];
m13_736 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1201-1201"];
m13_737 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonConvertTest.cs", label="Assert.AreEqual(1L, reader.Value)", span="1202-1202"];
m13_739 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1204-1204"];
m13_731 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1196-1196"];
m13_732 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1197-1197"];
m13_735 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1200-1200"];
m13_738 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1203-1203"];
m13_740 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonConvertTest.cs", label="Assert.IsFalse(reader.Read())", span="1205-1205"];
m13_741 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", span="1193-1193"];
m13_1191 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", span="1841-1841"];
m13_1192 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1843-1843"];
m13_1193 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDecimal(); }, ''Error reading decimal. Unexpected token: StartConstructor. Path '', line 1, position 9.'')", span="1845-1845"];
m13_1194 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", span="1841-1841"];
m13_1205 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", span="1858-1858"];
m13_1206 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1860-1860"];
m13_1207 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTimeOffset(); }, ''Error reading date. Unexpected token: StartConstructor. Path '', line 1, position 9.'')", span="1862-1862"];
m13_1208 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", span="1858-1858"];
m13_1173 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", span="1813-1813"];
m13_1174 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1815-1815"];
m13_1176 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1818-1818"];
m13_1175 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonConvertTest.cs", label="Assert.IsNull(reader.ReadAsBytes())", span="1817-1817"];
m13_1177 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", span="1813-1813"];
m13_1394 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", span="2139-2139"];
m13_1396 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2143-2143"];
m13_1397 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2145-2145"];
m13_1399 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2148-2148"];
m13_1398 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2146-2146"];
m13_1400 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2149-2149"];
m13_1401 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsInt32(); }, ''Input string '1.1' is not a valid integer. Path 'Name', line 1, position 12.'')", span="2151-2151"];
m13_1395 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonConvertTest.cs", label="string json = @''{''''Name'''': 1.1}''", span="2141-2141"];
m13_1402 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", span="2139-2139"];
m13_1365 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JsonConvertTest.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m13_1480 [cluster="System.DateTime.DateTime(long)", file="JsonConvertTest.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m13_242 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeValueObjects()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.DeserializeValueObjects()", span="437-437"];
m13_1455 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", span="2217-2217"];
m13_1457 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2221-2221"];
m13_1459 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2224-2224"];
m13_1461 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2227-2227"];
m13_1467 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2235-2235"];
m13_1460 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2225-2225"];
m13_1462 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2228-2228"];
m13_1464 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2231-2231"];
m13_1465 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2232-2232"];
m13_1468 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2236-2236"];
m13_1466 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonConvertTest.cs", label="Assert.AreEqual(9.99m, d)", span="2233-2233"];
m13_1456 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonConvertTest.cs", label="string json = @''{''''decimal'''':''''9,99''''}''", span="2219-2219"];
m13_1458 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonConvertTest.cs", label="reader.Culture = new CultureInfo(''fr-FR'')", span="2222-2222"];
m13_1463 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonConvertTest.cs", label="decimal? d = reader.ReadAsDecimal()", span="2230-2230"];
m13_1469 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", span="2217-2217"];
m13_243 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeValueObjects()", file="JsonConvertTest.cs", label="int i = JsonConvert.DeserializeObject<int>(''1'')", span="439-439"];
m13_245 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeValueObjects()", file="JsonConvertTest.cs", label="DateTimeOffset d = JsonConvert.DeserializeObject<DateTimeOffset>(@''''''\/Date(-59011455539000+0000)\/'''''')", span="443-443"];
m13_247 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeValueObjects()", file="JsonConvertTest.cs", label="bool b = JsonConvert.DeserializeObject<bool>(''true'')", span="447-447"];
m13_252 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeValueObjects()", file="JsonConvertTest.cs", label="Assert.AreEqual(null, u)", span="454-454"];
m13_248 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeValueObjects()", file="JsonConvertTest.cs", label="Assert.AreEqual(true, b)", span="448-448"];
m13_253 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeValueObjects()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.DeserializeValueObjects()", span="437-437"];
m13_250 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeValueObjects()", file="JsonConvertTest.cs", label="Assert.AreEqual(null, n)", span="451-451"];
m13_246 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeValueObjects()", file="JsonConvertTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)), d)", span="444-444"];
m13_249 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeValueObjects()", file="JsonConvertTest.cs", label="object n = JsonConvert.DeserializeObject<object>(''null'')", span="450-450"];
m13_251 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeValueObjects()", file="JsonConvertTest.cs", label="object u = JsonConvert.DeserializeObject<object>(''undefined'')", span="453-453"];
m13_1219 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", span="1878-1878"];
m13_1220 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1''))", span="1880-1880"];
m13_1221 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected end when reading bytes. Path '[0]', line 1, position 2.'')", span="1882-1882"];
m13_1222 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", span="1878-1878"];
m13_1528 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", span="2359-2359"];
m13_1529 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{'prop1':[1]} 1 2 ''''name'''' [][]null {}{} 1.1''))", span="2361-2361"];
m13_1531 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2364-2364"];
m13_1533 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2367-2367"];
m13_1535 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2370-2370"];
m13_1537 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2373-2373"];
m13_1539 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2376-2376"];
m13_1541 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2379-2379"];
m13_1543 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2382-2382"];
m13_1545 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2385-2385"];
m13_1547 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2388-2388"];
m13_1549 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2391-2391"];
m13_1551 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2394-2394"];
m13_1553 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2397-2397"];
m13_1555 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2400-2400"];
m13_1557 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2403-2403"];
m13_1559 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2406-2406"];
m13_1561 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2409-2409"];
m13_1563 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2412-2412"];
m13_1565 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2415-2415"];
m13_1567 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2418-2418"];
m13_1569 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.IsFalse(reader.Read())", span="2421-2421"];
m13_1532 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2365-2365"];
m13_1534 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2368-2368"];
m13_1536 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2371-2371"];
m13_1538 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2374-2374"];
m13_1540 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2377-2377"];
m13_1542 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2380-2380"];
m13_1544 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2383-2383"];
m13_1546 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2386-2386"];
m13_1548 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2389-2389"];
m13_1550 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2392-2392"];
m13_1552 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2395-2395"];
m13_1554 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2398-2398"];
m13_1556 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2401-2401"];
m13_1558 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2404-2404"];
m13_1560 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2407-2407"];
m13_1562 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2410-2410"];
m13_1564 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2413-2413"];
m13_1566 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2416-2416"];
m13_1568 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2419-2419"];
m13_1530 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="reader.SupportMultipleContent = true", span="2362-2362"];
m13_1570 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", span="2359-2359"];
m13_1806 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", span="2784-2784"];
m13_1808 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2788-2788"];
m13_1810 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2791-2791"];
m13_1811 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(8m, reader.Value)", span="2792-2792"];
m13_1807 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonConvertTest.cs", label="string json = @''010''", span="2786-2786"];
m13_1809 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonConvertTest.cs", label="reader.ReadAsDecimal()", span="2790-2790"];
m13_1812 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", span="2784-2784"];
m13_758 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", span="1229-1229"];
m13_761 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonConvertTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{num:1,data:''' + Convert.ToBase64String(helloWorldData) + @'''}''))", span="1234-1234"];
m13_763 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1236-1236"];
m13_766 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1239-1239"];
m13_770 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="1243-1243"];
m13_772 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1245-1245"];
m13_762 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1235-1235"];
m13_764 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1237-1237"];
m13_765 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1238-1238"];
m13_767 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1240-1240"];
m13_771 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1244-1244"];
m13_773 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonConvertTest.cs", label="Assert.IsFalse(reader.Read())", span="1247-1247"];
m13_760 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonConvertTest.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1232-1232"];
m13_768 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonConvertTest.cs", label="byte[] data = reader.ReadAsBytes()", span="1241-1241"];
m13_769 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonConvertTest.cs", label="CollectionAssert.AreEquivalent(helloWorldData, data)", span="1242-1242"];
m13_759 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonConvertTest.cs", label="string helloWorld = ''Hello world!''", span="1231-1231"];
m13_774 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", span="1229-1229"];
m13_592 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", span="965-965"];
m13_594 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="969-969"];
m13_600 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="977-977"];
m13_595 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonConvertTest.cs", label="reader.Read()", span="970-970"];
m13_601 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonConvertTest.cs", label="reader.Read()", span="978-978"];
m13_596 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="971-971"];
m13_602 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(BigInteger), reader.ValueType)", span="980-980"];
m13_593 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonConvertTest.cs", label="BigInteger i = new BigInteger(long.MaxValue)", span="967-967"];
m13_599 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonConvertTest.cs", label="BigInteger total = i + j", span="975-975"];
m13_597 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonConvertTest.cs", label="int j = 1", span="973-973"];
m13_603 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonConvertTest.cs", label="j++", span="973-973"];
m13_598 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonConvertTest.cs", label="j < 1000", span="973-973"];
m13_604 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", span="965-965"];
m13_244 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="JsonConvertTest.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m13_742 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", span="1209-1209"];
m13_745 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonConvertTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''[1,''' + Convert.ToBase64String(helloWorldData) + @''']''))", span="1214-1214"];
m13_747 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1216-1216"];
m13_749 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1218-1218"];
m13_752 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="1221-1221"];
m13_754 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1223-1223"];
m13_746 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1215-1215"];
m13_748 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1217-1217"];
m13_753 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1222-1222"];
m13_755 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonConvertTest.cs", label="Assert.IsFalse(reader.Read())", span="1225-1225"];
m13_744 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonConvertTest.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1212-1212"];
m13_750 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonConvertTest.cs", label="byte[] data = reader.ReadAsBytes()", span="1219-1219"];
m13_751 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonConvertTest.cs", label="CollectionAssert.AreEquivalent(helloWorldData, data)", span="1220-1220"];
m13_743 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonConvertTest.cs", label="string helloWorld = ''Hello world!''", span="1211-1211"];
m13_756 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", span="1209-1209"];
m13_1813 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", span="2796-2796"];
m13_1815 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2800-2800"];
m13_1817 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2803-2803"];
m13_1818 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(32m, reader.Value)", span="2804-2804"];
m13_1814 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonConvertTest.cs", label="string json = @''0x20''", span="2798-2798"];
m13_1816 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonConvertTest.cs", label="reader.ReadAsDecimal()", span="2802-2802"];
m13_1819 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", span="2796-2796"];
m13_644 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", span="1056-1056"];
m13_645 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonConvertTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\''))", span="1058-1058"];
m13_646 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unterminated string. Expected delimiter: '. Path '', line 1, position 3.'')", span="1060-1060"];
m13_647 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", span="1056-1056"];
m13_167 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="293-293"];
m13_849 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", span="1369-1369"];
m13_851 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1373-1373"];
m13_853 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(''-1.1''))", span="1376-1376"];
m13_855 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(''0.0''))", span="1379-1379"];
m13_857 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(''-0.0''))", span="1382-1382"];
m13_859 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1385-1385"];
m13_861 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1388-1388"];
m13_864 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1392-1392"];
m13_866 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(''''))", span="1395-1395"];
m13_868 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(''-''))", span="1398-1398"];
m13_852 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonConvertTest.cs", label="Assert.AreEqual(1.1m, reader.ReadAsDecimal())", span="1374-1374"];
m13_854 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonConvertTest.cs", label="Assert.AreEqual(-1.1m, reader.ReadAsDecimal())", span="1377-1377"];
m13_856 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonConvertTest.cs", label="Assert.AreEqual(0.0m, reader.ReadAsDecimal())", span="1380-1380"];
m13_858 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonConvertTest.cs", label="Assert.AreEqual(0, reader.ReadAsDecimal())", span="1383-1383"];
m13_865 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonConvertTest.cs", label="Assert.AreEqual(0.000001m, reader.ReadAsDecimal())", span="1393-1393"];
m13_867 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonConvertTest.cs", label="Assert.AreEqual(null, reader.ReadAsDecimal())", span="1396-1396"];
m13_860 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsDecimal(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1386-1386"];
m13_863 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1390-1390"];
m13_869 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsDecimal(), ''Input string '-' is not a valid decimal. Path '', line 1, position 1.'')", span="1399-1399"];
m13_850 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonConvertTest.cs", label="JsonTextReader reader = null", span="1371-1371"];
m13_862 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonConvertTest.cs", label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="1389-1389"];
m13_870 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", span="1369-1369"];
m13_1099 [cluster="System.Text.Encoding.GetString(byte[], int, int)", file="JsonConvertTest.cs", label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0"];
m13_549 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", span="840-840"];
m13_1248 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", span="1921-1921"];
m13_1250 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1925-1925"];
m13_1251 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1927-1927"];
m13_1253 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1930-1930"];
m13_1255 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1933-1933"];
m13_1258 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1937-1937"];
m13_1252 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1928-1928"];
m13_1254 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1931-1931"];
m13_1256 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1934-1934"];
m13_1257 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonConvertTest.cs", label="Assert.AreEqual(11806310474565, reader.Value)", span="1935-1935"];
m13_1259 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1938-1938"];
m13_1249 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonConvertTest.cs", label="string json = @''{''''text'''':0xabcdef12345}''", span="1923-1923"];
m13_1260 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", span="1921-1921"];
m13_1510 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", span="2331-2331"];
m13_1512 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2334-2334"];
m13_1513 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2336-2336"];
m13_1515 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2339-2339"];
m13_1517 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2342-2342"];
m13_1519 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2345-2345"];
m13_1521 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2348-2348"];
m13_1523 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2351-2351"];
m13_1525 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2354-2354"];
m13_1514 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2337-2337"];
m13_1516 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2340-2340"];
m13_1518 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2343-2343"];
m13_1520 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2346-2346"];
m13_1522 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2349-2349"];
m13_1524 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2352-2352"];
m13_1526 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2355-2355"];
m13_1511 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonConvertTest.cs", label="string json = ''[,,, \n\r\n \0   \r  , ,    ]''", span="2333-2333"];
m13_1527 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", span="2331-2331"];
m13_954 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="373-373"];
m13_1332 [cluster="System.TimeSpan.FromMinutes(double)", file="JsonConvertTest.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m13_1160 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", span="1794-1794"];
m13_1161 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[}''))", span="1796-1796"];
m13_1162 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonConvertTest.cs", label="reader.Read()", span="1798-1798"];
m13_1163 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected character encountered while parsing value: }. Path '', line 1, position 1.'')", span="1800-1800"];
m13_1164 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", span="1794-1794"];
m13_185 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.Read()", span="315-315"];
m13_186 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="315-315"];
m13_207 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", span="351-351"];
m13_208 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonConvertTest.cs", label="string json = @''{ ''''MATHEMATICAL ITALIC CAPITAL ALPHA'''': ''''\uD835\uDEE2'''' }''", span="353-353"];
m13_209 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="355-355"];
m13_210 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="357-357"];
m13_211 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="358-358"];
m13_212 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="360-360"];
m13_213 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="361-361"];
m13_214 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonConvertTest.cs", label="string s = reader.Value.ToString()", span="363-363"];
m13_215 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonConvertTest.cs", label="Assert.AreEqual(2, s.Length)", span="364-364"];
m13_216 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonConvertTest.cs", label="StringInfo stringInfo = new StringInfo(s)", span="366-366"];
m13_217 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonConvertTest.cs", label="Assert.AreEqual(1, stringInfo.LengthInTextElements)", span="367-367"];
m13_218 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", span="351-351"];
m13_220 [cluster="System.Globalization.StringInfo.StringInfo(string)", file="JsonConvertTest.cs", label="Entry System.Globalization.StringInfo.StringInfo(string)", span="0-0"];
m13_1226 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", span="1886-1886"];
m13_1227 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1.0]''))", span="1888-1888"];
m13_1228 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected token when reading bytes: Float. Path '[0]', line 1, position 4.'')", span="1890-1890"];
m13_1229 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", span="1886-1886"];
m13_509 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonConvertTest.cs", label="i++", span="830-830"];
m13_1190 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="363-363"];
m13_1348 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonConvertTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m13_25 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", color=green, community=0, file="JsonConvertTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", prediction=307, span="98-98"];
m13_555 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonConvertTest.cs", label="reader.Read()", span="915-915"];
m13_2072 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", span="3143-3143"];
m13_2081 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(sr)", span="3156-3156"];
m13_2080 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonConvertTest.cs", label="StringReader sr = new StringReader(json)", span="3155-3155"];
m13_2082 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="3158-3158"];
m13_2087 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="3166-3166"];
m13_2084 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonConvertTest.cs", label="Assert.AreEqual(decimal.MaxValue, max)", span="3161-3161"];
m13_2086 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonConvertTest.cs", label="Assert.AreEqual(decimal.MinValue, min)", span="3164-3164"];
m13_2083 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonConvertTest.cs", label="decimal? max = reader.ReadAsDecimal()", span="3160-3160"];
m13_2085 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonConvertTest.cs", label="decimal? min = reader.ReadAsDecimal()", span="3163-3163"];
m13_2079 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonConvertTest.cs", label="string json = sw.ToString()", span="3153-3153"];
m13_2073 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonConvertTest.cs", label="StringWriter sw = new StringWriter()", span="3145-3145"];
m13_2078 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonConvertTest.cs", label="writer.WriteEndArray()", span="3151-3151"];
m13_2074 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonConvertTest.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="3146-3146"];
m13_2077 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonConvertTest.cs", label="writer.WriteValue(decimal.MinValue)", span="3150-3150"];
m13_2075 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonConvertTest.cs", label="writer.WriteStartArray()", span="3148-3148"];
m13_2076 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonConvertTest.cs", label="writer.WriteValue(decimal.MaxValue)", span="3149-3149"];
m13_2088 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", span="3143-3143"];
m13_1013 [cluster="System.Convert.ToInt32(char)", file="JsonConvertTest.cs", label="Entry System.Convert.ToInt32(char)", span="0-0"];
m13_579 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonConvertTest.cs", label="reader.Read()", span="948-948"];
m13_515 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="Assert.AreEqual(''42'', task.Result)", span="807-807"];
m13_164 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="290-290"];
m13_165 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonConvertTest.cs", label="Assert.AreEqual(9.9m, reader.Value)", span="291-291"];
m13_166 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="292-292"];
m13_1304 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", span="2003-2003"];
m13_1306 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2007-2007"];
m13_1307 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2009-2009"];
m13_1309 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2012-2012"];
m13_1315 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2020-2020"];
m13_1308 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2010-2010"];
m13_1310 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2013-2013"];
m13_1312 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2016-2016"];
m13_1313 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2017-2017"];
m13_1314 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonConvertTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="2018-2018"];
m13_1316 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2021-2021"];
m13_1305 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonConvertTest.cs", label="string json = ''{\''Offset\'':\''\\/Date(946663200000+06)\\/\''}''", span="2005-2005"];
m13_1311 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonConvertTest.cs", label="reader.ReadAsDateTimeOffset()", span="2015-2015"];
m13_1317 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", span="2003-2003"];
m13_606 [cluster="StringReader.cstr", file="JsonConvertTest.cs", label="Entry StringReader.cstr", span=""];
m13_1318 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", span="2025-2025"];
m13_1320 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2029-2029"];
m13_1321 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2031-2031"];
m13_1323 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2034-2034"];
m13_1329 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2042-2042"];
m13_1322 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2032-2032"];
m13_1324 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2035-2035"];
m13_1326 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2038-2038"];
m13_1327 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2039-2039"];
m13_1328 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonConvertTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6).Add(TimeSpan.FromMinutes(-31))), reader.Value)", span="2040-2040"];
m13_1330 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2043-2043"];
m13_1319 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonConvertTest.cs", label="string json = @''{''''Offset'''':''''\/Date(946708260000-0631)\/''''}''", span="2027-2027"];
m13_1325 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonConvertTest.cs", label="reader.ReadAsDateTimeOffset()", span="2037-2037"];
m13_1331 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", span="2025-2025"];
m13_2031 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="353-353"];
m13_519 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="task = JsonConvert.SerializeObjectAsync(DateTime.MaxValue, Formatting.None, new JsonSerializerSettings\r\n        {\r\n          DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n        })", span="820-823"];
m13_521 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''\/Date(253402300799999)\/'''''', task.Result)", span="826-826"];
m13_522 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="var taskObject = JsonConvert.DeserializeObjectAsync(''[]'')", span="828-828"];
m13_524 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="CollectionAssert.AreEquivalent(new JArray(), (JArray)taskObject.Result)", span="831-831"];
m13_526 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="taskVersionArray.Wait()", span="837-837"];
m13_528 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="Assert.AreEqual(1, versionArray.Length)", span="841-841"];
m13_530 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="Task<int> taskInt = JsonConvert.DeserializeObjectAsync<int>(''5'')", span="844-844"];
m13_532 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="Assert.AreEqual(5, taskInt.Result)", span="847-847"];
m13_534 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="taskVersion.Wait()", span="853-853"];
m13_536 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="Movie p = new Movie()", span="857-857"];
m13_538 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="Task taskVoid = JsonConvert.PopulateObjectAsync(''{'Name':'Appended'}'', p, new JsonSerializerSettings\r\n      {\r\n        Converters = new List<JsonConverter> { new JsonSerializerTest.StringAppenderConverter() }\r\n      })", span="860-863"];
m13_540 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="Assert.AreEqual(''Existing,Appended'', p.Name)", span="867-867"];
m13_548 [cluster="Unk.AreEquivalent", file="JsonConvertTest.cs", label="Entry Unk.AreEquivalent", span=""];
m13_523 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="taskObject.Wait()", span="829-829"];
m13_525 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="Task<object> taskVersionArray = JsonConvert.DeserializeObjectAsync(''['2.0']'', typeof(Version[]), new JsonSerializerSettings\r\n        {\r\n          Converters = {new VersionConverter()}\r\n        })", span="833-836"];
m13_527 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="Version[] versionArray = (Version[])taskVersionArray.Result", span="839-839"];
m13_529 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="Assert.AreEqual(2, versionArray[0].Major)", span="842-842"];
m13_531 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="taskInt.Wait()", span="845-845"];
m13_533 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="var taskVersion = JsonConvert.DeserializeObjectAsync<Version>('''2.0''', new JsonSerializerSettings\r\n        {\r\n          Converters = {new VersionConverter()}\r\n        })", span="849-852"];
m13_535 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="Assert.AreEqual(2, taskVersion.Result.Major)", span="855-855"];
m13_537 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="p.Name = ''Existing,''", span="858-858"];
m13_539 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="taskVoid.Wait()", span="865-865"];
m13_541 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.Async()", span="800-800"];
m13_544 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object, Newtonsoft.Json.Formatting)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object, Newtonsoft.Json.Formatting)", span="642-642"];
m13_520 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="task.Wait()", span="824-824"];
m13_1704 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", span="2623-2623"];
m13_1706 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2645-2645"];
m13_1707 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2647-2647"];
m13_1711 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2652-2652"];
m13_1714 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2656-2656"];
m13_1717 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2660-2660"];
m13_1721 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2665-2665"];
m13_1724 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2669-2669"];
m13_1728 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2674-2674"];
m13_1732 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2679-2679"];
m13_1736 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2684-2684"];
m13_1740 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2689-2689"];
m13_1743 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2693-2693"];
m13_1747 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2698-2698"];
m13_1749 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2701-2701"];
m13_1752 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2705-2705"];
m13_1755 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2709-2709"];
m13_1758 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2713-2713"];
m13_1761 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2717-2717"];
m13_1763 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2720-2720"];
m13_1766 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2724-2724"];
m13_1768 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2727-2727"];
m13_1770 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2730-2730"];
m13_1772 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2733-2733"];
m13_1774 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2736-2736"];
m13_1776 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2739-2739"];
m13_1778 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2742-2742"];
m13_1780 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2745-2745"];
m13_1782 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2748-2748"];
m13_1785 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2752-2752"];
m13_1788 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.IsFalse(reader.Read())", span="2756-2756"];
m13_1708 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2648-2648"];
m13_1709 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(''comment*//*hi*/'', reader.Value)", span="2649-2649"];
m13_1710 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(2, reader.LineNumber)", span="2650-2650"];
m13_1712 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(2, reader.LineNumber)", span="2653-2653"];
m13_1713 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2654-2654"];
m13_1715 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2657-2657"];
m13_1716 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="2658-2658"];
m13_1718 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2661-2661"];
m13_1719 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(''Name'', reader.Value)", span="2662-2662"];
m13_1720 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="2663-2663"];
m13_1722 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2666-2666"];
m13_1723 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(4, reader.LineNumber)", span="2667-2667"];
m13_1725 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2670-2670"];
m13_1726 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(true, reader.Value)", span="2671-2671"];
m13_1727 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(4, reader.LineNumber)", span="2672-2672"];
m13_1729 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2675-2675"];
m13_1730 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(''comment after true'', reader.Value)", span="2676-2676"];
m13_1731 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="2677-2677"];
m13_1733 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2680-2680"];
m13_1734 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(''comment after comma'', reader.Value)", span="2681-2681"];
m13_1735 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(6, reader.LineNumber)", span="2682-2682"];
m13_1737 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2685-2685"];
m13_1738 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(''ExpiryDate'', reader.Value)", span="2686-2686"];
m13_1739 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(6, reader.LineNumber)", span="2687-2687"];
m13_1741 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2690-2690"];
m13_1742 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(7, reader.LineNumber)", span="2691-2691"];
m13_1744 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2694-2694"];
m13_1745 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(9, reader.LineNumber)", span="2695-2695"];
m13_1746 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2696-2696"];
m13_1748 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2699-2699"];
m13_1750 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2702-2702"];
m13_1751 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(10, reader.LineNumber)", span="2703-2703"];
m13_1753 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2706-2706"];
m13_1754 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(11, reader.LineNumber)", span="2707-2707"];
m13_1756 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2710-2710"];
m13_1757 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(11, reader.LineNumber)", span="2711-2711"];
m13_1759 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2714-2714"];
m13_1760 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(''Price'', reader.Value)", span="2715-2715"];
m13_1762 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2718-2718"];
m13_1764 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2721-2721"];
m13_1765 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(''Sizes'', reader.Value)", span="2722-2722"];
m13_1767 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2725-2725"];
m13_1769 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2728-2728"];
m13_1771 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2731-2731"];
m13_1773 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2734-2734"];
m13_1775 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2737-2737"];
m13_1777 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2740-2740"];
m13_1779 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2743-2743"];
m13_1781 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2746-2746"];
m13_1783 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2749-2749"];
m13_1784 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(''comment '', reader.Value)", span="2750-2750"];
m13_1786 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2753-2753"];
m13_1787 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(''comment 1 '', reader.Value)", span="2754-2754"];
m13_1705 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="string json = @''//comment*//*hi*/\r\n{//comment\r\nName://comment\r\ntrue//comment after true'' + StringUtils.CarriageReturn +\r\n@'',//comment after comma'' + StringUtils.CarriageReturnLineFeed + \r\n@''''''ExpiryDate''''://comment''  + StringUtils.LineFeed + \r\n@''new '' + StringUtils.LineFeed +\r\n@''Date\r\n(//comment\r\nnull//comment\r\n),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': //comment\r\n[//comment\r\n\r\n          ''''Small''''//comment\r\n]//comment\r\n}//comment \r\n//comment 1 ''", span="2625-2643"];
m13_1789 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", span="2623-2623"];
m13_20 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", span="86-86"];
m13_21 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", color=green, community=0, file="JsonConvertTest.cs", label="string json = @''{\r\n    ParentId: 1,\r\n    ChildId: 333333333333333333333333333333333333333,\r\n}''", prediction=308, span="88-91"];
m13_22 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", color=green, community=0, file="JsonConvertTest.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", prediction=275, span="93-93"];
m13_23 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", color=green, community=0, file="JsonConvertTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", prediction=310, span="95-95"];
m13_24 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", color=green, community=0, file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", prediction=275, span="96-96"];
m13_962 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="781-781"];
m13_284 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", span="494-494"];
m13_285 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonConvertTest.cs", label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n],''", span="496-500"];
m13_286 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="502-502"];
m13_287 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                while (reader.Read())\r\n                {\r\n                }\r\n            }, ''Additional text encountered after finished reading JSON content: ,. Path '', line 5, position 2.'')", span="504-509"];
m13_554 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonConvertTest.cs", label="i < 15", span="913-913"];
m13_154 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool)", span="210-210"];
m13_156 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", file="JsonConvertTest.cs", label="string result", span="312-312"];
m13_160 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''before\u2028after'''''', result)", span="318-318"];
m13_168 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="328-331"];
m13_172 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(object)", span="430-430"];
m13_155 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", span="310-310"];
m13_157 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", file="JsonConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(''before'' + '\u0085' + ''after'', '''', true)", span="314-314"];
m13_158 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''before\u0085after'''''', result)", span="315-315"];
m13_159 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", file="JsonConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(''before'' + '\u2028' + ''after'', '''', true)", span="317-317"];
m13_161 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", file="JsonConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(''before'' + '\u2029' + ''after'', '''', true)", span="320-320"];
m13_162 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''before\u2029after'''''', result)", span="321-321"];
m13_163 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", span="310-310"];
m13_169 [cluster="lambda expression", file="JsonConvertTest.cs", label="JsonConvert.ToString(new Version(1, 0))", span="330-330"];
m13_170 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="328-331"];
m13_571 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", file="JsonConvertTest.cs", label="i++", span="897-897"];
m13_2089 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", span="545-545"];
m13_2100 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", span="3207-3207"];
m13_2101 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonConvertTest.cs", label=Error, span="3209-3209"];
m13_2103 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonConvertTest.cs", label="return _inner.Read(buffer, index, 1);", span="3212-3212"];
m13_2102 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonConvertTest.cs", label="throw new Exception(''Read error'');", span="3210-3210"];
m13_2104 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", span="3207-3207"];
m13_577 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonConvertTest.cs", label="long i = int.MinValue", span="945-945"];
m13_1212 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", span="1867-1867"];
m13_1213 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[/*hi*/1/*hi*/,2/*hi*/]''))", span="1869-1869"];
m13_1215 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(2, data.Length)", span="1872-1872"];
m13_1216 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(1, data[0])", span="1873-1873"];
m13_1217 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(2, data[1])", span="1874-1874"];
m13_1214 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonConvertTest.cs", label="byte[] data = reader.ReadAsBytes()", span="1871-1871"];
m13_1218 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", span="1867-1867"];
m13_1571 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", span="2425-2425"];
m13_1573 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2428-2428"];
m13_1574 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2430-2430"];
m13_1575 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2431-2431"];
m13_1576 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonConvertTest.cs", label="Assert.IsFalse(reader.Read())", span="2432-2432"];
m13_1572 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonConvertTest.cs", label="string json = ''[true ''", span="2427-2427"];
m13_1577 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", span="2425-2425"];
m13_659 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", span="1072-1072"];
m13_662 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonConvertTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''''' + Convert.ToBase64String(helloWorldData)))", span="1077-1077"];
m13_663 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unterminated string. Expected delimiter: '. Path '', line 1, position 17.'')", span="1079-1079"];
m13_661 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonConvertTest.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1075-1075"];
m13_660 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonConvertTest.cs", label="string helloWorld = ''Hello world!''", span="1074-1074"];
m13_664 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", span="1072-1072"];
m13_1275 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="JsonConvertTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0"];
m13_956 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="357-357"];
m13_957 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="407-407"];
m13_26 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="34-34"];
m13_28 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="90-94"];
m13_30 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="90-94"];
m13_89 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", color=green, community=0, file="JsonConvertTest.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", prediction=288, span="182-182"];
m13_90 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", color=green, community=0, file="JsonConvertTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", prediction=313, span="184-184"];
m13_91 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", color=green, community=0, file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", prediction=288, span="185-185"];
m13_1406 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", span="2155-2155"];
m13_1407 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nul''))", span="2157-2157"];
m13_1408 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing null value. Path '', line 0, position 0.'')", span="2159-2159"];
m13_1409 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", span="2155-2155"];
m13_1891 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", span="2910-2910"];
m13_1893 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                MaxDepth = 1\r\n            }", span="2914-2917"];
m13_1894 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2919-2919"];
m13_1892 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonConvertTest.cs", label="string json = ''[[]]''", span="2912-2912"];
m13_1895 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'')", span="2921-2921"];
m13_1896 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", span="2910-2910"];
m13_0 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", span="55-55"];
m13_1 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", color=green, community=0, file="JsonConvertTest.cs", label="string json = @''{''''NameOfStore'''':''''Forest's Bakery And Cafe''''}''", prediction=315, span="57-57"];
m13_2 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", color=green, community=0, file="JsonConvertTest.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", prediction=316, span="59-59"];
m13_3 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", color=green, community=0, file="JsonConvertTest.cs", label="jsonTextReader.Read()", prediction=317, span="60-60"];
m13_4 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonConvertTest.cs", label="jsonTextReader.Read()", span="61-61"];
m13_52 [cluster="System.IO.StringWriter.StringWriter()", color=green, community=0, file="JsonConvertTest.cs", label="Entry System.IO.StringWriter.StringWriter()", prediction=318, span="0-0"];
m13_5 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", color=green, community=0, file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", prediction=319, span="516-516"];
m13_6 [cluster="Unk.AreEqual", color=green, community=0, file="JsonConvertTest.cs", label="Entry Unk.AreEqual", prediction=316, span=""];
m13_7 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="55-58"];
m13_1434 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", span="2187-2187"];
m13_1435 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/sdf''))", span="2189-2189"];
m13_1436 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing comment. Expected: *, got s. Path '', line 1, position 1.'')", span="2191-2191"];
m13_1437 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", span="2187-2187"];
m13_77 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.IntConverter()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.IntConverter()", span="193-193"];
m13_556 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonConvertTest.cs", label="i++", span="913-913"];
m13_557 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonConvertTest.cs", label="reader.Read()", span="918-918"];
m13_558 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="919-919"];
m13_559 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", span="887-887"];
m13_581 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonConvertTest.cs", label="Assert.AreEqual(i, reader.Value)", span="950-950"];
m13_580 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonConvertTest.cs", label="Newtonsoft.Json.Tests.JsonConvertTest", span=""];
m13_585 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n                {\r\n                    reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)));\r\n                    reader.ReadAsInt32();\r\n                }, ''JSON integer '' + total + '' is too large or small for an Int32. Path '', line 1, position 11.'')", span="955-959"];
m13_584 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonConvertTest.cs", label="long total = -j + i", span="954-954"];
m13_582 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonConvertTest.cs", label="int j = 1", span="952-952"];
m13_586 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonConvertTest.cs", label="j++", span="952-952"];
m13_583 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonConvertTest.cs", label="j < 1000", span="952-952"];
m13_587 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", span="943-943"];
m13_1185 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", span="1831-1831"];
m13_1186 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1833-1833"];
m13_1188 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1836-1836"];
m13_1187 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonConvertTest.cs", label="Assert.IsNull(reader.ReadAsDateTimeOffset())", span="1835-1835"];
m13_1189 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", span="1831-1831"];
m13_1665 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", span="2558-2558"];
m13_1667 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2569-2569"];
m13_1668 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2571-2571"];
m13_1670 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2574-2574"];
m13_1672 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2577-2577"];
m13_1674 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2580-2580"];
m13_1677 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2584-2584"];
m13_1679 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2587-2587"];
m13_1682 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2591-2591"];
m13_1684 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2594-2594"];
m13_1686 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2597-2597"];
m13_1689 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2601-2601"];
m13_1691 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2604-2604"];
m13_1695 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2609-2609"];
m13_1697 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2612-2612"];
m13_1699 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2615-2615"];
m13_1701 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2618-2618"];
m13_1669 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2572-2572"];
m13_1671 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2575-2575"];
m13_1673 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2578-2578"];
m13_1675 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2581-2581"];
m13_1676 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(''Name'', reader.Value)", span="2582-2582"];
m13_1678 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2585-2585"];
m13_1680 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2588-2588"];
m13_1681 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(true, reader.Value)", span="2589-2589"];
m13_1683 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2592-2592"];
m13_1685 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2595-2595"];
m13_1687 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2598-2598"];
m13_1688 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(''ExpiryDate'', reader.Value)", span="2599-2599"];
m13_1690 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2602-2602"];
m13_1692 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2605-2605"];
m13_1693 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="2606-2606"];
m13_1694 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2607-2607"];
m13_1696 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2610-2610"];
m13_1698 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2613-2613"];
m13_1700 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2616-2616"];
m13_1702 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2619-2619"];
m13_1666 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="string json = @''/*comment*/{/*comment*/Name:/*comment*/true/*comment*/,/*comment*/\r\n        ''''ExpiryDate'''':/*comment*/new\r\n'' + StringUtils.LineFeed +\r\n                          @''Date\r\n(/*comment*/null/*comment*/),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''':/*comment*/[/*comment*/\r\n          ''''Small''''/*comment*/]/*comment*/}/*comment*/''", span="2560-2567"];
m13_1703 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", span="2558-2558"];
m13_2029 [cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JsonConvertTest.cs", label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0"];
m13_832 [cluster="int.ToString()", file="JsonConvertTest.cs", label="Entry int.ToString()", span="0-0"];
m13_93 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.CanConvert(System.Type)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.CanConvert(System.Type)", span="206-206"];
m13_94 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.CanConvert(System.Type)", color=green, community=0, file="JsonConvertTest.cs", label="return objectType == typeof(int);", prediction=288, span="208-208"];
m13_95 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.CanConvert(System.Type)", color=green, community=0, file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.CanConvert(System.Type)", prediction=322, span="206-206"];
m13_2053 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", span="3202-3202"];
m13_2098 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JsonConvertTest.cs", label="_inner = inner", span="3204-3204"];
m13_2099 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", span="3202-3202"];
m13_517 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="task.Wait()", span="810-810"];
m13_637 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", span="1048-1048"];
m13_638 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonConvertTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\u123''))", span="1050-1050"];
m13_639 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing unicode character. Path '', line 1, position 4.'')", span="1052-1052"];
m13_640 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", span="1048-1048"];
m13_511 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonConvertTest.cs", label="Assert.IsFalse(reader.Read())", span="836-836"];
m13_512 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", span="814-814"];
m13_513 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="task = JsonConvert.SerializeObjectAsync(42)", span="804-804"];
m13_514 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="task.Wait()", span="805-805"];
m13_1118 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", span="1734-1734"];
m13_1120 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonConvertTest.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1737-1737"];
m13_1119 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonConvertTest.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1736-1736"];
m13_1121 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonConvertTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="1739-1739"];
m13_1123 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonConvertTest.cs", label="jsonReader.Read()", span="1742-1742"];
m13_1127 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonConvertTest.cs", label="jsonReader.Read()", span="1747-1747"];
m13_1131 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonConvertTest.cs", label="jsonReader.Read()", span="1752-1752"];
m13_1135 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonConvertTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="1757-1757"];
m13_1137 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonConvertTest.cs", label="Assert.IsFalse(jsonReader.Read())", span="1760-1760"];
m13_1122 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1740-1740"];
m13_1124 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1743-1743"];
m13_1125 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1744-1744"];
m13_1126 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonConvertTest.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1745-1745"];
m13_1128 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1748-1748"];
m13_1129 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1749-1749"];
m13_1130 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonConvertTest.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1750-1750"];
m13_1132 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1753-1753"];
m13_1133 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1754-1754"];
m13_1134 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonConvertTest.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1755-1755"];
m13_1136 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1758-1758"];
m13_1138 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", span="1734-1734"];
m13_961 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="365-365"];
m13_775 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", span="1251-1251"];
m13_778 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonConvertTest.cs", label="JsonReader jsonReader = new JsonTextReader(sr)", span="1257-1257"];
m13_777 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonConvertTest.cs", label="StringReader sr = new StringReader(input)", span="1255-1255"];
m13_779 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonConvertTest.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1259-1259"];
m13_781 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonReader.TokenType)", span="1262-1262"];
m13_782 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonConvertTest.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1263-1263"];
m13_784 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonReader.TokenType)", span="1266-1266"];
m13_785 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonConvertTest.cs", label="Assert.AreEqual(1, jsonReader.Depth)", span="1267-1267"];
m13_787 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonConvertTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="1270-1270"];
m13_788 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonConvertTest.cs", label="Assert.AreEqual(''Purple\r \n monkey's:\tdishwasher'', jsonReader.Value)", span="1271-1271"];
m13_789 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonConvertTest.cs", label="Assert.AreEqual('\'', jsonReader.QuoteChar)", span="1272-1272"];
m13_790 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonConvertTest.cs", label="Assert.AreEqual(1, jsonReader.Depth)", span="1273-1273"];
m13_792 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonReader.TokenType)", span="1276-1276"];
m13_793 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonConvertTest.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1277-1277"];
m13_780 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonConvertTest.cs", label="jsonReader.Read()", span="1261-1261"];
m13_783 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonConvertTest.cs", label="jsonReader.Read()", span="1265-1265"];
m13_786 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonConvertTest.cs", label="jsonReader.Read()", span="1269-1269"];
m13_791 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonConvertTest.cs", label="jsonReader.Read()", span="1275-1275"];
m13_776 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonConvertTest.cs", label="string input = ''{value:'Purple\\r \\n monkey\\'s:\\tdishwasher'}''", span="1253-1253"];
m13_794 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", span="1251-1251"];
m13_955 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="884-884"];
m13_1845 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", span="2844-2844"];
m13_1851 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2855-2855"];
m13_1869 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="2882-2882"];
m13_1852 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="reader.Read()", span="2857-2857"];
m13_1853 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="reader.Read()", span="2859-2859"];
m13_1856 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="reader.Read()", span="2863-2863"];
m13_1859 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="reader.Read()", span="2867-2867"];
m13_1862 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="reader.Read()", span="2871-2871"];
m13_1865 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="reader.Read()", span="2875-2875"];
m13_1868 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="reader.Read()", span="2879-2879"];
m13_1870 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="reader.Read()", span="2884-2884"];
m13_1886 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="reader.Read()", span="2906-2906"];
m13_1848 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="Assert.AreEqual(''6,0221418E+23'', d.ToString(new CultureInfo(''fr-FR'')))", span="2850-2850"];
m13_1849 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="Assert.AreEqual(''602214180000000000000000'', d.ToString(''0.#############################################################################''))", span="2851-2851"];
m13_1854 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2860-2860"];
m13_1855 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="Assert.AreEqual(0d, reader.Value)", span="2861-2861"];
m13_1857 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2864-2864"];
m13_1858 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="Assert.AreEqual(0d, reader.Value)", span="2865-2865"];
m13_1860 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2868-2868"];
m13_1861 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="Assert.AreEqual(0.0000025d, reader.Value)", span="2869-2869"];
m13_1863 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2872-2872"];
m13_1864 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="Assert.AreEqual(3000000000d, reader.Value)", span="2873-2873"];
m13_1866 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2876-2876"];
m13_1867 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="2877-2877"];
m13_1872 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2887-2887"];
m13_1873 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="Assert.AreEqual(0m, reader.Value)", span="2888-2888"];
m13_1875 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2891-2891"];
m13_1876 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="Assert.AreEqual(0m, reader.Value)", span="2892-2892"];
m13_1878 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2895-2895"];
m13_1879 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="Assert.AreEqual(0.0000025m, reader.Value)", span="2896-2896"];
m13_1881 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2899-2899"];
m13_1882 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="Assert.AreEqual(3000000000m, reader.Value)", span="2900-2900"];
m13_1884 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2903-2903"];
m13_1885 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="Assert.AreEqual(602214180000000000000000m, reader.Value)", span="2904-2904"];
m13_1850 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="string json = @''[0e-10,0E-10,0.25e-5,0.3e10,6.0221418e23]''", span="2853-2853"];
m13_1871 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="reader.ReadAsDecimal()", span="2886-2886"];
m13_1874 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="reader.ReadAsDecimal()", span="2890-2890"];
m13_1877 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="reader.ReadAsDecimal()", span="2894-2894"];
m13_1880 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="reader.ReadAsDecimal()", span="2898-2898"];
m13_1883 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="reader.ReadAsDecimal()", span="2902-2902"];
m13_1847 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="d = Convert.ToDouble(''6.0221418e23'', CultureInfo.InvariantCulture)", span="2848-2848"];
m13_1846 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="double d", span="2846-2846"];
m13_1887 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", span="2844-2844"];
m13_489 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Write(object, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.Write(object, Newtonsoft.Json.JsonConverter)", span="780-780"];
m13_184 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="315-315"];
m13_510 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="835-835"];
m13_508 [cluster="System.IO.StringReader.StringReader(string)", file="JsonConvertTest.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m13_494 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Write(object, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="StringWriter sw = new StringWriter()", span="782-782"];
m13_495 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Write(object, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="783-783"];
m13_498 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Write(object, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="return sw.ToString();", span="787-787"];
m13_496 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Write(object, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="converter.WriteJson(writer, value, null)", span="784-784"];
m13_499 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Write(object, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.Write(object, Newtonsoft.Json.JsonConverter)", span="780-780"];
m13_497 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Write(object, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="writer.Flush()", span="786-786"];
m13_2090 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", span="3170-3170"];
m13_2092 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () =>\r\n                {\r\n                    JsonTextReader reader = new JsonTextReader(new StringReader(json));\r\n                    while (reader.Read())\r\n                    {\r\n                    }\r\n                },\r\n                ''Unexpected character encountered while parsing value: !. Path 'frameworks.dnxcore50.dependencies.['System.Xml.ReaderWriter'].source', line 6, position 21.'')", span="3184-3192"];
m13_2091 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="JsonConvertTest.cs", label="string json = @''{\r\n  ''''frameworks'''': {\r\n    ''''dnxcore50'''': {\r\n      ''''dependencies'''': {\r\n        ''''System.Xml.ReaderWriter'''': {\r\n          ''''source'''': !!! !!!\r\n        }\r\n      }\r\n    }\r\n  }\r\n}''", span="3172-3182"];
m13_2093 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", span="3170-3170"];
m13_728 [cluster="System.IO.StringReader.ReadLine()", file="JsonConvertTest.cs", label="Entry System.IO.StringReader.ReadLine()", span="0-0"];
m13_1602 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", span="2466-2466"];
m13_1604 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2469-2469"];
m13_1605 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2471-2471"];
m13_1607 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2474-2474"];
m13_1606 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2472-2472"];
m13_1608 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2475-2475"];
m13_1603 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonConvertTest.cs", label="string json = ''[]''", span="2468-2468"];
m13_1609 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", span="2466-2466"];
m13_572 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="934-938"];
m13_573 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="936-936"];
m13_574 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.ReadAsInt32()", span="937-937"];
m13_575 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="934-938"];
m13_757 [cluster="Unk.AreEquivalent", file="JsonConvertTest.cs", label="Entry Unk.AreEquivalent", span=""];
m13_307 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="541-541"];
m13_308 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.Read()", span="541-541"];
m13_309 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="541-541"];
m13_320 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="568-573"];
m13_321 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.Read()", span="570-570"];
m13_322 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="568-573"];
m13_9 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="55-58"];
m13_1014 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", span="1585-1585"];
m13_1016 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="JsonReader jsonReader = new JsonTextReader(new StringReader(json))", span="1590-1590"];
m13_1018 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1593-1593"];
m13_1020 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1596-1596"];
m13_1021 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(0.0, jsonReader.Value)", span="1597-1597"];
m13_1023 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1600-1600"];
m13_1024 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(0.0, jsonReader.Value)", span="1601-1601"];
m13_1026 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1604-1604"];
m13_1027 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(0.1, jsonReader.Value)", span="1605-1605"];
m13_1029 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1608-1608"];
m13_1030 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(1.0, jsonReader.Value)", span="1609-1609"];
m13_1032 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1612-1612"];
m13_1033 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(1.000001, jsonReader.Value)", span="1613-1613"];
m13_1035 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1616-1616"];
m13_1036 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(1E-06, jsonReader.Value)", span="1617-1617"];
m13_1038 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1620-1620"];
m13_1039 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(4.94065645841247E-324, jsonReader.Value)", span="1621-1621"];
m13_1041 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1624-1624"];
m13_1042 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(double.PositiveInfinity, jsonReader.Value)", span="1625-1625"];
m13_1044 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1628-1628"];
m13_1045 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(double.NegativeInfinity, jsonReader.Value)", span="1629-1629"];
m13_1047 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1632-1632"];
m13_1048 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(double.NaN, jsonReader.Value)", span="1633-1633"];
m13_1050 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1636-1636"];
m13_1051 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(double.MaxValue, jsonReader.Value)", span="1637-1637"];
m13_1053 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1640-1640"];
m13_1054 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(double.MinValue, jsonReader.Value)", span="1641-1641"];
m13_1056 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1644-1644"];
m13_1057 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(double.PositiveInfinity, jsonReader.Value)", span="1645-1645"];
m13_1059 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1648-1648"];
m13_1060 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(double.NegativeInfinity, jsonReader.Value)", span="1649-1649"];
m13_1062 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1652-1652"];
m13_1063 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(double.NaN, jsonReader.Value)", span="1653-1653"];
m13_1065 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1656-1656"];
m13_1066 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(0d, jsonReader.Value)", span="1657-1657"];
m13_1068 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1660-1660"];
m13_1069 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(0.0000025d, jsonReader.Value)", span="1661-1661"];
m13_1071 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1664-1664"];
m13_1072 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(3000000000d, jsonReader.Value)", span="1665-1665"];
m13_1074 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1668-1668"];
m13_1015 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="string json =\r\n                @''[0.0,0.0,0.1,1.0,1.000001,1E-06,4.94065645841247E-324,Infinity,-Infinity,NaN,1.7976931348623157E+308,-1.7976931348623157E+308,Infinity,-Infinity,NaN,0e-10,0.25e-5,0.3e10]''", span="1587-1588"];
m13_1017 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="jsonReader.Read()", span="1592-1592"];
m13_1019 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="jsonReader.Read()", span="1595-1595"];
m13_1022 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="jsonReader.Read()", span="1599-1599"];
m13_1025 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="jsonReader.Read()", span="1603-1603"];
m13_1028 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="jsonReader.Read()", span="1607-1607"];
m13_1031 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="jsonReader.Read()", span="1611-1611"];
m13_1034 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="jsonReader.Read()", span="1615-1615"];
m13_1037 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="jsonReader.Read()", span="1619-1619"];
m13_1040 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="jsonReader.Read()", span="1623-1623"];
m13_1043 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="jsonReader.Read()", span="1627-1627"];
m13_1046 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="jsonReader.Read()", span="1631-1631"];
m13_1049 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="jsonReader.Read()", span="1635-1635"];
m13_1052 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="jsonReader.Read()", span="1639-1639"];
m13_1055 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="jsonReader.Read()", span="1643-1643"];
m13_1058 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="jsonReader.Read()", span="1647-1647"];
m13_1061 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="jsonReader.Read()", span="1651-1651"];
m13_1064 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="jsonReader.Read()", span="1655-1655"];
m13_1067 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="jsonReader.Read()", span="1659-1659"];
m13_1070 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="jsonReader.Read()", span="1663-1663"];
m13_1073 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="jsonReader.Read()", span="1667-1667"];
m13_1075 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", span="1585-1585"];
m13_1842 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="2840-2840"];
m13_58 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="113-116"];
m13_59 [cluster="lambda expression", color=green, community=0, file="JsonConvertTest.cs", label="jsonTextReader.ReadAsInt32()", prediction=323, span="138-138"];
m13_60 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="113-116"];
m13_81 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="152-155"];
m13_82 [cluster="lambda expression", color=green, community=0, file="JsonConvertTest.cs", label="jsonTextReader.ReadAsInt32()", prediction=284, span="165-165"];
m13_83 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="152-155"];
m13_589 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="957-957"];
m13_2095 [cluster="lambda expression", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3187-3187"];
m13_875 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.Read()", span="1390-1390"];
m13_910 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.Read()", span="1428-1428"];
m13_913 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.Read()", span="1439-1439"];
m13_1088 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.Read()", span="1690-1690"];
m13_1166 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.Read()", span="1800-1800"];
m13_1411 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.Read()", span="2159-2159"];
m13_1418 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.Read()", span="2167-2167"];
m13_1425 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.Read()", span="2175-2175"];
m13_1432 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.Read()", span="2183-2183"];
m13_1439 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.Read()", span="2191-2191"];
m13_1584 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.Read()", span="2441-2441"];
m13_1592 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.Read()", span="2450-2450"];
m13_1623 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.Read()", span="2496-2496"];
m13_1640 [cluster="lambda expression", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2518-2518"];
m13_1804 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.Read()", span="2780-2780"];
m13_1898 [cluster="lambda expression", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2921-2921"];
m13_1930 [cluster="lambda expression", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2937-2937"];
m13_1933 [cluster="lambda expression", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="2955-2955"];
m13_2055 [cluster="lambda expression", file="JsonConvertTest.cs", label="jsonTextReader.Read()", span="3113-3113"];
m13_2058 [cluster="lambda expression", file="JsonConvertTest.cs", label="jsonTextReader.Read()", span="3114-3114"];
m13_2061 [cluster="lambda expression", file="JsonConvertTest.cs", label="jsonTextReader.Read()", span="3123-3123"];
m13_2064 [cluster="lambda expression", file="JsonConvertTest.cs", label="jsonTextReader.Read()", span="3132-3132"];
m13_2067 [cluster="lambda expression", file="JsonConvertTest.cs", label="jsonTextReader.Read()", span="3133-3133"];
m13_2070 [cluster="lambda expression", file="JsonConvertTest.cs", label="jsonTextReader.Read()", span="3134-3134"];
m13_2096 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.Read()", span="3188-3188"];
m13_590 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.ReadAsInt32()", span="958-958"];
m13_835 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.ReadAsInt32()", span="1350-1350"];
m13_838 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.ReadAsInt32()", span="1353-1353"];
m13_841 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.ReadAsInt32()", span="1356-1356"];
m13_844 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.ReadAsInt32()", span="1359-1359"];
m13_847 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.ReadAsInt32()", span="1365-1365"];
m13_1404 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.ReadAsInt32()", span="2151-2151"];
m13_1183 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.ReadAsBytes()", span="1826-1826"];
m13_1203 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.ReadAsBytes()", span="1853-1853"];
m13_1224 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.ReadAsBytes()", span="1882-1882"];
m13_1231 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.ReadAsBytes()", span="1890-1890"];
m13_588 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="955-959"];
m13_642 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.Read()", span="1052-1052"];
m13_649 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.Read()", span="1060-1060"];
m13_656 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.ReadAsBytes()", span="1068-1068"];
m13_667 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.ReadAsBytes()", span="1079-1079"];
m13_682 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.Read()", span="1098-1098"];
m13_872 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.ReadAsDecimal()", span="1386-1386"];
m13_878 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.ReadAsDecimal()", span="1399-1399"];
m13_1196 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.ReadAsDecimal()", span="1845-1845"];
m13_1210 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.ReadAsDateTimeOffset()", span="1862-1862"];
m13_1302 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.ReadAsDateTimeOffset()", span="1999-1999"];
m13_1843 [cluster="lambda expression", file="JsonConvertTest.cs", label="reader.Read()", span="2840-2840"];
m13_2094 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="3185-3191"];
m13_874 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="1390-1390"];
m13_876 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="1390-1390"];
m13_909 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="1428-1428"];
m13_911 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="1428-1428"];
m13_912 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="1439-1439"];
m13_914 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="1439-1439"];
m13_1087 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="1690-1690"];
m13_1089 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="1690-1690"];
m13_1165 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="1800-1800"];
m13_1167 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="1800-1800"];
m13_1410 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="2159-2159"];
m13_1412 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="2159-2159"];
m13_1417 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="2167-2167"];
m13_1419 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="2167-2167"];
m13_1424 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="2175-2175"];
m13_1426 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="2175-2175"];
m13_1431 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="2183-2183"];
m13_1433 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="2183-2183"];
m13_1438 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="2191-2191"];
m13_1440 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="2191-2191"];
m13_1583 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="2441-2441"];
m13_1585 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="2441-2441"];
m13_1591 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="2450-2450"];
m13_1593 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="2450-2450"];
m13_1622 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="2496-2496"];
m13_1624 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="2496-2496"];
m13_1639 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="2518-2518"];
m13_1641 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="2518-2518"];
m13_1803 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="2780-2780"];
m13_1805 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="2780-2780"];
m13_1897 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="2921-2921"];
m13_1899 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="2921-2921"];
m13_1929 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="2937-2937"];
m13_1931 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="2937-2937"];
m13_1932 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="2955-2955"];
m13_1934 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="2955-2955"];
m13_2054 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="3113-3113"];
m13_2056 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="3113-3113"];
m13_2057 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="3114-3114"];
m13_2059 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="3114-3114"];
m13_2060 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="3123-3123"];
m13_2062 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="3123-3123"];
m13_2063 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="3132-3132"];
m13_2065 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="3132-3132"];
m13_2066 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="3133-3133"];
m13_2068 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="3133-3133"];
m13_2069 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="3134-3134"];
m13_2071 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="3134-3134"];
m13_2097 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="3185-3191"];
m13_641 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="1052-1052"];
m13_648 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="1060-1060"];
m13_655 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="1068-1068"];
m13_666 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="1079-1079"];
m13_681 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="1098-1098"];
m13_834 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="1350-1350"];
m13_837 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="1353-1353"];
m13_840 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="1356-1356"];
m13_843 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="1359-1359"];
m13_846 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="1365-1365"];
m13_871 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="1386-1386"];
m13_877 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="1399-1399"];
m13_1182 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="1826-1826"];
m13_1195 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="1845-1845"];
m13_1202 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="1853-1853"];
m13_1209 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="1862-1862"];
m13_1223 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="1882-1882"];
m13_1230 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="1890-1890"];
m13_1301 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="1999-1999"];
m13_1403 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="2151-2151"];
m13_591 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="955-959"];
m13_836 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="1350-1350"];
m13_839 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="1353-1353"];
m13_842 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="1356-1356"];
m13_845 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="1359-1359"];
m13_848 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="1365-1365"];
m13_1405 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="2151-2151"];
m13_1184 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="1826-1826"];
m13_1204 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="1853-1853"];
m13_1225 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="1882-1882"];
m13_1232 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="1890-1890"];
m13_643 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="1052-1052"];
m13_650 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="1060-1060"];
m13_657 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="1068-1068"];
m13_668 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="1079-1079"];
m13_683 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="1098-1098"];
m13_873 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="1386-1386"];
m13_879 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="1399-1399"];
m13_1197 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="1845-1845"];
m13_1211 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="1862-1862"];
m13_1303 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="1999-1999"];
m13_1844 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="2840-2840"];
m13_2106 [cluster="System.IO.TextReader.Read(char[], int, int)", file="JsonConvertTest.cs", label="Entry System.IO.TextReader.Read(char[], int, int)", span="0-0"];
m13_684 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", span="1102-1102"];
m13_691 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="1141-1141"];
m13_688 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="StringReader sr = new StringReader(newLinesText)", span="1135-1135"];
m13_692 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1142-1142"];
m13_694 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1145-1145"];
m13_697 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1149-1149"];
m13_699 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1152-1152"];
m13_703 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1157-1157"];
m13_706 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1161-1161"];
m13_709 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1165-1165"];
m13_712 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1169-1169"];
m13_714 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1172-1172"];
m13_716 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1175-1175"];
m13_718 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1178-1178"];
m13_721 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1182-1182"];
m13_723 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1185-1185"];
m13_725 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="Assert.IsTrue(reader.Read())", span="1188-1188"];
m13_696 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="Assert.AreEqual(newLinesText + ''name1'' + newLinesText, reader.Value)", span="1147-1147"];
m13_711 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="Assert.AreEqual(newLinesText + ''blah comment'' + newLinesText, reader.Value)", span="1167-1167"];
m13_693 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="Assert.AreEqual(7, reader.LineNumber)", span="1143-1143"];
m13_695 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="Assert.AreEqual(31, reader.LineNumber)", span="1146-1146"];
m13_698 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="Assert.AreEqual(37, reader.LineNumber)", span="1150-1150"];
m13_700 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="Assert.AreEqual(55, reader.LineNumber)", span="1153-1153"];
m13_701 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="1154-1154"];
m13_702 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="1155-1155"];
m13_704 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="Assert.AreEqual(61, reader.LineNumber)", span="1158-1158"];
m13_705 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="Assert.AreEqual(1L, reader.Value)", span="1159-1159"];
m13_707 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="Assert.AreEqual(73, reader.LineNumber)", span="1162-1162"];
m13_708 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="Assert.AreEqual(null, reader.Value)", span="1163-1163"];
m13_710 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="Assert.AreEqual(91, reader.LineNumber)", span="1166-1166"];
m13_713 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="Assert.AreEqual(97, reader.LineNumber)", span="1170-1170"];
m13_715 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="Assert.AreEqual(109, reader.LineNumber)", span="1173-1173"];
m13_717 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="Assert.AreEqual(115, reader.LineNumber)", span="1176-1176"];
m13_719 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="Assert.AreEqual(133, reader.LineNumber)", span="1179-1179"];
m13_720 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="Assert.AreEqual(''name2'', reader.Value)", span="1180-1180"];
m13_722 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="Assert.AreEqual(139, reader.LineNumber)", span="1183-1183"];
m13_724 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="Assert.AreEqual(145, reader.LineNumber)", span="1186-1186"];
m13_726 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="Assert.AreEqual(151, reader.LineNumber)", span="1189-1189"];
m13_686 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="string json =\r\n                newLinesText\r\n                + ''{'' + newLinesText\r\n                + ''''' + newLinesText\r\n                + ''name1'' + newLinesText\r\n                + ''''' + newLinesText\r\n                + '':'' + newLinesText\r\n                + ''['' + newLinesText\r\n                + ''new'' + newLinesText\r\n                + ''Date'' + newLinesText\r\n                + ''('' + newLinesText\r\n                + ''1'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''null'' + newLinesText\r\n                + ''/*'' + newLinesText\r\n                + ''blah comment'' + newLinesText\r\n                + ''*/'' + newLinesText\r\n                + '')'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''1.1111'' + newLinesText\r\n                + '']'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''name2'' + newLinesText\r\n                + '':'' + newLinesText\r\n                + ''{'' + newLinesText\r\n                + ''}'' + newLinesText\r\n                + ''}'' + newLinesText", span="1106-1132"];
m13_689 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="sr.ReadLine() != null", span="1136-1136"];
m13_685 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="string newLinesText = StringUtils.CarriageReturn + StringUtils.CarriageReturnLineFeed + StringUtils.LineFeed + StringUtils.CarriageReturnLineFeed + '' '' + StringUtils.CarriageReturn + StringUtils.CarriageReturnLineFeed", span="1104-1104"];
m13_687 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="int count = 0", span="1134-1134"];
m13_690 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="count++", span="1138-1138"];
m13_727 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", span="1102-1102"];
m13_80 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="466-466"];
m13_2135 [file="JsonConvertTest.cs", label=jsonTextReader, span=""];
m13_2136 [file="JsonConvertTest.cs", label=jsonTextReader, span=""];
m13_2145 [file="JsonConvertTest.cs", label=total, span=""];
m13_2146 [file="JsonConvertTest.cs", label=total, span=""];
m13_2179 [file="JsonConvertTest.cs", label=json, span=""];
m13_2137 [file="JsonConvertTest.cs", label=reader, span=""];
m13_2138 [file="JsonConvertTest.cs", label=reader, span=""];
m13_2139 [file="JsonConvertTest.cs", label=reader, span=""];
m13_2141 [file="JsonConvertTest.cs", label=reader, span=""];
m13_2142 [file="JsonConvertTest.cs", label=reader, span=""];
m13_2143 [file="JsonConvertTest.cs", label=reader, span=""];
m13_2153 [file="JsonConvertTest.cs", label=reader, span=""];
m13_2154 [file="JsonConvertTest.cs", label=reader, span=""];
m13_2155 [file="JsonConvertTest.cs", label=reader, span=""];
m13_2156 [file="JsonConvertTest.cs", label=reader, span=""];
m13_2165 [file="JsonConvertTest.cs", label=reader, span=""];
m13_2166 [file="JsonConvertTest.cs", label=reader, span=""];
m13_2167 [file="JsonConvertTest.cs", label=reader, span=""];
m13_2168 [file="JsonConvertTest.cs", label=reader, span=""];
m13_2169 [file="JsonConvertTest.cs", label=reader, span=""];
m13_2170 [file="JsonConvertTest.cs", label=reader, span=""];
m13_2171 [file="JsonConvertTest.cs", label=reader, span=""];
m13_2172 [file="JsonConvertTest.cs", label=reader, span=""];
m13_2173 [file="JsonConvertTest.cs", label=reader, span=""];
m13_2174 [file="JsonConvertTest.cs", label=reader, span=""];
m13_2176 [file="JsonConvertTest.cs", label=reader, span=""];
m13_2177 [file="JsonConvertTest.cs", label=reader, span=""];
m13_2178 [file="JsonConvertTest.cs", label=jsonTextReader, span=""];
m13_2140 [file="JsonConvertTest.cs", label="Newtonsoft.Json.Tests.JsonTextReaderTest", span=""];
m13_2152 [file="JsonConvertTest.cs", label=reader, span=""];
m13_2164 [file="JsonConvertTest.cs", label=reader, span=""];
m13_2157 [file="JsonConvertTest.cs", label=reader, span=""];
m13_2159 [file="JsonConvertTest.cs", label=reader, span=""];
m13_2161 [file="JsonConvertTest.cs", label=reader, span=""];
m13_2162 [file="JsonConvertTest.cs", label=reader, span=""];
m13_2144 [file="JsonConvertTest.cs", label=reader, span=""];
m13_2147 [file="JsonConvertTest.cs", label=reader, span=""];
m13_2148 [file="JsonConvertTest.cs", label=reader, span=""];
m13_2149 [file="JsonConvertTest.cs", label=reader, span=""];
m13_2150 [file="JsonConvertTest.cs", label=reader, span=""];
m13_2151 [file="JsonConvertTest.cs", label=reader, span=""];
m13_2158 [file="JsonConvertTest.cs", label=reader, span=""];
m13_2160 [file="JsonConvertTest.cs", label=reader, span=""];
m13_2163 [file="JsonConvertTest.cs", label=reader, span=""];
m13_2175 [file="JsonConvertTest.cs", label=reader, span=""];
m13_2180 [file="JsonConvertTest.cs", label="Newtonsoft.Json.Tests.ToggleReaderError", span=""];
m15_0 [cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="JsonObjectContract.cs", label="Entry Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", span="112-112"];
m15_1 [cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="JsonObjectContract.cs", label="ContractType = JsonContractType.Object", span="115-115"];
m15_2 [cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="JsonObjectContract.cs", label="Properties = new JsonPropertyCollection(UnderlyingType)", span="117-117"];
m15_3 [cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="JsonObjectContract.cs", label="ConstructorParameters = new JsonPropertyCollection(UnderlyingType)", span="118-118"];
m15_4 [cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="JsonObjectContract.cs", label="Exit Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", span="112-112"];
m15_6 [cluster="Newtonsoft.Json.Serialization.JsonObjectContract.GetUninitializedObject()", file="JsonObjectContract.cs", label="Entry Newtonsoft.Json.Serialization.JsonObjectContract.GetUninitializedObject()", span="125-125"];
m15_7 [cluster="Newtonsoft.Json.Serialization.JsonObjectContract.GetUninitializedObject()", file="JsonObjectContract.cs", label="!JsonTypeReflector.FullyTrusted", span="128-128"];
m15_8 [cluster="Newtonsoft.Json.Serialization.JsonObjectContract.GetUninitializedObject()", file="JsonObjectContract.cs", label="throw new JsonException(''Insufficient permissions. Creating an uninitialized '{0}' type requires full trust.''.FormatWith(CultureInfo.InvariantCulture, NonNullableUnderlyingType));", span="129-129"];
m15_9 [cluster="Newtonsoft.Json.Serialization.JsonObjectContract.GetUninitializedObject()", file="JsonObjectContract.cs", label="return FormatterServices.GetUninitializedObject(NonNullableUnderlyingType);", span="131-131"];
m15_10 [cluster="Newtonsoft.Json.Serialization.JsonObjectContract.GetUninitializedObject()", file="JsonObjectContract.cs", label="Exit Newtonsoft.Json.Serialization.JsonObjectContract.GetUninitializedObject()", span="125-125"];
m15_11 [cluster="Newtonsoft.Json.JsonException.JsonException(string)", file="JsonObjectContract.cs", label="Entry Newtonsoft.Json.JsonException.JsonException(string)", span="54-54"];
m15_5 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", file="JsonObjectContract.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", span="45-45"];
m15_13 [cluster="System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)", file="JsonObjectContract.cs", label="Entry System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)", span="0-0"];
m15_12 [cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonObjectContract.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m15_14 [file="JsonObjectContract.cs", label="Newtonsoft.Json.Serialization.JsonObjectContract", span=""];
m16_5 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", file="JsonPrimitiveContract.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", span="184-184"];
m16_0 [cluster="Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", file="JsonPrimitiveContract.cs", label="Entry Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", span="44-44"];
m16_1 [cluster="Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", file="JsonPrimitiveContract.cs", label="ContractType = JsonContractType.Primitive", span="47-47"];
m16_2 [cluster="Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", file="JsonPrimitiveContract.cs", label="TypeCode = ConvertUtils.GetTypeCode(underlyingType)", span="49-49"];
m16_3 [cluster="Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", file="JsonPrimitiveContract.cs", label="IsReadOnlyOrFixedSize = true", span="50-50"];
m16_4 [cluster="Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", file="JsonPrimitiveContract.cs", label="Exit Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", span="44-44"];
m16_6 [file="JsonPrimitiveContract.cs", label="Newtonsoft.Json.Serialization.JsonPrimitiveContract", span=""];
m17_103 [cluster="Unk.>", file="JsonSerializer.cs", label="Entry Unk.>", span=""];
m17_21 [cluster="Newtonsoft.Json.TestConsole.Program.DeserializeJson()", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.TestConsole.Program.DeserializeJson()", span="68-68"];
m17_22 [cluster="Newtonsoft.Json.TestConsole.Program.DeserializeJson()", file="JsonSerializer.cs", label="PerformanceTests t = new PerformanceTests()", span="70-70"];
m17_23 [cluster="Newtonsoft.Json.TestConsole.Program.DeserializeJson()", file="JsonSerializer.cs", label="t.Iterations = 50000", span="71-71"];
m17_24 [cluster="Newtonsoft.Json.TestConsole.Program.DeserializeJson()", file="JsonSerializer.cs", label="t.Deserialize()", span="72-72"];
m17_25 [cluster="Newtonsoft.Json.TestConsole.Program.DeserializeJson()", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.TestConsole.Program.DeserializeJson()", span="68-68"];
m17_33 [cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", span="81-81"];
m17_34 [cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="JsonSerializer.cs", label="var json = System.IO.File.ReadAllText(''large.json'')", span="83-83"];
m17_35 [cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="JsonSerializer.cs", label="IList<PerformanceTests.RootObject> o = JsonConvert.DeserializeObject<IList<PerformanceTests.RootObject>>(json)", span="85-85"];
m17_36 [cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="JsonSerializer.cs", label="Console.WriteLine(''Press any key to start serialize'')", span="87-87"];
m17_46 [cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="JsonSerializer.cs", label="serializer.Serialize(file, o)", span="100-100"];
m17_37 [cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="JsonSerializer.cs", label="Console.ReadKey()", span="88-88"];
m17_38 [cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="JsonSerializer.cs", label="Console.WriteLine(''Serializing...'')", span="89-89"];
m17_39 [cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="JsonSerializer.cs", label="Stopwatch sw = new Stopwatch()", span="91-91"];
m17_40 [cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="JsonSerializer.cs", label="sw.Start()", span="92-92"];
m17_48 [cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="JsonSerializer.cs", label="sw.Stop()", span="104-104"];
m17_49 [cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="JsonSerializer.cs", label="Console.WriteLine(''Finished. Total seconds: '' + sw.Elapsed.TotalSeconds)", span="106-106"];
m17_41 [cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="JsonSerializer.cs", label="int i = 0", span="94-94"];
m17_42 [cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="JsonSerializer.cs", label="i < 10", span="94-94"];
m17_47 [cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="JsonSerializer.cs", label="i++", span="94-94"];
m17_43 [cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="JsonSerializer.cs", label="StreamWriter file = System.IO.File.CreateText(''largewrite.json'')", span="96-96"];
m17_44 [cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="JsonSerializer.cs", label="JsonSerializer serializer = new JsonSerializer()", span="98-98"];
m17_45 [cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="JsonSerializer.cs", label="serializer.Formatting = Formatting.Indented", span="99-99"];
m17_50 [cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", span="81-81"];
m17_16 [cluster="System.Console.ReadKey()", file="JsonSerializer.cs", label="Entry System.Console.ReadKey()", span="0-0"];
m17_27 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", span="219-219"];
m17_80 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72"];
m17_59 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", span="109-109"];
m17_60 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JsonSerializer.cs", label="var jsonFile = System.IO.File.OpenText(''large.json'')", span="111-111"];
m17_61 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JsonSerializer.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(jsonFile)", span="112-112"];
m17_62 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JsonSerializer.cs", label="JsonSerializer serializer = new JsonSerializer()", span="114-114"];
m17_63 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JsonSerializer.cs", label="serializer.Deserialize<IList<PerformanceTests.RootObject>>(jsonTextReader)", span="115-115"];
m17_64 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JsonSerializer.cs", label="Console.WriteLine(''Press any key to start deserialization'')", span="118-118"];
m17_65 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JsonSerializer.cs", label="Console.ReadKey()", span="119-119"];
m17_66 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JsonSerializer.cs", label="Console.WriteLine(''Deserializing...'')", span="120-120"];
m17_67 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JsonSerializer.cs", label="Stopwatch sw = new Stopwatch()", span="122-122"];
m17_68 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JsonSerializer.cs", label="sw.Start()", span="123-123"];
m17_76 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JsonSerializer.cs", label="sw.Stop()", span="135-135"];
m17_77 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JsonSerializer.cs", label="Console.WriteLine(''Finished. Total seconds: '' + sw.Elapsed.TotalSeconds)", span="137-137"];
m17_69 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JsonSerializer.cs", label="int i = 0", span="125-125"];
m17_70 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JsonSerializer.cs", label="i < 5", span="125-125"];
m17_75 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JsonSerializer.cs", label="i++", span="125-125"];
m17_71 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JsonSerializer.cs", label="var jsonFile = System.IO.File.OpenText(''large.json'')", span="127-127"];
m17_72 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JsonSerializer.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(jsonFile)", span="128-128"];
m17_73 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JsonSerializer.cs", label="JsonSerializer serializer = new JsonSerializer()", span="130-130"];
m17_74 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JsonSerializer.cs", label="serializer.Deserialize<IList<PerformanceTests.RootObject>>(jsonTextReader)", span="131-131"];
m17_78 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", span="109-109"];
m17_82 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", span="140-140"];
m17_83 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JsonSerializer.cs", label="string json = System.IO.File.ReadAllText(''large.json'')", span="142-142"];
m17_84 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JsonSerializer.cs", label="JavaScriptSerializer s = new JavaScriptSerializer()", span="144-144"];
m17_86 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JsonSerializer.cs", label="s.Deserialize<IList<PerformanceTests.RootObject>>(json)", span="146-146"];
m17_85 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JsonSerializer.cs", label="s.MaxJsonLength = int.MaxValue", span="145-145"];
m17_87 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JsonSerializer.cs", label="Console.WriteLine(''Press any key to start deserialization'')", span="148-148"];
m17_88 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JsonSerializer.cs", label="Console.ReadKey()", span="149-149"];
m17_89 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JsonSerializer.cs", label="Console.WriteLine(''Deserializing...'')", span="150-150"];
m17_90 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JsonSerializer.cs", label="Stopwatch sw = new Stopwatch()", span="152-152"];
m17_91 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JsonSerializer.cs", label="sw.Start()", span="153-153"];
m17_99 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JsonSerializer.cs", label="sw.Stop()", span="164-164"];
m17_100 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JsonSerializer.cs", label="Console.WriteLine(''Finished. Total seconds: '' + sw.Elapsed.TotalSeconds)", span="166-166"];
m17_92 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JsonSerializer.cs", label="int i = 0", span="155-155"];
m17_93 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JsonSerializer.cs", label="i < 5", span="155-155"];
m17_98 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JsonSerializer.cs", label="i++", span="155-155"];
m17_94 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JsonSerializer.cs", label="json = System.IO.File.ReadAllText(''large.json'')", span="157-157"];
m17_95 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JsonSerializer.cs", label="s = new JavaScriptSerializer()", span="159-159"];
m17_97 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JsonSerializer.cs", label="s.Deserialize<IList<PerformanceTests.RootObject>>(json)", span="161-161"];
m17_96 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JsonSerializer.cs", label="s.MaxJsonLength = int.MaxValue", span="160-160"];
m17_101 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", span="140-140"];
m17_0 [cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.TestConsole.Program.Main(string[])", span="40-40"];
m17_1 [cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="JsonSerializer.cs", label="Console.WriteLine(''Json.NET Test Console'')", span="42-42"];
m17_2 [cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="JsonSerializer.cs", label="string version = FileVersionInfo.GetVersionInfo(typeof(JsonConvert).Assembly.Location).FileVersion", span="44-44"];
m17_3 [cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="JsonSerializer.cs", label="Console.WriteLine(''Json.NET Version: '' + version)", span="45-45"];
m17_4 [cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="JsonSerializer.cs", label="Console.ReadKey()", span="46-46"];
m17_5 [cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="JsonSerializer.cs", label="Console.WriteLine(''Doing stuff...'')", span="48-48"];
m17_6 [cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="JsonSerializer.cs", label="DiscriminatedUnionConverterTests t = new DiscriminatedUnionConverterTests()", span="58-58"];
m17_7 [cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="JsonSerializer.cs", label="t.SerializePerformance()", span="59-59"];
m17_8 [cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="JsonSerializer.cs", label="t.DeserializePerformance()", span="60-60"];
m17_9 [cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="JsonSerializer.cs", label="Console.WriteLine()", span="62-62"];
m17_10 [cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="JsonSerializer.cs", label="Console.WriteLine(''Finished'')", span="63-63"];
m17_11 [cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="JsonSerializer.cs", label="Console.WriteLine(''Press any key to exit'')", span="64-64"];
m17_12 [cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="JsonSerializer.cs", label="Console.ReadKey()", span="65-65"];
m17_13 [cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.TestConsole.Program.Main(string[])", span="40-40"];
m17_102 [cluster="JavaScriptSerializer.cstr", file="JsonSerializer.cs", label="Entry JavaScriptSerializer.cstr", span=""];
m17_53 [cluster="System.Diagnostics.Stopwatch.Stopwatch()", file="JsonSerializer.cs", label="Entry System.Diagnostics.Stopwatch.Stopwatch()", span="0-0"];
m17_54 [cluster="System.Diagnostics.Stopwatch.Start()", file="JsonSerializer.cs", label="Entry System.Diagnostics.Stopwatch.Start()", span="0-0"];
m17_57 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="831-831"];
m17_28 [cluster="Newtonsoft.Json.TestConsole.Program.DeserializeLargeJson()", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.TestConsole.Program.DeserializeLargeJson()", span="75-75"];
m17_29 [cluster="Newtonsoft.Json.TestConsole.Program.DeserializeLargeJson()", file="JsonSerializer.cs", label="PerformanceTests t = new PerformanceTests()", span="77-77"];
m17_30 [cluster="Newtonsoft.Json.TestConsole.Program.DeserializeLargeJson()", file="JsonSerializer.cs", label="t.DeserializeLargeJson()", span="78-78"];
m17_31 [cluster="Newtonsoft.Json.TestConsole.Program.DeserializeLargeJson()", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.TestConsole.Program.DeserializeLargeJson()", span="75-75"];
m17_18 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", span="90-90"];
m17_20 [cluster="System.Console.WriteLine()", file="JsonSerializer.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m17_15 [cluster="System.Diagnostics.FileVersionInfo.GetVersionInfo(string)", file="JsonSerializer.cs", label="Entry System.Diagnostics.FileVersionInfo.GetVersionInfo(string)", span="0-0"];
m17_26 [cluster="Newtonsoft.Json.Tests.PerformanceTests.PerformanceTests()", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.PerformanceTests()", span="66-66"];
m17_14 [cluster="System.Console.WriteLine(string)", file="JsonSerializer.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m17_19 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", span="114-114"];
m17_56 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="445-445"];
m17_52 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="739-739"];
m17_81 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="688-688"];
m17_55 [cluster="System.IO.File.CreateText(string)", file="JsonSerializer.cs", label="Entry System.IO.File.CreateText(string)", span="0-0"];
m17_79 [cluster="System.IO.File.OpenText(string)", file="JsonSerializer.cs", label="Entry System.IO.File.OpenText(string)", span="0-0"];
m17_17 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DiscriminatedUnionConverterTests()", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DiscriminatedUnionConverterTests()", span="41-41"];
m17_51 [cluster="System.IO.File.ReadAllText(string)", file="JsonSerializer.cs", label="Entry System.IO.File.ReadAllText(string)", span="0-0"];
m17_58 [cluster="System.Diagnostics.Stopwatch.Stop()", file="JsonSerializer.cs", label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0"];
m17_32 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeLargeJson()", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.DeserializeLargeJson()", span="182-182"];
m18_317 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", span="713-713"];
m18_254 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="JsonSerializerInternalReader.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
m18_251 [cluster="System.Reflection.ConstructorInfo.Invoke(object[])", file="JsonSerializerInternalReader.cs", label="Entry System.Reflection.ConstructorInfo.Invoke(object[])", span="0-0"];
m18_424 [cluster="Newtonsoft.Json.Serialization.IValueProvider.SetValue(object, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.IValueProvider.SetValue(object, object)", span="37-37"];
m18_889 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", span="369-369"];
m18_35 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82"];
m18_34 [cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonSerializerInternalReader.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m18_362 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", span="866-866"];
m18_487 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="contract.DefaultCreator != null && (!contract.DefaultCreatorNonPublic || Serializer._constructorHandling == ConstructorHandling.AllowNonPublicDefaultConstructor)", span="882-882"];
m18_480 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot create and populate list type {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.CreatedType));", span="870-870"];
m18_496 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unable to find a constructor to use for type {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="899-899"];
m18_481 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="contract.IsReadOnlyOrFixedSize", span="872-872"];
m18_488 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="object list = contract.DefaultCreator()", span="884-884"];
m18_493 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="contract.ParametrizedConstructor != null", span="892-892"];
m18_479 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="!contract.CanDeserialize", span="869-869"];
m18_485 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="list = contract.CreateWrapper(list)", span="878-878"];
m18_490 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="list = contract.CreateWrapper(list)", span="887-887"];
m18_483 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="IList list = contract.CreateTemporaryCollection()", span="875-875"];
m18_484 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="contract.ShouldCreateWrapper", span="877-877"];
m18_489 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="contract.ShouldCreateWrapper", span="886-886"];
m18_495 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="return contract.CreateTemporaryCollection();", span="895-895"];
m18_482 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="createdFromNonDefaultConstructor = true", span="874-874"];
m18_492 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="return (IList)list;", span="890-890"];
m18_494 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="createdFromNonDefaultConstructor = true", span="894-894"];
m18_486 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="return list;", span="880-880"];
m18_491 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="createdFromNonDefaultConstructor = false", span="889-889"];
m18_497 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", span="866-866"];
m18_805 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m18_157 [cluster="Newtonsoft.Json.Linq.JRaw.JRaw(object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JRaw.JRaw(object)", span="48-48"];
m18_461 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", span="830-830"];
m18_462 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="834-834"];
m18_463 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Read object reference Id '{0}' for {1}.''.FormatWith(CultureInfo.InvariantCulture, id, value.GetType())), null)", span="835-835"];
m18_464 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label="Serializer.GetReferenceResolver().AddReference(this, id, value)", span="837-837"];
m18_466 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Error reading object reference '{0}'.''.FormatWith(CultureInfo.InvariantCulture, id), ex);", span="841-841"];
m18_465 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label=Exception, span="839-839"];
m18_467 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", span="830-830"];
m18_173 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="JsonSerializerInternalReader.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m18_72 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", span="1579-1579"];
m18_861 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="return reader.Read();", span="1584-1584"];
m18_865 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="!reader.Read()", span="1593-1593"];
m18_860 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label=hasConverter, span="1583-1583"];
m18_862 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="ReadType t = (contract != null) ? contract.InternalReadType : ReadType.Read", span="1586-1586"];
m18_867 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.Comment", span="1595-1595"];
m18_870 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="reader.ReadAsInt32()", span="1599-1599"];
m18_872 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="reader.ReadAsDecimal()", span="1602-1602"];
m18_874 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="reader.ReadAsBytes()", span="1605-1605"];
m18_876 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="reader.ReadAsString()", span="1608-1608"];
m18_878 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="reader.ReadAsDateTime()", span="1611-1611"];
m18_880 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="reader.ReadAsDateTimeOffset()", span="1615-1615"];
m18_882 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="return (reader.TokenType != JsonToken.None);", span="1622-1622"];
m18_864 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="ReadType.Read", span="1590-1590"];
m18_866 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="return false;", span="1594-1594"];
m18_881 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="throw new ArgumentOutOfRangeException();", span="1619-1619"];
m18_868 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="return true;", span="1597-1597"];
m18_863 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label=t, span="1588-1588"];
m18_869 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="ReadType.ReadAsInt32", span="1598-1598"];
m18_871 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="ReadType.ReadAsDecimal", span="1601-1601"];
m18_873 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="ReadType.ReadAsBytes", span="1604-1604"];
m18_875 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="ReadType.ReadAsString", span="1607-1607"];
m18_877 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="ReadType.ReadAsDateTime", span="1610-1610"];
m18_879 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="ReadType.ReadAsDateTimeOffset", span="1614-1614"];
m18_883 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", span="1579-1579"];
m18_37 [cluster="object.ToString()", file="JsonSerializerInternalReader.cs", label="Entry object.ToString()", span="0-0"];
m18_29 [cluster="object.GetType()", file="JsonSerializerInternalReader.cs", label="Entry object.GetType()", span="0-0"];
m18_884 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsInt32()", span="338-338"];
m18_521 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", span="939-939"];
m18_522 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="941-941"];
m18_523 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Finished deserializing {0}''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="942-942"];
m18_524 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs", label="contract.InvokeOnDeserialized(value, Serializer._context)", span="944-944"];
m18_525 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", span="939-939"];
m18_526 [cluster="Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserialized(object, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserialized(object, System.Runtime.Serialization.StreamingContext)", span="367-367"];
m18_757 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", span="1411-1411"];
m18_760 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="1417-1417"];
m18_761 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Deserializing {0} using a non-default constructor '{1}'.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType, constructorInfo)), null)", span="1418-1418"];
m18_762 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="IDictionary<JsonProperty, object> propertyValues = ResolvePropertyAndConstructorValues(contract, containerProperty, reader, objectType)", span="1420-1420"];
m18_772 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="AddReference(reader, id, createdObject)", span="1437-1437"];
m18_773 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="OnDeserializing(reader, contract, createdObject)", span="1439-1439"];
m18_777 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="ShouldSetPropertyValue(remainingPropertyValue.Key, remainingPropertyValue.Value)", span="1447-1447"];
m18_780 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="JsonContract propertyContract = Serializer._contractResolver.ResolveContract(property.PropertyType)", span="1454-1454"];
m18_797 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="OnDeserialized(reader, contract, createdObject)", span="1491-1491"];
m18_759 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="Type objectType = contract.UnderlyingType", span="1415-1415"];
m18_763 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="IDictionary<ParameterInfo, object> constructorParameters = constructorInfo.GetParameters().ToDictionary(p => p, p => (object) null)", span="1422-1422"];
m18_765 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label=propertyValues, span="1425-1425"];
m18_770 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="object createdObject = constructorInfo.Invoke(constructorParameters.Values.ToArray())", span="1434-1434"];
m18_771 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="id != null", span="1436-1436"];
m18_774 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label=remainingPropertyValues, span="1442-1442"];
m18_776 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="object value = remainingPropertyValue.Value", span="1445-1445"];
m18_778 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="property.ValueProvider.SetValue(createdObject, value)", span="1449-1449"];
m18_779 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="!property.Writable && value != null", span="1451-1451"];
m18_775 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="JsonProperty property = remainingPropertyValue.Key", span="1444-1444"];
m18_781 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="propertyContract.ContractType == JsonContractType.Array", span="1456-1456"];
m18_782 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="JsonArrayContract propertyArrayContract = (JsonArrayContract)propertyContract", span="1458-1458"];
m18_789 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="propertyContract.ContractType == JsonContractType.Dictionary", span="1472-1472"];
m18_790 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="JsonDictionaryContract dictionaryContract = (JsonDictionaryContract)propertyContract", span="1474-1474"];
m18_798 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="return createdObject;", span="1492-1492"];
m18_783 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="object createdObjectCollection = property.ValueProvider.GetValue(createdObject)", span="1460-1460"];
m18_791 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="object createdObjectDictionary = property.ValueProvider.GetValue(createdObject)", span="1476-1476"];
m18_786 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="IWrappedCollection newValues = propertyArrayContract.CreateWrapper(value)", span="1464-1464"];
m18_785 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="IWrappedCollection createdObjectCollectionWrapper = propertyArrayContract.CreateWrapper(createdObjectCollection)", span="1463-1463"];
m18_794 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="IDictionary newValues = (dictionaryContract.ShouldCreateWrapper) ? dictionaryContract.CreateWrapper(value) : (IDictionary) value", span="1480-1480"];
m18_793 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="IDictionary targetDictionary = (dictionaryContract.ShouldCreateWrapper) ? dictionaryContract.CreateWrapper(createdObjectDictionary) : (IDictionary) createdObjectDictionary", span="1479-1479"];
m18_758 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="ValidationUtils.ArgumentNotNull(constructorInfo, ''constructorInfo'')", span="1413-1413"];
m18_764 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="IDictionary<JsonProperty, object> remainingPropertyValues = new Dictionary<JsonProperty, object>()", span="1423-1423"];
m18_766 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="ParameterInfo matchingConstructorParameter = constructorParameters.ForgivingCaseSensitiveFind(kv => kv.Key.Name, propertyValue.Key.UnderlyingName).Key", span="1427-1427"];
m18_768 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="constructorParameters[matchingConstructorParameter] = propertyValue.Value", span="1429-1429"];
m18_769 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="remainingPropertyValues.Add(propertyValue)", span="1431-1431"];
m18_784 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="createdObjectCollection != null", span="1461-1461"];
m18_787 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label=newValues, span="1466-1466"];
m18_792 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="createdObjectDictionary != null", span="1477-1477"];
m18_795 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label=newValues, span="1482-1482"];
m18_788 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="createdObjectCollectionWrapper.Add(newValue)", span="1468-1468"];
m18_796 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="targetDictionary.Add(newValue.Key, newValue.Value)", span="1484-1484"];
m18_767 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="matchingConstructorParameter != null", span="1428-1428"];
m18_799 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", span="1411-1411"];
m18_397 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", span="497-497"];
m18_158 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", span="299-299"];
m18_159 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="contract.ContractType", span="301-301"];
m18_164 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="return @''JSON object (e.g. {''''name'''':''''value''''})'';", span="311-311"];
m18_166 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="return @''JSON array (e.g. [1,2,3])'';", span="313-313"];
m18_168 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="return @''JSON primitive value (e.g. string, number, boolean, null)'';", span="315-315"];
m18_170 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="return @''JSON string value'';", span="317-317"];
m18_171 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="throw new ArgumentOutOfRangeException();", span="319-319"];
m18_160 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="JsonContractType.Object", span="303-303"];
m18_165 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="JsonContractType.Array", span="312-312"];
m18_167 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="JsonContractType.Primitive", span="314-314"];
m18_169 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="JsonContractType.String", span="316-316"];
m18_163 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="JsonContractType.Dynamic", span="309-309"];
m18_161 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="JsonContractType.Dictionary", span="304-304"];
m18_162 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="JsonContractType.Serializable", span="306-306"];
m18_172 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", span="299-299"];
m18_83 [cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", span="208-208"];
m18_707 [cluster="System.Runtime.Serialization.SerializationInfo.SerializationInfo(System.Type, System.Runtime.Serialization.IFormatterConverter)", file="JsonSerializerInternalReader.cs", label="Entry System.Runtime.Serialization.SerializationInfo.SerializationInfo(System.Type, System.Runtime.Serialization.IFormatterConverter)", span="0-0"];
m18_319 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", span="87-87"];
m18_677 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.Skip()", span="749-749"];
m18_364 [cluster="System.Type.GetArrayRank()", file="JsonSerializerInternalReader.cs", label="Entry System.Type.GetArrayRank()", span="0-0"];
m18_316 [cluster="Newtonsoft.Json.Serialization.ITraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.ITraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", span="24-24"];
m18_708 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="1730-1730"];
m18_363 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1039-1039"];
m18_576 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="AddReference(reader, id, list)", span="1044-1044"];
m18_577 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="OnDeserializing(reader, contract, list)", span="1046-1046"];
m18_578 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonContract collectionItemContract = GetContractSafe(contract.CollectionItemType)", span="1048-1048"];
m18_579 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonConverter collectionItemConverter = GetConverter(collectionItemContract, null, contract, containerProperty)", span="1049-1049"];
m18_587 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="ReadForType(reader, collectionItemContract, collectionItemConverter != null)", span="1065-1065"];
m18_596 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="value = DeserializeConvertable(collectionItemConverter, reader, contract.CollectionItemType, null)", span="1080-1080"];
m18_597 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="value = CreateValueInternal(reader, contract.CollectionItemType, collectionItemContract, null, contract, containerProperty, null)", span="1082-1082"];
m18_601 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="IsErrorHandled(list, contract, errorPosition.Position, reader as IJsonLineInfo, reader.Path, ex)", span="1097-1097"];
m18_602 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="HandleError(reader, true, initialDepth)", span="1099-1099"];
m18_623 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="ThrowUnexpectedEndException(reader, contract, list, ''Unexpected end when deserializing array.'')", span="1156-1156"];
m18_624 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="OnDeserialized(reader, contract, list)", span="1158-1158"];
m18_607 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="reader.Read()", span="1120-1120"];
m18_604 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Infinite loop detected from error handling.'', ex);", span="1105-1105"];
m18_580 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="int? previousErrorIndex = null", span="1051-1051"];
m18_584 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="bool finished = false", span="1056-1056"];
m18_575 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="id != null", span="1043-1043"];
m18_595 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="collectionItemConverter != null && collectionItemConverter.CanRead", span="1079-1079"];
m18_586 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="listStack.Count == rank", span="1061-1061"];
m18_588 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="reader.TokenType", span="1067-1067"];
m18_622 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!finished", span="1155-1155"];
m18_598 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="currentList.Add(value)", span="1084-1084"];
m18_600 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonPosition errorPosition = reader.GetPosition(initialDepth)", span="1095-1095"];
m18_606 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw;", span="1114-1114"];
m18_585 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="int initialDepth = reader.Depth", span="1059-1059"];
m18_603 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="previousErrorIndex != null && previousErrorIndex == errorPosition.Position", span="1101-1101"];
m18_625 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="return list;", span="1159-1159"];
m18_594 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="object value", span="1077-1077"];
m18_608 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="reader.TokenType", span="1122-1122"];
m18_581 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Stack<IList> listStack = new Stack<IList>()", span="1052-1052"];
m18_583 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="IList currentList = list", span="1054-1054"];
m18_621 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!finished", span="1153-1153"];
m18_620 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing multidimensional array: '' + reader.TokenType);", span="1145-1145"];
m18_574 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="int rank = contract.UnderlyingType.GetArrayRank()", span="1041-1041"];
m18_582 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="listStack.Push(list)", span="1053-1053"];
m18_589 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.EndArray", span="1069-1069"];
m18_593 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.Comment", span="1074-1074"];
m18_618 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="finished = true", span="1139-1139"];
m18_591 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="currentList = listStack.Peek()", span="1071-1071"];
m18_599 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label=Exception, span="1093-1093"];
m18_605 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="previousErrorIndex = errorPosition.Position", span="1109-1109"];
m18_592 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="previousErrorIndex = null", span="1072-1072"];
m18_609 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.StartArray", span="1124-1124"];
m18_614 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.EndArray", span="1130-1130"];
m18_619 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.Comment", span="1142-1142"];
m18_590 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="listStack.Pop()", span="1070-1070"];
m18_612 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="listStack.Push(newList)", span="1127-1127"];
m18_615 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="listStack.Pop()", span="1131-1131"];
m18_616 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="listStack.Count > 0", span="1133-1133"];
m18_617 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="currentList = listStack.Peek()", span="1135-1135"];
m18_611 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="currentList.Add(newList)", span="1126-1126"];
m18_610 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="IList newList = new List<object>()", span="1125-1125"];
m18_613 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="currentList = newList", span="1128-1128"];
m18_626 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1039-1039"];
m18_77 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", span="1827-1827"];
m18_990 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonSerializerInternalReader.cs", label="ClearErrorContext()", span="1829-1829"];
m18_992 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonSerializerInternalReader.cs", label="reader.Skip()", span="1833-1833"];
m18_994 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonSerializerInternalReader.cs", label="!reader.Read()", span="1837-1837"];
m18_991 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonSerializerInternalReader.cs", label=readPastError, span="1831-1831"];
m18_993 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonSerializerInternalReader.cs", label="reader.Depth > (initialDepth + 1)", span="1835-1835"];
m18_995 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", span="1827-1827"];
m18_75 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
m18_84 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetFormatterConverter()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetFormatterConverter()", span="190-190"];
m18_85 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetFormatterConverter()", file="JsonSerializerInternalReader.cs", label="_formatterConverter == null", span="192-192"];
m18_86 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetFormatterConverter()", file="JsonSerializerInternalReader.cs", label="_formatterConverter = new JsonFormatterConverter(GetInternalSerializer())", span="193-193"];
m18_87 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetFormatterConverter()", file="JsonSerializerInternalReader.cs", label="return _formatterConverter;", span="195-195"];
m18_88 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetFormatterConverter()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetFormatterConverter()", span="190-190"];
m18_887 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsString()", span="344-344"];
m18_31 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="332-332"];
m18_631 [cluster="System.Collections.IList.Add(object)", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.IList.Add(object)", span="0-0"];
m18_807 [cluster="System.Collections.IDictionary.Add(object, object)", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.IDictionary.Add(object, object)", span="0-0"];
m18_315 [cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", span="91-91"];
m18_313 [cluster="Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", span="849-849"];
m18_248 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", span="664-664"];
m18_368 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="return (contract == null || contract.UnderlyingType == typeof (object) || contract.ContractType == JsonContractType.Linq\r\n#if !(NET35 || NET20 || PORTABLE40)\r\n        || contract.UnderlyingType == typeof(IDynamicMetaObjectProvider)\r\n#endif\r\n        );", span="666-670"];
m18_369 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", span="664-664"];
m18_90 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", span="199-199"];
m18_91 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="ValidationUtils.ArgumentNotNull(reader, ''reader'')", span="201-201"];
m18_92 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="contract != null && contract.UnderlyingType == typeof (JRaw)", span="203-203"];
m18_93 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="return JRaw.Create(reader);", span="205-205"];
m18_96 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="writer.WriteToken(reader)", span="212-212"];
m18_94 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="JToken token", span="209-209"];
m18_98 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="return token;", span="216-216"];
m18_95 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="JTokenWriter writer = new JTokenWriter()", span="210-210"];
m18_97 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="token = writer.Token", span="213-213"];
m18_99 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", span="199-199"];
m18_0 [cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", span="162-162"];
m18_1 [cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="JsonSerializerInternalReader.cs", label="ContractType = JsonContractType.Object", span="165-165"];
m18_2 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", span="69-69"];
m18_3 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="ValidationUtils.ArgumentNotNull(target, ''target'')", span="71-71"];
m18_155 [cluster="string.IsNullOrEmpty(string)", file="JsonSerializerInternalReader.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m18_800 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", span="1508-1508"];
m18_833 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="1527-1527"];
m18_834 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="JsonConverter propertyConverter = GetConverter(property.PropertyContract, property.MemberConverter, contract, containerProperty)", span="1529-1529"];
m18_835 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="!ReadForType(reader, property.PropertyContract, propertyConverter != null)", span="1531-1531"];
m18_839 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="1537-1537"];
m18_842 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="propertyValue = DeserializeConvertable(propertyConverter, reader, property.PropertyType, null)", span="1541-1541"];
m18_843 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="propertyValue = CreateValueInternal(reader, property.PropertyType, property.PropertyContract, property, contract, containerProperty, null)", span="1543-1543"];
m18_848 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="1557-1557"];
m18_849 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Could not find member '{0}' on {1}.''.FormatWith(CultureInfo.InvariantCulture, memberName, contract.UnderlyingType)), null)", span="1558-1558"];
m18_850 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="Serializer._missingMemberHandling == MissingMemberHandling.Error", span="1560-1560"];
m18_829 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="string memberName = reader.Value.ToString()", span="1517-1517"];
m18_845 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="reader.Skip()", span="1549-1549"];
m18_852 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="reader.Skip()", span="1563-1563"];
m18_846 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="!reader.Read()", span="1554-1554"];
m18_857 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="!exit && reader.Read()", span="1574-1574"];
m18_836 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="1532-1532"];
m18_847 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="1555-1555"];
m18_826 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="bool exit = false", span="1511-1511"];
m18_830 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="JsonProperty property = contract.ConstructorParameters.GetClosestMatchProperty(memberName) ??\r\n              contract.Properties.GetClosestMatchProperty(memberName)", span="1521-1522"];
m18_832 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="property.PropertyContract == null", span="1526-1526"];
m18_841 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="propertyConverter != null && propertyConverter.CanRead", span="1540-1540"];
m18_837 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="!property.Ignored", span="1534-1534"];
m18_838 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="property.PropertyContract == null", span="1536-1536"];
m18_840 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="object propertyValue", span="1539-1539"];
m18_844 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="propertyValues[property] = propertyValue", span="1545-1545"];
m18_851 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Could not find member '{0}' on object of type '{1}'''.FormatWith(CultureInfo.InvariantCulture, memberName, objectType.Name));", span="1561-1561"];
m18_828 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="JsonToken.PropertyName", span="1516-1516"];
m18_831 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="property != null", span="1524-1524"];
m18_853 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="JsonToken.Comment", span="1566-1566"];
m18_855 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="exit = true", span="1569-1569"];
m18_858 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="return propertyValues;", span="1576-1576"];
m18_825 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="IDictionary<JsonProperty, object> propertyValues = new Dictionary<JsonProperty, object>()", span="1510-1510"];
m18_827 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="reader.TokenType", span="1514-1514"];
m18_856 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing object: '' + reader.TokenType);", span="1572-1572"];
m18_854 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="JsonToken.EndObject", span="1568-1568"];
m18_859 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", span="1508-1508"];
m18_514 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", span="153-153"];
m18_801 [cluster="System.Reflection.MethodBase.GetParameters()", file="JsonSerializerInternalReader.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m18_520 [cluster="Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserializing(object, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserializing(object, System.Runtime.Serialization.StreamingContext)", span="356-356"];
m18_76 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", span="109-109"];
m18_102 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="432-432"];
m18_89 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.JsonFormatterConverter(Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.JsonFormatterConverter(Newtonsoft.Json.JsonSerializer)", span="38-38"];
m18_573 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", span="1162-1162"];
m18_636 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonSerializerInternalReader.cs", label="IsErrorHandled(currentObject, contract, null, reader as IJsonLineInfo, reader.Path, ex)", span="1170-1170"];
m18_637 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonSerializerInternalReader.cs", label="HandleError(reader, false, 0)", span="1171-1171"];
m18_635 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonSerializerInternalReader.cs", label=Exception, span="1168-1168"];
m18_638 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonSerializerInternalReader.cs", label="throw;", span="1173-1173"];
m18_634 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, message);", span="1166-1166"];
m18_639 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", span="1162-1162"];
m18_36 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", span="597-597"];
m18_329 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="!reader.Read()", span="599-599"];
m18_330 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when deserializing object.'');", span="600-600"];
m18_331 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", span="597-597"];
m18_391 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", span="136-136"];
m18_629 [cluster="System.Collections.Generic.Stack<T>.Pop()", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.Stack<T>.Pop()", span="0-0"];
m18_888 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTime()", span="362-362"];
m18_74 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", span="241-241"];
m18_118 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return CreateJToken(reader, contract);", span="244-244"];
m18_121 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return CreateObject(reader, objectType, contract, member, containerContract, containerMember, existingValue);", span="253-253"];
m18_123 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return CreateList(reader, objectType, contract, member, existingValue, null);", span="255-255"];
m18_129 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return EnsureType(reader, reader.Value, CultureInfo.InvariantCulture, contract, objectType);", span="261-261"];
m18_136 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return EnsureType(reader, s, CultureInfo.InvariantCulture, contract, objectType);", span="273-273"];
m18_139 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return EnsureType(reader, constructorName, CultureInfo.InvariantCulture, contract, objectType);", span="277-277"];
m18_144 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return EnsureType(reader, reader.Value, CultureInfo.InvariantCulture, contract, objectType);", span="285-285"];
m18_138 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="string constructorName = reader.Value.ToString()", span="275-275"];
m18_149 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="reader.Read()", span="294-294"];
m18_117 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="contract != null && contract.ContractType == JsonContractType.Linq", span="243-243"];
m18_120 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.StartObject", span="252-252"];
m18_122 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.StartArray", span="254-254"];
m18_128 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.Bytes", span="260-260"];
m18_131 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="string s = (string)reader.Value", span="263-263"];
m18_134 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="objectType == typeof (byte[])", span="270-270"];
m18_142 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="objectType == typeof (DBNull)", span="281-281"];
m18_119 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="reader.TokenType", span="248-248"];
m18_132 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="string.IsNullOrEmpty(s) && objectType != typeof(string) && objectType != typeof(object) && contract != null && contract.IsNullable", span="266-266"];
m18_146 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return new JRaw((string) reader.Value);", span="287-287"];
m18_148 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token while deserializing object: '' + reader.TokenType);", span="292-292"];
m18_150 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when deserializing object.'');", span="296-296"];
m18_137 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.StartConstructor", span="274-274"];
m18_147 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.Comment", span="288-288"];
m18_135 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return Convert.FromBase64String(s);", span="271-271"];
m18_133 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return null;", span="267-267"];
m18_143 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return DBNull.Value;", span="282-282"];
m18_127 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.Date", span="259-259"];
m18_130 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.String", span="262-262"];
m18_141 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.Undefined", span="279-279"];
m18_124 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.Integer", span="256-256"];
m18_140 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.Null", span="278-278"];
m18_145 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.Raw", span="286-286"];
m18_126 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.Boolean", span="258-258"];
m18_125 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.Float", span="257-257"];
m18_151 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", span="241-241"];
m18_32 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", span="188-188"];
m18_950 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", span="1772-1772"];
m18_976 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="1794-1794"];
m18_977 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Populate) && property.Writable", span="1796-1796"];
m18_978 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="property.ValueProvider.SetValue(newObject, EnsureType(reader, property.GetResolvedDefaultValue(), CultureInfo.InvariantCulture, property.PropertyContract, property.PropertyType))", span="1797-1797"];
m18_983 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="IsErrorHandled(newObject, contract, property.PropertyName, reader as IJsonLineInfo, reader.Path, ex)", span="1807-1807"];
m18_984 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="HandleError(reader, true, initialDepth)", span="1808-1808"];
m18_974 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Required property '{0}' not found in JSON.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName));", span="1791-1791"];
m18_981 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Required property '{0}' expects a value but got null.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName));", span="1801-1801"];
m18_967 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="JsonProperty property = propertyPresence.Key", span="1778-1778"];
m18_975 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="property.PropertyContract == null", span="1793-1793"];
m18_982 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label=Exception, span="1805-1805"];
m18_966 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label=propertiesPresence, span="1776-1776"];
m18_985 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="throw;", span="1810-1810"];
m18_965 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="propertiesPresence != null", span="1774-1774"];
m18_970 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="Required resolvedRequired = property._required ?? contract.ItemRequired ?? Required.Default", span="1785-1785"];
m18_973 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="resolvedRequired == Required.AllowNull || resolvedRequired == Required.Always", span="1790-1790"];
m18_980 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="resolvedRequired == Required.Always", span="1800-1800"];
m18_968 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="PropertyPresence presence = propertyPresence.Value", span="1779-1779"];
m18_969 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="presence == PropertyPresence.None || presence == PropertyPresence.Null", span="1781-1781"];
m18_971 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label=presence, span="1787-1787"];
m18_972 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="PropertyPresence.None", span="1789-1789"];
m18_979 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="PropertyPresence.Null", span="1799-1799"];
m18_986 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", span="1772-1772"];
m18_422 [cluster="Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", span="44-44"];
m18_633 [cluster="System.Collections.Generic.List<T>.List()", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m18_886 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytes()", span="350-350"];
m18_459 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", span="167-167"];
m18_803 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m18_393 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", span="564-564"];
m18_42 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", span="125-125"];
m18_45 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="JsonSerializerInternalReader.cs", label="return Serializer._contractResolver.ResolveContract(type);", span="130-130"];
m18_43 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="JsonSerializerInternalReader.cs", label="type == null", span="127-127"];
m18_44 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="JsonSerializerInternalReader.cs", label="return null;", span="128-128"];
m18_46 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", span="125-125"];
m18_41 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1664-1664"];
m18_923 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", color=green, community=0, file="JsonSerializerInternalReader.cs", label="!reader.Read()", prediction=325, span="1701-1701"];
m18_921 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Serializer._missingMemberHandling == MissingMemberHandling.Error", span="1698-1698"];
m18_924 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", color=green, community=0, file="JsonSerializerInternalReader.cs", label="SetExtensionData(contract, reader, memberName, newObject)", prediction=325, span="1704-1704"];
m18_941 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!finished && reader.Read()", span="1740-1740"];
m18_916 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="string memberName = reader.Value.ToString()", span="1685-1685"];
m18_931 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", color=green, community=0, file="JsonSerializerInternalReader.cs", label="!SetPropertyValue(property, propertyConverter, contract, member, reader, newObject)", prediction=325, span="1719-1719"];
m18_917 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonProperty property = contract.Properties.GetClosestMatchProperty(memberName)", span="1691-1691"];
m18_927 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonConverter propertyConverter = GetConverter(property.PropertyContract, property.MemberConverter, contract, member)", span="1711-1711"];
m18_930 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="SetPropertyPresence(reader, property, propertiesPresence)", span="1716-1716"];
m18_932 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", color=green, community=0, file="JsonSerializerInternalReader.cs", label="SetExtensionData(contract, reader, memberName, newObject)", prediction=325, span="1720-1720"];
m18_933 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label=Exception, span="1722-1722"];
m18_908 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="OnDeserializing(reader, contract, newObject)", span="1666-1666"];
m18_909 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Dictionary<JsonProperty, PropertyPresence> propertiesPresence = (contract.HasRequiredOrDefaultValueProperties || HasFlag(Serializer._defaultValueHandling, DefaultValueHandling.Populate))\r\n        ? contract.Properties.ToDictionary(m => m, m => PropertyPresence.None)\r\n        : null", span="1669-1671"];
m18_911 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="AddReference(reader, id, newObject)", span="1674-1674"];
m18_919 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="1695-1695"];
m18_920 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Could not find member '{0}' on {1}''.FormatWith(CultureInfo.InvariantCulture, memberName, contract.UnderlyingType)), null)", span="1696-1696"];
m18_926 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="1709-1709"];
m18_928 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!ReadForType(reader, property.PropertyContract, propertyConverter != null)", span="1713-1713"];
m18_934 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="IsErrorHandled(newObject, contract, memberName, reader as IJsonLineInfo, reader.Path, ex)", span="1724-1724"];
m18_935 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="HandleError(reader, true, initialDepth)", span="1725-1725"];
m18_943 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="ThrowUnexpectedEndException(reader, contract, newObject, ''Unexpected end when deserializing object.'')", span="1743-1743"];
m18_944 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="EndObject(newObject, reader, contract, initialDepth, propertiesPresence)", span="1745-1745"];
m18_945 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="OnDeserialized(reader, contract, newObject)", span="1747-1747"];
m18_910 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="id != null", span="1673-1673"];
m18_912 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="int initialDepth = reader.Depth", span="1676-1676"];
m18_914 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="reader.TokenType", span="1681-1681"];
m18_922 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Could not find member '{0}' on object of type '{1}'''.FormatWith(CultureInfo.InvariantCulture, memberName, contract.UnderlyingType.Name));", span="1699-1699"];
m18_929 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="1714-1714"];
m18_940 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing object: '' + reader.TokenType);", span="1738-1738"];
m18_946 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="return newObject;", span="1748-1748"];
m18_939 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.Comment", span="1734-1734"];
m18_938 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="finished = true", span="1732-1732"];
m18_913 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="bool finished = false", span="1678-1678"];
m18_942 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!finished", span="1742-1742"];
m18_915 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.PropertyName", span="1683-1683"];
m18_918 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="property == null", span="1693-1693"];
m18_925 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="property.PropertyContract == null", span="1708-1708"];
m18_936 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw;", span="1727-1727"];
m18_937 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.EndObject", span="1731-1731"];
m18_947 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1664-1664"];
m18_321 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", span="583-583"];
m18_326 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type '{0}' because the type requires a {1} to deserialize correctly.\r\nTo fix this error either change the JSON to a {1} or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\n''.FormatWith(CultureInfo.InvariantCulture, objectType, GetExpectedDescription(contract)));", span="590-592"];
m18_323 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Could not resolve type '{0}' to a JsonContract.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="586-586"];
m18_325 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="arrayContract == null", span="589-589"];
m18_322 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="contract == null", span="585-585"];
m18_324 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="JsonArrayContract arrayContract = contract as JsonArrayContract", span="588-588"];
m18_327 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="return arrayContract;", span="594-594"];
m18_328 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", span="583-583"];
m18_458 [cluster="Newtonsoft.Json.JsonReader.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", span="869-869"];
m18_40 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="947-947"];
m18_544 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", color=green, community=0, file="JsonSerializerInternalReader.cs", label="(keyTypeCode == PrimitiveTypeCode.DateTime || keyTypeCode == PrimitiveTypeCode.DateTimeNullable)\r\n                  && DateTimeUtils.TryParseDateTime(keyValue.ToString(), DateParseHandling.DateTime, reader.DateTimeZoneHandling, out dt)", prediction=329, span="981-982"];
m18_538 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="PrimitiveTypeCode keyTypeCode = (contract.KeyContract is JsonPrimitiveContract) ? ((JsonPrimitiveContract)contract.KeyContract).TypeCode : PrimitiveTypeCode.Empty", span="966-966"];
m18_542 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="object keyValue = reader.Value", span="974-974"];
m18_543 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", color=green, community=0, file="JsonSerializerInternalReader.cs", label="object dt", prediction=330, span="979-979"];
m18_545 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", color=green, community=0, file="JsonSerializerInternalReader.cs", label="keyValue = dt", prediction=331, span="984-984"];
m18_546 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", color=green, community=0, file="JsonSerializerInternalReader.cs", label="(keyTypeCode == PrimitiveTypeCode.DateTimeOffset || keyTypeCode == PrimitiveTypeCode.DateTimeOffsetNullable)\r\n                  && DateTimeUtils.TryParseDateTime(keyValue.ToString(), DateParseHandling.DateTimeOffset, reader.DateTimeZoneHandling, out dt)", prediction=329, span="987-988"];
m18_547 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", color=green, community=0, file="JsonSerializerInternalReader.cs", label="keyValue = dt", prediction=333, span="990-990"];
m18_548 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="keyValue = EnsureType(reader, keyValue, CultureInfo.InvariantCulture, contract.KeyContract, contract.DictionaryKeyType)", span="995-995"];
m18_549 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label=Exception, span="998-998"];
m18_551 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!ReadForType(reader, contract.ItemContract, dictionaryValueConverter != null)", span="1003-1003"];
m18_557 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="dictionary[keyValue] = itemValue", span="1012-1012"];
m18_559 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="IsErrorHandled(underlyingDictionary, contract, keyValue, reader as IJsonLineInfo, reader.Path, ex)", span="1016-1016"];
m18_530 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="AddReference(reader, id, underlyingDictionary)", span="953-953"];
m18_531 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="OnDeserializing(reader, contract, underlyingDictionary)", span="955-955"];
m18_534 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="contract.KeyContract = GetContractSafe(contract.DictionaryKeyType)", span="960-960"];
m18_536 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="contract.ItemContract = GetContractSafe(contract.DictionaryValueType)", span="963-963"];
m18_537 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonConverter dictionaryValueConverter = contract.ItemConverter ?? GetConverter(contract.ItemContract, null, contract, containerProperty)", span="965-965"];
m18_555 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="itemValue = DeserializeConvertable(dictionaryValueConverter, reader, contract.DictionaryValueType, null)", span="1008-1008"];
m18_556 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="itemValue = CreateValueInternal(reader, contract.DictionaryValueType, contract.ItemContract, null, contract, containerProperty, null)", span="1010-1010"];
m18_560 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="HandleError(reader, true, initialDepth)", span="1017-1017"];
m18_568 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="ThrowUnexpectedEndException(reader, contract, underlyingDictionary, ''Unexpected end when deserializing object.'')", span="1033-1033"];
m18_569 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="OnDeserialized(reader, contract, underlyingDictionary)", span="1035-1035"];
m18_527 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="IWrappedDictionary wrappedDictionary = dictionary as IWrappedDictionary", span="949-949"];
m18_528 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="object underlyingDictionary = wrappedDictionary != null ? wrappedDictionary.UnderlyingDictionary : dictionary", span="950-950"];
m18_529 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="id != null", span="952-952"];
m18_532 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="int initialDepth = reader.Depth", span="957-957"];
m18_533 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="contract.KeyContract == null", span="959-959"];
m18_535 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="contract.ItemContract == null", span="962-962"];
m18_540 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="reader.TokenType", span="971-971"];
m18_550 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Could not convert string '{0}' to dictionary key type '{1}'. Create a TypeConverter to convert from the string to the key type object.''.FormatWith(CultureInfo.InvariantCulture, reader.Value, contract.DictionaryKeyType), ex);", span="1000-1000"];
m18_552 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when deserializing object.'');", span="1004-1004"];
m18_565 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing object: '' + reader.TokenType);", span="1028-1028"];
m18_566 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!finished && reader.Read()", span="1030-1030"];
m18_539 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="bool finished = false", span="968-968"];
m18_541 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.PropertyName", span="973-973"];
m18_553 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="object itemValue", span="1006-1006"];
m18_558 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label=Exception, span="1014-1014"];
m18_561 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw;", span="1019-1019"];
m18_554 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="dictionaryValueConverter != null && dictionaryValueConverter.CanRead", span="1007-1007"];
m18_567 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!finished", span="1032-1032"];
m18_570 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="return underlyingDictionary;", span="1036-1036"];
m18_562 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.Comment", span="1022-1022"];
m18_563 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.EndObject", span="1024-1024"];
m18_564 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="finished = true", span="1025-1025"];
m18_571 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="947-947"];
m18_996 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", span="101-101"];
m18_318 [cluster="System.Runtime.Serialization.SerializationBinder.BindToType(string, string)", file="JsonSerializerInternalReader.cs", label="Entry System.Runtime.Serialization.SerializationBinder.BindToType(string, string)", span="0-0"];
m18_101 [cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", span="74-74"];
m18_499 [cluster="System.Func<TResult>.Invoke()", file="JsonSerializerInternalReader.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m18_114 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject()", span="96-96"];
m18_394 [cluster="System.Enum.ToObject(System.Type, object)", file="JsonSerializerInternalReader.cs", label="Entry System.Enum.ToObject(System.Type, object)", span="0-0"];
m18_804 [cluster="System.Collections.Generic.IEnumerable<TSource>.ForgivingCaseSensitiveFind<TSource>(System.Func<TSource, string>, string)", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ForgivingCaseSensitiveFind<TSource>(System.Func<TSource, string>, string)", span="129-129"];
m18_152 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", span="355-355"];
m18_192 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="357-357"];
m18_195 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="ReadSpecialProperties(reader, ref objectType, ref contract, member, containerContract, containerMember, existingValue, out newValue, out id)", span="361-361"];
m18_197 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="HasNoDefinedType(contract)", span="364-364"];
m18_198 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return CreateJObject(reader);", span="365-365"];
m18_206 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="targetObject = CreateNewObject(reader, objectContract, member, containerMember, id, out createdFromNonDefaultConstructor)", span="377-377"];
m18_209 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return PopulateObject(targetObject, reader, objectContract, member, id);", span="383-383"];
m18_213 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="391-391"];
m18_216 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="object value = CreateValueInternal(reader, objectType, primitiveContract, member, null, null, existingValue)", span="398-398"];
m18_217 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="400-400"];
m18_224 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="IDictionary dictionary = CreateNewDictionary(reader, dictionaryContract, out createdFromNonDefaultConstructor)", span="413-413"];
m18_231 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="PopulateDictionary(dictionary, reader, dictionaryContract, member, id)", span="424-424"];
m18_237 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="targetDictionary = PopulateDictionary(dictionaryContract.ShouldCreateWrapper ? dictionaryContract.CreateWrapper(existingValue) : (IDictionary) existingValue, reader, dictionaryContract, member, id)", span="439-439"];
m18_241 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return CreateDynamic(reader, dynamicContract, member, id);", span="447-447"];
m18_244 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return CreateISerializable(reader, serializableContract, id);", span="452-452"];
m18_245 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, @''Cannot deserialize the current JSON object (e.g. {{''''name'''':''''value''''}}) into type '{0}' because the type requires a {1} to deserialize correctly.\r\nTo fix this error either change the JSON to a {1} or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.\r\n''.FormatWith(CultureInfo.InvariantCulture, objectType, GetExpectedDescription(contract)));", span="456-458"];
m18_221 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="object targetDictionary", span="408-408"];
m18_220 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonDictionaryContract dictionaryContract = (JsonDictionaryContract) contract", span="407-407"];
m18_193 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="string id", span="359-359"];
m18_212 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.PropertyName && string.Equals(reader.Value.ToString(), JsonTypeReflector.ValuePropertyName, StringComparison.Ordinal)", span="389-389"];
m18_240 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonDynamicContract dynamicContract = (JsonDynamicContract) contract", span="446-446"];
m18_203 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="object targetObject", span="373-373"];
m18_202 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonObjectContract objectContract = (JsonObjectContract) contract", span="372-372"];
m18_226 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot preserve reference to readonly dictionary, or dictionary created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="416-416"];
m18_228 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot call OnSerializing on readonly dictionary, or dictionary created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="419-419"];
m18_230 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot call OnError on readonly list, or dictionary created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="422-422"];
m18_201 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="bool createdFromNonDefaultConstructor = false", span="371-371"];
m18_194 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="object newValue", span="360-360"];
m18_196 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return newValue;", span="362-362"];
m18_199 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="contract.ContractType", span="367-367"];
m18_211 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonPrimitiveContract primitiveContract = (JsonPrimitiveContract) contract", span="387-387"];
m18_225 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="id != null && createdFromNonDefaultConstructor", span="415-415"];
m18_227 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="contract.OnSerializingCallbacks.Count > 0 && createdFromNonDefaultConstructor", span="418-418"];
m18_229 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="contract.OnErrorCallbacks.Count > 0 && createdFromNonDefaultConstructor", span="421-421"];
m18_243 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonISerializableContract serializableContract = (JsonISerializableContract) contract", span="451-451"];
m18_204 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="existingValue != null", span="374-374"];
m18_207 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label=createdFromNonDefaultConstructor, span="380-380"];
m18_208 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return targetObject;", span="381-381"];
m18_205 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="targetObject = existingValue", span="375-375"];
m18_214 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.StartObject", span="395-395"];
m18_218 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return value;", span="401-401"];
m18_223 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="bool createdFromNonDefaultConstructor", span="412-412"];
m18_232 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label=createdFromNonDefaultConstructor, span="426-426"];
m18_233 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return dictionaryContract.ParametrizedConstructor.Invoke(new object[] {dictionary});", span="428-428"];
m18_234 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="dictionary is IWrappedDictionary", span="430-430"];
m18_235 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return ((IWrappedDictionary)dictionary).UnderlyingDictionary;", span="432-432"];
m18_236 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="targetDictionary = dictionary", span="435-435"];
m18_222 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="existingValue == null", span="410-410"];
m18_238 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return targetDictionary;", span="442-442"];
m18_215 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing primitive value: '' + reader.TokenType);", span="396-396"];
m18_219 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonContractType.Dictionary", span="405-405"];
m18_239 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonContractType.Dynamic", span="445-445"];
m18_200 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonContractType.Object", span="369-369"];
m18_210 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonContractType.Primitive", span="385-385"];
m18_242 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonContractType.Serializable", span="450-450"];
m18_246 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", span="355-355"];
m18_515 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", span="931-931"];
m18_516 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="933-933"];
m18_517 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Started deserializing {0}''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="934-934"];
m18_518 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs", label="contract.InvokeOnDeserializing(value, Serializer._context)", span="936-936"];
m18_519 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", span="931-931"];
m18_253 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, string)", span="1266-1266"];
m18_681 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, string)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="1277-1277"];
m18_682 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, string)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Deserializing {0} using ISerializable constructor.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="1278-1278"];
m18_683 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, string)", file="JsonSerializerInternalReader.cs", label="SerializationInfo serializationInfo = new SerializationInfo(contract.UnderlyingType, GetFormatterConverter())", span="1280-1280"];
m18_697 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, string)", file="JsonSerializerInternalReader.cs", label="ThrowUnexpectedEndException(reader, contract, serializationInfo, ''Unexpected end when deserializing object.'')", span="1305-1305"];
m18_700 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, string)", file="JsonSerializerInternalReader.cs", label="object createdObject = contract.ISerializableCreator(serializationInfo, Serializer._context)", span="1310-1310"];
m18_702 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, string)", file="JsonSerializerInternalReader.cs", label="AddReference(reader, id, createdObject)", span="1313-1313"];
m18_703 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, string)", file="JsonSerializerInternalReader.cs", label="OnDeserializing(reader, contract, createdObject)", span="1316-1316"];
m18_704 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, string)", file="JsonSerializerInternalReader.cs", label="OnDeserialized(reader, contract, createdObject)", span="1317-1317"];
m18_687 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, string)", file="JsonSerializerInternalReader.cs", label="string memberName = reader.Value.ToString()", span="1288-1288"];
m18_688 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, string)", file="JsonSerializerInternalReader.cs", label="!reader.Read()", span="1289-1289"];
m18_695 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, string)", file="JsonSerializerInternalReader.cs", label="!finished && reader.Read()", span="1302-1302"];
m18_690 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, string)", file="JsonSerializerInternalReader.cs", label="serializationInfo.AddValue(memberName, JToken.ReadFrom(reader))", span="1292-1292"];
m18_680 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, @''Type '{0}' implements ISerializable but cannot be deserialized using the ISerializable interface because the current application is not fully trusted and ISerializable can expose secure data.\r\nTo fix this error either change the environment to be fully trusted, change the application to not deserialize the type, add JsonObjectAttribute to the type or change the JsonSerializer setting ContractResolver to use a new DefaultContractResolver with IgnoreSerializableInterface set to true.\r\n''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="1272-1274"];
m18_689 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="1290-1290"];
m18_699 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''ISerializable type '{0}' does not have a valid constructor. To correctly implement ISerializable a constructor that takes SerializationInfo and StreamingContext parameters should be present.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="1308-1308"];
m18_684 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, string)", file="JsonSerializerInternalReader.cs", label="bool finished = false", span="1282-1282"];
m18_679 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, string)", file="JsonSerializerInternalReader.cs", label="!JsonTypeReflector.FullyTrusted", span="1270-1270"];
m18_696 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, string)", file="JsonSerializerInternalReader.cs", label="!finished", span="1304-1304"];
m18_698 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, string)", file="JsonSerializerInternalReader.cs", label="contract.ISerializableCreator == null", span="1307-1307"];
m18_701 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, string)", file="JsonSerializerInternalReader.cs", label="id != null", span="1312-1312"];
m18_705 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, string)", file="JsonSerializerInternalReader.cs", label="return createdObject;", span="1319-1319"];
m18_686 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.PropertyName", span="1287-1287"];
m18_691 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.Comment", span="1294-1294"];
m18_693 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, string)", file="JsonSerializerInternalReader.cs", label="finished = true", span="1297-1297"];
m18_678 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, string)", file="JsonSerializerInternalReader.cs", label="Type objectType = contract.UnderlyingType", span="1268-1268"];
m18_685 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, string)", file="JsonSerializerInternalReader.cs", label="reader.TokenType", span="1285-1285"];
m18_694 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing object: '' + reader.TokenType);", span="1300-1300"];
m18_692 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.EndObject", span="1296-1296"];
m18_706 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, string)", span="1266-1266"];
m18_28 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="52-52"];
m18_710 [cluster="Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", span="31-31"];
m18_627 [cluster="System.Collections.Generic.Stack<T>.Stack()", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.Stack<T>.Stack()", span="0-0"];
m18_392 [cluster="System.Enum.Parse(System.Type, string, bool)", file="JsonSerializerInternalReader.cs", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
m18_457 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", span="845-845"];
m18_469 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="JsonSerializerInternalReader.cs", label="return ((value & flag) == flag);", span="847-847"];
m18_470 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", span="845-845"];
m18_38 [cluster="string.Equals(string, string, System.StringComparison)", file="JsonSerializerInternalReader.cs", label="Entry string.Equals(string, string, System.StringComparison)", span="0-0"];
m18_252 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1324-1324"];
m18_732 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", color=green, community=0, file="JsonSerializerInternalReader.cs", label="!SetPropertyValue(property, propertyConverter, null, member, reader, newObject)", prediction=325, span="1367-1367"];
m18_711 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="IDynamicMetaObjectProvider newObject", span="1326-1326"];
m18_715 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="newObject = (IDynamicMetaObjectProvider) contract.DefaultCreator()", span="1333-1333"];
m18_727 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonProperty property = contract.Properties.GetClosestMatchProperty(memberName)", span="1358-1358"];
m18_731 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonConverter propertyConverter = GetConverter(property.PropertyContract, property.MemberConverter, null, null)", span="1365-1365"];
m18_733 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", color=green, community=0, file="JsonSerializerInternalReader.cs", label="reader.Skip()", prediction=325, span="1368-1368"];
m18_742 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label=Exception, span="1386-1386"];
m18_749 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!finished && reader.Read()", span="1400-1400"];
m18_714 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="contract.DefaultCreator != null &&\r\n        (!contract.DefaultCreatorNonPublic || Serializer._constructorHandling == ConstructorHandling.AllowNonPublicDefaultConstructor)", span="1331-1332"];
m18_718 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="AddReference(reader, id, newObject)", span="1338-1338"];
m18_719 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="OnDeserializing(reader, contract, newObject)", span="1340-1340"];
m18_730 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="1363-1363"];
m18_735 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonContract dynamicMemberContract = GetContractSafe(t)", span="1374-1374"];
m18_736 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonConverter dynamicMemberConverter = GetConverter(dynamicMemberContract, null, null, member)", span="1375-1375"];
m18_739 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="value = DeserializeConvertable(dynamicMemberConverter, reader, t, null)", span="1379-1379"];
m18_740 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="value = CreateValueInternal(reader, t, dynamicMemberContract, null, null, member, null)", span="1381-1381"];
m18_743 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="IsErrorHandled(newObject, contract, memberName, reader as IJsonLineInfo, reader.Path, ex)", span="1388-1388"];
m18_744 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="HandleError(reader, true, initialDepth)", span="1389-1389"];
m18_751 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="ThrowUnexpectedEndException(reader, contract, newObject, ''Unexpected end when deserializing object.'')", span="1403-1403"];
m18_752 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="OnDeserialized(reader, contract, newObject)", span="1405-1405"];
m18_734 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Type t = (JsonReader.IsPrimitiveToken(reader.TokenType)) ? reader.ValueType : typeof (IDynamicMetaObjectProvider)", span="1372-1372"];
m18_724 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="string memberName = reader.Value.ToString()", span="1350-1350"];
m18_712 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!contract.IsInstantiable", span="1328-1328"];
m18_713 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Could not create an instance of type {0}. Type is an interface or abstract class and cannot be instantiated.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="1329-1329"];
m18_716 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unable to find a default constructor to use for type {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="1335-1335"];
m18_717 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="id != null", span="1337-1337"];
m18_720 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="int initialDepth = reader.Depth", span="1342-1342"];
m18_722 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="reader.TokenType", span="1347-1347"];
m18_725 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!reader.Read()", span="1354-1354"];
m18_726 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="1355-1355"];
m18_741 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="contract.TrySetMember(newObject, memberName, value)", span="1383-1383"];
m18_748 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing object: '' + reader.TokenType);", span="1398-1398"];
m18_753 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="return newObject;", span="1407-1407"];
m18_728 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="property != null && property.Writable && !property.Ignored", span="1360-1360"];
m18_729 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="property.PropertyContract == null", span="1362-1362"];
m18_747 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="finished = true", span="1395-1395"];
m18_721 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="bool finished = false", span="1344-1344"];
m18_750 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!finished", span="1402-1402"];
m18_737 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="object value", span="1377-1377"];
m18_738 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="dynamicMemberConverter != null && dynamicMemberConverter.CanRead", span="1378-1378"];
m18_745 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw;", span="1391-1391"];
m18_723 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.PropertyName", span="1349-1349"];
m18_746 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.EndObject", span="1394-1394"];
m18_754 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1324-1324"];
m18_572 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, out object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, out object)", span="289-289"];
m18_398 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.FormatValueForPrint(object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.FormatValueForPrint(object)", span="128-128"];
m18_498 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()", span="209-209"];
m18_191 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", span="857-857"];
m18_756 [cluster="Newtonsoft.Json.Serialization.JsonDynamicContract.TrySetMember(System.Dynamic.IDynamicMetaObjectProvider, string, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonDynamicContract.TrySetMember(System.Dynamic.IDynamicMetaObjectProvider, string, object)", span="105-105"];
m18_628 [cluster="System.Collections.Generic.Stack<T>.Push(T)", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0"];
m18_460 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.ValueEquals(object, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.ValueEquals(object, object)", span="39-39"];
m18_456 [cluster="System.Type.IsValueType()", file="JsonSerializerInternalReader.cs", label="Entry System.Type.IsValueType()", span="522-522"];
m18_33 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1177-1177"];
m18_643 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="AddReference(reader, id, underlyingList)", span="1183-1183"];
m18_647 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="OnDeserializing(reader, contract, underlyingList)", span="1192-1192"];
m18_649 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonContract collectionItemContract = GetContractSafe(contract.CollectionItemType)", span="1196-1196"];
m18_650 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonConverter collectionItemConverter = GetConverter(collectionItemContract, null, contract, containerProperty)", span="1197-1197"];
m18_653 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="ReadForType(reader, collectionItemContract, collectionItemConverter != null)", span="1206-1206"];
m18_660 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="value = DeserializeConvertable(collectionItemConverter, reader, contract.CollectionItemType, null)", span="1219-1219"];
m18_661 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="value = CreateValueInternal(reader, contract.CollectionItemType, collectionItemContract, null, contract, containerProperty, null)", span="1221-1221"];
m18_665 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="IsErrorHandled(underlyingList, contract, errorPosition.Position, reader as IJsonLineInfo, reader.Path, ex)", span="1236-1236"];
m18_666 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="HandleError(reader, true, initialDepth)", span="1238-1238"];
m18_673 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="ThrowUnexpectedEndException(reader, contract, underlyingList, ''Unexpected end when deserializing array.'')", span="1259-1259"];
m18_674 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="OnDeserialized(reader, contract, underlyingList)", span="1261-1261"];
m18_645 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="reader.Skip()", span="1188-1188"];
m18_668 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Infinite loop detected from error handling.'', ex);", span="1244-1244"];
m18_651 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="int? previousErrorIndex = null", span="1199-1199"];
m18_652 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="bool finished = false", span="1201-1201"];
m18_641 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="object underlyingList = wrappedCollection != null ? wrappedCollection.UnderlyingCollection : list", span="1180-1180"];
m18_642 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="id != null", span="1182-1182"];
m18_644 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="list.IsFixedSize", span="1186-1186"];
m18_648 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="int initialDepth = reader.Depth", span="1194-1194"];
m18_659 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="collectionItemConverter != null && collectionItemConverter.CanRead", span="1218-1218"];
m18_654 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="reader.TokenType", span="1208-1208"];
m18_672 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!finished", span="1258-1258"];
m18_662 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="list.Add(value)", span="1223-1223"];
m18_664 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonPosition errorPosition = reader.GetPosition(initialDepth)", span="1234-1234"];
m18_670 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw;", span="1253-1253"];
m18_667 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="previousErrorIndex != null && previousErrorIndex == errorPosition.Position", span="1240-1240"];
m18_675 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="return underlyingList;", span="1262-1262"];
m18_658 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="object value", span="1216-1216"];
m18_646 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="return underlyingList;", span="1189-1189"];
m18_640 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="IWrappedCollection wrappedCollection = list as IWrappedCollection", span="1179-1179"];
m18_671 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!finished", span="1256-1256"];
m18_655 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.EndArray", span="1210-1210"];
m18_657 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.Comment", span="1213-1213"];
m18_656 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="finished = true", span="1211-1211"];
m18_663 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label=Exception, span="1232-1232"];
m18_669 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="previousErrorIndex = errorPosition.Position", span="1248-1248"];
m18_676 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1177-1177"];
m18_755 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", span="115-115"];
m18_71 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="323-323"];
m18_185 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="(matchingConverter = Serializer.GetMatchingConverter(contract.UnderlyingType)) != null", span="345-345"];
m18_174 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="JsonConverter converter = null", span="325-325"];
m18_183 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="contract.Converter != null", span="342-342"];
m18_186 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="converter = matchingConverter", span="347-347"];
m18_187 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="contract.InternalConverter != null", span="348-348"];
m18_175 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="memberConverter != null", span="326-326"];
m18_176 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="converter = memberConverter", span="329-329"];
m18_177 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="containerProperty != null && containerProperty.ItemConverter != null", span="331-331"];
m18_178 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="converter = containerProperty.ItemConverter", span="333-333"];
m18_179 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="containerContract != null && containerContract.ItemConverter != null", span="335-335"];
m18_180 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="converter = containerContract.ItemConverter", span="337-337"];
m18_181 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="contract != null", span="339-339"];
m18_184 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="converter = contract.Converter", span="344-344"];
m18_188 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="converter = contract.InternalConverter", span="350-350"];
m18_189 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="return converter;", span="352-352"];
m18_182 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="JsonConverter matchingConverter", span="341-341"];
m18_190 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="323-323"];
m18_78 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", span="181-181"];
m18_79 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JsonSerializerInternalReader.cs", label="_internalSerializer == null", span="183-183"];
m18_80 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JsonSerializerInternalReader.cs", label="_internalSerializer = new JsonSerializerProxy(this)", span="184-184"];
m18_81 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JsonSerializerInternalReader.cs", label="return _internalSerializer;", span="186-186"];
m18_82 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", span="181-181"];
m18_468 [cluster="Newtonsoft.Json.Serialization.IReferenceResolver.AddReference(object, string, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.AddReference(object, string, object)", span="61-61"];
m18_314 [cluster="Newtonsoft.Json.Serialization.IReferenceResolver.ResolveReference(object, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.ResolveReference(object, string)", span="38-38"];
m18_367 [cluster="System.Collections.ICollection.CopyTo(System.Array, int)", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.ICollection.CopyTo(System.Array, int)", span="0-0"];
m18_366 [cluster="System.Array.CreateInstance(System.Type, int)", file="JsonSerializerInternalReader.cs", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
m18_250 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", span="903-903"];
m18_503 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="contract.DefaultCreator != null && (!contract.DefaultCreatorNonPublic || Serializer._constructorHandling == ConstructorHandling.AllowNonPublicDefaultConstructor)", span="910-910"];
m18_512 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unable to find a default constructor to use for type {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="927-927"];
m18_500 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="contract.IsReadOnlyOrFixedSize", span="905-905"];
m18_504 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="object dictionary = contract.DefaultCreator()", span="912-912"];
m18_509 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="contract.ParametrizedConstructor != null", span="920-920"];
m18_506 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="dictionary = contract.CreateWrapper(dictionary)", span="915-915"];
m18_502 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="return contract.CreateTemporaryDictionary();", span="908-908"];
m18_505 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="contract.ShouldCreateWrapper", span="914-914"];
m18_511 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="return contract.CreateTemporaryDictionary();", span="923-923"];
m18_501 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="createdFromNonDefaultConstructor = true", span="907-907"];
m18_508 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="return (IDictionary) dictionary;", span="918-918"];
m18_510 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="createdFromNonDefaultConstructor = true", span="922-922"];
m18_507 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="createdFromNonDefaultConstructor = false", span="917-917"];
m18_513 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", span="903-903"];
m18_247 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", span="461-461"];
m18_263 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="482-482"];
m18_267 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="488-488"];
m18_271 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="newValue = Serializer.GetReferenceResolver().ResolveReference(this, reference)", span="495-495"];
m18_272 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="497-497"];
m18_273 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Resolved object reference '{0}' to {1}.''.FormatWith(CultureInfo.InvariantCulture, reference, newValue.GetType())), null)", span="498-498"];
m18_277 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="509-509"];
m18_279 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="TypeNameHandling resolvedTypeNameHandling =\r\n                ((member != null) ? member.TypeNameHandling : null)\r\n                ?? ((containerContract != null) ? containerContract.ItemTypeNameHandling : null)\r\n                ?? ((containerMember != null) ? containerMember.ItemTypeNameHandling : null)\r\n                ?? Serializer._typeNameHandling", span="512-516"];
m18_285 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="specifiedType = Serializer._binder.BindToType(assemblyName, typeName)", span="527-527"];
m18_290 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="537-537"];
m18_291 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Resolved type '{0}' to {1}.''.FormatWith(CultureInfo.InvariantCulture, qualifiedTypeName, specifiedType)), null)", span="538-538"];
m18_295 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="contract = GetContractSafe(specifiedType)", span="548-548"];
m18_296 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="551-551"];
m18_299 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="557-557"];
m18_301 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="561-561"];
m18_304 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="566-566"];
m18_305 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="object list = CreateList(reader, objectType, contract, member, existingValue, id)", span="567-567"];
m18_306 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="568-568"];
m18_258 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="string propertyName = reader.Value.ToString()", span="468-468"];
m18_261 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="propertyName = reader.Value.ToString()", span="478-478"];
m18_266 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="string reference = (reader.Value != null) ? reader.Value.ToString() : null", span="486-486"];
m18_278 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="string qualifiedTypeName = reader.Value.ToString()", span="510-510"];
m18_300 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="id = (reader.Value != null) ? reader.Value.ToString() : null", span="559-559"];
m18_265 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''JSON reference {0} property must have a string or null value.''.FormatWith(CultureInfo.InvariantCulture, JsonTypeReflector.RefPropertyName));", span="484-484"];
m18_270 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Additional content found in JSON reference object. A JSON reference object should only have a {0} property.''.FormatWith(CultureInfo.InvariantCulture, JsonTypeReflector.RefPropertyName));", span="493-493"];
m18_287 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Error resolving type specified in JSON '{0}'.''.FormatWith(CultureInfo.InvariantCulture, qualifiedTypeName), ex);", span="531-531"];
m18_289 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Type specified in JSON '{0}' was not resolved.''.FormatWith(CultureInfo.InvariantCulture, qualifiedTypeName));", span="535-535"];
m18_262 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="string.Equals(propertyName, JsonTypeReflector.RefPropertyName, StringComparison.Ordinal)", span="480-480"];
m18_264 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="reader.TokenType != JsonToken.String && reader.TokenType != JsonToken.Null", span="483-483"];
m18_268 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="reference != null", span="490-490"];
m18_269 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.PropertyName", span="492-492"];
m18_274 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="return true;", span="500-500"];
m18_276 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="string.Equals(propertyName, JsonTypeReflector.TypePropertyName, StringComparison.Ordinal)", span="507-507"];
m18_280 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="resolvedTypeNameHandling != TypeNameHandling.None", span="518-518"];
m18_283 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="ReflectionUtils.SplitFullyQualifiedTypeName(qualifiedTypeName, out typeName, out assemblyName)", span="522-522"];
m18_284 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="Type specifiedType", span="524-524"];
m18_286 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label=Exception, span="529-529"];
m18_288 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="specifiedType == null", span="534-534"];
m18_292 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="objectType != null\r\n#if !(NET35 || NET20 || PORTABLE40)\r\n                    && objectType != typeof (IDynamicMetaObjectProvider)\r\n#endif\r\n                    && !objectType.IsAssignableFrom(specifiedType)", span="540-544"];
m18_293 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Type specified in JSON '{0}' is not compatible with '{1}'.''.FormatWith(CultureInfo.InvariantCulture, specifiedType.AssemblyQualifiedName, objectType.AssemblyQualifiedName));", span="545-545"];
m18_294 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="objectType = specifiedType", span="547-547"];
m18_297 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="specialProperty = true", span="553-553"];
m18_298 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="string.Equals(propertyName, JsonTypeReflector.IdPropertyName, StringComparison.Ordinal)", span="555-555"];
m18_302 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="specialProperty = true", span="562-562"];
m18_303 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="string.Equals(propertyName, JsonTypeReflector.ArrayValuesPropertyName, StringComparison.Ordinal)", span="564-564"];
m18_255 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="id = null", span="463-463"];
m18_307 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="newValue = list", span="569-569"];
m18_257 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.PropertyName", span="466-466"];
m18_259 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="propertyName.Length > 0 && propertyName[0] == '$'", span="470-470"];
m18_260 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="bool specialProperty", span="474-474"];
m18_310 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="specialProperty\r\n                   && reader.TokenType == JsonToken.PropertyName", span="576-577"];
m18_275 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="specialProperty = true", span="504-504"];
m18_256 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="newValue = null", span="464-464"];
m18_311 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="return false;", span="580-580"];
m18_308 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="return true;", span="570-570"];
m18_281 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="string typeName", span="520-520"];
m18_282 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="string assemblyName", span="521-521"];
m18_309 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="specialProperty = false", span="574-574"];
m18_312 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", span="461-461"];
m18_103 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", span="220-220"];
m18_104 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="ValidationUtils.ArgumentNotNull(reader, ''reader'')", span="222-222"];
m18_108 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.PropertyName", span="230-230"];
m18_109 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="writer.WriteToken(reader, reader.Depth - 1, true)", span="231-231"];
m18_105 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="JToken token", span="225-225"];
m18_112 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="return token;", span="238-238"];
m18_107 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="writer.WriteStartObject()", span="228-228"];
m18_110 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="writer.WriteEndObject()", span="233-233"];
m18_106 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="JTokenWriter writer = new JTokenWriter()", span="226-226"];
m18_111 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="token = writer.Token", span="235-235"];
m18_113 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", span="220-220"];
m18_423 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", span="850-850"];
m18_473 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", color=green, community=0, file="JsonSerializerInternalReader.cs", label="HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Ignore)\r\n          && !HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Populate)\r\n          && MiscellaneousUtils.ValueEquals(value, property.GetResolvedDefaultValue())", prediction=325, span="855-857"];
m18_471 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="property.NullValueHandling.GetValueOrDefault(Serializer._nullValueHandling) == NullValueHandling.Ignore && value == null", span="852-852"];
m18_474 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return false;", span="858-858"];
m18_475 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="!property.Writable", span="860-860"];
m18_472 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return false;", span="853-853"];
m18_476 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return false;", span="861-861"];
m18_477 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return true;", span="863-863"];
m18_478 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", span="850-850"];
m18_425 [cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="JsonSerializerInternalReader.cs", label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0"];
m18_70 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonSerializerInternalReader.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m18_365 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", span="265-265"];
m18_153 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", span="603-603"];
m18_333 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="HasNoDefinedType(contract)", span="607-607"];
m18_334 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="return CreateJToken(reader, contract);", span="608-608"];
m18_335 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="JsonArrayContract arrayContract = EnsureArrayContract(reader, objectType, contract)", span="610-610"];
m18_338 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="IList list = CreateNewList(reader, arrayContract, out createdFromNonDefaultConstructor)", span="615-615"];
m18_346 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="PopulateList(list, reader, arrayContract, member, id)", span="627-627"];
m18_347 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="PopulateMultidimensionalArray(list, reader, arrayContract, member, id)", span="629-629"];
m18_359 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="value = PopulateList((arrayContract.ShouldCreateWrapper) ? arrayContract.CreateWrapper(existingValue) : (IList) existingValue, reader, arrayContract, member, id)", span="658-658"];
m18_340 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot preserve reference to array or readonly list, or list created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="618-618"];
m18_342 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot call OnSerializing on an array or readonly list, or list created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="621-621"];
m18_344 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot call OnError on an array or readonly list, or list created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="624-624"];
m18_332 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="object value", span="605-605"];
m18_336 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="existingValue == null", span="612-612"];
m18_345 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="!arrayContract.IsMultidimensionalArray", span="626-626"];
m18_349 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="arrayContract.IsMultidimensionalArray", span="633-633"];
m18_350 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="list = CollectionUtils.ToMultidimensionalArray(list, arrayContract.CollectionItemType, contract.CreatedType.GetArrayRank())", span="635-635"];
m18_352 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="Array a = Array.CreateInstance(arrayContract.CollectionItemType, list.Count)", span="639-639"];
m18_355 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="return arrayContract.ParametrizedConstructor.Invoke(new object[] { list });", span="646-646"];
m18_337 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="bool createdFromNonDefaultConstructor", span="614-614"];
m18_339 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="id != null && createdFromNonDefaultConstructor", span="617-617"];
m18_341 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="contract.OnSerializingCallbacks.Count > 0 && createdFromNonDefaultConstructor", span="620-620"];
m18_343 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="contract.OnErrorCallbacks.Count > 0 && createdFromNonDefaultConstructor", span="623-623"];
m18_348 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label=createdFromNonDefaultConstructor, span="631-631"];
m18_353 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="list.CopyTo(a, 0)", span="640-640"];
m18_356 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="list is IWrappedCollection", span="649-649"];
m18_357 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="return ((IWrappedCollection)list).UnderlyingCollection;", span="651-651"];
m18_358 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="value = list", span="654-654"];
m18_360 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="return value;", span="661-661"];
m18_351 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="contract.CreatedType.IsArray", span="637-637"];
m18_354 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="list = a", span="641-641"];
m18_361 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", span="603-603"];
m18_885 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDecimal()", span="356-356"];
m18_395 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", span="324-324"];
m18_39 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", span="140-140"];
m18_320 [cluster="System.Type.IsAssignableFrom(System.Type)", file="JsonSerializerInternalReader.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m18_632 [cluster="Newtonsoft.Json.JsonReader.GetPosition(int)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.GetPosition(int)", span="258-258"];
m18_115 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool)", span="458-458"];
m18_116 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="363-363"];
m18_455 [cluster="System.Nullable<T>.GetValueOrDefault(T)", file="JsonSerializerInternalReader.cs", label="Entry System.Nullable<T>.GetValueOrDefault(T)", span="0-0"];
m18_154 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="673-673"];
m18_380 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="return Enum.Parse(contract.NonNullableUnderlyingType, value.ToString(), true);", span="696-696"];
m18_388 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Error converting value {0} to type '{1}'.''.FormatWith(CultureInfo.InvariantCulture, MiscellaneousUtils.FormatValueForPrint(value), targetType), ex);", span="714-714"];
m18_370 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="targetType == null", span="675-675"];
m18_371 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="return value;", span="676-676"];
m18_372 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="Type valueType = ReflectionUtils.GetObjectType(value)", span="678-678"];
m18_373 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="valueType != targetType", span="682-682"];
m18_374 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="value == null && contract.IsNullable", span="684-684"];
m18_376 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="contract.IsConvertable", span="689-689"];
m18_377 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="JsonPrimitiveContract primitiveContract = (JsonPrimitiveContract)contract", span="691-691"];
m18_378 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="contract.IsEnum", span="693-693"];
m18_379 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="value is string", span="695-695"];
m18_382 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="return Enum.ToObject(contract.NonNullableUnderlyingType, value);", span="698-698"];
m18_383 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="value is BigInteger", span="702-702"];
m18_384 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="return ConvertUtils.FromBigInteger((BigInteger)value, targetType);", span="703-703"];
m18_385 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="return Convert.ChangeType(value, contract.NonNullableUnderlyingType, culture);", span="707-707"];
m18_386 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="return ConvertUtils.ConvertOrCast(value, culture, contract.NonNullableUnderlyingType);", span="710-710"];
m18_389 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="return value;", span="718-718"];
m18_387 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label=Exception, span="712-712"];
m18_375 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="return null;", span="685-685"];
m18_381 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="ConvertUtils.IsInteger(primitiveContract.TypeCode)", span="697-697"];
m18_390 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="673-673"];
m18_949 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", span="1817-1817"];
m18_987 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="property != null && requiredProperties != null", span="1819-1819"];
m18_988 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="requiredProperties[property] = (reader.TokenType == JsonToken.Null || reader.TokenType == JsonToken.Undefined)\r\n          ? PropertyPresence.Null\r\n          : PropertyPresence.Value", span="1821-1823"];
m18_989 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", span="1817-1817"];
m18_156 [cluster="System.Convert.FromBase64String(string)", file="JsonSerializerInternalReader.cs", label="Entry System.Convert.FromBase64String(string)", span="0-0"];
m18_5 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="Newtonsoft.Json.Serialization.JsonObjectContract", span=""];
m18_11 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="PopulateList((arrayContract.ShouldCreateWrapper) ? arrayContract.CreateWrapper(target) : (IList)target, reader, arrayContract, null, null)", span="86-86"];
m18_14 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="95-95"];
m18_17 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="100-100"];
m18_19 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="102-102"];
m18_22 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="PopulateDictionary((dictionaryContract.ShouldCreateWrapper) ? dictionaryContract.CreateWrapper(target) : (IDictionary)target, reader, dictionaryContract, null, id)", span="108-108"];
m18_24 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="PopulateObject(target, reader, (JsonObjectContract) contract, null, id)", span="112-112"];
m18_21 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="JsonDictionaryContract dictionaryContract = (JsonDictionaryContract)contract", span="107-107"];
m18_15 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="string id = null", span="97-97"];
m18_16 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.PropertyName && string.Equals(reader.Value.ToString(), JsonTypeReflector.IdPropertyName, StringComparison.Ordinal)", span="98-98"];
m18_18 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="id = (reader.Value != null) ? reader.Value.ToString() : null", span="101-101"];
m18_7 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="reader.Read()", span="78-78"];
m18_12 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot populate JSON array onto type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="90-90"];
m18_25 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot populate JSON object onto type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="116-116"];
m18_26 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected initial token '{0}' when populating object. Expected JSON object or array.''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="121-121"];
m18_4 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", span="46-46"];
m18_6 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.None", span="77-77"];
m18_9 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="contract.ContractType == JsonContractType.Array", span="82-82"];
m18_10 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="JsonArrayContract arrayContract = (JsonArrayContract) contract", span="84-84"];
m18_20 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="contract.ContractType == JsonContractType.Dictionary", span="105-105"];
m18_23 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="contract.ContractType == JsonContractType.Object", span="110-110"];
m18_13 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.StartObject", span="93-93"];
m18_8 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.StartArray", span="80-80"];
m18_27 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", span="69-69"];
m18_824 [cluster="Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="54-54"];
m18_630 [cluster="System.Collections.Generic.Stack<T>.Peek()", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.Stack<T>.Peek()", span="0-0"];
m18_100 [cluster="Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", span="58-58"];
m18_709 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="JsonSerializerInternalReader.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0"];
m18_47 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", span="133-133"];
m18_50 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="JsonContract contract = GetContractSafe(objectType)", span="138-138"];
m18_51 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="JsonConverter converter = GetConverter(contract, null, null, null)", span="142-142"];
m18_52 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.None && !ReadForType(reader, contract, converter != null)", span="144-144"];
m18_58 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="deserializedValue = DeserializeConvertable(converter, reader, objectType, null)", span="155-155"];
m18_59 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="deserializedValue = CreateValueInternal(reader, objectType, contract, null, null, null, null)", span="157-157"];
m18_65 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="IsErrorHandled(null, contract, null, reader as IJsonLineInfo, reader.Path, ex)", span="169-169"];
m18_66 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="HandleError(reader, false, 0)", span="171-171"];
m18_61 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="reader.Read() && reader.TokenType != JsonToken.Comment", span="161-161"];
m18_54 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''No JSON content found and type '{0}' is not nullable.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="147-147"];
m18_48 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="reader == null", span="135-135"];
m18_53 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="contract != null && !contract.IsNullable", span="146-146"];
m18_57 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="converter != null && converter.CanRead", span="154-154"];
m18_56 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="object deserializedValue", span="152-152"];
m18_60 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label=checkAdditionalContent, span="159-159"];
m18_63 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="return deserializedValue;", span="165-165"];
m18_64 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label=Exception, span="167-167"];
m18_68 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="throw;", span="176-176"];
m18_67 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="return null;", span="172-172"];
m18_62 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Additional text found in JSON string after finishing deserializing object.'');", span="162-162"];
m18_49 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="throw new ArgumentNullException(''reader'');", span="136-136"];
m18_55 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="return null;", span="149-149"];
m18_69 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", span="133-133"];
m18_948 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.JsonReader, string, object)", span="1751-1751"];
m18_957 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.JsonReader, string, object)", color=green, community=0, file="JsonSerializerInternalReader.cs", label="contract.ExtensionDataSetter != null", prediction=337, span="1753-1753"];
m18_958 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.JsonReader, string, object)", color=green, community=0, file="JsonSerializerInternalReader.cs", label="JToken extensionDataValue = JToken.ReadFrom(reader)", prediction=338, span="1757-1757"];
m18_962 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.JsonReader, string, object)", color=green, community=0, file="JsonSerializerInternalReader.cs", label="reader.Skip()", prediction=339, span="1768-1768"];
m18_959 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.JsonReader, string, object)", color=green, community=0, file="JsonSerializerInternalReader.cs", label="contract.ExtensionDataSetter(o, memberName, extensionDataValue)", prediction=339, span="1759-1759"];
m18_960 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.JsonReader, string, object)", color=green, community=0, file="JsonSerializerInternalReader.cs", label=Exception, prediction=341, span="1761-1761"];
m18_961 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.JsonReader, string, object)", color=green, community=0, file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Error setting value in extension data for type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType), ex);", prediction=339, span="1763-1763"];
m18_963 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.JsonReader, string, object)", span="1751-1751"];
m18_806 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m18_73 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", span="1495-1495"];
m18_817 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="1497-1497"];
m18_818 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Started deserializing {0} with converter {1}.''.FormatWith(CultureInfo.InvariantCulture, objectType, converter.GetType())), null)", span="1498-1498"];
m18_819 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonSerializerInternalReader.cs", label="object value = converter.ReadJson(reader, objectType, existingValue, GetInternalSerializer())", span="1500-1500"];
m18_820 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="1502-1502"];
m18_821 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Finished deserializing {0} with converter {1}.''.FormatWith(CultureInfo.InvariantCulture, objectType, converter.GetType())), null)", span="1503-1503"];
m18_822 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonSerializerInternalReader.cs", label="return value;", span="1505-1505"];
m18_823 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", span="1495-1495"];
m18_964 [cluster="Newtonsoft.Json.Serialization.ExtensionDataSetter.Invoke(object, string, Newtonsoft.Json.Linq.JToken)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.ExtensionDataSetter.Invoke(object, string, Newtonsoft.Json.Linq.JToken)", span="72-72"];
m18_802 [cluster="Unk.ToDictionary", file="JsonSerializerInternalReader.cs", label="Entry Unk.ToDictionary", span=""];
m18_814 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="1427-1427"];
m18_951 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="1670-1670"];
m18_954 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="1670-1670"];
m18_808 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="1422-1422"];
m18_811 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="1422-1422"];
m18_953 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="1670-1670"];
m18_952 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label=m, span="1670-1670"];
m18_956 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="1670-1670"];
m18_955 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="PropertyPresence.None", span="1670-1670"];
m18_810 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="1422-1422"];
m18_809 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label=p, span="1422-1422"];
m18_813 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="1422-1422"];
m18_812 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="(object) null", span="1422-1422"];
m18_815 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="kv.Key.Name", span="1427-1427"];
m18_816 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="1427-1427"];
m18_396 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m18_30 [cluster="Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", span="43-43"];
m18_399 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", span="721-721"];
m18_405 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", color=green, community=0, file="JsonSerializerInternalReader.cs", label="return false;", prediction=343, span="729-729"];
m18_404 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="CalculatePropertyDetails(property, ref propertyConverter, containerContract, containerProperty, reader, target, out useExistingValue, out currentValue, out propertyContract, out gottenCurrentValue)", span="728-728"];
m18_419 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", color=green, community=0, file="JsonSerializerInternalReader.cs", label="return useExistingValue;", prediction=344, span="765-765"];
m18_412 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="(!useExistingValue || value != currentValue)\r\n        && ShouldSetPropertyValue(property, value)", span="748-749"];
m18_418 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", color=green, community=0, file="JsonSerializerInternalReader.cs", label="return true;", prediction=345, span="761-761"];
m18_414 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="property.SetIsSpecified != null", span="753-753"];
m18_417 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="property.SetIsSpecified(target, true)", span="758-758"];
m18_403 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="bool gottenCurrentValue", span="726-726"];
m18_406 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="object value", span="731-731"];
m18_407 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="propertyConverter != null && propertyConverter.CanRead", span="733-733"];
m18_408 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="!gottenCurrentValue && target != null && property.Readable", span="735-735"];
m18_410 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="value = DeserializeConvertable(propertyConverter, reader, property.PropertyType, currentValue)", span="738-738"];
m18_411 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="value = CreateValueInternal(reader, property.PropertyType, propertyContract, property, containerContract, containerProperty, (useExistingValue) ? currentValue : null)", span="742-742"];
m18_409 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="currentValue = property.ValueProvider.GetValue(target)", span="736-736"];
m18_413 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="property.ValueProvider.SetValue(target, value)", span="751-751"];
m18_415 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="755-755"];
m18_416 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''IsSpecified for property '{0}' on {1} set to true.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName, property.DeclaringType)), null)", span="756-756"];
m18_401 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="bool useExistingValue", span="724-724"];
m18_400 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="object currentValue", span="723-723"];
m18_402 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="JsonContract propertyContract", span="725-725"];
m18_420 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", span="721-721"];
m18_249 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", span="1625-1625"];
m18_896 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="return CreateObjectFromNonDefaultConstructor(reader, objectContract, containerMember, objectContract.OverrideConstructor, id);", span="1637-1637"];
m18_898 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="objectContract.DefaultCreator != null &&\r\n        (!objectContract.DefaultCreatorNonPublic || Serializer._constructorHandling == ConstructorHandling.AllowNonPublicDefaultConstructor || objectContract.ParametrizedConstructor == null)", span="1642-1643"];
m18_902 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="return CreateObjectFromNonDefaultConstructor(reader, objectContract, containerMember, objectContract.ParametrizedConstructor, id);", span="1654-1654"];
m18_892 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Could not create an instance of type {0}. Type is an interface or abstract class and cannot be instantiated.''.FormatWith(CultureInfo.InvariantCulture, objectContract.UnderlyingType));", span="1630-1630"];
m18_904 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unable to find a constructor to use for type {0}. A class should either have a default constructor, one constructor with arguments or a constructor marked with the JsonConstructor attribute.''.FormatWith(CultureInfo.InvariantCulture, objectContract.UnderlyingType));", span="1658-1658"];
m18_890 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="object newObject = null", span="1627-1627"];
m18_895 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="createdFromNonDefaultConstructor = true", span="1636-1636"];
m18_893 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="objectContract.OverrideConstructor != null", span="1632-1632"];
m18_899 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="newObject = objectContract.DefaultCreator()", span="1649-1649"];
m18_900 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="objectContract.ParametrizedConstructor != null", span="1651-1651"];
m18_901 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="createdFromNonDefaultConstructor = true", span="1653-1653"];
m18_891 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="!objectContract.IsInstantiable", span="1629-1629"];
m18_903 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="newObject == null", span="1657-1657"];
m18_906 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="return newObject;", span="1661-1661"];
m18_894 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="objectContract.OverrideConstructor.GetParameters().Length > 0", span="1634-1634"];
m18_897 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="newObject = objectContract.OverrideConstructor.Invoke(null)", span="1640-1640"];
m18_905 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="createdFromNonDefaultConstructor = false", span="1660-1660"];
m18_907 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", span="1625-1625"];
m18_421 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", span="768-768"];
m18_446 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", color=green, community=0, file="JsonSerializerInternalReader.cs", label="HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Ignore)\r\n          && !HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Populate)\r\n          && JsonReader.IsPrimitiveToken(tokenType)\r\n          && MiscellaneousUtils.ValueEquals(reader.Value, property.GetResolvedDefaultValue())", prediction=325, span="809-812"];
m18_432 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="JsonToken tokenType = reader.TokenType", span="778-778"];
m18_444 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="property.NullValueHandling.GetValueOrDefault(Serializer._nullValueHandling) == NullValueHandling.Ignore && tokenType == JsonToken.Null", span="805-805"];
m18_447 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="return true;", span="813-813"];
m18_448 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="currentValue == null", span="815-815"];
m18_434 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="781-781"];
m18_435 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="ObjectCreationHandling objectCreationHandling =\r\n        property.ObjectCreationHandling.GetValueOrDefault(Serializer._objectCreationHandling)", span="783-784"];
m18_440 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="propertyContract = GetContractSafe(currentValue.GetType())", span="795-795"];
m18_450 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="propertyContract = GetContractSafe(currentValue.GetType())", span="821-821"];
m18_452 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="propertyConverter = GetConverter(propertyContract, property.MemberConverter, containerContract, containerProperty)", span="824-824"];
m18_426 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="currentValue = null", span="770-770"];
m18_430 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="property.Ignored", span="775-775"];
m18_433 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="property.PropertyContract == null", span="780-780"];
m18_436 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="(objectCreationHandling != ObjectCreationHandling.Replace)\r\n          && (tokenType == JsonToken.StartArray || tokenType == JsonToken.StartObject)\r\n          && property.Readable", span="786-788"];
m18_437 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="currentValue = property.ValueProvider.GetValue(target)", span="790-790"];
m18_442 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="!property.Writable && !useExistingValue", span="801-801"];
m18_449 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="propertyContract = property.PropertyContract", span="817-817"];
m18_451 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="propertyContract != property.PropertyContract", span="823-823"];
m18_445 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="return true;", span="806-806"];
m18_439 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="currentValue != null", span="793-793"];
m18_441 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="useExistingValue = (!propertyContract.IsReadOnlyOrFixedSize && !propertyContract.UnderlyingType.IsValueType())", span="797-797"];
m18_453 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="return false;", span="827-827"];
m18_427 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="useExistingValue = false", span="771-771"];
m18_429 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="gottenCurrentValue = false", span="773-773"];
m18_431 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="return true;", span="776-776"];
m18_438 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="gottenCurrentValue = true", span="791-791"];
m18_443 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="return true;", span="802-802"];
m18_428 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="propertyContract = null", span="772-772"];
m18_454 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", span="768-768"];
m18_997 [file="JsonSerializerInternalReader.cs", label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", span=""];
m20_1672 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="3902-3902"];
m20_1673 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="3904-3904"];
m20_1674 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="3902-3902"];
m20_1778 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="4107-4107"];
m20_1779 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="var reference = new Dictionary<string, object>()", span="4111-4111"];
m20_1780 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="reference.Add(''$ref'', ''Persons'')", span="4112-4112"];
m20_1781 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="reference.Add(''$id'', 1)", span="4113-4113"];
m20_1785 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="child.Add(''Father'', reference)", span="4118-4118"];
m20_1782 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="var child = new Dictionary<string, object>()", span="4115-4115"];
m20_1783 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="child.Add(''_id'', 2)", span="4116-4116"];
m20_1784 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="child.Add(''Name'', ''Isabell'')", span="4117-4117"];
m20_1786 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="4120-4120"];
m20_1787 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Additional content found in JSON reference object. A JSON reference object should only have a $ref property. Path 'Father.$id', line 6, position 11.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<Dictionary<string, object>>(json);\r\n        })", span="4122-4127"];
m20_1788 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="4107-4107"];
m20_3198 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", span="7588-7588"];
m20_3199 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="JsonSerializerTest.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}''", span="7590-7590"];
m20_3200 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="JsonSerializerTest.cs", label="Array2D aa = JsonConvert.DeserializeObject<Array2D>(json)", span="7592-7592"];
m20_3208 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="JsonSerializerTest.cs", label="Assert.AreEqual(json, after)", span="7603-7603"];
m20_3201 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="7594-7594"];
m20_3202 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''After!'', aa.After)", span="7595-7595"];
m20_3203 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, aa.Coordinates.GetLength(0))", span="7596-7596"];
m20_3204 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, aa.Coordinates.GetLength(1))", span="7597-7597"];
m20_3205 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, aa.Coordinates[0, 0])", span="7598-7598"];
m20_3206 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, aa.Coordinates[1, 1])", span="7599-7599"];
m20_3207 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="JsonSerializerTest.cs", label="string after = JsonConvert.SerializeObject(aa)", span="7601-7601"];
m20_3209 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", span="7588-7588"];
m20_2852 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", span="6581-6581"];
m20_2853 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="IList<string> errors = new List<string>()", span="6583-6583"];
m20_2854 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n      {\r\n        errors.Add(e.ErrorContext.Error.Message);\r\n        e.ErrorContext.Handled = true;\r\n      }", span="6585-6589"];
m20_2857 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, errors.Count)", span="6602-6602"];
m20_2858 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Cannot write a null value for property 'NonAttributeProperty'. Property requires a value. Path ''.'', errors[0])", span="6603-6603"];
m20_2859 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Cannot write a null value for property 'UnsetProperty'. Property requires a value. Path ''.'', errors[1])", span="6604-6604"];
m20_2860 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Cannot write a null value for property 'AlwaysProperty'. Property requires a value. Path ''.'', errors[2])", span="6605-6605"];
m20_2855 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new RequiredObject(), new JsonSerializerSettings\r\n      {\r\n        Error = error,\r\n        Formatting = Formatting.Indented\r\n      })", span="6591-6595"];
m20_2856 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''DefaultProperty'''': null,\r\n  ''''AllowNullProperty'''': null\r\n}'', json)", span="6597-6600"];
m20_2861 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", span="6581-6581"];
m20_323 [cluster="System.IO.StreamReader.ReadToEnd()", file="JsonSerializerTest.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m20_1378 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="3232-3232"];
m20_1379 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonSerializerTest.cs", label="return _innerDictionary.GetEnumerator();", span="3234-3234"];
m20_1380 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="3232-3232"];
m20_182 [cluster="Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", span="27-27"];
m20_3047 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", span="7069-7069"];
m20_3048 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="return GetEnumerator();", span="7071-7071"];
m20_3049 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", span="7069-7069"];
m20_1243 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="2829-2829"];
m20_1244 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="PersonPropertyClass personPropertyClass = new PersonPropertyClass()", span="2831-2831"];
m20_1245 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="WagePerson wagePerson = (WagePerson)personPropertyClass.Person", span="2832-2832"];
m20_1251 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(personPropertyClass, Formatting.Indented)", span="2840-2840"];
m20_1246 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="wagePerson.BirthDate = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="2834-2834"];
m20_1247 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="wagePerson.Department = ''McDees''", span="2835-2835"];
m20_1248 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="wagePerson.HourlyWage = 12.50m", span="2836-2836"];
m20_1249 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="wagePerson.LastModified = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="2837-2837"];
m20_1250 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="wagePerson.Name = ''Jim Bob''", span="2838-2838"];
m20_1254 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="Assert.AreEqual(wagePerson.HourlyWage, ((WagePerson)newPersonPropertyClass.Person).HourlyWage)", span="2853-2853"];
m20_1252 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="Assert.AreEqual(\r\n        @''{\r\n  ''''Person'''': {\r\n    ''''HourlyWage'''': 12.50,\r\n    ''''Name'''': ''''Jim Bob'''',\r\n    ''''BirthDate'''': ''''2000-11-29T23:59:59Z'''',\r\n    ''''LastModified'''': ''''2000-11-29T23:59:59Z''''\r\n  }\r\n}'',\r\n        json)", span="2841-2850"];
m20_1253 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="PersonPropertyClass newPersonPropertyClass = JsonConvert.DeserializeObject<PersonPropertyClass>(json)", span="2852-2852"];
m20_1255 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="2829-2829"];
m20_1404 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="3272-3272"];
m20_1405 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="ModelStateDictionary<string> modelStateDictionary = new ModelStateDictionary<string>()", span="3274-3274"];
m20_1406 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="modelStateDictionary.Add(''key'', ''value'')", span="3275-3275"];
m20_1407 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(modelStateDictionary)", span="3277-3277"];
m20_1408 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''key'''':''''value''''}'', json)", span="3279-3279"];
m20_1409 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="ModelStateDictionary<string> newModelStateDictionary = JsonConvert.DeserializeObject<ModelStateDictionary<string>>(json)", span="3281-3281"];
m20_1410 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, newModelStateDictionary.Count)", span="3282-3282"];
m20_1411 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value'', newModelStateDictionary[''key''])", span="3283-3283"];
m20_1412 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="3272-3272"];
m20_2816 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", span="265-265"];
m20_3237 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooManyItems()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooManyItems()", span="7647-7647"];
m20_3238 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooManyItems()", file="JsonSerializerTest.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2,1]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],[2,2,2]]],''''After'''':''''After!''''}''", span="7649-7649"];
m20_3239 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooManyItems()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<Exception>(\r\n        ''Cannot deserialize non-cubical array as multidimensional array.'',\r\n        () => JsonConvert.DeserializeObject<Array3D>(json))", span="7651-7653"];
m20_3240 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooManyItems()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooManyItems()", span="7647-7647"];
m20_2604 [cluster="Newtonsoft.Json.Tests.Serialization.WidgetId.WidgetId()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.WidgetId.WidgetId()", span="8719-8719"];
m20_648 [cluster="Newtonsoft.Json.Linq.JRaw.JRaw(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JRaw.JRaw(object)", span="48-48"];
m20_3244 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithBadItems()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithBadItems()", span="7657-7657"];
m20_3245 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithBadItems()", file="JsonSerializerTest.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],{}]],''''After'''':''''After!''''}''", span="7659-7659"];
m20_3246 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithBadItems()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Unexpected token when deserializing multidimensional array: StartObject. Path 'Coordinates[3][1]', line 1, position 99.'',\r\n        () => JsonConvert.DeserializeObject<Array3D>(json))", span="7661-7663"];
m20_3247 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithBadItems()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithBadItems()", span="7657-7657"];
m20_431 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", span="633-633"];
m20_2876 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", span="6630-6630"];
m20_2877 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="PropertyItemConverter c = new PropertyItemConverter\r\n        {\r\n          Data = new[]\r\n            {\r\n              ''one'',\r\n              ''two'',\r\n              ''three''\r\n            }\r\n        }", span="6632-6640"];
m20_2878 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c)", span="6642-6642"];
m20_2879 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Data'''':['''':::ONE:::'''','''':::TWO:::'''','''':::THREE:::'''']}'', json)", span="6644-6644"];
m20_2880 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", span="6630-6630"];
m20_2761 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", span="6410-6410"];
m20_2762 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="var person = PersonWithPrivateConstructor.CreatePerson()", span="6412-6412"];
m20_2763 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="person.Name = ''John Doe''", span="6413-6413"];
m20_2764 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="person.Age = 25", span="6414-6414"];
m20_2765 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="var serializedPerson = JsonConvert.SerializeObject(person)", span="6416-6416"];
m20_2767 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(person.Name, roundtrippedPerson.Name)", span="6419-6419"];
m20_2766 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="var roundtrippedPerson = JsonConvert.DeserializeObject<PersonWithPrivateConstructor>(serializedPerson)", span="6417-6417"];
m20_2768 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", span="6410-6410"];
m20_2491 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToNonNullableKeyValuePairArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToNonNullableKeyValuePairArray()", span="5877-5877"];
m20_2492 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToNonNullableKeyValuePairArray()", file="JsonSerializerTest.cs", label="string json = @''[ null ]''", span="5879-5879"];
m20_2493 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToNonNullableKeyValuePairArray()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Cannot convert null value to KeyValuePair. Path '[0]', line 1, position 6.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>>>(json);\r\n        })", span="5881-5886"];
m20_2494 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToNonNullableKeyValuePairArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToNonNullableKeyValuePairArray()", span="5877-5877"];
m20_1064 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="2395-2395"];
m20_1065 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonSerializerTest.cs", label="string json = @''[]''", span="2397-2397"];
m20_1066 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Collections.Generic.Dictionary`2[System.String,System.String]' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<Dictionary<string, string>>(json);\r\n        })", span="2399-2406"];
m20_1067 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="2395-2395"];
m20_2397 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIList()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIList()", span="5707-5707"];
m20_2398 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIList()", file="JsonSerializerTest.cs", label="IList list = JsonConvert.DeserializeObject<IList>(''['1', 'two', 'III']'')", span="5709-5709"];
m20_2399 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, list.Count)", span="5710-5710"];
m20_2400 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIList()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIList()", span="5707-5707"];
m20_1595 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", span="3748-3748"];
m20_1596 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", span="3748-3748"];
m20_1855 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", span="4253-4253"];
m20_1856 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonSerializerTest.cs", label="Employee joe = new Employee()", span="4255-4255"];
m20_1857 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonSerializerTest.cs", label="joe.Name = ''Joe Employee''", span="4256-4256"];
m20_1860 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonSerializerTest.cs", label="joe.Manager = mike", span="4260-4260"];
m20_1862 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new[] { joe, mike }, Formatting.Indented)", span="4263-4263"];
m20_1858 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonSerializerTest.cs", label="Employee mike = new Employee()", span="4257-4257"];
m20_1859 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonSerializerTest.cs", label="mike.Name = ''Mike Manager''", span="4258-4258"];
m20_1861 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonSerializerTest.cs", label="mike.Manager = mike", span="4261-4261"];
m20_1863 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonSerializerTest.cs", label="Console.WriteLine(json)", span="4276-4276"];
m20_1864 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", span="4253-4253"];
m20_102 [cluster="object.GetType()", file="JsonSerializerTest.cs", label="Entry object.GetType()", span="0-0"];
m20_3168 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", span="7440-7440"];
m20_3169 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="JsonSerializerTest.cs", label="Array3D aa = new Array3D()", span="7442-7442"];
m20_3170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="JsonSerializerTest.cs", label="aa.Before = ''Before!''", span="7443-7443"];
m20_3171 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="JsonSerializerTest.cs", label="aa.After = ''After!''", span="7444-7444"];
m20_3172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="JsonSerializerTest.cs", label="aa.Coordinates = new[, ,] { { { 1, 1, 1 }, { 1, 1, 2 } }, { { 1, 2, 1 }, { 1, 2, 2 } }, { { 2, 1, 1 }, { 2, 1, 2 } }, { { 2, 2, 1 }, { 2, 2, 2 } } }", span="7445-7445"];
m20_3173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(aa)", span="7447-7447"];
m20_3174 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],[2,2,2]]],''''After'''':''''After!''''}'', json)", span="7449-7449"];
m20_3175 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", span="7440-7440"];
m20_2653 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", span="6196-6196"];
m20_2654 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new WithEnums\r\n        {\r\n          Id = 7,\r\n          NullableEnum = null\r\n        })", span="6198-6202"];
m20_2655 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Id'''':7,''''NullableEnum'''':null}'', json)", span="6204-6204"];
m20_2656 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="WithEnums e = JsonConvert.DeserializeObject<WithEnums>(json)", span="6206-6206"];
m20_2657 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, e.NullableEnum)", span="6208-6208"];
m20_2658 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(new WithEnums\r\n        {\r\n          Id = 7,\r\n          NullableEnum = MyEnum.Value2\r\n        })", span="6210-6214"];
m20_2659 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Id'''':7,''''NullableEnum'''':1}'', json)", span="6216-6216"];
m20_2660 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="e = JsonConvert.DeserializeObject<WithEnums>(json)", span="6218-6218"];
m20_2661 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="Assert.AreEqual(MyEnum.Value2, e.NullableEnum)", span="6220-6220"];
m20_2662 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", span="6196-6196"];
m20_104 [cluster="System.IO.MemoryStream.ToArray()", file="JsonSerializerTest.cs", label="Entry System.IO.MemoryStream.ToArray()", span="0-0"];
m20_269 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m20_2464 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", span="5840-5840"];
m20_2465 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="JsonSerializerTest.cs", label="string json = @''[ { ''''Value'''': [ ''''1'''', ''''2'''' ], ''''Key'''': ''''aaa'''', ''''BadContent'''': [ 0 ] }, { ''''Value'''': [ ''''3'''', ''''4'''' ], ''''Key'''': ''''bbb'''' } ]''", span="5842-5842"];
m20_2466 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="JsonSerializerTest.cs", label="IList<KeyValuePair<string, IList<string>>> values = JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>>>(json)", span="5844-5844"];
m20_2467 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, values.Count)", span="5846-5846"];
m20_2468 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''aaa'', values[0].Key)", span="5847-5847"];
m20_2469 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, values[0].Value.Count)", span="5848-5848"];
m20_2470 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''1'', values[0].Value[0])", span="5849-5849"];
m20_2471 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''2'', values[0].Value[1])", span="5850-5850"];
m20_2472 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''bbb'', values[1].Key)", span="5851-5851"];
m20_2473 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, values[1].Value.Count)", span="5852-5852"];
m20_2474 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''3'', values[1].Value[0])", span="5853-5853"];
m20_2475 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''4'', values[1].Value[1])", span="5854-5854"];
m20_2476 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", span="5840-5840"];
m20_1865 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.Employee()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.Employee()", span="4241-4241"];
m20_2352 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", span="5579-5579"];
m20_2353 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonSerializerTest.cs", label="return _readonlyString;", span="5581-5581"];
m20_2354 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", span="5579-5579"];
m20_1509 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", span="3500-3500"];
m20_1510 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Person person = new Person()", span="3502-3502"];
m20_1511 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="3503-3503"];
m20_1512 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="person.LastModified = person.BirthDate", span="3504-3504"];
m20_1513 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="person.Department = ''Department!''", span="3505-3505"];
m20_1514 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="person.Name = ''Name!''", span="3506-3506"];
m20_1518 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="3516-3516"];
m20_1515 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="3508-3508"];
m20_1516 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="string dateTimeOffsetText", span="3509-3509"];
m20_1524 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="3550-3550"];
m20_1517 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="dateTimeOffsetText = @''\/Date(977345999000+0200)\/''", span="3511-3511"];
m20_1520 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''\/Date(946688461000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(946688461000)\/''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''\/Date(-62135596800000)\/'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="3522-3545"];
m20_1519 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n        })", span="3518-3521"];
m20_1521 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="3547-3547"];
m20_1522 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''String!'', o2._stringValue)", span="3548-3548"];
m20_1523 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MinValue, o2._intValue)", span="3549-3549"];
m20_1525 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="3551-3551"];
m20_1526 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, o2._nullPersonValue)", span="3552-3552"];
m20_1527 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, o2._nullableInt)", span="3553-3553"];
m20_1528 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", span="3500-3500"];
m20_3571 [cluster="long.ToString()", file="JsonSerializerTest.cs", label="Entry long.ToString()", span="0-0"];
m20_3614 [cluster="Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8931-8931"];
m20_3615 [cluster="Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="return Convert.ToInt32(reader.Value);", span="8933-8933"];
m20_3616 [cluster="Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8931-8931"];
m20_3481 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionaryInterface()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionaryInterface()", span="8339-8339"];
m20_3482 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionaryInterface()", file="JsonSerializerTest.cs", label="IReadOnlyDictionary<string, int> dic = JsonConvert.DeserializeObject<IReadOnlyDictionary<string, int>>(''{'one':1,'two':2}'')", span="8341-8341"];
m20_3483 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionaryInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic.Count)", span="8343-8343"];
m20_3484 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionaryInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, dic[''one''])", span="8345-8345"];
m20_3485 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionaryInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic[''two''])", span="8346-8346"];
m20_3486 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionaryInterface()", file="JsonSerializerTest.cs", label="CustomAssert.IsInstanceOfType(typeof(ReadOnlyDictionary<string, int>), dic)", span="8348-8348"];
m20_3487 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionaryInterface()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionaryInterface()", span="8339-8339"];
m20_389 [cluster="System.IO.StringWriter.GetStringBuilder()", file="JsonSerializerTest.cs", label="Entry System.IO.StringWriter.GetStringBuilder()", span="0-0"];
m20_1442 [cluster="System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", span="0-0"];
m20_1771 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", span="4093-4093"];
m20_1772 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="JsonSerializerTest.cs", label="Movie p = new Movie()", span="4095-4095"];
m20_1773 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="JsonSerializerTest.cs", label="p.Name = ''Existing,''", span="4096-4096"];
m20_1774 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="JsonSerializerTest.cs", label="JsonConvert.PopulateObject(''{'Name':'Appended'}'', p, new JsonSerializerSettings\r\n        {\r\n          Converters = new List<JsonConverter> { new StringAppenderConverter() }\r\n        })", span="4098-4101"];
m20_1775 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Existing,Appended'', p.Name)", span="4103-4103"];
m20_1776 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", span="4093-4093"];
m20_2445 [cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="342-342"];
m20_2792 [cluster="Unk.ToUpper", file="JsonSerializerTest.cs", label="Entry Unk.ToUpper", span=""];
m20_2917 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", span="6748-6748"];
m20_2918 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonSerializerTest.cs", label="string s = (string) new JsonSerializer().Deserialize(new JsonTextReader(new StringReader('''''')))", span="6750-6750"];
m20_2919 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonSerializerTest.cs", label="Assert.AreEqual('''', s)", span="6751-6751"];
m20_2920 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", span="6748-6748"];
m20_1037 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="2349-2349"];
m20_1038 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="string json = @''{'SetOnlyProperty':[1,2,3,4,5]}''", span="2351-2351"];
m20_1039 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="SetOnlyPropertyClass2 setOnly = JsonConvert.DeserializeObject<SetOnlyPropertyClass2>(json)", span="2353-2353"];
m20_1040 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="JArray a = (JArray)setOnly.GetValue()", span="2354-2354"];
m20_1041 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(5, a.Count)", span="2355-2355"];
m20_1042 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, (int)a[0])", span="2356-2356"];
m20_1043 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(5, (int)a[a.Count - 1])", span="2357-2357"];
m20_1044 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="2349-2349"];
m20_3585 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="JsonSerializerTest.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
m20_845 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="1843-1843"];
m20_846 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs", label="string classRef = typeof(JsonPropertyWithHandlingValues).FullName", span="1845-1845"];
m20_847 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Self referencing loop detected for property 'ReferenceLoopHandlingErrorProperty' with type ''' + classRef + '''. Path ''.'',\r\n        () =>\r\n        {\r\n          JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues();\r\n          o.ReferenceLoopHandlingErrorProperty = o;\r\n\r\n          JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore });\r\n        })", span="1847-1855"];
m20_848 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="1843-1843"];
m20_2968 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", span="6899-6899"];
m20_2969 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="string json = ''{one:1}{}''", span="6901-6901"];
m20_2970 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="6903-6903"];
m20_2972 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="IDictionary<string, int> o = s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="6905-6905"];
m20_2977 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''Additional text encountered after finished reading JSON content: {. Path '', line 1, position 7.'',\r\n        () =>\r\n          {\r\n            s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)));\r\n          })", span="6912-6917"];
m20_2971 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="JsonSerializer s = JsonSerializer.Create(settings)", span="6904-6904"];
m20_2975 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="settings.CheckAdditionalContent = true", span="6910-6910"];
m20_2976 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="s = JsonSerializer.Create(settings)", span="6911-6911"];
m20_2973 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(o)", span="6907-6907"];
m20_2974 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, o[''one''])", span="6908-6908"];
m20_2978 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", span="6899-6899"];
m20_3338 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", span="7966-7966"];
m20_3339 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs", label="NullableFloats floats = new NullableFloats\r\n        {\r\n          Object = double.NaN,\r\n          ObjectNull = null,\r\n          Float = float.NaN,\r\n          NullableDouble = double.NaN,\r\n          NullableFloat = null\r\n        }", span="7968-7975"];
m20_3340 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(floats, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          FloatFormatHandling = FloatFormatHandling.DefaultValue\r\n        })", span="7977-7980"];
m20_3341 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Object'''': 0.0,\r\n  ''''Float'''': 0.0,\r\n  ''''Double'''': 0.0,\r\n  ''''NullableFloat'''': null,\r\n  ''''NullableDouble'''': null,\r\n  ''''ObjectNull'''': null\r\n}'', json)", span="7982-7989"];
m20_3342 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", span="7966-7966"];
m20_2131 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Response.Response()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Response.Response()", span="4914-4914"];
m20_3526 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyCollection()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyCollection()", span="8456-8456"];
m20_3527 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyCollection()", file="JsonSerializerTest.cs", label="IList<int> l = new List<int>\r\n                       {\r\n                         1,\r\n                         2,\r\n                         3\r\n                       }", span="8458-8463"];
m20_3528 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyCollection()", file="JsonSerializerTest.cs", label="CustomReadOnlyCollection<int> list = new CustomReadOnlyCollection<int>(l)", span="8465-8465"];
m20_3529 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyCollection()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(list, Formatting.Indented)", span="8467-8467"];
m20_3530 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyCollection()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[\r\n  1,\r\n  2,\r\n  3\r\n]'', json)", span="8468-8472"];
m20_3531 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyCollection()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyCollection()", span="8456-8456"];
m20_1362 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="3212-3212"];
m20_1363 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonSerializerTest.cs", label="_innerDictionary.Clear()", span="3214-3214"];
m20_1364 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="3212-3212"];
m20_1981 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="4579-4579"];
m20_1982 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="StructWithAttribute testStruct = new StructWithAttribute\r\n        {\r\n          MyInt = int.MaxValue\r\n        }", span="4581-4584"];
m20_1983 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(testStruct, Formatting.Indented)", span="4586-4586"];
m20_1984 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''MyInt'''': 2147483647\r\n}'', json)", span="4588-4590"];
m20_1985 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="StructWithAttribute newStruct = JsonConvert.DeserializeObject<StructWithAttribute>(json)", span="4592-4592"];
m20_1986 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, newStruct.MyInt)", span="4594-4594"];
m20_1987 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="4579-4579"];
m20_3077 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", span="7147-7147"];
m20_3078 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", file="JsonSerializerTest.cs", label="m_Item1 = item1", span="7149-7149"];
m20_3079 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", span="7147-7147"];
m20_1852 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.ShouldSerializeManager()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.ShouldSerializeManager()", span="4246-4246"];
m20_1853 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.ShouldSerializeManager()", file="JsonSerializerTest.cs", label="return (Manager != this);", span="4248-4248"];
m20_1854 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.ShouldSerializeManager()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.ShouldSerializeManager()", span="4246-4246"];
m20_1346 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", span="3100-3100"];
m20_1447 [cluster="System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", span="0-0"];
m20_2590 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", span="1405-1405"];
m20_1146 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="174-174"];
m20_1648 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="3869-3869"];
m20_1649 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Pos p = (Pos)value", span="3871-3871"];
m20_1651 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="writer.WriteRawValue(String.Format(''new Pos({0},{1})'', p.X, p.Y))", span="3874-3874"];
m20_1652 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="writer.WriteNull()", span="3876-3876"];
m20_1650 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="p != null", span="3873-3873"];
m20_1653 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="3869-3869"];
m20_1675 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", span="3907-3907"];
m20_1676 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="return objectType.IsAssignableFrom(typeof(PosDouble));", span="3909-3909"];
m20_1677 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", span="3907-3907"];
m20_2875 [cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemConverter.PropertyItemConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemConverter.PropertyItemConverter()", span="8626-8626"];
m20_2324 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", span="5500-5500"];
m20_2325 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="5502-5502"];
m20_2326 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", span="5500-5500"];
m20_205 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="560-560"];
m20_206 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="string value = JsonConvert.SerializeObject(new SetOnlyPropertyClass())", span="562-562"];
m20_207 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="SetOnlyPropertyClass c = JsonConvert.DeserializeObject<SetOnlyPropertyClass>(value)", span="564-564"];
m20_208 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c.Field, ''Field'')", span="566-566"];
m20_209 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="560-560"];
m20_1989 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="4604-4604"];
m20_1990 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n        {\r\n          Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n        })", span="4606-4609"];
m20_1991 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''{\''Offset\'':\''2000-01-01T00:00:00+06:00\''}'', serializeObject)", span="4611-4611"];
m20_1992 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="var deserializeObject = JsonConvert.DeserializeObject<TimeZoneOffsetObject>(serializeObject)", span="4612-4612"];
m20_1993 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="4613-4613"];
m20_1994 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="4614-4614"];
m20_1995 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="4604-4604"];
m20_3061 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.GetEnumerator()", span="7101-7101"];
m20_3062 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.GetEnumerator()", file="JsonSerializerTest.cs", label="return _values.GetEnumerator();", span="7103-7103"];
m20_3063 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.GetEnumerator()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.GetEnumerator()", span="7101-7101"];
m20_628 [cluster="Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", span="30-30"];
m20_815 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", span="1777-1777"];
m20_816 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="SubKlass i = new SubKlass(''my subprop'')", span="1779-1779"];
m20_817 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="i.SuperProp = ''overrided superprop''", span="1780-1780"];
m20_818 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(i, new JsonSerializerSettings\r\n        {\r\n          PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n        })", span="1782-1785"];
m20_819 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''$id'''':''''1'''',''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="1787-1787"];
m20_820 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json, new JsonSerializerSettings\r\n        {\r\n          PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n        })", span="1789-1792"];
m20_821 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="string newJson = JsonConvert.SerializeObject(ii, new JsonSerializerSettings\r\n      {\r\n        PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n      })", span="1794-1797"];
m20_822 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''$id'''':''''1'''',''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="1798-1798"];
m20_823 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", span="1777-1777"];
m20_794 [cluster="Unk.IsNotNull", file="JsonSerializerTest.cs", label="Entry Unk.IsNotNull", span=""];
m20_1541 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="3584-3584"];
m20_1542 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="AA myA = new AA(2)", span="3586-3586"];
m20_1543 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(myA, Formatting.Indented)", span="3587-3587"];
m20_1544 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2\r\n}'', json)", span="3588-3594"];
m20_1545 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="BB myB = new BB(3, 4)", span="3596-3596"];
m20_1546 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(myB, Formatting.Indented)", span="3597-3597"];
m20_1547 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''BB_property1'''': 4,\r\n  ''''BB_property2'''': 4,\r\n  ''''BB_property3'''': 4,\r\n  ''''BB_property4'''': 4,\r\n  ''''BB_property5'''': 4,\r\n  ''''BB_property7'''': 4,\r\n  ''''AA_property1'''': 3,\r\n  ''''AA_property2'''': 3,\r\n  ''''AA_property3'''': 3,\r\n  ''''AA_property4'''': 3\r\n}'', json)", span="3598-3612"];
m20_1548 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="3584-3584"];
m20_2982 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", span="6922-6922"];
m20_2983 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs", label="string json = @''{ ''''ClassName'''' : ''''System.InvalidOperationException'''',\r\n  ''''Data'''' : null,\r\n  ''''ExceptionMethod'''' : ''''8\nLogin\nAppBiz, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null\nMyApp.LoginBiz\nMyApp.User Login()'''',\r\n  ''''HResult'''' : -2146233079,\r\n  ''''HelpURL'''' : null,\r\n  ''''InnerException'''' : { ''''ClassName'''' : ''''System.Exception'''',\r\n      ''''Data'''' : null,\r\n      ''''ExceptionMethod'''' : null,\r\n      ''''HResult'''' : -2146233088,\r\n      ''''HelpURL'''' : null,\r\n      ''''InnerException'''' : null,\r\n      ''''Message'''' : ''''Inner exception...'''',\r\n      ''''RemoteStackIndex'''' : 0,\r\n      ''''RemoteStackTraceString'''' : null,\r\n      ''''Source'''' : null,\r\n      ''''StackTraceString'''' : null,\r\n      ''''WatsonBuckets'''' : null\r\n    },\r\n  ''''Message'''' : ''''Outter exception...'''',\r\n  ''''RemoteStackIndex'''' : 0,\r\n  ''''RemoteStackTraceString'''' : null,\r\n  ''''Source'''' : ''''AppBiz'''',\r\n  ''''StackTraceString'''' : '''' at MyApp.LoginBiz.Login() in C:\\MyApp\\LoginBiz.cs:line 44\r\n at MyApp.LoginSvc.Login() in C:\\MyApp\\LoginSvc.cs:line 71\r\n at SyncInvokeLogin(Object , Object[] , Object[] )\r\n at System.ServiceModel.Dispatcher.SyncMethodInvoker.Invoke(Object instance, Object[] inputs, Object[]& outputs)\r\n at System.ServiceModel.Dispatcher.DispatchOperationRuntime.InvokeBegin(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage5(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage41(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage4(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage31(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage3(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage2(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage11(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage1(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.MessageRpc.Process(Boolean isOperationContextSet)'''',\r\n  ''''WatsonBuckets'''' : null\r\n}''", span="6924-6948"];
m20_2984 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs", label="InvalidOperationException exception = JsonConvert.DeserializeObject<InvalidOperationException>(json)", span="6950-6950"];
m20_2985 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(exception)", span="6951-6951"];
m20_2986 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs", label="CustomAssert.IsInstanceOfType(typeof(InvalidOperationException), exception)", span="6952-6952"];
m20_2987 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Outter exception...'', exception.Message)", span="6954-6954"];
m20_2988 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", span="6922-6922"];
m20_83 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualProperties.SubWithContractVirtualProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualProperties.SubWithContractVirtualProperties()", span="256-256"];
m20_1330 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="3120-3120"];
m20_1331 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="Exception ex = new Exception(''Blah blah blah'')", span="3122-3122"];
m20_1332 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="DataContractJsonSerializerTestClass c = new DataContractJsonSerializerTestClass()", span="3124-3124"];
m20_1336 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="c.ExceptionProperty = ex", span="3128-3128"];
m20_1333 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="c.TimeSpanProperty = new TimeSpan(200, 20, 59, 30, 900)", span="3125-3125"];
m20_1334 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="c.GuidProperty = new Guid(''66143115-BE2A-4a59-AF0A-348E1EA15B1E'')", span="3126-3126"];
m20_1335 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="c.AnimalProperty = new Human() { Ethnicity = ''European'' }", span="3127-3127"];
m20_1339 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="serializer.WriteObject(ms, c)", span="3134-3134"];
m20_1337 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="3130-3130"];
m20_1338 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(\r\n        typeof(DataContractJsonSerializerTestClass),\r\n        new Type[] { typeof(Human) })", span="3131-3133"];
m20_1340 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="byte[] jsonBytes = ms.ToArray()", span="3136-3136"];
m20_1341 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="string json = Encoding.UTF8.GetString(jsonBytes, 0, jsonBytes.Length)", span="3137-3137"];
m20_1342 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="3120-3120"];
m20_1092 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", span="2459-2459"];
m20_1093 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonSerializerTest.cs", label="string json = @''[]''", span="2461-2461"];
m20_1094 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<InvalidCastException>(\r\n        @''Unable to cast object of type 'Newtonsoft.Json.Linq.JArray' to type 'Newtonsoft.Json.Linq.JObject'.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<JObject>(json);\r\n        })", span="2463-2468"];
m20_1095 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", span="2459-2459"];
m20_2132 [cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="104-104"];
m20_1420 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="3317-3317"];
m20_1421 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_stringValue = info.GetString(''stringValue'')", span="3319-3319"];
m20_1422 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_intValue = info.GetInt32(''intValue'')", span="3320-3320"];
m20_1423 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_dateTimeOffsetValue = (DateTimeOffset)info.GetValue(''dateTimeOffsetValue'', typeof(DateTimeOffset))", span="3321-3321"];
m20_1424 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_personValue = (Person)info.GetValue(''personValue'', typeof(Person))", span="3322-3322"];
m20_1425 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_nullPersonValue = (Person)info.GetValue(''nullPersonValue'', typeof(Person))", span="3323-3323"];
m20_1426 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_nullableInt = (int?)info.GetValue(''nullableInt'', typeof(int?))", span="3324-3324"];
m20_1427 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_booleanValue = info.GetBoolean(''booleanValue'')", span="3326-3326"];
m20_1428 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_byteValue = info.GetByte(''byteValue'')", span="3327-3327"];
m20_1429 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_charValue = info.GetChar(''charValue'')", span="3328-3328"];
m20_1430 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_dateTimeValue = info.GetDateTime(''dateTimeValue'')", span="3329-3329"];
m20_1431 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_decimalValue = info.GetDecimal(''decimalValue'')", span="3330-3330"];
m20_1432 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_shortValue = info.GetInt16(''shortValue'')", span="3331-3331"];
m20_1433 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_longValue = info.GetInt64(''longValue'')", span="3332-3332"];
m20_1434 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_sbyteValue = info.GetSByte(''sbyteValue'')", span="3333-3333"];
m20_1435 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_floatValue = info.GetSingle(''floatValue'')", span="3334-3334"];
m20_1436 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_ushortValue = info.GetUInt16(''ushortValue'')", span="3335-3335"];
m20_1437 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_uintValue = info.GetUInt32(''uintValue'')", span="3336-3336"];
m20_1438 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_ulongValue = info.GetUInt64(''ulongValue'')", span="3337-3337"];
m20_1439 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="3317-3317"];
m20_49 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewProperties.SubWithoutContractNewProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewProperties.SubWithoutContractNewProperties()", span="224-224"];
m20_2330 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", span="5520-5520"];
m20_2331 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="5522-5522"];
m20_2332 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", span="5520-5520"];
m20_1825 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="4190-4190"];
m20_1826 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="string json = @''{''''First'''':''''First'''',''''Second'''':2,''''Ignored'''':{''''Name'''':''''James''''},''''AdditionalContent'''':{''''LOL'''':true}}''", span="4192-4192"];
m20_1827 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="ConstructorCompexIgnoredProperty cc = JsonConvert.DeserializeObject<ConstructorCompexIgnoredProperty>(json)", span="4194-4194"];
m20_1828 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''First'', cc.First)", span="4195-4195"];
m20_1829 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, cc.Second)", span="4196-4196"];
m20_1830 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, cc.Ignored)", span="4197-4197"];
m20_1831 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="4190-4190"];
m20_2298 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", span="5435-5435"];
m20_2299 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonSerializerTest.cs", label="Title = title", span="5437-5437"];
m20_2300 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonSerializerTest.cs", label="Categories = new Dictionary<string, int>()", span="5438-5438"];
m20_2301 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", span="5435-5435"];
m20_331 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="JsonSerializerTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0"];
m20_385 [cluster="Newtonsoft.Json.Tests.TestObjects.ProductCollection.ProductCollection()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ProductCollection.ProductCollection()", span="29-29"];
m20_1078 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", span="2427-2427"];
m20_1079 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonSerializerTest.cs", label="string json = @''[]''", span="2429-2429"];
m20_1080 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Double' because the type requires a JSON primitive value (e.g. string, number, boolean, null) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON primitive value (e.g. string, number, boolean, null) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<double>(json);\r\n        })", span="2431-2438"];
m20_1081 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", span="2427-2427"];
m20_1549 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="3709-3709"];
m20_1586 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_field1 = f", span="3711-3711"];
m20_1587 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_field2 = f", span="3712-3712"];
m20_1588 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_property1 = f", span="3713-3713"];
m20_1589 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_property2 = f", span="3714-3714"];
m20_1590 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_property3 = f", span="3715-3715"];
m20_1591 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_property4 = f", span="3716-3716"];
m20_1592 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_property5 = f", span="3717-3717"];
m20_1593 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_property6 = f", span="3718-3718"];
m20_1594 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="3709-3709"];
m20_814 [cluster="Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", span="30-30"];
m20_1583 [cluster="System.Type.GetProperty(string, System.Reflection.BindingFlags)", file="JsonSerializerTest.cs", label="Entry System.Type.GetProperty(string, System.Reflection.BindingFlags)", span="0-0"];
m20_168 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m20_1071 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", span="2411-2411"];
m20_1072 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonSerializerTest.cs", label="string json = @''[]''", span="2413-2413"];
m20_1073 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Exception' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<Exception>(json);\r\n        })", span="2415-2422"];
m20_1074 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", span="2411-2411"];
m20_1937 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", span="4470-4470"];
m20_1938 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs", label="double?[] d = (double?[])JsonConvert.DeserializeObject(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', typeof(double?[]))", span="4472-4476"];
m20_1939 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, d.Length)", span="4478-4478"];
m20_1940 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2.4, d[0])", span="4479-4479"];
m20_1941 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4.3, d[1])", span="4480-4480"];
m20_1942 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, d[2])", span="4481-4481"];
m20_1943 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", span="4470-4470"];
m20_145 [cluster="System.DateTime.DateTime(int, int, int)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m20_255 [cluster="Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", span="27-27"];
m20_1806 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="4154-4154"];
m20_1807 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="var reference = new Dictionary<string, object>()", span="4156-4156"];
m20_1808 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="reference.Add(''$ref'', null)", span="4157-4157"];
m20_1809 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="reference.Add(''$id'', null)", span="4158-4158"];
m20_1810 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="reference.Add(''blah'', ''blah!'')", span="4159-4159"];
m20_1814 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="child.Add(''Father'', reference)", span="4164-4164"];
m20_1811 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="var child = new Dictionary<string, object>()", span="4161-4161"];
m20_1812 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="child.Add(''_id'', 2)", span="4162-4162"];
m20_1813 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="child.Add(''Name'', ''Isabell'')", span="4163-4163"];
m20_1815 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(child)", span="4166-4166"];
m20_1816 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="Dictionary<string, object> result = JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="4167-4167"];
m20_1817 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, result.Count)", span="4169-4169"];
m20_1818 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, ((JObject)result[''Father'']).Count)", span="4170-4170"];
m20_1819 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''blah!'', (string)((JObject)result[''Father''])[''blah''])", span="4171-4171"];
m20_1820 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="4154-4154"];
m20_2252 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContract.ChildDataContract()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContract.ChildDataContract()", span="5267-5267"];
m20_3523 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", span="8449-8449"];
m20_3524 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="return _values.GetEnumerator();", span="8451-8451"];
m20_3525 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", span="8449-8449"];
m20_2707 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", span="6300-6300"];
m20_2708 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''No JSON content found and type 'System.Int32' is not nullable. Path '', line 0, position 0.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<int>('''');\r\n        })", span="6302-6307"];
m20_2709 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", span="6300-6300"];
m20_107 [cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="113-113"];
m20_1147 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="2567-2567"];
m20_1148 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Error setting value to 'ReadTimeout' on 'System.IO.MemoryStream'.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new DefaultContractResolver\r\n            {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE || PORTABLE40)\r\n              IgnoreSerializableAttribute = true\r\n#endif\r\n            }\r\n          });\r\n        })", span="2569-2582"];
m20_1149 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="2567-2567"];
m20_2276 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", span="5379-5379"];
m20_2277 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs", label="ImplementInterfaceObject cc = new ImplementInterfaceObject\r\n        {\r\n          InterfaceMember = new DateTime(2010, 12, 31, 0, 0, 0, DateTimeKind.Utc),\r\n          NewMember = ''NewMember!''\r\n        }", span="5381-5385"];
m20_2278 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(cc, Formatting.Indented)", span="5387-5387"];
m20_2279 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''virtualMember'''': ''''2010-12-31T00:00:00Z'''',\r\n  ''''newMemberWithProperty'''': null\r\n}'', result)", span="5389-5392"];
m20_2280 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", span="5379-5379"];
m20_1958 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="4521-4521"];
m20_1959 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="JsonSerializer serializer1 = new JsonSerializer()", span="4523-4523"];
m20_1960 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="serializer1.Converters.Add(new IsoDateTimeConverter())", span="4524-4524"];
m20_1961 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="serializer1.NullValueHandling = NullValueHandling.Ignore", span="4525-4525"];
m20_1964 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="MyClass[] z = (MyClass[])serializer1.Deserialize(reader, typeof(MyClass[]))", span="4531-4531"];
m20_1962 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="string json = @''[{''''Prop1'''':''''''''},{''''Prop1'''':''''''''}]''", span="4527-4527"];
m20_1963 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="4529-4529"];
m20_1965 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, z.Length)", span="4532-4532"];
m20_1966 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, z[0].Prop1.Length)", span="4533-4533"];
m20_1967 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, z[1].Prop1.Length)", span="4534-4534"];
m20_1968 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="4521-4521"];
m20_3080 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", span="7159-7159"];
m20_3081 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="string json", span="7161-7161"];
m20_3082 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="IList<double> d = new List<double> {1.1, double.NaN, double.PositiveInfinity}", span="7162-7162"];
m20_3083 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(d)", span="7164-7164"];
m20_3084 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(d, new JsonSerializerSettings { FloatFormatHandling = FloatFormatHandling.Symbol })", span="7167-7167"];
m20_3085 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(d, new JsonSerializerSettings {FloatFormatHandling = FloatFormatHandling.DefaultValue})", span="7170-7170"];
m20_3086 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[1.1,0.0,0.0]'', json)", span="7173-7173"];
m20_3087 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", span="7159-7159"];
m20_3040 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<T>)", span="7059-7059"];
m20_3041 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerTest.cs", label="_values = new List<T>(values)", span="7061-7061"];
m20_3042 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<T>)", span="7059-7059"];
m20_3127 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="7291-7291"];
m20_3128 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonSerializerTest.cs", label="IgnoreSerializableAttribute = false", span="7293-7293"];
m20_3129 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="7291-7291"];
m20_2059 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="4741-4741"];
m20_2060 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="string json = ''{'Value':123456789876543.21}''", span="4743-4743"];
m20_2061 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="IDictionary<string, decimal> d = JsonConvert.DeserializeObject<IDictionary<string, decimal>>(json)", span="4744-4744"];
m20_2062 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123456789876543.21m, d[''Value''])", span="4745-4745"];
m20_2063 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="4741-4741"];
m20_2159 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", span="5004-5004"];
m20_2160 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonSerializerTest.cs", label="Value = value", span="5006-5006"];
m20_2161 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonSerializerTest.cs", label="Constructor = ''Public Paramatized''", span="5007-5007"];
m20_2162 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", span="5004-5004"];
m20_889 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="1975-1975"];
m20_890 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="DataContractPrivateMembers c = new DataContractPrivateMembers(''Jeff'', 26, 10, ''Dr'')", span="1977-1977"];
m20_891 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="c.NotIncluded = ''Hi''", span="1978-1978"];
m20_892 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="1979-1979"];
m20_893 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''_name'''': ''''Jeff'''',\r\n  ''''_age'''': 26,\r\n  ''''Rank'''': 10,\r\n  ''''JsonTitle'''': ''''Dr''''\r\n}'', json)", span="1981-1986"];
m20_894 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="DataContractPrivateMembers cc = JsonConvert.DeserializeObject<DataContractPrivateMembers>(json)", span="1988-1988"];
m20_895 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''_name: Jeff, _age: 26, Rank: 10, JsonTitle: Dr'', cc.ToString())", span="1989-1989"];
m20_896 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="1975-1975"];
m20_477 [cluster="System.Guid.Guid(string)", file="JsonSerializerTest.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m20_2009 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="4639-4639"];
m20_2010 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonSerializerTest.cs", label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''\\/Date(946663200000+0600)\\/\''}'')", span="4641-4641"];
m20_2011 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="4642-4642"];
m20_2012 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="4639-4639"];
m20_2818 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="124-124"];
m20_1279 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="2936-2936"];
m20_1280 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonSerializerTest.cs", label="return JsonConvert.SerializeObject(this, Formatting.Indented);", span="2938-2938"];
m20_1281 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="2936-2936"];
m20_1654 [cluster="string.Format(string, object, object)", file="JsonSerializerTest.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m20_325 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="570-570"];
m20_1181 [cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", span="32-32"];
m20_2928 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", span="6765-6765"];
m20_2929 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonSerializerTest.cs", label="var json = Serialize(obj)", span="6768-6768"];
m20_2930 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonSerializerTest.cs", label="return Deserialize<T>(json);", span="6769-6769"];
m20_2931 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", span="6765-6765"];
m20_2199 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="5112-5112"];
m20_2200 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  'Name': 'James Hughes',\r\n  'Age': '40',\r\n  'Height': '44.4',\r\n  'Price': '4'\r\n}''", span="5114-5119"];
m20_2201 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="DeserializeStringConvert p = JsonConvert.DeserializeObject<DeserializeStringConvert>(json)", span="5121-5121"];
m20_2202 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="Assert.AreEqual(40, p.Age)", span="5122-5122"];
m20_2203 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="Assert.AreEqual(44.4, p.Height)", span="5123-5123"];
m20_2204 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4m, p.Price)", span="5124-5124"];
m20_2205 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="5112-5112"];
m20_1030 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="2336-2336"];
m20_1031 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs", label="string json = @''{''''sublocation'''':''''AlertEmailSender.Program.Main'''',''''userId'''':0,''''type'''':0,''''summary'''':''''Loading settings variables'''',''''details'''':null,''''stackTrace'''':''''   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)\r\n   at System.Environment.get_StackTrace()\r\n   at mr.Logging.Event..ctor(String summary) in C:\\Projects\\MRUtils\\Logging\\Event.vb:line 71\r\n   at AlertEmailSender.Program.Main(String[] args) in C:\\Projects\\AlertEmailSender\\AlertEmailSender\\Program.cs:line 25'''',''''tag'''':null,''''time'''':''''\/Date(1249591032026-0400)\/''''}''", span="2338-2338"];
m20_1032 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Unable to find a constructor to use for type Newtonsoft.Json.Tests.TestObjects.Event. A class should either have a default constructor, one constructor with arguments or a constructor marked with the JsonConstructor attribute. Path 'sublocation', line 1, position 15.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<TestObjects.Event>(json);\r\n        })", span="2340-2345"];
m20_1033 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="2336-2336"];
m20_2133 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="126-126"];
m20_2528 [cluster="Newtonsoft.Json.Tests.Serialization.TestObject.TestObject(string, byte[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TestObject.TestObject(string, byte[])", span="8737-8737"];
m20_3580 [cluster="Newtonsoft.Json.Tests.Serialization.TestObject.TestObject(string, byte[])", file="JsonSerializerTest.cs", label="Name = name", span="8739-8739"];
m20_3581 [cluster="Newtonsoft.Json.Tests.Serialization.TestObject.TestObject(string, byte[])", file="JsonSerializerTest.cs", label="Data = data", span="8740-8740"];
m20_3582 [cluster="Newtonsoft.Json.Tests.Serialization.TestObject.TestObject(string, byte[])", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TestObject.TestObject(string, byte[])", span="8737-8737"];
m20_1120 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="2513-2513"];
m20_1121 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs", label="string json = @''[]''", span="2515-2515"];
m20_1122 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot populate JSON array onto type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '', line 1, position 1.'',\r\n        () =>\r\n        {\r\n          JsonConvert.PopulateObject(json, new Person());\r\n        })", span="2517-2522"];
m20_1123 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="2513-2513"];
m20_61 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualProperties.SubWithoutContractVirtualProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualProperties.SubWithoutContractVirtualProperties()", span="235-235"];
m20_153 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m20_2054 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="4733-4733"];
m20_2055 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs", label="string json = ''[123456789876543.21]''", span="4735-4735"];
m20_2056 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs", label="IList<decimal> a = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="4736-4736"];
m20_2057 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123456789876543.21m, a[0])", span="4737-4737"];
m20_2058 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="4733-4733"];
m20_2932 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", span="6772-6772"];
m20_2934 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs", label="var stringWriter = new StringWriter()", span="6775-6775"];
m20_2937 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs", label="serializer.Serialize(stringWriter, obj)", span="6781-6781"];
m20_2935 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs", label="var serializer = new Newtonsoft.Json.JsonSerializer()", span="6776-6776"];
m20_2938 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs", label="return stringWriter.ToString();", span="6783-6783"];
m20_2936 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs", label="serializer.ContractResolver = new DefaultContractResolver(false)\r\n        {\r\n          IgnoreSerializableAttribute = false\r\n        }", span="6777-6780"];
m20_2939 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", span="6772-6772"];
m20_33 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonGenericClass.NonGenericClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonGenericClass.NonGenericClass()", span="131-131"];
m20_3355 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="8034-8034"];
m20_3356 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="IList<object> dates = new List<object>\r\n        {\r\n          new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n          new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n        }", span="8036-8040"];
m20_3357 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter()", span="8042-8042"];
m20_3360 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="serializer.Serialize(jsonWriter, dates)", span="8051-8051"];
m20_3358 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="8043-8043"];
m20_3364 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="string json = sw.ToString()", span="8057-8057"];
m20_3359 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n        {\r\n          DateFormatString = ''yyyy tt'',\r\n          Culture = new CultureInfo(''en-NZ''),\r\n          Formatting = Formatting.Indented\r\n        })", span="8045-8050"];
m20_3361 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="Assert.IsNull(jsonWriter.DateFormatString)", span="8053-8053"];
m20_3362 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(CultureInfo.InvariantCulture, jsonWriter.Culture)", span="8054-8054"];
m20_3363 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(Formatting.None, jsonWriter.Formatting)", span="8055-8055"];
m20_3365 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="8059-8062"];
m20_3366 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="8034-8034"];
m20_824 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", span="1802-1802"];
m20_825 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="1804-1804"];
m20_826 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="o.DefaultValueHandlingIgnoreProperty = ''Default!''", span="1805-1805"];
m20_827 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="o.DefaultValueHandlingIncludeProperty = ''Default!''", span="1806-1806"];
m20_828 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="o.DefaultValueHandlingPopulateProperty = ''Default!''", span="1807-1807"];
m20_829 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="o.DefaultValueHandlingIgnoreAndPopulateProperty = ''Default!''", span="1808-1808"];
m20_830 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="1810-1810"];
m20_832 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { NullValueHandling = NullValueHandling.Ignore })", span="1821-1821"];
m20_831 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''DefaultValueHandlingPopulateProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null,\r\n  ''''ReferenceLoopHandlingErrorProperty'''': null,\r\n  ''''ReferenceLoopHandlingIgnoreProperty'''': null,\r\n  ''''ReferenceLoopHandlingSerializeProperty'''': null\r\n}'', json)", span="1812-1819"];
m20_833 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''DefaultValueHandlingPopulateProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null\r\n}'', json)", span="1823-1827"];
m20_834 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", span="1802-1802"];
m20_2222 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="5184-5184"];
m20_2223 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="string json = @''{''''indexed'''':true, ''''startYear'''':1939, ''''values'''':\r\n                            [  3000,  /* 1940-1949 */\r\n                               3000,   3600,   3600,   3600,   3600,   4200,   4200,   4200,   4200,   4800,  /* 1950-1959 */\r\n                               4800,   4800,   4800,   4800,   4800,   4800,   6600,   6600,   7800,   7800,  /* 1960-1969 */\r\n                               7800,   7800,   9000,  10800,  13200,  14100,  15300,  16500,  17700,  22900,  /* 1970-1979 */\r\n                              25900,  29700,  32400,  35700,  37800,  39600,  42000,  43800,  45000,  48000,  /* 1980-1989 */\r\n                              51300,  53400,  55500,  57600,  60600,  61200,  62700,  65400,  68400,  72600,  /* 1990-1999 */\r\n                              76200,  80400,  84900,  87000,  87900,  90000,  94200,  97500, 102000, 106800,  /* 2000-2009 */\r\n                             106800, 106800]  /* 2010-2011 */\r\n                                }''", span="5186-5195"];
m20_2224 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="CommentTestClass commentTestClass = JsonConvert.DeserializeObject<CommentTestClass>(json)", span="5197-5197"];
m20_2225 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, commentTestClass.Indexed)", span="5199-5199"];
m20_2226 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1939, commentTestClass.StartYear)", span="5200-5200"];
m20_2227 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(63, commentTestClass.Values.Count)", span="5201-5201"];
m20_2228 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="5184-5184"];
m20_34 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", span="182-182"];
m20_35 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs", label="var cc = new ChildDataContractWithHidden\r\n      {\r\n        VirtualMember = ''VirtualMember!'',\r\n        NonVirtualMember = ''NonVirtualMember!'',\r\n        NewMember = ''NewMember!''\r\n      }", span="184-189"];
m20_36 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(cc)", span="191-191"];
m20_37 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''NewMember'''':''''NewMember!'''',''''virtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="192-192"];
m20_38 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", span="182-182"];
m20_3046 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
m20_3186 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", span="7519-7519"];
m20_3187 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''Before'''': ''''Before!'''',\r\n  ''''Coordinates'''': [\r\n    [\r\n      [\r\n        1.0,\r\n        1.0,\r\n        1.0\r\n      ],\r\n      [\r\n        1.0,\r\n        1.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        1.0,\r\n        2.0,\r\n        1.0\r\n      ],\r\n      [\r\n        1.0,\r\n        2.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        2.0,\r\n        1.0,\r\n        1.0\r\n      ],\r\n      [\r\n        2.0,\r\n        1.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        2.0,\r\n        2.0,\r\n        1.0\r\n      ],\r\n      [\r\n        2.0,\r\n        2.0,\r\n        2.0\r\n      ]\r\n    ]\r\n  ],\r\n  ''''After'''': ''''After!''''\r\n}''", span="7521-7574"];
m20_3188 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="JsonSerializerTest.cs", label="Array3DWithConverter aa = JsonConvert.DeserializeObject<Array3DWithConverter>(json)", span="7576-7576"];
m20_3189 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="7578-7578"];
m20_3190 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''After!'', aa.After)", span="7579-7579"];
m20_3191 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, aa.Coordinates.GetLength(0))", span="7580-7580"];
m20_3192 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, aa.Coordinates.GetLength(1))", span="7581-7581"];
m20_3193 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, aa.Coordinates.GetLength(2))", span="7582-7582"];
m20_3194 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, aa.Coordinates[0, 0, 0])", span="7583-7583"];
m20_3195 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, aa.Coordinates[1, 1, 1])", span="7584-7584"];
m20_3196 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", span="7519-7519"];
m20_2286 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", span="5408-5408"];
m20_2287 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="NonDefaultConstructorWithReadOnlyCollectionProperty c1 = new NonDefaultConstructorWithReadOnlyCollectionProperty(''blah'')", span="5410-5410"];
m20_2288 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="c1.Categories.Add(''one'')", span="5411-5411"];
m20_2289 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="c1.Categories.Add(''two'')", span="5412-5412"];
m20_2290 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="5414-5414"];
m20_2293 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Title, c2.Title)", span="5424-5424"];
m20_2294 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="5425-5425"];
m20_2291 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': [\r\n    ''''one'''',\r\n    ''''two''''\r\n  ]\r\n}'', json)", span="5415-5421"];
m20_2292 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="NonDefaultConstructorWithReadOnlyCollectionProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyCollectionProperty>(json)", span="5423-5423"];
m20_2295 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''one'', c2.Categories[0])", span="5426-5426"];
m20_2296 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''two'', c2.Categories[1])", span="5427-5427"];
m20_2297 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", span="5408-5408"];
m20_2952 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", span="183-183"];
m20_1621 [cluster="Unk.Parse", file="JsonSerializerTest.cs", label="Entry Unk.Parse", span=""];
m20_2619 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", span="6123-6123"];
m20_2620 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Unexpected end when setting PreProperty's value. Path 'PreProperty', line 2, position 18.'',\r\n        () =>\r\n        {\r\n          string json = @''{\r\n  ''''PreProperty'''': '';\r\n\r\n          JsonConvert.DeserializeObject<TestObjects.MyClass>(json);\r\n        })", span="6125-6133"];
m20_2621 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", span="6123-6123"];
m20_997 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="2223-2223"];
m20_998 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="string json = @''{''''key1'''':''''value1'''',''''key2'''':''''value2''''}''", span="2225-2225"];
m20_999 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Dictionary<string, string> values = JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="2227-2227"];
m20_1000 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Console.WriteLine(values.Count)", span="2229-2229"];
m20_1001 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Console.WriteLine(values[''key1''])", span="2232-2232"];
m20_1002 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, values.Count)", span="2235-2235"];
m20_1003 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value1'', values[''key1''])", span="2236-2236"];
m20_1004 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value2'', values[''key2''])", span="2237-2237"];
m20_1005 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="2223-2223"];
m20_959 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="2154-2154"];
m20_960 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}''", span="2156-2168"];
m20_961 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Content content = JsonConvert.DeserializeObject<Content>(json)", span="2170-2170"];
m20_962 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Blah, blah, blah'', content.Text)", span="2172-2172"];
m20_963 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, content.Children.Count)", span="2173-2173"];
m20_964 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''First'', content.Children[0].Text)", span="2174-2174"];
m20_965 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Second'', content.Children[1].Text)", span="2175-2175"];
m20_966 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="2154-2154"];
m20_1453 [cluster="System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", span="0-0"];
m20_1441 [cluster="System.Runtime.Serialization.SerializationInfo.GetInt32(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetInt32(string)", span="0-0"];
m20_394 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="948-948"];
m20_395 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new object())", span="950-950"];
m20_396 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''{}'', json)", span="951-951"];
m20_397 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="948-948"];
m20_2103 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="4878-4878"];
m20_2104 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="NullableStructPropertyClass nullableStructPropertyClass = new NullableStructPropertyClass()", span="4880-4880"];
m20_2105 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="nullableStructPropertyClass.Foo1 = new StructISerializable() { Name = ''foo 1'' }", span="4881-4881"];
m20_2106 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="nullableStructPropertyClass.Foo2 = new StructISerializable() { Name = ''foo 2'' }", span="4882-4882"];
m20_2110 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="string s = JsonConvert.SerializeObject(nullableStructPropertyClass)", span="4889-4889"];
m20_2107 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="NullableStructPropertyClass barWithNull = new NullableStructPropertyClass()", span="4884-4884"];
m20_2108 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="barWithNull.Foo1 = new StructISerializable() { Name = ''foo 1'' }", span="4885-4885"];
m20_2109 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="barWithNull.Foo2 = null", span="4886-4886"];
m20_2114 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="s = JsonConvert.SerializeObject(barWithNull)", span="4895-4895"];
m20_2111 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="NullableStructPropertyClass deserialized = deserialize(s)", span="4890-4890"];
m20_2112 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="4891-4891"];
m20_2113 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(deserialized.Foo2.Value.Name, ''foo 2'')", span="4892-4892"];
m20_2115 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="deserialized = deserialize(s)", span="4896-4896"];
m20_2116 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="4897-4897"];
m20_2117 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(deserialized.Foo2, null)", span="4898-4898"];
m20_2118 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="4878-4878"];
m20_2067 [cluster="string.Format(string, object, object, object)", file="JsonSerializerTest.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m20_3064 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()", span="7106-7106"];
m20_3065 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="return GetEnumerator();", span="7108-7108"];
m20_3066 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()", span="7106-7106"];
m20_1768 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.CanConvert(System.Type)", span="4086-4086"];
m20_1769 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="return (objectType == typeof(string));", span="4088-4088"];
m20_1770 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.CanConvert(System.Type)", span="4086-4086"];
m20_267 [cluster="Newtonsoft.Json.Tests.TestObjects.Article.Article(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Article.Article(string)", span="35-35"];
m20_1448 [cluster="System.Runtime.Serialization.SerializationInfo.GetInt16(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetInt16(string)", span="0-0"];
m20_1792 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="4131-4131"];
m20_1793 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''JSON reference $ref property must have a string or null value. Path 'Father.$ref', line 5, position 14.'',\r\n        () =>\r\n        {\r\n          //Additional text found in JSON string after finishing deserializing object.\r\n          //Test 1\r\n          var reference = new Dictionary<string, object>();\r\n          reference.Add(''$ref'', 1);\r\n          reference.Add(''$id'', 1);\r\n\r\n          var child = new Dictionary<string, object>();\r\n          child.Add(''_id'', 2);\r\n          child.Add(''Name'', ''Isabell'');\r\n          child.Add(''Father'', reference);\r\n\r\n          var json = JsonConvert.SerializeObject(child, Formatting.Indented);\r\n          JsonConvert.DeserializeObject<Dictionary<string, object>>(json);\r\n        })", span="4133-4150"];
m20_1794 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="4131-4131"];
m20_1159 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="2605-2605"];
m20_1160 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Error converting value {null} to type 'System.Int32'. Path 'ReadTimeout', line 1, position 17.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'', new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new DefaultContractResolver\r\n            {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE || PORTABLE40)\r\n              IgnoreSerializableAttribute = true\r\n#endif\r\n            }\r\n          });\r\n        })", span="2607-2620"];
m20_1161 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="2605-2605"];
m20_3143 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReadOnlyCollections()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReadOnlyCollections()", span="7336-7336"];
m20_3144 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReadOnlyCollections()", file="JsonSerializerTest.cs", label="PopulateReadOnlyTestClass c1 = new PopulateReadOnlyTestClass()", span="7338-7338"];
m20_3145 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReadOnlyCollections()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="7340-7340"];
m20_3146 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReadOnlyCollections()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''NonReadOnlyList'''': [\r\n    1\r\n  ],\r\n  ''''NonReadOnlyDictionary'''': {\r\n    ''''first'''': 2\r\n  },\r\n  ''''Array'''': [\r\n    3\r\n  ],\r\n  ''''List'''': [\r\n    4\r\n  ],\r\n  ''''Dictionary'''': {\r\n    ''''first'''': 5\r\n  },\r\n  ''''IReadOnlyCollection'''': [\r\n    6\r\n  ],\r\n  ''''ReadOnlyCollection'''': [\r\n    7\r\n  ],\r\n  ''''IReadOnlyList'''': [\r\n    8\r\n  ],\r\n  ''''IReadOnlyDictionary'''': {\r\n    ''''first'''': 9\r\n  },\r\n  ''''ReadOnlyDictionary'''': {\r\n    ''''first'''': 10\r\n  }\r\n}'', json)", span="7342-7373"];
m20_3147 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReadOnlyCollections()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReadOnlyCollections()", span="7336-7336"];
m20_2413 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", span="5734-5734"];
m20_2414 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass\r\n        {\r\n          Guid = new Guid(''1924129C-F7E0-40F3-9607-9939C531395A''),\r\n          NullableGuid = new Guid(''9E9F3ADF-E017-4F72-91E0-617EBE85967D''),\r\n          TimeSpan = TimeSpan.FromDays(1),\r\n          NullableTimeSpan = TimeSpan.FromHours(1),\r\n          Uri = new Uri(''http://testuri.com'')\r\n        }", span="5736-5743"];
m20_2415 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="5744-5744"];
m20_2418 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Guid, c2.Guid)", span="5755-5755"];
m20_2419 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="5756-5756"];
m20_2420 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="5757-5757"];
m20_2421 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="5758-5758"];
m20_2422 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Uri, c2.Uri)", span="5759-5759"];
m20_2416 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Guid'''': ''''1924129c-f7e0-40f3-9607-9939c531395a'''',\r\n  ''''NullableGuid'''': ''''9e9f3adf-e017-4f72-91e0-617ebe85967d'''',\r\n  ''''TimeSpan'''': ''''1.00:00:00'''',\r\n  ''''NullableTimeSpan'''': ''''01:00:00'''',\r\n  ''''Uri'''': ''''http://testuri.com/''''\r\n}'', json)", span="5746-5752"];
m20_2417 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="UriGuidTimeSpanTestClass c2 = JsonConvert.DeserializeObject<UriGuidTimeSpanTestClass>(json)", span="5754-5754"];
m20_2423 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", span="5734-5734"];
m20_2729 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", span="6343-6343"];
m20_2730 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs", label="string jsonIsoText =\r\n        @''{''''Value'''':''''2012-02-25T19:55:50.6095676+13:00''''}''", span="6345-6346"];
m20_2731 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs", label="DateTimeWrapper c = JsonConvert.DeserializeObject<DateTimeWrapper>(jsonIsoText, new IsoDateTimeConverter())", span="6348-6348"];
m20_2732 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateTimeKind.Local, c.Value.Kind)", span="6349-6349"];
m20_2733 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", span="6343-6343"];
m20_399 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="955-955"];
m20_400 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(null)", span="957-957"];
m20_401 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''null'', json)", span="958-958"];
m20_402 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="955-955"];
m20_1230 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="2748-2748"];
m20_1231 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="string googleSearchText = @''{\r\n        ''''responseData'''': {\r\n          ''''results'''': [\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''url'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''visibleUrl'''': ''''en.wikipedia.org'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:TwrPfhd22hYJ:en.wikipedia.org'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton - Wikipedia, the free encyclopedia'''',\r\n              ''''content'''': ''''[1] In 2006, she released her debut album...''''\r\n            },\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''url'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''visibleUrl'''': ''''www.imdb.com'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:1i34KkqnsooJ:www.imdb.com'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b>'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton'''',\r\n              ''''content'''': ''''Self: Zoolander. Socialite <b>Paris Hilton</b>...''''\r\n            }\r\n          ],\r\n          ''''cursor'''': {\r\n            ''''pages'''': [\r\n              {\r\n                ''''start'''': ''''0'''',\r\n                ''''label'''': 1\r\n              },\r\n              {\r\n                ''''start'''': ''''4'''',\r\n                ''''label'''': 2\r\n              },\r\n              {\r\n                ''''start'''': ''''8'''',\r\n                ''''label'''': 3\r\n              },\r\n              {\r\n                ''''start'''': ''''12'''',\r\n                ''''label'''': 4\r\n              }\r\n            ],\r\n            ''''estimatedResultCount'''': ''''59600000'''',\r\n            ''''currentPageIndex'''': 0,\r\n            ''''moreResultsUrl'''': ''''http://www.google.com/search?oe=utf8&ie=utf8...''''\r\n          }\r\n        },\r\n        ''''responseDetails'''': null,\r\n        ''''responseStatus'''': 200\r\n      }''", span="2750-2800"];
m20_1232 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="JObject googleSearch = JObject.Parse(googleSearchText)", span="2802-2802"];
m20_1233 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="IList<JToken> results = googleSearch[''responseData''][''results''].Children().ToList()", span="2805-2805"];
m20_1234 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="IList<SearchResult> searchResults = new List<SearchResult>()", span="2808-2808"];
m20_1235 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label=results, span="2809-2809"];
m20_1237 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="searchResults.Add(searchResult)", span="2812-2812"];
m20_1238 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, searchResults.Count)", span="2823-2823"];
m20_1239 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'', searchResults[0].Title)", span="2824-2824"];
m20_1240 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''<b>Paris Hilton</b>'', searchResults[1].Title)", span="2825-2825"];
m20_1236 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="SearchResult searchResult = JsonConvert.DeserializeObject<SearchResult>(result.ToString())", span="2811-2811"];
m20_1241 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="2748-2748"];
m20_219 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="583-583"];
m20_220 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="string json = @''{\r\n    results:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://www.google.com/'''',\r\n                url : ''''http://www.google.com/'''',\r\n                visibleUrl : ''''www.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:zhool8dxBV4J:www.google.com'''',\r\n                title : ''''Google'''',\r\n                titleNoFormatting : ''''Google'''',\r\n                content : ''''Enables users to search the Web, Usenet, and \r\nimages. Features include PageRank,   caching and translation of \r\nresults, and an option to find similar pages.''''\r\n            },\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://news.google.com/'''',\r\n                url : ''''http://news.google.com/'''',\r\n                visibleUrl : ''''news.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:Va_XShOz_twJ:news.google.com'''',\r\n                title : ''''Google News'''',\r\n                titleNoFormatting : ''''Google News'''',\r\n                content : ''''Aggregated headlines and a search engine of many of the world's news sources.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://groups.google.com/'''',\r\n                url : ''''http://groups.google.com/'''',\r\n                visibleUrl : ''''groups.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:x2uPD3hfkn0J:groups.google.com'''',\r\n                title : ''''Google Groups'''',\r\n                titleNoFormatting : ''''Google Groups'''',\r\n                content : ''''Enables users to search and browse the Usenet \r\narchives which consist of over 700   million messages, and post new \r\ncomments.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://maps.google.com/'''',\r\n                url : ''''http://maps.google.com/'''',\r\n                visibleUrl : ''''maps.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:dkf5u2twBXIJ:maps.google.com'''',\r\n                title : ''''Google Maps'''',\r\n                titleNoFormatting : ''''Google Maps'''',\r\n                content : ''''Provides directions, interactive maps, and \r\nsatellite/aerial imagery of the United   States. Can also search by \r\nkeyword such as type of business.''''\r\n            }\r\n        ],\r\n        \r\n    adResults:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch.ad'''',\r\n                title : ''''Gartner Symposium/ITxpo'''',\r\n                content1 : ''''Meet brilliant Gartner IT analysts'''',\r\n                content2 : ''''20-23 May 2007- Barcelona, Spain'''',\r\n                url : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                impressionUrl : \r\n''''http://www.google.com/uds/css/ad-indicator-on.gif?ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB'''', \r\n\r\n                unescapedUrl : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                visibleUrl : ''''www.gartner.com''''\r\n            }\r\n        ]\r\n}\r\n''", span="585-662"];
m20_221 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="object o = JsonConvert.DeserializeObject(json)", span="663-663"];
m20_222 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="string s = string.Empty", span="664-664"];
m20_223 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="s += s", span="665-665"];
m20_224 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="583-583"];
m20_1369 [cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0"];
m20_1620 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", span="3769-3769"];
m20_601 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="34-34"];
m20_2566 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="6008-6008"];
m20_2567 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="Bb b = new Bb()", span="6010-6010"];
m20_2568 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="b.no = true", span="6011-6011"];
m20_2569 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="Aa a = b", span="6012-6012"];
m20_2571 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(b)", span="6015-6015"];
m20_2570 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="a.no = int.MaxValue", span="6013-6013"];
m20_2572 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''no'''':true}'', json)", span="6017-6017"];
m20_2573 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="Bb b2 = JsonConvert.DeserializeObject<Bb>(json)", span="6019-6019"];
m20_2574 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, b2.no)", span="6021-6021"];
m20_2575 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="6008-6008"];
m20_3606 [cluster="Newtonsoft.Json.Tests.Serialization.MetroPropertyNameResolver.ResolvePropertyName(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetroPropertyNameResolver.ResolvePropertyName(string)", span="8865-8865"];
m20_3607 [cluster="Newtonsoft.Json.Tests.Serialization.MetroPropertyNameResolver.ResolvePropertyName(string)", file="JsonSerializerTest.cs", label="return '':::'' + propertyName.ToUpper(CultureInfo.InvariantCulture) + '':::'';", span="8868-8868"];
m20_3608 [cluster="Newtonsoft.Json.Tests.Serialization.MetroPropertyNameResolver.ResolvePropertyName(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetroPropertyNameResolver.ResolvePropertyName(string)", span="8865-8865"];
m20_2817 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="379-379"];
m20_3501 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="8381-8381"];
m20_3502 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonSerializerTest.cs", label="return _dictionary.TryGetValue(key, out value);", span="8383-8383"];
m20_3503 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="8381-8381"];
m20_3558 [cluster="Unk.ToList", file="JsonSerializerTest.cs", label="Entry Unk.ToList", span=""];
m20_374 [cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", span="742-742"];
m20_3367 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", span="8066-8066"];
m20_3368 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter()", span="8068-8068"];
m20_3369 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="8069-8069"];
m20_3373 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="string json = sw.ToString()", span="8080-8080"];
m20_3370 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n      {\r\n        StringEscapeHandling = StringEscapeHandling.EscapeHtml,\r\n        Formatting = Formatting.Indented\r\n      })", span="8071-8075"];
m20_3371 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="serializer.Serialize(jsonWriter, new { html = ''<html></html>'' })", span="8076-8076"];
m20_3372 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(StringEscapeHandling.Default, jsonWriter.StringEscapeHandling)", span="8078-8078"];
m20_3374 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''html'''': ''''\u003chtml\u003e\u003c/html\u003e''''\r\n}'', json)", span="8082-8084"];
m20_3375 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", span="8066-8066"];
m20_1016 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", span="2293-2293"];
m20_1017 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="JsonSerializerTest.cs", label="string json = @''[\r\n        {\r\n          ''''Name'''': ''''Product 1'''',\r\n          ''''ExpiryDate'''': ''''\/Date(978048000000)\/'''',\r\n          ''''Price'''': 99.95,\r\n          ''''Sizes'''': null\r\n        },\r\n        {\r\n          ''''Name'''': ''''Product 2'''',\r\n          ''''ExpiryDate'''': ''''\/Date(1248998400000)\/'''',\r\n          ''''Price'''': 12.50,\r\n          ''''Sizes'''': null\r\n        }\r\n      ]''", span="2295-2308"];
m20_1018 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="JsonSerializerTest.cs", label="List<Product> products = JsonConvert.DeserializeObject<List<Product>>(json)", span="2310-2310"];
m20_1019 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="JsonSerializerTest.cs", label="Console.WriteLine(products.Count)", span="2312-2312"];
m20_1020 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="JsonSerializerTest.cs", label="Product p1 = products[0]", span="2315-2315"];
m20_1022 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, products.Count)", span="2320-2320"];
m20_1023 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Product 1'', products[0].Name)", span="2321-2321"];
m20_1021 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="JsonSerializerTest.cs", label="Console.WriteLine(p1.Name)", span="2317-2317"];
m20_1024 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", span="2293-2293"];
m20_270 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", span="737-737"];
m20_271 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonSerializerTest.cs", label="ReadOnlyCollection<int> r1 = new ReadOnlyCollection<int>(new int[] { 0, 1, 2, 3, 4 })", span="739-739"];
m20_272 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(r1)", span="741-741"];
m20_275 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(r1, r2)", span="747-747"];
m20_273 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[0,1,2,3,4]'', jsonText)", span="743-743"];
m20_274 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonSerializerTest.cs", label="ReadOnlyCollection<int> r2 = JsonConvert.DeserializeObject<ReadOnlyCollection<int>>(jsonText)", span="745-745"];
m20_276 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", span="737-737"];
m20_690 [cluster="Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", span="29-29"];
m20_2002 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", span="4625-4625"];
m20_2003 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n      {\r\n        Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n      }, Formatting.None, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="4627-4630"];
m20_2004 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}'', serializeObject)", span="4632-4632"];
m20_2005 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="var deserializeObject = JsonConvert.DeserializeObject<TimeZoneOffsetObject>(serializeObject)", span="4633-4633"];
m20_2006 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="4634-4634"];
m20_2007 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="4635-4635"];
m20_2008 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", span="4625-4625"];
m20_550 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="540-540"];
m20_2477 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", span="5858-5858"];
m20_2478 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="JsonSerializerTest.cs", label="string json = @''[ { ''''Value'''': [ ''''1'''', ''''2'''' ], ''''Key'''': ''''aaa'''', ''''BadContent'''': [ 0 ] }, null, { ''''Value'''': [ ''''3'''', ''''4'''' ], ''''Key'''': ''''bbb'''' } ]''", span="5860-5860"];
m20_2479 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="JsonSerializerTest.cs", label="IList<KeyValuePair<string, IList<string>>?> values = JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>?>>(json)", span="5862-5862"];
m20_2480 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, values.Count)", span="5864-5864"];
m20_2481 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''aaa'', values[0].Value.Key)", span="5865-5865"];
m20_2482 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, values[0].Value.Value.Count)", span="5866-5866"];
m20_2483 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''1'', values[0].Value.Value[0])", span="5867-5867"];
m20_2484 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''2'', values[0].Value.Value[1])", span="5868-5868"];
m20_2485 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, values[1])", span="5869-5869"];
m20_2486 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''bbb'', values[2].Value.Key)", span="5870-5870"];
m20_2487 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, values[2].Value.Value.Count)", span="5871-5871"];
m20_2488 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''3'', values[2].Value.Value[0])", span="5872-5872"];
m20_2489 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''4'', values[2].Value.Value[1])", span="5873-5873"];
m20_2490 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", span="5858-5858"];
m20_2391 [cluster="System.Exception.ToString()", file="JsonSerializerTest.cs", label="Entry System.Exception.ToString()", span="0-0"];
m20_2890 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", span="6672-6672"];
m20_2891 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="IDictionary<DateTimeOffset?, int> dic1 = new Dictionary<DateTimeOffset?, int>\r\n        {\r\n          {new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), 1},\r\n          {new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero), 2}\r\n        }", span="6674-6678"];
m20_2892 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n        })", span="6680-6683"];
m20_2893 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''\/Date(976623132000+0000)\/'''': 1,\r\n  ''''\/Date(1386850332000+0000)\/'''': 2\r\n}'', json)", span="6685-6688"];
m20_2894 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="IDictionary<DateTimeOffset?, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTimeOffset?, int>>(json)", span="6690-6690"];
m20_2895 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2.Count)", span="6692-6692"];
m20_2896 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, dic2[new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="6693-6693"];
m20_2897 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2[new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="6694-6694"];
m20_2898 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", span="6672-6672"];
m20_2989 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", span="6959-6959"];
m20_2990 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonException>(\r\n       ''Additional text found in JSON string after finishing deserializing object.'',\r\n       () =>\r\n         {\r\n           string json = ''[{},1]'';\r\n\r\n           JsonSerializer serializer = new JsonSerializer();\r\n           serializer.CheckAdditionalContent = true;\r\n\r\n           var reader = new JsonTextReader(new StringReader(json));\r\n           reader.Read();\r\n           reader.Read();\r\n\r\n           serializer.Deserialize(reader, typeof (MyType));\r\n         })", span="6961-6975"];
m20_2991 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", span="6959-6959"];
m20_671 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="1445-1445"];
m20_672 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="string json = @''{''''Height'''':1}''", span="1447-1447"];
m20_673 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="DoubleClass c = JsonConvert.DeserializeObject<DoubleClass>(json)", span="1449-1449"];
m20_674 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Height)", span="1450-1450"];
m20_675 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="1445-1445"];
m20_1388 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="3250-3250"];
m20_1389 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="return ((IDictionary<string, T>)_innerDictionary).Remove(item);", span="3252-3252"];
m20_1390 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="3250-3250"];
m20_39 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractWithHidden.ChildDataContractWithHidden()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractWithHidden.ChildDataContractWithHidden()", span="173-173"];
m20_2533 [cluster="Unk.AreEquivalent", file="JsonSerializerTest.cs", label="Entry Unk.AreEquivalent", span=""];
m20_3511 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyDictionary()", span="8413-8413"];
m20_3512 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyDictionary()", file="JsonSerializerTest.cs", label="IDictionary<string, int> d = new Dictionary<string, int>\r\n                                     {\r\n                                       {''one'', 1},\r\n                                       {''two'', 2}\r\n                                     }", span="8415-8419"];
m20_3513 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyDictionary()", file="JsonSerializerTest.cs", label="CustomReadOnlyDictionary<string, int> dic = new CustomReadOnlyDictionary<string, int>(d)", span="8421-8421"];
m20_3514 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyDictionary()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dic, Formatting.Indented)", span="8423-8423"];
m20_3515 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''one'''': 1,\r\n  ''''two'''': 2\r\n}'', json)", span="8424-8427"];
m20_3516 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyDictionary()", span="8413-8413"];
m20_3539 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="8488-8488"];
m20_113 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="384-384"];
m20_116 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="387-387"];
m20_114 [cluster="lambda expression", file="JsonSerializerTest.cs", label="p.Name", span="384-384"];
m20_115 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="384-384"];
m20_117 [cluster="lambda expression", file="JsonSerializerTest.cs", label="p.Name", span="387-387"];
m20_118 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="387-387"];
m20_252 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="712-715"];
m20_253 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(new BadJsonPropertyClass())", span="714-714"];
m20_254 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="712-715"];
m20_307 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<List<string>>(json)", span="796-796"];
m20_306 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="794-797"];
m20_308 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="794-797"];
m20_580 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<MemberConverterClass>(json, new JsonSerializerSettings\r\n         {\r\n           DateParseHandling = DateParseHandling.None\r\n         })", span="1279-1282"];
m20_579 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1277-1283"];
m20_581 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1277-1283"];
m20_624 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1360-1364"];
m20_625 [cluster="lambda expression", file="JsonSerializerTest.cs", label="IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass()", span="1362-1362"];
m20_626 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(c)", span="1363-1363"];
m20_627 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1360-1364"];
m20_710 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1523-1533"];
m20_711 [cluster="lambda expression", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''FirstName'''': null,\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="1525-1530"];
m20_712 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="1532-1532"];
m20_713 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1523-1533"];
m20_717 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1541-1553"];
m20_718 [cluster="lambda expression", file="JsonSerializerTest.cs", label="RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n            {\r\n              FirstName = null,\r\n              BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n              LastName = null,\r\n              MiddleName = null\r\n            }", span="1543-1549"];
m20_719 [cluster="lambda expression", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(requiredMembersClass)", span="1551-1551"];
m20_720 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Console.WriteLine(json)", span="1552-1552"];
m20_721 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1541-1553"];
m20_725 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1561-1568"];
m20_726 [cluster="lambda expression", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''FirstName'''': ''''Bob''''\r\n}''", span="1563-1565"];
m20_727 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="1567-1567"];
m20_728 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1561-1568"];
m20_763 [cluster="lambda expression", file="JsonSerializerTest.cs", label="InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass))", span="1657-1657"];
m20_762 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1655-1658"];
m20_764 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1655-1658"];
m20_849 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1849-1855"];
m20_850 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="1851-1851"];
m20_851 [cluster="lambda expression", file="JsonSerializerTest.cs", label="o.ReferenceLoopHandlingErrorProperty = o", span="1852-1852"];
m20_852 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore })", span="1854-1854"];
m20_853 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1849-1855"];
m20_1035 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<TestObjects.Event>(json)", span="2344-2344"];
m20_1034 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2342-2345"];
m20_1036 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2342-2345"];
m20_1062 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Person>(json)", span="2390-2390"];
m20_1061 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2388-2391"];
m20_1063 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2388-2391"];
m20_1069 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="2405-2405"];
m20_1068 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2403-2406"];
m20_1070 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2403-2406"];
m20_1076 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Exception>(json)", span="2421-2421"];
m20_1075 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2419-2422"];
m20_1077 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2419-2422"];
m20_1083 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<double>(json)", span="2437-2437"];
m20_1082 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2435-2438"];
m20_1084 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2435-2438"];
m20_1090 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<DynamicDictionary>(json)", span="2453-2453"];
m20_1089 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2451-2454"];
m20_1091 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2451-2454"];
m20_1097 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<JObject>(json)", span="2467-2467"];
m20_1096 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2465-2468"];
m20_1098 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2465-2468"];
m20_1104 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Person>(json)", span="2480-2480"];
m20_1103 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2478-2481"];
m20_1105 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2478-2481"];
m20_1111 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<List<Person>>(json)", span="2493-2493"];
m20_1110 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2491-2494"];
m20_1112 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2491-2494"];
m20_1118 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<List<Person>>(json)", span="2508-2508"];
m20_1117 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2506-2509"];
m20_1119 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2506-2509"];
m20_1125 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.PopulateObject(json, new Person())", span="2521-2521"];
m20_1124 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2519-2522"];
m20_1126 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2519-2522"];
m20_1133 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.PopulateObject(json, new List<Person>())", span="2534-2534"];
m20_1132 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2532-2535"];
m20_1134 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2532-2535"];
m20_1143 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2552-2563"];
m20_1144 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(new MemoryStream(), new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new DefaultContractResolver\r\n            {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE || PORTABLE40)\r\n              IgnoreSerializableAttribute = true\r\n#endif\r\n            }\r\n          })", span="2554-2562"];
m20_1145 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2552-2563"];
m20_1150 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2571-2582"];
m20_1151 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new DefaultContractResolver\r\n            {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE || PORTABLE40)\r\n              IgnoreSerializableAttribute = true\r\n#endif\r\n            }\r\n          })", span="2573-2581"];
m20_1152 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2571-2582"];
m20_1156 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2590-2601"];
m20_1157 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'', new JsonSerializerSettings\r\n            {\r\n              ContractResolver = new DefaultContractResolver\r\n              {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE || PORTABLE40)\r\n                IgnoreSerializableAttribute = true\r\n#endif\r\n                }\r\n            })", span="2592-2600"];
m20_1158 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2590-2601"];
m20_1162 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2609-2620"];
m20_1163 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'', new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new DefaultContractResolver\r\n            {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE || PORTABLE40)\r\n              IgnoreSerializableAttribute = true\r\n#endif\r\n            }\r\n          })", span="2611-2619"];
m20_1164 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2609-2620"];
m20_1226 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2735-2744"];
m20_1227 [cluster="lambda expression", file="JsonSerializerTest.cs", label="string json =\r\n          @''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}''", span="2737-2741"];
m20_1228 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Dictionary<Person, int>>(json)", span="2743-2743"];
m20_1229 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2735-2744"];
m20_1276 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2924-2924"];
m20_1277 [cluster="lambda expression", file="JsonSerializerTest.cs", label="x.Id == id", span="2924-2924"];
m20_1278 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2924-2924"];
m20_1313 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json, new JsonSerializerSettings { PreserveReferencesHandling = PreserveReferencesHandling.All })", span="3018-3018"];
m20_1312 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3018-3018"];
m20_1314 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3018-3018"];
m20_1790 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="4126-4126"];
m20_1789 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="4124-4127"];
m20_1791 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="4124-4127"];
m20_1795 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="4135-4150"];
m20_1796 [cluster="lambda expression", file="JsonSerializerTest.cs", label="var reference = new Dictionary<string, object>()", span="4139-4139"];
m20_1797 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reference.Add(''$ref'', 1)", span="4140-4140"];
m20_1798 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reference.Add(''$id'', 1)", span="4141-4141"];
m20_1802 [cluster="lambda expression", file="JsonSerializerTest.cs", label="child.Add(''Father'', reference)", span="4146-4146"];
m20_1799 [cluster="lambda expression", file="JsonSerializerTest.cs", label="var child = new Dictionary<string, object>()", span="4143-4143"];
m20_1800 [cluster="lambda expression", file="JsonSerializerTest.cs", label="child.Add(''_id'', 2)", span="4144-4144"];
m20_1801 [cluster="lambda expression", file="JsonSerializerTest.cs", label="child.Add(''Name'', ''Isabell'')", span="4145-4145"];
m20_1803 [cluster="lambda expression", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="4148-4148"];
m20_1804 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="4149-4149"];
m20_1805 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="4135-4150"];
m20_1979 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<StringDictionaryTestClass>(json)", span="4564-4564"];
m20_1978 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="4562-4565"];
m20_1980 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="4562-4565"];
m20_2209 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="5132-5135"];
m20_2210 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject(''null'', typeof(DateTime))", span="5134-5134"];
m20_2211 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="5132-5135"];
m20_2496 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>>>(json)", span="5885-5885"];
m20_2495 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="5883-5886"];
m20_2497 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="5883-5886"];
m20_2582 [cluster="lambda expression", file="JsonSerializerTest.cs", label="List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json)", span="6038-6038"];
m20_2581 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="6036-6039"];
m20_2583 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="6036-6039"];
m20_2596 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<ConvertableIntTestClass>(json)", span="6080-6080"];
m20_2595 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="6080-6080"];
m20_2597 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="6080-6080"];
m20_2615 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="6111-6119"];
m20_2616 [cluster="lambda expression", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''PreProperty'''': true,\r\n  ''''PostProperty'''': ''''-1''''\r\n}''", span="6113-6116"];
m20_2617 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<TestObjects.MyClass>(json)", span="6118-6118"];
m20_2618 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="6111-6119"];
m20_2622 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="6127-6133"];
m20_2623 [cluster="lambda expression", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''PreProperty'''': ''", span="6129-6130"];
m20_2624 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<TestObjects.MyClass>(json)", span="6132-6132"];
m20_2625 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="6127-6133"];
m20_2698 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="6282-6285"];
m20_2699 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<double>('''')", span="6284-6284"];
m20_2700 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="6282-6285"];
m20_2704 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="6293-6296"];
m20_2705 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<StringComparison>('''')", span="6295-6295"];
m20_2706 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="6293-6296"];
m20_2710 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="6304-6307"];
m20_2711 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<int>('''')", span="6306-6306"];
m20_2712 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="6304-6307"];
m20_2720 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="6323-6326"];
m20_2721 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<double>(null)", span="6325-6325"];
m20_2722 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="6323-6326"];
m20_2726 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="6335-6338"];
m20_2727 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject(null)", span="6337-6337"];
m20_2728 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="6335-6338"];
m20_2834 [cluster="lambda expression", file="JsonSerializerTest.cs", label="errors.Add(e.ErrorContext.Error.Message)", span="6539-6539"];
m20_2835 [cluster="lambda expression", file="JsonSerializerTest.cs", label="e.ErrorContext.Handled = true", span="6540-6540"];
m20_2833 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="6537-6541"];
m20_2836 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="6537-6541"];
m20_2849 [cluster="lambda expression", file="JsonSerializerTest.cs", label="errors.Add(e.ErrorContext.Error.Message)", span="6564-6564"];
m20_2850 [cluster="lambda expression", file="JsonSerializerTest.cs", label="e.ErrorContext.Handled = true", span="6565-6565"];
m20_2848 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="6562-6566"];
m20_2851 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="6562-6566"];
m20_2864 [cluster="lambda expression", file="JsonSerializerTest.cs", label="errors.Add(e.ErrorContext.Error.Message)", span="6587-6587"];
m20_2865 [cluster="lambda expression", file="JsonSerializerTest.cs", label="e.ErrorContext.Handled = true", span="6588-6588"];
m20_2863 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="6585-6589"];
m20_2866 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="6585-6589"];
m20_2980 [cluster="lambda expression", file="JsonSerializerTest.cs", label="s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="6916-6916"];
m20_2979 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="6914-6917"];
m20_2981 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="6914-6917"];
m20_2992 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="6963-6975"];
m20_2993 [cluster="lambda expression", file="JsonSerializerTest.cs", label="string json = ''[{},1]''", span="6965-6965"];
m20_2994 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="6967-6967"];
m20_2996 [cluster="lambda expression", file="JsonSerializerTest.cs", label="var reader = new JsonTextReader(new StringReader(json))", span="6970-6970"];
m20_2995 [cluster="lambda expression", file="JsonSerializerTest.cs", label="serializer.CheckAdditionalContent = true", span="6968-6968"];
m20_2999 [cluster="lambda expression", file="JsonSerializerTest.cs", label="serializer.Deserialize(reader, typeof (MyType))", span="6974-6974"];
m20_2997 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="6971-6971"];
m20_2998 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="6972-6972"];
m20_3000 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="6963-6975"];
m20_3072 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<EnumerableClassFailure<string>>(json)", span="7123-7123"];
m20_3071 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7123-7123"];
m20_3073 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7123-7123"];
m20_3117 [cluster="lambda expression", file="JsonSerializerTest.cs", label="obj = JsonConvert.DeserializeObject<MyTuple<int>>(json)", span="7235-7235"];
m20_3116 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7233-7236"];
m20_3118 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7233-7236"];
m20_3215 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Array2D>(json)", span="7613-7613"];
m20_3214 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7613-7613"];
m20_3216 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7613-7613"];
m20_3222 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Array2D>(json)", span="7623-7623"];
m20_3221 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7623-7623"];
m20_3223 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7623-7623"];
m20_3242 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Array3D>(json)", span="7653-7653"];
m20_3241 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7653-7653"];
m20_3243 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7653-7653"];
m20_3249 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Array3D>(json)", span="7663-7663"];
m20_3248 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7663-7663"];
m20_3250 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7663-7663"];
m20_3256 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Array3D>(json)", span="7673-7673"];
m20_3255 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7673-7673"];
m20_3257 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7673-7673"];
m20_3282 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Array3D>(json)", span="7714-7714"];
m20_3281 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7714-7714"];
m20_3283 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7714-7714"];
m20_3289 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Array3D>(json)", span="7724-7724"];
m20_3288 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7724-7724"];
m20_3290 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7724-7724"];
m20_3383 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IList<long>>(json)", span="8099-8099"];
m20_3382 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="8099-8099"];
m20_3384 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="8099-8099"];
m20_3540 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<PrivateDefaultCtorList<int>>(''[1,2]'')", span="8488-8488"];
m20_3541 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="8488-8488"];
m20_2933 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", span="6786-6786"];
m20_2941 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs", label="var jsonReader = new Newtonsoft.Json.JsonTextReader(new StringReader(json))", span="6789-6789"];
m20_2942 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs", label="var serializer = new Newtonsoft.Json.JsonSerializer()", span="6790-6790"];
m20_2944 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs", label="return serializer.Deserialize(jsonReader, typeof(T)) as T;", span="6796-6796"];
m20_2943 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs", label="serializer.ContractResolver = new DefaultContractResolver(false)\r\n      {\r\n        IgnoreSerializableAttribute = false\r\n      }", span="6791-6794"];
m20_2945 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", span="6786-6786"];
m20_2576 [cluster="Newtonsoft.Json.Tests.Serialization.Bb.Bb()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Bb.Bb()", span="8761-8761"];
m20_3505 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", span="8401-8401"];
m20_3506 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", file="JsonSerializerTest.cs", label="return _dictionary.GetEnumerator();", span="8403-8403"];
m20_3507 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", span="8401-8401"];
m20_3618 [cluster="Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.CanConvert(System.Type)", span="8936-8936"];
m20_3619 [cluster="Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="return objectType == typeof (int);", span="8938-8938"];
m20_3620 [cluster="Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.CanConvert(System.Type)", span="8936-8936"];
m20_128 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", span="695-695"];
m20_1729 [cluster="Newtonsoft.Json.Tests.TestObjects.WagePerson.WagePerson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.WagePerson.WagePerson()", span="27-27"];
m20_1916 [cluster="System.Console.WriteLine(string, object)", file="JsonSerializerTest.cs", label="Entry System.Console.WriteLine(string, object)", span="0-0"];
m20_3088 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", span="7179-7179"];
m20_3089 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs", label="string json = @''[\r\n        9000000000000000000000000000000000000000000000000\r\n      ]''", span="7181-7183"];
m20_3090 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs", label="var l = JsonConvert.DeserializeObject<IReadOnlyList<BigInteger>>(json)", span="7185-7185"];
m20_3091 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs", label="BigInteger nineQuindecillion = l[0]", span="7187-7187"];
m20_3092 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs", label="Assert.AreEqual(BigInteger.Parse(''9000000000000000000000000000000000000000000000000''), nineQuindecillion)", span="7190-7190"];
m20_3093 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", span="7179-7179"];
m20_3058 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.EnumerableClassFailure()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.EnumerableClassFailure()", span="7096-7096"];
m20_3059 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.EnumerableClassFailure()", file="JsonSerializerTest.cs", label="_values = new List<T>()", span="7098-7098"];
m20_3060 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.EnumerableClassFailure()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.EnumerableClassFailure()", span="7096-7096"];
m20_633 [cluster="Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", span="27-27"];
m20_2532 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="621-621"];
m20_737 [cluster="Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", span="27-27"];
m20_1746 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.CanConvert(System.Type)", span="4049-4049"];
m20_1747 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="return (objectType == typeof(List<string>));", span="4051-4051"];
m20_1748 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.CanConvert(System.Type)", span="4049-4049"];
m20_3602 [cluster="string.Trim(params char[])", file="JsonSerializerTest.cs", label="Entry string.Trim(params char[])", span="0-0"];
m20_897 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="1994-1994"];
m20_898 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11\r\n  }\r\n}''", span="1996-2001"];
m20_899 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(\r\n        json,\r\n        new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Replace })", span="2003-2005"];
m20_900 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', c.Name)", span="2007-2007"];
m20_901 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Dictionary.Count)", span="2008-2008"];
m20_902 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="2009-2009"];
m20_903 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="1994-1994"];
m20_1643 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", span="3849-3849"];
m20_1838 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", span="4216-4216"];
m20_1839 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs", label="ShouldSerializeTestClass c = new ShouldSerializeTestClass()", span="4218-4218"];
m20_1840 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs", label="c.Name = ''James''", span="4219-4219"];
m20_1841 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs", label="c.Age = 27", span="4220-4220"];
m20_1842 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="4222-4222"];
m20_1844 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs", label="c._shouldSerializeName = true", span="4228-4228"];
m20_1845 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="4229-4229"];
m20_1843 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Age'''': 27\r\n}'', json)", span="4224-4226"];
m20_1846 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''James'''',\r\n  ''''Age'''': 27\r\n}'', json)", span="4231-4234"];
m20_1847 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs", label="ShouldSerializeTestClass deserialized = JsonConvert.DeserializeObject<ShouldSerializeTestClass>(json)", span="4236-4236"];
m20_1848 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''James'', deserialized.Name)", span="4237-4237"];
m20_1849 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(27, deserialized.Age)", span="4238-4238"];
m20_1850 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", span="4216-4216"];
m20_3623 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeName()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeName()", span="8954-8954"];
m20_3624 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeName()", file="JsonSerializerTest.cs", label="return _shouldSerializeName;", span="8956-8956"];
m20_3625 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeName()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeName()", span="8954-8954"];
m20_2530 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="769-769"];
m20_2783 [cluster="Newtonsoft.Json.Tests.Serialization.MetroPropertyNameResolver.MetroPropertyNameResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetroPropertyNameResolver.MetroPropertyNameResolver()", span="8863-8863"];
m20_1665 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="3892-3892"];
m20_1666 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="PosDouble p = (PosDouble)value", span="3894-3894"];
m20_1668 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="writer.WriteRawValue(String.Format(CultureInfo.InvariantCulture, ''new PosD({0},{1})'', p.X, p.Y))", span="3897-3897"];
m20_1669 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="writer.WriteNull()", span="3899-3899"];
m20_1667 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="p != null", span="3896-3896"];
m20_1670 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="3892-3892"];
m20_3126 [cluster="System.Tuple.Create<T1>(T1)", file="JsonSerializerTest.cs", label="Entry System.Tuple.Create<T1>(T1)", span="0-0"];
m20_2786 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="6485-6485"];
m20_2787 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Color color = (Color)value", span="6487-6487"];
m20_2789 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="writer.WriteValue('':::'' + fixedColor.ToKnownColor().ToString().ToUpper() + '':::'')", span="6490-6490"];
m20_2788 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Color fixedColor = (color == Color.White || color == Color.Black) ? color : Color.Gray", span="6488-6488"];
m20_2790 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="6485-6485"];
m20_1482 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", span="0-0"];
m20_2221 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", span="5156-5156"];
m20_109 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m20_278 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="752-752"];
m20_279 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="string json = @''[''''PRE\u003cPOST'''']''", span="754-754"];
m20_280 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="756-756"];
m20_281 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="757-757"];
m20_282 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="759-759"];
m20_284 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="762-762"];
m20_283 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, jsonNetResult.Count)", span="761-761"];
m20_285 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="752-752"];
m20_1165 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="2624-2624"];
m20_1166 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="List<String> strings = new List<String>()", span="2626-2626"];
m20_1167 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="strings.Add(''str_1'')", span="2628-2628"];
m20_1168 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="strings.Add(''str_2'')", span="2629-2629"];
m20_1169 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="strings.Add(''str_3'')", span="2630-2630"];
m20_1170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(strings)", span="2632-2632"];
m20_1171 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[''''str_1'''',''''str_2'''',''''str_3'''']'', json)", span="2633-2633"];
m20_1172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="2624-2624"];
m20_3176 [cluster="Newtonsoft.Json.Tests.Serialization.Array3D.Array3D()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Array3D.Array3D()", span="8909-8909"];
m20_2598 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", span="6085-6085"];
m20_2599 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Widget widget = new Widget { Id = new WidgetId { Value = ''id'' } }", span="6087-6087"];
m20_2600 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(widget)", span="6089-6089"];
m20_2601 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Id'''':{''''Value'''':''''id''''}}'', json)", span="6091-6091"];
m20_2602 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", span="6085-6085"];
m20_3474 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollection()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollection()", span="8327-8327"];
m20_3475 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollection()", file="JsonSerializerTest.cs", label="ReadOnlyCollection<int> list = JsonConvert.DeserializeObject<ReadOnlyCollection<int>>(''[1,2,3]'')", span="8329-8329"];
m20_3476 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollection()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, list.Count)", span="8331-8331"];
m20_3477 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollection()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, list[0])", span="8333-8333"];
m20_3478 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollection()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, list[1])", span="8334-8334"];
m20_3479 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollection()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, list[2])", span="8335-8335"];
m20_3480 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollection()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollection()", span="8327-8327"];
m20_3617 [cluster="System.Convert.ToInt32(object)", file="JsonSerializerTest.cs", label="Entry System.Convert.ToInt32(object)", span="0-0"];
m20_2136 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest(decimal)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest(decimal)", span="4949-4949"];
m20_2137 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest(decimal)", file="JsonSerializerTest.cs", label="Value = val", span="4951-4951"];
m20_2138 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest(decimal)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest(decimal)", span="4949-4949"];
m20_1480 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", span="0-0"];
m20_1343 [cluster="System.Exception.Exception(string)", file="JsonSerializerTest.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m20_184 [cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", span="164-164"];
m20_2512 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", span="5912-5912"];
m20_2513 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="TestObject test = new TestObject(''Test'', new byte[] { 72, 63, 62, 71, 92, 55 })", span="5914-5914"];
m20_2514 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="5916-5916"];
m20_2519 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="serializer.Serialize(bsonWriter, test)", span="5923-5923"];
m20_2515 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="serializer.TypeNameHandling = TypeNameHandling.All", span="5917-5917"];
m20_2524 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="TestObject newObject = (TestObject)serializer.Deserialize(bsonReader)", span="5933-5933"];
m20_2516 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="byte[] objectBytes", span="5919-5919"];
m20_2517 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="MemoryStream bsonStream = new MemoryStream()", span="5920-5920"];
m20_2518 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="JsonWriter bsonWriter = new JsonTextWriter(new StreamWriter(bsonStream))", span="5921-5921"];
m20_2521 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="objectBytes = bsonStream.ToArray()", span="5926-5926"];
m20_2520 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="bsonWriter.Flush()", span="5924-5924"];
m20_2522 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="MemoryStream bsonStream = new MemoryStream(objectBytes)", span="5929-5929"];
m20_2523 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="JsonReader bsonReader = new JsonTextReader(new StreamReader(bsonStream))", span="5930-5930"];
m20_2525 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Test'', newObject.Name)", span="5935-5935"];
m20_2526 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEquivalent(new byte[] { 72, 63, 62, 71, 92, 55 }, newObject.Data)", span="5936-5936"];
m20_2527 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", span="5912-5912"];
m20_73 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewProperties.SubWithContractNewProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewProperties.SubWithContractNewProperties()", span="243-243"];
m20_3167 [cluster="Newtonsoft.Json.Tests.Serialization.Array2D.Array2D()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Array2D.Array2D()", span="8902-8902"];
m20_1582 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="475-475"];
m20_3577 [cluster="int.Parse(string)", file="JsonSerializerTest.cs", label="Entry int.Parse(string)", span="0-0"];
m20_2801 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="6511-6511"];
m20_2802 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="6513-6513"];
m20_2803 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="BsonWriter writer = new BsonWriter(ms)", span="6514-6514"];
m20_2807 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="byte[] data = ms.ToArray()", span="6519-6519"];
m20_2804 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="writer.WriteStartArray()", span="6515-6515"];
m20_2805 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="writer.WriteValue(''2000-01-02T03:04:05+06:00'')", span="6516-6516"];
m20_2806 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="writer.WriteEndArray()", span="6517-6517"];
m20_2808 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="BsonReader reader = new BsonReader(new MemoryStream(data))\r\n        {\r\n          ReadRootValueAsArray = true\r\n        }", span="6520-6523"];
m20_2809 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="JArray a = (JArray)JArray.ReadFrom(reader)", span="6525-6525"];
m20_2810 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="JValue v = (JValue)a[0]", span="6526-6526"];
m20_2812 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="Console.WriteLine(a.ToString())", span="6528-6528"];
m20_2811 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="Console.WriteLine(v.Value.GetType())", span="6527-6527"];
m20_2813 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="6511-6511"];
m20_1374 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="3227-3227"];
m20_1375 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonSerializerTest.cs", label="((IDictionary<string, T>)_innerDictionary).CopyTo(array, arrayIndex)", span="3229-3229"];
m20_1376 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="3227-3227"];
m20_1396 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="3260-3260"];
m20_1397 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonSerializerTest.cs", label="return _innerDictionary.TryGetValue(key, out value);", span="3262-3262"];
m20_1398 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="3260-3260"];
m20_1153 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="2586-2586"];
m20_1154 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Error converting value {null} to type 'System.Int32'. Path 'ReadTimeout', line 1, position 15.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'', new JsonSerializerSettings\r\n            {\r\n              ContractResolver = new DefaultContractResolver\r\n              {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE || PORTABLE40)\r\n                IgnoreSerializableAttribute = true\r\n#endif\r\n                }\r\n            });\r\n        })", span="2588-2601"];
m20_1155 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="2586-2586"];
m20_1045 [cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", span="34-34"];
m20_3494 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="8366-8366"];
m20_3495 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="JsonSerializerTest.cs", label="_dictionary = dictionary", span="8368-8368"];
m20_3496 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="8366-8366"];
m20_796 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="1743-1743"];
m20_797 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''firstName'''': ''''firstName'''',\r\n  ''''FirstName'''': ''''FirstName'''',\r\n  ''''LastName'''': ''''LastName'''',\r\n  ''''lastName'''': ''''lastName'''',\r\n}''", span="1745-1750"];
m20_798 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="PropertyCase o = JsonConvert.DeserializeObject<PropertyCase>(json)", span="1752-1752"];
m20_799 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(o)", span="1753-1753"];
m20_800 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''firstName'', o.firstName)", span="1755-1755"];
m20_801 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''FirstName'', o.FirstName)", span="1756-1756"];
m20_802 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''LastName'', o.LastName)", span="1757-1757"];
m20_803 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''lastName'', o.lastName)", span="1758-1758"];
m20_804 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="1743-1743"];
m20_28 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericItem<T>.GenericItem()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericItem<T>.GenericItem()", span="92-92"];
m20_403 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="962-962"];
m20_404 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="string json = ''{foo:'hello',bar:[1,2,3]}''", span="964-964"];
m20_405 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="965-965"];
m20_406 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''hello'', wibble.Foo)", span="966-966"];
m20_407 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, wibble.Bar.Count)", span="968-968"];
m20_408 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="969-969"];
m20_409 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, wibble.Bar[1])", span="970-970"];
m20_410 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, wibble.Bar[2])", span="971-971"];
m20_411 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, wibble.Bar[3])", span="972-972"];
m20_412 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="962-962"];
m20_501 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", span="28-28"];
m20_2375 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedType.DerivedType()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedType.DerivedType()", span="5629-5629"];
m20_2318 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", span="5490-5490"];
m20_2319 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="5492-5492"];
m20_2320 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", span="5490-5490"];
m20_2355 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", span="5586-5586"];
m20_2356 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs", label="PrivateMembersClassWithAttributes c1 = new PrivateMembersClassWithAttributes(''privateString!'', ''internalString!'', ''readonlyString!'')", span="5588-5588"];
m20_2357 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="5590-5590"];
m20_2358 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''_privateString'''': ''''privateString!'''',\r\n  ''''_readonlyString'''': ''''readonlyString!'''',\r\n  ''''_internalString'''': ''''internalString!''''\r\n}'', json)", span="5591-5595"];
m20_2359 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs", label="PrivateMembersClassWithAttributes c2 = JsonConvert.DeserializeObject<PrivateMembersClassWithAttributes>(json)", span="5597-5597"];
m20_2360 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''readonlyString!'', c2.UseValue())", span="5598-5598"];
m20_2361 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", span="5586-5586"];
m20_3425 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", span="8210-8210"];
m20_3426 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="JsonSerializerTest.cs", label="NewEmployee joe = new NewEmployee()", span="8212-8212"];
m20_3427 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="JsonSerializerTest.cs", label="joe.Name = ''Joe Employee''", span="8213-8213"];
m20_3428 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="JsonSerializerTest.cs", label="joe.Age = 100", span="8214-8214"];
m20_3432 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="JsonSerializerTest.cs", label="joe.Manager = mike", span="8220-8220"];
m20_3433 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(joe, Formatting.Indented)", span="8232-8232"];
m20_3429 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="JsonSerializerTest.cs", label="Employee mike = new Employee()", span="8216-8216"];
m20_3430 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="JsonSerializerTest.cs", label="mike.Name = ''Mike Manager''", span="8217-8217"];
m20_3431 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="JsonSerializerTest.cs", label="mike.Manager = mike", span="8218-8218"];
m20_3434 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Age'''': 100,\r\n  ''''Name'''': ''''Joe Employee'''',\r\n  ''''Manager'''': {\r\n    ''''Name'''': ''''Mike Manager''''\r\n  }\r\n}'', json)", span="8234-8240"];
m20_3435 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", span="8210-8210"];
m20_225 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="670-670"];
m20_533 [cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", span="33-33"];
m20_1440 [cluster="System.Runtime.Serialization.SerializationInfo.GetString(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetString(string)", span="0-0"];
m20_2670 [cluster="Newtonsoft.Json.Tests.Serialization.Widget1.Widget1()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Widget1.Widget1()", span="8652-8652"];
m20_129 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", span="419-419"];
m20_130 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Product product = new Product()", span="421-421"];
m20_131 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="product.Name = ''Apple''", span="423-423"];
m20_132 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="product.ExpiryDate = new DateTime(2008, 12, 28)", span="424-424"];
m20_133 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="product.Price = 3.99M", span="425-425"];
m20_134 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="product.Sizes = new string[] { ''Small'', ''Medium'', ''Large'' }", span="426-426"];
m20_135 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="string output = JsonConvert.SerializeObject(product)", span="428-428"];
m20_136 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(output, typeof(Product))", span="440-440"];
m20_137 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="442-442"];
m20_138 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2008, 12, 28), deserializedProduct.ExpiryDate)", span="443-443"];
m20_139 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3.99m, deserializedProduct.Price)", span="444-444"];
m20_140 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="445-445"];
m20_141 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="446-446"];
m20_142 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="447-447"];
m20_143 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", span="419-419"];
m20_886 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="1968-1968"];
m20_887 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonSerializerTest.cs", label="return ''_name: '' + _name + '', _age: '' + Age + '', Rank: '' + Rank + '', JsonTitle: '' + Title;", span="1970-1970"];
m20_888 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="1968-1968"];
m20_2717 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", span="6318-6318"];
m20_2718 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<ArgumentNullException>(\r\n        @''Value cannot be null.\r\nParameter name: value'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<double>(null);\r\n        })", span="6320-6326"];
m20_2719 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", span="6318-6318"];
m20_100 [cluster="System.IO.MemoryStream.MemoryStream()", file="JsonSerializerTest.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m20_1356 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="3202-3202"];
m20_1357 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="((IDictionary<string, T>)_innerDictionary).Add(item)", span="3204-3204"];
m20_1358 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="3202-3202"];
m20_3100 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", span="7210-7210"];
m20_3101 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs", label="string json = @''[\r\n        1,\r\n        null\r\n      ]''", span="7212-7215"];
m20_3102 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs", label="var l = JsonConvert.DeserializeObject<IReadOnlyList<int?>>(json)", span="7217-7217"];
m20_3103 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, l[0])", span="7219-7219"];
m20_3104 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, l[1])", span="7220-7220"];
m20_3105 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", span="7210-7210"];
m20_634 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="1375-1375"];
m20_635 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="string json", span="1377-1377"];
m20_636 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject((int?)null)", span="1379-1379"];
m20_637 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''null'', json)", span="1380-1380"];
m20_638 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject((int?)1)", span="1382-1382"];
m20_639 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''1'', json)", span="1383-1383"];
m20_640 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="1375-1375"];
m20_754 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="1647-1647"];
m20_755 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="InterfacePropertyTestClass testClass = new InterfacePropertyTestClass()", span="1649-1649"];
m20_756 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="testClass.co = new Co()", span="1650-1650"];
m20_757 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="String strFromTest = JsonConvert.SerializeObject(testClass)", span="1651-1651"];
m20_758 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Could not create an instance of type Newtonsoft.Json.Tests.TestObjects.ICo. Type is an interface or abstract class and cannot be instantiated. Path 'co.Name', line 1, position 14.'',\r\n        () =>\r\n        {\r\n          InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass));\r\n        })", span="1653-1658"];
m20_759 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="1647-1647"];
m20_1671 [cluster="string.Format(System.IFormatProvider, string, object, object)", file="JsonSerializerTest.cs", label="Entry string.Format(System.IFormatProvider, string, object, object)", span="0-0"];
m20_1395 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m20_1745 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="332-332"];
m20_2451 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", span="5808-5808"];
m20_2452 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="JsonSerializerTest.cs", label="IDictionary<string, Component> components = new Dictionary<string, Component>\r\n        {\r\n          {''Key!'', new Component()}\r\n        }", span="5810-5813"];
m20_2453 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="JsonSerializerTest.cs", label="GameObject go = new GameObject\r\n        {\r\n          Components = new ConcurrentDictionary<string, Component>(components),\r\n          Id = ''Id!'',\r\n          Name = ''Name!''\r\n        }", span="5814-5819"];
m20_2454 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="JsonSerializerTest.cs", label="string originalJson = JsonConvert.SerializeObject(go, Formatting.Indented)", span="5821-5821"];
m20_2455 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Components'''': {\r\n    ''''Key!'''': {}\r\n  },\r\n  ''''Id'''': ''''Id!'''',\r\n  ''''Name'''': ''''Name!''''\r\n}'', originalJson)", span="5823-5829"];
m20_2456 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="JsonSerializerTest.cs", label="GameObject newObject = JsonConvert.DeserializeObject<GameObject>(originalJson)", span="5831-5831"];
m20_2457 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, newObject.Components.Count)", span="5833-5833"];
m20_2458 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Id!'', newObject.Id)", span="5834-5834"];
m20_2459 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', newObject.Name)", span="5835-5835"];
m20_2460 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", span="5808-5808"];
m20_324 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="347-347"];
m20_3074 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", span="7131-7131"];
m20_3075 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonSerializerTest.cs", label="m_Item1 = item1", span="7133-7133"];
m20_3076 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", span="7131-7131"];
m20_2946 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", span="6801-6801"];
m20_2947 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs", label="Event e = new Event\r\n        {\r\n          EventName = ''Blackadder III'',\r\n          Venue = ''Gryphon Theatre'',\r\n          Performances = new List<DateTime>\r\n            {\r\n              DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336458600000),\r\n              DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336545000000),\r\n              DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336636800000)\r\n            }\r\n        }", span="6803-6813"];
m20_2948 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="6815-6815"];
m20_2949 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''EventName'''': ''''Blackadder III'''',\r\n  ''''Venue'''': ''''Gryphon Theatre'''',\r\n  ''''Performances'''': [\r\n    new Date(\r\n      1336458600000\r\n    ),\r\n    new Date(\r\n      1336545000000\r\n    ),\r\n    new Date(\r\n      1336636800000\r\n    )\r\n  ]\r\n}'', json)", span="6826-6840"];
m20_2950 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", span="6801-6801"];
m20_375 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", span="923-923"];
m20_376 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="ProductCollection collection = new ProductCollection()\r\n        {\r\n          new Product() {Name = ''Test1''},\r\n          new Product() {Name = ''Test2''},\r\n          new Product() {Name = ''Test3''}\r\n        }", span="925-930"];
m20_377 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="JsonSerializer jsonSerializer = new JsonSerializer()", span="932-932"];
m20_380 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="jsonSerializer.Serialize(sw, collection)", span="937-937"];
m20_383 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(collection, collectionNew)", span="944-944"];
m20_378 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="jsonSerializer.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="933-933"];
m20_382 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="ProductCollection collectionNew = (ProductCollection)jsonSerializer.Deserialize(new JsonTextReader(new StringReader(sw.GetStringBuilder().ToString())), typeof(ProductCollection))", span="942-942"];
m20_379 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter()", span="935-935"];
m20_381 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[{''''Name'''':''''Test1'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null},{''''Name'''':''''Test2'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null},{''''Name'''':''''Test3'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null}]'',\r\n                      sw.GetStringBuilder().ToString())", span="939-940"];
m20_384 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", span="923-923"];
m20_1749 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", span="4056-4056"];
m20_1750 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="JsonSerializerTest.cs", label="Movie p = new Movie()", span="4058-4058"];
m20_1751 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="JsonSerializerTest.cs", label="p.ReleaseCountries = new List<string> { ''Existing'' }", span="4059-4059"];
m20_1752 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="JsonSerializerTest.cs", label="JsonConvert.PopulateObject(''{'ReleaseCountries':['Appended']}'', p, new JsonSerializerSettings\r\n        {\r\n          Converters = new List<JsonConverter> { new StringListAppenderConverter() }\r\n        })", span="4061-4064"];
m20_1753 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, p.ReleaseCountries.Count)", span="4066-4066"];
m20_1754 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Existing'', p.ReleaseCountries[0])", span="4067-4067"];
m20_1755 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Appended'', p.ReleaseCountries[1])", span="4068-4068"];
m20_1756 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", span="4056-4056"];
m20_3284 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncompleteNotTopLevel3DArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncompleteNotTopLevel3DArray()", span="7718-7718"];
m20_3285 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncompleteNotTopLevel3DArray()", file="JsonSerializerTest.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[/*hi*/[/*hi*/''", span="7720-7720"];
m20_3286 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncompleteNotTopLevel3DArray()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Unexpected end when deserializing array. Path 'Coordinates[0]', line 1, position 48.'',\r\n        () => JsonConvert.DeserializeObject<Array3D>(json))", span="7722-7724"];
m20_3287 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncompleteNotTopLevel3DArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncompleteNotTopLevel3DArray()", span="7718-7718"];
m20_3030 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", span="7029-7029"];
m20_3031 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs", label="KeyValuePair<int, string> result =\r\n        JsonConvert.DeserializeObject<KeyValuePair<int, string>>(\r\n          ''{key: 123, \''VALUE\'': \''test value\''}''\r\n          )", span="7031-7034"];
m20_3032 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123, result.Key)", span="7036-7036"];
m20_3033 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''test value'', result.Value)", span="7037-7037"];
m20_3034 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", span="7029-7029"];
m20_485 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="1116-1116"];
m20_486 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="TimeSpan ts = new TimeSpan(00, 23, 59, 1)", span="1118-1118"];
m20_487 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new ClassWithTimeSpan { TimeSpanField = ts }, Formatting.Indented)", span="1120-1120"];
m20_490 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ts, c.TimeSpanField)", span="1126-1126"];
m20_488 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''TimeSpanField'''': ''''23:59:01''''\r\n}'', json)", span="1121-1123"];
m20_489 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="ClassWithTimeSpan c = JsonConvert.DeserializeObject<ClassWithTimeSpan>(json)", span="1125-1125"];
m20_491 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="1116-1116"];
m20_4 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.GetEnumerator()", span="112-112"];
m20_5 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.GetEnumerator()", file="JsonSerializerTest.cs", label="Items != null", span="114-114"];
m20_7 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.GetEnumerator()", file="JsonSerializerTest.cs", label="yield return item;", span="118-118"];
m20_8 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.GetEnumerator()", file="JsonSerializerTest.cs", label="yield break;", span="122-122"];
m20_6 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.GetEnumerator()", file="JsonSerializerTest.cs", label=Items, span="116-116"];
m20_9 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.GetEnumerator()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.GetEnumerator()", span="112-112"];
m20_2953 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", span="6851-6851"];
m20_2954 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new IgnoreDataMemberTestClass() { Ignored = int.MaxValue }, Formatting.Indented)", span="6853-6853"];
m20_2955 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{}'', json)", span="6854-6854"];
m20_2956 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", span="6851-6851"];
m20_1998 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", span="4618-4618"];
m20_1999 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonSerializerTest.cs", label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''2000-01-01T00:00:00+06:00\''}'')", span="4620-4620"];
m20_2000 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="4621-4621"];
m20_2001 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", span="4618-4618"];
m20_1347 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="3154-3154"];
m20_1348 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="3154-3154"];
m20_1403 [cluster="System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0"];
m20_761 [cluster="Newtonsoft.Json.Tests.TestObjects.Co.Co()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Co.Co()", span="27-27"];
m20_1550 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="3752-3752"];
m20_1597 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_field1 = g", span="3755-3755"];
m20_1598 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_field2 = g", span="3756-3756"];
m20_1599 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property1 = g", span="3757-3757"];
m20_1600 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property2 = g", span="3758-3758"];
m20_1601 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property3 = g", span="3759-3759"];
m20_1602 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property4 = g", span="3760-3760"];
m20_1603 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property5 = g", span="3761-3761"];
m20_1604 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property6 = g", span="3762-3762"];
m20_1605 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property7 = g", span="3763-3763"];
m20_1606 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property8 = g", span="3764-3764"];
m20_1607 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="3752-3752"];
m20_3455 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", span="8290-8290"];
m20_3456 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs", label="BigInteger i = BigInteger.Parse(''123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990'')", span="8292-8292"];
m20_3457 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new [] {i}, Formatting.Indented)", span="8294-8294"];
m20_3458 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[\r\n  123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990\r\n]'', json)", span="8296-8298"];
m20_3459 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", span="8290-8290"];
m20_2940 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", span="188-188"];
m20_2951 [cluster="Newtonsoft.Json.Tests.Serialization.Event.Event()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Event.Event()", span="8617-8617"];
m20_333 [cluster="System.TimeSpan.FromHours(double)", file="JsonSerializerTest.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m20_1584 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", span="3705-3705"];
m20_1585 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", span="3705-3705"];
m20_2018 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="4672-4672"];
m20_2019 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="dynamic expando = new ExpandoObject()", span="4674-4674"];
m20_2020 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="expando.Int = 1", span="4675-4675"];
m20_2021 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="expando.Decimal = 99.9d", span="4676-4676"];
m20_2022 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="expando.Complex = new ExpandoObject()", span="4677-4677"];
m20_2023 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="expando.Complex.String = ''I am a string''", span="4678-4678"];
m20_2024 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="expando.Complex.DateTime = new DateTime(2000, 12, 20, 18, 55, 0, DateTimeKind.Utc)", span="4679-4679"];
m20_2025 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(expando, Formatting.Indented)", span="4681-4681"];
m20_2029 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual((long)expando.Int, newExpando[''Int''])", span="4694-4694"];
m20_2031 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expando.Decimal, newExpando[''Decimal''])", span="4697-4697"];
m20_2035 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expando.Complex.String, o[''String''])", span="4703-4703"];
m20_2037 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expando.Complex.DateTime, o[''DateTime''])", span="4706-4706"];
m20_2026 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Int'''': 1,\r\n  ''''Decimal'''': 99.9,\r\n  ''''Complex'''': {\r\n    ''''String'''': ''''I am a string'''',\r\n    ''''DateTime'''': ''''2000-12-20T18:55:00Z''''\r\n  }\r\n}'', json)", span="4682-4689"];
m20_2027 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="IDictionary<string, object> newExpando = JsonConvert.DeserializeObject<ExpandoObject>(json)", span="4691-4691"];
m20_2028 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="CustomAssert.IsInstanceOfType(typeof(long), newExpando[''Int''])", span="4693-4693"];
m20_2030 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="CustomAssert.IsInstanceOfType(typeof(double), newExpando[''Decimal''])", span="4696-4696"];
m20_2032 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="CustomAssert.IsInstanceOfType(typeof(ExpandoObject), newExpando[''Complex''])", span="4699-4699"];
m20_2033 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="IDictionary<string, object> o = (ExpandoObject)newExpando[''Complex'']", span="4700-4700"];
m20_2034 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="CustomAssert.IsInstanceOfType(typeof(string), o[''String''])", span="4702-4702"];
m20_2036 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="CustomAssert.IsInstanceOfType(typeof(DateTime), o[''DateTime''])", span="4705-4705"];
m20_2038 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="4672-4672"];
m20_2233 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", span="5218-5218"];
m20_2234 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="JsonSerializerTest.cs", label="B = 2", span="5220-5220"];
m20_2235 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", span="5218-5218"];
m20_2089 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="4814-4814"];
m20_2090 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="var derived = new Derived(''meh'', ''woo'')", span="4816-4816"];
m20_2091 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="var settings = new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.Objects,\r\n          ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor\r\n        }", span="4818-4822"];
m20_2092 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(derived, Formatting.Indented, settings)", span="4824-4824"];
m20_2093 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="var meh = JsonConvert.DeserializeObject<Base>(json, settings)", span="4826-4826"];
m20_2094 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(((Derived)meh).IDoWork, ''woo'')", span="4828-4828"];
m20_2095 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(meh.IDontWork, ''meh'')", span="4829-4829"];
m20_2096 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="4814-4814"];
m20_3217 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooFewItems()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooFewItems()", span="7617-7617"];
m20_3218 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooFewItems()", file="JsonSerializerTest.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1],[2,1],[2,2]],''''After'''':''''After!''''}''", span="7619-7619"];
m20_3219 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooFewItems()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<Exception>(\r\n        ''Cannot deserialize non-cubical array as multidimensional array.'',\r\n        () => JsonConvert.DeserializeObject<Array2D>(json))", span="7621-7623"];
m20_3220 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooFewItems()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooFewItems()", span="7617-7617"];
m20_3142 [cluster="System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.ReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="JsonSerializerTest.cs", label="Entry System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.ReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m20_2017 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", span="4652-4652"];
m20_3019 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="795-795"];
m20_3291 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", span="7728-7728"];
m20_3292 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="JsonSerializerTest.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':null,''''After'''':''''After!''''}''", span="7730-7730"];
m20_3293 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="JsonSerializerTest.cs", label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="7732-7732"];
m20_3298 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(json, after)", span="7740-7740"];
m20_3294 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="7734-7734"];
m20_3295 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''After!'', aa.After)", span="7735-7735"];
m20_3296 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, aa.Coordinates)", span="7736-7736"];
m20_3297 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="JsonSerializerTest.cs", label="string after = JsonConvert.SerializeObject(aa)", span="7738-7738"];
m20_3299 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", span="7728-7728"];
m20_2084 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", span="4803-4803"];
m20_2085 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", span="4803-4803"];
m20_1866 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", span="4280-4280"];
m20_1867 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="SpecifiedTestClass c = new SpecifiedTestClass()", span="4282-4282"];
m20_1868 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="c.Name = ''James''", span="4283-4283"];
m20_1869 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="c.Age = 27", span="4284-4284"];
m20_1870 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="c.NameSpecified = false", span="4285-4285"];
m20_1871 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="4287-4287"];
m20_1880 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="c.NameSpecified = true", span="4301-4301"];
m20_1881 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="c.WeightSpecified = true", span="4302-4302"];
m20_1882 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="c.HeightSpecified = true", span="4303-4303"];
m20_1883 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="c.FavoriteNumber = 23", span="4304-4304"];
m20_1884 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="4305-4305"];
m20_1872 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Age'''': 27\r\n}'', json)", span="4289-4291"];
m20_1873 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="SpecifiedTestClass deserialized = JsonConvert.DeserializeObject<SpecifiedTestClass>(json)", span="4293-4293"];
m20_1874 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="Assert.IsNull(deserialized.Name)", span="4294-4294"];
m20_1875 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="Assert.IsFalse(deserialized.NameSpecified)", span="4295-4295"];
m20_1876 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="Assert.IsFalse(deserialized.WeightSpecified)", span="4296-4296"];
m20_1877 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="Assert.IsFalse(deserialized.HeightSpecified)", span="4297-4297"];
m20_1878 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="Assert.IsFalse(deserialized.FavoriteNumberSpecified)", span="4298-4298"];
m20_1879 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(27, deserialized.Age)", span="4299-4299"];
m20_1885 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''James'''',\r\n  ''''Age'''': 27,\r\n  ''''Weight'''': 0,\r\n  ''''Height'''': 0,\r\n  ''''FavoriteNumber'''': 23\r\n}'', json)", span="4307-4313"];
m20_1886 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="deserialized = JsonConvert.DeserializeObject<SpecifiedTestClass>(json)", span="4315-4315"];
m20_1887 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''James'', deserialized.Name)", span="4316-4316"];
m20_1888 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="Assert.IsTrue(deserialized.NameSpecified)", span="4317-4317"];
m20_1889 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="Assert.IsTrue(deserialized.WeightSpecified)", span="4318-4318"];
m20_1890 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="Assert.IsTrue(deserialized.HeightSpecified)", span="4319-4319"];
m20_1891 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="Assert.IsTrue(deserialized.FavoriteNumberSpecified)", span="4320-4320"];
m20_1892 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(27, deserialized.Age)", span="4321-4321"];
m20_1893 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(23, deserialized.FavoriteNumber)", span="4322-4322"];
m20_1894 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", span="4280-4280"];
m20_729 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="1572-1572"];
m20_730 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="JaggedArray aa = new JaggedArray()", span="1574-1574"];
m20_731 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="aa.Before = ''Before!''", span="1575-1575"];
m20_732 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="aa.After = ''After!''", span="1576-1576"];
m20_733 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="aa.Coordinates = new[] { new[] { 1, 1 }, new[] { 1, 2 }, new[] { 2, 1 }, new[] { 2, 2 } }", span="1577-1577"];
m20_734 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(aa)", span="1579-1579"];
m20_735 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}'', json)", span="1581-1581"];
m20_736 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="1572-1572"];
m20_63 [cluster="System.Console.WriteLine(string)", file="JsonSerializerTest.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m20_203 [cluster="Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", span="27-27"];
m20_641 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="1387-1387"];
m20_642 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="PersonRaw personRaw = new PersonRaw\r\n        {\r\n          FirstName = ''FirstNameValue'',\r\n          RawContent = new JRaw(''[1,2,3,4,5]''),\r\n          LastName = ''LastNameValue''\r\n        }", span="1389-1394"];
m20_643 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="string json", span="1396-1396"];
m20_644 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(personRaw)", span="1398-1398"];
m20_645 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}'', json)", span="1399-1399"];
m20_646 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="1387-1387"];
m20_1622 [cluster="Unk.ToString", file="JsonSerializerTest.cs", label="Entry Unk.ToString", span=""];
m20_111 [cluster="Unk.IsTrue", file="JsonSerializerTest.cs", label="Entry Unk.IsTrue", span=""];
m20_3594 [cluster="string.ToUpper(System.Globalization.CultureInfo)", file="JsonSerializerTest.cs", label="Entry string.ToUpper(System.Globalization.CultureInfo)", span="0-0"];
m20_1970 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="4544-4544"];
m20_1971 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="string classRef = typeof(StringDictionary).FullName", span="4546-4546"];
m20_1972 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="StringDictionaryTestClass s1 = new StringDictionaryTestClass()\r\n        {\r\n          StringDictionaryProperty = new StringDictionary()\r\n            {\r\n              {''1'', ''One''},\r\n              {''2'', ''II''},\r\n              {''3'', ''3''}\r\n            }\r\n        }", span="4548-4556"];
m20_1974 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Cannot create and populate list type '' + classRef + ''. Path 'StringDictionaryProperty', line 2, position 32.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<StringDictionaryTestClass>(json);\r\n        })", span="4560-4565"];
m20_1973 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(s1, Formatting.Indented)", span="4558-4558"];
m20_1975 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="4544-4544"];
m20_1455 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="3340-3340"];
m20_1456 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''stringValue'', _stringValue)", span="3342-3342"];
m20_1457 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''intValue'', _intValue)", span="3343-3343"];
m20_1458 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''dateTimeOffsetValue'', _dateTimeOffsetValue)", span="3344-3344"];
m20_1459 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''personValue'', _personValue)", span="3345-3345"];
m20_1460 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''nullPersonValue'', _nullPersonValue)", span="3346-3346"];
m20_1461 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''nullableInt'', null)", span="3347-3347"];
m20_1462 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''booleanValue'', _booleanValue)", span="3349-3349"];
m20_1463 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''byteValue'', _byteValue)", span="3350-3350"];
m20_1464 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''charValue'', _charValue)", span="3351-3351"];
m20_1465 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''dateTimeValue'', _dateTimeValue)", span="3352-3352"];
m20_1466 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''decimalValue'', _decimalValue)", span="3353-3353"];
m20_1467 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''shortValue'', _shortValue)", span="3354-3354"];
m20_1468 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''longValue'', _longValue)", span="3355-3355"];
m20_1469 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''sbyteValue'', _sbyteValue)", span="3356-3356"];
m20_1470 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''floatValue'', _floatValue)", span="3357-3357"];
m20_1471 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''ushortValue'', _ushortValue)", span="3358-3358"];
m20_1472 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''uintValue'', _uintValue)", span="3359-3359"];
m20_1473 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''ulongValue'', _ulongValue)", span="3360-3360"];
m20_1474 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="3340-3340"];
m20_1689 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass.GenericListTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass.GenericListTestClass()", span="3933-3933"];
m20_1690 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass.GenericListTestClass()", file="JsonSerializerTest.cs", label="GenericList = new List<string>()", span="3935-3935"];
m20_1691 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass.GenericListTestClass()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass.GenericListTestClass()", span="3933-3933"];
m20_1851 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeTestClass()", span="8942-8942"];
m20_3159 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", span="7427-7427"];
m20_3160 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="JsonSerializerTest.cs", label="Array2D aa = new Array2D()", span="7429-7429"];
m20_3161 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="JsonSerializerTest.cs", label="aa.Before = ''Before!''", span="7430-7430"];
m20_3162 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="JsonSerializerTest.cs", label="aa.After = ''After!''", span="7431-7431"];
m20_3163 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="JsonSerializerTest.cs", label="aa.Coordinates = new[,] { { 1, 1 }, { 1, 2 }, { 2, 1 }, { 2, 2 } }", span="7432-7432"];
m20_3164 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(aa)", span="7434-7434"];
m20_3165 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}'', json)", span="7436-7436"];
m20_3166 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", span="7427-7427"];
m20_3449 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonGenericList()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonGenericList()", span="8279-8279"];
m20_3450 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonGenericList()", file="JsonSerializerTest.cs", label="IList l = JsonConvert.DeserializeObject<IList>(''['string!']'')", span="8281-8281"];
m20_3451 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonGenericList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(List<object>), l.GetType())", span="8283-8283"];
m20_3452 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonGenericList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, l.Count)", span="8284-8284"];
m20_3453 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonGenericList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''string!'', l[0])", span="8285-8285"];
m20_3454 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonGenericList()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonGenericList()", span="8279-8279"];
m20_765 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="1661-1661"];
m20_766 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs", label="Person person = new Person\r\n        {\r\n          Name = ''Mike Manager'',\r\n          BirthDate = new DateTime(1983, 8, 3, 0, 0, 0, DateTimeKind.Utc),\r\n          Department = ''IT'',\r\n          LastModified = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc)\r\n        }", span="1663-1669"];
m20_767 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs", label="return person;", span="1670-1670"];
m20_768 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="1661-1661"];
m20_2921 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", span="6756-6756"];
m20_2922 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs", label="var testObj = new PersonSerializable() { Name = ''John Doe'', Age = 28 }", span="6758-6758"];
m20_2923 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs", label="var objDeserialized = this.SerializeAndDeserialize<PersonSerializable>(testObj)", span="6759-6759"];
m20_2924 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testObj.Name, objDeserialized.Name)", span="6761-6761"];
m20_2925 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, objDeserialized.Age)", span="6762-6762"];
m20_2926 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", span="6756-6756"];
m20_1349 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="3158-3158"];
m20_1350 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="dictionary == null", span="3160-3160"];
m20_1352 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label=dictionary, span="3165-3165"];
m20_1351 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="throw new ArgumentNullException(''dictionary'');", span="3162-3162"];
m20_1353 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="_innerDictionary.Add(entry.Key, entry.Value)", span="3167-3167"];
m20_1354 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="3158-3158"];
m20_101 [cluster="DataContractJsonSerializer.cstr", file="JsonSerializerTest.cs", label="Entry DataContractJsonSerializer.cstr", span=""];
m20_10 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="125-125"];
m20_11 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="return GetEnumerator();", span="127-127"];
m20_12 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="125-125"];
m20_919 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="2050-2050"];
m20_920 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="string json = @''/*comment*/ { /*comment*/\r\n        ''''Name'''': /*comment*/ ''''Apple'''' /*comment*/, /*comment*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment*/ [ /*comment*/\r\n          ''''Small'''', /*comment*/\r\n          ''''Medium'''' /*comment*/,\r\n          /*comment*/ ''''Large''''\r\n        /*comment*/ ] /*comment*/\r\n      } /*comment*/''", span="2052-2061"];
m20_921 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(json, typeof(Product))", span="2063-2063"];
m20_922 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="2065-2065"];
m20_923 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2008, 12, 28, 0, 0, 0, DateTimeKind.Utc), deserializedProduct.ExpiryDate)", span="2066-2066"];
m20_924 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3.99m, deserializedProduct.Price)", span="2067-2067"];
m20_925 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="2068-2068"];
m20_926 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="2069-2069"];
m20_927 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="2070-2070"];
m20_928 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="2050-2050"];
m20_2236 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="5228-5228"];
m20_2237 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs", label="string json = @''{A:''''Test''''}''", span="5230-5230"];
m20_2238 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs", label="var withoutParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithoutParameterisedConstructor>(json)", span="5232-5232"];
m20_2239 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs", label="var withParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithParameterisedConstructor>(json)", span="5233-5233"];
m20_2240 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(withoutParameterisedConstructor.B, withParameterisedConstructor.B)", span="5234-5234"];
m20_2241 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="5228-5228"];
m20_657 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="1416-1416"];
m20_658 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="UserNullable userNullablle = new UserNullable\r\n        {\r\n          Id = new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''),\r\n          FName = ''FirstValue'',\r\n          LName = ''LastValue'',\r\n          RoleId = 5,\r\n          NullableRoleId = 6,\r\n          NullRoleId = null,\r\n          Active = true\r\n        }", span="1418-1427"];
m20_659 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(userNullablle)", span="1429-1429"];
m20_660 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Id'''':''''ad6205e8-0df4-465d-aea6-8ba18e93a7e7'''',''''FName'''':''''FirstValue'''',''''LName'''':''''LastValue'''',''''RoleId'''':5,''''NullableRoleId'''':6,''''NullRoleId'''':null,''''Active'''':true}'', json)", span="1431-1431"];
m20_661 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="UserNullable userNullablleDeserialized = JsonConvert.DeserializeObject<UserNullable>(json)", span="1433-1433"];
m20_662 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''), userNullablleDeserialized.Id)", span="1435-1435"];
m20_663 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''FirstValue'', userNullablleDeserialized.FName)", span="1436-1436"];
m20_664 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''LastValue'', userNullablleDeserialized.LName)", span="1437-1437"];
m20_665 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(5, userNullablleDeserialized.RoleId)", span="1438-1438"];
m20_666 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(6, userNullablleDeserialized.NullableRoleId)", span="1439-1439"];
m20_667 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, userNullablleDeserialized.NullRoleId)", span="1440-1440"];
m20_668 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, userNullablleDeserialized.Active)", span="1441-1441"];
m20_669 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="1416-1416"];
m20_2671 [cluster="Newtonsoft.Json.Tests.Serialization.WidgetId1.WidgetId1()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.WidgetId1.WidgetId1()", span="8658-8658"];
m20_2177 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", span="5041-5041"];
m20_2178 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs", label="MultipleParamatrizedConstructorsJsonConstructor c = JsonConvert.DeserializeObject<MultipleParamatrizedConstructorsJsonConstructor>(''{Value:'value!', Age:1}'')", span="5043-5043"];
m20_2179 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Public Paramatized 2'', c.Constructor)", span="5044-5044"];
m20_2180 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value!'', c.Value)", span="5045-5045"];
m20_2181 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Age)", span="5046-5046"];
m20_2182 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", span="5041-5041"];
m20_904 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="2013-2013"];
m20_905 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''Random'''': {\r\n    ''''blah'''': 1\r\n  },\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11,\r\n    ''''Item1'''': 12\r\n  },\r\n  ''''Collection'''': [\r\n    999\r\n  ],\r\n  ''''Employee'''': {\r\n    ''''Manager'''': {\r\n      ''''Name'''': ''''ManagerName!''''\r\n    }\r\n  }\r\n}''", span="2015-2032"];
m20_906 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(json,\r\n                                                                                           new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Reuse })", span="2034-2035"];
m20_907 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', c.Name)", span="2037-2037"];
m20_908 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, c.Dictionary.Count)", span="2038-2038"];
m20_909 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="2039-2039"];
m20_910 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Dictionary[''existing''])", span="2040-2040"];
m20_911 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, c.Collection.Count)", span="2041-2041"];
m20_912 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Collection.ElementAt(0))", span="2042-2042"];
m20_913 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(999, c.Collection.ElementAt(3))", span="2043-2043"];
m20_914 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''EmployeeName!'', c.Employee.Name)", span="2044-2044"];
m20_915 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ManagerName!'', c.Employee.Manager.Name)", span="2045-2045"];
m20_916 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(c.Random)", span="2046-2046"];
m20_917 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="2013-2013"];
m20_373 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="34-34"];
m20_1476 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", span="0-0"];
m20_1977 [cluster="System.Collections.Specialized.StringDictionary.StringDictionary()", file="JsonSerializerTest.cs", label="Entry System.Collections.Specialized.StringDictionary.StringDictionary()", span="0-0"];
m20_2957 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTestClass.IgnoreDataMemberTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTestClass.IgnoreDataMemberTestClass()", span="6844-6844"];
m20_301 [cluster="Unk.>", file="JsonSerializerTest.cs", label="Entry Unk.>", span=""];
m20_3421 [cluster="System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m20_1257 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="2861-2861"];
m20_1258 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonSerializerTest.cs", label="Dictionary = new Dictionary<string, string>\r\n          {\r\n            {''existing'', ''yup''}\r\n          }", span="2863-2866"];
m20_1259 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonSerializerTest.cs", label="List = new List<string>\r\n          {\r\n            ''existing''\r\n          }", span="2867-2870"];
m20_1260 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="2861-2861"];
m20_738 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="1585-1585"];
m20_739 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}''", span="1587-1587"];
m20_740 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="JaggedArray aa = JsonConvert.DeserializeObject<JaggedArray>(json)", span="1589-1589"];
m20_748 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(json, after)", span="1600-1600"];
m20_741 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="1591-1591"];
m20_742 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''After!'', aa.After)", span="1592-1592"];
m20_743 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, aa.Coordinates.Length)", span="1593-1593"];
m20_744 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, aa.Coordinates[0].Length)", span="1594-1594"];
m20_745 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, aa.Coordinates[0][0])", span="1595-1595"];
m20_746 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, aa.Coordinates[1][1])", span="1596-1596"];
m20_747 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="string after = JsonConvert.SerializeObject(aa)", span="1598-1598"];
m20_749 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="1585-1585"];
m20_1487 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", span="0-0"];
m20_3448 [cluster="Newtonsoft.Json.Tests.Serialization.AnswerFilterModel.AnswerFilterModel()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.AnswerFilterModel.AnswerFilterModel()", span="8547-8547"];
m20_3554 [cluster="Newtonsoft.Json.Tests.Serialization.AnswerFilterModel.AnswerFilterModel()", file="JsonSerializerTest.cs", label="this.answerValues = (from answer in Enum.GetNames(typeof(Antworten))\r\n                           select new SelectListItem { Text = answer, Value = answer, Selected = false })\r\n                           .ToList()", span="8549-8551"];
m20_3555 [cluster="Newtonsoft.Json.Tests.Serialization.AnswerFilterModel.AnswerFilterModel()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.AnswerFilterModel.AnswerFilterModel()", span="8547-8547"];
m20_1917 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", span="4425-4425"];
m20_1918 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", file="JsonSerializerTest.cs", label="return Value;", span="4427-4427"];
m20_1919 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", span="4425-4425"];
m20_2701 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", span="6289-6289"];
m20_2702 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''No JSON content found and type 'System.StringComparison' is not nullable. Path '', line 0, position 0.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<StringComparison>('''');\r\n        })", span="6291-6296"];
m20_2703 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", span="6289-6289"];
m20_1657 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="3879-3879"];
m20_1658 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="3881-3881"];
m20_1659 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="3879-3879"];
m20_1988 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", span="4570-4570"];
m20_1954 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m20_2344 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", span="5560-5560"];
m20_2345 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs", label="_privateString = privateString", span="5562-5562"];
m20_2346 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs", label="_readonlyString = readonlyString", span="5563-5563"];
m20_2347 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs", label="_internalString = internalString", span="5564-5564"];
m20_2348 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", span="5560-5560"];
m20_3349 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JsonSerializerTest.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m20_3119 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", span="7273-7273"];
m20_3120 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="var tuple = Tuple.Create(500)", span="7275-7275"];
m20_3121 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(tuple, new JsonSerializerSettings\r\n      {\r\n        ContractResolver = new SerializableContractResolver()\r\n      })", span="7276-7279"];
m20_3122 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''m_Item1'''':500}'', json)", span="7280-7280"];
m20_3123 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="var obj = JsonConvert.DeserializeObject<Tuple<int>>(json, new JsonSerializerSettings\r\n      {\r\n        ContractResolver = new SerializableContractResolver()\r\n      })", span="7282-7285"];
m20_3124 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Assert.AreEqual(500, obj.Item1)", span="7286-7286"];
m20_3125 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", span="7273-7273"];
m20_286 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="JsonSerializerTest.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m20_2013 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="4661-4661"];
m20_2014 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new DerivedEvent(), Formatting.Indented)", span="4663-4663"];
m20_2015 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''event'''': ''''derived''''\r\n}'', json)", span="4665-4667"];
m20_2016 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="4661-4661"];
m20_3015 [cluster="System.Uri.Uri(string, System.UriKind)", file="JsonSerializerTest.cs", label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0"];
m20_287 [cluster="System.Text.Encoding.GetBytes(string)", file="JsonSerializerTest.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m20_3197 [cluster="System.Array.GetLength(int)", file="JsonSerializerTest.cs", label="Entry System.Array.GetLength(int)", span="0-0"];
m20_1976 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", span="4538-4538"];
m20_2275 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObject.ChildWithDifferentOverrideObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObject.ChildWithDifferentOverrideObject()", span="5328-5328"];
m20_1488 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", span="0-0"];
m20_509 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", span="1156-1156"];
m20_510 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="Name name = new Name(''The Idiot in Next To Me'')", span="1158-1158"];
m20_511 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="PhoneNumber p1 = new PhoneNumber(''555-1212'')", span="1160-1160"];
m20_513 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="name.pNumbers.Add(p1)", span="1163-1163"];
m20_514 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="name.pNumbers.Add(p2)", span="1164-1164"];
m20_515 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(name, Formatting.Indented)", span="1166-1166"];
m20_512 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="PhoneNumber p2 = new PhoneNumber(''444-1212'')", span="1161-1161"];
m20_516 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''personsName'''': ''''The Idiot in Next To Me'''',\r\n  ''''pNumbers'''': [\r\n    {\r\n      ''''phoneNumber'''': ''''555-1212''''\r\n    },\r\n    {\r\n      ''''phoneNumber'''': ''''444-1212''''\r\n    }\r\n  ]\r\n}'', json)", span="1168-1178"];
m20_517 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="Name newName = JsonConvert.DeserializeObject<Name>(json)", span="1180-1180"];
m20_518 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''The Idiot in Next To Me'', newName.personsName)", span="1182-1182"];
m20_519 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, newName.pNumbers.Count)", span="1185-1185"];
m20_520 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''555-1212'', newName.pNumbers[0].phoneNumber)", span="1186-1186"];
m20_521 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''444-1212'', newName.pNumbers[1].phoneNumber)", span="1187-1187"];
m20_522 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", span="1156-1156"];
m20_2247 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", span="5274-5274"];
m20_2248 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs", label="ChildDataContract cc = new ChildDataContract\r\n      {\r\n        VirtualMember = ''VirtualMember!'',\r\n        NonVirtualMember = ''NonVirtualMember!''\r\n      }", span="5276-5280"];
m20_2249 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(cc, Formatting.Indented)", span="5282-5282"];
m20_2250 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs", label="Console.WriteLine(result)", span="5289-5289"];
m20_2251 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", span="5274-5274"];
m20_332 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JsonSerializerTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m20_393 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="657-657"];
m20_3300 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", span="7744-7744"];
m20_3301 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="JsonSerializerTest.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[]],''''After'''':''''After!''''}''", span="7746-7746"];
m20_3302 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="JsonSerializerTest.cs", label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="7748-7748"];
m20_3309 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(json, after)", span="7758-7758"];
m20_3303 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="7750-7750"];
m20_3304 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''After!'', aa.After)", span="7751-7751"];
m20_3305 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, aa.Coordinates.GetLength(0))", span="7752-7752"];
m20_3306 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, aa.Coordinates.GetLength(1))", span="7753-7753"];
m20_3307 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, aa.Coordinates.GetLength(2))", span="7754-7754"];
m20_3308 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="JsonSerializerTest.cs", label="string after = JsonConvert.SerializeObject(aa)", span="7756-7756"];
m20_3310 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", span="7744-7744"];
m20_3210 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooManyItems()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooManyItems()", span="7607-7607"];
m20_3211 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooManyItems()", file="JsonSerializerTest.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2,3],[2,1],[2,2]],''''After'''':''''After!''''}''", span="7609-7609"];
m20_3212 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooManyItems()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<Exception>(\r\n        ''Cannot deserialize non-cubical array as multidimensional array.'',\r\n        () => JsonConvert.DeserializeObject<Array2D>(json))", span="7611-7613"];
m20_3213 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooManyItems()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooManyItems()", span="7607-7607"];
m20_1933 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="4458-4458"];
m20_1934 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(new double?[] { 2.4, 4.3, null }, Formatting.Indented)", span="4460-4460"];
m20_1935 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', jsonText)", span="4462-4466"];
m20_1936 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="4458-4458"];
m20_629 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="1368-1368"];
m20_630 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new GenericImpl())", span="1370-1370"];
m20_631 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Id'''':0}'', json)", span="1371-1371"];
m20_632 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="1368-1368"];
m20_226 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="669-669"];
m20_227 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="string jsonText = @''{\r\n'''''''':'''''''',\r\n''''label'''': [\r\n       [''''SomeName'''',6]\r\n],\r\n''''torrents'''': [\r\n       [''''192D99A5C943555CB7F00A852821CF6D6DB3008A'''',201,''''filename.avi'''',178311826,1000,178311826,72815250,408,1603,7,121430,''''NameOfLabelPrevioslyDefined'''',3,6,0,8,128954,-1,0],\r\n],\r\n''''torrentc'''': ''''1816000723''''\r\n}''", span="671-680"];
m20_228 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="JObject o = (JObject)JsonConvert.DeserializeObject(jsonText)", span="682-682"];
m20_229 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, o.Children().Count())", span="683-683"];
m20_230 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="JToken torrentsArray = (JToken)o[''torrents'']", span="685-685"];
m20_231 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="JToken nestedTorrentsArray = (JToken)torrentsArray[0]", span="686-686"];
m20_232 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(nestedTorrentsArray.Children().Count(), 19)", span="687-687"];
m20_233 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="669-669"];
m20_2785 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", span="6483-6483"];
m20_582 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="769-769"];
m20_2081 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="4790-4790"];
m20_2082 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonSerializerTest.cs", label="IDoWork = doWork", span="4793-4793"];
m20_2083 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="4790-4790"];
m20_714 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="1537-1537"];
m20_715 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Cannot write a null value for property 'FirstName'. Property requires a value. Path ''.'',\r\n        () =>\r\n        {\r\n          RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n            {\r\n              FirstName = null,\r\n              BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n              LastName = null,\r\n              MiddleName = null\r\n            };\r\n\r\n          string json = JsonConvert.SerializeObject(requiredMembersClass);\r\n          Console.WriteLine(json);\r\n        })", span="1539-1553"];
m20_716 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="1537-1537"];
m20_1085 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="2443-2443"];
m20_1086 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonSerializerTest.cs", label="string json = @''[]''", span="2445-2445"];
m20_1087 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.Linq.DynamicDictionary' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<DynamicDictionary>(json);\r\n        })", span="2447-2454"];
m20_1088 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="2443-2443"];
m20_469 [cluster="System.Collections.Generic.Stack<T>.Push(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0"];
m20_958 [cluster="Newtonsoft.Json.Tests.TestObjects.Content.Content()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Content.Content()", span="31-31"];
m20_423 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", span="990-990"];
m20_424 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="992-992"];
m20_425 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="JsonSerializer s = new JsonSerializer()", span="994-994"];
m20_427 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="ClassWithArray wibble = (ClassWithArray)s.Deserialize(new StringReader(json), typeof(ClassWithArray))", span="997-997"];
m20_426 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="s.ObjectCreationHandling = ObjectCreationHandling.Replace", span="995-995"];
m20_428 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''hello'', wibble.Foo)", span="999-999"];
m20_429 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, wibble.Bar.Count)", span="1001-1001"];
m20_430 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", span="990-990"];
m20_2321 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", span="5495-5495"];
m20_2322 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="5497-5497"];
m20_2323 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", span="5495-5495"];
m20_103 [cluster="Unk.WriteObject", file="JsonSerializerTest.cs", label="Entry Unk.WriteObject", span=""];
m20_3460 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListInterface()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListInterface()", span="8304-8304"];
m20_3461 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListInterface()", file="JsonSerializerTest.cs", label="IReadOnlyList<int> list = JsonConvert.DeserializeObject<IReadOnlyList<int>>(''[1,2,3]'')", span="8306-8306"];
m20_3462 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, list.Count)", span="8308-8308"];
m20_3463 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, list[0])", span="8309-8309"];
m20_3464 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, list[1])", span="8310-8310"];
m20_3465 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, list[2])", span="8311-8311"];
m20_3466 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListInterface()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListInterface()", span="8304-8304"];
m20_918 [cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0"];
m20_1446 [cluster="System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", span="0-0"];
m20_459 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", span="30-30"];
m20_621 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="1356-1356"];
m20_622 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Unexpected value when converting date. Expected DateTime or DateTimeOffset, got Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.'',\r\n        () =>\r\n        {\r\n          IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass();\r\n          JsonConvert.SerializeObject(c);\r\n        })", span="1358-1364"];
m20_623 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="1356-1356"];
m20_3311 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", span="7762-7762"];
m20_3312 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", file="JsonSerializerTest.cs", label="Event e1 = new Event\r\n        {\r\n          EventName = ''EventName!''\r\n        }", span="7764-7767"];
m20_3313 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", file="JsonSerializerTest.cs", label="Event[,] array1 = new [,] { { e1, e1 }, { e1, e1 } }", span="7768-7768"];
m20_3314 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", file="JsonSerializerTest.cs", label="IList<Event[,]> values1 = new List<Event[,]>\r\n        {\r\n          array1,\r\n          array1\r\n        }", span="7769-7773"];
m20_3315 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(values1, new JsonSerializerSettings\r\n        {\r\n          PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n          Formatting = Formatting.Indented\r\n        })", span="7775-7779"];
m20_3316 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$values'''': [\r\n    {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$values'''': [\r\n        [\r\n          {\r\n            ''''$id'''': ''''3'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$ref'''': ''''3''''\r\n          }\r\n        ],\r\n        [\r\n          {\r\n            ''''$ref'''': ''''3''''\r\n          },\r\n          {\r\n            ''''$ref'''': ''''3''''\r\n          }\r\n        ]\r\n      ]\r\n    },\r\n    {\r\n      ''''$ref'''': ''''2''''\r\n    }\r\n  ]\r\n}'', json)", span="7781-7812"];
m20_3317 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", span="7762-7762"];
m20_676 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="1454-1454"];
m20_677 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="string boolRef = typeof(bool).AssemblyQualifiedName", span="1456-1456"];
m20_678 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="TypeClass typeClass = new TypeClass { TypeProperty = typeof(bool) }", span="1457-1457"];
m20_680 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + boolRef + @''''''}'', json)", span="1460-1460"];
m20_679 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(typeClass)", span="1459-1459"];
m20_681 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="TypeClass typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="1462-1462"];
m20_682 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(bool), typeClass2.TypeProperty)", span="1463-1463"];
m20_683 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="string jsonSerializerTestRef = typeof(JsonSerializerTest).AssemblyQualifiedName", span="1465-1465"];
m20_684 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="typeClass = new TypeClass { TypeProperty = typeof(JsonSerializerTest) }", span="1466-1466"];
m20_686 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + jsonSerializerTestRef + @''''''}'', json)", span="1469-1469"];
m20_685 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(typeClass)", span="1468-1468"];
m20_687 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="1471-1471"];
m20_688 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(JsonSerializerTest), typeClass2.TypeProperty)", span="1472-1472"];
m20_689 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="1454-1454"];
m20_1377 [cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0"];
m20_119 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", span="404-404"];
m20_120 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Store store = new Store()", span="406-406"];
m20_121 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(store)", span="408-408"];
m20_123 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(store.Establised, deserializedStore.Establised)", span="412-412"];
m20_124 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(store.product.Count, deserializedStore.product.Count)", span="413-413"];
m20_122 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Store deserializedStore = (Store)JsonConvert.DeserializeObject(jsonText, typeof(Store))", span="410-410"];
m20_125 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Console.WriteLine(jsonText)", span="415-415"];
m20_126 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", span="404-404"];
m20_2577 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", span="6025-6025"];
m20_2578 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonSerializerTest.cs", label="string json = @''[\r\n  1,\r\n  2,\r\n  3,\r\n  null\r\n]''", span="6027-6032"];
m20_2579 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Error converting value {null} to type 'System.Int32'. Path '[3]', line 5, position 7.'',\r\n        () =>\r\n        {\r\n          List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json);\r\n        })", span="6034-6039"];
m20_2580 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", span="6025-6025"];
m20_1300 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="3000-3000"];
m20_1301 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="string json = ''{key1:'value1',key2:'value2',key3:'value3'}''", span="3002-3002"];
m20_1302 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="var dic = JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json)", span="3004-3004"];
m20_1303 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, dic.Count)", span="3006-3006"];
m20_1304 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value1'', dic[''key1''])", span="3007-3007"];
m20_1305 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value2'', dic[''key2''])", span="3008-3008"];
m20_1306 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value3'', dic[''key3''])", span="3009-3009"];
m20_1307 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="3000-3000"];
m20_3520 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.GetEnumerator()", span="8444-8444"];
m20_3521 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.GetEnumerator()", file="JsonSerializerTest.cs", label="return _values.GetEnumerator();", span="8446-8446"];
m20_3522 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.GetEnumerator()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.GetEnumerator()", span="8444-8444"];
m20_1997 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="JsonSerializerTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0"];
m20_750 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="1604-1604"];
m20_751 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''name'''': ''''1600 Amphitheatre Parkway, Mountain View, CA, USA'''',\r\n  ''''Status'''': {\r\n    ''''code'''': 200,\r\n    ''''request'''': ''''geocode''''\r\n  },\r\n  ''''Placemark'''': [\r\n    {\r\n      ''''address'''': ''''1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA'''',\r\n      ''''AddressDetails'''': {\r\n        ''''Country'''': {\r\n          ''''CountryNameCode'''': ''''US'''',\r\n          ''''AdministrativeArea'''': {\r\n            ''''AdministrativeAreaName'''': ''''CA'''',\r\n            ''''SubAdministrativeArea'''': {\r\n              ''''SubAdministrativeAreaName'''': ''''Santa Clara'''',\r\n              ''''Locality'''': {\r\n                ''''LocalityName'''': ''''Mountain View'''',\r\n                ''''Thoroughfare'''': {\r\n                  ''''ThoroughfareName'''': ''''1600 Amphitheatre Pkwy''''\r\n                },\r\n                ''''PostalCode'''': {\r\n                  ''''PostalCodeNumber'''': ''''94043''''\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        ''''Accuracy'''': 8\r\n      },\r\n      ''''Point'''': {\r\n        ''''coordinates'''': [-122.083739, 37.423021, 0]\r\n      }\r\n    }\r\n  ]\r\n}''", span="1606-1641"];
m20_752 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs", label="GoogleMapGeocoderStructure jsonGoogleMapGeocoder = JsonConvert.DeserializeObject<GoogleMapGeocoderStructure>(json)", span="1643-1643"];
m20_753 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="1604-1604"];
m20_837 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", span="1831-1831"];
m20_838 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="string json = ''{}''", span="1833-1833"];
m20_839 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="JsonPropertyWithHandlingValues o = JsonConvert.DeserializeObject<JsonPropertyWithHandlingValues>(json)", span="1835-1835"];
m20_840 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Default!'', o.DefaultValueHandlingIgnoreAndPopulateProperty)", span="1836-1836"];
m20_841 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Default!'', o.DefaultValueHandlingPopulateProperty)", span="1837-1837"];
m20_842 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, o.DefaultValueHandlingIgnoreProperty)", span="1838-1838"];
m20_843 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, o.DefaultValueHandlingIncludeProperty)", span="1839-1839"];
m20_844 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", span="1831-1831"];
m20_1391 [cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0"];
m20_1692 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", span="3940-3940"];
m20_1693 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="JsonSerializerTest.cs", label="GenericListTestClass c = new GenericListTestClass()", span="3942-3942"];
m20_1694 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="JsonSerializerTest.cs", label="c.GenericList.Add(''1'')", span="3943-3943"];
m20_1695 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="JsonSerializerTest.cs", label="c.GenericList.Add(''2'')", span="3944-3944"];
m20_1696 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="3946-3946"];
m20_1697 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="JsonSerializerTest.cs", label="GenericListTestClass newValue = JsonConvert.DeserializeObject<GenericListTestClass>(json)", span="3948-3948"];
m20_1698 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, newValue.GenericList.Count)", span="3949-3949"];
m20_1699 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(List<string>), newValue.GenericList.GetType())", span="3950-3950"];
m20_1700 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", span="3940-3940"];
m20_3578 [cluster="Newtonsoft.Json.Tests.Serialization.TestObject.TestObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TestObject.TestObject()", span="8732-8732"];
m20_3579 [cluster="Newtonsoft.Json.Tests.Serialization.TestObject.TestObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TestObject.TestObject()", span="8732-8732"];
m20_1758 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.StringListAppenderConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.StringListAppenderConverter()", span="4024-4024"];
m20_1897 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", span="4386-4386"];
m20_1898 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs", label="FamilyDetails joe = new FamilyDetails()", span="4388-4388"];
m20_1899 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs", label="joe.Name = ''Joe Family Details''", span="4389-4389"];
m20_1900 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs", label="joe.NumberOfChildren = 4", span="4390-4390"];
m20_1901 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs", label="joe.NumberOfChildrenSpecified = true", span="4391-4391"];
m20_1906 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new[] { joe, martha }, Formatting.Indented)", span="4398-4398"];
m20_1902 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs", label="FamilyDetails martha = new FamilyDetails()", span="4393-4393"];
m20_1903 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs", label="martha.Name = ''Martha Family Details''", span="4394-4394"];
m20_1904 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs", label="martha.NumberOfChildren = 3", span="4395-4395"];
m20_1905 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs", label="martha.NumberOfChildrenSpecified = false", span="4396-4396"];
m20_1907 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs", label="Console.WriteLine(json)", span="4408-4408"];
m20_1908 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs", label="string mikeString = ''{\''Name\'': \''Mike Person\''}''", span="4410-4410"];
m20_1909 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs", label="FamilyDetails mike = JsonConvert.DeserializeObject<FamilyDetails>(mikeString)", span="4411-4411"];
m20_1910 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs", label="Console.WriteLine(''mikeString specifies number of children: {0}'', mike.NumberOfChildrenSpecified)", span="4413-4413"];
m20_1911 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs", label="string mikeFullDisclosureString = ''{\''Name\'': \''Mike Person\'', \''NumberOfChildren\'': \''0\''}''", span="4415-4415"];
m20_1912 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs", label="mike = JsonConvert.DeserializeObject<FamilyDetails>(mikeFullDisclosureString)", span="4416-4416"];
m20_1913 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs", label="Console.WriteLine(''mikeString specifies number of children: {0}'', mike.NumberOfChildrenSpecified)", span="4418-4418"];
m20_1914 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", span="4386-4386"];
m20_3572 [cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8676-8676"];
m20_3573 [cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="reader.TokenType == JsonToken.Null", span="8678-8678"];
m20_3575 [cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="return new WidgetId1 { Value = int.Parse(reader.Value.ToString()) };", span="8680-8680"];
m20_3574 [cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="return null;", span="8679-8679"];
m20_3576 [cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8676-8676"];
m20_51 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", span="292-292"];
m20_52 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="BaseWithContract baseWith = new SubWithoutContractVirtualProperties\r\n      {\r\n        JustAProperty = ''JustAProperty!'',\r\n        Virtual = ''Virtual!'',\r\n        VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n        WithDataMember = ''WithDataMember!''\r\n      }", span="294-300"];
m20_53 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.JustAProperty = ''JustAProperty2!''", span="302-302"];
m20_54 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.Virtual = ''Virtual2!''", span="303-303"];
m20_55 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="304-304"];
m20_56 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.WithDataMember = ''WithDataMember2!''", span="305-305"];
m20_57 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(baseWith, Formatting.Indented)", span="307-307"];
m20_58 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="Console.WriteLine(json)", span="309-309"];
m20_59 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualSub'''': ''''Virtual2!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''JustAProperty'''': ''''JustAProperty2!''''\r\n}'', json)", span="311-316"];
m20_60 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", span="292-292"];
m20_3500 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m20_413 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="976-976"];
m20_414 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="978-978"];
m20_415 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="979-979"];
m20_416 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''hello'', wibble.Foo)", span="980-980"];
m20_417 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, wibble.Bar.Count)", span="982-982"];
m20_418 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="983-983"];
m20_419 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, wibble.Bar[1])", span="984-984"];
m20_420 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, wibble.Bar[2])", span="985-985"];
m20_421 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, wibble.Bar[3])", span="986-986"];
m20_422 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="976-976"];
m20_1923 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", span="4421-4421"];
m20_1715 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", span="3973-3973"];
m20_1716 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs", label="DateTime dateTime = new DateTime(2000, 12, 1, 23, 1, 1, DateTimeKind.Utc)", span="3975-3975"];
m20_1717 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs", label="List<KeyValuePair<string, WagePerson>> list = new List<KeyValuePair<string, WagePerson>>()", span="3977-3977"];
m20_1718 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs", label="list.Add(new KeyValuePair<string, WagePerson>(''key1'', new WagePerson\r\n        {\r\n          BirthDate = dateTime,\r\n          Department = ''Department1'',\r\n          LastModified = dateTime,\r\n          HourlyWage = 1\r\n        }))", span="3978-3984"];
m20_1719 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs", label="list.Add(new KeyValuePair<string, WagePerson>(''key2'', new WagePerson\r\n        {\r\n          BirthDate = dateTime,\r\n          Department = ''Department2'',\r\n          LastModified = dateTime,\r\n          HourlyWage = 2\r\n        }))", span="3985-3991"];
m20_1720 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(list, Formatting.Indented)", span="3993-3993"];
m20_1721 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[\r\n  {\r\n    ''''Key'''': ''''key1'''',\r\n    ''''Value'''': {\r\n      ''''HourlyWage'''': 1.0,\r\n      ''''Name'''': null,\r\n      ''''BirthDate'''': ''''2000-12-01T23:01:01Z'''',\r\n      ''''LastModified'''': ''''2000-12-01T23:01:01Z''''\r\n    }\r\n  },\r\n  {\r\n    ''''Key'''': ''''key2'''',\r\n    ''''Value'''': {\r\n      ''''HourlyWage'''': 2.0,\r\n      ''''Name'''': null,\r\n      ''''BirthDate'''': ''''2000-12-01T23:01:01Z'''',\r\n      ''''LastModified'''': ''''2000-12-01T23:01:01Z''''\r\n    }\r\n  }\r\n]'', json)", span="3995-4014"];
m20_1722 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs", label="List<KeyValuePair<string, WagePerson>> result = JsonConvert.DeserializeObject<List<KeyValuePair<string, WagePerson>>>(json)", span="4016-4016"];
m20_1723 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, result.Count)", span="4017-4017"];
m20_1724 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''key1'', result[0].Key)", span="4018-4018"];
m20_1725 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, result[0].Value.HourlyWage)", span="4019-4019"];
m20_1726 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''key2'', result[1].Key)", span="4020-4020"];
m20_1727 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, result[1].Value.HourlyWage)", span="4021-4021"];
m20_1728 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", span="3973-3973"];
m20_349 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", span="873-873"];
m20_350 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="var anonymous =\r\n        new\r\n          {\r\n            StringValue = ''I am a string'',\r\n            IntValue = int.MaxValue,\r\n            NestedAnonymous = new { NestedValue = byte.MaxValue },\r\n            NestedArray = new[] { 1, 2 },\r\n            Product = new Product() { Name = ''TestProduct'' }\r\n          }", span="875-883"];
m20_351 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(anonymous)", span="885-885"];
m20_353 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous)", span="888-888"];
m20_352 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''StringValue'''':''''I am a string'''',''''IntValue'''':2147483647,''''NestedAnonymous'''':{''''NestedValue'''':255},''''NestedArray'''':[1,2],''''Product'''':{''''Name'''':''''TestProduct'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null}}'', json)", span="886-886"];
m20_354 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''I am a string'', anonymous.StringValue)", span="889-889"];
m20_355 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, anonymous.IntValue)", span="890-890"];
m20_356 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(255, anonymous.NestedAnonymous.NestedValue)", span="891-891"];
m20_357 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, anonymous.NestedArray.Length)", span="892-892"];
m20_358 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, anonymous.NestedArray[0])", span="893-893"];
m20_359 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, anonymous.NestedArray[1])", span="894-894"];
m20_360 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''TestProduct'', anonymous.Product.Name)", span="895-895"];
m20_361 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", span="873-873"];
m20_1216 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="2717-2717"];
m20_1217 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Dictionary<Person, int> dictionary = new Dictionary<Person, int>()", span="2719-2719"];
m20_1218 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="dictionary.Add(new Person { Name = ''p1'' }, 1)", span="2720-2720"];
m20_1219 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="dictionary.Add(new Person { Name = ''p2'' }, 2)", span="2721-2721"];
m20_1220 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="2723-2723"];
m20_1221 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}'', json)", span="2725-2728"];
m20_1222 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="2717-2717"];
m20_492 [cluster="System.TimeSpan.TimeSpan(int, int, int, int)", file="JsonSerializerTest.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0"];
m20_2064 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", span="4754-4754"];
m20_2065 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", file="JsonSerializerTest.cs", label="return string.Format(''({0},{1},{2})'', X, Y, Z);", span="4756-4756"];
m20_2066 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", span="4754-4754"];
m20_1050 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="2369-2369"];
m20_1051 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="List<decimal?> l = JsonConvert.DeserializeObject<List<decimal?>>(''[ 3.3, null, 1.1 ] '')", span="2371-2371"];
m20_1052 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, l.Count)", span="2372-2372"];
m20_1053 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3.3m, l[0])", span="2374-2374"];
m20_1054 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, l[1])", span="2375-2375"];
m20_1055 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1.1m, l[2])", span="2376-2376"];
m20_1056 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="2369-2369"];
m20_2302 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="5443-5443"];
m20_2303 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="NonDefaultConstructorWithReadOnlyDictionaryProperty c1 = new NonDefaultConstructorWithReadOnlyDictionaryProperty(''blah'')", span="5445-5445"];
m20_2304 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="c1.Categories.Add(''one'', 1)", span="5446-5446"];
m20_2305 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="c1.Categories.Add(''two'', 2)", span="5447-5447"];
m20_2306 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="5449-5449"];
m20_2309 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Title, c2.Title)", span="5459-5459"];
m20_2310 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="5460-5460"];
m20_2307 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2\r\n  }\r\n}'', json)", span="5450-5456"];
m20_2308 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="NonDefaultConstructorWithReadOnlyDictionaryProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyDictionaryProperty>(json)", span="5458-5458"];
m20_2311 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c2.Categories[''one''])", span="5461-5461"];
m20_2312 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, c2.Categories[''two''])", span="5462-5462"];
m20_2313 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="5443-5443"];
m20_1449 [cluster="System.Runtime.Serialization.SerializationInfo.GetInt64(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetInt64(string)", span="0-0"];
m20_1445 [cluster="System.Runtime.Serialization.SerializationInfo.GetChar(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetChar(string)", span="0-0"];
m20_2837 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", span="6557-6557"];
m20_2838 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="string json = ''{'NonAttributeProperty':null,'UnsetProperty':null,'AllowNullProperty':null,'AlwaysProperty':null}''", span="6559-6559"];
m20_2839 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="IList<string> errors = new List<string>()", span="6560-6560"];
m20_2841 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="var o = JsonConvert.DeserializeObject<RequiredObject>(json, new JsonSerializerSettings\r\n      {\r\n        Error = error\r\n      })", span="6568-6571"];
m20_2840 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n      {\r\n        errors.Add(e.ErrorContext.Error.Message);\r\n        e.ErrorContext.Handled = true;\r\n      }", span="6562-6566"];
m20_2843 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, errors.Count)", span="6574-6574"];
m20_2844 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Required property 'NonAttributeProperty' expects a value but got null. Path '', line 1, position 97.'', errors[0])", span="6575-6575"];
m20_2845 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Required property 'UnsetProperty' expects a value but got null. Path '', line 1, position 97.'', errors[1])", span="6576-6576"];
m20_2846 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Required property 'AlwaysProperty' expects a value but got null. Path '', line 1, position 97.'', errors[2])", span="6577-6577"];
m20_2842 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(o)", span="6573-6573"];
m20_2847 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", span="6557-6557"];
m20_2168 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", span="5025-5025"];
m20_2169 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", file="JsonSerializerTest.cs", label="Value = value", span="5027-5027"];
m20_2170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", file="JsonSerializerTest.cs", label="Constructor = ''Public Paramatized 1''", span="5028-5028"];
m20_2171 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", span="5025-5025"];
m20_1763 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="4078-4078"];
m20_1764 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="string existingString = (string)existingValue", span="4080-4080"];
m20_1765 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="string newString = existingString + (string)reader.Value", span="4081-4081"];
m20_1766 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="return newString;", span="4083-4083"];
m20_1767 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="4078-4078"];
m20_1529 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", span="3562-3562"];
m20_1530 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonSerializerTest.cs", label="Key = k", span="3564-3564"];
m20_1531 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonSerializerTest.cs", label="Value = v", span="3565-3565"];
m20_1532 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", span="3562-3562"];
m20_50 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", span="376-376"];
m20_84 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="378-378"];
m20_85 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(o.GetType())", span="379-379"];
m20_86 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="s.WriteObject(ms, o)", span="380-380"];
m20_90 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="JObject jsonNetJson = JObject.Parse(JsonConvert.SerializeObject(o))", span="386-386"];
m20_92 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="Console.WriteLine(''Results for '' + o.GetType().Name)", span="389-389"];
m20_87 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="var data = ms.ToArray()", span="382-382"];
m20_88 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="JObject dataContractJson = JObject.Parse(Encoding.UTF8.GetString(data, 0, data.Length))", span="383-383"];
m20_89 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="dataContractJson = new JObject(dataContractJson.Properties().OrderBy(p => p.Name))", span="384-384"];
m20_93 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="Console.WriteLine(''DataContractJsonSerializer: '' + dataContractJson)", span="390-390"];
m20_95 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="Assert.AreEqual(dataContractJson.Count, jsonNetJson.Count)", span="393-393"];
m20_96 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label=dataContractJson, span="394-394"];
m20_91 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="jsonNetJson = new JObject(jsonNetJson.Properties().OrderBy(p => p.Name))", span="387-387"];
m20_94 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="Console.WriteLine(''JsonDotNetSerializer      : '' + jsonNetJson)", span="391-391"];
m20_97 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="Assert.IsTrue(JToken.DeepEquals(jsonNetJson[property.Key], property.Value), ''Property not equal: '' + property.Key)", span="396-396"];
m20_98 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="return jsonNetJson.ToString();", span="399-399"];
m20_99 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", span="376-376"];
m20_494 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="1130-1130"];
m20_495 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeOnClassTestClass())", span="1132-1132"];
m20_496 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''TheField'''':0,''''Property'''':21}'', json)", span="1134-1134"];
m20_497 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="JsonIgnoreAttributeOnClassTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeOnClassTestClass>(@''{''''TheField'''':99,''''Property'''':-1,''''IgnoredField'''':-1}'')", span="1136-1136"];
m20_498 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, c.IgnoredField)", span="1138-1138"];
m20_499 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(99, c.Field)", span="1139-1139"];
m20_500 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="1130-1130"];
m20_722 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="1557-1557"];
m20_723 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Required property 'LastName' not found in JSON. Path '', line 3, position 2.'',\r\n        () =>\r\n        {\r\n          string json = @''{\r\n  ''''FirstName'''': ''''Bob''''\r\n}'';\r\n\r\n          JsonConvert.DeserializeObject<RequiredMembersClass>(json);\r\n        })", span="1559-1568"];
m20_724 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="1557-1557"];
m20_2644 [cluster="Newtonsoft.Json.Tests.Serialization.Item.Item()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Item.Item()", span="8698-8698"];
m20_1489 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="3446-3446"];
m20_1490 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Person person = new Person()", span="3448-3448"];
m20_1491 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="3449-3449"];
m20_1492 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="person.LastModified = person.BirthDate", span="3450-3450"];
m20_1493 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="person.Department = ''Department!''", span="3451-3451"];
m20_1494 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="person.Name = ''Name!''", span="3452-3452"];
m20_1498 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="3462-3462"];
m20_1495 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="3454-3454"];
m20_1496 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="string dateTimeOffsetText", span="3455-3455"];
m20_1504 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="3493-3493"];
m20_1497 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="dateTimeOffsetText = @''2000-12-20T22:59:59+02:00''", span="3457-3457"];
m20_1500 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''2000-01-01T01:01:01Z'''',\r\n    ''''LastModified'''': ''''2000-01-01T01:01:01Z''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''0001-01-01T00:00:00Z'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="3465-3488"];
m20_1499 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="3464-3464"];
m20_1501 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="3490-3490"];
m20_1502 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''String!'', o2._stringValue)", span="3491-3491"];
m20_1503 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MinValue, o2._intValue)", span="3492-3492"];
m20_1505 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="3494-3494"];
m20_1506 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, o2._nullPersonValue)", span="3495-3495"];
m20_1507 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, o2._nullableInt)", span="3496-3496"];
m20_1508 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="3446-3446"];
m20_106 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="325-325"];
m20_1451 [cluster="System.Runtime.Serialization.SerializationInfo.GetSingle(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetSingle(string)", span="0-0"];
m20_865 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="1912-1912"];
m20_866 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="OptInClass optInClass = new OptInClass()", span="1914-1914"];
m20_867 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="optInClass.Age = 26", span="1915-1915"];
m20_868 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="optInClass.Name = ''James NK''", span="1916-1916"];
m20_869 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="optInClass.NotIncluded = ''Poor me :(''", span="1917-1917"];
m20_870 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(optInClass, Formatting.Indented)", span="1919-1919"];
m20_871 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''Age'''': 26\r\n}'', json)", span="1921-1924"];
m20_872 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="OptInClass newOptInClass = JsonConvert.DeserializeObject<OptInClass>(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''NotIncluded'''': ''''Ignore me!'''',\r\n  ''''Age'''': 26\r\n}'')", span="1926-1930"];
m20_873 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(26, newOptInClass.Age)", span="1931-1931"];
m20_874 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''James NK'', newOptInClass.Name)", span="1932-1932"];
m20_875 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, newOptInClass.NotIncluded)", span="1933-1933"];
m20_876 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="1912-1912"];
m20_1636 [cluster="XmlDocument.cstr", file="JsonSerializerTest.cs", label="Entry XmlDocument.cstr", span=""];
m20_2791 [cluster="Unk.ToKnownColor", file="JsonSerializerTest.cs", label="Entry Unk.ToKnownColor", span=""];
m20_3557 [cluster="Newtonsoft.Json.Tests.Serialization.SelectListItem.SelectListItem()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SelectListItem.SelectListItem()", span="8530-8530"];
m20_363 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", span="899-899"];
m20_364 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="DateTime d = new DateTime(2000, 1, 1)", span="901-901"];
m20_365 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="var anonymous =\r\n        new\r\n        {\r\n          DateValue = d\r\n        }", span="903-907"];
m20_371 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="Assert.AreEqual(d, anonymous.DateValue)", span="919-919"];
m20_366 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="909-909"];
m20_368 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(anonymous, settings)", span="915-915"];
m20_370 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous, settings)", span="918-918"];
m20_367 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="settings.Converters.Add(new IsoDateTimeConverter\r\n        {\r\n          DateTimeFormat = ''yyyy''\r\n        })", span="910-913"];
m20_369 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DateValue'''':''''2000''''}'', json)", span="916-916"];
m20_372 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", span="899-899"];
m20_387 [cluster="System.IO.StringWriter.StringWriter()", file="JsonSerializerTest.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m20_707 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="1519-1519"];
m20_708 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Required property 'FirstName' expects a value but got null. Path '', line 6, position 2.'',\r\n        () =>\r\n        {\r\n          string json = @''{\r\n  ''''FirstName'''': null,\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}'';\r\n\r\n          JsonConvert.DeserializeObject<RequiredMembersClass>(json);\r\n        })", span="1521-1533"];
m20_709 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="1519-1519"];
m20_3224 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", span="7627-7627"];
m20_3225 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="JsonSerializerTest.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],[2,2,2]]],''''After'''':''''After!''''}''", span="7629-7629"];
m20_3226 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="JsonSerializerTest.cs", label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="7631-7631"];
m20_3235 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="JsonSerializerTest.cs", label="Assert.AreEqual(json, after)", span="7643-7643"];
m20_3227 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="7633-7633"];
m20_3228 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''After!'', aa.After)", span="7634-7634"];
m20_3229 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, aa.Coordinates.GetLength(0))", span="7635-7635"];
m20_3230 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, aa.Coordinates.GetLength(1))", span="7636-7636"];
m20_3231 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, aa.Coordinates.GetLength(2))", span="7637-7637"];
m20_3232 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, aa.Coordinates[0, 0, 0])", span="7638-7638"];
m20_3233 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, aa.Coordinates[1, 1, 1])", span="7639-7639"];
m20_3234 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="JsonSerializerTest.cs", label="string after = JsonConvert.SerializeObject(aa)", span="7641-7641"];
m20_3236 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", span="7627-7627"];
m20_210 [cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", span="27-27"];
m20_3177 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", span="7453-7453"];
m20_3178 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="JsonSerializerTest.cs", label="Array3DWithConverter aa = new Array3DWithConverter()", span="7455-7455"];
m20_3179 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="JsonSerializerTest.cs", label="aa.Before = ''Before!''", span="7456-7456"];
m20_3180 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="JsonSerializerTest.cs", label="aa.After = ''After!''", span="7457-7457"];
m20_3181 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="JsonSerializerTest.cs", label="aa.Coordinates = new[, ,] { { { 1, 1, 1 }, { 1, 1, 2 } }, { { 1, 2, 1 }, { 1, 2, 2 } }, { { 2, 1, 1 }, { 2, 1, 2 } }, { { 2, 2, 1 }, { 2, 2, 2 } } }", span="7458-7458"];
m20_3182 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(aa, Formatting.Indented)", span="7460-7460"];
m20_3183 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Before'''': ''''Before!'''',\r\n  ''''Coordinates'''': [\r\n    [\r\n      [\r\n        1.0,\r\n        1.0,\r\n        1.0\r\n      ],\r\n      [\r\n        1.0,\r\n        1.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        1.0,\r\n        2.0,\r\n        1.0\r\n      ],\r\n      [\r\n        1.0,\r\n        2.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        2.0,\r\n        1.0,\r\n        1.0\r\n      ],\r\n      [\r\n        2.0,\r\n        1.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        2.0,\r\n        2.0,\r\n        1.0\r\n      ],\r\n      [\r\n        2.0,\r\n        2.0,\r\n        2.0\r\n      ]\r\n    ]\r\n  ],\r\n  ''''After'''': ''''After!''''\r\n}'', json)", span="7462-7515"];
m20_3184 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", span="7453-7453"];
m20_542 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="1218-1218"];
m20_543 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="1220-1220"];
m20_544 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="1222-1222"];
m20_545 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="1223-1223"];
m20_546 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="1225-1225"];
m20_547 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="1227-1227"];
m20_548 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="1218-1218"];
m20_2498 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", span="5890-5890"];
m20_2499 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs", label="string input = ''http://test.com/%22foo+bar%22''", span="5892-5892"];
m20_2500 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs", label="Uri uri = new Uri(input)", span="5893-5893"];
m20_2501 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(uri)", span="5894-5894"];
m20_2503 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(uri, output)", span="5897-5897"];
m20_2502 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs", label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="5895-5895"];
m20_2504 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", span="5890-5890"];
m20_3350 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", span="8014-8014"];
m20_3351 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs", label="IList<object> dates = new List<object>\r\n        {\r\n          new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n          new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n        }", span="8016-8020"];
m20_3352 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n      {\r\n        DateFormatString = @''yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffK''\r\n      })", span="8022-8025"];
m20_3353 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[\r\n  ''''2000-12-12T12:12:12.000Z'''',\r\n  ''''2000-12-12T12:12:12.000+01:00''''\r\n]'', json)", span="8027-8030"];
m20_3354 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", span="8014-8014"];
m20_2262 [cluster="System.Convert.ToInt32(long)", file="JsonSerializerTest.cs", label="Entry System.Convert.ToInt32(long)", span="0-0"];
m20_2139 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", span="4959-4959"];
m20_2140 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", file="JsonSerializerTest.cs", label="var data = new DecimalTest(decimal.MinValue)", span="4961-4961"];
m20_2141 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(data)", span="4962-4962"];
m20_2142 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", file="JsonSerializerTest.cs", label="var obj = JsonConvert.DeserializeObject<DecimalTest>(json)", span="4963-4963"];
m20_2143 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", file="JsonSerializerTest.cs", label="Assert.AreEqual(decimal.MinValue, obj.Value)", span="4965-4965"];
m20_2144 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", span="4959-4959"];
m20_938 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="2099-2099"];
m20_939 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Uri uri = new Uri(''http://codeplex.com'')", span="2101-2101"];
m20_940 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(uri)", span="2102-2102"];
m20_941 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''http://codeplex.com/'', uri.ToString())", span="2104-2104"];
m20_943 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(uri, newUri)", span="2107-2107"];
m20_942 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Uri newUri = JsonConvert.DeserializeObject<Uri>(json)", span="2106-2106"];
m20_944 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="2099-2099"];
m20_1046 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="2361-2361"];
m20_1047 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs", label="string json = @''{id: ''''12'''', name: ''''test'''', items: [{id: ''''112'''', name: ''''testing''''}]}''", span="2363-2363"];
m20_1048 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs", label="ListTestClass l = JsonConvert.DeserializeObject<ListTestClass>(json)", span="2365-2365"];
m20_1049 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="2361-2361"];
m20_236 [cluster="Newtonsoft.Json.Linq.JToken.Children()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="332-332"];
m20_2124 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="4921-4921"];
m20_2125 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="Response response = new Response\r\n        {\r\n          Name = ''Success'',\r\n          Data = new JObject(new JProperty(''First'', ''Value1''), new JProperty(''Second'', ''Value2''))\r\n        }", span="4923-4927"];
m20_2126 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(response, Formatting.Indented)", span="4929-4929"];
m20_2129 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="Assert.IsTrue(deserializedResponse.Data.DeepEquals(response.Data))", span="4934-4934"];
m20_2127 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="Response deserializedResponse = JsonConvert.DeserializeObject<Response>(json)", span="4931-4931"];
m20_2128 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Success'', deserializedResponse.Name)", span="4933-4933"];
m20_2130 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="4921-4921"];
m20_289 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="766-766"];
m20_290 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="string json = @''[''''vvv\/vvv\tvvv\''''vvv\bvvv\nvvv\rvvv\\vvv\fvvv'''']''", span="768-768"];
m20_291 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="JavaScriptSerializer javaScriptSerializer = new JavaScriptSerializer()", span="771-771"];
m20_292 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="List<string> javaScriptSerializerResult = javaScriptSerializer.Deserialize<List<string>>(json)", span="772-772"];
m20_294 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="776-776"];
m20_295 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="778-778"];
m20_293 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="775-775"];
m20_298 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="Assert.AreEqual(javaScriptSerializerResult[0], jsonNetResult[0])", span="783-783"];
m20_297 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="781-781"];
m20_296 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, jsonNetResult.Count)", span="780-780"];
m20_299 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="766-766"];
m20_2253 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", span="5293-5293"];
m20_2254 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="ChildDataContract cc = new ChildDataContract\r\n        {\r\n          VirtualMember = ''VirtualMember!'',\r\n          NonVirtualMember = ''NonVirtualMember!''\r\n        }", span="5295-5299"];
m20_2255 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="DataContractSerializer serializer = new DataContractSerializer(typeof(ChildDataContract))", span="5301-5301"];
m20_2257 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="serializer.WriteObject(ms, cc)", span="5304-5304"];
m20_2256 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="5303-5303"];
m20_2258 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="string xml = Encoding.UTF8.GetString(ms.ToArray(), 0, Convert.ToInt32(ms.Length))", span="5306-5306"];
m20_2259 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="Console.WriteLine(xml)", span="5308-5308"];
m20_2260 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", span="5293-5293"];
m20_2261 [cluster="DataContractSerializer.cstr", file="JsonSerializerTest.cs", label="Entry DataContractSerializer.cstr", span=""];
m20_64 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", span="320-320"];
m20_65 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="BaseWithContract baseWith = new SubWithContractNewProperties\r\n      {\r\n        JustAProperty = ''JustAProperty!'',\r\n        Virtual = ''Virtual!'',\r\n        VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n        WithDataMember = ''WithDataMember!''\r\n      }", span="322-328"];
m20_66 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.JustAProperty = ''JustAProperty2!''", span="330-330"];
m20_67 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.Virtual = ''Virtual2!''", span="331-331"];
m20_68 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="332-332"];
m20_69 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.WithDataMember = ''WithDataMember2!''", span="333-333"];
m20_70 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="string json = AssertSerializeDeserializeEqual(baseWith)", span="335-335"];
m20_71 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''JustAProperty2'''': ''''JustAProperty!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''Virtual2'''': ''''Virtual!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''WithDataMemberSub'''': ''''WithDataMember!''''\r\n}'', json)", span="337-346"];
m20_72 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", span="320-320"];
m20_1135 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="2539-2539"];
m20_1136 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs", label="string json = @''{''''Name'''':''''''''}''", span="2541-2541"];
m20_1137 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs", label="Person p = JsonConvert.DeserializeObject<Person>(json)", span="2543-2543"];
m20_1138 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs", label="Assert.AreEqual('''', p.Name)", span="2544-2544"];
m20_1139 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="2539-2539"];
m20_2282 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="5400-5400"];
m20_2283 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonSerializerTest.cs", label="Title = title", span="5402-5402"];
m20_2284 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonSerializerTest.cs", label="Categories = new List<string>()", span="5403-5403"];
m20_2285 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="5400-5400"];
m20_1007 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", span="2241-2241"];
m20_1008 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="JsonSerializerTest.cs", label="Product p1 = new Product\r\n        {\r\n          Name = ''Product 1'',\r\n          Price = 99.95m,\r\n          ExpiryDate = new DateTime(2000, 12, 29, 0, 0, 0, DateTimeKind.Utc),\r\n        }", span="2243-2248"];
m20_1009 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="JsonSerializerTest.cs", label="Product p2 = new Product\r\n        {\r\n          Name = ''Product 2'',\r\n          Price = 12.50m,\r\n          ExpiryDate = new DateTime(2009, 7, 31, 0, 0, 0, DateTimeKind.Utc),\r\n        }", span="2249-2254"];
m20_1011 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="JsonSerializerTest.cs", label="products.Add(p1)", span="2257-2257"];
m20_1010 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="JsonSerializerTest.cs", label="List<Product> products = new List<Product>()", span="2256-2256"];
m20_1012 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="JsonSerializerTest.cs", label="products.Add(p2)", span="2258-2258"];
m20_1013 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(products, Formatting.Indented)", span="2260-2260"];
m20_1014 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[\r\n  {\r\n    ''''Name'''': ''''Product 1'''',\r\n    ''''ExpiryDate'''': ''''2000-12-29T00:00:00Z'''',\r\n    ''''Price'''': 99.95,\r\n    ''''Sizes'''': null\r\n  },\r\n  {\r\n    ''''Name'''': ''''Product 2'''',\r\n    ''''ExpiryDate'''': ''''2009-07-31T00:00:00Z'''',\r\n    ''''Price'''': 12.50,\r\n    ''''Sizes'''': null\r\n  }\r\n]'', json)", span="2276-2289"];
m20_1015 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", span="2241-2241"];
m20_74 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", span="350-350"];
m20_75 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="BaseWithContract baseWith = new SubWithContractVirtualProperties\r\n      {\r\n        JustAProperty = ''JustAProperty!'',\r\n        Virtual = ''Virtual!'',\r\n        VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n        WithDataMember = ''WithDataMember!''\r\n      }", span="352-358"];
m20_76 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.JustAProperty = ''JustAProperty2!''", span="360-360"];
m20_77 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.Virtual = ''Virtual2!''", span="361-361"];
m20_78 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="362-362"];
m20_79 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.WithDataMember = ''WithDataMember2!''", span="363-363"];
m20_80 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="string json = AssertSerializeDeserializeEqual(baseWith)", span="365-365"];
m20_81 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!''''\r\n}'', json)", span="367-373"];
m20_82 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", span="350-350"];
m20_1645 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", span="3861-3861"];
m20_572 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", span="1264-1264"];
m20_573 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="1266-1266"];
m20_574 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="1267-1267"];
m20_575 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n      {\r\n        DateFormatHandling = DateFormatHandling.MicrosoftDateFormat,\r\n      })", span="1269-1272"];
m20_576 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="1273-1273"];
m20_577 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n       ''Could not convert string to DateTime: /Date(0)/. Path 'DefaultConverter', line 1, position 33.'',\r\n       () =>\r\n       {\r\n         JsonConvert.DeserializeObject<MemberConverterClass>(json, new JsonSerializerSettings\r\n         {\r\n           DateParseHandling = DateParseHandling.None\r\n         });\r\n       })", span="1275-1283"];
m20_578 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", span="1264-1264"];
m20_108 [cluster="Newtonsoft.Json.Linq.JObject.Properties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.Properties()", span="195-195"];
m20_390 [cluster="System.Text.StringBuilder.ToString()", file="JsonSerializerTest.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m20_700 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="1502-1502"];
m20_701 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''FirstName'''': ''''I can't be null bro!'''',\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="1504-1509"];
m20_702 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="RequiredMembersClass c = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="1511-1511"];
m20_703 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''I can't be null bro!'', c.FirstName)", span="1513-1513"];
m20_704 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, c.MiddleName)", span="1514-1514"];
m20_705 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, c.LastName)", span="1515-1515"];
m20_706 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="1502-1502"];
m20_996 [cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="152-152"];
m20_2612 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", span="6107-6107"];
m20_2613 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''Error reading integer. Unexpected token: Boolean. Path 'PreProperty', line 2, position 22.'',\r\n        () =>\r\n        {\r\n          string json = @''{\r\n  ''''PreProperty'''': true,\r\n  ''''PostProperty'''': ''''-1''''\r\n}'';\r\n\r\n          JsonConvert.DeserializeObject<TestObjects.MyClass>(json);\r\n        })", span="6109-6119"];
m20_2614 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", span="6107-6107"];
m20_234 [cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="248-248"];
m20_2342 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributeDerived.ClassAttributeDerived()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributeDerived.ClassAttributeDerived()", span="5472-5472"];
m20_2156 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", span="4998-4998"];
m20_2157 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", file="JsonSerializerTest.cs", label="Constructor = ''NonPublic''", span="5000-5000"];
m20_2158 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", span="4998-4998"];
m20_2362 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", span="5608-5608"];
m20_2363 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="BusRun r = JsonConvert.DeserializeObject<BusRun>(''{\''Departures\'':[\''\\/Date(1309874148734-0400)\\/\'',\''\\/Date(1309874148739-0400)\\/\'',null],\''WheelchairAccessible\'':true}'')", span="5610-5610"];
m20_2364 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(List<DateTime?>), r.Departures.GetType())", span="5612-5612"];
m20_2365 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, r.Departures.Count())", span="5613-5613"];
m20_2366 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(r.Departures.ElementAt(0))", span="5614-5614"];
m20_2367 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(r.Departures.ElementAt(1))", span="5615-5615"];
m20_2368 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="Assert.IsNull(r.Departures.ElementAt(2))", span="5616-5616"];
m20_2369 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", span="5608-5608"];
m20_3556 [cluster="System.Enum.GetNames(System.Type)", file="JsonSerializerTest.cs", label="Entry System.Enum.GetNames(System.Type)", span="0-0"];
m20_1638 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="3837-3837"];
m20_1639 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs", label="ClientMap source = new ClientMap()\r\n        {\r\n          position = new Pos() { X = 100, Y = 200 },\r\n          center = new PosDouble() { X = 251.6, Y = 361.3 }\r\n        }", span="3839-3843"];
m20_1640 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(source, new PosConverter(), new PosDoubleConverter())", span="3845-3845"];
m20_1641 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''{\''position\'':new Pos(100,200),\''center\'':new PosD(251.6,361.3)}'', json)", span="3846-3846"];
m20_1642 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="3837-3837"];
m20_2041 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="4711-4711"];
m20_2042 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs", label="decimal d = JsonConvert.DeserializeObject<decimal>(''123456789876543.21'')", span="4713-4713"];
m20_2043 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123456789876543.21m, d)", span="4714-4714"];
m20_2044 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="4711-4711"];
m20_1896 [cluster="Unk.IsFalse", file="JsonSerializerTest.cs", label="Entry Unk.IsFalse", span=""];
m20_3609 [cluster="Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="8926-8926"];
m20_3610 [cluster="Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="writer.WriteValue(Convert.ToDouble(value))", span="8928-8928"];
m20_3611 [cluster="Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="8926-8926"];
m20_1485 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", span="0-0"];
m20_2821 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", span="6532-6532"];
m20_2822 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="string json = ''{}''", span="6534-6534"];
m20_2823 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="IList<string> errors = new List<string>()", span="6535-6535"];
m20_2825 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="var o = JsonConvert.DeserializeObject<RequiredObject>(json, new JsonSerializerSettings\r\n        {\r\n          Error = error\r\n        })", span="6543-6546"];
m20_2824 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n        {\r\n          errors.Add(e.ErrorContext.Error.Message);\r\n          e.ErrorContext.Handled = true;\r\n        }", span="6537-6541"];
m20_2827 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, errors.Count)", span="6549-6549"];
m20_2828 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Required property 'NonAttributeProperty' not found in JSON. Path '', line 1, position 2.'', errors[0])", span="6550-6550"];
m20_2829 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Required property 'UnsetProperty' not found in JSON. Path '', line 1, position 2.'', errors[1])", span="6551-6551"];
m20_2830 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Required property 'AllowNullProperty' not found in JSON. Path '', line 1, position 2.'', errors[2])", span="6552-6552"];
m20_2831 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Required property 'AlwaysProperty' not found in JSON. Path '', line 1, position 2.'', errors[3])", span="6553-6553"];
m20_2826 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(o)", span="6548-6548"];
m20_2832 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", span="6532-6532"];
m20_2634 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", span="6151-6151"];
m20_2635 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="Item expected = new Item()\r\n        {\r\n          SourceTypeID = new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''),\r\n          BrokerID = new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''),\r\n          Latitude = 33.657145,\r\n          Longitude = -117.766684,\r\n          TimeStamp = new DateTime(2000, 3, 1, 23, 59, 59, DateTimeKind.Utc),\r\n          Payload = new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }\r\n        }", span="6153-6161"];
m20_2636 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="string jsonString = JsonConvert.SerializeObject(expected, Formatting.Indented)", span="6163-6163"];
m20_2637 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''SourceTypeID'''': ''''d8220a4b-75b1-4b7a-8112-b7bdae956a45'''',\r\n  ''''BrokerID'''': ''''951663c4-924e-4c86-a57a-7ed737501dbd'''',\r\n  ''''Latitude'''': 33.657145,\r\n  ''''Longitude'''': -117.766684,\r\n  ''''TimeStamp'''': ''''2000-03-01T23:59:59Z'''',\r\n  ''''Payload'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''AAECAwQFBgcICQ==''''\r\n  }\r\n}'', jsonString)", span="6165-6175"];
m20_2638 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="Item actual = JsonConvert.DeserializeObject<Item>(jsonString)", span="6177-6177"];
m20_2639 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), actual.SourceTypeID)", span="6179-6179"];
m20_2640 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''), actual.BrokerID)", span="6180-6180"];
m20_2641 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="byte[] bytes = (byte[])actual.Payload", span="6181-6181"];
m20_2642 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEquivalent((new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }).ToList(), bytes.ToList())", span="6182-6182"];
m20_2643 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", span="6151-6151"];
m20_974 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", span="2191-2191"];
m20_975 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="JsonSerializerTest.cs", label="string json = @''{''''action'''':''''Router'''',''''method'''':''''Navigate'''',''''data'''':[''''dashboard'''',null],''''type'''':''''rpc'''',''''tid'''':2}''", span="2193-2193"];
m20_976 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="JsonSerializerTest.cs", label="ObjectArrayPropertyTest o = JsonConvert.DeserializeObject<ObjectArrayPropertyTest>(json)", span="2195-2195"];
m20_977 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Router'', o.Action)", span="2197-2197"];
m20_978 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Navigate'', o.Method)", span="2198-2198"];
m20_979 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, o.Data.Length)", span="2199-2199"];
m20_980 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''dashboard'', o.Data[0])", span="2200-2200"];
m20_981 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, o.Data[1])", span="2201-2201"];
m20_982 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", span="2191-2191"];
m20_609 [cluster="System.DateTime.ToUniversalTime()", file="JsonSerializerTest.cs", label="Entry System.DateTime.ToUniversalTime()", span="0-0"];
m20_2206 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="5128-5128"];
m20_2207 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Error converting value {null} to type 'System.DateTime'. Path '', line 1, position 4.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject(''null'', typeof(DateTime));\r\n        })", span="5130-5135"];
m20_2208 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="5128-5128"];
m20_1366 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="3217-3217"];
m20_1367 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="return ((IDictionary<string, T>)_innerDictionary).Contains(item);", span="3219-3219"];
m20_1368 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="3217-3217"];
m20_1623 [cluster="Unk.IsNull", file="JsonSerializerTest.cs", label="Entry Unk.IsNull", span=""];
m20_3517 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<T>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<T>)", span="8434-8434"];
m20_3518 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<T>)", file="JsonSerializerTest.cs", label="_values = values", span="8436-8436"];
m20_3519 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<T>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<T>)", span="8434-8434"];
m20_1261 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="2875-2875"];
m20_1262 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="ExistingValueClass d = JsonConvert.DeserializeObject<ExistingValueClass>(@''{'Dictionary':{appended:'appended',existing:'new'}}'')", span="2877-2877"];
m20_1263 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(d)", span="2879-2879"];
m20_1264 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(d.Dictionary)", span="2880-2880"];
m20_1265 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(Dictionary<string, string>), d.Dictionary.GetType())", span="2881-2881"];
m20_1266 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(List<string>), d.List.GetType())", span="2882-2882"];
m20_1267 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, d.Dictionary.Count)", span="2883-2883"];
m20_1268 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''new'', d.Dictionary[''existing''])", span="2884-2884"];
m20_1269 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''appended'', d.Dictionary[''appended''])", span="2885-2885"];
m20_1270 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, d.List.Count)", span="2886-2886"];
m20_1271 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''existing'', d.List[0])", span="2887-2887"];
m20_1272 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="2875-2875"];
m20_1678 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", span="3914-3914"];
m20_1679 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonSerializerTest.cs", label="string s = @''host\user''", span="3916-3916"];
m20_1680 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonSerializerTest.cs", label="string serialized = JsonConvert.SerializeObject(s)", span="3917-3917"];
m20_1683 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonSerializerTest.cs", label="d1.Add(5, s)", span="3921-3921"];
m20_1686 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonSerializerTest.cs", label="d2.Add(s, 5)", span="3925-3925"];
m20_1681 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''''''host\\user'''''', serialized)", span="3918-3918"];
m20_1682 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonSerializerTest.cs", label="Dictionary<int, object> d1 = new Dictionary<int, object>()", span="3920-3920"];
m20_1684 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''5'''':''''host\\user''''}'', JsonConvert.SerializeObject(d1))", span="3922-3922"];
m20_1685 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonSerializerTest.cs", label="Dictionary<string, object> d2 = new Dictionary<string, object>()", span="3924-3924"];
m20_1687 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''host\\user'''':5}'', JsonConvert.SerializeObject(d2))", span="3926-3926"];
m20_1688 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", span="3914-3914"];
m20_2077 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", span="4760-4760"];
m20_2626 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", span="6137-6137"];
m20_2627 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="string json = @''{''''Id'''':null}''", span="6139-6139"];
m20_2628 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="var c = JsonConvert.DeserializeObject<NullableGuid>(json)", span="6140-6140"];
m20_2629 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, c.Id)", span="6142-6142"];
m20_2630 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="json = @''{''''Id'''':''''d8220a4b-75b1-4b7a-8112-b7bdae956a45''''}''", span="6144-6144"];
m20_2631 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="c = JsonConvert.DeserializeObject<NullableGuid>(json)", span="6145-6145"];
m20_2632 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), c.Id)", span="6147-6147"];
m20_2633 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", span="6137-6137"];
m20_1293 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", span="2898-2898"];
m20_649 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="1403-1403"];
m20_650 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="string json = @''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}''", span="1405-1405"];
m20_651 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="PersonRaw personRaw = JsonConvert.DeserializeObject<PersonRaw>(json)", span="1407-1407"];
m20_652 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''FirstNameValue'', personRaw.FirstName)", span="1409-1409"];
m20_653 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[1,2,3,4,5]'', personRaw.RawContent.ToString())", span="1410-1410"];
m20_654 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''LastNameValue'', personRaw.LastName)", span="1411-1411"];
m20_655 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="1403-1403"];
m20_2463 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)", file="JsonSerializerTest.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)", span="0-0"];
m20_549 [cluster="Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", span="27-27"];
m20_793 [cluster="Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", span="29-29"];
m20_524 [cluster="Newtonsoft.Json.Tests.TestObjects.PhoneNumber.PhoneNumber(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PhoneNumber.PhoneNumber(string)", span="31-31"];
m20_1647 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", span="3890-3890"];
m20_2068 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="4766-4766"];
m20_2069 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="VectorParent obj = new VectorParent()", span="4768-4768"];
m20_2070 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="obj.Position = new Vector { X = 1, Y = 2, Z = 3 }", span="4769-4769"];
m20_2071 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="string str = JsonConvert.SerializeObject(obj)", span="4771-4771"];
m20_2072 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="obj = JsonConvert.DeserializeObject<VectorParent>(str)", span="4773-4773"];
m20_2073 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, obj.Position.X)", span="4775-4775"];
m20_2074 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, obj.Position.Y)", span="4776-4776"];
m20_2075 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, obj.Position.Z)", span="4777-4777"];
m20_2076 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="4766-4766"];
m20_562 [cluster="Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", span="30-30"];
m20_2505 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="5901-5901"];
m20_2506 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs", label="string input = @''http://tes/?a=b\\c&d=e\''", span="5903-5903"];
m20_2507 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs", label="Uri uri = new Uri(input)", span="5904-5904"];
m20_2508 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(uri)", span="5905-5905"];
m20_2510 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(uri, output)", span="5908-5908"];
m20_2509 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs", label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="5906-5906"];
m20_2511 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="5901-5901"];
m20_2376 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", span="5670-5670"];
m20_2377 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonSerializerTest.cs", label="Exceptions = new List<Exception>()", span="5672-5672"];
m20_2378 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", span="5670-5670"];
m20_3067 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor_Failure()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor_Failure()", span="7113-7113"];
m20_3068 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor_Failure()", file="JsonSerializerTest.cs", label="string json = @''[\r\n  ''''One'''',\r\n  ''''II'''',\r\n  ''''3''''\r\n]''", span="7115-7119"];
m20_3069 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor_Failure()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Cannot create and populate list type Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+EnumerableClassFailure`1[System.String]. Path '', line 1, position 1.'',\r\n        () => JsonConvert.DeserializeObject<EnumerableClassFailure<string>>(json))", span="7121-7123"];
m20_3070 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor_Failure()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor_Failure()", span="7113-7113"];
m20_3564 [cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.CanConvert(System.Type)", span="8665-8665"];
m20_3565 [cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="return objectType == typeof(WidgetId1) || objectType == typeof(WidgetId1?);", span="8667-8667"];
m20_3566 [cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.CanConvert(System.Type)", span="8665-8665"];
m20_3337 [cluster="System.DateTimeOffset.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry System.DateTimeOffset.ToString(System.IFormatProvider)", span="0-0"];
m20_3544 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(System.Collections.Generic.IEnumerable<T>)", span="8505-8505"];
m20_3545 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerTest.cs", label="Add(default(T))", span="8508-8508"];
m20_3546 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(System.Collections.Generic.IEnumerable<T>)", span="8505-8505"];
m20_2100 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4850-4850"];
m20_2101 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''Name'', _name)", span="4852-4852"];
m20_2102 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4850-4850"];
m20_2172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", span="5032-5032"];
m20_2173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="JsonSerializerTest.cs", label="Value = value", span="5034-5034"];
m20_2174 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="JsonSerializerTest.cs", label="Age = age", span="5035-5035"];
m20_2175 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="JsonSerializerTest.cs", label="Constructor = ''Public Paramatized 2''", span="5036-5036"];
m20_2176 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", span="5032-5032"];
m20_3413 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", span="8183-8183"];
m20_3414 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label="ISet<string> s1 = new HashSet<string>(new[] {''1'', ''two'', ''III''})", span="8185-8185"];
m20_3415 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(s1)", span="8187-8187"];
m20_3417 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(s1.Count, s2.Count)", span="8191-8191"];
m20_3418 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label=s1, span="8192-8192"];
m20_3416 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label="ISet<string> s2 = JsonConvert.DeserializeObject<ISet<string>>(json)", span="8189-8189"];
m20_3419 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label="Assert.IsTrue(s2.Contains(s))", span="8194-8194"];
m20_3420 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", span="8183-8183"];
m20_3567 [cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="8670-8670"];
m20_3568 [cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="WidgetId1 id = (WidgetId1)value", span="8672-8672"];
m20_3569 [cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="writer.WriteValue(id.Value.ToString())", span="8673-8673"];
m20_3570 [cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="8670-8670"];
m20_3587 [cluster="Newtonsoft.Json.Tests.Serialization.TestComponent.TestComponent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TestComponent.TestComponent()", span="8802-8802"];
m20_3588 [cluster="Newtonsoft.Json.Tests.Serialization.TestComponent.TestComponent()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TestComponent.TestComponent()", span="8802-8802"];
m20_1655 [cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteRawValue(string)", span="783-783"];
m20_2449 [cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="133-133"];
m20_2784 [cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.MetroStringConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetroStringConverter.MetroStringConverter()", span="8833-8833"];
m20_1324 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", span="3049-3049"];
m20_2269 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", span="5348-5348"];
m20_2270 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs", label="ChildWithDifferentOverrideObject cc = new ChildWithDifferentOverrideObject\r\n        {\r\n          VirtualMember = ''VirtualMember!'',\r\n          NonVirtualMember = ''NonVirtualMember!''\r\n        }", span="5350-5354"];
m20_2271 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(cc)", span="5356-5356"];
m20_2272 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs", label="Console.WriteLine(result)", span="5357-5357"];
m20_2273 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''differentVirtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="5358-5358"];
m20_2274 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", span="5348-5348"];
m20_2336 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", span="5532-5532"];
m20_2337 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new ClassAttributeDerived\r\n        {\r\n          BaseClassValue = ''BaseClassValue!'',\r\n          DerivedClassValue = ''DerivedClassValue!'',\r\n          NonSerialized = ''NonSerialized!''\r\n        }, Formatting.Indented)", span="5534-5539"];
m20_2338 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''DerivedClassValue'''': ''''DerivedClassValue!'''',\r\n  ''''BaseClassValue'''': ''''BaseClassValue!''''\r\n}'', json)", span="5541-5544"];
m20_2339 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(new CollectionClassAttributeDerived\r\n        {\r\n          BaseClassValue = ''BaseClassValue!'',\r\n          CollectionDerivedClassValue = ''CollectionDerivedClassValue!''\r\n        }, Formatting.Indented)", span="5546-5550"];
m20_2340 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''CollectionDerivedClassValue'''': ''''CollectionDerivedClassValue!'''',\r\n  ''''BaseClassValue'''': ''''BaseClassValue!''''\r\n}'', json)", span="5552-5555"];
m20_2341 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", span="5532-5532"];
m20_2908 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", span="6722-6722"];
m20_2909 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n        {\r\n          {new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1},\r\n          {new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2}\r\n        }", span="6724-6728"];
m20_2910 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n      {\r\n        DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n      })", span="6730-6733"];
m20_2911 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''\/Date(976623132000)\/'''': 1,\r\n  ''''\/Date(1386850332000)\/'''': 2\r\n}'', json)", span="6735-6738"];
m20_2912 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json)", span="6740-6740"];
m20_2913 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2.Count)", span="6742-6742"];
m20_2914 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="6743-6743"];
m20_2915 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="6744-6744"];
m20_2916 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", span="6722-6722"];
m20_1444 [cluster="System.Runtime.Serialization.SerializationInfo.GetByte(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetByte(string)", span="0-0"];
m20_1106 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", span="2485-2485"];
m20_1107 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonSerializerTest.cs", label="string json = @''[new Constructor(123)]''", span="2487-2487"];
m20_1108 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Error converting value ''''Constructor'''' to type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '[0]', line 1, position 17.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<List<Person>>(json);\r\n        })", span="2489-2494"];
m20_1109 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", span="2485-2485"];
m20_3385 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", span="8104-8104"];
m20_3386 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="string json = @''[\r\n  ''''NaN'''',\r\n  ''''Infinity'''',\r\n  ''''-Infinity''''\r\n]''", span="8106-8110"];
m20_3387 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="IList<float> floats = JsonConvert.DeserializeObject<IList<float>>(json)", span="8112-8112"];
m20_3391 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="IList<double> doubles = JsonConvert.DeserializeObject<IList<double>>(json)", span="8117-8117"];
m20_3388 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Assert.AreEqual(float.NaN, floats[0])", span="8113-8113"];
m20_3389 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Assert.AreEqual(float.PositiveInfinity, floats[1])", span="8114-8114"];
m20_3390 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Assert.AreEqual(float.NegativeInfinity, floats[2])", span="8115-8115"];
m20_3392 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Assert.AreEqual(float.NaN, doubles[0])", span="8118-8118"];
m20_3393 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Assert.AreEqual(float.PositiveInfinity, doubles[1])", span="8119-8119"];
m20_3394 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Assert.AreEqual(float.NegativeInfinity, doubles[2])", span="8120-8120"];
m20_3395 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", span="8104-8104"];
m20_197 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="549-549"];
m20_198 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="string value = JsonConvert.SerializeObject(new GetOnlyPropertyClass())", span="551-551"];
m20_199 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="GetOnlyPropertyClass c = JsonConvert.DeserializeObject<GetOnlyPropertyClass>(value)", span="553-553"];
m20_200 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c.Field, ''Field'')", span="555-555"];
m20_201 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c.GetOnlyProperty, ''GetOnlyProperty'')", span="556-556"];
m20_202 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="549-549"];
m20_432 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="1005-1005"];
m20_433 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="ClassWithArray wibble = new ClassWithArray()", span="1007-1007"];
m20_434 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="wibble.Foo = ''hello''", span="1008-1008"];
m20_435 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="wibble.Bar.Add(1)", span="1009-1009"];
m20_436 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="wibble.Bar.Add(2)", span="1010-1010"];
m20_437 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="wibble.Bar.Add(3)", span="1011-1011"];
m20_438 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(wibble)", span="1012-1012"];
m20_439 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="ClassWithArray wibbleOut = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="1014-1014"];
m20_440 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''hello'', wibbleOut.Foo)", span="1015-1015"];
m20_441 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(5, wibbleOut.Bar.Count)", span="1017-1017"];
m20_442 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[0])", span="1018-1018"];
m20_443 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[1])", span="1019-1019"];
m20_444 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, wibbleOut.Bar[2])", span="1020-1020"];
m20_445 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, wibbleOut.Bar[3])", span="1021-1021"];
m20_446 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, wibbleOut.Bar[4])", span="1022-1022"];
m20_447 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="1005-1005"];
m20_3589 [cluster="Newtonsoft.Json.Tests.Serialization.TestComponentSimple.TestComponentSimple()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TestComponentSimple.TestComponentSimple()", span="8814-8814"];
m20_3590 [cluster="Newtonsoft.Json.Tests.Serialization.TestComponentSimple.TestComponentSimple()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TestComponentSimple.TestComponentSimple()", span="8814-8814"];
m20_1223 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="2732-2732"];
m20_1224 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(''Could not convert string 'Newtonsoft.Json.Tests.TestObjects.Person' to dictionary key type 'Newtonsoft.Json.Tests.TestObjects.Person'. Create a TypeConverter to convert from the string to the key type object. Path 'Newtonsoft.Json.Tests.TestObjects.Person', line 2, position 46.'',\r\n      () =>\r\n      {\r\n        string json =\r\n          @''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}'';\r\n\r\n        JsonConvert.DeserializeObject<Dictionary<Person, int>>(json);\r\n      })", span="2734-2744"];
m20_1225 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="2732-2732"];
m20_2447 [cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1547-1547"];
m20_300 [cluster="JavaScriptSerializer.cstr", file="JsonSerializerTest.cs", label="Entry JavaScriptSerializer.cstr", span=""];
m20_2645 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", span="6186-6186"];
m20_2646 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs", label="var serializer = JsonSerializer.Create(new JsonSerializerSettings())", span="6188-6188"];
m20_2647 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs", label="var dict = serializer.Deserialize<Dictionary<string, string>>(new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}'')))", span="6189-6189"];
m20_2648 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual('''', dict[''k1''])", span="6191-6191"];
m20_2649 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''v2'', dict[''k2''])", span="6192-6192"];
m20_2650 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", span="6186-6186"];
m20_2333 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", span="5525-5525"];
m20_2334 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="5527-5527"];
m20_2335 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", span="5525-5525"];
m20_2049 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="4725-4725"];
m20_2050 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="string json = ''{Amount:123456789876543.21}''", span="4727-4727"];
m20_2051 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="Invoice i = JsonConvert.DeserializeObject<Invoice>(json)", span="4728-4728"];
m20_2052 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123456789876543.21m, i.Amount)", span="4729-4729"];
m20_2053 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="4725-4725"];
m20_1006 [cluster="System.Console.WriteLine(int)", file="JsonSerializerTest.cs", label="Entry System.Console.WriteLine(int)", span="0-0"];
m20_3534 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListCtor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListCtor()", span="8484-8484"];
m20_3535 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListCtor()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Unable to find a constructor to use for type Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+PrivateDefaultCtorList`1[System.Int32]. Path '', line 1, position 1.'',\r\n        () => JsonConvert.DeserializeObject<PrivateDefaultCtorList<int>>(''[1,2]'')\r\n        )", span="8486-8489"];
m20_3536 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListCtor()", file="JsonSerializerTest.cs", label="var list = JsonConvert.DeserializeObject<PrivateDefaultCtorList<int>>(''[1,2]'', new JsonSerializerSettings\r\n        {\r\n          ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor\r\n        })", span="8491-8494"];
m20_3537 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListCtor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, list.Count)", span="8496-8496"];
m20_3538 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListCtor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListCtor()", span="8484-8484"];
m20_670 [cluster="Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", span="29-29"];
m20_2412 [cluster="Newtonsoft.Json.Tests.Serialization.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", span="8747-8747"];
m20_3035 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="7041-7041"];
m20_3036 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonSerializerTest.cs", label="string json =\r\n        JsonConvert.SerializeObject(new KeyValuePair<int, string>(123, ''test value''), Formatting.Indented, new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n          })", span="7043-7047"];
m20_3037 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''key'''': 123,\r\n  ''''value'''': ''''test value''''\r\n}'', json)", span="7049-7052"];
m20_3038 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="7041-7041"];
m20_3404 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", span="8162-8162"];
m20_3405 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''MyNullableBool'''': '''''''',\r\n  ''''MyNullableInteger'''': '''''''',\r\n  ''''MyNullableDateTime'''': '''''''',\r\n  ''''MyNullableDateTimeOffset'''': '''''''',\r\n  ''''MyNullableDecimal'''': ''''''''\r\n}''", span="8164-8170"];
m20_3406 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="NullableTestClass c2 = JsonConvert.DeserializeObject<NullableTestClass>(json)", span="8172-8172"];
m20_3407 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="Assert.IsNull(c2.MyNullableBool)", span="8173-8173"];
m20_3408 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="Assert.IsNull(c2.MyNullableInteger)", span="8174-8174"];
m20_3409 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="Assert.IsNull(c2.MyNullableDateTime)", span="8175-8175"];
m20_3410 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="Assert.IsNull(c2.MyNullableDateTimeOffset)", span="8176-8176"];
m20_3411 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="Assert.IsNull(c2.MyNullableDecimal)", span="8177-8177"];
m20_3412 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", span="8162-8162"];
m20_2448 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="432-432"];
m20_2198 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexItem.ComplexItem()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexItem.ComplexItem()", span="5086-5086"];
m20_2242 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="5250-5250"];
m20_2243 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new EnumerableArrayPropertyClass())", span="5252-5252"];
m20_2244 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<EnumerableArrayPropertyClass>(json)", span="5253-5253"];
m20_2245 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="5250-5250"];
m20_769 [cluster="Newtonsoft.Json.Tests.TestObjects.Person.Person()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Person.Person()", span="34-34"];
m20_1182 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="2652-2652"];
m20_1183 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="StructTest structTest = new StructTest\r\n        {\r\n          StringProperty = ''StringProperty!'',\r\n          StringField = ''StringField'',\r\n          IntProperty = 5,\r\n          IntField = 10\r\n        }", span="2654-2660"];
m20_1184 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(structTest, Formatting.Indented)", span="2662-2662"];
m20_1188 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(structTest.StringProperty, deserialized.StringProperty)", span="2672-2672"];
m20_1185 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Console.WriteLine(json)", span="2663-2663"];
m20_1186 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''StringField'''': ''''StringField'''',\r\n  ''''IntField'''': 10,\r\n  ''''StringProperty'''': ''''StringProperty!'''',\r\n  ''''IntProperty'''': 5\r\n}'', json)", span="2664-2669"];
m20_1187 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="StructTest deserialized = JsonConvert.DeserializeObject<StructTest>(json)", span="2671-2671"];
m20_1189 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(structTest.StringField, deserialized.StringField)", span="2673-2673"];
m20_1190 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(structTest.IntProperty, deserialized.IntProperty)", span="2674-2674"];
m20_1191 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(structTest.IntField, deserialized.IntField)", span="2675-2675"];
m20_1192 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="2652-2652"];
m20_2797 [cluster="System.Enum.Parse(System.Type, string)", file="JsonSerializerTest.cs", label="Entry System.Enum.Parse(System.Type, string)", span="0-0"];
m20_2544 [cluster="System.Globalization.CultureInfo.CreateSpecificCulture(string)", file="JsonSerializerTest.cs", label="Entry System.Globalization.CultureInfo.CreateSpecificCulture(string)", span="0-0"];
m20_3504 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m20_326 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", span="826-826"];
m20_327 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs", label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n        {\r\n          new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n          new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n          new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n          new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n        }", span="828-834"];
m20_328 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(testDates)", span="836-836"];
m20_329 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[''''0100-01-01T01:01:01+00:00'''',''''2000-01-01T01:01:01+00:00'''',''''2000-01-01T01:01:01+13:00'''',''''2000-01-01T01:01:01-03:30'''']'', result)", span="837-837"];
m20_330 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", span="826-826"];
m20_2039 [cluster="System.Dynamic.ExpandoObject.ExpandoObject()", file="JsonSerializerTest.cs", label="Entry System.Dynamic.ExpandoObject.ExpandoObject()", span="0-0"];
m20_1608 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="3785-3785"];
m20_1609 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="XNodeTestObject testObject = new XNodeTestObject()", span="3787-3787"];
m20_1610 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="testObject.Document = XDocument.Parse(''<root>hehe, root</root>'')", span="3788-3788"];
m20_1611 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="testObject.Element = XElement.Parse(@''<fifth xmlns:json=''''http://json.org'''' json:Awesome=''''true''''>element</fifth>'')", span="3789-3789"];
m20_1612 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="3791-3791"];
m20_1616 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testObject.Document.ToString(), newTestObject.Document.ToString())", span="3807-3807"];
m20_1617 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testObject.Element.ToString(), newTestObject.Element.ToString())", span="3808-3808"];
m20_1613 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  },\r\n  ''''Element'''': {\r\n    ''''fifth'''': {\r\n      ''''@xmlns:json'''': ''''http://json.org'''',\r\n      ''''@json:Awesome'''': ''''true'''',\r\n      ''''#text'''': ''''element''''\r\n    }\r\n  }\r\n}''", span="3792-3803"];
m20_1614 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expected, json)", span="3804-3804"];
m20_1615 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="XNodeTestObject newTestObject = JsonConvert.DeserializeObject<XNodeTestObject>(json)", span="3806-3806"];
m20_1618 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="Assert.IsNull(newTestObject.Element.Parent)", span="3810-3810"];
m20_1619 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="3785-3785"];
m20_1315 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="3023-3023"];
m20_1316 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonSerializerTest.cs", label=initial, span="3025-3025"];
m20_1317 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonSerializerTest.cs", label="Add(pair.Key, pair.Value)", span="3027-3027"];
m20_1318 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="3023-3023"];
m20_1760 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="4073-4073"];
m20_1761 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="writer.WriteValue(value)", span="4075-4075"];
m20_1762 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="4073-4073"];
m20_2045 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="4718-4718"];
m20_2046 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs", label="decimal? d = JsonConvert.DeserializeObject<decimal?>(''123456789876543.21'')", span="4720-4720"];
m20_2047 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123456789876543.21m, d)", span="4721-4721"];
m20_2048 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="4718-4718"];
m20_2899 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", span="6699-6699"];
m20_2900 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n        {\r\n          {new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1},\r\n          {new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2}\r\n        }", span="6701-6705"];
m20_2901 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented)", span="6707-6707"];
m20_2902 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''2000-12-12T12:12:12Z'''': 1,\r\n  ''''2013-12-12T12:12:12Z'''': 2\r\n}'', json)", span="6709-6712"];
m20_2903 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json)", span="6714-6714"];
m20_2904 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2.Count)", span="6716-6716"];
m20_2905 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="6717-6717"];
m20_2906 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="6718-6718"];
m20_2907 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", span="6699-6699"];
m20_534 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="1205-1205"];
m20_535 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="1207-1207"];
m20_536 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1)", span="1209-1209"];
m20_537 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="1210-1210"];
m20_538 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json)", span="1212-1212"];
m20_539 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="1214-1214"];
m20_540 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="1205-1205"];
m20_478 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", span="29-29"];
m20_1759 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", span="895-895"];
m20_1477 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", span="0-0"];
m20_2815 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", span="143-143"];
m20_2163 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="5012-5012"];
m20_2164 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs", label="PublicConstructorOverridenByJsonConstructor c = JsonConvert.DeserializeObject<PublicConstructorOverridenByJsonConstructor>(''{Value:'value!'}'')", span="5014-5014"];
m20_2165 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Public Paramatized'', c.Constructor)", span="5015-5015"];
m20_2166 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value!'', c.Value)", span="5016-5016"];
m20_2167 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="5012-5012"];
m20_237 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="691-691"];
m20_238 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="JsonPropertyClass test = new JsonPropertyClass()", span="693-693"];
m20_239 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="test.Pie = ''Delicious''", span="694-694"];
m20_240 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="test.SweetCakesCount = int.MaxValue", span="695-695"];
m20_241 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(test)", span="697-697"];
m20_244 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(test.Pie, test2.Pie)", span="703-703"];
m20_245 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(test.SweetCakesCount, test2.SweetCakesCount)", span="704-704"];
m20_242 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''pie'''':''''Delicious'''',''''pie1'''':''''PieChart!'''',''''sweet_cakes_count'''':2147483647}'', jsonText)", span="699-699"];
m20_243 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="JsonPropertyClass test2 = JsonConvert.DeserializeObject<JsonPropertyClass>(jsonText)", span="701-701"];
m20_246 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="691-691"];
m20_2392 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIDictionary()", span="5700-5700"];
m20_2393 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIDictionary()", file="JsonSerializerTest.cs", label="IDictionary dictionary = JsonConvert.DeserializeObject<IDictionary>(''{'name':'value!'}'')", span="5702-5702"];
m20_2394 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, dictionary.Count)", span="5703-5703"];
m20_2395 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value!'', dictionary[''name''])", span="5704-5704"];
m20_2396 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIDictionary()", span="5700-5700"];
m20_3277 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncomplete3DArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncomplete3DArray()", span="7708-7708"];
m20_3278 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncomplete3DArray()", file="JsonSerializerTest.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[/*hi*/[/*hi*/[1/*hi*/,/*hi*/1/*hi*/,1]/*hi*/,/*hi*/[1,1''", span="7710-7710"];
m20_3279 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncomplete3DArray()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Unexpected end when deserializing array. Path 'Coordinates[0][1][1]', line 1, position 90.'',\r\n        () => JsonConvert.DeserializeObject<Array3D>(json))", span="7712-7714"];
m20_3280 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncomplete3DArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncomplete3DArray()", span="7708-7708"];
m20_391 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73"];
m20_3467 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollectionInterface()", span="8315-8315"];
m20_3468 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerTest.cs", label="IReadOnlyCollection<int> list = JsonConvert.DeserializeObject<IReadOnlyCollection<int>>(''[1,2,3]'')", span="8317-8317"];
m20_3469 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, list.Count)", span="8319-8319"];
m20_3470 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, list.ElementAt(0))", span="8321-8321"];
m20_3471 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, list.ElementAt(1))", span="8322-8322"];
m20_3472 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, list.ElementAt(2))", span="8323-8323"];
m20_3473 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollectionInterface()", span="8315-8315"];
m20_1701 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", span="3954-3954"];
m20_1702 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs", label="List<KeyValuePair<string, string>> list = new List<KeyValuePair<string, string>>()", span="3956-3956"];
m20_1703 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs", label="list.Add(new KeyValuePair<string, string>(''key1'', ''value1''))", span="3957-3957"];
m20_1704 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs", label="list.Add(new KeyValuePair<string, string>(''key2'', ''value2''))", span="3958-3958"];
m20_1705 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(list)", span="3960-3960"];
m20_1706 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[{''''Key'''':''''key1'''',''''Value'''':''''value1''''},{''''Key'''':''''key2'''',''''Value'''':''''value2''''}]'', json)", span="3962-3962"];
m20_1707 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs", label="List<KeyValuePair<string, string>> result = JsonConvert.DeserializeObject<List<KeyValuePair<string, string>>>(json)", span="3964-3964"];
m20_1708 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, result.Count)", span="3965-3965"];
m20_1709 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''key1'', result[0].Key)", span="3966-3966"];
m20_1710 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value1'', result[0].Value)", span="3967-3967"];
m20_1711 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''key2'', result[1].Key)", span="3968-3968"];
m20_1712 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value2'', result[1].Value)", span="3969-3969"];
m20_1713 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", span="3954-3954"];
m20_191 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", span="535-535"];
m20_192 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="string value = @''{''''Name'''':''''Orange'''', ''''Hash'''':{''''ExpiryDate'''':''''01/24/2010 12:00:00'''',''''UntypedArray'''':[''''01/24/2010 12:00:00'''']}}''", span="537-537"];
m20_193 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="TypedSubHashtable p = JsonConvert.DeserializeObject(value, typeof(TypedSubHashtable)) as TypedSubHashtable", span="539-539"];
m20_194 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''01/24/2010 12:00:00'', p.Hash[''ExpiryDate''].ToString())", span="541-541"];
m20_195 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[\r\n  ''''01/24/2010 12:00:00''''\r\n]'', p.Hash[''UntypedArray''].ToString())", span="542-544"];
m20_196 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", span="535-535"];
m20_1969 [cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0"];
m20_1140 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="2548-2548"];
m20_1141 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Error getting value from 'ReadTimeout' on 'System.IO.MemoryStream'.'',\r\n        () =>\r\n        {\r\n          JsonConvert.SerializeObject(new MemoryStream(), new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new DefaultContractResolver\r\n            {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE || PORTABLE40)\r\n              IgnoreSerializableAttribute = true\r\n#endif\r\n            }\r\n          });\r\n        })", span="2550-2563"];
m20_1142 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="2548-2548"];
m20_2672 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", span="6236-6236"];
m20_2673 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs", label="var serializer = JsonSerializer.Create(new JsonSerializerSettings())", span="6238-6238"];
m20_2674 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs", label="var dict = serializer.Deserialize<Dictionary<string, string>>(new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}'')))", span="6239-6239"];
m20_2676 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs", label="var dict2 = serializer.Deserialize<Dictionary<string, object>>(reader)", span="6242-6242"];
m20_2675 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs", label="var reader = new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}''))", span="6241-6241"];
m20_2677 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dict[''k1''], dict2[''k1''])", span="6244-6244"];
m20_2678 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", span="6236-6236"];
m20_3106 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", span="7225-7225"];
m20_3107 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="var tuple = new MyTuple<int>(500)", span="7227-7227"];
m20_3108 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(tuple)", span="7228-7228"];
m20_3109 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''m_Item1'''':500}'', json)", span="7229-7229"];
m20_3111 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Action doStuff = () =>\r\n      {\r\n        obj = JsonConvert.DeserializeObject<MyTuple<int>>(json);\r\n      }", span="7233-7236"];
m20_3110 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="MyTuple<int> obj = null", span="7231-7231"];
m20_3112 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="doStuff()", span="7239-7239"];
m20_3113 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Assert.AreEqual(500, obj.Item1)", span="7240-7240"];
m20_3114 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", span="7225-7225"];
m20_2314 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m20_3343 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloats.NullableFloats()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloats.NullableFloats()", span="7955-7955"];
m20_2212 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="5139-5139"];
m20_2213 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs", label="object dateTime = JsonConvert.DeserializeObject(''null'', typeof(DateTime?))", span="5141-5141"];
m20_2214 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs", label="Assert.IsNull(dateTime)", span="5143-5143"];
m20_2215 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="5139-5139"];
m20_3612 [cluster="System.Convert.ToDouble(object)", file="JsonSerializerTest.cs", label="Entry System.Convert.ToDouble(object)", span="0-0"];
m20_3591 [cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetroStringConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="8835-8835"];
m20_3592 [cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="writer.WriteValue('':::'' + value.ToString().ToUpper(CultureInfo.InvariantCulture) + '':::'')", span="8838-8838"];
m20_3593 [cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetroStringConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="8835-8835"];
m20_2559 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="5995-5995"];
m20_2560 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs", label="IList<byte[]> d1 = new List<byte[]> { null }", span="5997-5997"];
m20_2561 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(d1)", span="5999-5999"];
m20_2563 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(d1.Count, d2.Count)", span="6003-6003"];
m20_2564 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(d1[0], d2[0])", span="6004-6004"];
m20_2562 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs", label="IList<byte[]> d2 = JsonConvert.DeserializeObject<IList<byte[]>>(json)", span="6001-6001"];
m20_2565 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="5995-5995"];
m20_3115 [cluster="System.Action.Invoke()", file="JsonSerializerTest.cs", label="Entry System.Action.Invoke()", span="0-0"];
m20_334 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", span="841-841"];
m20_335 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs", label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n        {\r\n          new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n          new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n          new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n          new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n        }", span="843-849"];
m20_336 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(testDates, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="851-851"];
m20_337 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[''''\/Date(-59011455539000+0000)\/'''',''''\/Date(946688461000+0000)\/'''',''''\/Date(946641661000+1300)\/'''',''''\/Date(946701061000-0330)\/'''']'', result)", span="852-852"];
m20_338 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", span="841-841"];
m20_1483 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", span="0-0"];
m20_3328 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="684-684"];
m20_1208 [cluster="Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", span="27-27"];
m20_2268 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObject.ChildObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObject.ChildObject()", span="5322-5322"];
m20_3532 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorList<T>.PrivateDefaultCtorList()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorList<T>.PrivateDefaultCtorList()", span="8478-8478"];
m20_3533 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorList<T>.PrivateDefaultCtorList()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorList<T>.PrivateDefaultCtorList()", span="8478-8478"];
m20_13 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericCollectionInheritance()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericCollectionInheritance()", span="137-137"];
m20_14 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericCollectionInheritance()", file="JsonSerializerTest.cs", label="string json", span="139-139"];
m20_15 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericCollectionInheritance()", file="JsonSerializerTest.cs", label="GenericClass<GenericItem<string>, string> foo1 = new GenericClass<GenericItem<string>, string>()", span="141-141"];
m20_16 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericCollectionInheritance()", file="JsonSerializerTest.cs", label="foo1.Items.Add(new GenericItem<string> {Value = ''Hello''})", span="142-142"];
m20_17 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericCollectionInheritance()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(new {selectList = foo1})", span="144-144"];
m20_18 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericCollectionInheritance()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''selectList'''':[{''''Value'''':''''Hello''''}]}'', json)", span="145-145"];
m20_19 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericCollectionInheritance()", file="JsonSerializerTest.cs", label="GenericClass<NonGenericItem, string> foo2 = new GenericClass<NonGenericItem, string>()", span="147-147"];
m20_20 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericCollectionInheritance()", file="JsonSerializerTest.cs", label="foo2.Items.Add(new NonGenericItem {Value = ''Hello''})", span="148-148"];
m20_21 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericCollectionInheritance()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(new { selectList = foo2 })", span="150-150"];
m20_22 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericCollectionInheritance()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''selectList'''':[{''''Value'''':''''Hello''''}]}'', json)", span="151-151"];
m20_23 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericCollectionInheritance()", file="JsonSerializerTest.cs", label="NonGenericClass foo3 = new NonGenericClass()", span="153-153"];
m20_24 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericCollectionInheritance()", file="JsonSerializerTest.cs", label="foo3.Items.Add(new NonGenericItem {Value = ''Hello''})", span="154-154"];
m20_25 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericCollectionInheritance()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(new { selectList = foo3 })", span="156-156"];
m20_26 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericCollectionInheritance()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''selectList'''':[{''''Value'''':''''Hello''''}]}'', json)", span="157-157"];
m20_27 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericCollectionInheritance()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericCollectionInheritance()", span="137-137"];
m20_468 [cluster="System.Collections.Generic.Stack<T>.Stack()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Stack<T>.Stack()", span="0-0"];
m20_1381 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", span="0-0"];
m20_1551 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="3617-3617"];
m20_1552 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="AA myA = JsonConvert.DeserializeObject<AA>(\r\n        @''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_field2'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2\r\n}'')", span="3619-3629"];
m20_1553 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="3631-3631"];
m20_1554 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="3632-3632"];
m20_1555 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="3633-3633"];
m20_1556 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="3634-3634"];
m20_1557 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="3635-3635"];
m20_1558 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="3636-3636"];
m20_1559 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="3637-3637"];
m20_1560 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="3638-3638"];
m20_1561 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="BB myB = JsonConvert.DeserializeObject<BB>(\r\n        @''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''AA_field2'''': 3,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2,\r\n  ''''BB_property1'''': 3,\r\n  ''''BB_property2'''': 3,\r\n  ''''BB_property3'''': 3,\r\n  ''''BB_property4'''': 3,\r\n  ''''BB_property5'''': 3,\r\n  ''''BB_property6'''': 3,\r\n  ''''BB_property7'''': 3,\r\n  ''''BB_property8'''': 3\r\n}'')", span="3640-3660"];
m20_1562 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="3662-3662"];
m20_1563 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="3663-3663"];
m20_1564 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="3664-3664"];
m20_1565 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="3665-3665"];
m20_1566 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="3666-3666"];
m20_1567 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="3667-3667"];
m20_1568 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="3668-3668"];
m20_1569 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="3669-3669"];
m20_1570 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, myB.BB_field1)", span="3671-3671"];
m20_1571 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, myB.BB_field2)", span="3672-3672"];
m20_1572 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, myB.BB_property1)", span="3673-3673"];
m20_1573 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, myB.BB_property2)", span="3674-3674"];
m20_1574 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property3'', BindingFlags.Instance | BindingFlags.Public), myB))", span="3675-3675"];
m20_1575 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="3676-3676"];
m20_1576 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, myB.BB_property5)", span="3677-3677"];
m20_1577 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property6'', BindingFlags.Instance | BindingFlags.Public), myB))", span="3678-3678"];
m20_1578 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property7'', BindingFlags.Instance | BindingFlags.Public), myB))", span="3679-3679"];
m20_1579 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property8'', BindingFlags.Instance | BindingFlags.Public), myB))", span="3680-3680"];
m20_1580 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="3617-3617"];
m20_2881 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", span="6649-6649"];
m20_2882 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="IDictionary<DateTimeOffset, int> dic1 = new Dictionary<DateTimeOffset, int>\r\n        {\r\n          {new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), 1},\r\n          {new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero), 2}\r\n        }", span="6651-6655"];
m20_2883 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented)", span="6657-6657"];
m20_2884 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''2000-12-12T12:12:12+00:00'''': 1,\r\n  ''''2013-12-12T12:12:12+00:00'''': 2\r\n}'', json)", span="6659-6662"];
m20_2885 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="IDictionary<DateTimeOffset, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTimeOffset, int>>(json)", span="6664-6664"];
m20_2886 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2.Count)", span="6666-6666"];
m20_2887 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, dic2[new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="6667-6667"];
m20_2888 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2[new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="6668-6668"];
m20_2889 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", span="6649-6649"];
m20_105 [cluster="System.Text.Encoding.GetString(byte[], int, int)", file="JsonSerializerTest.cs", label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0"];
m20_552 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", span="1231-1231"];
m20_553 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="1233-1233"];
m20_554 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="1234-1234"];
m20_558 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="1241-1241"];
m20_559 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.MemberConverter)", span="1242-1242"];
m20_555 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(m1)", span="1236-1236"];
m20_556 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':''''1970-01-01T00:00:00Z'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="1237-1237"];
m20_557 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="1239-1239"];
m20_560 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", span="1231-1231"];
m20_878 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", span="1941-1941"];
m20_879 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", span="1941-1941"];
m20_592 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="1305-1305"];
m20_593 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="1307-1307"];
m20_594 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="1308-1308"];
m20_598 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="1315-1315"];
m20_599 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.MemberConverter)", span="1316-1316"];
m20_595 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(m1, new JavaScriptDateTimeConverter())", span="1310-1310"];
m20_596 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':new Date(0),''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="1311-1311"];
m20_597 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json, new JavaScriptDateTimeConverter())", span="1313-1313"];
m20_600 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="1305-1305"];
m20_1194 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="2679-2679"];
m20_1195 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Foo f = new Foo()", span="2681-2681"];
m20_1196 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="f.Bars.Add(new Bar { Id = 0 })", span="2682-2682"];
m20_1197 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="f.Bars.Add(new Bar { Id = 1 })", span="2683-2683"];
m20_1198 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="f.Bars.Add(new Bar { Id = 2 })", span="2684-2684"];
m20_1199 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(f, Formatting.Indented)", span="2686-2686"];
m20_1200 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Bars'''': [\r\n    0,\r\n    1,\r\n    2\r\n  ]\r\n}'', json)", span="2687-2693"];
m20_1201 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Foo newFoo = JsonConvert.DeserializeObject<Foo>(json)", span="2695-2695"];
m20_1202 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, newFoo.Bars.Count)", span="2696-2696"];
m20_1203 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, newFoo.Bars[0].Id)", span="2697-2697"];
m20_1204 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, newFoo.Bars[1].Id)", span="2698-2698"];
m20_1205 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, newFoo.Bars[2].Id)", span="2699-2699"];
m20_1206 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="2679-2679"];
m20_3444 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", span="8256-8256"];
m20_3445 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonSerializerTest.cs", label="string json =\r\n        JsonConvert.SerializeObject(new AnswerFilterModel(), Formatting.Indented, new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new DefaultContractResolver\r\n              {\r\n                IgnoreSerializableAttribute = false\r\n              }\r\n          })", span="8258-8265"];
m20_3446 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''<Active>k__BackingField'''': false,\r\n  ''''<Ja>k__BackingField'''': false,\r\n  ''''<Handlungsbedarf>k__BackingField'''': false,\r\n  ''''<Beratungsbedarf>k__BackingField'''': false,\r\n  ''''<Unzutreffend>k__BackingField'''': false,\r\n  ''''<Unbeantwortet>k__BackingField'''': false\r\n}'', json)", span="8267-8274"];
m20_3447 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", span="8256-8256"];
m20_1292 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", span="2905-2905"];
m20_320 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m20_154 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="481-481"];
m20_155 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="DateTime dateValue = new DateTime(2010, 3, 30)", span="483-483"];
m20_156 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Dictionary<string, object> testDictionary = new Dictionary<string, object>()", span="484-484"];
m20_157 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="testDictionary[''date''] = dateValue", span="485-485"];
m20_166 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dateValue, deserializedDate)", span="501-501"];
m20_158 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(testDictionary)", span="487-487"];
m20_161 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="serializer.WriteObject(ms, testDictionary)", span="492-492"];
m20_159 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="490-490"];
m20_164 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Dictionary<string, object> deserializedDictionary = (Dictionary<string, object>)JsonConvert.DeserializeObject(jsonText, typeof(Dictionary<string, object>))", span="498-498"];
m20_160 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(typeof(Dictionary<string, object>))", span="491-491"];
m20_162 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="byte[] data = ms.ToArray()", span="494-494"];
m20_163 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="string output = Encoding.UTF8.GetString(data, 0, data.Length)", span="495-495"];
m20_165 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="DateTime deserializedDate = (DateTime)deserializedDictionary[''date'']", span="499-499"];
m20_167 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="481-481"];
m20_967 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="2179-2179"];
m20_968 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="string json = @''{''''Operation'''':''''1'''',''''RoleName'''':''''Admin'''',''''Direction'''':''''0''''}''", span="2181-2181"];
m20_969 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="RoleTransfer r = JsonConvert.DeserializeObject<RoleTransfer>(json)", span="2183-2183"];
m20_970 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(RoleTransferOperation.Second, r.Operation)", span="2185-2185"];
m20_971 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Admin'', r.RoleName)", span="2186-2186"];
m20_972 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(RoleTransferDirection.First, r.Direction)", span="2187-2187"];
m20_973 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="2179-2179"];
m20_3595 [cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetroStringConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8844-8844"];
m20_3596 [cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="string s = (string)reader.Value", span="8846-8846"];
m20_3597 [cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="s == null", span="8847-8847"];
m20_3599 [cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="return s.ToLower(CultureInfo.InvariantCulture).Trim(new[] { ':' });", span="8851-8851"];
m20_3598 [cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="return null;", span="8848-8848"];
m20_3600 [cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetroStringConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8844-8844"];
m20_1953 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m20_2086 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", span="4807-4807"];
m20_2087 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", file="JsonSerializerTest.cs", label="IDontWork = dontWork", span="4809-4809"];
m20_2088 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", span="4807-4807"];
m20_1256 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", span="31-31"];
m20_947 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="2111-2111"];
m20_948 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs", label="var value = new\r\n        {\r\n          bar = new JObject(new JProperty(''baz'', 13))\r\n        }", span="2113-2116"];
m20_949 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(value)", span="2118-2118"];
m20_950 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''bar'''':{''''baz'''':13}}'', json)", span="2120-2120"];
m20_951 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="2111-2111"];
m20_1734 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="4031-4031"];
m20_1735 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="List<string> existingStrings = (List<string>)existingValue", span="4033-4033"];
m20_1737 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="reader.Read()", span="4036-4036"];
m20_1738 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="reader.TokenType != JsonToken.EndArray", span="4038-4038"];
m20_1739 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="string s = (string)reader.Value", span="4040-4040"];
m20_1741 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="reader.Read()", span="4043-4043"];
m20_1736 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="List<string> newStrings = new List<string>(existingStrings)", span="4034-4034"];
m20_1740 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="newStrings.Add(s)", span="4041-4041"];
m20_1742 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="return newStrings;", span="4046-4046"];
m20_1743 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="4031-4031"];
m20_1581 [cluster="System.Type.GetField(string, System.Reflection.BindingFlags)", file="JsonSerializerTest.cs", label="Entry System.Type.GetField(string, System.Reflection.BindingFlags)", span="0-0"];
m20_2734 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", span="6354-6354"];
m20_2735 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="DateTimeTestClass c =\r\n        JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n          @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'',\r\n          new JsonSerializerSettings\r\n          {\r\n            DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n          })", span="6356-6362"];
m20_2736 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="6364-6364"];
m20_2737 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="6365-6365"];
m20_2738 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Pre'', c.PreField)", span="6366-6366"];
m20_2739 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Post'', c.PostField)", span="6367-6367"];
m20_2740 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="DateTimeTestClass c2 =\r\n        JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n          @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-01-01T01:01:01Z'''',''''DateTimeOffsetField'''':''''2008-01-01T01:01:01Z'''',''''PostField'''':''''Post''''}'',\r\n          new JsonSerializerSettings\r\n          {\r\n            DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n          })", span="6369-6375"];
m20_2741 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2008, 1, 1, 1, 1, 1, 0, DateTimeKind.Utc).ToLocalTime(), c2.DateTimeField)", span="6377-6377"];
m20_2742 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(2008, 1, 1, 1, 1, 1, 0, TimeSpan.Zero), c2.DateTimeOffsetField)", span="6378-6378"];
m20_2743 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Pre'', c2.PreField)", span="6379-6379"];
m20_2744 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Post'', c2.PostField)", span="6380-6380"];
m20_2745 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", span="6354-6354"];
m20_1450 [cluster="System.Runtime.Serialization.SerializationInfo.GetSByte(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetSByte(string)", span="0-0"];
m20_2591 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", span="6070-6070"];
m20_2592 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''Integer'''': 1,\r\n  ''''NullableInteger1'''': 2,\r\n  ''''NullableInteger2'''': null\r\n}''", span="6072-6076"];
m20_2593 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Error converting value 1 to type 'Newtonsoft.Json.Tests.ConvertibleInt'. Path 'Integer', line 2, position 15.'',\r\n        () => JsonConvert.DeserializeObject<ConvertableIntTestClass>(json))", span="6078-6080"];
m20_2594 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", span="6070-6070"];
m20_448 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", span="35-35"];
m20_2713 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", span="6311-6311"];
m20_2714 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonSerializerTest.cs", label="byte[] b = JsonConvert.DeserializeObject<byte[]>('''')", span="6313-6313"];
m20_2715 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonSerializerTest.cs", label="Assert.IsNull(b)", span="6314-6314"];
m20_2716 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", span="6311-6311"];
m20_3396 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", span="8124-8124"];
m20_3397 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs", label="IDictionary<string, object> dates = new Dictionary<string, object>\r\n        {\r\n          {''DateTime-Unspecified'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Unspecified)},\r\n          {''DateTime-Utc'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)},\r\n          {''DateTime-Local'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Local)},\r\n          {''DateTimeOffset-Zero'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)},\r\n          {''DateTimeOffset-Plus1'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))},\r\n          {''DateTimeOffset-Plus15'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1.5))}\r\n        }", span="8126-8134"];
m20_3398 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs", label="string expected = JsonConvert.SerializeObject(dates, Formatting.Indented)", span="8136-8136"];
m20_3400 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs", label="string actual = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          DateFormatString = JsonSerializerSettings.DefaultDateFormatString\r\n        })", span="8140-8143"];
m20_3399 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs", label="Console.WriteLine(expected)", span="8138-8138"];
m20_3401 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs", label="Console.WriteLine(expected)", span="8145-8145"];
m20_3402 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expected, actual)", span="8147-8147"];
m20_3403 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", span="8124-8124"];
m20_2584 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", span="6051-6051"];
m20_2585 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs", label="ConvertableIntTestClass c = new ConvertableIntTestClass\r\n      {\r\n        Integer = new ConvertibleInt(1),\r\n        NullableInteger1 = new ConvertibleInt(2),\r\n        NullableInteger2 = null\r\n      }", span="6053-6058"];
m20_2586 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="6060-6060"];
m20_2587 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Integer'''': 1,\r\n  ''''NullableInteger1'''': 2,\r\n  ''''NullableInteger2'''': null\r\n}'', json)", span="6062-6066"];
m20_2588 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", span="6051-6051"];
m20_362 [cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", span="722-722"];
m20_608 [cluster="System.Convert.ToDateTime(string)", file="JsonSerializerTest.cs", label="Entry System.Convert.ToDateTime(string)", span="0-0"];
m20_836 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="585-585"];
m20_339 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="857-857"];
m20_340 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Dictionary<int, int> values = new Dictionary<int, int>()", span="859-859"];
m20_341 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="values.Add(-5, 6)", span="860-860"];
m20_342 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="values.Add(int.MinValue, int.MaxValue)", span="861-861"];
m20_343 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(values)", span="863-863"];
m20_346 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(values, newValues)", span="869-869"];
m20_344 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''-5'''':6,''''-2147483648'''':2147483647}'', json)", span="865-865"];
m20_345 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Dictionary<int, int> newValues = JsonConvert.DeserializeObject<Dictionary<int, int>>(json)", span="867-867"];
m20_347 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="857-857"];
m20_3020 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="7004-7004"];
m20_3021 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="return ''X'';", span="7006-7006"];
m20_3022 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="7004-7004"];
m20_3601 [cluster="string.ToLower(System.Globalization.CultureInfo)", file="JsonSerializerTest.cs", label="Entry string.ToLower(System.Globalization.CultureInfo)", span="0-0"];
m20_2424 [cluster="System.TimeSpan.FromDays(double)", file="JsonSerializerTest.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m20_62 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="529-529"];
m20_525 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="1191-1191"];
m20_526 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="ConstructorCaseSensitivityClass c = new ConstructorCaseSensitivityClass(''param1'', ''Param1'', ''Param2'')", span="1193-1193"];
m20_527 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c)", span="1195-1195"];
m20_528 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="ConstructorCaseSensitivityClass deserialized = JsonConvert.DeserializeObject<ConstructorCaseSensitivityClass>(json)", span="1197-1197"];
m20_529 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''param1'', deserialized.param1)", span="1199-1199"];
m20_530 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Param1'', deserialized.Param1)", span="1200-1200"];
m20_531 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Param2'', deserialized.Param2)", span="1201-1201"];
m20_532 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="1191-1191"];
m20_1173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="2637-2637"];
m20_1174 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="ConstructorReadonlyFields c1 = new ConstructorReadonlyFields(''String!'', int.MaxValue)", span="2639-2639"];
m20_1175 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="2640-2640"];
m20_1176 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''A'''': ''''String!'''',\r\n  ''''B'''': 2147483647\r\n}'', json)", span="2641-2644"];
m20_1177 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="ConstructorReadonlyFields c2 = JsonConvert.DeserializeObject<ConstructorReadonlyFields>(json)", span="2646-2646"];
m20_1178 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''String!'', c2.A)", span="2647-2647"];
m20_1179 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, c2.B)", span="2648-2648"];
m20_1180 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="2637-2637"];
m20_3508 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="8406-8406"];
m20_3509 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="return _dictionary.GetEnumerator();", span="8408-8408"];
m20_3510 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="8406-8406"];
m20_3603 [cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetroStringConverter.CanConvert(System.Type)", span="8857-8857"];
m20_3604 [cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="return objectType == typeof(string);", span="8859-8859"];
m20_3605 [cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetroStringConverter.CanConvert(System.Type)", span="8857-8857"];
m20_523 [cluster="Newtonsoft.Json.Tests.TestObjects.Name.Name(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Name.Name(string)", span="35-35"];
m20_2145 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", span="4974-4974"];
m20_2146 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", file="JsonSerializerTest.cs", label="Constructor = ''NonPublic''", span="4976-4976"];
m20_2147 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", span="4974-4974"];
m20_1664 [cluster="System.Type.IsAssignableFrom(System.Type)", file="JsonSerializerTest.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m20_2605 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", span="6095-6095"];
m20_2606 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="string json = @''{''''Id'''':{''''Value'''':''''id''''}}''", span="6097-6097"];
m20_2607 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Widget w = JsonConvert.DeserializeObject<Widget>(json)", span="6099-6099"];
m20_2608 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new WidgetId { Value = ''id'' }, w.Id)", span="6101-6101"];
m20_2609 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new WidgetId { Value = ''id'' }, w.Id.Value)", span="6102-6102"];
m20_2610 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''id'', w.Id.Value.Value)", span="6103-6103"];
m20_2611 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", span="6095-6095"];
m20_1207 [cluster="Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", span="31-31"];
m20_1099 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", span="2472-2472"];
m20_1100 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonSerializerTest.cs", label="string json = @''new Constructor(123)''", span="2474-2474"];
m20_1101 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Error converting value ''''Constructor'''' to type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '', line 1, position 16.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<Person>(json);\r\n        })", span="2476-2481"];
m20_1102 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", span="2472-2472"];
m20_3542 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList()", span="8501-8501"];
m20_3543 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList()", span="8501-8501"];
m20_2193 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="5092-5092"];
m20_2194 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs", label="ComplexItem i = new ComplexItem()", span="5094-5094"];
m20_2195 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(i, Formatting.Indented)", span="5096-5096"];
m20_2196 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Name'''': null\r\n}'', json)", span="5098-5100"];
m20_2197 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="5092-5092"];
m20_3001 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="300-300"];
m20_144 [cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", span="29-29"];
m20_2192 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass.EnumerableClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass.EnumerableClass()", span="5049-5049"];
m20_235 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m20_169 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="505-505"];
m20_170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="MethodExecutorObject executorObject = new MethodExecutorObject()", span="507-507"];
m20_171 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="executorObject.serverClassName = ''BanSubs''", span="508-508"];
m20_172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="executorObject.serverMethodParams = new object[] { ''21321546'', ''101'', ''1236'', ''D:\\1.txt'' }", span="509-509"];
m20_173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="executorObject.clientGetResultFunction = ''ClientBanSubsCB''", span="510-510"];
m20_174 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="string output = JsonConvert.SerializeObject(executorObject)", span="512-512"];
m20_176 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Assert.AreNotSame(executorObject, executorObject2)", span="516-516"];
m20_175 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="MethodExecutorObject executorObject2 = JsonConvert.DeserializeObject(output, typeof(MethodExecutorObject)) as MethodExecutorObject", span="514-514"];
m20_177 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(executorObject2.serverClassName, ''BanSubs'')", span="517-517"];
m20_178 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(executorObject2.serverMethodParams.Length, 4)", span="518-518"];
m20_179 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="CustomAssert.Contains(executorObject2.serverMethodParams, ''101'')", span="519-519"];
m20_180 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(executorObject2.clientGetResultFunction, ''ClientBanSubsCB'')", span="520-520"];
m20_181 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="505-505"];
m20_277 [cluster="System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", file="JsonSerializerTest.cs", label="Entry System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", span="0-0"];
m20_2529 [cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="JsonSerializerTest.cs", label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0"];
m20_309 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="801-801"];
m20_310 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="List<DateTime> testDates = new List<DateTime>\r\n        {\r\n          new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n          new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n          new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n          new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n          new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n          new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n        }", span="803-811"];
m20_311 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="813-813"];
m20_313 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="s.WriteObject(ms, testDates)", span="815-815"];
m20_317 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(testDates, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="821-821"];
m20_312 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<DateTime>))", span="814-814"];
m20_314 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="816-816"];
m20_315 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="StreamReader sr = new StreamReader(ms)", span="817-817"];
m20_316 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="string expected = sr.ReadToEnd()", span="819-819"];
m20_318 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expected, result)", span="822-822"];
m20_319 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="801-801"];
m20_2769 [cluster="Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.CreatePerson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.CreatePerson()", span="8637-8637"];
m20_3562 [cluster="Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.CreatePerson()", file="JsonSerializerTest.cs", label="return new PersonWithPrivateConstructor();", span="8639-8639"];
m20_3563 [cluster="Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.CreatePerson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.CreatePerson()", span="8637-8637"];
m20_946 [cluster="System.Uri.ToString()", file="JsonSerializerTest.cs", label="Entry System.Uri.ToString()", span="0-0"];
m20_3376 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", span="8089-8089"];
m20_3377 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs", label="string json = @''[999999999999999999999999999999999999999999999999]''", span="8091-8091"];
m20_3378 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs", label="IList<BigInteger> l = JsonConvert.DeserializeObject<IList<BigInteger>>(json)", span="8093-8093"];
m20_3380 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Error converting value 999999999999999999999999999999999999999999999999 to type 'System.Int64'. Path '[0]', line 1, position 49.'',\r\n        () => JsonConvert.DeserializeObject<IList<long>>(json))", span="8097-8099"];
m20_3379 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs", label="Assert.AreEqual(BigInteger.Parse(''999999999999999999999999999999999999999999999999''), l[0])", span="8095-8095"];
m20_3381 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", span="8089-8089"];
m20_2343 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CollectionClassAttributeDerived()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CollectionClassAttributeDerived()", span="5480-5480"];
m20_3016 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="6999-6999"];
m20_3017 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="writer.WriteValue(''X'')", span="7001-7001"];
m20_3018 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="6999-6999"];
m20_3148 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", span="7377-7377"];
m20_3149 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''NonReadOnlyList'''': [\r\n    11\r\n  ],\r\n  ''''NonReadOnlyDictionary'''': {\r\n    ''''first'''': 12\r\n  },\r\n  ''''Array'''': [\r\n    13\r\n  ],\r\n  ''''List'''': [\r\n    14\r\n  ],\r\n  ''''Dictionary'''': {\r\n    ''''first'''': 15\r\n  },\r\n  ''''IReadOnlyCollection'''': [\r\n    16\r\n  ],\r\n  ''''ReadOnlyCollection'''': [\r\n    17\r\n  ],\r\n  ''''IReadOnlyList'''': [\r\n    18\r\n  ],\r\n  ''''IReadOnlyDictionary'''': {\r\n    ''''first'''': 19\r\n  },\r\n  ''''ReadOnlyDictionary'''': {\r\n    ''''first'''': 20\r\n  }\r\n}''", span="7379-7410"];
m20_3150 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", file="JsonSerializerTest.cs", label="var c2 = JsonConvert.DeserializeObject<PopulateReadOnlyTestClass>(json)", span="7412-7412"];
m20_3151 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c2.NonReadOnlyDictionary.Count)", span="7414-7414"];
m20_3152 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", file="JsonSerializerTest.cs", label="Assert.AreEqual(12, c2.NonReadOnlyDictionary[''first''])", span="7415-7415"];
m20_3153 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, c2.NonReadOnlyList.Count)", span="7417-7417"];
m20_3154 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c2.NonReadOnlyList[0])", span="7418-7418"];
m20_3155 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", file="JsonSerializerTest.cs", label="Assert.AreEqual(11, c2.NonReadOnlyList[1])", span="7419-7419"];
m20_3156 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c2.Array.Count)", span="7421-7421"];
m20_3157 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", file="JsonSerializerTest.cs", label="Assert.AreEqual(13, c2.Array[0])", span="7422-7422"];
m20_3158 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", span="7377-7377"];
m20_2246 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableArrayPropertyClass.EnumerableArrayPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableArrayPropertyClass.EnumerableArrayPropertyClass()", span="5237-5237"];
m20_3344 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="7993-7993"];
m20_3345 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs", label="IList<object> dates = new List<object>\r\n        {\r\n          new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n          new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n        }", span="7995-7999"];
m20_3346 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          DateFormatString = ''yyyy tt'',\r\n          Culture = new CultureInfo(''en-NZ'')\r\n        })", span="8001-8005"];
m20_3347 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="8007-8010"];
m20_3348 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="7993-7993"];
m20_877 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", span="1892-1892"];
m20_30 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="516-516"];
m20_541 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", span="32-32"];
m20_2327 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", span="5515-5515"];
m20_2328 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="5517-5517"];
m20_2329 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", span="5515-5515"];
m20_2770 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="6425-6425"];
m20_2771 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="Product product = new Product()", span="6427-6427"];
m20_2772 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="product.Name = ''Apple''", span="6428-6428"];
m20_2773 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="product.ExpiryDate = new DateTime(2012, 4, 1)", span="6429-6429"];
m20_2774 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="product.Price = 3.99M", span="6430-6430"];
m20_2775 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="product.Sizes = new[] { ''Small'', ''Medium'', ''Large'' }", span="6431-6431"];
m20_2776 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(product)", span="6433-6433"];
m20_2777 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="string metroJson = JsonConvert.SerializeObject(product, new JsonSerializerSettings\r\n        {\r\n          ContractResolver = new MetroPropertyNameResolver(),\r\n          Converters = { new MetroStringConverter() },\r\n          Formatting = Formatting.Indented\r\n        })", span="6441-6446"];
m20_2778 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  '''':::NAME:::'''': '''':::APPLE:::'''',\r\n  '''':::EXPIRYDATE:::'''': ''''2012-04-01T00:00:00'''',\r\n  '''':::PRICE:::'''': 3.99,\r\n  '''':::SIZES:::'''': [\r\n    '''':::SMALL:::'''',\r\n    '''':::MEDIUM:::'''',\r\n    '''':::LARGE:::''''\r\n  ]\r\n}'', metroJson)", span="6447-6456"];
m20_2779 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="Color[] colors = new[] { Color.Blue, Color.Red, Color.Yellow, Color.Green, Color.Black, Color.Brown }", span="6464-6464"];
m20_2780 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="string json2 = JsonConvert.SerializeObject(colors, new JsonSerializerSettings\r\n      {\r\n        ContractResolver = new MetroPropertyNameResolver(),\r\n        Converters = { new MetroStringConverter(), new MetroColorConverter() },\r\n        Formatting = Formatting.Indented\r\n      })", span="6466-6471"];
m20_2781 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::BLACK:::'''',\r\n  '''':::GRAY:::''''\r\n]'', json2)", span="6473-6480"];
m20_2782 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="6425-6425"];
m20_2148 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", span="4979-4979"];
m20_2149 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonSerializerTest.cs", label="Value = value", span="4981-4981"];
m20_2150 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonSerializerTest.cs", label="Constructor = ''Public Paramatized''", span="4982-4982"];
m20_2151 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", span="4979-4979"];
m20_1113 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="2498-2498"];
m20_1114 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs", label="string json = @''{}''", span="2500-2500"];
m20_1115 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot deserialize the current JSON object (e.g. {''''name'''':''''value''''}) into type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Person]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.\r\nPath '', line 1, position 2.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<List<Person>>(json);\r\n        })", span="2502-2509"];
m20_1116 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="2498-2498"];
m20_771 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="LogEntry entry = new LogEntry\r\n        {\r\n          LogDate = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc),\r\n          Details = ''Application started.''\r\n        }", span="1676-1680"];
m20_770 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="1674-1674"];
m20_772 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="string defaultJson = JsonConvert.SerializeObject(entry)", span="1682-1682"];
m20_773 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="string isoJson = JsonConvert.SerializeObject(entry, new IsoDateTimeConverter())", span="1685-1685"];
m20_774 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="string javascriptJson = JsonConvert.SerializeObject(entry, new JavaScriptDateTimeConverter())", span="1688-1688"];
m20_775 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Console.WriteLine(defaultJson)", span="1691-1691"];
m20_776 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Console.WriteLine(isoJson)", span="1692-1692"];
m20_777 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Console.WriteLine(javascriptJson)", span="1693-1693"];
m20_778 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="1674-1674"];
m20_1413 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", span="3308-3308"];
m20_1414 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs", label="_stringValue = stringValue", span="3310-3310"];
m20_1415 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs", label="_intValue = intValue", span="3311-3311"];
m20_1416 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs", label="_dateTimeOffsetValue = dateTimeOffset", span="3312-3312"];
m20_1417 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs", label="_personValue = personValue", span="3313-3313"];
m20_1418 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs", label="_dateTimeValue = new DateTime(0, DateTimeKind.Utc)", span="3314-3314"];
m20_1419 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", span="3308-3308"];
m20_1733 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(object)", span="1198-1198"];
m20_583 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", span="1287-1287"];
m20_584 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="1289-1289"];
m20_585 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="1290-1290"];
m20_589 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="1300-1300"];
m20_590 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.MemberConverter)", span="1301-1301"];
m20_586 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n      {\r\n        DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n      })", span="1292-1295"];
m20_587 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':''''1970-01-01T00:00:00Z'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="1296-1296"];
m20_588 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="1298-1298"];
m20_591 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", span="1287-1287"];
m20_656 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString()", span="752-752"];
m20_1282 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="2953-2953"];
m20_1283 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="ThisGenericTest<KeyValueId> g = new ThisGenericTest<KeyValueId>()", span="2955-2955"];
m20_1284 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="g.Add(new KeyValueId { Id = 1, Key = ''key1'', Value = ''value1'' })", span="2957-2957"];
m20_1285 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="g.Add(new KeyValueId { Id = 2, Key = ''key2'', Value = ''value2'' })", span="2958-2958"];
m20_1286 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="g.MyProperty = ''some value''", span="2960-2960"];
m20_1287 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="string json = g.ToJson()", span="2962-2962"];
m20_1288 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''MyProperty'''': ''''some value'''',\r\n  ''''TheItems'''': [\r\n    {\r\n      ''''Id'''': 1,\r\n      ''''Key'''': ''''key1'''',\r\n      ''''Value'''': ''''value1''''\r\n    },\r\n    {\r\n      ''''Id'''': 2,\r\n      ''''Key'''': ''''key2'''',\r\n      ''''Value'''': ''''value2''''\r\n    }\r\n  ]\r\n}'', json)", span="2964-2978"];
m20_1289 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="ThisGenericTest<KeyValueId> gen = JsonConvert.DeserializeObject<ThisGenericTest<KeyValueId>>(json)", span="2980-2980"];
m20_1290 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''some value'', gen.MyProperty)", span="2981-2981"];
m20_1291 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="2953-2953"];
m20_3437 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", span="8244-8244"];
m20_3438 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''1234567890.123456''))", span="8246-8246"];
m20_3439 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs", label="var settings = new JsonSerializerSettings()", span="8247-8247"];
m20_3441 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs", label="decimal? d = serialiser.Deserialize<decimal?>(reader)", span="8249-8249"];
m20_3440 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs", label="var serialiser = JsonSerializer.Create(settings)", span="8248-8248"];
m20_3442 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1234567890.123456m, d)", span="8251-8251"];
m20_3443 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", span="8244-8244"];
m20_29 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m20_780 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="1696-1696"];
m20_781 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="GenericListAndDictionaryInterfaceProperties o = new GenericListAndDictionaryInterfaceProperties()", span="1698-1698"];
m20_782 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="o.IDictionaryProperty = new Dictionary<string, int>\r\n        {\r\n          {''one'', 1},\r\n          {''two'', 2},\r\n          {''three'', 3}\r\n        }", span="1699-1704"];
m20_783 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="o.IListProperty = new List<int>\r\n        {\r\n          1, 2, 3\r\n        }", span="1705-1708"];
m20_784 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="o.IEnumerableProperty = new List<int>\r\n        {\r\n          4, 5, 6\r\n        }", span="1709-1712"];
m20_785 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="1714-1714"];
m20_789 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(o.IListProperty.ToArray(), deserializedObject.IListProperty.ToArray())", span="1737-1737"];
m20_790 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(o.IEnumerableProperty.ToArray(), deserializedObject.IEnumerableProperty.ToArray())", span="1738-1738"];
m20_791 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(o.IDictionaryProperty.ToArray(), deserializedObject.IDictionaryProperty.ToArray())", span="1739-1739"];
m20_786 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''IEnumerableProperty'''': [\r\n    4,\r\n    5,\r\n    6\r\n  ],\r\n  ''''IListProperty'''': [\r\n    1,\r\n    2,\r\n    3\r\n  ],\r\n  ''''IDictionaryProperty'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2,\r\n    ''''three'''': 3\r\n  }\r\n}'', json)", span="1716-1732"];
m20_787 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="GenericListAndDictionaryInterfaceProperties deserializedObject = JsonConvert.DeserializeObject<GenericListAndDictionaryInterfaceProperties>(json)", span="1734-1734"];
m20_788 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(deserializedObject)", span="1735-1735"];
m20_792 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="1696-1696"];
m20_146 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", span="469-469"];
m20_147 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="471-471"];
m20_148 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Product p = JsonConvert.DeserializeObject(value, typeof(Product)) as Product", span="473-473"];
m20_149 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Orange'', p.Name)", span="475-475"];
m20_150 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2010, 1, 24, 12, 0, 0), p.ExpiryDate)", span="476-476"];
m20_151 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3.99m, p.Price)", span="477-477"];
m20_152 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", span="469-469"];
m20_348 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m20_1635 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", span="3777-3777"];
m20_691 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="1476-1476"];
m20_692 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="RequiredMembersClass c = new RequiredMembersClass()\r\n        {\r\n          BirthDate = new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc),\r\n          FirstName = ''Bob'',\r\n          LastName = ''Smith'',\r\n          MiddleName = ''Cosmo''\r\n        }", span="1478-1484"];
m20_693 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="1486-1486"];
m20_694 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''FirstName'''': ''''Bob'''',\r\n  ''''MiddleName'''': ''''Cosmo'''',\r\n  ''''LastName'''': ''''Smith'''',\r\n  ''''BirthDate'''': ''''2000-12-20T10:55:55Z''''\r\n}'', json)", span="1488-1493"];
m20_695 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="RequiredMembersClass c2 = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="1495-1495"];
m20_696 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Bob'', c2.FirstName)", span="1497-1497"];
m20_697 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc), c2.BirthDate)", span="1498-1498"];
m20_698 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="1476-1476"];
m20_1392 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="3255-3255"];
m20_1393 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonSerializerTest.cs", label="return _innerDictionary.Remove(key);", span="3257-3257"];
m20_1394 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="3255-3255"];
m20_388 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="726-726"];
m20_479 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="1101-1101"];
m20_480 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(StringComparison.CurrentCultureIgnoreCase)", span="1103-1103"];
m20_481 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''1'', json)", span="1104-1104"];
m20_482 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="StringComparison s = JsonConvert.DeserializeObject<StringComparison>(json)", span="1106-1106"];
m20_483 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(StringComparison.CurrentCultureIgnoreCase, s)", span="1107-1107"];
m20_484 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="1101-1101"];
m20_190 [cluster="object.ToString()", file="JsonSerializerTest.cs", label="Entry object.ToString()", span="0-0"];
m20_1646 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", span="3867-3867"];
m20_1757 [cluster="Newtonsoft.Json.Tests.TestObjects.Movie.Movie()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Movie.Movie()", span="30-30"];
m20_3039 [cluster="Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", span="38-38"];
m20_3488 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionary()", span="8352-8352"];
m20_3489 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionary()", file="JsonSerializerTest.cs", label="ReadOnlyDictionary<string, int> dic = JsonConvert.DeserializeObject<ReadOnlyDictionary<string, int>>(''{'one':1,'two':2}'')", span="8354-8354"];
m20_3490 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic.Count)", span="8356-8356"];
m20_3491 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, dic[''one''])", span="8358-8358"];
m20_3492 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic[''two''])", span="8359-8359"];
m20_3493 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionary()", span="8352-8352"];
m20_2078 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", span="4748-4748"];
m20_2958 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", span="6860-6860"];
m20_2959 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="DataContractSerializationAttributesClass dataContract = new DataContractSerializationAttributesClass\r\n        {\r\n          NoAttribute = ''Value!'',\r\n          IgnoreDataMemberAttribute = ''Value!'',\r\n          DataMemberAttribute = ''Value!'',\r\n          IgnoreDataMemberAndDataMemberAttribute = ''Value!''\r\n        }", span="6862-6868"];
m20_2960 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dataContract, Formatting.Indented)", span="6876-6876"];
m20_2961 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''DataMemberAttribute'''': ''''Value!'''',\r\n  ''''IgnoreDataMemberAndDataMemberAttribute'''': ''''Value!''''\r\n}'', json)", span="6877-6880"];
m20_2962 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="PocoDataContractSerializationAttributesClass poco = new PocoDataContractSerializationAttributesClass\r\n      {\r\n        NoAttribute = ''Value!'',\r\n        IgnoreDataMemberAttribute = ''Value!'',\r\n        DataMemberAttribute = ''Value!'',\r\n        IgnoreDataMemberAndDataMemberAttribute = ''Value!''\r\n      }", span="6882-6888"];
m20_2963 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(poco, Formatting.Indented)", span="6890-6890"];
m20_2964 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''NoAttribute'''': ''''Value!'''',\r\n  ''''DataMemberAttribute'''': ''''Value!''''\r\n}'', json)", span="6891-6894"];
m20_2965 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", span="6860-6860"];
m20_2462 [cluster="Newtonsoft.Json.Tests.Serialization.GameObject.GameObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.GameObject.GameObject()", span="8778-8778"];
m20_3583 [cluster="Newtonsoft.Json.Tests.Serialization.GameObject.GameObject()", file="JsonSerializerTest.cs", label="Components = new ConcurrentDictionary<string, Component>()", span="8780-8780"];
m20_3584 [cluster="Newtonsoft.Json.Tests.Serialization.GameObject.GameObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.GameObject.GameObject()", span="8778-8778"];
m20_3258 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", span="7677-7677"];
m20_3259 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="JsonSerializerTest.cs", label="Array3D aa = new Array3D()", span="7679-7679"];
m20_3260 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="JsonSerializerTest.cs", label="aa.Before = ''Before!''", span="7680-7680"];
m20_3261 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="JsonSerializerTest.cs", label="aa.After = ''After!''", span="7681-7681"];
m20_3262 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="JsonSerializerTest.cs", label="aa.Coordinates = new int[0, 0, 0]", span="7682-7682"];
m20_3263 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(aa)", span="7684-7684"];
m20_3264 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[],''''After'''':''''After!''''}'', json)", span="7686-7686"];
m20_3265 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", span="7677-7677"];
m20_185 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="525-525"];
m20_186 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="527-527"];
m20_187 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="Hashtable p = JsonConvert.DeserializeObject(value, typeof(Hashtable)) as Hashtable", span="529-529"];
m20_188 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Orange'', p[''Name''].ToString())", span="531-531"];
m20_189 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="525-525"];
m20_386 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="427-427"];
m20_2435 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", span="5788-5788"];
m20_2436 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="object o = new { p = 1 }", span="5791-5791"];
m20_2437 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="var json = JObject.FromObject(o)", span="5793-5793"];
m20_2438 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="var sw = new StringWriter()", span="5795-5795"];
m20_2440 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="jw.WriteToken(json.CreateReader())", span="5798-5798"];
m20_2439 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="var jw = new JsonTextWriter(sw)", span="5796-5796"];
m20_2442 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="string result = sw.ToString()", span="5801-5801"];
m20_2441 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="jw.Flush()", span="5799-5799"];
m20_2443 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''p'''':1}'', result)", span="5802-5802"];
m20_2444 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", span="5788-5788"];
m20_2121 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="4902-4902"];
m20_2122 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonSerializerTest.cs", label="return JsonConvert.DeserializeObject<NullableStructPropertyClass>(\r\n        serStr,\r\n        new JsonSerializerSettings\r\n          {\r\n            NullValueHandling = NullValueHandling.Ignore,\r\n            MissingMemberHandling = MissingMemberHandling.Ignore\r\n          });", span="4904-4910"];
m20_2123 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="4902-4902"];
m20_204 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="706-706"];
m20_1319 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="3067-3067"];
m20_1320 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs", label="B value = new B()", span="3069-3069"];
m20_1321 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(value, Formatting.Indented)", span="3070-3070"];
m20_1322 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''B2'''': null,\r\n  ''''A1'''': null,\r\n  ''''B3'''': null,\r\n  ''''A2'''': null\r\n}'', json)", span="3072-3077"];
m20_1323 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="3067-3067"];
m20_1382 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="3237-3237"];
m20_1383 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="dictionary == null", span="3239-3239"];
m20_1385 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label=dictionary, span="3244-3244"];
m20_1384 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="return;", span="3241-3241"];
m20_1386 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="this[entry.Key] = entry.Value", span="3246-3246"];
m20_1387 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="3237-3237"];
m20_3547 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListConstructor()", span="8513-8513"];
m20_3548 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListConstructor()", file="JsonSerializerTest.cs", label="var list = JsonConvert.DeserializeObject<PrivateDefaultCtorWithIEnumerableCtorList<int>>(''[1,2]'')", span="8515-8515"];
m20_3549 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, list.Count)", span="8517-8517"];
m20_3550 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, list[0])", span="8518-8518"];
m20_3551 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, list[1])", span="8519-8519"];
m20_3552 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, list[2])", span="8520-8520"];
m20_3553 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListConstructor()", span="8513-8513"];
m20_3251 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooFewItems()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooFewItems()", span="7667-7667"];
m20_3252 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooFewItems()", file="JsonSerializerTest.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],[2,2,2]]],''''After'''':''''After!''''}''", span="7669-7669"];
m20_3253 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooFewItems()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<Exception>(\r\n        ''Cannot deserialize non-cubical array as multidimensional array.'',\r\n        () => JsonConvert.DeserializeObject<Array3D>(json))", span="7671-7673"];
m20_3254 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooFewItems()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooFewItems()", span="7667-7667"];
m20_1399 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m20_218 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", span="27-27"];
m20_2819 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="1730-1730"];
m20_2040 [cluster="Unk.SerializeObject", file="JsonSerializerTest.cs", label="Entry Unk.SerializeObject", span=""];
m20_563 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", span="1246-1246"];
m20_564 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="1248-1248"];
m20_565 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="1249-1249"];
m20_569 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="1259-1259"];
m20_570 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.MemberConverter)", span="1260-1260"];
m20_566 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n        {\r\n          DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n        })", span="1251-1254"];
m20_567 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="1255-1255"];
m20_568 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="1257-1257"];
m20_571 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", span="1246-1246"];
m20_1832 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", span="4201-4201"];
m20_1833 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs", label="string json = @''{'value':9.9}''", span="4203-4203"];
m20_1834 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs", label="var dic = JsonConvert.DeserializeObject<IDictionary<string, object>>(\r\n        json, new JsonSerializerSettings\r\n                {\r\n                  FloatParseHandling = FloatParseHandling.Decimal\r\n                })", span="4205-4209"];
m20_1835 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(decimal), dic[''value''].GetType())", span="4211-4211"];
m20_1836 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs", label="Assert.AreEqual(9.9m, dic[''value''])", span="4212-4212"];
m20_1837 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", span="4201-4201"];
m20_2723 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", span="6330-6330"];
m20_2724 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<ArgumentNullException>(\r\n        @''Value cannot be null.\r\nParameter name: value'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject(null);\r\n        })", span="6332-6338"];
m20_2725 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", span="6330-6330"];
m20_2679 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", span="6248-6248"];
m20_2680 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="object v = JsonConvert.DeserializeObject<double?>('''')", span="6250-6250"];
m20_2681 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Assert.IsNull(v)", span="6251-6251"];
m20_2682 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="v = JsonConvert.DeserializeObject<char?>('''')", span="6253-6253"];
m20_2683 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Assert.IsNull(v)", span="6254-6254"];
m20_2684 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="v = JsonConvert.DeserializeObject<int?>('''')", span="6256-6256"];
m20_2685 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Assert.IsNull(v)", span="6257-6257"];
m20_2686 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="v = JsonConvert.DeserializeObject<decimal?>('''')", span="6259-6259"];
m20_2687 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Assert.IsNull(v)", span="6260-6260"];
m20_2688 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="v = JsonConvert.DeserializeObject<DateTime?>('''')", span="6262-6262"];
m20_2689 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Assert.IsNull(v)", span="6263-6263"];
m20_2690 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="v = JsonConvert.DeserializeObject<DateTimeOffset?>('''')", span="6265-6265"];
m20_2691 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Assert.IsNull(v)", span="6266-6266"];
m20_2692 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="v = JsonConvert.DeserializeObject<byte[]>('''')", span="6268-6268"];
m20_2693 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Assert.IsNull(v)", span="6269-6269"];
m20_2694 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", span="6248-6248"];
m20_2695 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", span="6278-6278"];
m20_2696 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''No JSON content found and type 'System.Double' is not nullable. Path '', line 0, position 0.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<double>('''');\r\n        })", span="6280-6285"];
m20_2697 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", span="6278-6278"];
m20_1370 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="3222-3222"];
m20_1371 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonSerializerTest.cs", label="return _innerDictionary.ContainsKey(key);", span="3224-3224"];
m20_1372 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="3222-3222"];
m20_1821 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", span="4182-4182"];
m20_1822 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonSerializerTest.cs", label="First = first", span="4184-4184"];
m20_1823 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonSerializerTest.cs", label="Second = second", span="4185-4185"];
m20_1824 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", span="4182-4182"];
m20_0 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.GenericClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.GenericClass()", span="107-107"];
m20_1 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.GenericClass()", file="JsonSerializerTest.cs", label="Items = new List<T>()", span="109-109"];
m20_2 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.GenericClass()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.GenericClass()", span="107-107"];
m20_3094 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", span="7195-7195"];
m20_3095 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs", label="string json = @''[\r\n        900\r\n      ]''", span="7197-7199"];
m20_3096 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs", label="var l = JsonConvert.DeserializeObject<IReadOnlyList<int>>(json)", span="7201-7201"];
m20_3097 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs", label="int i = l[0]", span="7203-7203"];
m20_3098 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs", label="Assert.AreEqual(900, i)", span="7206-7206"];
m20_3099 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", span="7195-7195"];
m20_1128 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="2526-2526"];
m20_1129 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs", label="string json = @''{}''", span="2528-2528"];
m20_1130 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot populate JSON object onto type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Person]'. Path '', line 1, position 2.'',\r\n        () =>\r\n        {\r\n          JsonConvert.PopulateObject(json, new List<Person>());\r\n        })", span="2530-2535"];
m20_1131 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="2526-2526"];
m20_110 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="148-148"];
m20_1744 [cluster="System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m20_1484 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", span="0-0"];
m20_880 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="1945-1945"];
m20_881 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="_name = name", span="1947-1947"];
m20_882 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="Age = age", span="1948-1948"];
m20_883 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="Rank = rank", span="1949-1949"];
m20_884 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="Title = title", span="1950-1950"];
m20_885 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="1945-1945"];
m20_1325 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="3087-3087"];
m20_1326 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs", label="var json = ''{ Key: 'abc', Value: 123 }''", span="3089-3089"];
m20_1327 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs", label="var item = JsonConvert.DeserializeObject<TestClass>(json)", span="3090-3090"];
m20_1328 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123L, item.Value)", span="3092-3092"];
m20_1329 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="3087-3087"];
m20_2079 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", span="4786-4786"];
m20_2080 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", span="4786-4786"];
m20_2793 [cluster="Unk.WriteValue", file="JsonSerializerTest.cs", label="Entry Unk.WriteValue", span=""];
m20_2663 [cluster="Newtonsoft.Json.Tests.Serialization.WithEnums.WithEnums()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.WithEnums.WithEnums()", span="8692-8692"];
m20_2746 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m20_2229 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", span="5206-5206"];
m20_2230 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonSerializerTest.cs", label="this.A = A", span="5208-5208"];
m20_2231 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonSerializerTest.cs", label="B = 2", span="5209-5209"];
m20_2232 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", span="5206-5206"];
m20_3497 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", span="8371-8371"];
m20_3498 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonSerializerTest.cs", label="return _dictionary.ContainsKey(key);", span="8373-8373"];
m20_3499 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", span="8371-8371"];
m20_1660 [cluster="System.NotImplementedException.NotImplementedException()", file="JsonSerializerTest.cs", label="Entry System.NotImplementedException.NotImplementedException()", span="0-0"];
m20_2370 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", span="5648-5648"];
m20_2371 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs", label="DerivedType d = new DerivedType()", span="5650-5650"];
m20_2372 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(d, Formatting.Indented)", span="5651-5651"];
m20_2373 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''dinosaur'''': null,\r\n  ''''dog'''': null,\r\n  ''''cat'''': null,\r\n  ''''zebra'''': null,\r\n  ''''bird'''': null,\r\n  ''''parrot'''': null,\r\n  ''''albatross'''': null,\r\n  ''''antelope'''': null\r\n}'', json)", span="5653-5662"];
m20_2374 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", span="5648-5648"];
m20_2966 [cluster="Newtonsoft.Json.Tests.Serialization.DataContractSerializationAttributesClass.DataContractSerializationAttributesClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DataContractSerializationAttributesClass.DataContractSerializationAttributesClass()", span="8877-8877"];
m20_502 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", span="1144-1144"];
m20_503 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonSerializerTest.cs", label="string jsonText = @''[3, ''''somestring'''',[1,2,3],{}]''", span="1146-1146"];
m20_504 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonSerializerTest.cs", label="ArrayList o = JsonConvert.DeserializeObject<ArrayList>(jsonText)", span="1147-1147"];
m20_505 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, o.Count)", span="1149-1149"];
m20_506 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ((JArray)o[2]).Count)", span="1150-1150"];
m20_507 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ((JObject)o[3]).Count)", span="1151-1151"];
m20_508 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", span="1144-1144"];
m20_2097 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4838-4838"];
m20_2098 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_name = info.GetString(''Name'')", span="4840-4840"];
m20_2099 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4838-4838"];
m20_952 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="192-192"];
m20_2183 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="5055-5055"];
m20_2184 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="EnumerableClass c = new EnumerableClass\r\n        {\r\n          Enumerable = new List<string> { ''One'', ''Two'', ''Three'' }\r\n        }", span="5057-5060"];
m20_2185 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="5062-5062"];
m20_2186 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Enumerable'''': [\r\n    ''''One'''',\r\n    ''''Two'''',\r\n    ''''Three''''\r\n  ]\r\n}'', json)", span="5064-5070"];
m20_2187 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="EnumerableClass c2 = JsonConvert.DeserializeObject<EnumerableClass>(json)", span="5072-5072"];
m20_2188 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''One'', c2.Enumerable.ElementAt(0))", span="5074-5074"];
m20_2189 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Two'', c2.Enumerable.ElementAt(1))", span="5075-5075"];
m20_2190 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Three'', c2.Enumerable.ElementAt(2))", span="5076-5076"];
m20_2191 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="5055-5055"];
m20_2747 [cluster="System.DateTime.ToLocalTime()", file="JsonSerializerTest.cs", label="Entry System.DateTime.ToLocalTime()", span="0-0"];
m20_2862 [cluster="Newtonsoft.Json.Tests.Serialization.RequiredObject.RequiredObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.RequiredObject.RequiredObject()", span="8820-8820"];
m20_929 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="2074-2074"];
m20_930 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''short'''': {\r\n    ''''original'''': ''''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'''',\r\n    ''''short'''': ''''m2sqc6'''',\r\n    ''''shortened'''': ''''http://short.ie/m2sqc6'''',\r\n    ''''error'''': {\r\n      ''''code'''': 0,\r\n      ''''msg'''': ''''No action taken''''\r\n    }\r\n  }\r\n}''", span="2076-2086"];
m20_931 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="JObject o = JObject.Parse(json)", span="2088-2088"];
m20_932 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Shortie s = JsonConvert.DeserializeObject<Shortie>(o[''short''].ToString())", span="2090-2090"];
m20_933 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(s)", span="2091-2091"];
m20_934 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(s.Original, ''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'')", span="2093-2093"];
m20_935 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(s.Short, ''m2sqc6'')", span="2094-2094"];
m20_936 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(s.Shortened, ''http://short.ie/m2sqc6'')", span="2095-2095"];
m20_937 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="2074-2074"];
m20_2425 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", span="5763-5763"];
m20_2426 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="JsonSerializerTest.cs", label="IDictionary<string, int?> v1 = new Dictionary<string, int?>\r\n        {\r\n          {''First'', 1},\r\n          {''Second'', null},\r\n          {''Third'', 3}\r\n        }", span="5765-5770"];
m20_2427 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(v1, Formatting.Indented)", span="5772-5772"];
m20_2428 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''First'''': 1,\r\n  ''''Second'''': null,\r\n  ''''Third'''': 3\r\n}'', json)", span="5774-5778"];
m20_2429 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="JsonSerializerTest.cs", label="IDictionary<string, int?> v2 = JsonConvert.DeserializeObject<IDictionary<string, int?>>(json)", span="5780-5780"];
m20_2430 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, v2.Count)", span="5781-5781"];
m20_2431 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, v2[''First''])", span="5782-5782"];
m20_2432 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, v2[''Second''])", span="5783-5783"];
m20_2433 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, v2[''Third''])", span="5784-5784"];
m20_2434 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", span="5763-5763"];
m20_602 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="1320-1320"];
m20_603 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="DateTime date = Convert.ToDateTime(''1970-01-01T00:00:00Z'').ToUniversalTime()", span="1322-1322"];
m20_604 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="MemberConverterClass c = new MemberConverterClass\r\n        {\r\n          DefaultConverter = date,\r\n          MemberConverter = date\r\n        }", span="1324-1328"];
m20_605 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="1330-1330"];
m20_606 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="Console.WriteLine(json)", span="1332-1332"];
m20_607 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="1320-1320"];
m20_1242 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m20_1996 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", span="4597-4597"];
m20_2349 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", span="5567-5567"];
m20_2350 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonSerializerTest.cs", label="_readonlyString = ''default!''", span="5569-5569"];
m20_2351 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", span="5567-5567"];
m20_256 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", span="719-719"];
m20_257 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="Article a1 = new Article(''a1'')", span="721-721"];
m20_258 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="Article a2 = new Article(''a2'')", span="722-722"];
m20_260 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="articles1.Add(a1)", span="725-725"];
m20_259 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="ArticleCollection articles1 = new ArticleCollection()", span="724-724"];
m20_261 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="articles1.Add(a2)", span="726-726"];
m20_262 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(articles1)", span="728-728"];
m20_264 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(articles1.Count, articles2.Count)", span="732-732"];
m20_265 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(articles1[0].Name, articles2[0].Name)", span="733-733"];
m20_263 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="ArticleCollection articles2 = JsonConvert.DeserializeObject<ArticleCollection>(jsonText)", span="730-730"];
m20_266 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", span="719-719"];
m20_1730 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="4026-4026"];
m20_1731 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="writer.WriteValue(value)", span="4028-4028"];
m20_1732 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="4026-4026"];
m20_1915 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FamilyDetails.FamilyDetails()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FamilyDetails.FamilyDetails()", span="4376-4376"];
m20_1637 [cluster="Unk.LoadXml", file="JsonSerializerTest.cs", label="Entry Unk.LoadXml", span=""];
m20_183 [cluster="Unk.AreNotSame", file="JsonSerializerTest.cs", label="Entry Unk.AreNotSame", span=""];
m20_835 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", span="29-29"];
m20_3 [cluster="System.Collections.Generic.List<T>.List()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m20_248 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="708-708"];
m20_249 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''A member with the name 'pie' already exists on 'Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass'. Use the JsonPropertyAttribute to specify another name.'',\r\n        () =>\r\n        {\r\n          JsonConvert.SerializeObject(new BadJsonPropertyClass());\r\n        })", span="710-715"];
m20_250 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="708-708"];
m20_2120 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", span="4834-4834"];
m20_2748 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", file="JsonSerializerTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m20_3026 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", span="7022-7022"];
m20_3027 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonSerializerTest.cs", label="var actual = JsonConvert.DeserializeObject<MyType>(@''{ ''''MyProperty'''':{''''Key'''':''''Y''''}}'')", span="7024-7024"];
m20_3028 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''X'', actual.MyProperty[''Key''])", span="7025-7025"];
m20_3029 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", span="7022-7022"];
m20_321 [cluster="System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", file="JsonSerializerTest.cs", label="Entry System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", span="0-0"];
m20_2379 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", span="5678-5678"];
m20_2380 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="ClassWithException classWithException = new ClassWithException()", span="5680-5680"];
m20_2381 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="throw new Exception(''Test Exception'');", span="5683-5683"];
m20_2383 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="classWithException.Exceptions.Add(ex)", span="5687-5687"];
m20_2384 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="string sex = JsonConvert.SerializeObject(classWithException)", span="5689-5689"];
m20_2387 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="sex = JsonConvert.SerializeObject(classWithException, Formatting.Indented)", span="5693-5693"];
m20_2382 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label=Exception, span="5685-5685"];
m20_2385 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="ClassWithException dex = JsonConvert.DeserializeObject<ClassWithException>(sex)", span="5690-5690"];
m20_2386 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dex.Exceptions[0].ToString(), dex.Exceptions[0].ToString())", span="5691-5691"];
m20_2388 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="dex = JsonConvert.DeserializeObject<ClassWithException>(sex)", span="5695-5695"];
m20_2389 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dex.Exceptions[0].ToString(), dex.Exceptions[0].ToString())", span="5696-5696"];
m20_2390 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", span="5678-5678"];
m20_3329 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", span="7941-7941"];
m20_3330 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="var content = @''{''''startDateTime'''':''''2012-07-19T14:30:00+09:30''''}''", span="7943-7943"];
m20_3331 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="var jsonSerializerSettings = new JsonSerializerSettings() {DateFormatHandling = DateFormatHandling.IsoDateFormat, DateParseHandling = DateParseHandling.DateTimeOffset, DateTimeZoneHandling = DateTimeZoneHandling.RoundtripKind}", span="7945-7945"];
m20_3332 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="var obj = (JObject)JsonConvert.DeserializeObject(content, jsonSerializerSettings)", span="7947-7947"];
m20_3333 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="var dateTimeOffset = (DateTimeOffset)((JValue) obj[''startDateTime'']).Value", span="7949-7949"];
m20_3334 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TimeSpan.FromHours(9.5), dateTimeOffset.Offset)", span="7951-7951"];
m20_3335 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''07/19/2012 14:30:00 +09:30'', dateTimeOffset.ToString(CultureInfo.InvariantCulture))", span="7952-7952"];
m20_3336 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", span="7941-7941"];
m20_699 [cluster="Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", span="29-29"];
m20_1944 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="4486-4486"];
m20_1945 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(new HashSet<string>()\r\n        {\r\n          ''One'',\r\n          ''2'',\r\n          ''III''\r\n        }, Formatting.Indented)", span="4488-4493"];
m20_1946 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[\r\n  ''''One'''',\r\n  ''''2'''',\r\n  ''''III''''\r\n]'', jsonText)", span="4495-4499"];
m20_1947 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="HashSet<string> d = JsonConvert.DeserializeObject<HashSet<string>>(jsonText)", span="4501-4501"];
m20_1948 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, d.Count)", span="4503-4503"];
m20_1949 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="Assert.IsTrue(d.Contains(''One''))", span="4504-4504"];
m20_1950 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="Assert.IsTrue(d.Contains(''2''))", span="4505-4505"];
m20_1951 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="Assert.IsTrue(d.Contains(''III''))", span="4506-4506"];
m20_1952 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="4486-4486"];
m20_2589 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertableIntTestClass.ConvertableIntTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertableIntTestClass.ConvertableIntTestClass()", span="6043-6043"];
m20_760 [cluster="Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", span="46-46"];
m20_945 [cluster="System.Uri.Uri(string)", file="JsonSerializerTest.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m20_953 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="2124-2124"];
m20_954 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Content content = new Content\r\n        {\r\n          Text = ''Blah, blah, blah'',\r\n          Children = new List<Content>\r\n            {\r\n              new Content {Text = ''First''},\r\n              new Content {Text = ''Second''}\r\n            }\r\n        }", span="2126-2134"];
m20_955 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(content, Formatting.Indented)", span="2136-2136"];
m20_956 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}'', json)", span="2138-2150"];
m20_957 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="2124-2124"];
m20_2967 [cluster="Newtonsoft.Json.Tests.Serialization.PocoDataContractSerializationAttributesClass.PocoDataContractSerializationAttributesClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PocoDataContractSerializationAttributesClass.PocoDataContractSerializationAttributesClass()", span="8889-8889"];
m20_211 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="570-570"];
m20_212 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeTestClass())", span="572-572"];
m20_213 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Field'''':0,''''Property'''':21}'', json)", span="574-574"];
m20_214 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="JsonIgnoreAttributeTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeTestClass>(@''{''''Field'''':99,''''Property'''':-1,''''IgnoredField'''':-1,''''IgnoredObject'''':[1,2,3,4,5]}'')", span="576-576"];
m20_215 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, c.IgnoredField)", span="578-578"];
m20_216 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(99, c.Field)", span="579-579"];
m20_217 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="570-570"];
m20_2534 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", span="5942-5942"];
m20_2535 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="CultureInfo initialCulture = Thread.CurrentThread.CurrentCulture", span="5944-5944"];
m20_2536 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="CultureInfo testCulture = CultureInfo.CreateSpecificCulture(''nb-NO'')", span="5948-5948"];
m20_2537 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="Thread.CurrentThread.CurrentCulture = testCulture", span="5950-5950"];
m20_2538 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="Thread.CurrentThread.CurrentUICulture = testCulture", span="5951-5951"];
m20_2539 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="string json = @''{ 'Quantity': '1.5', 'OptionalQuantity': '2.2' }''", span="5953-5953"];
m20_2540 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="DecimalTestClass c = JsonConvert.DeserializeObject<DecimalTestClass>(json)", span="5955-5955"];
m20_2541 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1.5m, c.Quantity)", span="5957-5957"];
m20_2542 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2.2d, c.OptionalQuantity)", span="5958-5958"];
m20_2543 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", span="5942-5942"];
m20_2315 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", span="5485-5485"];
m20_2316 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="5487-5487"];
m20_2317 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", span="5485-5485"];
m20_302 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", span="788-788"];
m20_303 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonSerializerTest.cs", label="string json = @''[''''vvv\jvvv'''']''", span="790-790"];
m20_304 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n        @''Bad JSON escape sequence: \j. Path '', line 1, position 7.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<List<string>>(json);\r\n        })", span="792-797"];
m20_305 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", span="788-788"];
m20_3621 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeAge()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeAge()", span="8949-8949"];
m20_3622 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeAge()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeAge()", span="8949-8949"];
m20_2450 [cluster="System.IO.StringWriter.ToString()", file="JsonSerializerTest.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m20_1127 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", span="881-881"];
m20_2216 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="5147-5147"];
m20_2217 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs", label="MultiIndexSuper e = new MultiIndexSuper()", span="5149-5149"];
m20_2218 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="5151-5151"];
m20_2219 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{}'', json)", span="5153-5153"];
m20_2220 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="5147-5147"];
m20_3130 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", span="7316-7316"];
m20_3131 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerTest.cs", label="NonReadOnlyList = new List<int> { 1 }", span="7318-7318"];
m20_3132 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerTest.cs", label="NonReadOnlyDictionary = new Dictionary<string, int> { { ''first'', 2 } }", span="7319-7319"];
m20_3133 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerTest.cs", label="Array = new[] {3}", span="7321-7321"];
m20_3134 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerTest.cs", label="List = new ReadOnlyCollection<int>(new[] { 4 })", span="7323-7323"];
m20_3135 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerTest.cs", label="Dictionary = new ReadOnlyDictionary<string, int>(new Dictionary<string, int> { { ''first'', 5 } })", span="7324-7324"];
m20_3136 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerTest.cs", label="IReadOnlyCollection = new ReadOnlyCollection<int>(new[] { 6 })", span="7326-7326"];
m20_3137 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerTest.cs", label="ReadOnlyCollection = new ReadOnlyCollection<int>(new[] { 7 })", span="7327-7327"];
m20_3138 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerTest.cs", label="IReadOnlyList = new ReadOnlyCollection<int>(new[] { 8 })", span="7328-7328"];
m20_3139 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerTest.cs", label="IReadOnlyDictionary = new ReadOnlyDictionary<string, int>(new Dictionary<string, int> { { ''first'', 9 } })", span="7330-7330"];
m20_3140 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerTest.cs", label="ReadOnlyDictionary = new ReadOnlyDictionary<string, int>(new Dictionary<string, int> { { ''first'', 10 } })", span="7331-7331"];
m20_3141 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", span="7316-7316"];
m20_247 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", span="27-27"];
m20_2749 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", span="6384-6384"];
m20_2750 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="NullableDateTimeTestClass c =\r\n        JsonConvert.DeserializeObject<NullableDateTimeTestClass>(\r\n          @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'',\r\n          new JsonSerializerSettings\r\n          {\r\n            DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n          })", span="6386-6392"];
m20_2751 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="6394-6394"];
m20_2752 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="6395-6395"];
m20_2753 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Pre'', c.PreField)", span="6396-6396"];
m20_2754 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Post'', c.PostField)", span="6397-6397"];
m20_2755 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="NullableDateTimeTestClass c2 =\r\n        JsonConvert.DeserializeObject<NullableDateTimeTestClass>(\r\n          @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':null,''''DateTimeOffsetField'''':null,''''PostField'''':''''Post''''}'')", span="6399-6401"];
m20_2756 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, c2.DateTimeField)", span="6403-6403"];
m20_2757 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, c2.DateTimeOffsetField)", span="6404-6404"];
m20_2758 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Pre'', c2.PreField)", span="6405-6405"];
m20_2759 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Post'', c2.PostField)", span="6406-6406"];
m20_2760 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", span="6384-6384"];
m20_288 [cluster="Unk.ReadObject", file="JsonSerializerTest.cs", label="Entry Unk.ReadObject", span=""];
m20_1895 [cluster="Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass.SpecifiedTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass.SpecifiedTestClass()", span="8960-8960"];
m20_1955 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", span="4514-4514"];
m20_1956 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", file="JsonSerializerTest.cs", label="Prop1 = new byte[0]", span="4516-4516"];
m20_1957 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", span="4514-4514"];
m20_3318 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", span="7816-7816"];
m20_3319 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="JsonSerializerTest.cs", label="Event e1 = new Event\r\n      {\r\n        EventName = ''EventName!''\r\n      }", span="7818-7821"];
m20_3320 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="JsonSerializerTest.cs", label="Event[,] array1 = new[,] { { e1, e1 }, { e1, e1 } }", span="7822-7822"];
m20_3321 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="JsonSerializerTest.cs", label="IList<Event[,]> values1 = new List<Event[,]>\r\n        {\r\n          array1,\r\n          array1\r\n        }", span="7823-7827"];
m20_3322 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(values1, new JsonSerializerSettings\r\n      {\r\n        TypeNameHandling = TypeNameHandling.All,\r\n        Formatting = Formatting.Indented\r\n      })", span="7829-7833"];
m20_3323 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''$type'''': ''''System.Collections.Generic.List`1[[Newtonsoft.Json.Tests.Serialization.Event[,], Newtonsoft.Json.Tests]], mscorlib'''',\r\n  ''''$values'''': [\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event[,], Newtonsoft.Json.Tests'''',\r\n      ''''$values'''': [\r\n        [\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          }\r\n        ],\r\n        [\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          }\r\n        ]\r\n      ]\r\n    },\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event[,], Newtonsoft.Json.Tests'''',\r\n      ''''$values'''': [\r\n        [\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          }\r\n        ],\r\n        [\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          }\r\n        ]\r\n      ]\r\n    }\r\n  ]\r\n}'', json)", span="7835-7905"];
m20_3324 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="JsonSerializerTest.cs", label="IList<Event[,]> values2 = (IList<Event[,]>)JsonConvert.DeserializeObject(json, new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.All\r\n        })", span="7907-7910"];
m20_3325 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, values2.Count)", span="7912-7912"];
m20_3326 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''EventName!'', values2[0][0, 0].EventName)", span="7913-7913"];
m20_3327 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", span="7816-7816"];
m20_32 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonGenericItem.NonGenericItem()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonGenericItem.NonGenericItem()", span="97-97"];
m20_2446 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="116-116"];
m20_112 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="393-393"];
m20_3043 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.GetEnumerator()", span="7064-7064"];
m20_3044 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.GetEnumerator()", file="JsonSerializerTest.cs", label="return _values.GetEnumerator();", span="7066-7066"];
m20_3045 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.GetEnumerator()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.GetEnumerator()", span="7064-7064"];
m20_3185 [cluster="Newtonsoft.Json.Tests.Serialization.Array3DWithConverter.Array3DWithConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Array3DWithConverter.Array3DWithConverter()", span="8916-8916"];
m20_1644 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", span="3855-3855"];
m20_2531 [cluster="Newtonsoft.Json.JsonWriter.Flush()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.Flush()", span="342-342"];
m20_1454 [cluster="System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", span="0-0"];
m20_2119 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", span="4857-4857"];
m20_1533 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="3570-3570"];
m20_1534 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="List<KVPair<string, string>> kvPairs =\r\n        JsonConvert.DeserializeObject<List<KVPair<string, string>>>(\r\n          ''[{\''Key\'':\''Two\'',\''Value\'':\''2\''},{\''Key\'':\''One\'',\''Value\'':\''1\''}]'')", span="3572-3574"];
m20_1535 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, kvPairs.Count)", span="3576-3576"];
m20_1536 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Two'', kvPairs[0].Key)", span="3577-3577"];
m20_1537 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''2'', kvPairs[0].Value)", span="3578-3578"];
m20_1538 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''One'', kvPairs[1].Key)", span="3579-3579"];
m20_1539 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''1'', kvPairs[1].Value)", span="3580-3580"];
m20_1540 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="3570-3570"];
m20_3436 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewEmployee.NewEmployee()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewEmployee.NewEmployee()", span="8199-8199"];
m20_251 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", span="177-177"];
m20_268 [cluster="Newtonsoft.Json.Tests.TestObjects.ArticleCollection.ArticleCollection()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ArticleCollection.ArticleCollection()", span="29-29"];
m20_2603 [cluster="Newtonsoft.Json.Tests.Serialization.Widget.Widget()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Widget.Widget()", span="8714-8714"];
m20_2281 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObject.ImplementInterfaceObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObject.ImplementInterfaceObject()", span="5369-5369"];
m20_1624 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="3816-3816"];
m20_1625 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="XmlNodeTestObject testObject = new XmlNodeTestObject()", span="3818-3818"];
m20_1626 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="XmlDocument document = new XmlDocument()", span="3819-3819"];
m20_1628 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="testObject.Document = document", span="3821-3821"];
m20_1629 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="3823-3823"];
m20_1633 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testObject.Document.InnerXml, newTestObject.Document.InnerXml)", span="3832-3832"];
m20_1627 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="document.LoadXml(''<root>hehe, root</root>'')", span="3820-3820"];
m20_1630 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  }\r\n}''", span="3824-3828"];
m20_1631 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expected, json)", span="3829-3829"];
m20_1632 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="XmlNodeTestObject newTestObject = JsonConvert.DeserializeObject<XmlNodeTestObject>(json)", span="3831-3831"];
m20_1634 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="3816-3816"];
m20_1273 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="2911-2911"];
m20_1274 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonSerializerTest.cs", label="this._dict1.Add(item.Key, item)", span="2913-2913"];
m20_1275 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="2911-2911"];
m20_1486 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", span="0-0"];
m20_1478 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", span="0-0"];
m20_2664 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", span="6224-6224"];
m20_2665 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new Widget1 { Id = new WidgetId1 { Value = 1234 } })", span="6226-6226"];
m20_2666 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Id'''':''''1234''''}'', json)", span="6228-6228"];
m20_2667 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs", label="Widget1 w = JsonConvert.DeserializeObject<Widget1>(@''{''''Id'''':''''1234''''}'')", span="6230-6230"];
m20_2668 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new WidgetId1 { Value = 1234 }, w.Id)", span="6232-6232"];
m20_2669 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", span="6224-6224"];
m20_3560 [cluster="Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.PersonWithPrivateConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.PersonWithPrivateConstructor()", span="8634-8634"];
m20_3561 [cluster="Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.PersonWithPrivateConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.PersonWithPrivateConstructor()", span="8634-8634"];
m20_2794 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="6493-6493"];
m20_2795 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="return Enum.Parse(typeof(Color), reader.Value.ToString());", span="6495-6495"];
m20_2796 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="6493-6493"];
m20_2152 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="4987-4987"];
m20_2153 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs", label="NonPublicConstructorWithJsonConstructor c = JsonConvert.DeserializeObject<NonPublicConstructorWithJsonConstructor>(''{}'')", span="4989-4989"];
m20_2154 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''NonPublic'', c.Constructor)", span="4990-4990"];
m20_2155 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="4987-4987"];
m20_2545 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="5969-5969"];
m20_2546 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs", label="IList<decimal> d1 = new List<decimal> { 1.1m }", span="5971-5971"];
m20_2547 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(d1)", span="5973-5973"];
m20_2549 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs", label="Assert.AreEqual(d1.Count, d2.Count)", span="5977-5977"];
m20_2550 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs", label="Assert.AreEqual(d1[0], d2[0])", span="5978-5978"];
m20_2548 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs", label="IList<decimal> d2 = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="5975-5975"];
m20_2551 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="5969-5969"];
m20_2652 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="645-645"];
m20_2798 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", span="6498-6498"];
m20_2799 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="return objectType == typeof(Color);", span="6500-6500"];
m20_2800 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", span="6498-6498"];
m20_3422 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewEmployee.ShouldSerializeName()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewEmployee.ShouldSerializeName()", span="8203-8203"];
m20_3423 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewEmployee.ShouldSerializeName()", file="JsonSerializerTest.cs", label="return false;", span="8205-8205"];
m20_3424 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewEmployee.ShouldSerializeName()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewEmployee.ShouldSerializeName()", span="8203-8203"];
m20_1193 [cluster="Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", span="27-27"];
m20_1359 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="3207-3207"];
m20_1360 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonSerializerTest.cs", label="_innerDictionary.Add(key, value)", span="3209-3209"];
m20_1361 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="3207-3207"];
m20_2927 [cluster="Newtonsoft.Json.Tests.Serialization.PersonSerializable.PersonSerializable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PersonSerializable.PersonSerializable()", span="8597-8597"];
m20_3559 [cluster="Newtonsoft.Json.Tests.Serialization.PersonSerializable.PersonSerializable()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.PersonSerializable.PersonSerializable()", span="8597-8597"];
m20_1057 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="2380-2380"];
m20_1058 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs", label="string json = @''[]''", span="2382-2382"];
m20_1059 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.TestObjects.Person' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<Person>(json);\r\n        })", span="2384-2391"];
m20_1060 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="2380-2380"];
m20_2461 [cluster="Newtonsoft.Json.Tests.Serialization.Component.Component()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Component.Component()", span="8791-8791"];
m20_3586 [cluster="Newtonsoft.Json.Tests.Serialization.Component.Component()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Component.Component()", span="8791-8791"];
m20_1656 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="757-757"];
m20_3023 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", span="7009-7009"];
m20_3024 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="return true;", span="7011-7011"];
m20_3025 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", span="7009-7009"];
m20_551 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="754-754"];
m20_449 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="1026-1026"];
m20_450 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new ConverableMembers(), Formatting.Indented)", span="1028-1028"];
m20_451 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="string expected = null", span="1030-1030"];
m20_453 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expected, json)", span="1066-1066"];
m20_454 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="ConverableMembers c = JsonConvert.DeserializeObject<ConverableMembers>(json)", span="1068-1068"];
m20_452 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="expected = @''{\r\n  ''''String'''': ''''string'''',\r\n  ''''Int32'''': 2147483647,\r\n  ''''UInt32'''': 4294967295,\r\n  ''''Byte'''': 255,\r\n  ''''SByte'''': 127,\r\n  ''''Short'''': 32767,\r\n  ''''UShort'''': 65535,\r\n  ''''Long'''': 9223372036854775807,\r\n  ''''ULong'''': 9223372036854775807,\r\n  ''''Double'''': 1.7976931348623157E+308,\r\n  ''''Float'''': 3.40282347E+38,\r\n  ''''DBNull'''': null,\r\n  ''''Bool'''': true,\r\n  ''''Char'''': ''''\u0000''''\r\n}''", span="1032-1047"];
m20_455 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''string'', c.String)", span="1069-1069"];
m20_456 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Assert.AreEqual(double.MaxValue, c.Double)", span="1070-1070"];
m20_457 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DBNull.Value, c.DBNull)", span="1072-1072"];
m20_458 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="1026-1026"];
m20_1777 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.StringAppenderConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.StringAppenderConverter()", span="4071-4071"];
m20_3613 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double)", span="851-851"];
m20_805 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="1762-1762"];
m20_806 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="SubKlass i = new SubKlass(''my subprop'')", span="1764-1764"];
m20_807 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="i.SuperProp = ''overrided superprop''", span="1765-1765"];
m20_808 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(i)", span="1767-1767"];
m20_809 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="1768-1768"];
m20_810 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json)", span="1770-1770"];
m20_811 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="string newJson = JsonConvert.SerializeObject(ii)", span="1772-1772"];
m20_812 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="1773-1773"];
m20_813 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="1762-1762"];
m20_1294 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="2990-2990"];
m20_1295 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs", label="JRawValueTestObject deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:3}'')", span="2992-2992"];
m20_1296 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''3'', deserialized.Value.ToString())", span="2993-2993"];
m20_1297 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs", label="deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:'3'}'')", span="2995-2995"];
m20_1298 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''''''3'''''', deserialized.Value.ToString())", span="2996-2996"];
m20_1299 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="2990-2990"];
m20_1400 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="3265-3265"];
m20_1401 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="return ((IEnumerable)_innerDictionary).GetEnumerator();", span="3267-3267"];
m20_1402 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="3265-3265"];
m20_1714 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m20_1481 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", span="0-0"];
m20_460 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", span="1077-1077"];
m20_461 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="Stack<object> s = new Stack<object>()", span="1079-1079"];
m20_462 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="s.Push(1)", span="1080-1080"];
m20_463 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="s.Push(2)", span="1081-1081"];
m20_464 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="s.Push(3)", span="1082-1082"];
m20_465 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(s)", span="1084-1084"];
m20_466 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[3,2,1]'', json)", span="1085-1085"];
m20_467 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", span="1077-1077"];
m20_620 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", span="27-27"];
m20_2401 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", span="5713-5713"];
m20_2402 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass()", span="5715-5715"];
m20_2403 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="5716-5716"];
m20_2406 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Guid, c2.Guid)", span="5727-5727"];
m20_2407 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="5728-5728"];
m20_2408 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="5729-5729"];
m20_2409 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="5730-5730"];
m20_2410 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Uri, c2.Uri)", span="5731-5731"];
m20_2404 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Guid'''': ''''00000000-0000-0000-0000-000000000000'''',\r\n  ''''NullableGuid'''': null,\r\n  ''''TimeSpan'''': ''''00:00:00'''',\r\n  ''''NullableTimeSpan'''': null,\r\n  ''''Uri'''': null\r\n}'', json)", span="5718-5724"];
m20_2405 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="UriGuidTimeSpanTestClass c2 = JsonConvert.DeserializeObject<UriGuidTimeSpanTestClass>(json)", span="5726-5726"];
m20_2411 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", span="5713-5713"];
m20_398 [cluster="object.Object()", file="JsonSerializerTest.cs", label="Entry object.Object()", span="0-0"];
m20_2263 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", span="5335-5335"];
m20_2264 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs", label="ChildObject cc = new ChildObject\r\n        {\r\n          VirtualMember = ''VirtualMember!'',\r\n          NonVirtualMember = ''NonVirtualMember!''\r\n        }", span="5337-5341"];
m20_2265 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(cc)", span="5343-5343"];
m20_2266 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''virtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="5344-5344"];
m20_2267 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", span="5335-5335"];
m20_1308 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", span="3013-3013"];
m20_1309 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonSerializerTest.cs", label="string json = ''{'$id':'1',key1:'value1',key2:'value2',key3:'value3'}''", span="3015-3015"];
m20_1310 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(''Cannot preserve reference to readonly dictionary, or dictionary created from a non-default constructor: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+DictionaryWithNoDefaultConstructor. Path 'key1', line 1, position 16.'',\r\n        () => JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json, new JsonSerializerSettings { PreserveReferencesHandling = PreserveReferencesHandling.All }))", span="3017-3018"];
m20_1311 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", span="3013-3013"];
m20_493 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", span="1110-1110"];
m20_1355 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonSerializerTest.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m20_2552 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", span="5982-5982"];
m20_2553 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs", label="IList<DateTimeOffset?> d1 = new List<DateTimeOffset?> { null }", span="5984-5984"];
m20_2554 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(d1)", span="5986-5986"];
m20_2556 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(d1.Count, d2.Count)", span="5990-5990"];
m20_2557 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(d1[0], d2[0])", span="5991-5991"];
m20_2555 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs", label="IList<DateTimeOffset?> d2 = JsonConvert.DeserializeObject<IList<DateTimeOffset?>>(json)", span="5988-5988"];
m20_2558 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", span="5982-5982"];
m20_1373 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m20_1365 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0"];
m20_561 [cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0"];
m20_2820 [cluster="System.Console.WriteLine(object)", file="JsonSerializerTest.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m20_1025 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="2326-2326"];
m20_1026 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs", label="string json = @''{''''DateTimeField'''':''''''''}''", span="2328-2328"];
m20_1027 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs", label="NullableDateTimeTestClass c = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(json)", span="2330-2330"];
m20_1028 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, c.DateTimeField)", span="2331-2331"];
m20_1029 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="2326-2326"];
m20_1345 [cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="JsonSerializerTest.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0"];
m20_2814 [cluster="Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", span="65-65"];
m20_610 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="1340-1340"];
m20_611 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="ClassAndMemberConverterClass c1 = new ClassAndMemberConverterClass()", span="1342-1342"];
m20_612 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="c1.DefaultConverter = new ConverterPrecedenceClass(''DefaultConverterValue'')", span="1343-1343"];
m20_613 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="c1.MemberConverter = new ConverterPrecedenceClass(''MemberConverterValue'')", span="1344-1344"];
m20_614 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="1346-1346"];
m20_615 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':[''''Class'''',''''DefaultConverterValue''''],''''MemberConverter'''':[''''Member'''',''''MemberConverterValue'''']}'', json)", span="1347-1347"];
m20_616 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="ClassAndMemberConverterClass c2 = JsonConvert.DeserializeObject<ClassAndMemberConverterClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="1349-1349"];
m20_617 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''DefaultConverterValue'', c2.DefaultConverter.TestValue)", span="1351-1351"];
m20_618 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''MemberConverterValue'', c2.MemberConverter.TestValue)", span="1352-1352"];
m20_619 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="1340-1340"];
m20_40 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", span="264-264"];
m20_41 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="BaseWithContract baseWith = new SubWithoutContractNewProperties\r\n        {\r\n          JustAProperty = ''JustAProperty!'',\r\n          Virtual = ''Virtual!'',\r\n          VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n          WithDataMember = ''WithDataMember!''\r\n        }", span="266-272"];
m20_42 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.JustAProperty = ''JustAProperty2!''", span="274-274"];
m20_43 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.Virtual = ''Virtual2!''", span="275-275"];
m20_44 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="276-276"];
m20_45 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.WithDataMember = ''WithDataMember2!''", span="277-277"];
m20_46 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="string json = AssertSerializeDeserializeEqual(baseWith)", span="279-279"];
m20_47 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''WithDataMemberSub'''': ''''WithDataMember!''''\r\n}'', json)", span="281-288"];
m20_48 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", span="264-264"];
m20_854 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="1859-1859"];
m20_855 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="string json = @''{\r\n    ''''request'''': ''''ux.settings.update'''',\r\n    ''''sid'''': ''''14c561bd-32a8-457e-b4e5-4bba0832897f'''',\r\n    ''''uid'''': ''''30c39065-0f31-de11-9442-001e3786a8ec'''',\r\n    ''''fidOrder'''': [\r\n        ''''id'''',\r\n        ''''andytest_name'''',\r\n        ''''andytest_age'''',\r\n        ''''andytest_address'''',\r\n        ''''andytest_phone'''',\r\n        ''''date'''',\r\n        ''''title'''',\r\n        ''''titleId''''\r\n    ],\r\n    ''''entityName'''': ''''Andy Test'''',\r\n    ''''setting'''': ''''entity.field.order''''\r\n}''", span="1861-1877"];
m20_856 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="RequestOnly r = JsonConvert.DeserializeObject<RequestOnly>(json)", span="1879-1879"];
m20_858 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="NonRequest n = JsonConvert.DeserializeObject<NonRequest>(json)", span="1882-1882"];
m20_857 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ux.settings.update'', r.Request)", span="1880-1880"];
m20_859 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''14c561bd-32a8-457e-b4e5-4bba0832897f''), n.Sid)", span="1883-1883"];
m20_860 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''30c39065-0f31-de11-9442-001e3786a8ec''), n.Uid)", span="1884-1884"];
m20_861 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(8, n.FidOrder.Count)", span="1885-1885"];
m20_862 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''id'', n.FidOrder[0])", span="1886-1886"];
m20_863 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''titleId'', n.FidOrder[n.FidOrder.Count - 1])", span="1887-1887"];
m20_864 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="1859-1859"];
m20_1344 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", span="3111-3111"];
m20_983 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", span="2205-2205"];
m20_984 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs", label="string json = @''{''''action'''':''''Router'''',''''method'''':''''Navigate'''',''''data'''':[''''dashboard'''',[''''id'''', 1, ''''teststring'''', ''''test''''],{''''one'''':1}],''''type'''':''''rpc'''',''''tid'''':2}''", span="2207-2207"];
m20_985 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs", label="ObjectArrayPropertyTest o = JsonConvert.DeserializeObject<ObjectArrayPropertyTest>(json)", span="2209-2209"];
m20_986 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Router'', o.Action)", span="2211-2211"];
m20_987 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Navigate'', o.Method)", span="2212-2212"];
m20_988 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, o.Data.Length)", span="2213-2213"];
m20_989 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''dashboard'', o.Data[0])", span="2214-2214"];
m20_990 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs", label="CustomAssert.IsInstanceOfType(typeof(JArray), o.Data[1])", span="2215-2215"];
m20_991 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, ((JArray)o.Data[1]).Count)", span="2216-2216"];
m20_992 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs", label="CustomAssert.IsInstanceOfType(typeof(JObject), o.Data[2])", span="2217-2217"];
m20_993 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, ((JObject)o.Data[2]).Count)", span="2218-2218"];
m20_994 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, (int)((JObject)o.Data[2])[''one''])", span="2219-2219"];
m20_995 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", span="2205-2205"];
m20_647 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", span="30-30"];
m20_1475 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0"];
m20_31 [cluster="Unk.AreEqual", file="JsonSerializerTest.cs", label="Entry Unk.AreEqual", span=""];
m20_1924 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="4437-4437"];
m20_1925 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="Dictionary<DictionaryKey, string> dictionary = new Dictionary<DictionaryKey, string>()", span="4439-4439"];
m20_1926 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="dictionary.Add(new DictionaryKey() { Value = ''First!'' }, ''First'')", span="4441-4441"];
m20_1927 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="dictionary.Add(new DictionaryKey() { Value = ''Second!'' }, ''Second'')", span="4442-4442"];
m20_1928 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="4444-4444"];
m20_1929 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''First!'''': ''''First'''',\r\n  ''''Second!'''': ''''Second''''\r\n}'', json)", span="4446-4449"];
m20_1930 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="Dictionary<DictionaryKey, string> newDictionary =\r\n        JsonConvert.DeserializeObject<Dictionary<DictionaryKey, string>>(json)", span="4451-4452"];
m20_1931 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, newDictionary.Count)", span="4454-4454"];
m20_1932 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="4437-4437"];
m20_2867 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", span="6609-6609"];
m20_2868 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="PropertyItemConverter c = new PropertyItemConverter\r\n        {\r\n          Data =\r\n            new[]{\r\n              ''one'',\r\n              ''two'',\r\n              ''three''\r\n            }\r\n        }", span="6611-6619"];
m20_2869 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="var c2 = JsonConvert.DeserializeObject<PropertyItemConverter>(''{'Data':['::ONE::','::TWO::']}'')", span="6621-6621"];
m20_2870 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(c2)", span="6623-6623"];
m20_2871 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, c2.Data.Count)", span="6624-6624"];
m20_2872 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''one'', c2.Data[0])", span="6625-6625"];
m20_2873 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''two'', c2.Data[1])", span="6626-6626"];
m20_2874 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", span="6609-6609"];
m20_322 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="JsonSerializerTest.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m20_1452 [cluster="System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", span="0-0"];
m20_470 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="1089-1089"];
m20_471 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Guid guid = new Guid(''BED7F4EA-1A96-11d2-8F08-00A0C9A6186D'')", span="1091-1091"];
m20_472 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new ClassWithGuid { GuidField = guid })", span="1093-1093"];
m20_475 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(guid, c.GuidField)", span="1097-1097"];
m20_473 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''GuidField'''':''''bed7f4ea-1a96-11d2-8f08-00a0c9a6186d''''}'', json)", span="1094-1094"];
m20_474 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="ClassWithGuid c = JsonConvert.DeserializeObject<ClassWithGuid>(json)", span="1096-1096"];
m20_476 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="1089-1089"];
m20_795 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m20_1661 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", span="3884-3884"];
m20_1662 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="return objectType.IsAssignableFrom(typeof(Pos));", span="3886-3886"];
m20_1663 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", span="3884-3884"];
m20_1209 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="2703-2703"];
m20_1210 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="Dictionary<Guid, int> dictionary = new Dictionary<Guid, int>()", span="2705-2705"];
m20_1211 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="dictionary.Add(new Guid(''F60EAEE0-AE47-488E-B330-59527B742D77''), 1)", span="2706-2706"];
m20_1212 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="dictionary.Add(new Guid(''C2594C02-EBA1-426A-AA87-8DD8871350B0''), 2)", span="2707-2707"];
m20_1213 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="2709-2709"];
m20_1214 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''f60eaee0-ae47-488e-b330-59527b742d77'''': 1,\r\n  ''''c2594c02-eba1-426a-aa87-8dd8871350b0'''': 2\r\n}'', json)", span="2710-2713"];
m20_1215 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="2703-2703"];
m20_1920 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="4430-4430"];
m20_1921 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonSerializerTest.cs", label="return new DictionaryKey() { Value = value };", span="4432-4432"];
m20_1922 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="4430-4430"];
m20_1479 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", span="0-0"];
m20_3266 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", span="7690-7690"];
m20_3267 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="JsonSerializerTest.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[],''''After'''':''''After!''''}''", span="7692-7692"];
m20_3268 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="JsonSerializerTest.cs", label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="7694-7694"];
m20_3275 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(json, after)", span="7704-7704"];
m20_3269 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="7696-7696"];
m20_3270 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''After!'', aa.After)", span="7697-7697"];
m20_3271 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, aa.Coordinates.GetLength(0))", span="7698-7698"];
m20_3272 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, aa.Coordinates.GetLength(1))", span="7699-7699"];
m20_3273 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, aa.Coordinates.GetLength(2))", span="7700-7700"];
m20_3274 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="JsonSerializerTest.cs", label="string after = JsonConvert.SerializeObject(aa)", span="7702-7702"];
m20_3276 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", span="7690-7690"];
m20_3002 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", span="6979-6979"];
m20_3003 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="IList<Uri> uris = JsonConvert.DeserializeObject<IList<Uri>>(@''[''''http://localhost/path?query#hash'''']'')", span="6981-6981"];
m20_3004 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, uris.Count)", span="6982-6982"];
m20_3005 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Uri(''http://localhost/path?query#hash''), uris[0])", span="6983-6983"];
m20_3006 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Uri uri = JsonConvert.DeserializeObject<Uri>(@''''''http://localhost/path?query#hash'''''')", span="6985-6985"];
m20_3007 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(uri)", span="6986-6986"];
m20_3008 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Uri i1 = new Uri(''http://localhost/path?query#hash'', UriKind.RelativeOrAbsolute)", span="6988-6988"];
m20_3009 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Uri i2 = new Uri(''http://localhost/path?query#hash'')", span="6989-6989"];
m20_3010 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Assert.AreEqual(i1, i2)", span="6990-6990"];
m20_3011 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="uri = JsonConvert.DeserializeObject<Uri>(@''''''/path?query#hash'''''')", span="6992-6992"];
m20_3012 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(uri)", span="6993-6993"];
m20_3013 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Uri(''/path?query#hash'', UriKind.RelativeOrAbsolute), uri)", span="6994-6994"];
m20_3014 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", span="6979-6979"];
m20_392 [cluster="System.IO.StringReader.StringReader(string)", file="JsonSerializerTest.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m20_1443 [cluster="System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", span="0-0"];
m20_2134 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest()", span="4945-4945"];
m20_2135 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest()", span="4945-4945"];
m20_127 [cluster="Newtonsoft.Json.Tests.TestObjects.Store.Store()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Store.Store()", span="46-46"];
m20_3050 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", span="7076-7076"];
m20_3051 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", file="JsonSerializerTest.cs", label="string json = @''[\r\n  1,\r\n  2,\r\n  null\r\n]''", span="7078-7082"];
m20_3052 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", file="JsonSerializerTest.cs", label="var result = JsonConvert.DeserializeObject<EnumerableClass<int?>>(json)", span="7084-7084"];
m20_3053 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, result.Count())", span="7086-7086"];
m20_3054 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, result.ElementAt(0))", span="7087-7087"];
m20_3055 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, result.ElementAt(1))", span="7088-7088"];
m20_3056 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, result.ElementAt(2))", span="7089-7089"];
m20_3057 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", span="7076-7076"];
m20_779 [cluster="Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", span="29-29"];
m20_2651 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="466-466"];
m20_3626 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>", span=""];
m20_3627 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", span=""];
m20_3628 [file="JsonSerializerTest.cs", label=json, span=""];
m20_3629 [file="JsonSerializerTest.cs", label=json, span=""];
m20_3630 [file="JsonSerializerTest.cs", label=strFromTest, span=""];
m20_3631 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", span=""];
m20_3632 [file="JsonSerializerTest.cs", label=json, span=""];
m20_3633 [file="JsonSerializerTest.cs", label=json, span=""];
m20_3634 [file="JsonSerializerTest.cs", label=json, span=""];
m20_3635 [file="JsonSerializerTest.cs", label=json, span=""];
m20_3636 [file="JsonSerializerTest.cs", label=json, span=""];
m20_3637 [file="JsonSerializerTest.cs", label=json, span=""];
m20_3638 [file="JsonSerializerTest.cs", label=json, span=""];
m20_3639 [file="JsonSerializerTest.cs", label=json, span=""];
m20_3640 [file="JsonSerializerTest.cs", label=json, span=""];
m20_3641 [file="JsonSerializerTest.cs", label=json, span=""];
m20_3642 [file="JsonSerializerTest.cs", label=json, span=""];
m20_3643 [file="JsonSerializerTest.cs", label=json, span=""];
m20_3644 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass", span=""];
m20_3645 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", span=""];
m20_3646 [file="JsonSerializerTest.cs", label=json, span=""];
m20_3647 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor", span=""];
m20_3648 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", span=""];
m20_3649 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", span=""];
m20_3650 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>", span=""];
m20_3651 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", span=""];
m20_3652 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", span=""];
m20_3653 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass", span=""];
m20_3654 [file="JsonSerializerTest.cs", label=json, span=""];
m20_3655 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty", span=""];
m20_3656 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee", span=""];
m20_3657 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey", span=""];
m20_3658 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass", span=""];
m20_3659 [file="JsonSerializerTest.cs", label=json, span=""];
m20_3660 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector", span=""];
m20_3661 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived", span=""];
m20_3662 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base", span=""];
m20_3663 [file="JsonSerializerTest.cs", label="out Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span=""];
m20_3664 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span=""];
m20_3665 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest", span=""];
m20_3666 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor", span=""];
m20_3667 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor", span=""];
m20_3668 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor", span=""];
m20_3669 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor", span=""];
m20_3670 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor", span=""];
m20_3671 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty", span=""];
m20_3672 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty", span=""];
m20_3673 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes", span=""];
m20_3674 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException", span=""];
m20_3675 [file="JsonSerializerTest.cs", label=json, span=""];
m20_3676 [file="JsonSerializerTest.cs", label=json, span=""];
m20_3677 [file="JsonSerializerTest.cs", label=json, span=""];
m20_3678 [file="JsonSerializerTest.cs", label=errors, span=""];
m20_3679 [file="JsonSerializerTest.cs", label=errors, span=""];
m20_3680 [file="JsonSerializerTest.cs", label=errors, span=""];
m20_3681 [file="JsonSerializerTest.cs", label=json, span=""];
m20_3682 [file="JsonSerializerTest.cs", label=s, span=""];
m20_3683 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>", span=""];
m20_3684 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>", span=""];
m20_3685 [file="JsonSerializerTest.cs", label=json, span=""];
m20_3686 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>", span=""];
m20_3687 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>", span=""];
m20_3688 [file="JsonSerializerTest.cs", label=json, span=""];
m20_3689 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver", span=""];
m20_3690 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass", span=""];
m20_3691 [file="JsonSerializerTest.cs", label=json, span=""];
m20_3692 [file="JsonSerializerTest.cs", label=json, span=""];
m20_3693 [file="JsonSerializerTest.cs", label=json, span=""];
m20_3694 [file="JsonSerializerTest.cs", label=json, span=""];
m20_3695 [file="JsonSerializerTest.cs", label=json, span=""];
m20_3696 [file="JsonSerializerTest.cs", label=json, span=""];
m20_3697 [file="JsonSerializerTest.cs", label=json, span=""];
m20_3698 [file="JsonSerializerTest.cs", label=json, span=""];
m20_3699 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>", span=""];
m20_3700 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>", span=""];
m20_3701 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>", span=""];
m20_3702 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.AnswerFilterModel", span=""];
m20_3703 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.TestObject", span=""];
m20_3704 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.GameObject", span=""];
m20_3705 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass", span=""];
m21_43 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Converters.RegexConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="105-105"];
m21_858 [cluster="Newtonsoft.Json.Linq.JArray.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JArray.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="96-96"];
m21_89 [cluster="Newtonsoft.Json.Linq.JToken.Children()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="365-365"];
m21_81 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", file="RegexConverter.cs", label="Newtonsoft.Json.Converters.RegexConverter", span=""];
m21_857 [cluster="Newtonsoft.Json.Linq.JToken.DeepClone()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepClone()", span="2391-2391"];
m21_276 [cluster="System.Convert.ToBase64String(byte[])", file="RegexConverter.cs", label="Entry System.Convert.ToBase64String(byte[])", span="0-0"];
m21_875 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="195-195"];
m21_883 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", span="1217-1217"];
m21_886 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="RegexConverter.cs", label="Assert.AreEqual(''Test1[0]'', t.Path)", span="1228-1228"];
m21_888 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="RegexConverter.cs", label="Assert.AreEqual(''Test2'', t.Path)", span="1231-1231"];
m21_890 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="RegexConverter.cs", label="Assert.AreEqual('''', t.Path)", span="1234-1234"];
m21_892 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="RegexConverter.cs", label="Assert.AreEqual(''Test4[0][0]'', t.Path)", span="1237-1237"];
m21_894 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="RegexConverter.cs", label="Assert.AreEqual(''Test4[0]'', t.Path)", span="1240-1240"];
m21_896 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="RegexConverter.cs", label="Assert.AreEqual('''', t.Path)", span="1243-1243"];
m21_898 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="RegexConverter.cs", label="Assert.AreEqual(''Test3.Test1[1].Test1'', t.Path)", span="1246-1246"];
m21_900 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="RegexConverter.cs", label="Assert.AreEqual('''', a.Path)", span="1249-1249"];
m21_901 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="RegexConverter.cs", label="Assert.AreEqual(''[0]'', a[0].Path)", span="1251-1251"];
m21_884 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="RegexConverter.cs", label="JObject o =\r\n                new JObject(\r\n                    new JProperty(''Test1'', new JArray(1, 2, 3)),\r\n                    new JProperty(''Test2'', ''Test2Value''),\r\n                    new JProperty(''Test3'', new JObject(new JProperty(''Test1'', new JArray(1, new JObject(new JProperty(''Test1'', 1)), 3)))),\r\n                    new JProperty(''Test4'', new JConstructor(''Date'', new JArray(1, 2, 3)))\r\n                    )", span="1219-1225"];
m21_885 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="RegexConverter.cs", label="JToken t = o.SelectToken(''Test1[0]'')", span="1227-1227"];
m21_887 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="RegexConverter.cs", label="t = o.SelectToken(''Test2'')", span="1230-1230"];
m21_889 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="RegexConverter.cs", label="t = o.SelectToken('''')", span="1233-1233"];
m21_891 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="RegexConverter.cs", label="t = o.SelectToken(''Test4[0][0]'')", span="1236-1236"];
m21_893 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="RegexConverter.cs", label="t = o.SelectToken(''Test4[0]'')", span="1239-1239"];
m21_895 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="RegexConverter.cs", label="t = t.DeepClone()", span="1242-1242"];
m21_897 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="RegexConverter.cs", label="t = o.SelectToken(''Test3.Test1[1].Test1'')", span="1245-1245"];
m21_899 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="RegexConverter.cs", label="JArray a = new JArray(1)", span="1248-1248"];
m21_902 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", span="1217-1217"];
m21_511 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", span="520-520"];
m21_512 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(new DateTime(2000, 12, 20)), (JValue)new DateTime(2000, 12, 20)))", span="522-522"];
m21_513 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(new DateTimeOffset(2000, 12, 20, 23, 50, 10, TimeSpan.Zero)), (JValue)new DateTimeOffset(2000, 12, 20, 23, 50, 10, TimeSpan.Zero)))", span="524-524"];
m21_514 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((DateTimeOffset?)null), (JValue)(DateTimeOffset?)null))", span="525-525"];
m21_515 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(new BigInteger(1)), new JValue(new BigInteger(1))))", span="530-530"];
m21_516 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((BigInteger?)null), new JValue((BigInteger?)null)))", span="531-531"];
m21_517 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(true), (JValue)true))", span="533-533"];
m21_518 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(true), (JValue)true))", span="534-534"];
m21_519 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(true), (JValue)(bool?)true))", span="535-535"];
m21_520 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((bool?)null), (JValue)(bool?)null))", span="536-536"];
m21_521 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(10), (JValue)10))", span="537-537"];
m21_522 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((long?)null), (JValue)(long?)null))", span="538-538"];
m21_523 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((DateTime?)null), (JValue)(DateTime?)null))", span="539-539"];
m21_524 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(long.MaxValue), (JValue)long.MaxValue))", span="540-540"];
m21_525 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((int?)null), (JValue)(int?)null))", span="541-541"];
m21_526 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((short?)null), (JValue)(short?)null))", span="542-542"];
m21_527 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((double?)null), (JValue)(double?)null))", span="543-543"];
m21_528 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((uint?)null), (JValue)(uint?)null))", span="544-544"];
m21_529 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((decimal?)null), (JValue)(decimal?)null))", span="545-545"];
m21_530 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((ulong?)null), (JValue)(ulong?)null))", span="546-546"];
m21_531 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((sbyte?)null), (JValue)(sbyte?)null))", span="547-547"];
m21_532 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((sbyte)1), (JValue)(sbyte)1))", span="548-548"];
m21_533 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((byte?)null), (JValue)(byte?)null))", span="549-549"];
m21_534 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((byte)1), (JValue)(byte)1))", span="550-550"];
m21_535 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((ushort?)null), (JValue)(ushort?)null))", span="551-551"];
m21_536 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(short.MaxValue), (JValue)short.MaxValue))", span="552-552"];
m21_537 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(ushort.MaxValue), (JValue)ushort.MaxValue))", span="553-553"];
m21_538 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(11.1f), (JValue)11.1f))", span="554-554"];
m21_539 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(float.MinValue), (JValue)float.MinValue))", span="555-555"];
m21_540 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(double.MinValue), (JValue)double.MinValue))", span="556-556"];
m21_541 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(uint.MaxValue), (JValue)uint.MaxValue))", span="557-557"];
m21_542 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(ulong.MaxValue), (JValue)ulong.MaxValue))", span="558-558"];
m21_543 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(ulong.MinValue), (JValue)ulong.MinValue))", span="559-559"];
m21_544 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((string)null), (JValue)(string)null))", span="560-560"];
m21_545 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((DateTime?)null), (JValue)(DateTime?)null))", span="561-561"];
m21_546 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(decimal.MaxValue), (JValue)decimal.MaxValue))", span="562-562"];
m21_547 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(decimal.MaxValue), (JValue)(decimal?)decimal.MaxValue))", span="563-563"];
m21_548 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(decimal.MinValue), (JValue)decimal.MinValue))", span="564-564"];
m21_549 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(float.MaxValue), (JValue)(float?)float.MaxValue))", span="565-565"];
m21_550 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(double.MaxValue), (JValue)(double?)double.MaxValue))", span="566-566"];
m21_551 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(JValue.CreateNull(), (JValue)(double?)null))", span="567-567"];
m21_552 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsFalse(JToken.DeepEquals(new JValue(true), (JValue)(bool?)null))", span="569-569"];
m21_553 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsFalse(JToken.DeepEquals(JValue.CreateNull(), (JValue)(object)null))", span="570-570"];
m21_555 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(emptyData), (JValue)emptyData))", span="573-573"];
m21_556 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsFalse(JToken.DeepEquals(new JValue(emptyData), (JValue)new byte[1]))", span="574-574"];
m21_557 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(Encoding.UTF8.GetBytes(''Hi'')), (JValue)Encoding.UTF8.GetBytes(''Hi'')))", span="575-575"];
m21_558 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(TimeSpan.FromMinutes(1)), (JValue)TimeSpan.FromMinutes(1)))", span="577-577"];
m21_559 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(JValue.CreateNull(), (JValue)(TimeSpan?)null))", span="578-578"];
m21_560 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(TimeSpan.FromMinutes(1)), (JValue)(TimeSpan?)TimeSpan.FromMinutes(1)))", span="579-579"];
m21_561 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC'')), (JValue)new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC'')))", span="580-580"];
m21_562 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(new Uri(''http://www.google.com'')), (JValue)new Uri(''http://www.google.com'')))", span="581-581"];
m21_563 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(JValue.CreateNull(), (JValue)(Uri)null))", span="582-582"];
m21_564 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(JValue.CreateNull(), (JValue)(Guid?)null))", span="583-583"];
m21_554 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="byte[] emptyData = new byte[0]", span="572-572"];
m21_565 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", span="520-520"];
m21_859 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", span="1153-1153"];
m21_860 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", file="RegexConverter.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3),\r\n                    new JObject(\r\n                        new JProperty(''First'', new JValue(Encoding.UTF8.GetBytes(''Hi''))),\r\n                        new JProperty(''Second'', 1),\r\n                        new JProperty(''Third'', null),\r\n                        new JProperty(''Fourth'', new JConstructor(''Date'', 12345)),\r\n                        new JProperty(''Fifth'', double.PositiveInfinity),\r\n                        new JProperty(''Sixth'', double.NaN)\r\n                        )\r\n                    )", span="1155-1169"];
m21_861 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", file="RegexConverter.cs", label="ICloneable c = a", span="1171-1171"];
m21_863 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", file="RegexConverter.cs", label="Assert.IsTrue(a.DeepEquals(a2))", span="1175-1175"];
m21_862 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", file="RegexConverter.cs", label="JArray a2 = (JArray)c.Clone()", span="1173-1173"];
m21_864 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", span="1153-1153"];
m21_706 [cluster="Newtonsoft.Json.Linq.JContainer.DescendantsAndSelf()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JContainer.DescendantsAndSelf()", span="298-298"];
m21_695 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", span="839-839"];
m21_699 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", file="RegexConverter.cs", label="Assert.AreEqual(a, descendantsAndSelf[0])", span="851-851"];
m21_698 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", file="RegexConverter.cs", label="Assert.AreEqual(11, descendantsAndSelf.Count())", span="850-850"];
m21_700 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", file="RegexConverter.cs", label="Assert.AreEqual(5, (int)descendantsAndSelf[1])", span="852-852"];
m21_702 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", file="RegexConverter.cs", label="Assert.AreEqual(1, (int)descendantsAndSelf[descendantsAndSelf.Count - 3])", span="854-854"];
m21_703 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", file="RegexConverter.cs", label="Assert.AreEqual(2, (int)descendantsAndSelf[descendantsAndSelf.Count - 2])", span="855-855"];
m21_704 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", file="RegexConverter.cs", label="Assert.AreEqual(3, (int)descendantsAndSelf[descendantsAndSelf.Count - 1])", span="856-856"];
m21_701 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2, 3), descendantsAndSelf[descendantsAndSelf.Count - 4]))", span="853-853"];
m21_696 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", file="RegexConverter.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="841-847"];
m21_697 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", file="RegexConverter.cs", label="List<JToken> descendantsAndSelf = a.DescendantsAndSelf().ToList()", span="849-849"];
m21_705 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", span="839-839"];
m21_10 [cluster="Newtonsoft.Json.Converters.RegexConverter.HasFlag(System.Text.RegularExpressions.RegexOptions, System.Text.RegularExpressions.RegexOptions)", file="RegexConverter.cs", label="return ((options & flag) == flag);", span="56-56"];
m21_26 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Text.RegularExpressions.Regex)", file="RegexConverter.cs", label="writer.WriteStartObject()", span="89-89"];
m21_28 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Text.RegularExpressions.Regex)", file="RegexConverter.cs", label="writer.WriteValue(regex.ToString())", span="91-91"];
m21_31 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Text.RegularExpressions.Regex)", file="RegexConverter.cs", label="writer.WriteEndObject()", span="94-94"];
m21_25 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteRegex(string, string)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteRegex(string, string)", span="506-506"];
m21_11 [cluster="Newtonsoft.Json.Converters.RegexConverter.HasFlag(System.Text.RegularExpressions.RegexOptions, System.Text.RegularExpressions.RegexOptions)", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Converters.RegexConverter.HasFlag(System.Text.RegularExpressions.RegexOptions, System.Text.RegularExpressions.RegexOptions)", span="54-54"];
m21_13 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteBson(Newtonsoft.Json.Bson.BsonWriter, System.Text.RegularExpressions.Regex)", file="RegexConverter.cs", label="HasFlag(regex.Options, RegexOptions.IgnoreCase)", span="70-70"];
m21_17 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteBson(Newtonsoft.Json.Bson.BsonWriter, System.Text.RegularExpressions.Regex)", file="RegexConverter.cs", label="HasFlag(regex.Options, RegexOptions.Singleline)", span="76-76"];
m21_23 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteBson(Newtonsoft.Json.Bson.BsonWriter, System.Text.RegularExpressions.Regex)", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Converters.RegexConverter.WriteBson(Newtonsoft.Json.Bson.BsonWriter, System.Text.RegularExpressions.Regex)", span="59-59"];
m21_33 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="355-355"];
m21_20 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteBson(Newtonsoft.Json.Bson.BsonWriter, System.Text.RegularExpressions.Regex)", file="RegexConverter.cs", label="HasFlag(regex.Options, RegexOptions.ExplicitCapture)", span="81-81"];
m21_32 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Text.RegularExpressions.Regex)", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Text.RegularExpressions.Regex)", span="87-87"];
m21_12 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteBson(Newtonsoft.Json.Bson.BsonWriter, System.Text.RegularExpressions.Regex)", file="RegexConverter.cs", label="string options = null", span="68-68"];
m21_14 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteBson(Newtonsoft.Json.Bson.BsonWriter, System.Text.RegularExpressions.Regex)", file="RegexConverter.cs", label="options += ''i''", span="71-71"];
m21_15 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteBson(Newtonsoft.Json.Bson.BsonWriter, System.Text.RegularExpressions.Regex)", file="RegexConverter.cs", label="HasFlag(regex.Options, RegexOptions.Multiline)", span="73-73"];
m21_16 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteBson(Newtonsoft.Json.Bson.BsonWriter, System.Text.RegularExpressions.Regex)", file="RegexConverter.cs", label="options += ''m''", span="74-74"];
m21_21 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteBson(Newtonsoft.Json.Bson.BsonWriter, System.Text.RegularExpressions.Regex)", file="RegexConverter.cs", label="options += ''x''", span="82-82"];
m21_22 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteBson(Newtonsoft.Json.Bson.BsonWriter, System.Text.RegularExpressions.Regex)", file="RegexConverter.cs", label="writer.WriteRegex(regex.ToString(), options)", span="84-84"];
m21_24 [cluster="System.Text.RegularExpressions.Regex.ToString()", file="RegexConverter.cs", label="Entry System.Text.RegularExpressions.Regex.ToString()", span="0-0"];
m21_34 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="405-405"];
m21_35 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="795-795"];
m21_18 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteBson(Newtonsoft.Json.Bson.BsonWriter, System.Text.RegularExpressions.Regex)", file="RegexConverter.cs", label="options += ''s''", span="77-77"];
m21_19 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteBson(Newtonsoft.Json.Bson.BsonWriter, System.Text.RegularExpressions.Regex)", file="RegexConverter.cs", label="options += ''u''", span="79-79"];
m21_36 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="804-804"];
m21_281 [cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToObject<T>()", span="1929-1929"];
m21_566 [cluster="Unk.IsFalse", file="RegexConverter.cs", label="Entry Unk.IsFalse", span=""];
m21_723 [cluster="System.Collections.Generic.IEnumerable<T>.DescendantsAndSelf<T>()", file="RegexConverter.cs", label="Entry System.Collections.Generic.IEnumerable<T>.DescendantsAndSelf<T>()", span="88-88"];
m21_284 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", span="403-403"];
m21_286 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)new JValue(1); }, ''Can not convert Integer to DateTime.'')", span="406-406"];
m21_294 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(1); }, ''Can not convert Integer to Uri.'')", span="415-415"];
m21_302 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)new JValue(1); }, ''Can not convert Integer to TimeSpan.'')", span="426-426"];
m21_311 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Guid)new JValue(1); }, ''Can not convert Integer to Guid.'')", span="438-438"];
m21_299 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(DateTime.Now); }, ''Can not convert Date to Uri.'')", span="420-420"];
m21_307 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)new JValue(DateTime.Now); }, ''Can not convert Date to TimeSpan.'')", span="431-431"];
m21_315 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Guid)new JValue(DateTime.Now); }, ''Can not convert Date to Guid.'')", span="442-442"];
m21_325 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (sbyte?)new JValue(DateTime.Now); }, ''Can not convert Date to SByte.'')", span="461-461"];
m21_326 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (sbyte)new JValue(DateTime.Now); }, ''Can not convert Date to SByte.'')", span="462-462"];
m21_300 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(DateTimeOffset.Now); }, ''Can not convert Date to Uri.'')", span="422-422"];
m21_308 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)new JValue(DateTimeOffset.Now); }, ''Can not convert Date to TimeSpan.'')", span="433-433"];
m21_316 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Guid)new JValue(DateTimeOffset.Now); }, ''Can not convert Date to Guid.'')", span="444-444"];
m21_285 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)new JValue(true); }, ''Can not convert Boolean to DateTime.'')", span="405-405"];
m21_293 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(true); }, ''Can not convert Boolean to Uri.'')", span="414-414"];
m21_301 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)new JValue(true); }, ''Can not convert Boolean to TimeSpan.'')", span="425-425"];
m21_310 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Guid)new JValue(true); }, ''Can not convert Boolean to Guid.'')", span="437-437"];
m21_319 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTimeOffset)new JValue(true); }, ''Can not convert Boolean to DateTimeOffset.'')", span="450-450"];
m21_320 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(true); }, ''Can not convert Boolean to Uri.'')", span="452-452"];
m21_291 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)JValue.CreateNull(); }, ''Can not convert Null to DateTime.'')", span="411-411"];
m21_305 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)JValue.CreateNull(); }, ''Can not convert Null to TimeSpan.'')", span="429-429"];
m21_314 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Guid)JValue.CreateNull(); }, ''Can not convert Null to Guid.'')", span="441-441"];
m21_322 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (JValue.CreateNull()).ToObject<BigInteger>(); }, ''Can not convert Null to BigInteger.'')", span="456-456"];
m21_287 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)new JValue(1.1); }, ''Can not convert Float to DateTime.'')", span="407-407"];
m21_295 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(1.1); }, ''Can not convert Float to Uri.'')", span="416-416"];
m21_303 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)new JValue(1.1); }, ''Can not convert Float to TimeSpan.'')", span="427-427"];
m21_312 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Guid)new JValue(1.1); }, ''Can not convert Float to Guid.'')", span="439-439"];
m21_327 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (new JValue(''Ordinal1'')).ToObject<StringComparison>(); }, ''Could not convert 'Ordinal1' to StringComparison.'')", span="464-464"];
m21_328 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (new JValue(''Ordinal1'')).ToObject<StringComparison?>(); }, ''Could not convert 'Ordinal1' to StringComparison.'')", span="465-465"];
m21_288 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)new JValue(1.1m); }, ''Can not convert Float to DateTime.'')", span="408-408"];
m21_296 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(1.1m); }, ''Can not convert Float to Uri.'')", span="417-417"];
m21_304 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)new JValue(1.1m); }, ''Can not convert Float to TimeSpan.'')", span="428-428"];
m21_313 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Guid)new JValue(1.1m); }, ''Can not convert Float to Guid.'')", span="440-440"];
m21_317 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Guid)new JValue(TimeSpan.FromMinutes(1)); }, ''Can not convert TimeSpan to Guid.'')", span="446-446"];
m21_289 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)new JValue(TimeSpan.Zero); }, ''Can not convert TimeSpan to DateTime.'')", span="409-409"];
m21_297 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(TimeSpan.Zero); }, ''Can not convert TimeSpan to Uri.'')", span="418-418"];
m21_292 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)new JValue(Guid.NewGuid()); }, ''Can not convert Guid to DateTime.'')", span="412-412"];
m21_298 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(Guid.NewGuid()); }, ''Can not convert Guid to Uri.'')", span="419-419"];
m21_306 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)new JValue(Guid.NewGuid()); }, ''Can not convert Guid to TimeSpan.'')", span="430-430"];
m21_323 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (new JValue(Guid.NewGuid())).ToObject<BigInteger>(); }, ''Can not convert Guid to BigInteger.'')", span="457-457"];
m21_324 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (new JValue(Guid.NewGuid())).ToObject<BigInteger?>(); }, ''Can not convert Guid to BigInteger.'')", span="458-458"];
m21_290 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)new JValue(new Uri(''http://www.google.com'')); }, ''Can not convert Uri to DateTime.'')", span="410-410"];
m21_309 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)new JValue(new Uri(''http://www.google.com'')); }, ''Can not convert Uri to TimeSpan.'')", span="435-435"];
m21_318 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Guid)new JValue(new Uri(''http://www.google.com'')); }, ''Can not convert Uri to Guid.'')", span="447-447"];
m21_321 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (new JValue(new Uri(''http://www.google.com''))).ToObject<BigInteger>(); }, ''Can not convert Uri to BigInteger.'')", span="455-455"];
m21_329 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", span="403-403"];
m21_779 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string)", span="298-298"];
m21_38 [cluster="System.IO.StringReader.StringReader(string)", file="RegexConverter.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m21_48 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadBson(Newtonsoft.Json.Bson.BsonReader)", file="RegexConverter.cs", label="string patternText = regexText.Substring(1, patternOptionDelimiterIndex - 1)", span="120-120"];
m21_46 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadBson(Newtonsoft.Json.Bson.BsonReader)", file="RegexConverter.cs", label="string regexText = (string)reader.Value", span="117-117"];
m21_102 [cluster="Unk.IsNull", file="RegexConverter.cs", label="Entry Unk.IsNull", span=""];
m21_744 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEnd()", span="474-474"];
m21_707 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", span="860-860"];
m21_713 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="RegexConverter.cs", label="Assert.AreEqual(a, descendantsAndSelf[0])", span="879-879"];
m21_719 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="RegexConverter.cs", label="Assert.AreEqual(o, descendantsAndSelf[descendantsAndSelf.Count - 3])", span="885-885"];
m21_720 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="RegexConverter.cs", label="Assert.AreEqual(o.Property(''prop1''), descendantsAndSelf[descendantsAndSelf.Count - 2])", span="886-886"];
m21_721 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="RegexConverter.cs", label="Assert.AreEqual(o[''prop1''], descendantsAndSelf[descendantsAndSelf.Count - 1])", span="887-887"];
m21_712 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="RegexConverter.cs", label="Assert.AreEqual(14, descendantsAndSelf.Count())", span="878-878"];
m21_714 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="RegexConverter.cs", label="Assert.AreEqual(5, (int)descendantsAndSelf[1])", span="880-880"];
m21_716 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="RegexConverter.cs", label="Assert.AreEqual(1, (int)descendantsAndSelf[descendantsAndSelf.Count - 6])", span="882-882"];
m21_717 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="RegexConverter.cs", label="Assert.AreEqual(2, (int)descendantsAndSelf[descendantsAndSelf.Count - 5])", span="883-883"];
m21_718 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="RegexConverter.cs", label="Assert.AreEqual(3, (int)descendantsAndSelf[descendantsAndSelf.Count - 4])", span="884-884"];
m21_715 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2, 3), descendantsAndSelf[descendantsAndSelf.Count - 7]))", span="881-881"];
m21_708 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="RegexConverter.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="862-868"];
m21_711 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="RegexConverter.cs", label="List<JToken> descendantsAndSelf = source.DescendantsAndSelf().ToList()", span="877-877"];
m21_709 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="RegexConverter.cs", label="JObject o = new JObject\r\n            {\r\n                { ''prop1'', ''value1'' }\r\n            }", span="870-873"];
m21_710 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="RegexConverter.cs", label="List<JContainer> source = new List<JContainer> { a, o }", span="875-875"];
m21_722 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", span="860-860"];
m21_270 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", span="181-181"];
m21_9 [cluster="Unk.IsTrue", file="RegexConverter.cs", label="Entry Unk.IsTrue", span=""];
m21_79 [cluster="Newtonsoft.Json.Converters.RegexConverter.CanConvert(System.Type)", file="RegexConverter.cs", label="return (objectType == typeof (Regex));", span="170-170"];
m21_262 [cluster="Newtonsoft.Json.Linq.JValue.JValue(bool)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(bool)", span="145-145"];
m21_694 [cluster="System.Collections.Generic.IEnumerable<T>.Descendants<T>()", file="RegexConverter.cs", label="Entry System.Collections.Generic.IEnumerable<T>.Descendants<T>()", span="75-75"];
m21_278 [cluster="System.Guid.ToByteArray()", file="RegexConverter.cs", label="Entry System.Guid.ToByteArray()", span="0-0"];
m21_261 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(object)", span="190-190"];
m21_264 [cluster="Newtonsoft.Json.Linq.JValue.JValue(double)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(double)", span="107-107"];
m21_88 [cluster="Unk.AreNotEqual", file="RegexConverter.cs", label="Entry Unk.AreNotEqual", span=""];
m21_86 [cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JObject.Property(string)", span="258-258"];
m21_330 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="369-369"];
m21_604 [cluster="Newtonsoft.Json.Linq.JToken.AfterSelf()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.AfterSelf()", span="294-294"];
m21_273 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", span="172-172"];
m21_45 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadJson(Newtonsoft.Json.JsonReader)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Converters.RegexConverter.ReadJson(Newtonsoft.Json.JsonReader)", span="146-146"];
m21_78 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", span="128-128"];
m21_80 [cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor(string)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor(string)", span="126-126"];
m21_267 [cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="154-154"];
m21_268 [cluster="Newtonsoft.Json.Linq.JValue.JValue(decimal)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(decimal)", span="79-79"];
m21_636 [cluster="Newtonsoft.Json.Linq.JToken.AncestorsAndSelf()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.AncestorsAndSelf()", span="277-277"];
m21_69 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", color=green, community=0, file="RegexConverter.cs", label="Assert.AreEqual(null, o.Parent)", prediction=347, span="156-156"];
m21_71 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", color=green, community=0, file="RegexConverter.cs", label="Assert.AreEqual(o, o1.Value)", prediction=347, span="158-158"];
m21_72 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", color=green, community=0, file="RegexConverter.cs", label="Assert.AreNotEqual(null, o.Parent)", prediction=347, span="160-160"];
m21_73 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", color=green, community=0, file="RegexConverter.cs", label="JProperty o2 = new JProperty(''O2'', o)", prediction=350, span="161-161"];
m21_74 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", color=green, community=0, file="RegexConverter.cs", label="Assert.AreNotSame(o1.Value, o2.Value)", prediction=351, span="163-163"];
m21_75 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", color=green, community=0, file="RegexConverter.cs", label="Assert.AreEqual(o1.Value.Children().Count(), o2.Value.Children().Count())", prediction=350, span="164-164"];
m21_76 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", color=green, community=0, file="RegexConverter.cs", label="Assert.AreEqual(false, JToken.DeepEquals(o1, o2))", prediction=353, span="165-165"];
m21_761 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", span="946-946"];
m21_766 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="RegexConverter.cs", label="Assert.AreEqual(0, a.Count())", span="960-960"];
m21_764 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="RegexConverter.cs", label="Assert.AreEqual(5, (int)first)", span="957-957"];
m21_762 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="RegexConverter.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="948-954"];
m21_765 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="RegexConverter.cs", label="a.RemoveAll()", span="959-959"];
m21_767 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="RegexConverter.cs", label="Assert.IsNull(first.Parent)", span="962-962"];
m21_763 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="RegexConverter.cs", label="JToken first = a.First", span="956-956"];
m21_768 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="RegexConverter.cs", label="Assert.IsNull(first.Next)", span="963-963"];
m21_769 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", span="946-946"];
m21_8 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Text.RegularExpressions.Regex)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Text.RegularExpressions.Regex)", span="87-87"];
m21_789 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", span="987-987"];
m21_792 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="RegexConverter.cs", label="Assert.AreEqual(int.MaxValue, (int)a[0])", span="998-998"];
m21_793 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="RegexConverter.cs", label="Assert.AreEqual(4, a.Count())", span="999-999"];
m21_795 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="RegexConverter.cs", label="Assert.AreEqual(''Test'', (string)a[1][0])", span="1002-1002"];
m21_797 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="RegexConverter.cs", label="Assert.AreEqual(int.MaxValue, (int)a[2])", span="1005-1005"];
m21_798 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="RegexConverter.cs", label="Assert.AreEqual(4, a.Count())", span="1006-1006"];
m21_799 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(int.MaxValue, new JArray(''Test''), int.MaxValue, new JArray(1, 2, 3)), a))", span="1008-1008"];
m21_790 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="RegexConverter.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="989-995"];
m21_791 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="RegexConverter.cs", label="a[0].Replace(new JValue(int.MaxValue))", span="997-997"];
m21_794 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="RegexConverter.cs", label="a[1][0].Replace(new JValue(''Test''))", span="1001-1001"];
m21_796 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="RegexConverter.cs", label="a[2].Replace(new JValue(int.MaxValue))", span="1004-1004"];
m21_800 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", span="987-987"];
m21_652 [cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="88-88"];
m21_66 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="RegexConverter.cs", label="Assert.AreNotSame(p.Value, v)", span="150-150"];
m21_91 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", span="170-170"];
m21_92 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", color=green, community=0, file="RegexConverter.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    6,\r\n                    new JArray(7, 8),\r\n                    new JArray(9, 10)\r\n                    )", prediction=354, span="172-178"];
m21_93 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="RegexConverter.cs", label="JToken next = a[0].Next", span="180-180"];
m21_94 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", color=green, community=0, file="RegexConverter.cs", label="Assert.AreEqual(6, (int)next)", prediction=355, span="181-181"];
m21_95 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", color=green, community=0, file="RegexConverter.cs", label="next = next.Next", prediction=356, span="183-183"];
m21_96 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(7, 8), next))", span="184-184"];
m21_97 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="RegexConverter.cs", label="next = next.Next", span="186-186"];
m21_98 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(9, 10), next))", span="187-187"];
m21_99 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="RegexConverter.cs", label="next = next.Next", span="189-189"];
m21_100 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="RegexConverter.cs", label="Assert.IsNull(next)", span="190-190"];
m21_101 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", span="170-170"];
m21_770 [cluster="Newtonsoft.Json.Linq.JContainer.RemoveAll()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JContainer.RemoveAll()", span="730-730"];
m21_606 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", span="660-660"];
m21_610 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="RegexConverter.cs", label="Assert.AreEqual(2, beforeTokens.Count)", span="673-673"];
m21_611 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(5), beforeTokens[0]))", span="674-674"];
m21_612 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(1), beforeTokens[1]))", span="675-675"];
m21_607 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="RegexConverter.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="662-668"];
m21_609 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="RegexConverter.cs", label="List<JToken> beforeTokens = t.BeforeSelf().ToList()", span="671-671"];
m21_608 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="RegexConverter.cs", label="JToken t = a[2]", span="670-670"];
m21_613 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", span="660-660"];
m21_47 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadBson(Newtonsoft.Json.Bson.BsonReader)", file="RegexConverter.cs", label="int patternOptionDelimiterIndex = regexText.LastIndexOf('/')", span="118-118"];
m21_44 [cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="RegexConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0"];
m21_49 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Load()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Load()", span="114-114"];
m21_61 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="RegexConverter.cs", label="Assert.AreEqual(null, v.Parent)", span="132-132"];
m21_50 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Load()", color=green, community=0, file="RegexConverter.cs", label="JObject o = (JObject)JToken.Load(new JsonTextReader(new StringReader(''{'pie':true}'')))", prediction=357, span="116-116"];
m21_51 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Load()", color=green, community=0, file="RegexConverter.cs", label="Assert.AreEqual(true, (bool)o[''pie''])", prediction=358, span="117-117"];
m21_54 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Parse()", span="121-121"];
m21_52 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Load()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Load()", span="114-114"];
m21_53 [cluster="Newtonsoft.Json.Linq.JToken.Load(Newtonsoft.Json.JsonReader)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.Load(Newtonsoft.Json.JsonReader)", span="2220-2220"];
m21_55 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse()", file="RegexConverter.cs", label="JObject o = (JObject)JToken.Parse(''{'pie':true}'')", span="123-123"];
m21_57 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Parse()", span="121-121"];
m21_59 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", span="128-128"];
m21_56 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse()", file="RegexConverter.cs", label="Assert.AreEqual(true, (bool)o[''pie''])", span="124-124"];
m21_58 [cluster="Newtonsoft.Json.Linq.JToken.Parse(string)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.Parse(string)", span="2168-2168"];
m21_60 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="RegexConverter.cs", label="JArray v = new JArray(new JConstructor(''TestConstructor''), new JValue(new DateTime(2000, 12, 20)))", span="130-130"];
m21_62 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="RegexConverter.cs", label="JObject o =\r\n                new JObject(\r\n                    new JProperty(''Test1'', v),\r\n                    new JProperty(''Test2'', ''Test2Value''),\r\n                    new JProperty(''Test3'', ''Test3Value''),\r\n                    new JProperty(''Test4'', null)\r\n                    )", span="134-140"];
m21_740 [cluster="Unk.IsNotNull", file="RegexConverter.cs", label="Entry Unk.IsNotNull", span=""];
m21_84 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="321-321"];
m21_83 [cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="105-105"];
m21_746 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", span="919-919"];
m21_749 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="RegexConverter.cs", label="Assert.AreEqual(''First'', (string)a[0])", span="931-931"];
m21_750 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="RegexConverter.cs", label="Assert.AreEqual(a, a[0].Parent)", span="932-932"];
m21_751 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="RegexConverter.cs", label="Assert.AreEqual(a[1], a[0].Next)", span="933-933"];
m21_752 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="RegexConverter.cs", label="Assert.AreEqual(5, a.Count())", span="934-934"];
m21_754 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="RegexConverter.cs", label="Assert.AreEqual(''NewFirst'', (string)a[0])", span="937-937"];
m21_755 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="RegexConverter.cs", label="Assert.AreEqual(a, a[0].Parent)", span="938-938"];
m21_756 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="RegexConverter.cs", label="Assert.AreEqual(a[1], a[0].Next)", span="939-939"];
m21_757 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="RegexConverter.cs", label="Assert.AreEqual(6, a.Count())", span="940-940"];
m21_758 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="RegexConverter.cs", label="Assert.AreEqual(a[0], a[0].Next.Previous)", span="942-942"];
m21_747 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="RegexConverter.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="921-927"];
m21_748 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="RegexConverter.cs", label="a.AddFirst(''First'')", span="929-929"];
m21_753 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="RegexConverter.cs", label="a.AddFirst(''NewFirst'')", span="936-936"];
m21_759 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", span="919-919"];
m21_596 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", span="641-641"];
m21_600 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="RegexConverter.cs", label="Assert.AreEqual(2, afterTokens.Count)", span="654-654"];
m21_601 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2), afterTokens[0]))", span="655-655"];
m21_602 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2, 3), afterTokens[1]))", span="656-656"];
m21_597 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="RegexConverter.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="643-649"];
m21_599 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="RegexConverter.cs", label="List<JToken> afterTokens = t.AfterSelf().ToList()", span="652-652"];
m21_598 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="RegexConverter.cs", label="JToken t = a[1]", span="651-651"];
m21_603 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", span="641-641"];
m21_605 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="RegexConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m21_741 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="912-912"];
m21_87 [cluster="Unk.AreNotSame", file="RegexConverter.cs", label="Entry Unk.AreNotSame", span=""];
m21_739 [cluster="Newtonsoft.Json.Linq.JContainer.CreateWriter()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JContainer.CreateWriter()", span="712-712"];
m21_653 [cluster="System.Collections.Generic.List<T>.List()", file="RegexConverter.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m21_271 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Guid)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.Guid)", span="163-163"];
m21_103 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", span="194-194"];
m21_108 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="RegexConverter.cs", label="Assert.AreEqual(6, (int)previous)", span="208-208"];
m21_110 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="RegexConverter.cs", label="Assert.AreEqual(5, (int)previous)", span="211-211"];
m21_106 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(7, 8), previous))", span="205-205"];
m21_104 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="RegexConverter.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    6,\r\n                    new JArray(7, 8),\r\n                    new JArray(9, 10)\r\n                    )", span="196-202"];
m21_107 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="RegexConverter.cs", label="previous = previous.Previous", span="207-207"];
m21_109 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="RegexConverter.cs", label="previous = previous.Previous", span="210-210"];
m21_111 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="RegexConverter.cs", label="previous = previous.Previous", span="213-213"];
m21_105 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="RegexConverter.cs", label="JToken previous = a[3].Previous", span="204-204"];
m21_112 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="RegexConverter.cs", label="Assert.IsNull(previous)", span="214-214"];
m21_113 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", span="194-194"];
m21_830 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", span="1068-1068"];
m21_833 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="RegexConverter.cs", label="Assert.AreEqual(5, (int)a[0])", span="1080-1080"];
m21_834 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="RegexConverter.cs", label="Assert.AreEqual(''pie'', (string)a[1])", span="1081-1081"];
m21_835 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="RegexConverter.cs", label="Assert.AreEqual(a, a[1].Parent)", span="1082-1082"];
m21_836 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="RegexConverter.cs", label="Assert.AreEqual(a[2], a[1].Next)", span="1083-1083"];
m21_837 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="RegexConverter.cs", label="Assert.AreEqual(5, a.Count())", span="1084-1084"];
m21_839 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="RegexConverter.cs", label="Assert.AreEqual(''firstpie'', (string)a[0])", span="1088-1088"];
m21_840 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="RegexConverter.cs", label="Assert.AreEqual(5, (int)a[1])", span="1089-1089"];
m21_841 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="RegexConverter.cs", label="Assert.AreEqual(''pie'', (string)a[2])", span="1090-1090"];
m21_842 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="RegexConverter.cs", label="Assert.AreEqual(a, a[0].Parent)", span="1091-1091"];
m21_843 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="RegexConverter.cs", label="Assert.AreEqual(a[1], a[0].Next)", span="1092-1092"];
m21_844 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="RegexConverter.cs", label="Assert.AreEqual(6, a.Count())", span="1093-1093"];
m21_846 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="RegexConverter.cs", label="Assert.AreEqual(''secondlastpie'', (string)a[5])", span="1097-1097"];
m21_847 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="RegexConverter.cs", label="Assert.AreEqual(7, a.Count())", span="1098-1098"];
m21_831 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="RegexConverter.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="1070-1076"];
m21_832 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="RegexConverter.cs", label="a[1].AddBeforeSelf(''pie'')", span="1078-1078"];
m21_838 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="RegexConverter.cs", label="a[0].AddBeforeSelf(''firstpie'')", span="1086-1086"];
m21_845 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="RegexConverter.cs", label="a.Last.AddBeforeSelf(''secondlastpie'')", span="1095-1095"];
m21_848 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", span="1068-1068"];
m21_85 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, params object[])", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, params object[])", span="311-311"];
m21_82 [cluster="System.DateTime.DateTime(int, int, int)", file="RegexConverter.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m21_282 [cluster="BigInteger.cstr", file="RegexConverter.cs", label="Entry BigInteger.cstr", span=""];
m21_850 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", span="1102-1102"];
m21_851 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", file="RegexConverter.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3),\r\n                    new JObject(\r\n                        new JProperty(''First'', new JValue(Encoding.UTF8.GetBytes(''Hi''))),\r\n                        new JProperty(''Second'', 1),\r\n                        new JProperty(''Third'', null),\r\n                        new JProperty(''Fourth'', new JConstructor(''Date'', 12345)),\r\n                        new JProperty(''Fifth'', double.PositiveInfinity),\r\n                        new JProperty(''Sixth'', double.NaN)\r\n                        )\r\n                    )", span="1104-1118"];
m21_852 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", file="RegexConverter.cs", label="JArray a2 = (JArray)a.DeepClone()", span="1120-1120"];
m21_854 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", file="RegexConverter.cs", label="Assert.IsTrue(a.DeepEquals(a2))", span="1148-1148"];
m21_853 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", file="RegexConverter.cs", label="StringAssert.AreEqual(@''[\r\n  5,\r\n  [\r\n    1\r\n  ],\r\n  [\r\n    1,\r\n    2\r\n  ],\r\n  [\r\n    1,\r\n    2,\r\n    3\r\n  ],\r\n  {\r\n    ''''First'''': ''''SGk='''',\r\n    ''''Second'''': 1,\r\n    ''''Third'''': null,\r\n    ''''Fourth'''': new Date(\r\n      12345\r\n    ),\r\n    ''''Fifth'''': ''''Infinity'''',\r\n    ''''Sixth'''': ''''NaN''''\r\n  }\r\n]'', a2.ToString(Formatting.Indented))", span="1122-1146"];
m21_855 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", span="1102-1102"];
m21_849 [cluster="Newtonsoft.Json.Linq.JToken.AddBeforeSelf(object)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.AddBeforeSelf(object)", span="253-253"];
m21_903 [cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.SelectToken(string)", span="2297-2297"];
m21_811 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="340-340"];
m21_573 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", span="603-603"];
m21_577 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="RegexConverter.cs", label="Assert.AreEqual(6, (int)a[0])", span="616-616"];
m21_579 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="RegexConverter.cs", label="Assert.AreEqual(6, (int)a[0])", span="620-620"];
m21_581 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="RegexConverter.cs", label="Assert.AreEqual(2, a.Count())", span="622-622"];
m21_584 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="RegexConverter.cs", label="Assert.AreEqual(6, (int)a[0])", span="626-626"];
m21_590 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="RegexConverter.cs", label="Assert.AreEqual(0, a.Count())", span="633-633"];
m21_580 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(9, 10), a[1]))", span="621-621"];
m21_575 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="RegexConverter.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    6,\r\n                    new JArray(7, 8),\r\n                    new JArray(9, 10)\r\n                    )", span="606-612"];
m21_576 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="RegexConverter.cs", label="a[0].Remove()", span="614-614"];
m21_578 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="RegexConverter.cs", label="a[1].Remove()", span="618-618"];
m21_582 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="RegexConverter.cs", label="t = a[1]", span="624-624"];
m21_583 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="RegexConverter.cs", label="t.Remove()", span="625-625"];
m21_585 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="RegexConverter.cs", label="Assert.IsNull(t.Next)", span="627-627"];
m21_589 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="RegexConverter.cs", label="t.Remove()", span="632-632"];
m21_591 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="RegexConverter.cs", label="Assert.IsNull(t.Next)", span="635-635"];
m21_574 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="RegexConverter.cs", label="JToken t", span="605-605"];
m21_588 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="RegexConverter.cs", label="t = a[0]", span="631-631"];
m21_586 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="RegexConverter.cs", label="Assert.IsNull(t.Previous)", span="628-628"];
m21_587 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="RegexConverter.cs", label="Assert.IsNull(t.Parent)", span="629-629"];
m21_592 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="RegexConverter.cs", label="Assert.IsNull(t.Previous)", span="636-636"];
m21_593 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="RegexConverter.cs", label="Assert.IsNull(t.Parent)", span="637-637"];
m21_594 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", span="603-603"];
m21_745 [cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="114-114"];
m21_274 [cluster="System.Uri.Uri(string)", file="RegexConverter.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m21_655 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", span="761-761"];
m21_663 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="RegexConverter.cs", label="Assert.AreEqual(a[1], ancestors[0])", span="783-783"];
m21_664 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="RegexConverter.cs", label="Assert.AreEqual(a, ancestors[1])", span="784-784"];
m21_665 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="RegexConverter.cs", label="Assert.AreEqual(o.Property(''prop1''), ancestors[2])", span="785-785"];
m21_666 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="RegexConverter.cs", label="Assert.AreEqual(o, ancestors[3])", span="786-786"];
m21_662 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="RegexConverter.cs", label="Assert.AreEqual(4, ancestors.Count())", span="782-782"];
m21_656 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="RegexConverter.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="763-769"];
m21_661 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="RegexConverter.cs", label="List<JToken> ancestors = source.Ancestors().ToList()", span="781-781"];
m21_657 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="RegexConverter.cs", label="JObject o = new JObject\r\n            {\r\n                { ''prop1'', ''value1'' }\r\n            }", span="771-774"];
m21_658 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="RegexConverter.cs", label="JToken t1 = a[1][0]", span="776-776"];
m21_660 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="RegexConverter.cs", label="List<JToken> source = new List<JToken> { t1, t2 }", span="779-779"];
m21_659 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="RegexConverter.cs", label="JToken t2 = o[''prop1'']", span="777-777"];
m21_667 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", span="761-761"];
m21_114 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Children()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Children()", span="218-218"];
m21_116 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Children()", file="RegexConverter.cs", label="Assert.AreEqual(4, a.Count())", span="228-228"];
m21_117 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Children()", file="RegexConverter.cs", label="Assert.AreEqual(3, a.Children<JArray>().Count())", span="229-229"];
m21_115 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Children()", file="RegexConverter.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="220-226"];
m21_118 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Children()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Children()", span="218-218"];
m21_77 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", color=green, community=0, file="RegexConverter.cs", label="Assert.AreEqual(true, JToken.DeepEquals(o1.Value, o2.Value))", prediction=350, span="166-166"];
m21_627 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf()", span="711-711"];
m21_633 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf()", file="RegexConverter.cs", label="Assert.AreEqual(a[1], ancestors[1])", span="725-725"];
m21_634 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf()", file="RegexConverter.cs", label="Assert.AreEqual(a, ancestors[2])", span="726-726"];
m21_632 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf()", file="RegexConverter.cs", label="Assert.AreEqual(t, ancestors[0])", span="724-724"];
m21_631 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf()", file="RegexConverter.cs", label="Assert.AreEqual(3, ancestors.Count())", span="723-723"];
m21_628 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf()", file="RegexConverter.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="713-719"];
m21_630 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf()", file="RegexConverter.cs", label="List<JToken> ancestors = t.AncestorsAndSelf().ToList()", span="722-722"];
m21_629 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf()", file="RegexConverter.cs", label="JToken t = a[1][0]", span="721-721"];
m21_635 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf()", span="711-711"];
m21_272 [cluster="System.Guid.Guid(string)", file="RegexConverter.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m21_778 [cluster="Newtonsoft.Json.Linq.JArray.JArray()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray()", span="65-65"];
m21_809 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="34-34"];
m21_120 [cluster="Newtonsoft.Json.Linq.JToken.Children<T>()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.Children<T>()", span="375-375"];
m21_679 [cluster="Newtonsoft.Json.Linq.JContainer.Descendants()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Descendants()", span="289-289"];
m21_331 [cluster="Unk.>", file="RegexConverter.cs", label="Entry Unk.>", span=""];
m21_680 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", span="810-810"];
m21_691 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="RegexConverter.cs", label="Assert.AreEqual(o.Property(''prop1''), descendants[descendants.Count - 2])", span="834-834"];
m21_692 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="RegexConverter.cs", label="Assert.AreEqual(o[''prop1''], descendants[descendants.Count - 1])", span="835-835"];
m21_685 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="RegexConverter.cs", label="Assert.AreEqual(12, descendants.Count())", span="828-828"];
m21_686 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="RegexConverter.cs", label="Assert.AreEqual(5, (int)descendants[0])", span="829-829"];
m21_688 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="RegexConverter.cs", label="Assert.AreEqual(1, (int)descendants[descendants.Count - 5])", span="831-831"];
m21_689 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="RegexConverter.cs", label="Assert.AreEqual(2, (int)descendants[descendants.Count - 4])", span="832-832"];
m21_690 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="RegexConverter.cs", label="Assert.AreEqual(3, (int)descendants[descendants.Count - 3])", span="833-833"];
m21_687 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2, 3), descendants[descendants.Count - 6]))", span="830-830"];
m21_681 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="RegexConverter.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="812-818"];
m21_682 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="RegexConverter.cs", label="JObject o = new JObject\r\n            {\r\n                { ''prop1'', ''value1'' }\r\n            }", span="820-823"];
m21_684 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="RegexConverter.cs", label="List<JToken> descendants = source.Descendants().ToList()", span="827-827"];
m21_683 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="RegexConverter.cs", label="List<JContainer> source = new List<JContainer> { a, o }", span="825-825"];
m21_693 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", span="810-810"];
m21_37 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="363-363"];
m21_121 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeAfter()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeAfter()", span="233-233"];
m21_123 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeAfter()", file="RegexConverter.cs", label="Assert.AreEqual(5, (int)a[1].Previous)", span="243-243"];
m21_124 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeAfter()", file="RegexConverter.cs", label="Assert.AreEqual(2, a[2].BeforeSelf().Count())", span="244-244"];
m21_122 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeAfter()", file="RegexConverter.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1, 2, 3),\r\n                    new JArray(1, 2, 3),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="235-241"];
m21_125 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeAfter()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeAfter()", span="233-233"];
m21_856 [cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor(string, object)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor(string, object)", span="116-116"];
m21_813 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", span="1031-1031"];
m21_816 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", file="RegexConverter.cs", label="Assert.AreEqual(@''[''''2009-02-15T00:00:00Z'''']'', json)", span="1040-1040"];
m21_815 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", file="RegexConverter.cs", label="string json = a.ToString(Formatting.None, new IsoDateTimeConverter())", span="1038-1038"];
m21_814 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", file="RegexConverter.cs", label="JArray a =\r\n                new JArray(\r\n                    new JValue(new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc))\r\n                    )", span="1033-1036"];
m21_817 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", span="1031-1031"];
m21_280 [cluster="JValue.cstr", file="RegexConverter.cs", label="Entry JValue.cstr", span=""];
m21_788 [cluster="Newtonsoft.Json.Linq.JContainer.Add(object)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Add(object)", span="658-658"];
m21_275 [cluster="System.Text.Encoding.GetBytes(string)", file="RegexConverter.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m21_866 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", span="1180-1180"];
m21_867 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="RegexConverter.cs", label="JArray a =\r\n                new JArray(\r\n                    double.NaN,\r\n                    double.PositiveInfinity,\r\n                    double.NegativeInfinity\r\n                    )", span="1182-1187"];
m21_868 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="RegexConverter.cs", label="JArray a2 = (JArray)a.DeepClone()", span="1189-1189"];
m21_869 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="RegexConverter.cs", label="Assert.IsTrue(a.DeepEquals(a2))", span="1191-1191"];
m21_873 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="RegexConverter.cs", label="Assert.IsTrue(v1.DeepEquals(v2))", span="1198-1198"];
m21_871 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="RegexConverter.cs", label="JValue v1 = new JValue(d)", span="1195-1195"];
m21_872 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="RegexConverter.cs", label="JValue v2 = new JValue(1.3)", span="1196-1196"];
m21_870 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="RegexConverter.cs", label="double d = 1 + 0.1 + 0.1 + 0.1", span="1193-1193"];
m21_874 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", span="1180-1180"];
m21_724 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", span="891-891"];
m21_728 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="RegexConverter.cs", label="Assert.AreEqual(4, a.Count())", span="903-903"];
m21_730 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="RegexConverter.cs", label="Assert.AreEqual(5, a.Count())", span="906-906"];
m21_731 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="RegexConverter.cs", label="Assert.AreEqual(''String'', (string)a[4])", span="907-907"];
m21_736 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="RegexConverter.cs", label="Assert.AreEqual(6, a.Count())", span="914-914"];
m21_737 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''Property'', ''PropertyValue'')), a[5]))", span="915-915"];
m21_725 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="RegexConverter.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="893-899"];
m21_727 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="RegexConverter.cs", label="Assert.IsNotNull(writer)", span="902-902"];
m21_729 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="RegexConverter.cs", label="writer.WriteValue(''String'')", span="905-905"];
m21_732 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="RegexConverter.cs", label="writer.WriteStartObject()", span="909-909"];
m21_735 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="RegexConverter.cs", label="writer.WriteEnd()", span="912-912"];
m21_726 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="RegexConverter.cs", label="JsonWriter writer = a.CreateWriter()", span="901-901"];
m21_733 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="RegexConverter.cs", label="writer.WritePropertyName(''Property'')", span="910-910"];
m21_734 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="RegexConverter.cs", label="writer.WriteValue(''PropertyValue'')", span="911-911"];
m21_738 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", span="891-891"];
m21_618 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", span="693-693"];
m21_623 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="RegexConverter.cs", label="Assert.AreEqual(a[1], ancestors[0])", span="706-706"];
m21_624 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="RegexConverter.cs", label="Assert.AreEqual(a, ancestors[1])", span="707-707"];
m21_622 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="RegexConverter.cs", label="Assert.AreEqual(2, ancestors.Count())", span="705-705"];
m21_619 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="RegexConverter.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="695-701"];
m21_621 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="RegexConverter.cs", label="List<JToken> ancestors = t.Ancestors().ToList()", span="704-704"];
m21_620 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="RegexConverter.cs", label="JToken t = a[1][0]", span="703-703"];
m21_625 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", span="693-693"];
m21_626 [cluster="Newtonsoft.Json.Linq.JToken.Ancestors()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.Ancestors()", span="268-268"];
m21_829 [cluster="Newtonsoft.Json.Linq.JToken.AddAfterSelf(object)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.AddAfterSelf(object)", span="238-238"];
m21_760 [cluster="Newtonsoft.Json.Linq.JContainer.AddFirst(object)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JContainer.AddFirst(object)", span="672-672"];
m21_771 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddPropertyToArray()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AddPropertyToArray()", span="967-967"];
m21_772 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddPropertyToArray()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() =>\r\n            {\r\n                JArray a = new JArray();\r\n                a.Add(new JProperty(''PropertyName''));\r\n            }, ''Can not add Newtonsoft.Json.Linq.JProperty to Newtonsoft.Json.Linq.JArray.'')", span="969-973"];
m21_773 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddPropertyToArray()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AddPropertyToArray()", span="967-967"];
m21_258 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="RegexConverter.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m21_7 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="395-395"];
m21_818 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", span="1044-1044"];
m21_821 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="RegexConverter.cs", label="Assert.AreEqual(5, (int)a[0])", span="1056-1056"];
m21_822 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="RegexConverter.cs", label="Assert.AreEqual(1, a[1].Count())", span="1057-1057"];
m21_823 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="RegexConverter.cs", label="Assert.AreEqual(''pie'', (string)a[2])", span="1058-1058"];
m21_824 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="RegexConverter.cs", label="Assert.AreEqual(5, a.Count())", span="1059-1059"];
m21_826 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="RegexConverter.cs", label="Assert.AreEqual(''lastpie'', (string)a[5])", span="1063-1063"];
m21_827 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="RegexConverter.cs", label="Assert.AreEqual(''lastpie'', (string)a.Last)", span="1064-1064"];
m21_819 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="RegexConverter.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="1046-1052"];
m21_820 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="RegexConverter.cs", label="a[1].AddAfterSelf(''pie'')", span="1054-1054"];
m21_825 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="RegexConverter.cs", label="a[4].AddAfterSelf(''lastpie'')", span="1061-1061"];
m21_828 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", span="1044-1044"];
m21_269 [cluster="System.TimeSpan.FromMinutes(double)", file="RegexConverter.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m21_668 [cluster="System.Collections.Generic.IEnumerable<T>.Ancestors<T>()", file="RegexConverter.cs", label="Entry System.Collections.Generic.IEnumerable<T>.Ancestors<T>()", span="49-49"];
m21_65 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="RegexConverter.cs", label="Assert.AreEqual(o.Property(''Test1''), v.Parent)", span="147-147"];
m21_801 [cluster="Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)", span="407-407"];
m21_259 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="RegexConverter.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m21_260 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTimeOffset)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.DateTimeOffset)", span="135-135"];
m21_279 [cluster="Unk.Parse", file="RegexConverter.cs", label="Entry Unk.Parse", span=""];
m21_119 [cluster="Newtonsoft.Json.Linq.JArray.JArray(object)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray(object)", span="91-91"];
m21_614 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", span="679-679"];
m21_615 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", file="RegexConverter.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="681-687"];
m21_616 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", file="RegexConverter.cs", label="Assert.IsTrue(a.HasValues)", span="689-689"];
m21_617 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", span="679-679"];
m21_913 [cluster="Newtonsoft.Json.Linq.JToken.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", span="2180-2180"];
m21_510 [cluster="Newtonsoft.Json.Linq.JValue.JValue(char)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(char)", span="88-88"];
m21_265 [cluster="Newtonsoft.Json.Linq.JValue.JValue(float)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(float)", span="116-116"];
m21_63 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="RegexConverter.cs", label="Assert.AreEqual(o.Property(''Test1''), v.Parent)", span="142-142"];
m21_904 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse_NoComments()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Parse_NoComments()", span="1255-1255"];
m21_907 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse_NoComments()", file="RegexConverter.cs", label="Assert.AreEqual(3, o[''prop''].Count())", span="1264-1264"];
m21_908 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse_NoComments()", file="RegexConverter.cs", label="Assert.AreEqual(1, (int)o[''prop''][0])", span="1265-1265"];
m21_909 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse_NoComments()", file="RegexConverter.cs", label="Assert.AreEqual(2, (int)o[''prop''][1])", span="1266-1266"];
m21_910 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse_NoComments()", file="RegexConverter.cs", label="Assert.AreEqual(3, (int)o[''prop''][2])", span="1267-1267"];
m21_906 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse_NoComments()", file="RegexConverter.cs", label="JToken o = JToken.Parse(json, new JsonLoadSettings\r\n            {\r\n                CommentHandling = CommentHandling.Ignore\r\n            })", span="1259-1262"];
m21_905 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse_NoComments()", file="RegexConverter.cs", label="string json = ''{'prop':[1,2/*comment*/,3]}''", span="1257-1257"];
m21_911 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse_NoComments()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Parse_NoComments()", span="1255-1255"];
m21_567 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", span="587-587"];
m21_569 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="RegexConverter.cs", label="Assert.AreEqual(a, a.Root)", span="597-597"];
m21_570 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="RegexConverter.cs", label="Assert.AreEqual(a, a[0].Root)", span="598-598"];
m21_571 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="RegexConverter.cs", label="Assert.AreEqual(a, ((JArray)a[2])[0].Root)", span="599-599"];
m21_568 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="RegexConverter.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    6,\r\n                    new JArray(7, 8),\r\n                    new JArray(9, 10)\r\n                    )", span="589-595"];
m21_572 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", span="587-587"];
m21_595 [cluster="Newtonsoft.Json.Linq.JToken.Remove()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.Remove()", span="393-393"];
m21_637 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", span="730-730"];
m21_646 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="RegexConverter.cs", label="Assert.AreEqual(a[1], ancestors[1])", span="753-753"];
m21_647 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="RegexConverter.cs", label="Assert.AreEqual(a, ancestors[2])", span="754-754"];
m21_649 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="RegexConverter.cs", label="Assert.AreEqual(o.Property(''prop1''), ancestors[4])", span="756-756"];
m21_650 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="RegexConverter.cs", label="Assert.AreEqual(o, ancestors[5])", span="757-757"];
m21_645 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="RegexConverter.cs", label="Assert.AreEqual(t1, ancestors[0])", span="752-752"];
m21_648 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="RegexConverter.cs", label="Assert.AreEqual(t2, ancestors[3])", span="755-755"];
m21_644 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="RegexConverter.cs", label="Assert.AreEqual(6, ancestors.Count())", span="751-751"];
m21_638 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="RegexConverter.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="732-738"];
m21_643 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="RegexConverter.cs", label="List<JToken> ancestors = source.AncestorsAndSelf().ToList()", span="750-750"];
m21_639 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="RegexConverter.cs", label="JObject o = new JObject\r\n            {\r\n                { ''prop1'', ''value1'' }\r\n            }", span="740-743"];
m21_640 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="RegexConverter.cs", label="JToken t1 = a[1][0]", span="745-745"];
m21_641 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="RegexConverter.cs", label="JToken t2 = o[''prop1'']", span="746-746"];
m21_642 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="RegexConverter.cs", label="List<JToken> source = new List<JToken> { t1, t2 }", span="748-748"];
m21_651 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", span="730-730"];
m21_810 [cluster="Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="441-441"];
m21_356 [cluster="System.Guid.NewGuid()", file="RegexConverter.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m21_781 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddValueToObject()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AddValueToObject()", span="977-977"];
m21_782 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddValueToObject()", file="RegexConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(() =>\r\n            {\r\n                JObject o = new JObject();\r\n                o.Add(5);\r\n            }, ''Can not add Newtonsoft.Json.Linq.JValue to Newtonsoft.Json.Linq.JObject.'')", span="979-983"];
m21_783 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddValueToObject()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AddValueToObject()", span="977-977"];
m21_865 [cluster="System.ICloneable.Clone()", file="RegexConverter.cs", label="Entry System.ICloneable.Clone()", span="0-0"];
m21_283 [cluster="Unk.ToByteArray", file="RegexConverter.cs", label="Entry Unk.ToByteArray", span=""];
m21_126 [cluster="Newtonsoft.Json.Linq.JToken.BeforeSelf()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.BeforeSelf()", span="311-311"];
m21_876 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ParseAdditionalContent()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.ParseAdditionalContent()", span="1202-1202"];
m21_877 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ParseAdditionalContent()", file="RegexConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n],'';\r\n\r\n                JToken.Parse(json);\r\n            }, ''Additional text encountered after finished reading JSON content: ,. Path '', line 5, position 1.'')", span="1204-1213"];
m21_878 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ParseAdditionalContent()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.ParseAdditionalContent()", span="1202-1202"];
m21_0 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="43-43"];
m21_3 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="bsonWriter != null", span="48-48"];
m21_4 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="WriteBson(bsonWriter, regex)", span="49-49"];
m21_1 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="Regex regex = (Regex) value", span="45-45"];
m21_2 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="BsonWriter bsonWriter = writer as BsonWriter", span="47-47"];
m21_6 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="43-43"];
m21_812 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="RegexConverter.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="551-551"];
m21_266 [cluster="Newtonsoft.Json.Linq.JValue.JValue(ulong)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(ulong)", span="98-98"];
m21_654 [cluster="System.Collections.Generic.IEnumerable<T>.AncestorsAndSelf<T>()", file="RegexConverter.cs", label="Entry System.Collections.Generic.IEnumerable<T>.AncestorsAndSelf<T>()", span="62-62"];
m21_263 [cluster="Newtonsoft.Json.Linq.JValue.CreateNull()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JValue.CreateNull()", span="595-595"];
m21_90 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="RegexConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m21_669 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", span="790-790"];
m21_672 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="RegexConverter.cs", label="Assert.AreEqual(10, descendants.Count())", span="801-801"];
m21_673 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="RegexConverter.cs", label="Assert.AreEqual(5, (int)descendants[0])", span="802-802"];
m21_675 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="RegexConverter.cs", label="Assert.AreEqual(1, (int)descendants[descendants.Count - 3])", span="804-804"];
m21_676 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="RegexConverter.cs", label="Assert.AreEqual(2, (int)descendants[descendants.Count - 2])", span="805-805"];
m21_677 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="RegexConverter.cs", label="Assert.AreEqual(3, (int)descendants[descendants.Count - 1])", span="806-806"];
m21_674 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="RegexConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2, 3), descendants[descendants.Count - 4]))", span="803-803"];
m21_670 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="RegexConverter.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="792-798"];
m21_671 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="RegexConverter.cs", label="List<JToken> descendants = a.Descendants().ToList()", span="800-800"];
m21_678 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", span="790-790"];
m21_465 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", span="469-469"];
m21_466 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual((BigInteger)1, (new JValue(1).ToObject(typeof(BigInteger))))", span="472-472"];
m21_467 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual((BigInteger)1, (new JValue(1).ToObject(typeof(BigInteger?))))", span="473-473"];
m21_468 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual((BigInteger?)null, (JValue.CreateNull().ToObject(typeof(BigInteger?))))", span="474-474"];
m21_469 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual((ushort)1, (new JValue(1).ToObject(typeof(ushort))))", span="476-476"];
m21_470 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual((ushort)1, (new JValue(1).ToObject(typeof(ushort?))))", span="477-477"];
m21_471 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual((uint)1L, (new JValue(1).ToObject(typeof(uint))))", span="478-478"];
m21_472 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual((uint)1L, (new JValue(1).ToObject(typeof(uint?))))", span="479-479"];
m21_473 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual((ulong)1L, (new JValue(1).ToObject(typeof(ulong))))", span="480-480"];
m21_474 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual((ulong)1L, (new JValue(1).ToObject(typeof(ulong?))))", span="481-481"];
m21_475 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual((sbyte)1L, (new JValue(1).ToObject(typeof(sbyte))))", span="482-482"];
m21_476 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual((sbyte)1L, (new JValue(1).ToObject(typeof(sbyte?))))", span="483-483"];
m21_477 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual((byte)1L, (new JValue(1).ToObject(typeof(byte))))", span="484-484"];
m21_478 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual((byte)1L, (new JValue(1).ToObject(typeof(byte?))))", span="485-485"];
m21_479 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual((short)1L, (new JValue(1).ToObject(typeof(short))))", span="486-486"];
m21_480 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual((short)1L, (new JValue(1).ToObject(typeof(short?))))", span="487-487"];
m21_481 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual(1, (new JValue(1).ToObject(typeof(int))))", span="488-488"];
m21_482 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual(1, (new JValue(1).ToObject(typeof(int?))))", span="489-489"];
m21_483 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual(1L, (new JValue(1).ToObject(typeof(long))))", span="490-490"];
m21_484 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual(1L, (new JValue(1).ToObject(typeof(long?))))", span="491-491"];
m21_485 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual((float)1, (new JValue(1.0).ToObject(typeof(float))))", span="492-492"];
m21_486 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual((float)1, (new JValue(1.0).ToObject(typeof(float?))))", span="493-493"];
m21_487 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual((double)1, (new JValue(1.0).ToObject(typeof(double))))", span="494-494"];
m21_488 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual((double)1, (new JValue(1.0).ToObject(typeof(double?))))", span="495-495"];
m21_489 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual(1m, (new JValue(1).ToObject(typeof(decimal))))", span="496-496"];
m21_490 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual(1m, (new JValue(1).ToObject(typeof(decimal?))))", span="497-497"];
m21_491 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual(true, (new JValue(true).ToObject(typeof(bool))))", span="498-498"];
m21_492 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual(true, (new JValue(true).ToObject(typeof(bool?))))", span="499-499"];
m21_493 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual('b', (new JValue('b').ToObject(typeof(char))))", span="500-500"];
m21_494 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual('b', (new JValue('b').ToObject(typeof(char?))))", span="501-501"];
m21_495 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual(TimeSpan.MaxValue, (new JValue(TimeSpan.MaxValue).ToObject(typeof(TimeSpan))))", span="502-502"];
m21_496 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual(TimeSpan.MaxValue, (new JValue(TimeSpan.MaxValue).ToObject(typeof(TimeSpan?))))", span="503-503"];
m21_497 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual(DateTime.MaxValue, (new JValue(DateTime.MaxValue).ToObject(typeof(DateTime))))", span="504-504"];
m21_498 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual(DateTime.MaxValue, (new JValue(DateTime.MaxValue).ToObject(typeof(DateTime?))))", span="505-505"];
m21_499 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual(DateTimeOffset.MaxValue, (new JValue(DateTimeOffset.MaxValue).ToObject(typeof(DateTimeOffset))))", span="507-507"];
m21_500 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual(DateTimeOffset.MaxValue, (new JValue(DateTimeOffset.MaxValue).ToObject(typeof(DateTimeOffset?))))", span="508-508"];
m21_501 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual(''b'', (new JValue(''b'').ToObject(typeof(string))))", span="510-510"];
m21_502 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual(new Guid(''A34B2080-B5F0-488E-834D-45D44ECB9E5C''), (new JValue(new Guid(''A34B2080-B5F0-488E-834D-45D44ECB9E5C'')).ToObject(typeof(Guid))))", span="511-511"];
m21_503 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual(new Guid(''A34B2080-B5F0-488E-834D-45D44ECB9E5C''), (new JValue(new Guid(''A34B2080-B5F0-488E-834D-45D44ECB9E5C'')).ToObject(typeof(Guid?))))", span="512-512"];
m21_504 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual(new Uri(''http://www.google.com/''), (new JValue(new Uri(''http://www.google.com/'')).ToObject(typeof(Uri))))", span="513-513"];
m21_505 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual(StringComparison.Ordinal, (new JValue(''Ordinal'').ToObject(typeof(StringComparison))))", span="514-514"];
m21_506 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual(StringComparison.Ordinal, (new JValue(''Ordinal'').ToObject(typeof(StringComparison?))))", span="515-515"];
m21_507 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Assert.AreEqual(null, (JValue.CreateNull().ToObject(typeof(StringComparison?))))", span="516-516"];
m21_508 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", span="469-469"];
m21_64 [cluster="string.Substring(int, int)", file="RegexConverter.cs", label="Entry string.Substring(int, int)", span="0-0"];
m21_127 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", span="249-249"];
m21_128 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(1L, (long)(new JValue(1)))", span="251-251"];
m21_129 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(2L, (long)new JArray(1, 2, 3)[1])", span="252-252"];
m21_130 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(new DateTime(2000, 12, 20), (DateTime)new JValue(new DateTime(2000, 12, 20)))", span="254-254"];
m21_131 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(new DateTimeOffset(2000, 12, 20, 0, 0, 0, TimeSpan.Zero), (DateTimeOffset)new JValue(new DateTime(2000, 12, 20, 0, 0, 0, DateTimeKind.Utc)))", span="256-256"];
m21_132 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(new DateTimeOffset(2000, 12, 20, 23, 50, 10, TimeSpan.Zero), (DateTimeOffset)new JValue(new DateTimeOffset(2000, 12, 20, 23, 50, 10, TimeSpan.Zero)))", span="257-257"];
m21_133 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (DateTimeOffset?)new JValue((DateTimeOffset?)null))", span="258-258"];
m21_134 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (DateTimeOffset?)(JValue)null)", span="259-259"];
m21_135 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(true, (bool)new JValue(true))", span="261-261"];
m21_136 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(true, (bool?)new JValue(true))", span="262-262"];
m21_137 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (bool?)((JValue)null))", span="263-263"];
m21_138 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (bool?)JValue.CreateNull())", span="264-264"];
m21_139 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(10, (long)new JValue(10))", span="265-265"];
m21_140 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (long?)new JValue((long?)null))", span="266-266"];
m21_141 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (long?)(JValue)null)", span="267-267"];
m21_142 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (int?)new JValue((int?)null))", span="268-268"];
m21_143 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (int?)(JValue)null)", span="269-269"];
m21_144 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (DateTime?)new JValue((DateTime?)null))", span="270-270"];
m21_145 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (DateTime?)(JValue)null)", span="271-271"];
m21_146 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (short?)new JValue((short?)null))", span="272-272"];
m21_147 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (short?)(JValue)null)", span="273-273"];
m21_148 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (float?)new JValue((float?)null))", span="274-274"];
m21_149 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (float?)(JValue)null)", span="275-275"];
m21_150 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (double?)new JValue((double?)null))", span="276-276"];
m21_151 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (double?)(JValue)null)", span="277-277"];
m21_152 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (decimal?)new JValue((decimal?)null))", span="278-278"];
m21_153 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (decimal?)(JValue)null)", span="279-279"];
m21_154 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (uint?)new JValue((uint?)null))", span="280-280"];
m21_155 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (uint?)(JValue)null)", span="281-281"];
m21_156 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (sbyte?)new JValue((sbyte?)null))", span="282-282"];
m21_157 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (sbyte?)(JValue)null)", span="283-283"];
m21_158 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (byte?)new JValue((byte?)null))", span="284-284"];
m21_159 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (byte?)(JValue)null)", span="285-285"];
m21_160 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (ulong?)new JValue((ulong?)null))", span="286-286"];
m21_161 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (ulong?)(JValue)null)", span="287-287"];
m21_162 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (uint?)new JValue((uint?)null))", span="288-288"];
m21_163 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (uint?)(JValue)null)", span="289-289"];
m21_164 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(11.1f, (float)new JValue(11.1))", span="290-290"];
m21_165 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(float.MinValue, (float)new JValue(float.MinValue))", span="291-291"];
m21_166 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(1.1, (double)new JValue(1.1))", span="292-292"];
m21_167 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(uint.MaxValue, (uint)new JValue(uint.MaxValue))", span="293-293"];
m21_168 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(ulong.MaxValue, (ulong)new JValue(ulong.MaxValue))", span="294-294"];
m21_169 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(ulong.MaxValue, (ulong)new JProperty(''Test'', new JValue(ulong.MaxValue)))", span="295-295"];
m21_170 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (string)new JValue((string)null))", span="296-296"];
m21_171 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(5m, (decimal)(new JValue(5L)))", span="297-297"];
m21_172 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(5m, (decimal?)(new JValue(5L)))", span="298-298"];
m21_173 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(5f, (float)(new JValue(5L)))", span="299-299"];
m21_174 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(5f, (float)(new JValue(5m)))", span="300-300"];
m21_175 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(5f, (float?)(new JValue(5m)))", span="301-301"];
m21_176 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(5, (byte)(new JValue(5)))", span="302-302"];
m21_177 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(SByte.MinValue, (sbyte?)(new JValue(SByte.MinValue)))", span="303-303"];
m21_178 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(SByte.MinValue, (sbyte)(new JValue(SByte.MinValue)))", span="304-304"];
m21_179 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (sbyte?)JValue.CreateNull())", span="306-306"];
m21_180 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(''1'', (string)(new JValue(1)))", span="308-308"];
m21_181 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(''1'', (string)(new JValue(1.0)))", span="309-309"];
m21_182 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(''1.0'', (string)(new JValue(1.0m)))", span="310-310"];
m21_183 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(''True'', (string)(new JValue(true)))", span="311-311"];
m21_184 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (string)(JValue.CreateNull()))", span="312-312"];
m21_185 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (string)(JValue)null)", span="313-313"];
m21_186 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(''12/12/2000 12:12:12'', (string)(new JValue(new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc))))", span="314-314"];
m21_187 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(''12/12/2000 12:12:12 +00:00'', (string)(new JValue(new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero))))", span="316-316"];
m21_188 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(true, (bool)(new JValue(1)))", span="318-318"];
m21_189 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(true, (bool)(new JValue(1.0)))", span="319-319"];
m21_190 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(true, (bool)(new JValue(''true'')))", span="320-320"];
m21_191 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(true, (bool)(new JValue(true)))", span="321-321"];
m21_192 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(1, (int)(new JValue(1)))", span="322-322"];
m21_193 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(1, (int)(new JValue(1.0)))", span="323-323"];
m21_194 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(1, (int)(new JValue(''1'')))", span="324-324"];
m21_195 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(1, (int)(new JValue(true)))", span="325-325"];
m21_196 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(1m, (decimal)(new JValue(1)))", span="326-326"];
m21_197 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(1m, (decimal)(new JValue(1.0)))", span="327-327"];
m21_198 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(1m, (decimal)(new JValue(''1'')))", span="328-328"];
m21_199 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(1m, (decimal)(new JValue(true)))", span="329-329"];
m21_200 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(TimeSpan.FromMinutes(1), (TimeSpan)(new JValue(TimeSpan.FromMinutes(1))))", span="330-330"];
m21_201 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(''00:01:00'', (string)(new JValue(TimeSpan.FromMinutes(1))))", span="331-331"];
m21_202 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(TimeSpan.FromMinutes(1), (TimeSpan)(new JValue(''00:01:00'')))", span="332-332"];
m21_203 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(''46efe013-b56a-4e83-99e4-4dce7678a5bc'', (string)(new JValue(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC''))))", span="333-333"];
m21_204 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(''http://www.google.com/'', (string)(new JValue(new Uri(''http://www.google.com''))))", span="334-334"];
m21_205 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC''), (Guid)(new JValue(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC'')))", span="335-335"];
m21_206 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC''), (Guid)(new JValue(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC''))))", span="336-336"];
m21_207 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(new Uri(''http://www.google.com''), (Uri)(new JValue(''http://www.google.com'')))", span="337-337"];
m21_208 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(new Uri(''http://www.google.com''), (Uri)(new JValue(new Uri(''http://www.google.com''))))", span="338-338"];
m21_209 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (Uri)(JValue.CreateNull()))", span="339-339"];
m21_210 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(Convert.ToBase64String(Encoding.UTF8.GetBytes(''hi'')), (string)(new JValue(Encoding.UTF8.GetBytes(''hi''))))", span="340-340"];
m21_212 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC''), (Guid)(new JValue(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC'').ToByteArray())))", span="342-342"];
m21_213 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC''), (Guid?)(new JValue(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC'').ToByteArray())))", span="343-343"];
m21_214 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual((sbyte?)1, (sbyte?)(new JValue((short?)1)))", span="344-344"];
m21_215 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (Uri)(JValue)null)", span="346-346"];
m21_216 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (int?)(JValue)null)", span="347-347"];
m21_217 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (uint?)(JValue)null)", span="348-348"];
m21_218 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (Guid?)(JValue)null)", span="349-349"];
m21_219 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (TimeSpan?)(JValue)null)", span="350-350"];
m21_220 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (byte[])(JValue)null)", span="351-351"];
m21_221 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (bool?)(JValue)null)", span="352-352"];
m21_222 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (char?)(JValue)null)", span="353-353"];
m21_223 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (DateTime?)(JValue)null)", span="354-354"];
m21_224 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (DateTimeOffset?)(JValue)null)", span="356-356"];
m21_225 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (short?)(JValue)null)", span="358-358"];
m21_226 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (ushort?)(JValue)null)", span="359-359"];
m21_227 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (byte?)(JValue)null)", span="360-360"];
m21_228 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (byte?)(JValue)null)", span="361-361"];
m21_229 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (sbyte?)(JValue)null)", span="362-362"];
m21_230 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (sbyte?)(JValue)null)", span="363-363"];
m21_231 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (long?)(JValue)null)", span="364-364"];
m21_232 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (ulong?)(JValue)null)", span="365-365"];
m21_233 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (double?)(JValue)null)", span="366-366"];
m21_234 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (float?)(JValue)null)", span="367-367"];
m21_236 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(data, (byte[])(new JValue(data)))", span="370-370"];
m21_237 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(5, (int)(new JValue(StringComparison.OrdinalIgnoreCase)))", span="372-372"];
m21_239 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(BigInteger.Parse(bigIntegerText), (new JValue(BigInteger.Parse(bigIntegerText))).Value)", span="377-377"];
m21_240 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(BigInteger.Parse(bigIntegerText), (new JValue(bigIntegerText)).ToObject<BigInteger>())", span="379-379"];
m21_249 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(BigInteger.Parse(bigIntegerText), (new JValue(intData)).ToObject<BigInteger>())", span="389-389"];
m21_241 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(new BigInteger(long.MaxValue), (new JValue(long.MaxValue)).ToObject<BigInteger>())", span="380-380"];
m21_242 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(new BigInteger(4.5d), (new JValue((4.5d))).ToObject<BigInteger>())", span="381-381"];
m21_243 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(new BigInteger(4.5f), (new JValue((4.5f))).ToObject<BigInteger>())", span="382-382"];
m21_244 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(new BigInteger(byte.MaxValue), (new JValue(byte.MaxValue)).ToObject<BigInteger>())", span="383-383"];
m21_245 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(new BigInteger(123), (new JValue(123)).ToObject<BigInteger>())", span="384-384"];
m21_246 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(new BigInteger(123), (new JValue(123)).ToObject<BigInteger?>())", span="385-385"];
m21_247 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(null, (JValue.CreateNull()).ToObject<BigInteger?>())", span="386-386"];
m21_250 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(4.0d, (double)(new JValue(new BigInteger(4.5d))))", span="391-391"];
m21_251 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(true, (bool)(new JValue(new BigInteger(1))))", span="392-392"];
m21_252 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(long.MaxValue, (long)(new JValue(new BigInteger(long.MaxValue))))", span="393-393"];
m21_253 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(long.MaxValue, (long)(new JValue(new BigInteger(new byte[] { 255, 255, 255, 255, 255, 255, 255, 127 }))))", span="394-394"];
m21_254 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Assert.AreEqual(''9223372036854775807'', (string)(new JValue(new BigInteger(long.MaxValue))))", span="395-395"];
m21_256 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="CollectionAssert.AreEqual(new byte[] { 255, 255, 255, 255, 255, 255, 255, 127 }, intData)", span="398-398"];
m21_211 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="CollectionAssert.AreEquivalent((byte[])Encoding.UTF8.GetBytes(''hi''), (byte[])(new JValue(Convert.ToBase64String(Encoding.UTF8.GetBytes(''hi'')))))", span="341-341"];
m21_235 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="byte[] data = new byte[0]", span="369-369"];
m21_238 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="string bigIntegerText = ''1234567899999999999999999999999999999999999999999999999999999999999990''", span="375-375"];
m21_248 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="byte[] intData = BigInteger.Parse(bigIntegerText).ToByteArray()", span="388-388"];
m21_255 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="intData = (byte[])(new JValue(new BigInteger(long.MaxValue)))", span="397-397"];
m21_257 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", span="249-249"];
m21_509 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", span="1939-1939"];
m21_277 [cluster="Unk.AreEquivalent", file="RegexConverter.cs", label="Entry Unk.AreEquivalent", span=""];
m21_780 [cluster="Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", span="341-341"];
m21_774 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="969-973"];
m21_336 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (DateTime)new JValue(1)", span="406-406"];
m21_361 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (Uri)new JValue(1)", span="415-415"];
m21_385 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (TimeSpan)new JValue(1)", span="426-426"];
m21_412 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (Guid)new JValue(1)", span="438-438"];
m21_376 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (Uri)new JValue(DateTime.Now)", span="420-420"];
m21_400 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (TimeSpan)new JValue(DateTime.Now)", span="431-431"];
m21_424 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (Guid)new JValue(DateTime.Now)", span="442-442"];
m21_454 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (sbyte?)new JValue(DateTime.Now)", span="461-461"];
m21_457 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (sbyte)new JValue(DateTime.Now)", span="462-462"];
m21_379 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (Uri)new JValue(DateTimeOffset.Now)", span="422-422"];
m21_403 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (TimeSpan)new JValue(DateTimeOffset.Now)", span="433-433"];
m21_427 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (Guid)new JValue(DateTimeOffset.Now)", span="444-444"];
m21_333 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (DateTime)new JValue(true)", span="405-405"];
m21_358 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (Uri)new JValue(true)", span="414-414"];
m21_382 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (TimeSpan)new JValue(true)", span="425-425"];
m21_409 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (Guid)new JValue(true)", span="437-437"];
m21_436 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (DateTimeOffset)new JValue(true)", span="450-450"];
m21_439 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (Uri)new JValue(true)", span="452-452"];
m21_351 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (DateTime)JValue.CreateNull()", span="411-411"];
m21_394 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (TimeSpan)JValue.CreateNull()", span="429-429"];
m21_421 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (Guid)JValue.CreateNull()", span="441-441"];
m21_445 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (JValue.CreateNull()).ToObject<BigInteger>()", span="456-456"];
m21_339 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (DateTime)new JValue(1.1)", span="407-407"];
m21_364 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (Uri)new JValue(1.1)", span="416-416"];
m21_388 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (TimeSpan)new JValue(1.1)", span="427-427"];
m21_415 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (Guid)new JValue(1.1)", span="439-439"];
m21_460 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (new JValue(''Ordinal1'')).ToObject<StringComparison>()", span="464-464"];
m21_463 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (new JValue(''Ordinal1'')).ToObject<StringComparison?>()", span="465-465"];
m21_342 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (DateTime)new JValue(1.1m)", span="408-408"];
m21_367 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (Uri)new JValue(1.1m)", span="417-417"];
m21_391 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (TimeSpan)new JValue(1.1m)", span="428-428"];
m21_418 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (Guid)new JValue(1.1m)", span="440-440"];
m21_430 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (Guid)new JValue(TimeSpan.FromMinutes(1))", span="446-446"];
m21_345 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (DateTime)new JValue(TimeSpan.Zero)", span="409-409"];
m21_370 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (Uri)new JValue(TimeSpan.Zero)", span="418-418"];
m21_354 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (DateTime)new JValue(Guid.NewGuid())", span="412-412"];
m21_373 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (Uri)new JValue(Guid.NewGuid())", span="419-419"];
m21_397 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (TimeSpan)new JValue(Guid.NewGuid())", span="430-430"];
m21_448 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (new JValue(Guid.NewGuid())).ToObject<BigInteger>()", span="457-457"];
m21_451 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (new JValue(Guid.NewGuid())).ToObject<BigInteger?>()", span="458-458"];
m21_348 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (DateTime)new JValue(new Uri(''http://www.google.com''))", span="410-410"];
m21_406 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (TimeSpan)new JValue(new Uri(''http://www.google.com''))", span="435-435"];
m21_433 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (Guid)new JValue(new Uri(''http://www.google.com''))", span="447-447"];
m21_442 [cluster="lambda expression", file="RegexConverter.cs", label="var i = (new JValue(new Uri(''http://www.google.com''))).ToObject<BigInteger>()", span="455-455"];
m21_335 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="406-406"];
m21_337 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="406-406"];
m21_360 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="415-415"];
m21_362 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="415-415"];
m21_384 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="426-426"];
m21_386 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="426-426"];
m21_411 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="438-438"];
m21_413 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="438-438"];
m21_881 [cluster="lambda expression", file="RegexConverter.cs", label="JToken.Parse(json)", span="1212-1212"];
m21_375 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="420-420"];
m21_377 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="420-420"];
m21_399 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="431-431"];
m21_401 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="431-431"];
m21_423 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="442-442"];
m21_425 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="442-442"];
m21_453 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="461-461"];
m21_455 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="461-461"];
m21_456 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="462-462"];
m21_458 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="462-462"];
m21_378 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="422-422"];
m21_380 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="422-422"];
m21_402 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="433-433"];
m21_404 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="433-433"];
m21_426 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="444-444"];
m21_428 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="444-444"];
m21_332 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="405-405"];
m21_334 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="405-405"];
m21_357 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="414-414"];
m21_359 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="414-414"];
m21_381 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="425-425"];
m21_383 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="425-425"];
m21_408 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="437-437"];
m21_410 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="437-437"];
m21_435 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="450-450"];
m21_437 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="450-450"];
m21_438 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="452-452"];
m21_440 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="452-452"];
m21_350 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="411-411"];
m21_352 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="411-411"];
m21_393 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="429-429"];
m21_395 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="429-429"];
m21_420 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="441-441"];
m21_422 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="441-441"];
m21_444 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="456-456"];
m21_446 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="456-456"];
m21_338 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="407-407"];
m21_340 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="407-407"];
m21_363 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="416-416"];
m21_365 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="416-416"];
m21_387 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="427-427"];
m21_389 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="427-427"];
m21_414 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="439-439"];
m21_416 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="439-439"];
m21_459 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="464-464"];
m21_461 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="464-464"];
m21_462 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="465-465"];
m21_464 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="465-465"];
m21_341 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="408-408"];
m21_343 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="408-408"];
m21_366 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="417-417"];
m21_368 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="417-417"];
m21_390 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="428-428"];
m21_392 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="428-428"];
m21_417 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="440-440"];
m21_419 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="440-440"];
m21_429 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="446-446"];
m21_431 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="446-446"];
m21_344 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="409-409"];
m21_346 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="409-409"];
m21_369 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="418-418"];
m21_371 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="418-418"];
m21_353 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="412-412"];
m21_355 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="412-412"];
m21_372 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="419-419"];
m21_374 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="419-419"];
m21_396 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="430-430"];
m21_398 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="430-430"];
m21_447 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="457-457"];
m21_449 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="457-457"];
m21_450 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="458-458"];
m21_452 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="458-458"];
m21_347 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="410-410"];
m21_349 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="410-410"];
m21_405 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="435-435"];
m21_407 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="435-435"];
m21_432 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="447-447"];
m21_434 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="447-447"];
m21_441 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="455-455"];
m21_443 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="455-455"];
m21_785 [cluster="lambda expression", file="RegexConverter.cs", label="JObject o = new JObject()", span="981-981"];
m21_880 [cluster="lambda expression", file="RegexConverter.cs", label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n],''", span="1206-1210"];
m21_882 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="1204-1213"];
m21_784 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="979-983"];
m21_786 [cluster="lambda expression", file="RegexConverter.cs", label="o.Add(5)", span="982-982"];
m21_879 [cluster="lambda expression", file="RegexConverter.cs", label="Entry lambda expression", span="1204-1213"];
m21_787 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="979-983"];
m21_775 [cluster="lambda expression", file="RegexConverter.cs", label="JArray a = new JArray()", span="971-971"];
m21_776 [cluster="lambda expression", file="RegexConverter.cs", label="a.Add(new JProperty(''PropertyName''))", span="972-972"];
m21_777 [cluster="lambda expression", file="RegexConverter.cs", label="Exit lambda expression", span="969-973"];
m21_912 [cluster="Newtonsoft.Json.Linq.JsonLoadSettings.JsonLoadSettings()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Linq.JsonLoadSettings.JsonLoadSettings()", span="7-7"];
m21_802 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", file="RegexConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", span="1012-1012"];
m21_807 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", file="RegexConverter.cs", label="Assert.AreEqual(@''[''''2009-02-15T00:00:00Z'''']'', json)", span="1027-1027"];
m21_806 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", file="RegexConverter.cs", label="json = JsonConvert.SerializeObject(a, new IsoDateTimeConverter())", span="1025-1025"];
m21_803 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", file="RegexConverter.cs", label="JArray a =\r\n                new JArray(\r\n                    new JValue(new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc))\r\n                    )", span="1014-1017"];
m21_805 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", file="RegexConverter.cs", label="StringAssert.AreEqual(@''[\r\n  ''''2009-02-15T00:00:00Z''''\r\n]'', json)", span="1021-1023"];
m21_804 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", file="RegexConverter.cs", label="string json = a.ToString(Formatting.Indented, new IsoDateTimeConverter())", span="1019-1019"];
m21_808 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", file="RegexConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", span="1012-1012"];
m22_4 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToText()", file="RegexConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToText()", span="58-58"];
m22_5 [cluster="System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", color=green, community=0, file="RegexConverterTests.cs", label="Entry System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", prediction=360, span="0-0"];
m22_6 [cluster="Newtonsoft.Json.Converters.RegexConverter.RegexConverter()", file="RegexConverterTests.cs", label="Entry Newtonsoft.Json.Converters.RegexConverter.RegexConverter()", span="35-35"];
m22_27 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[])", file="RegexConverterTests.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[])", span="78-78"];
m22_20 [cluster="System.IO.MemoryStream.MemoryStream()", file="RegexConverterTests.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m22_47 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", file="RegexConverterTests.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="124-124"];
m22_28 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromText()", file="RegexConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromText()", span="89-89"];
m22_29 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromText()", file="RegexConverterTests.cs", label="string json = @''{\r\n  ''''Pattern'''': ''''abc'''',\r\n  ''''Options'''': 513\r\n}''", span="91-94"];
m22_30 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromText()", file="RegexConverterTests.cs", label="Regex newRegex = JsonConvert.DeserializeObject<Regex>(json, new RegexConverter())", span="96-96"];
m22_31 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromText()", file="RegexConverterTests.cs", label="Assert.AreEqual(''abc'', newRegex.ToString())", span="97-97"];
m22_32 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromText()", file="RegexConverterTests.cs", label="Assert.AreEqual(RegexOptions.IgnoreCase | RegexOptions.CultureInvariant, newRegex.Options)", span="98-98"];
m22_33 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromText()", file="RegexConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromText()", span="89-89"];
m22_11 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToBson()", file="RegexConverterTests.cs", label="MemoryStream ms = new MemoryStream()", span="75-75"];
m22_25 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="RegexConverterTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="769-769"];
m22_23 [cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="RegexConverterTests.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0"];
m22_65 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="RegexConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", span="138-138"];
m22_66 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="RegexConverterTests.cs", label="Regex regex = new Regex(\r\n        ''/'',\r\n        RegexOptions.IgnoreCase | RegexOptions.Singleline | RegexOptions.Multiline | RegexOptions.ExplicitCapture)", span="140-142"];
m22_67 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="RegexConverterTests.cs", label="MemoryStream ms = new MemoryStream()", span="144-144"];
m22_71 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="RegexConverterTests.cs", label="serializer.Serialize(writer, new RegexTestClass { Regex = regex })", span="149-149"];
m22_68 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="RegexConverterTests.cs", label="BsonWriter writer = new BsonWriter(ms)", span="145-145"];
m22_73 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="RegexConverterTests.cs", label="string bson = BytesToHex(ms.ToArray())", span="152-152"];
m22_75 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="RegexConverterTests.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="156-156"];
m22_76 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="RegexConverterTests.cs", label="BsonReader reader = new BsonReader(ms)", span="157-157"];
m22_69 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="RegexConverterTests.cs", label="JsonSerializer serializer = new JsonSerializer()", span="146-146"];
m22_70 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="RegexConverterTests.cs", label="serializer.Converters.Add(new RegexConverter())", span="147-147"];
m22_77 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="RegexConverterTests.cs", label="serializer.Converters.Add(new RegexConverter())", span="158-158"];
m22_78 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="RegexConverterTests.cs", label="RegexTestClass c = serializer.Deserialize<RegexTestClass>(reader)", span="160-160"];
m22_72 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="RegexConverterTests.cs", label="string expected = ''14-00-00-00-0B-52-65-67-65-78-00-2F-00-69-6D-73-75-78-00-00''", span="151-151"];
m22_74 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="RegexConverterTests.cs", label="Assert.AreEqual(expected, bson)", span="154-154"];
m22_79 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="RegexConverterTests.cs", label="Assert.AreEqual(''/'', c.Regex.ToString())", span="162-162"];
m22_80 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="RegexConverterTests.cs", label="Assert.AreEqual(RegexOptions.IgnoreCase | RegexOptions.Singleline | RegexOptions.Multiline | RegexOptions.ExplicitCapture, c.Regex.Options)", span="163-163"];
m22_81 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="RegexConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", span="138-138"];
m22_24 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.RegexTestClass.RegexTestClass()", file="RegexConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.RegexConverterTests.RegexTestClass.RegexTestClass()", span="52-52"];
m22_45 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="RegexConverterTests.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m22_21 [cluster="Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", file="RegexConverterTests.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", span="65-65"];
m22_7 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="RegexConverterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="552-552"];
m22_36 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromBson()", file="RegexConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromBson()", span="102-102"];
m22_37 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromBson()", file="RegexConverterTests.cs", label="MemoryStream ms = new MemoryStream(HexToBytes(''13-00-00-00-0B-52-65-67-65-78-00-61-62-63-00-69-75-00-00''))", span="104-104"];
m22_38 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromBson()", file="RegexConverterTests.cs", label="BsonReader reader = new BsonReader(ms)", span="105-105"];
m22_39 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromBson()", file="RegexConverterTests.cs", label="JsonSerializer serializer = new JsonSerializer()", span="106-106"];
m22_41 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromBson()", file="RegexConverterTests.cs", label="RegexTestClass c = serializer.Deserialize<RegexTestClass>(reader)", span="109-109"];
m22_40 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromBson()", file="RegexConverterTests.cs", label="serializer.Converters.Add(new RegexConverter())", span="107-107"];
m22_42 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromBson()", file="RegexConverterTests.cs", label="Assert.AreEqual(''abc'', c.Regex.ToString())", span="111-111"];
m22_43 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromBson()", file="RegexConverterTests.cs", label="Assert.AreEqual(RegexOptions.IgnoreCase, c.Regex.Options)", span="112-112"];
m22_44 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromBson()", file="RegexConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromBson()", span="102-102"];
m22_0 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToText()", file="RegexConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToText()", span="58-58"];
m22_1 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToText()", file="RegexConverterTests.cs", label="Regex regex = new Regex(''abc'', RegexOptions.IgnoreCase | RegexOptions.CultureInvariant)", span="60-60"];
m22_2 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToText()", file="RegexConverterTests.cs", label="string json = JsonConvert.SerializeObject(regex, Formatting.Indented, new RegexConverter())", span="62-62"];
m22_3 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToText()", file="RegexConverterTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Pattern'''': ''''abc'''',\r\n  ''''Options'''': 513\r\n}'', json)", span="64-67"];
m22_63 [cluster="System.Text.RegularExpressions.Regex.Regex(string)", file="RegexConverterTests.cs", label="Entry System.Text.RegularExpressions.Regex.Regex(string)", span="0-0"];
m22_26 [cluster="System.IO.MemoryStream.ToArray()", file="RegexConverterTests.cs", label="Entry System.IO.MemoryStream.ToArray()", span="0-0"];
m22_8 [cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetField(System.Type, string)", file="RegexConverterTests.cs", label="Entry Newtonsoft.Json.Tests.TestReflectionUtils.GetField(System.Type, string)", span="79-79"];
m22_82 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexJson()", file="RegexConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexJson()", span="167-167"];
m22_83 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexJson()", file="RegexConverterTests.cs", label="Regex regex = new Regex('''')", span="169-169"];
m22_84 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexJson()", file="RegexConverterTests.cs", label="string json = JsonConvert.SerializeObject(new RegexTestClass { Regex = regex }, Formatting.Indented, new RegexConverter())", span="171-171"];
m22_85 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexJson()", file="RegexConverterTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Regex'''': {\r\n    ''''Pattern'''': '''''''',\r\n    ''''Options'''': 0\r\n  }\r\n}'', json)", span="173-178"];
m22_86 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexJson()", file="RegexConverterTests.cs", label="RegexTestClass newRegex = JsonConvert.DeserializeObject<RegexTestClass>(json, new RegexConverter())", span="180-180"];
m22_87 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexJson()", file="RegexConverterTests.cs", label="Assert.AreEqual('''', newRegex.Regex.ToString())", span="181-181"];
m22_88 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexJson()", file="RegexConverterTests.cs", label="Assert.AreEqual(RegexOptions.None, newRegex.Regex.Options)", span="182-182"];
m22_89 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexJson()", file="RegexConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexJson()", span="167-167"];
m22_22 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="RegexConverterTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="427-427"];
m22_64 [cluster="System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", file="RegexConverterTests.cs", label="Entry System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", span="0-0"];
m22_9 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToBson()", color=green, community=0, file="RegexConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToBson()", prediction=361, span="71-71"];
m22_10 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToBson()", file="RegexConverterTests.cs", label="Regex regex = new Regex(''abc'', RegexOptions.IgnoreCase | RegexOptions.CultureInvariant)", span="73-73"];
m22_15 [cluster="System.Type.GetMethod(string)", file="RegexConverterTests.cs", label="Entry System.Type.GetMethod(string)", span="0-0"];
m22_12 [cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetMethod(System.Type, string)", file="RegexConverterTests.cs", label="Entry Newtonsoft.Json.Tests.TestReflectionUtils.GetMethod(System.Type, string)", span="88-88"];
m22_17 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToBson()", file="RegexConverterTests.cs", label="string bson = BytesToHex(ms.ToArray())", span="83-83"];
m22_13 [cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetMethod(System.Type, string)", color=green, community=0, file="RegexConverterTests.cs", label="return type.GetMethod(name);", prediction=362, span="91-91"];
m22_14 [cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetMethod(System.Type, string)", file="RegexConverterTests.cs", label="Exit Newtonsoft.Json.Tests.TestReflectionUtils.GetMethod(System.Type, string)", span="88-88"];
m22_16 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToBson()", file="RegexConverterTests.cs", label="string expected = ''13-00-00-00-0B-52-65-67-65-78-00-61-62-63-00-69-75-00-00''", span="82-82"];
m22_18 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToBson()", file="RegexConverterTests.cs", label="Assert.AreEqual(expected, bson)", span="85-85"];
m22_19 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToBson()", file="RegexConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToBson()", span="71-71"];
m22_48 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="RegexConverterTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="645-645"];
m22_35 [cluster="System.Text.RegularExpressions.Regex.ToString()", file="RegexConverterTests.cs", label="Entry System.Text.RegularExpressions.Regex.ToString()", span="0-0"];
m22_49 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="RegexConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", span="116-116"];
m22_50 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="RegexConverterTests.cs", label="Regex regex = new Regex(string.Empty)", span="118-118"];
m22_51 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="RegexConverterTests.cs", label="MemoryStream ms = new MemoryStream()", span="120-120"];
m22_55 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="RegexConverterTests.cs", label="serializer.Serialize(writer, new RegexTestClass { Regex = regex })", span="125-125"];
m22_52 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="RegexConverterTests.cs", label="BsonWriter writer = new BsonWriter(ms)", span="121-121"];
m22_56 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="RegexConverterTests.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="127-127"];
m22_57 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="RegexConverterTests.cs", label="BsonReader reader = new BsonReader(ms)", span="128-128"];
m22_53 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="RegexConverterTests.cs", label="JsonSerializer serializer = new JsonSerializer()", span="122-122"];
m22_54 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="RegexConverterTests.cs", label="serializer.Converters.Add(new RegexConverter())", span="123-123"];
m22_58 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="RegexConverterTests.cs", label="serializer.Converters.Add(new RegexConverter())", span="129-129"];
m22_59 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="RegexConverterTests.cs", label="RegexTestClass c = serializer.Deserialize<RegexTestClass>(reader)", span="131-131"];
m22_60 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="RegexConverterTests.cs", label="Assert.AreEqual('''', c.Regex.ToString())", span="133-133"];
m22_61 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="RegexConverterTests.cs", label="Assert.AreEqual(RegexOptions.None, c.Regex.Options)", span="134-134"];
m22_62 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="RegexConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", span="116-116"];
m22_34 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="RegexConverterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="754-754"];
m22_46 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="RegexConverterTests.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", span="92-92"];
m22_90 [file="RegexConverterTests.cs", label="Newtonsoft.Json.Tests.Converters.RegexConverterTests", span=""];
m23_318 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="814-814"];
m23_555 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", span="939-939"];
m23_559 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, r.LineNumber)", span="946-946"];
m23_560 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, r.LinePosition)", span="947-947"];
m23_562 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, r.LineNumber)", span="950-950"];
m23_563 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(5, r.LinePosition)", span="951-951"];
m23_565 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, r.LineNumber)", span="954-954"];
m23_566 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(9, r.LinePosition)", span="955-955"];
m23_568 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, r.LineNumber)", span="958-958"];
m23_569 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(10, r.LinePosition)", span="959-959"];
m23_574 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, r.LineNumber)", span="968-968"];
m23_575 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, r.LinePosition)", span="969-969"];
m23_577 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, r.LineNumber)", span="972-972"];
m23_578 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(5, r.LinePosition)", span="973-973"];
m23_580 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, r.LineNumber)", span="976-976"];
m23_581 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(9, r.LinePosition)", span="977-977"];
m23_583 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, r.LineNumber)", span="980-980"];
m23_584 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(10, r.LinePosition)", span="981-981"];
m23_557 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="StringEnumConverterTests.cs", label="JsonTextReader r = new JsonTextReader(new StringReader(json1))", span="943-943"];
m23_572 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="StringEnumConverterTests.cs", label="r = new JsonTextReader(new StringReader(json2))", span="965-965"];
m23_558 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await r.ReadAsync())", span="945-945"];
m23_561 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await r.ReadAsync())", span="949-949"];
m23_564 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await r.ReadAsync())", span="953-953"];
m23_567 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await r.ReadAsync())", span="957-957"];
m23_570 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="StringEnumConverterTests.cs", label="Assert.IsFalse(await r.ReadAsync())", span="961-961"];
m23_573 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await r.ReadAsync())", span="967-967"];
m23_576 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await r.ReadAsync())", span="971-971"];
m23_579 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await r.ReadAsync())", span="975-975"];
m23_582 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await r.ReadAsync())", span="979-979"];
m23_585 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="StringEnumConverterTests.cs", label="Assert.IsFalse(await r.ReadAsync())", span="983-983"];
m23_556 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="StringEnumConverterTests.cs", label="string json1 = ''{'a':'bc'}''", span="941-941"];
m23_571 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="StringEnumConverterTests.cs", label="string json2 = ''\n{'a':'bc'}''", span="963-963"];
m23_586 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", span="939-939"];
m23_319 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="1042-1042"];
m23_309 [cluster="Unk.WriteStartArrayAsync", file="StringEnumConverterTests.cs", label="Entry Unk.WriteStartArrayAsync", span=""];
m23_316 [cluster="System.Text.StringBuilder.ToString()", file="StringEnumConverterTests.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m23_37 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, jsonTextReader.LineNumber)", span="103-103"];
m23_311 [cluster="Unk.WriteStartObjectAsync", file="StringEnumConverterTests.cs", label="Entry Unk.WriteStartObjectAsync", span=""];
m23_335 [cluster="Unk.IsFalse", file="StringEnumConverterTests.cs", label="Entry Unk.IsFalse", span=""];
m23_256 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonTextReaderTests.FakeArrayPool.FakeArrayPool()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonTextReaderTests.FakeArrayPool.FakeArrayPool()", span="34-34"];
m23_255 [cluster="string.String(char, int)", file="StringEnumConverterTests.cs", label="Entry string.String(char, int)", span="0-0"];
m23_95 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClassUndefined()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(null, enumClass.NullableStoreColor2)", span="297-297"];
m23_96 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClassUndefined()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClassUndefined()", span="285-285"];
m23_97 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumSerialization()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumSerialization()", span="301-301"];
m23_98 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumSerialization()", file="StringEnumConverterTests.cs", label="EnumContainer<FlagsTestEnum> c = new EnumContainer<FlagsTestEnum>\r\n      {\r\n        Enum = FlagsTestEnum.First | FlagsTestEnum.Second\r\n      }", span="303-306"];
m23_99 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumSerialization()", file="StringEnumConverterTests.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new StringEnumConverter { CamelCaseText = true })", span="308-308"];
m23_100 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumSerialization()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Enum'''': ''''first, second''''\r\n}'', json)", span="309-311"];
m23_101 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumSerialization()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumSerialization()", span="301-301"];
m23_102 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumDeserialization()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumDeserialization()", span="315-315"];
m23_103 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumDeserialization()", file="StringEnumConverterTests.cs", label="string json = @''{\r\n  ''''Enum'''': ''''first, second''''\r\n}''", span="317-319"];
m23_104 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumDeserialization()", file="StringEnumConverterTests.cs", label="EnumContainer<FlagsTestEnum> c = JsonConvert.DeserializeObject<EnumContainer<FlagsTestEnum>>(json, new StringEnumConverter { CamelCaseText = true })", span="321-321"];
m23_105 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumDeserialization()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(FlagsTestEnum.First | FlagsTestEnum.Second, c.Enum)", span="322-322"];
m23_106 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumDeserialization()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumDeserialization()", span="315-315"];
m23_107 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEmptyStringIntoNullable()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEmptyStringIntoNullable()", span="326-326"];
m23_108 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEmptyStringIntoNullable()", file="StringEnumConverterTests.cs", label="string json = @''{\r\n  ''''StoreColor'''': ''''Red'''',\r\n  ''''NullableStoreColor1'''': ''''White'''',\r\n  ''''NullableStoreColor2'''': ''''''''\r\n}''", span="328-332"];
m23_46 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(9, jsonTextReader.LinePosition)", span="114-114"];
m23_47 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="116-116"];
m23_48 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Boolean, jsonTextReader.TokenType)", span="117-117"];
m23_49 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(3, jsonTextReader.LineNumber)", span="118-118"];
m23_50 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(13, jsonTextReader.LinePosition)", span="119-119"];
m23_51 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="121-121"];
m23_52 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="122-122"];
m23_53 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(4, jsonTextReader.LineNumber)", span="123-123"];
m23_93 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClassUndefined()", file="StringEnumConverterTests.cs", label="Assert.AreEqual((StoreColor)1000, enumClass.StoreColor)", span="295-295"];
m23_112 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ReadStringAsync(string)", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="219-219"];
m23_241 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTestAsync()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTestAsync()", span="455-455"];
m23_252 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTestAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0, arrayPool.UsedArrays.Count)", span="486-486"];
m23_253 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTestAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(6, arrayPool.FreeArrays.Count)", span="487-487"];
m23_246 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTestAsync()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="471-471"];
m23_248 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTestAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="475-475"];
m23_243 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTestAsync()", file="StringEnumConverterTests.cs", label="FakeArrayPool arrayPool = new FakeArrayPool()", span="467-467"];
m23_245 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTestAsync()", file="StringEnumConverterTests.cs", label="i < 1000", span="469-469"];
m23_242 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTestAsync()", file="StringEnumConverterTests.cs", label="string json = @''{\r\n              ''''CPU'''': ''''Intel'''',\r\n              ''''Description'''': ''''Amazing!\nBuy now!'''',\r\n              ''''Drives'''': [\r\n                ''''DVD read/writer'''',\r\n                ''''500 gigabyte hard drive'''',\r\n                ''''Amazing Drive'' + new string('!', 9000) + @''''''\r\n              ]\r\n            }''", span="457-465"];
m23_247 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTestAsync()", file="StringEnumConverterTests.cs", label="reader.ArrayPool = arrayPool", span="473-473"];
m23_249 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTestAsync()", file="StringEnumConverterTests.cs", label="(i + 1) % 100 == 0", span="480-480"];
m23_244 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTestAsync()", file="StringEnumConverterTests.cs", label="int i = 0", span="469-469"];
m23_250 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTestAsync()", file="StringEnumConverterTests.cs", label="Console.WriteLine(''Allocated buffers: '' + arrayPool.FreeArrays.Count)", span="482-482"];
m23_251 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTestAsync()", file="StringEnumConverterTests.cs", label="i++", span="469-469"];
m23_254 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTestAsync()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTestAsync()", span="455-455"];
m23_269 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", span="522-522"];
m23_304 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(json, sb.ToString())", span="581-581"];
m23_299 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="StringEnumConverterTests.cs", label="object jsonObject = serializer.Deserialize(new JsonTextReader(new StringReader(json)))", span="568-568"];
m23_297 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="StringEnumConverterTests.cs", label="string json = sb.ToString()", span="564-564"];
m23_303 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="StringEnumConverterTests.cs", label="serializer.Serialize(jsonWriter, jsonObject)", span="578-578"];
m23_300 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="StringEnumConverterTests.cs", label="sb = new StringBuilder()", span="570-570"];
m23_298 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="StringEnumConverterTests.cs", label="JsonSerializer serializer = new JsonSerializer()", span="566-566"];
m23_270 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="StringEnumConverterTests.cs", label="StringBuilder sb = new StringBuilder()", span="524-524"];
m23_296 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="StringEnumConverterTests.cs", label="await jsonWriter.WriteEndArrayAsync()", span="561-561"];
m23_302 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="StringEnumConverterTests.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="573-576"];
m23_301 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="StringEnumConverterTests.cs", label="sw = new StringWriter(sb)", span="571-571"];
m23_271 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="StringEnumConverterTests.cs", label="StringWriter sw = new StringWriter(sb)", span="525-525"];
m23_272 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="StringEnumConverterTests.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="527-530"];
m23_295 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="StringEnumConverterTests.cs", label="await jsonWriter.WriteNullAsync()", span="560-560"];
m23_273 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="StringEnumConverterTests.cs", label="await jsonWriter.WriteStartArrayAsync()", span="532-532"];
m23_274 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="StringEnumConverterTests.cs", label="await jsonWriter.WriteValueAsync(true)", span="533-533"];
m23_275 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="StringEnumConverterTests.cs", label="await jsonWriter.WriteStartObjectAsync()", span="535-535"];
m23_276 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="StringEnumConverterTests.cs", label="await jsonWriter.WritePropertyNameAsync(''integer'')", span="536-536"];
m23_277 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="StringEnumConverterTests.cs", label="await jsonWriter.WriteValueAsync(99)", span="537-537"];
m23_278 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="StringEnumConverterTests.cs", label="await jsonWriter.WritePropertyNameAsync(''string'')", span="538-538"];
m23_279 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="StringEnumConverterTests.cs", label="await jsonWriter.WriteValueAsync(''how now brown cow?'')", span="539-539"];
m23_280 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="StringEnumConverterTests.cs", label="await jsonWriter.WritePropertyNameAsync(''array'')", span="540-540"];
m23_281 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="StringEnumConverterTests.cs", label="await jsonWriter.WriteStartArrayAsync()", span="542-542"];
m23_284 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="StringEnumConverterTests.cs", label="await jsonWriter.WriteValueAsync(i)", span="545-545"];
m23_286 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="StringEnumConverterTests.cs", label="await jsonWriter.WriteStartObjectAsync()", span="548-548"];
m23_287 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="StringEnumConverterTests.cs", label="await jsonWriter.WritePropertyNameAsync(''decimal'')", span="549-549"];
m23_288 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="StringEnumConverterTests.cs", label="await jsonWriter.WriteValueAsync(990.00990099m)", span="550-550"];
m23_289 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="StringEnumConverterTests.cs", label="await jsonWriter.WriteEndObjectAsync()", span="551-551"];
m23_290 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="StringEnumConverterTests.cs", label="await jsonWriter.WriteValueAsync(5)", span="553-553"];
m23_291 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="StringEnumConverterTests.cs", label="await jsonWriter.WriteEndArrayAsync()", span="554-554"];
m23_292 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="StringEnumConverterTests.cs", label="await jsonWriter.WriteEndObjectAsync()", span="556-556"];
m23_293 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="StringEnumConverterTests.cs", label="await jsonWriter.WriteValueAsync(''This is a string.'')", span="558-558"];
m23_294 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="StringEnumConverterTests.cs", label="await jsonWriter.WriteNullAsync()", span="559-559"];
m23_282 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="StringEnumConverterTests.cs", label="int i = 0", span="543-543"];
m23_283 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="StringEnumConverterTests.cs", label="i < 5", span="543-543"];
m23_285 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="StringEnumConverterTests.cs", label="i++", span="543-543"];
m23_305 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", span="522-522"];
m23_317 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="530-530"];
m23_122 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.YahooFinanceAsync()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.YahooFinanceAsync()", span="225-225"];
m23_533 [cluster="double.ToString(System.IFormatProvider)", file="StringEnumConverterTests.cs", label="Entry double.ToString(System.IFormatProvider)", span="0-0"];
m23_11 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="StringEnumConverterTests.cs", label="json = ''\n{\''a\'':\''bc\''}''", span="68-68"];
m23_12 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="StringEnumConverterTests.cs", label="jsonTextReader = new JsonTextReader(new StringReader(json))", span="70-70"];
m23_13 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="72-72"];
m23_14 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="73-73"];
m23_15 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, jsonTextReader.LineNumber)", span="74-74"];
m23_16 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, jsonTextReader.LinePosition)", span="75-75"];
m23_17 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="77-77"];
m23_18 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="78-78"];
m23_58 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeFlagEnum()", file="StringEnumConverterTests.cs", label="enumClass.NullableStoreColor2 = StoreColor.Red | StoreColor.White | StoreColor.Black", span="212-212"];
m23_258 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTest_WithErrorAsync()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTest_WithErrorAsync()", span="491-491"];
m23_265 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTest_WithErrorAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0, arrayPool.UsedArrays.Count)", span="517-517"];
m23_266 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTest_WithErrorAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, arrayPool.FreeArrays.Count)", span="518-518"];
m23_261 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTest_WithErrorAsync()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="502-502"];
m23_263 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTest_WithErrorAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="506-506"];
m23_260 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTest_WithErrorAsync()", file="StringEnumConverterTests.cs", label="FakeArrayPool arrayPool = new FakeArrayPool()", span="497-497"];
m23_264 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTest_WithErrorAsync()", file="StringEnumConverterTests.cs", label="Assert.Fail()", span="511-511"];
m23_259 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTest_WithErrorAsync()", file="StringEnumConverterTests.cs", label="string json = @''{\r\n              ''''CPU'''': ''''Intel?\nYes'''',\r\n              ''''Description'''': ''''Amazin''", span="493-495"];
m23_262 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTest_WithErrorAsync()", file="StringEnumConverterTests.cs", label="reader.ArrayPool = arrayPool", span="504-504"];
m23_267 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTest_WithErrorAsync()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTest_WithErrorAsync()", span="491-491"];
m23_230 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNewLineAsync()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNewLineAsync()", span="422-422"];
m23_238 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNewLineAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="450-450"];
m23_239 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNewLineAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''type'', reader.Value)", span="451-451"];
m23_232 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNewLineAsync()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="439-439"];
m23_235 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNewLineAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="446-446"];
m23_237 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNewLineAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="449-449"];
m23_231 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNewLineAsync()", file="StringEnumConverterTests.cs", label="string json = @''\r\n{\r\n  ''''description'''': ''''A person'''',\r\n  ''''type'''': ''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''name'''': {''''type'''':''''string''''},\r\n    ''''hobbies'''': {\r\n      ''''type'''': ''''array'''',\r\n      ''''items'''': {''''type'''':''''string''''}\r\n    }\r\n  }\r\n}\r\n''", span="424-437"];
m23_233 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNewLineAsync()", file="StringEnumConverterTests.cs", label="int i = 0", span="444-444"];
m23_234 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNewLineAsync()", file="StringEnumConverterTests.cs", label="i < 14", span="444-444"];
m23_236 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNewLineAsync()", file="StringEnumConverterTests.cs", label="i++", span="444-444"];
m23_240 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNewLineAsync()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNewLineAsync()", span="422-422"];
m23_8 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="64-64"];
m23_536 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadBoundaryDecimalsAsync()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadBoundaryDecimalsAsync()", span="911-911"];
m23_548 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadBoundaryDecimalsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(decimal.MaxValue, max)", span="929-929"];
m23_550 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadBoundaryDecimalsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(decimal.MinValue, min)", span="932-932"];
m23_545 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadBoundaryDecimalsAsync()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(sr)", span="924-924"];
m23_546 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadBoundaryDecimalsAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="926-926"];
m23_551 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadBoundaryDecimalsAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="934-934"];
m23_547 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadBoundaryDecimalsAsync()", file="StringEnumConverterTests.cs", label="decimal? max = await reader.ReadAsDecimalAsync()", span="928-928"];
m23_549 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadBoundaryDecimalsAsync()", file="StringEnumConverterTests.cs", label="decimal? min = await reader.ReadAsDecimalAsync()", span="931-931"];
m23_544 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadBoundaryDecimalsAsync()", file="StringEnumConverterTests.cs", label="StringReader sr = new StringReader(json)", span="923-923"];
m23_543 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadBoundaryDecimalsAsync()", file="StringEnumConverterTests.cs", label="string json = sw.ToString()", span="921-921"];
m23_537 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadBoundaryDecimalsAsync()", file="StringEnumConverterTests.cs", label="StringWriter sw = new StringWriter()", span="913-913"];
m23_542 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadBoundaryDecimalsAsync()", file="StringEnumConverterTests.cs", label="await writer.WriteEndArrayAsync()", span="919-919"];
m23_538 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadBoundaryDecimalsAsync()", file="StringEnumConverterTests.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="914-914"];
m23_541 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadBoundaryDecimalsAsync()", file="StringEnumConverterTests.cs", label="await writer.WriteValueAsync(decimal.MinValue)", span="918-918"];
m23_539 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadBoundaryDecimalsAsync()", file="StringEnumConverterTests.cs", label="await writer.WriteStartArrayAsync()", span="916-916"];
m23_540 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadBoundaryDecimalsAsync()", file="StringEnumConverterTests.cs", label="await writer.WriteValueAsync(decimal.MaxValue)", span="917-917"];
m23_552 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadBoundaryDecimalsAsync()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadBoundaryDecimalsAsync()", span="911-911"];
m23_313 [cluster="Unk.WriteEndObjectAsync", file="StringEnumConverterTests.cs", label="Entry Unk.WriteEndObjectAsync", span=""];
m23_531 [cluster="System.Convert.ToDouble(string, System.IFormatProvider)", file="StringEnumConverterTests.cs", label="Entry System.Convert.ToDouble(string, System.IFormatProvider)", span="0-0"];
m23_306 [cluster="System.Text.StringBuilder.StringBuilder()", file="StringEnumConverterTests.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m23_348 [cluster="System.Convert.ToChar(string)", file="StringEnumConverterTests.cs", label="Entry System.Convert.ToChar(string)", span="0-0"];
m23_480 [cluster="System.Text.UTF8Encoding.UTF8Encoding(bool)", file="StringEnumConverterTests.cs", label="Entry System.Text.UTF8Encoding.UTF8Encoding(bool)", span="0-0"];
m23_70 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.UnescapeDoubleQuotesAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="143-143"];
m23_71 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.UnescapeDoubleQuotesAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="144-144"];
m23_72 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.UnescapeDoubleQuotesAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="146-146"];
m23_73 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.UnescapeDoubleQuotesAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="147-147"];
m23_74 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.UnescapeDoubleQuotesAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="149-149"];
m23_75 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.UnescapeDoubleQuotesAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="150-150"];
m23_481 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.JustSinglelineCommentAsync()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.JustSinglelineCommentAsync()", span="834-834"];
m23_485 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.JustSinglelineCommentAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="841-841"];
m23_486 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.JustSinglelineCommentAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''comment'', reader.Value)", span="842-842"];
m23_483 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.JustSinglelineCommentAsync()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="838-838"];
m23_484 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.JustSinglelineCommentAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="840-840"];
m23_487 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.JustSinglelineCommentAsync()", file="StringEnumConverterTests.cs", label="Assert.IsFalse(await reader.ReadAsync())", span="844-844"];
m23_482 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.JustSinglelineCommentAsync()", file="StringEnumConverterTests.cs", label="string json = @''//comment''", span="836-836"];
m23_488 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.JustSinglelineCommentAsync()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.JustSinglelineCommentAsync()", span="834-834"];
m23_393 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", span="697-697"];
m23_397 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="722-722"];
m23_398 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''comment*//*hi*/'', reader.Value)", span="723-723"];
m23_399 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, reader.LineNumber)", span="724-724"];
m23_401 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, reader.LineNumber)", span="727-727"];
m23_402 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="728-728"];
m23_404 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="731-731"];
m23_405 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, reader.LineNumber)", span="732-732"];
m23_407 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="735-735"];
m23_408 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''Name'', reader.Value)", span="736-736"];
m23_409 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="737-737"];
m23_411 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="740-740"];
m23_412 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="741-741"];
m23_414 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="744-744"];
m23_415 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(true, reader.Value)", span="745-745"];
m23_416 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(4, reader.LineNumber)", span="746-746"];
m23_418 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="749-749"];
m23_419 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''comment after true'', reader.Value)", span="750-750"];
m23_420 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(4, reader.LineNumber)", span="751-751"];
m23_422 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="754-754"];
m23_423 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''comment after comma'', reader.Value)", span="755-755"];
m23_424 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="756-756"];
m23_426 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="759-759"];
m23_427 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''ExpiryDate'', reader.Value)", span="760-760"];
m23_428 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(6, reader.LineNumber)", span="761-761"];
m23_430 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="764-764"];
m23_431 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(6, reader.LineNumber)", span="765-765"];
m23_433 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="768-768"];
m23_434 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(9, reader.LineNumber)", span="769-769"];
m23_435 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="770-770"];
m23_437 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="773-773"];
m23_439 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="776-776"];
m23_440 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(10, reader.LineNumber)", span="777-777"];
m23_442 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="780-780"];
m23_443 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(10, reader.LineNumber)", span="781-781"];
m23_445 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="784-784"];
m23_446 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(11, reader.LineNumber)", span="785-785"];
m23_448 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="788-788"];
m23_449 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''Price'', reader.Value)", span="789-789"];
m23_451 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="792-792"];
m23_453 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="795-795"];
m23_454 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''Sizes'', reader.Value)", span="796-796"];
m23_456 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="799-799"];
m23_458 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="802-802"];
m23_460 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="805-805"];
m23_462 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="808-808"];
m23_464 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="811-811"];
m23_466 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="814-814"];
m23_468 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="817-817"];
m23_470 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="820-820"];
m23_472 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="823-823"];
m23_473 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''comment '', reader.Value)", span="824-824"];
m23_475 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="827-827"];
m23_476 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''comment 1 '', reader.Value)", span="828-828"];
m23_395 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="719-719"];
m23_396 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="721-721"];
m23_400 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="726-726"];
m23_403 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="730-730"];
m23_406 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="734-734"];
m23_410 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="739-739"];
m23_413 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="743-743"];
m23_417 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="748-748"];
m23_421 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="753-753"];
m23_425 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="758-758"];
m23_429 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="763-763"];
m23_432 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="767-767"];
m23_436 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="772-772"];
m23_438 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="775-775"];
m23_441 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="779-779"];
m23_444 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="783-783"];
m23_447 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="787-787"];
m23_450 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="791-791"];
m23_452 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="794-794"];
m23_455 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="798-798"];
m23_457 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="801-801"];
m23_459 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="804-804"];
m23_461 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="807-807"];
m23_463 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="810-810"];
m23_465 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="813-813"];
m23_467 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="816-816"];
m23_469 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="819-819"];
m23_471 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="822-822"];
m23_474 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="826-826"];
m23_477 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Assert.IsFalse(await reader.ReadAsync())", span="830-830"];
m23_394 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="string json = @''//comment*//*hi*/\r\n{//comment\r\nName://comment\r\ntrue//comment after true'' + StringUtils.CarriageReturn +\r\n                          @'',//comment after comma'' + StringUtils.CarriageReturnLineFeed +\r\n                          @''''''ExpiryDate''''://comment'' + StringUtils.LineFeed +\r\n                          @''new '' + StringUtils.LineFeed +\r\n                          @''Date\r\n(//comment\r\nnull//comment\r\n),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': //comment\r\n[//comment\r\n\r\n          ''''Small''''//comment\r\n]//comment\r\n}//comment \r\n//comment 1 ''", span="699-717"];
m23_478 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", span="697-697"];
m23_29 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="StringEnumConverterTests.cs", label="json = ''\n{\''a\'':\n\''bc\'',\''d\'':true\n}''", span="92-92"];
m23_30 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="StringEnumConverterTests.cs", label="jsonTextReader = new JsonTextReader(new StringReader(json))", span="94-94"];
m23_31 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="96-96"];
m23_32 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="97-97"];
m23_33 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, jsonTextReader.LineNumber)", span="98-98"];
m23_34 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, jsonTextReader.LinePosition)", span="99-99"];
m23_35 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="101-101"];
m23_36 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="102-102"];
m23_535 [cluster="Unk.ReadAsDecimalAsync", file="StringEnumConverterTests.cs", label="Entry Unk.ReadAsDecimalAsync", span=""];
m23_257 [cluster="System.Console.WriteLine(string)", file="StringEnumConverterTests.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m23_59 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeFlagEnum()", file="StringEnumConverterTests.cs", label="string json = JsonConvert.SerializeObject(enumClass, Formatting.Indented, new StringEnumConverter())", span="214-214"];
m23_489 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", span="848-848"];
m23_491 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''6,0221418E+23'', d.ToString(new CultureInfo(''fr-FR'')))", span="852-852"];
m23_492 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''602214180000000000000000'', d.ToString(''0.#############################################################################''))", span="853-853"];
m23_497 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="862-862"];
m23_498 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0d, reader.Value)", span="863-863"];
m23_500 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="866-866"];
m23_501 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0d, reader.Value)", span="867-867"];
m23_503 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="870-870"];
m23_504 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0.0000025d, reader.Value)", span="871-871"];
m23_506 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="874-874"];
m23_507 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(3000000000d, reader.Value)", span="875-875"];
m23_509 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="878-878"];
m23_510 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="879-879"];
m23_515 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="888-888"];
m23_516 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0m, reader.Value)", span="889-889"];
m23_518 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="892-892"];
m23_519 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0m, reader.Value)", span="893-893"];
m23_521 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="896-896"];
m23_522 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0.0000025m, reader.Value)", span="897-897"];
m23_524 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="900-900"];
m23_525 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(3000000000m, reader.Value)", span="901-901"];
m23_527 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="904-904"];
m23_528 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(602214180000000000000000m, reader.Value)", span="905-905"];
m23_494 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="857-857"];
m23_512 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="reader = new JsonTextReader(new StringReader(json))", span="883-883"];
m23_495 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="859-859"];
m23_496 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="861-861"];
m23_499 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="865-865"];
m23_502 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="869-869"];
m23_505 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="873-873"];
m23_508 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="877-877"];
m23_511 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="881-881"];
m23_513 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="885-885"];
m23_529 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="907-907"];
m23_490 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="double d = Convert.ToDouble(''6.0221418e23'', CultureInfo.InvariantCulture)", span="850-850"];
m23_493 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="string json = @''[0e-10,0E-10,0.25e-5,0.3e10,6.0221418e23]''", span="855-855"];
m23_514 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsDecimalAsync()", span="887-887"];
m23_517 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsDecimalAsync()", span="891-891"];
m23_520 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsDecimalAsync()", span="895-895"];
m23_523 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsDecimalAsync()", span="899-899"];
m23_526 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsDecimalAsync()", span="903-903"];
m23_530 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", span="848-848"];
m23_307 [cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", file="StringEnumConverterTests.cs", label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", span="0-0"];
m23_113 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ReadStringAsync(string)", file="StringEnumConverterTests.cs", label="return (string)reader.Value;", span="221-221"];
m23_114 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ReadStringAsync(string)", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ReadStringAsync(string)", span="214-214"];
m23_115 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="StringEnumConverterTests.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m23_116 [cluster="System.Text.Encoding.GetBytes(string)", file="StringEnumConverterTests.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m23_54 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, jsonTextReader.LinePosition)", span="124-124"];
m23_55 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", span="51-51"];
m23_56 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="75-75"];
m23_57 [cluster="System.IO.StringReader.StringReader(string)", file="StringEnumConverterTests.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m23_60 [cluster="Unk.AreEqual", file="StringEnumConverterTests.cs", label="Entry Unk.AreEqual", span=""];
m23_61 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.UnescapeDoubleQuotesAsync()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.UnescapeDoubleQuotesAsync()", span="128-128"];
m23_534 [cluster="double.ToString(string)", file="StringEnumConverterTests.cs", label="Entry double.ToString(string)", span="0-0"];
m23_312 [cluster="Unk.WritePropertyNameAsync", file="StringEnumConverterTests.cs", label="Entry Unk.WritePropertyNameAsync", span=""];
m23_554 [cluster="System.IO.StringWriter.ToString()", file="StringEnumConverterTests.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m23_69 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.UnescapeDoubleQuotesAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="141-141"];
m23_220 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNullAsync()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNullAsync()", span="386-386"];
m23_228 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNullAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="418-418"];
m23_222 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNullAsync()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="407-407"];
m23_225 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNullAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="414-414"];
m23_227 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNullAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="417-417"];
m23_221 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNullAsync()", file="StringEnumConverterTests.cs", label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''e1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''e2'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$ref'''': ''''1''''\r\n  },\r\n  {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n]''", span="388-405"];
m23_223 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNullAsync()", file="StringEnumConverterTests.cs", label="int i = 0", span="412-412"];
m23_224 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNullAsync()", file="StringEnumConverterTests.cs", label="i < 15", span="412-412"];
m23_226 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNullAsync()", file="StringEnumConverterTests.cs", label="i++", span="412-412"];
m23_229 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNullAsync()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNullAsync()", span="386-386"];
m23_124 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="string input = @''{\r\n  value:'Purple',\r\n  array:[1,2,new Date(1)],\r\n  subobject:{prop:1,proparray:[1]}\r\n}''", span="259-263"];
m23_123 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", span="257-257"];
m23_0 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.NamedEnumDuplicateTest()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.NamedEnumDuplicateTest()", span="98-98"];
m23_4 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="101-109"];
m23_5 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="EnumContainer<NamedEnumDuplicate> c = new EnumContainer<NamedEnumDuplicate>\r\n        {\r\n          Enum = NamedEnumDuplicate.First\r\n        }", span="103-106"];
m23_6 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="JsonConvert.SerializeObject(c, Formatting.Indented, new StringEnumConverter())", span="108-108"];
m23_9 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", span="42-42"];
m23_10 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="552-552"];
m23_19 [cluster="Unk.AreEqual", file="StringEnumConverterTests.cs", label="Entry Unk.AreEqual", span=""];
m23_20 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNameEnumTest()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNameEnumTest()", span="137-137"];
m23_22 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNameEnumTest()", file="StringEnumConverterTests.cs", label="EnumContainer<NamedEnum> c = JsonConvert.DeserializeObject<EnumContainer<NamedEnum>>(json, new StringEnumConverter())", span="143-143"];
m23_23 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNameEnumTest()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(NamedEnum.First, c.Enum)", span="144-144"];
m23_24 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNameEnumTest()", file="StringEnumConverterTests.cs", label="json = @''{\r\n  ''''Enum'''': ''''Third''''\r\n}''", span="146-148"];
m23_26 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNameEnumTest()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(NamedEnum.Third, c.Enum)", span="151-151"];
m23_27 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNameEnumTest()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNameEnumTest()", span="137-137"];
m23_28 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="754-754"];
m23_38 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", span="173-173"];
m23_40 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", file="StringEnumConverterTests.cs", label="enumClass.StoreColor = StoreColor.Red", span="176-176"];
m23_41 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", file="StringEnumConverterTests.cs", label="enumClass.NullableStoreColor1 = StoreColor.DarkGoldenrod", span="177-177"];
m23_42 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", file="StringEnumConverterTests.cs", label="enumClass.NullableStoreColor2 = null", span="178-178"];
m23_44 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(@''{\r\n  ''''StoreColor'''': ''''red'''',\r\n  ''''NullableStoreColor1'''': ''''darkGoldenrod'''',\r\n  ''''NullableStoreColor2'''': null\r\n}'', json)", span="182-186"];
m23_45 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", span="173-173"];
m23_2 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.NamedEnumDuplicateTest()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.NamedEnumDuplicateTest()", span="98-98"];
m23_3 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", span="177-177"];
m23_7 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="101-109"];
m23_21 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNameEnumTest()", file="StringEnumConverterTests.cs", label="string json = @''{\r\n  ''''Enum'''': ''''@first''''\r\n}''", span="139-141"];
m23_25 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNameEnumTest()", file="StringEnumConverterTests.cs", label="c = JsonConvert.DeserializeObject<EnumContainer<NamedEnum>>(json, new StringEnumConverter())", span="150-150"];
m23_39 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", file="StringEnumConverterTests.cs", label="EnumClass enumClass = new EnumClass()", span="175-175"];
m23_43 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", file="StringEnumConverterTests.cs", label="string json = JsonConvert.SerializeObject(enumClass, Formatting.Indented, new StringEnumConverter { CamelCaseText = true })", span="180-180"];
m23_1 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.NamedEnumDuplicateTest()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<Exception>(''Enum name 'Third' already exists on enum 'NamedEnumDuplicate'.'',\r\n      () =>\r\n      {\r\n        EnumContainer<NamedEnumDuplicate> c = new EnumContainer<NamedEnumDuplicate>\r\n        {\r\n          Enum = NamedEnumDuplicate.First\r\n        };\r\n\r\n        JsonConvert.SerializeObject(c, Formatting.Indented, new StringEnumConverter());\r\n      })", span="100-109"];
m23_308 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="149-149"];
m23_532 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="StringEnumConverterTests.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m23_320 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LongStringTestAsync()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LongStringTestAsync()", span="585-585"];
m23_325 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LongStringTestAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="593-593"];
m23_327 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LongStringTestAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="596-596"];
m23_328 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LongStringTestAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="597-597"];
m23_329 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LongStringTestAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(20000, reader.Value.ToString().Length)", span="598-598"];
m23_331 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LongStringTestAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="601-601"];
m23_333 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LongStringTestAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="604-604"];
m23_323 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LongStringTestAsync()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="590-590"];
m23_324 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LongStringTestAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="592-592"];
m23_326 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LongStringTestAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="595-595"];
m23_330 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LongStringTestAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="600-600"];
m23_332 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LongStringTestAsync()", file="StringEnumConverterTests.cs", label="Assert.IsFalse(await reader.ReadAsync())", span="603-603"];
m23_322 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LongStringTestAsync()", file="StringEnumConverterTests.cs", label="string json = @''['''''' + new string(' ', length) + @'''''']''", span="588-588"];
m23_321 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LongStringTestAsync()", file="StringEnumConverterTests.cs", label="int length = 20000", span="587-587"];
m23_334 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LongStringTestAsync()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LongStringTestAsync()", span="585-585"];
m23_83 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SurrogatePairValidAsync()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="164-164"];
m23_84 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SurrogatePairValidAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="166-166"];
m23_85 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SurrogatePairValidAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="167-167"];
m23_86 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SurrogatePairValidAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="169-169"];
m23_87 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SurrogatePairValidAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="170-170"];
m23_88 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SurrogatePairValidAsync()", file="StringEnumConverterTests.cs", label="string s = reader.Value.ToString()", span="172-172"];
m23_89 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SurrogatePairValidAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, s.Length)", span="173-173"];
m23_76 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.UnescapeDoubleQuotesAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''recipe_text'', reader.Value)", span="151-151"];
m23_77 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.UnescapeDoubleQuotesAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="153-153"];
m23_78 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.UnescapeDoubleQuotesAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="154-154"];
m23_79 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.UnescapeDoubleQuotesAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''#C16------------------------------\r\n#C12Ingredients #C20\r\n#C16------------------------------\r\n\r\na piece of Leather Armor\r\n( ie #L \''Enhanced Leather Armor Boots\'' \''85644\'' )\r\n<img src=rdb://13264>\r\n\r\n#L \''Hacker Tool\'' \''87814\''\r\n<img src=rdb://99282>\r\n\r\n#L \''Clanalizer\'' \''208313\''\r\n<img src=rdb://156479>\r\n\r\n#C16------------------------------\r\n#C12Recipe #C16\r\n#C16------------------------------#C20\r\n\r\nHacker Tool\r\n#C15+#C20\r\na piece of Leather Armor\r\n#C15=#C20\r\n<img src=rdb://13264>\r\na piece of Hacked Leather Armor\r\n( ie : #L \''Hacked Leather Armor Boots\'' \''245979\'' )\r\n#C16Skills: |  BE  |#C20\r\n\r\n#C14------------------------------#C20\r\n\r\nClanalizer\r\n#C15+#C20\r\na piece of Hacked Leather Armor\r\n#C15=#C20\r\n<img src=rdb://13264>\r\na piece of Apocalypse Leather Armor\r\n( ie : #L \''Apocalypse Leather Armor Boots\'' \''245966\'' )\r\n#C16Skills: |  ??  |#C20\r\n\r\n#C16------------------------------\r\n#C12Details#C16\r\n#C16------------------------------#C20\r\n\r\n#L \''Apocalypse Leather Armor Boots\'' \''245967\''\r\n#L \''Apocalypse Leather Armor Gloves\'' \''245969\''\r\n#L \''Apocalypse Leather Armor Helmet\'' \''245975\''\r\n#L \''Apocalypse Leather Armor Pants\'' \''245971\''\r\n#L \''Apocalypse Leather Armor Sleeves\'' \''245973\''\r\n#L \''Apocalypse Leather Body Armor\'' \''245965\''\r\n\r\n#C16------------------------------\r\n#C12Comments#C16\r\n#C16------------------------------#C20\r\n\r\nNice froob armor.. but ugleh!\r\n\r\n'', reader.Value)", span="156-156"];
m23_80 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.UnescapeDoubleQuotesAsync()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.UnescapeDoubleQuotesAsync()", span="128-128"];
m23_81 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SurrogatePairValidAsync()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SurrogatePairValidAsync()", span="160-160"];
m23_82 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SurrogatePairValidAsync()", file="StringEnumConverterTests.cs", label="string json = @''{ ''''MATHEMATICAL ITALIC CAPITAL ALPHA'''': ''''\uD835\uDEE2'''' }''", span="162-162"];
m23_315 [cluster="Unk.WriteNullAsync", file="StringEnumConverterTests.cs", label="Entry Unk.WriteNullAsync", span=""];
m23_65 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNegativeEnum()", file="StringEnumConverterTests.cs", label="negativeEnumClass.Value2 = (NegativeEnum) int.MinValue", span="228-228"];
m23_67 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNegativeEnum()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Value1'''': ''''Negative'''',\r\n  ''''Value2'''': -2147483648\r\n}'', json)", span="232-235"];
m23_63 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNegativeEnum()", file="StringEnumConverterTests.cs", label="NegativeEnumClass negativeEnumClass = new NegativeEnumClass()", span="226-226"];
m23_64 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNegativeEnum()", file="StringEnumConverterTests.cs", label="negativeEnumClass.Value1 = NegativeEnum.Negative", span="227-227"];
m23_66 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNegativeEnum()", file="StringEnumConverterTests.cs", label="string json = JsonConvert.SerializeObject(negativeEnumClass, Formatting.Indented, new StringEnumConverter())", span="230-230"];
m23_68 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNegativeEnum()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNegativeEnum()", span="224-224"];
m23_62 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNegativeEnum()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNegativeEnum()", span="224-224"];
m23_349 [cluster="System.Convert.ToInt32(char)", file="StringEnumConverterTests.cs", label="Entry System.Convert.ToInt32(char)", span="0-0"];
m23_310 [cluster="Unk.WriteValueAsync", file="StringEnumConverterTests.cs", label="Entry Unk.WriteValueAsync", span=""];
m23_126 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="JsonReader reader = new JsonTextReader(sr)", span="267-267"];
m23_336 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.EscapedUnicodeTextAsync()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.EscapedUnicodeTextAsync()", span="608-608"];
m23_340 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.EscapedUnicodeTextAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="618-618"];
m23_342 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.EscapedUnicodeTextAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''<'', reader.Value)", span="621-621"];
m23_344 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.EscapedUnicodeTextAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(24352, Convert.ToInt32(Convert.ToChar((string)reader.Value)))", span="624-624"];
m23_346 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.EscapedUnicodeTextAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="627-627"];
m23_338 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.EscapedUnicodeTextAsync()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="612-612"];
m23_339 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.EscapedUnicodeTextAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="617-617"];
m23_341 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.EscapedUnicodeTextAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="620-620"];
m23_343 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.EscapedUnicodeTextAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="623-623"];
m23_345 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.EscapedUnicodeTextAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="626-626"];
m23_337 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.EscapedUnicodeTextAsync()", file="StringEnumConverterTests.cs", label="string json = @''[''''\u003c'''',''''\u5f20'''']''", span="610-610"];
m23_347 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.EscapedUnicodeTextAsync()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.EscapedUnicodeTextAsync()", span="608-608"];
m23_479 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonTextReaderTests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonTextReaderTests.SlowStream.SlowStream(string, System.Text.Encoding, int)", span="44-44"];
m23_118 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="var serializer = new JsonSerializer()", span="346-346"];
m23_120 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="serializer.Deserialize<Bucket>(new JsonTextReader(new StringReader(json)))", span="348-348"];
m23_121 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="344-349"];
m23_119 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="serializer.Converters.Add(new StringEnumConverter())", span="347-347"];
m23_90 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SurrogatePairValidAsync()", file="StringEnumConverterTests.cs", label="StringInfo stringInfo = new StringInfo(s)", span="175-175"];
m23_91 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SurrogatePairValidAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, stringInfo.LengthInTextElements)", span="176-176"];
m23_92 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SurrogatePairValidAsync()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SurrogatePairValidAsync()", span="160-160"];
m23_94 [cluster="System.Globalization.StringInfo.StringInfo(string)", file="StringEnumConverterTests.cs", label="Entry System.Globalization.StringInfo.StringInfo(string)", span="0-0"];
m23_109 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEmptyStringIntoNullable()", file="StringEnumConverterTests.cs", label="EnumClass c = JsonConvert.DeserializeObject<EnumClass>(json, new StringEnumConverter())", span="334-334"];
m23_111 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEmptyStringIntoNullable()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEmptyStringIntoNullable()", span="326-326"];
m23_110 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEmptyStringIntoNullable()", file="StringEnumConverterTests.cs", label="Assert.IsNull(c.NullableStoreColor2)", span="335-335"];
m23_314 [cluster="Unk.WriteEndArrayAsync", file="StringEnumConverterTests.cs", label="Entry Unk.WriteEndArrayAsync", span=""];
m23_350 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", span="631-631"];
m23_354 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="637-637"];
m23_356 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="640-640"];
m23_358 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="643-643"];
m23_360 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="646-646"];
m23_362 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="649-649"];
m23_364 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="652-652"];
m23_366 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="655-655"];
m23_368 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="658-658"];
m23_370 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="661-661"];
m23_372 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="664-664"];
m23_374 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="667-667"];
m23_376 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="670-670"];
m23_378 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="673-673"];
m23_380 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="676-676"];
m23_382 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="679-679"];
m23_384 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="682-682"];
m23_386 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="685-685"];
m23_388 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="688-688"];
m23_390 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="691-691"];
m23_351 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{'prop1':[1]} 1 2 ''''name'''' [][]null {}{} 1.1''))", span="633-633"];
m23_353 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="636-636"];
m23_355 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="639-639"];
m23_357 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="642-642"];
m23_359 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="645-645"];
m23_361 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="648-648"];
m23_363 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="651-651"];
m23_365 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="654-654"];
m23_367 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="657-657"];
m23_369 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="660-660"];
m23_371 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="663-663"];
m23_373 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="666-666"];
m23_375 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="669-669"];
m23_377 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="672-672"];
m23_379 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="675-675"];
m23_381 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="678-678"];
m23_383 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="681-681"];
m23_385 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="684-684"];
m23_387 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="687-687"];
m23_389 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="690-690"];
m23_391 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Assert.IsFalse(await reader.ReadAsync())", span="693-693"];
m23_352 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="reader.SupportMultipleContent = true", span="634-634"];
m23_392 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", span="631-631"];
m23_184 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", color=green, community=0, file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartObject)", prediction=363, span="339-339"];
m23_183 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="338-338"];
m23_185 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="340-340"];
m23_125 [cluster="System.IO.StringReader.StringReader(string)", file="StringEnumConverterTests.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m23_127 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label=json, span=""];
m23_128 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="271-271"];
m23_129 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartObject)", span="272-272"];
m23_130 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0, reader.Depth)", span="273-273"];
m23_131 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual('''', reader.Path)", span="274-274"];
m23_132 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="276-276"];
m23_133 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="277-277"];
m23_134 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="278-278"];
m23_135 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''value'', reader.Path)", span="279-279"];
m23_136 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="281-281"];
m23_137 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.String)", span="282-282"];
m23_138 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.Value, @''Purple'')", span="283-283"];
m23_139 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.QuoteChar, '\'')", span="284-284"];
m23_140 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="285-285"];
m23_141 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''value'', reader.Path)", span="286-286"];
m23_142 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="288-288"];
m23_143 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="289-289"];
m23_144 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="290-290"];
m23_145 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''array'', reader.Path)", span="291-291"];
m23_146 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="293-293"];
m23_147 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartArray)", span="294-294"];
m23_148 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="295-295"];
m23_149 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''array'', reader.Path)", span="296-296"];
m23_150 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="298-298"];
m23_151 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="299-299"];
m23_152 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1L, reader.Value)", span="300-300"];
m23_153 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="301-301"];
m23_154 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''array[0]'', reader.Path)", span="302-302"];
m23_155 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="304-304"];
m23_156 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="305-305"];
m23_157 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2L, reader.Value)", span="306-306"];
m23_158 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="307-307"];
m23_159 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''array[1]'', reader.Path)", span="308-308"];
m23_160 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="310-310"];
m23_161 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartConstructor)", span="311-311"];
m23_162 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="312-312"];
m23_163 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="313-313"];
m23_164 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''array[2]'', reader.Path)", span="314-314"];
m23_165 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="316-316"];
m23_166 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="317-317"];
m23_167 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1L, reader.Value)", span="318-318"];
m23_168 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(3, reader.Depth)", span="319-319"];
m23_169 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''array[2][0]'', reader.Path)", span="320-320"];
m23_170 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="322-322"];
m23_171 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndConstructor)", span="323-323"];
m23_172 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(null, reader.Value)", span="324-324"];
m23_173 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="325-325"];
m23_174 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''array[2]'', reader.Path)", span="326-326"];
m23_175 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="328-328"];
m23_176 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndArray)", span="329-329"];
m23_177 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="330-330"];
m23_178 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''array'', reader.Path)", span="331-331"];
m23_179 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="333-333"];
m23_180 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="334-334"];
m23_181 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="335-335"];
m23_182 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''subobject'', reader.Path)", span="336-336"];
m23_186 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''subobject'', reader.Path)", span="341-341"];
m23_187 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="343-343"];
m23_188 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="344-344"];
m23_189 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="345-345"];
m23_190 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''subobject.prop'', reader.Path)", span="346-346"];
m23_191 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="348-348"];
m23_192 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="349-349"];
m23_193 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="350-350"];
m23_194 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''subobject.prop'', reader.Path)", span="351-351"];
m23_195 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="353-353"];
m23_196 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="354-354"];
m23_197 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="355-355"];
m23_198 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="356-356"];
m23_199 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="358-358"];
m23_200 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartArray)", span="359-359"];
m23_201 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="360-360"];
m23_202 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="361-361"];
m23_203 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="363-363"];
m23_204 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="364-364"];
m23_205 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(3, reader.Depth)", span="365-365"];
m23_206 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''subobject.proparray[0]'', reader.Path)", span="366-366"];
m23_207 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="368-368"];
m23_208 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndArray)", span="369-369"];
m23_209 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="370-370"];
m23_210 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="371-371"];
m23_211 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="373-373"];
m23_212 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndObject)", span="374-374"];
m23_213 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="375-375"];
m23_214 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''subobject'', reader.Path)", span="376-376"];
m23_215 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="await reader.ReadAsync()", span="378-378"];
m23_216 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndObject)", span="379-379"];
m23_217 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(0, reader.Depth)", span="380-380"];
m23_218 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Assert.AreEqual('''', reader.Path)", span="381-381"];
m23_219 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", span="257-257"];
m23_117 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="344-349"];
m23_268 [cluster="Unk.Fail", file="StringEnumConverterTests.cs", label="Entry Unk.Fail", span=""];
m23_553 [cluster="System.IO.StringWriter.StringWriter()", file="StringEnumConverterTests.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m23_587 [file="StringEnumConverterTests.cs", label="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests", span=""];
m24_0 [cluster="Newtonsoft.Json.Serialization.INamingStrategy.GetPropertyName(string, bool)", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Serialization.INamingStrategy.GetPropertyName(string, bool)", span="4-4"];
m24_1 [cluster="Newtonsoft.Json.Serialization.INamingStrategy.GetPropertyName(string, bool)", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Serialization.INamingStrategy.GetPropertyName(string, bool)", span="4-4"];
m24_2 [cluster="Newtonsoft.Json.Serialization.INamingStrategy.GetDictionaryKey(string)", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Serialization.INamingStrategy.GetDictionaryKey(string)", span="5-5"];
m24_3 [cluster="Newtonsoft.Json.Serialization.INamingStrategy.GetDictionaryKey(string)", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Serialization.INamingStrategy.GetDictionaryKey(string)", span="5-5"];
m25_30 [cluster="System.Reflection.PropertyInfo.IsVirtual()", file="TypeExtensions.cs", label="Entry System.Reflection.PropertyInfo.IsVirtual()", span="96-96"];
m25_4 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", span="72-72"];
m25_5 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", file="TypeExtensions.cs", label="Type currentType = type", span="75-75"];
m25_6 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", file="TypeExtensions.cs", label="currentType != null", span="77-77"];
m25_7 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", file="TypeExtensions.cs", label="DataContractAttribute result = CachedAttributeGetter<DataContractAttribute>.GetAttribute(currentType)", span="79-79"];
m25_10 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", file="TypeExtensions.cs", label="currentType = currentType.BaseType()", span="85-85"];
m25_11 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", file="TypeExtensions.cs", label="return null;", span="88-88"];
m25_8 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", file="TypeExtensions.cs", label="result != null", span="80-80"];
m25_9 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", file="TypeExtensions.cs", label="return result;", span="82-82"];
m25_12 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", span="72-72"];
m25_32 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", span="127-127"];
m25_33 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", file="TypeExtensions.cs", label="JsonObjectAttribute objectAttribute = GetCachedAttribute<JsonObjectAttribute>(objectType)", span="129-129"];
m25_36 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", file="TypeExtensions.cs", label="DataContractAttribute dataContractAttribute = GetDataContractAttribute(objectType)", span="136-136"];
m25_39 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", file="TypeExtensions.cs", label="!ignoreSerializableAttribute", span="144-144"];
m25_40 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", file="TypeExtensions.cs", label="SerializableAttribute serializableAttribute = GetCachedAttribute<SerializableAttribute>(objectType)", span="146-146"];
m25_34 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", file="TypeExtensions.cs", label="objectAttribute != null", span="130-130"];
m25_35 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", file="TypeExtensions.cs", label="return objectAttribute.MemberSerialization;", span="132-132"];
m25_37 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", file="TypeExtensions.cs", label="dataContractAttribute != null", span="137-137"];
m25_38 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", file="TypeExtensions.cs", label="return MemberSerialization.OptIn;", span="139-139"];
m25_43 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", file="TypeExtensions.cs", label="return MemberSerialization.OptOut;", span="155-155"];
m25_41 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", file="TypeExtensions.cs", label="serializableAttribute != null", span="147-147"];
m25_42 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", file="TypeExtensions.cs", label="return MemberSerialization.Fields;", span="149-149"];
m25_44 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", span="127-127"];
m25_29 [cluster="System.Reflection.MemberInfo.MemberType()", file="TypeExtensions.cs", label="Entry System.Reflection.MemberInfo.MemberType()", span="107-107"];
m25_95 [cluster="Newtonsoft.Json.JsonException.JsonException(string)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.JsonException.JsonException(string)", span="54-54"];
m25_97 [cluster="System.Func<TResult>.Invoke()", file="TypeExtensions.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m25_164 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", span="369-369"];
m25_165 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", file="TypeExtensions.cs", label="Type type = provider as Type", span="371-371"];
m25_168 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", file="TypeExtensions.cs", label="MemberInfo memberInfo = provider as MemberInfo", span="377-377"];
m25_171 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", file="TypeExtensions.cs", label="return ReflectionUtils.GetAttribute<T>(provider, true);", span="383-383"];
m25_166 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", file="TypeExtensions.cs", label="type != null", span="372-372"];
m25_167 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", file="TypeExtensions.cs", label="return GetAttribute<T>(type);", span="374-374"];
m25_169 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", file="TypeExtensions.cs", label="memberInfo != null", span="378-378"];
m25_170 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", file="TypeExtensions.cs", label="return GetAttribute<T>(memberInfo);", span="380-380"];
m25_172 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", span="369-369"];
m25_53 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", span="52-52"];
m25_93 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", span="73-73"];
m25_103 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetTypeConverter(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetTypeConverter(System.Type)", span="249-249"];
m25_104 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetTypeConverter(System.Type)", file="TypeExtensions.cs", label="return TypeDescriptor.GetConverter(type);", span="251-251"];
m25_105 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetTypeConverter(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetTypeConverter(System.Type)", span="249-249"];
m25_96 [cluster="string.FormatWith(System.IFormatProvider, object)", file="TypeExtensions.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m25_107 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociatedMetadataType(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociatedMetadataType(System.Type)", span="256-256"];
m25_108 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociatedMetadataType(System.Type)", file="TypeExtensions.cs", label="return AssociatedMetadataTypesCache.Get(type);", span="258-258"];
m25_109 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociatedMetadataType(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociatedMetadataType(System.Type)", span="256-256"];
m25_31 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", span="902-902"];
m25_90 [cluster="Unk.Select", file="TypeExtensions.cs", label="Entry Unk.Select", span=""];
m25_121 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", span="755-755"];
m25_59 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])", span="186-186"];
m25_60 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])", file="TypeExtensions.cs", label="Func<object[], object> converterCreator = CreatorCache.Get(namingStrategyType)", span="188-188"];
m25_61 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])", file="TypeExtensions.cs", label="return (INamingStrategy)converterCreator(converterArgs);", span="189-189"];
m25_62 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])", span="186-186"];
m25_13 [cluster="System.Type.BaseType()", file="TypeExtensions.cs", label="Entry System.Type.BaseType()", span="171-171"];
m25_3 [cluster="Newtonsoft.Json.Serialization.CachedAttributeGetter<T>.GetAttribute(object)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Serialization.CachedAttributeGetter<T>.GetAttribute(object)", span="35-35"];
m25_63 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", span="192-192"];
m25_64 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", file="TypeExtensions.cs", label="containerAttribute.NamingStrategy == null", span="194-194"];
m25_65 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", file="TypeExtensions.cs", label="containerAttribute.NamingStrategyType == null", span="196-196"];
m25_67 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", file="TypeExtensions.cs", label="containerAttribute.NamingStrategy = CreateNamingStrategyInstance(containerAttribute.NamingStrategyType, containerAttribute.NamingStrategyParameters)", span="202-202"];
m25_68 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", file="TypeExtensions.cs", label="return containerAttribute.NamingStrategy;", span="205-205"];
m25_66 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", file="TypeExtensions.cs", label="return null;", span="198-198"];
m25_69 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", span="192-192"];
m25_142 [cluster="System.Type.GetInterfaces()", file="TypeExtensions.cs", label="Entry System.Type.GetInterfaces()", span="0-0"];
m25_94 [cluster="Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", span="31-31"];
m25_70 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetCreator(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetCreator(System.Type)", span="208-208"];
m25_71 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetCreator(System.Type)", file="TypeExtensions.cs", label="Func<object> defaultConstructor = (ReflectionUtils.HasDefaultConstructor(type, false))\r\n                ? ReflectionDelegateFactory.CreateDefaultConstructor<object>(type)\r\n                : null", span="210-212"];
m25_72 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetCreator(System.Type)", file="TypeExtensions.cs", label="return (parameters) =>\r\n            {\r\n                try\r\n                {\r\n                    if (parameters != null)\r\n                    {\r\n                        Type[] paramTypes = parameters.Select(param => param.GetType()).ToArray();\r\n                        ConstructorInfo parameterizedConstructorInfo = type.GetConstructor(paramTypes);\r\n\r\n                        if (null != parameterizedConstructorInfo)\r\n                        {\r\n                            ObjectConstructor<object> parameterizedConstructor = ReflectionDelegateFactory.CreateParameterizedConstructor(parameterizedConstructorInfo);\r\n                            return parameterizedConstructor(parameters);\r\n                        }\r\n                        else\r\n                        {\r\n                            throw new JsonException(''No matching parameterized constructor found for '{0}'.''.FormatWith(CultureInfo.InvariantCulture, type));\r\n                        }\r\n                    }\r\n\r\n                    if (defaultConstructor == null)\r\n                    {\r\n                        throw new JsonException(''No parameterless constructor defined for '{0}'.''.FormatWith(CultureInfo.InvariantCulture, type));\r\n                    }\r\n\r\n                    return defaultConstructor();\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    throw new JsonException(''Error creating '{0}'.''.FormatWith(CultureInfo.InvariantCulture, type), ex);\r\n                }\r\n            };", span="214-245"];
m25_73 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetCreator(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetCreator(System.Type)", span="208-208"];
m25_102 [cluster="object.GetType()", file="TypeExtensions.cs", label="Entry object.GetType()", span="0-0"];
m25_74 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", span="227-227"];
m25_143 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", span="322-322"];
m25_144 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="T attribute", span="324-324"];
m25_145 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="Type metadataType = GetAssociatedMetadataType(memberInfo.DeclaringType)", span="327-327"];
m25_147 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="MemberInfo metadataTypeMemberInfo = ReflectionUtils.GetMemberInfoFromType(metadataType, memberInfo)", span="330-330"];
m25_152 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="attribute = ReflectionUtils.GetAttribute<T>(memberInfo, true)", span="343-343"];
m25_155 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="memberInfo.DeclaringType != null", span="349-349"];
m25_156 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="memberInfo.DeclaringType.GetInterfaces()", span="351-351"];
m25_157 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="MemberInfo interfaceTypeMemberInfo = ReflectionUtils.GetMemberInfoFromType(typeInterface, memberInfo)", span="353-353"];
m25_146 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="metadataType != null", span="328-328"];
m25_148 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="metadataTypeMemberInfo != null", span="332-332"];
m25_149 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="attribute = ReflectionUtils.GetAttribute<T>(metadataTypeMemberInfo, true)", span="334-334"];
m25_150 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="attribute != null", span="335-335"];
m25_151 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="return attribute;", span="337-337"];
m25_153 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="attribute != null", span="344-344"];
m25_154 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="return attribute;", span="346-346"];
m25_162 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="return null;", span="366-366"];
m25_158 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="interfaceTypeMemberInfo != null", span="355-355"];
m25_159 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="attribute = ReflectionUtils.GetAttribute<T>(interfaceTypeMemberInfo, true)", span="357-357"];
m25_160 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="attribute != null", span="358-358"];
m25_161 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="return attribute;", span="360-360"];
m25_163 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", span="322-322"];
m25_55 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])", span="180-180"];
m25_56 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])", file="TypeExtensions.cs", label="Func<object[], object> converterCreator = CreatorCache.Get(converterType)", span="182-182"];
m25_57 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])", file="TypeExtensions.cs", label="return (JsonConverter)converterCreator(converterArgs);", span="183-183"];
m25_58 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])", span="180-180"];
m25_14 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataMemberAttribute(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataMemberAttribute(System.Reflection.MemberInfo)", span="91-91"];
m25_15 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataMemberAttribute(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="memberInfo.MemberType() == MemberTypes.Field", span="96-96"];
m25_16 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataMemberAttribute(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="return CachedAttributeGetter<DataMemberAttribute>.GetAttribute(memberInfo);", span="98-98"];
m25_17 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataMemberAttribute(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="PropertyInfo propertyInfo = (PropertyInfo)memberInfo", span="102-102"];
m25_18 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataMemberAttribute(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="DataMemberAttribute result = CachedAttributeGetter<DataMemberAttribute>.GetAttribute(propertyInfo)", span="103-103"];
m25_20 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataMemberAttribute(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="propertyInfo.IsVirtual()", span="106-106"];
m25_21 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataMemberAttribute(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="Type currentType = propertyInfo.DeclaringType", span="108-108"];
m25_23 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataMemberAttribute(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="PropertyInfo baseProperty = (PropertyInfo)ReflectionUtils.GetMemberInfoFromType(currentType, propertyInfo)", span="112-112"];
m25_19 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataMemberAttribute(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="result == null", span="104-104"];
m25_22 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataMemberAttribute(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="result == null && currentType != null", span="110-110"];
m25_27 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataMemberAttribute(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="return result;", span="123-123"];
m25_26 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataMemberAttribute(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="currentType = currentType.BaseType()", span="118-118"];
m25_24 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataMemberAttribute(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="baseProperty != null && baseProperty.IsVirtual()", span="113-113"];
m25_25 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataMemberAttribute(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="result = CachedAttributeGetter<DataMemberAttribute>.GetAttribute(baseProperty)", span="115-115"];
m25_28 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataMemberAttribute(System.Reflection.MemberInfo)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataMemberAttribute(System.Reflection.MemberInfo)", span="91-91"];
m25_92 [cluster="System.Type.GetConstructor(System.Type[])", file="TypeExtensions.cs", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0"];
m25_125 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", span="288-288"];
m25_126 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="TypeExtensions.cs", label="T attribute", span="290-290"];
m25_127 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="TypeExtensions.cs", label="Type metadataType = GetAssociatedMetadataType(type)", span="293-293"];
m25_132 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="TypeExtensions.cs", label="attribute = ReflectionUtils.GetAttribute<T>(type, true)", span="304-304"];
m25_135 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="TypeExtensions.cs", label="type.GetInterfaces()", span="310-310"];
m25_128 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="TypeExtensions.cs", label="metadataType != null", span="294-294"];
m25_129 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="TypeExtensions.cs", label="attribute = ReflectionUtils.GetAttribute<T>(metadataType, true)", span="296-296"];
m25_130 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="TypeExtensions.cs", label="attribute != null", span="297-297"];
m25_131 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="TypeExtensions.cs", label="return attribute;", span="299-299"];
m25_133 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="TypeExtensions.cs", label="attribute != null", span="305-305"];
m25_134 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="TypeExtensions.cs", label="return attribute;", span="307-307"];
m25_136 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="TypeExtensions.cs", label="attribute = ReflectionUtils.GetAttribute<T>(typeInterface, true)", span="312-312"];
m25_139 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="TypeExtensions.cs", label="return null;", span="319-319"];
m25_137 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="TypeExtensions.cs", label="attribute != null", span="313-313"];
m25_138 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="TypeExtensions.cs", label="return attribute;", span="315-315"];
m25_140 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", span="288-288"];
m25_123 [cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, params string[])", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, params string[])", span="74-74"];
m25_122 [cluster="string.Equals(string, string, System.StringComparison)", file="TypeExtensions.cs", label="Entry string.Equals(string, string, System.StringComparison)", span="0-0"];
m25_91 [cluster="Unk.ToArray", file="TypeExtensions.cs", label="Entry Unk.ToArray", span=""];
m25_98 [cluster="Newtonsoft.Json.JsonException.JsonException(string, System.Exception)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.JsonException.JsonException(string, System.Exception)", span="65-65"];
m25_75 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", span="74-74"];
m25_0 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)", span="66-66"];
m25_1 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)", file="TypeExtensions.cs", label="return CachedAttributeGetter<T>.GetAttribute(attributeProvider);", span="68-68"];
m25_2 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)", span="66-66"];
m25_141 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object, bool)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object, bool)", span="734-734"];
m25_110 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", span="261-261"];
m25_111 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="TypeExtensions.cs", label="Attribute[] customAttributes = ReflectionUtils.GetAttributes(type, null, true)", span="263-263"];
m25_112 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="TypeExtensions.cs", label=customAttributes, span="265-265"];
m25_113 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="TypeExtensions.cs", label="Type attributeType = attribute.GetType()", span="267-267"];
m25_119 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="TypeExtensions.cs", label="return null;", span="284-284"];
m25_118 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="TypeExtensions.cs", label="return (Type)_metadataTypeAttributeReflectionObject.GetValue(attribute, metadataClassTypeName);", span="280-280"];
m25_114 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="TypeExtensions.cs", label="string.Equals(attributeType.FullName, ''System.ComponentModel.DataAnnotations.MetadataTypeAttribute'', StringComparison.Ordinal)", span="271-271"];
m25_117 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="TypeExtensions.cs", label="_metadataTypeAttributeReflectionObject = ReflectionObject.Create(attributeType, metadataClassTypeName)", span="277-277"];
m25_115 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="TypeExtensions.cs", label="string metadataClassTypeName = ''MetadataClassType''", span="273-273"];
m25_116 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="TypeExtensions.cs", label="_metadataTypeAttributeReflectionObject == null", span="275-275"];
m25_120 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", span="261-261"];
m25_106 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="TypeExtensions.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m25_45 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", span="158-158"];
m25_46 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", file="TypeExtensions.cs", label="JsonConverterAttribute converterAttribute = GetCachedAttribute<JsonConverterAttribute>(attributeProvider)", span="160-160"];
m25_47 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", file="TypeExtensions.cs", label="converterAttribute != null", span="162-162"];
m25_48 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", file="TypeExtensions.cs", label="Func<object[], object> creator = CreatorCache.Get(converterAttribute.ConverterType)", span="164-164"];
m25_50 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", file="TypeExtensions.cs", label="return (JsonConverter)creator(converterAttribute.ConverterParameters);", span="167-167"];
m25_51 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", file="TypeExtensions.cs", label="return null;", span="171-171"];
m25_49 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", file="TypeExtensions.cs", label="creator != null", span="165-165"];
m25_52 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", span="158-158"];
m25_54 [cluster="System.Func<T, TResult>.Invoke(T)", file="TypeExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m25_99 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="220-220"];
m25_79 [cluster="lambda expression", file="TypeExtensions.cs", label="ConstructorInfo parameterizedConstructorInfo = type.GetConstructor(paramTypes)", span="221-221"];
m25_83 [cluster="lambda expression", file="TypeExtensions.cs", label="throw new JsonException(''No matching parameterized constructor found for '{0}'.''.FormatWith(CultureInfo.InvariantCulture, type));", span="230-230"];
m25_85 [cluster="lambda expression", file="TypeExtensions.cs", label="throw new JsonException(''No parameterless constructor defined for '{0}'.''.FormatWith(CultureInfo.InvariantCulture, type));", span="236-236"];
m25_88 [cluster="lambda expression", file="TypeExtensions.cs", label="throw new JsonException(''Error creating '{0}'.''.FormatWith(CultureInfo.InvariantCulture, type), ex);", span="243-243"];
m25_84 [cluster="lambda expression", file="TypeExtensions.cs", label="defaultConstructor == null", span="234-234"];
m25_86 [cluster="lambda expression", file="TypeExtensions.cs", label="return defaultConstructor();", span="239-239"];
m25_77 [cluster="lambda expression", file="TypeExtensions.cs", label="parameters != null", span="218-218"];
m25_78 [cluster="lambda expression", file="TypeExtensions.cs", label="Type[] paramTypes = parameters.Select(param => param.GetType()).ToArray()", span="220-220"];
m25_82 [cluster="lambda expression", file="TypeExtensions.cs", label="return parameterizedConstructor(parameters);", span="226-226"];
m25_76 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="214-245"];
m25_80 [cluster="lambda expression", file="TypeExtensions.cs", label="null != parameterizedConstructorInfo", span="223-223"];
m25_81 [cluster="lambda expression", file="TypeExtensions.cs", label="ObjectConstructor<object> parameterizedConstructor = ReflectionDelegateFactory.CreateParameterizedConstructor(parameterizedConstructorInfo)", span="225-225"];
m25_87 [cluster="lambda expression", file="TypeExtensions.cs", label=Exception, span="241-241"];
m25_89 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="214-245"];
m25_100 [cluster="lambda expression", file="TypeExtensions.cs", label="param.GetType()", span="220-220"];
m25_101 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="220-220"];
m25_124 [cluster="Newtonsoft.Json.Utilities.ReflectionObject.GetValue(object, string)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionObject.GetValue(object, string)", span="57-57"];
m25_173 [file="TypeExtensions.cs", label="System.Type", span=""];
m25_174 [file="TypeExtensions.cs", label=defaultConstructor, span=""];
m0_143 -> m0_160  [color=darkseagreen4, key=1, label=ms, style=dashed];
m0_144 -> m0_146  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_144 -> m0_147  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_144 -> m0_148  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_144 -> m0_149  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_144 -> m0_153  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_144 -> m0_155  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_144 -> m0_156  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_144 -> m0_157  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_144 -> m0_158  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_144 -> m0_159  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_150 -> m0_154  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_154 -> m0_154  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_161 -> m0_163  [color=darkseagreen4, key=1, label=expected, style=dashed];
m0_294 -> m0_296  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_97 -> m0_105  [color=darkseagreen4, key=1, label=ms, style=dashed];
m0_98 -> m0_100  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_98 -> m0_101  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_98 -> m0_102  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_98 -> m0_103  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_98 -> m0_104  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_106 -> m0_108  [color=darkseagreen4, key=1, label=expected, style=dashed];
m0_1 -> m0_3  [color=darkseagreen4, key=1, label=ms, style=dashed];
m0_1 -> m0_5  [color=darkseagreen4, key=1, label=ms, style=dashed];
m0_2 -> m0_4  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_6 -> m0_8  [color=darkseagreen4, key=1, label=ms, style=dashed];
m0_6 -> m0_10  [color=darkseagreen4, key=1, label=ms, style=dashed];
m0_7 -> m0_9  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_381 -> m0_390  [color=darkseagreen4, key=1, label=ms, style=dashed];
m0_382 -> m0_384  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_382 -> m0_385  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_382 -> m0_386  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_382 -> m0_387  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_382 -> m0_388  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_469 -> m0_471  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_36 -> m0_38  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_36 -> m0_39  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_36 -> m0_40  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_36 -> m0_41  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_36 -> m0_42  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_36 -> m0_43  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_36 -> m0_44  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_36 -> m0_45  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_36 -> m0_46  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_36 -> m0_47  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_36 -> m0_48  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_36 -> m0_49  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_36 -> m0_50  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_36 -> m0_51  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_36 -> m0_52  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_274 -> m0_276  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_274 -> m0_277  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_274 -> m0_278  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_242 -> m0_246  [color=darkseagreen4, key=1, label=jsonGoogleMapGeocoder, style=dashed];
m0_243 -> m0_247  [color=darkseagreen4, key=1, label=ms, style=dashed];
m0_244 -> m0_246  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_249 -> m0_251  [color=darkseagreen4, key=1, label=bsonGoogleMapGeocoder, style=dashed];
m0_249 -> m0_252  [color=darkseagreen4, key=1, label=bsonGoogleMapGeocoder, style=dashed];
m0_249 -> m0_253  [color=darkseagreen4, key=1, label=bsonGoogleMapGeocoder, style=dashed];
m0_254 -> m0_256  [color=darkseagreen4, key=1, label=placemarks, style=dashed];
m0_257 -> m0_259  [color=darkseagreen4, key=1, label=placemark, style=dashed];
m0_257 -> m0_260  [color=darkseagreen4, key=1, label=placemark, style=dashed];
m0_257 -> m0_261  [color=darkseagreen4, key=1, label=placemark, style=dashed];
m0_257 -> m0_262  [color=darkseagreen4, key=1, label=placemark, style=dashed];
m0_257 -> m0_263  [color=darkseagreen4, key=1, label=placemark, style=dashed];
m0_257 -> m0_264  [color=darkseagreen4, key=1, label=placemark, style=dashed];
m0_257 -> m0_265  [color=darkseagreen4, key=1, label=placemark, style=dashed];
m0_257 -> m0_266  [color=darkseagreen4, key=1, label=placemark, style=dashed];
m0_257 -> m0_267  [color=darkseagreen4, key=1, label=placemark, style=dashed];
m0_257 -> m0_268  [color=darkseagreen4, key=1, label=placemark, style=dashed];
m0_478 -> m0_483  [color=darkseagreen4, key=1, label=ms, style=dashed];
m0_479 -> m0_481  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_479 -> m0_482  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_314 -> m0_316  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_441 -> m0_449  [color=darkseagreen4, key=1, label=ms, style=dashed];
m0_442 -> m0_444  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_442 -> m0_445  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_442 -> m0_446  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_442 -> m0_447  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_442 -> m0_448  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_450 -> m0_453  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_450 -> m0_454  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_450 -> m0_455  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_450 -> m0_456  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_450 -> m0_457  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_450 -> m0_458  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_450 -> m0_459  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_450 -> m0_460  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_450 -> m0_461  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_450 -> m0_462  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_450 -> m0_463  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_450 -> m0_464  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_450 -> m0_465  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_450 -> m0_466  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_415 -> m0_422  [color=darkseagreen4, key=1, label=ms, style=dashed];
m0_416 -> m0_418  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_416 -> m0_419  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_416 -> m0_420  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_416 -> m0_421  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_423 -> m0_425  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_423 -> m0_426  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_423 -> m0_427  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_423 -> m0_428  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_423 -> m0_429  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_423 -> m0_430  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_423 -> m0_431  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_423 -> m0_432  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_423 -> m0_433  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_423 -> m0_434  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_423 -> m0_435  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_423 -> m0_436  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_423 -> m0_437  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_423 -> m0_438  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_19 -> m0_21  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_19 -> m0_22  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_19 -> m0_23  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_394 -> m0_402  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_399 -> m0_403  [color=darkseagreen4, key=1, label=ms, style=dashed];
m0_400 -> m0_402  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m0_405 -> m0_407  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m0_405 -> m0_408  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m0_405 -> m0_409  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m0_405 -> m0_410  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m0_405 -> m0_411  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m0_405 -> m0_412  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m0_304 -> m0_306  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_168 -> m0_179  [color=darkseagreen4, key=1, label=ms, style=dashed];
m0_168 -> m0_199  [color=darkseagreen4, key=1, label=ms, style=dashed];
m0_169 -> m0_178  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_203 -> m0_205  [color=darkseagreen4, key=1, label=l2, style=dashed];
m0_170 -> m0_178  [color=darkseagreen4, key=1, label=s1, style=dashed];
m0_170 -> m0_182  [color=darkseagreen4, key=1, label=s1, style=dashed];
m0_170 -> m0_183  [color=darkseagreen4, key=1, label=s1, style=dashed];
m0_170 -> m0_184  [color=darkseagreen4, key=1, label=s1, style=dashed];
m0_170 -> m0_185  [color=darkseagreen4, key=1, label=s1, style=dashed];
m0_170 -> m0_186  [color=darkseagreen4, key=1, label=s1, style=dashed];
m0_170 -> m0_187  [color=darkseagreen4, key=1, label=s1, style=dashed];
m0_170 -> m0_188  [color=darkseagreen4, key=1, label=s1, style=dashed];
m0_170 -> m0_189  [color=darkseagreen4, key=1, label=s1, style=dashed];
m0_170 -> m0_190  [color=darkseagreen4, key=1, label=s1, style=dashed];
m0_170 -> m0_191  [color=darkseagreen4, key=1, label=s1, style=dashed];
m0_170 -> m0_192  [color=darkseagreen4, key=1, label=s1, style=dashed];
m0_170 -> m0_193  [color=darkseagreen4, key=1, label=s1, style=dashed];
m0_170 -> m0_194  [color=darkseagreen4, key=1, label=s1, style=dashed];
m0_170 -> m0_195  [color=darkseagreen4, key=1, label=s1, style=dashed];
m0_170 -> m0_198  [color=darkseagreen4, key=1, label=s1, style=dashed];
m0_177 -> m0_198  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m0_181 -> m0_183  [color=darkseagreen4, key=1, label=s2, style=dashed];
m0_181 -> m0_184  [color=darkseagreen4, key=1, label=s2, style=dashed];
m0_181 -> m0_185  [color=darkseagreen4, key=1, label=s2, style=dashed];
m0_181 -> m0_186  [color=darkseagreen4, key=1, label=s2, style=dashed];
m0_181 -> m0_187  [color=darkseagreen4, key=1, label=s2, style=dashed];
m0_181 -> m0_188  [color=darkseagreen4, key=1, label=s2, style=dashed];
m0_181 -> m0_189  [color=darkseagreen4, key=1, label=s2, style=dashed];
m0_181 -> m0_190  [color=darkseagreen4, key=1, label=s2, style=dashed];
m0_181 -> m0_191  [color=darkseagreen4, key=1, label=s2, style=dashed];
m0_181 -> m0_192  [color=darkseagreen4, key=1, label=s2, style=dashed];
m0_181 -> m0_193  [color=darkseagreen4, key=1, label=s2, style=dashed];
m0_181 -> m0_194  [color=darkseagreen4, key=1, label=s2, style=dashed];
m0_181 -> m0_195  [color=darkseagreen4, key=1, label=s2, style=dashed];
m0_196 -> m0_199  [color=darkseagreen4, key=1, label=ms1, style=dashed];
m0_202 -> m0_204  [color=darkseagreen4, key=1, label=l1, style=dashed];
m0_220 -> m0_229  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_220 -> m0_230  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_220 -> m0_231  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_220 -> m0_232  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_221 -> m0_225  [color=darkseagreen4, key=1, label=largeStringBuilder, style=dashed];
m0_221 -> m0_226  [color=darkseagreen4, key=1, label=largeStringBuilder, style=dashed];
m0_222 -> m0_224  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_222 -> m0_226  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_222 -> m0_227  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_228 -> m0_230  [color=darkseagreen4, key=1, label=largeString, style=dashed];
m0_228 -> m0_231  [color=darkseagreen4, key=1, label=largeString, style=dashed];
m0_227 -> m0_227  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_369 -> m0_378  [color=darkseagreen4, key=1, label=ms, style=dashed];
m0_370 -> m0_372  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_370 -> m0_373  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_370 -> m0_374  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_370 -> m0_375  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_370 -> m0_376  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_488 -> m0_493  [color=green, key=1, label=i, style=dashed];
m0_488 -> m0_506  [color=green, key=1, label=i, style=dashed];
m0_489 -> m0_497  [color=green, key=1, label=ms, style=dashed];
m0_490 -> m0_492  [color=green, key=1, label=writer, style=dashed];
m0_490 -> m0_493  [color=green, key=1, label=writer, style=dashed];
m0_490 -> m0_494  [color=green, key=1, label=writer, style=dashed];
m0_498 -> m0_500  [color=green, key=1, label=reader, style=dashed];
m0_498 -> m0_501  [color=green, key=1, label=reader, style=dashed];
m0_498 -> m0_502  [color=green, key=1, label=reader, style=dashed];
m0_498 -> m0_503  [color=green, key=1, label=reader, style=dashed];
m0_498 -> m0_504  [color=green, key=1, label=reader, style=dashed];
m0_498 -> m0_505  [color=green, key=1, label=reader, style=dashed];
m0_498 -> m0_506  [color=green, key=1, label=reader, style=dashed];
m0_498 -> m0_507  [color=green, key=1, label=reader, style=dashed];
m0_498 -> m0_508  [color=green, key=1, label=reader, style=dashed];
m0_498 -> m0_509  [color=green, key=1, label=reader, style=dashed];
m0_75 -> m0_77  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_75 -> m0_78  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_324 -> m0_332  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_329 -> m0_333  [color=darkseagreen4, key=1, label=ms, style=dashed];
m0_329 -> m0_334  [color=darkseagreen4, key=1, label=ms, style=dashed];
m0_330 -> m0_332  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m0_336 -> m0_338  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m0_336 -> m0_339  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m0_336 -> m0_340  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m0_115 -> m0_121  [color=darkseagreen4, key=1, label=data, style=dashed];
m0_115 -> m0_135  [color=darkseagreen4, key=1, label=data, style=dashed];
m0_116 -> m0_124  [color=darkseagreen4, key=1, label=ms, style=dashed];
m0_117 -> m0_119  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_117 -> m0_120  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_117 -> m0_121  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_117 -> m0_122  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_117 -> m0_123  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_128 -> m0_130  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_128 -> m0_131  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_128 -> m0_132  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_128 -> m0_133  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_128 -> m0_134  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_128 -> m0_135  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_125 -> m0_127  [color=darkseagreen4, key=1, label=expected, style=dashed];
m0_83 -> m0_87  [color=darkseagreen4, key=1, label=g, style=dashed];
m0_85 -> m0_87  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_85 -> m0_88  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_89 -> m0_91  [color=darkseagreen4, key=1, label=bson, style=dashed];
m0_283 -> m0_286  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_346 -> m0_355  [color=darkseagreen4, key=1, label=ms, style=dashed];
m0_347 -> m0_349  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_347 -> m0_350  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_347 -> m0_351  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_347 -> m0_352  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_356 -> m0_358  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_356 -> m0_359  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_356 -> m0_360  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_356 -> m0_361  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_356 -> m0_362  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_356 -> m0_363  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_356 -> m0_364  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_356 -> m0_365  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_348 -> m0_351  [color=darkseagreen4, key=1, label=oid, style=dashed];
m0_348 -> m0_363  [color=darkseagreen4, key=1, label=oid, style=dashed];
m0_288 -> m0_290  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_298 -> m0_300  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_308 -> m0_310  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_318 -> m0_320  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_473 -> m0_475  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_514 -> m0_147  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Bson.BsonWriterTests", style=dashed];
m0_514 -> m0_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Bson.BsonWriterTests", style=dashed];
m1_52 -> m1_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_70 -> m1_72  [color=darkseagreen4, key=1, label=startingWithA, style=dashed];
m1_71 -> m1_73  [color=darkseagreen4, key=1, label=startingWithB, style=dashed];
m1_29 -> m1_31  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_29 -> m1_32  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_5 -> m1_5  [color=darkseagreen4, key=1, label=properties, style=dashed];
m1_5 -> m1_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_20 -> m1_23  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_86 -> m1_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver", style=dashed];
m1_86 -> m1_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver", style=dashed];
m1_87 -> m1_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.EscapedPropertiesContractResolver", style=dashed];
m1_88 -> m1_23  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.IPersonContractResolver", style=dashed];
m2_161 -> m2_314  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m2_250 -> m2_275  [color=green, key=1, label="System.Xml.Schema.XmlSchemaSet", style=dashed];
m2_250 -> m2_291  [color=green, key=1, label="System.Xml.Schema.XmlSchemaSet", style=dashed];
m2_251 -> m2_268  [color=green, key=1, label=type, style=dashed];
m2_251 -> m2_272  [color=green, key=1, label=type, style=dashed];
m2_252 -> m2_259  [color=green, key=1, label=sequence, style=dashed];
m2_252 -> m2_264  [color=green, key=1, label=sequence, style=dashed];
m2_273 -> m2_290  [color=green, key=1, label=type, style=dashed];
m2_273 -> m2_292  [color=green, key=1, label=type, style=dashed];
m2_274 -> m2_291  [color=green, key=1, label=dsSchema, style=dashed];
m2_274 -> m2_279  [color=green, key=1, label=dsSchema, style=dashed];
m2_276 -> m2_279  [color=green, key=1, label=s1, style=dashed];
m2_276 -> m2_285  [color=green, key=1, label=s1, style=dashed];
m2_276 -> m2_288  [color=green, key=1, label=s1, style=dashed];
m2_276 -> m2_289  [color=green, key=1, label=s1, style=dashed];
m2_282 -> m2_284  [color=green, key=1, label=schema, style=dashed];
m2_277 -> m2_283  [color=green, key=1, label=s2, style=dashed];
m2_277 -> m2_284  [color=green, key=1, label=s2, style=dashed];
m2_277 -> m2_285  [color=green, key=1, label=s2, style=dashed];
m2_277 -> m2_288  [color=green, key=1, label=s2, style=dashed];
m2_40 -> m2_103  [color=green, key=1, label=bool, style=dashed];
m2_91 -> m2_94  [color=green, key=1, label=stream, style=dashed];
m2_123 -> m2_132  [color=green, key=1, label="System.Xml.Schema.XmlSchemaSet", style=dashed];
m2_123 -> m2_148  [color=green, key=1, label="System.Xml.Schema.XmlSchemaSet", style=dashed];
m2_131 -> m2_148  [color=green, key=1, label=dsSchema, style=dashed];
m2_131 -> m2_136  [color=green, key=1, label=dsSchema, style=dashed];
m2_133 -> m2_136  [color=green, key=1, label=s1, style=dashed];
m2_133 -> m2_142  [color=green, key=1, label=s1, style=dashed];
m2_133 -> m2_145  [color=green, key=1, label=s1, style=dashed];
m2_133 -> m2_146  [color=green, key=1, label=s1, style=dashed];
m2_139 -> m2_141  [color=green, key=1, label=schema, style=dashed];
m2_126 -> m2_129  [color=green, key=1, label=sequence, style=dashed];
m2_130 -> m2_147  [color=green, key=1, label=type, style=dashed];
m2_130 -> m2_149  [color=green, key=1, label=type, style=dashed];
m2_134 -> m2_140  [color=green, key=1, label=s2, style=dashed];
m2_134 -> m2_141  [color=green, key=1, label=s2, style=dashed];
m2_134 -> m2_142  [color=green, key=1, label=s2, style=dashed];
m2_134 -> m2_145  [color=green, key=1, label=s2, style=dashed];
m2_108 -> m2_312  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_109 -> m2_312  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_110 -> m2_312  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_188 -> m2_190  [color=green, key=1, label=rowCustomersRow, style=dashed];
m2_167 -> m2_169  [color=green, key=1, label="System.Data.DataTable", style=dashed];
m2_167 -> m2_171  [color=green, key=1, label="System.Data.DataTable", style=dashed];
m2_167 -> m2_173  [color=green, key=1, label="System.Data.DataTable", style=dashed];
m2_168 -> m2_315  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m2_170 -> m2_315  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m2_172 -> m2_315  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m2_174 -> m2_315  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m2_175 -> m2_315  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m2_176 -> m2_315  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m2_12 -> m2_20  [color=green, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m2_12 -> m2_34  [color=green, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m2_19 -> m2_22  [color=green, key=1, label=strSchema, style=dashed];
m2_19 -> m2_33  [color=green, key=1, label=strSchema, style=dashed];
m2_21 -> m2_23  [color=green, key=1, label=ds, style=dashed];
m2_21 -> m2_24  [color=green, key=1, label=ds, style=dashed];
m2_21 -> m2_31  [color=green, key=1, label=ds, style=dashed];
m2_25 -> m2_310  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_26 -> m2_310  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_27 -> m2_310  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_28 -> m2_310  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_29 -> m2_310  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_30 -> m2_310  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_234 -> m2_237  [color=green, key=1, label="System.Data.DataRowChangeEventArgs", style=dashed];
m2_240 -> m2_243  [color=green, key=1, label="System.Data.DataRowChangeEventArgs", style=dashed];
m2_70 -> m2_74  [color=green, key=1, label="System.Xml.XmlReader", style=dashed];
m2_70 -> m2_85  [color=green, key=1, label="System.Xml.XmlReader", style=dashed];
m2_73 -> m2_75  [color=green, key=1, label=ds, style=dashed];
m2_73 -> m2_76  [color=green, key=1, label=ds, style=dashed];
m2_73 -> m2_83  [color=green, key=1, label=ds, style=dashed];
m2_77 -> m2_311  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_78 -> m2_311  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_79 -> m2_311  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_80 -> m2_311  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_81 -> m2_311  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_82 -> m2_311  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_228 -> m2_231  [color=green, key=1, label="System.Data.DataRowChangeEventArgs", style=dashed];
m2_58 -> m2_61  [color=green, key=1, label=cln, style=dashed];
m2_197 -> m2_199  [color=green, key=1, label=cln, style=dashed];
m2_220 -> m2_223  [color=green, key=1, label="System.Data.DataRowChangeEventArgs", style=dashed];
m2_309 -> m2_1  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_309 -> m2_2  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_309 -> m2_6  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_309 -> m2_13  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_309 -> m2_20  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_309 -> m2_34  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_309 -> m2_14  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_309 -> m2_33  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_309 -> m2_24  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_309 -> m2_31  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_309 -> m2_32  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_309 -> m2_53  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_309 -> m2_54  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_309 -> m2_55  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_309 -> m2_71  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_309 -> m2_85  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_309 -> m2_72  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_309 -> m2_76  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_309 -> m2_83  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_309 -> m2_84  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_309 -> m2_86  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_309 -> m2_92  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_309 -> m2_100  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_309 -> m2_104  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_309 -> m2_105  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_309 -> m2_113  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_309 -> m2_121  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m2_313 -> m2_162  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m2_313 -> m2_163  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m2_313 -> m2_164  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m2_313 -> m2_180  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m2_313 -> m2_183  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m2_313 -> m2_189  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m2_313 -> m2_194  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m2_313 -> m2_207  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m2_313 -> m2_211  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m2_313 -> m2_221  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m2_313 -> m2_223  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m2_313 -> m2_222  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m2_313 -> m2_229  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m2_313 -> m2_231  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m2_313 -> m2_230  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m2_313 -> m2_235  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m2_313 -> m2_237  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m2_313 -> m2_236  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m2_313 -> m2_241  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m2_313 -> m2_243  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m2_313 -> m2_242  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m2_313 -> m2_247  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m2_316 -> m2_299  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow", style=dashed];
m3_136 -> m3_138  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_136 -> m3_139  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_136 -> m3_140  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_136 -> m3_141  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_136 -> m3_142  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_136 -> m3_143  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_136 -> m3_144  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_136 -> m3_145  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_136 -> m3_148  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_145 -> m3_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_943 -> m3_950  [color=darkseagreen4, key=1, label=json, style=dashed];
m3_918 -> m3_920  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_918 -> m3_921  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_918 -> m3_922  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_918 -> m3_923  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_918 -> m3_924  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_918 -> m3_925  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_918 -> m3_926  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_918 -> m3_927  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_918 -> m3_930  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_918 -> m3_932  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_918 -> m3_933  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_918 -> m3_934  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_918 -> m3_935  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_918 -> m3_936  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_918 -> m3_937  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_918 -> m3_938  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_918 -> m3_939  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_918 -> m3_940  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_918 -> m3_941  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_918 -> m3_942  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_928 -> m3_930  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_928 -> m3_931  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_931 -> m3_931  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_944 -> m3_949  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m3_945 -> m3_949  [color=darkseagreen4, key=1, label=jsonObject, style=dashed];
m3_946 -> m3_950  [color=darkseagreen4, key=1, label=sb, style=dashed];
m3_0 -> m3_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m3_0 -> m3_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m3_0 -> m3_6  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m3_0 -> m3_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m3_3 -> m3_7  [color=darkseagreen4, key=1, label=converter, style=dashed];
m3_2 -> m3_6  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_2 -> m3_4  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_2 -> m3_5  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_1 -> m3_5  [color=darkseagreen4, key=1, label=dataSet, style=dashed];
m3_5 -> m3_7  [color=darkseagreen4, key=1, label=table, style=dashed];
m3_1351 -> m3_1353  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1351 -> m3_1354  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1351 -> m3_1355  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1351 -> m3_1356  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1351 -> m3_1357  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1351 -> m3_1358  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1351 -> m3_1359  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1351 -> m3_1362  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1351 -> m3_1363  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1361 -> m3_1361  [color=darkseagreen4, key=1, label=dt, style=dashed];
m3_882 -> m3_884  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_882 -> m3_885  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_886 -> m3_888  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_886 -> m3_889  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_890 -> m3_892  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_890 -> m3_893  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_894 -> m3_896  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_894 -> m3_897  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_898 -> m3_910  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_899 -> m3_909  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_900 -> m3_902  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_900 -> m3_903  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_906 -> m3_913  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_907 -> m3_912  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1235 -> m3_1237  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1235 -> m3_1238  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1235 -> m3_1239  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1235 -> m3_1240  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1235 -> m3_1241  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1235 -> m3_1242  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1235 -> m3_1243  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1235 -> m3_1244  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1235 -> m3_1245  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1235 -> m3_1246  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1978 -> m3_1980  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1978 -> m3_1981  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1978 -> m3_1982  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1978 -> m3_1983  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1978 -> m3_1984  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1978 -> m3_1985  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1978 -> m3_1986  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1978 -> m3_1987  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1988 -> m3_1990  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1988 -> m3_1991  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1988 -> m3_1992  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1988 -> m3_1993  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1988 -> m3_1994  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1988 -> m3_1995  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1988 -> m3_1996  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1988 -> m3_1997  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1998 -> m3_2000  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1998 -> m3_2001  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1998 -> m3_2002  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1998 -> m3_2003  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1998 -> m3_2004  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1998 -> m3_2005  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1998 -> m3_2006  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1998 -> m3_2007  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2008 -> m3_2010  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2008 -> m3_2011  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2008 -> m3_2012  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2008 -> m3_2013  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2008 -> m3_2014  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2008 -> m3_2015  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2008 -> m3_2016  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2008 -> m3_2017  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2018 -> m3_2020  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2018 -> m3_2021  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2018 -> m3_2022  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2018 -> m3_2023  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2018 -> m3_2024  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2018 -> m3_2025  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2018 -> m3_2026  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2018 -> m3_2027  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_317 -> m3_321  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_318 -> m3_320  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1368 -> m3_1370  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1368 -> m3_1371  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1368 -> m3_1372  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1368 -> m3_1373  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1368 -> m3_1374  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1368 -> m3_1375  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1368 -> m3_1376  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1368 -> m3_1379  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1368 -> m3_1380  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1378 -> m3_1378  [color=darkseagreen4, key=1, label=dt, style=dashed];
m3_326 -> m3_328  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_329  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_330  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_331  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_332  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_333  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_334  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_335  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_336  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_337  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_338  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_339  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_340  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_341  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_342  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_343  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_344  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_345  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_346  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_347  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_348  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_349  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_350  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_351  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_352  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_353  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_354  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_355  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_356  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_357  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_358  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_359  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_360  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_361  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_362  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_363  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_364  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_365  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_366  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_367  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_368  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_369  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_370  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_371  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_372  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_326 -> m3_373  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_378 -> m3_380  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_381  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_382  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_383  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_384  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_385  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_386  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_387  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_388  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_389  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_390  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_391  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_392  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_393  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_394  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_395  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_396  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_397  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_398  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_399  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_400  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_401  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_402  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_403  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_404  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_405  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_406  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_407  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_408  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_409  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_410  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_411  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_412  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_413  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_414  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_415  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_416  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_417  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_418  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_419  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_420  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_421  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_422  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_423  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_424  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_425  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_426  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_427  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_428  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_429  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_430  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_431  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_432  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_433  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_434  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_435  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_436  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_437  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_438  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_439  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_440  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_441  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_442  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_443  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_444  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_445  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_446  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_447  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_448  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_449  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_450  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_451  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_452  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_453  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_454  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_455  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_456  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_457  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_458  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_459  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_460  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_461  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_462  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_463  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_464  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_465  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_466  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_467  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_468  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_469  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_378 -> m3_470  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1102 -> m3_1104  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1102 -> m3_1105  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1102 -> m3_1106  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1102 -> m3_1107  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1102 -> m3_1108  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1102 -> m3_1109  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1102 -> m3_1110  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1102 -> m3_1111  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1102 -> m3_1112  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1102 -> m3_1113  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1102 -> m3_1114  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1102 -> m3_1115  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1102 -> m3_1116  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_677 -> m3_679  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_677 -> m3_682  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_679 -> m3_681  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_178 -> m3_180  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_178 -> m3_181  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_178 -> m3_182  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_178 -> m3_185  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_182 -> m3_184  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1902 -> m3_1904  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1902 -> m3_1905  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1902 -> m3_1930  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1902 -> m3_1906  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1902 -> m3_1907  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1902 -> m3_1908  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1902 -> m3_1909  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1902 -> m3_1910  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1902 -> m3_1911  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1902 -> m3_1912  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1902 -> m3_1913  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1902 -> m3_1914  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1902 -> m3_1915  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1902 -> m3_1916  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1902 -> m3_1917  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1902 -> m3_1933  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1902 -> m3_1918  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1902 -> m3_1919  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1902 -> m3_1920  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1902 -> m3_1921  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1902 -> m3_1922  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1902 -> m3_1923  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1902 -> m3_1924  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1902 -> m3_1925  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1902 -> m3_1926  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1902 -> m3_1927  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1905 -> m3_1929  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1917 -> m3_1932  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_819 -> m3_835  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_820 -> m3_834  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_821 -> m3_838  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_822 -> m3_837  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_823 -> m3_841  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_824 -> m3_840  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_825 -> m3_844  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_826 -> m3_843  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_829 -> m3_847  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_830 -> m3_846  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_610 -> m3_612  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_613 -> m3_619  [color=darkseagreen4, key=1, label=j, style=dashed];
m3_619 -> m3_619  [color=darkseagreen4, key=1, label=j, style=dashed];
m3_616 -> m3_618  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1792 -> m3_1794  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1792 -> m3_1795  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1792 -> m3_1796  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1414 -> m3_1418  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1415 -> m3_1417  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1428 -> m3_1432  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1429 -> m3_1431  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_2034 -> m3_2037  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_2034 -> m3_2055  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_2034 -> m3_2038  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_2034 -> m3_2058  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_2034 -> m3_2040  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_2034 -> m3_2041  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_2034 -> m3_2043  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_2034 -> m3_2061  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_2034 -> m3_2045  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_2034 -> m3_2046  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_2034 -> m3_2048  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_2034 -> m3_2064  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_2034 -> m3_2049  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_2034 -> m3_2067  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_2034 -> m3_2050  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_2034 -> m3_2070  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_2037 -> m3_2054  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_2038 -> m3_2057  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_2043 -> m3_2060  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_2048 -> m3_2063  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_2049 -> m3_2066  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_2050 -> m3_2069  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1822 -> m3_1824  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1822 -> m3_1825  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1822 -> m3_1826  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1822 -> m3_1827  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1822 -> m3_1828  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1822 -> m3_1829  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1822 -> m3_1830  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1822 -> m3_1831  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1822 -> m3_1832  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1822 -> m3_1833  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1822 -> m3_1834  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1644 -> m3_1646  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1644 -> m3_1647  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1644 -> m3_1648  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1644 -> m3_1649  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1644 -> m3_1650  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1644 -> m3_1651  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1644 -> m3_1652  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1644 -> m3_1653  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1644 -> m3_1654  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1644 -> m3_1655  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1644 -> m3_1656  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1644 -> m3_1657  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1644 -> m3_1658  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1644 -> m3_1659  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1644 -> m3_1660  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1644 -> m3_1661  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1644 -> m3_1662  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1644 -> m3_1663  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1588 -> m3_1592  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1589 -> m3_1591  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_294 -> m3_296  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_294 -> m3_297  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_294 -> m3_298  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_294 -> m3_299  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_294 -> m3_300  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_294 -> m3_301  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_294 -> m3_302  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_294 -> m3_303  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_294 -> m3_304  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_294 -> m3_305  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_294 -> m3_308  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_305 -> m3_307  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_652 -> m3_656  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_653 -> m3_655  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1612 -> m3_1614  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1612 -> m3_1615  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1612 -> m3_1616  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1483 -> m3_1486  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1483 -> m3_1488  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1483 -> m3_1489  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1483 -> m3_1490  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1484 -> m3_1487  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_1487 -> m3_1487  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_1078 -> m3_1080  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1078 -> m3_1081  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1078 -> m3_1082  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1078 -> m3_1083  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1078 -> m3_1084  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1078 -> m3_1085  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1078 -> m3_1088  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1085 -> m3_1087  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_473 -> m3_475  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1635 -> m3_1640  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1636 -> m3_1639  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1472 -> m3_1475  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1472 -> m3_1477  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1472 -> m3_1478  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1473 -> m3_1476  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_1476 -> m3_1476  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_1619 -> m3_1623  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1620 -> m3_1622  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1141 -> m3_1143  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1141 -> m3_1144  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1141 -> m3_1145  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1141 -> m3_1146  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1141 -> m3_1147  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1141 -> m3_1148  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1141 -> m3_1149  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1141 -> m3_1150  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1141 -> m3_1151  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1141 -> m3_1152  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1141 -> m3_1153  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1141 -> m3_1154  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1141 -> m3_1155  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1141 -> m3_1156  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1141 -> m3_1157  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1141 -> m3_1158  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1263 -> m3_1265  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1263 -> m3_1266  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1263 -> m3_1267  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1263 -> m3_1268  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1263 -> m3_1269  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1263 -> m3_1270  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1263 -> m3_1271  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1263 -> m3_1272  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1263 -> m3_1273  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1199 -> m3_1203  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1200 -> m3_1202  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1002 -> m3_1004  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1002 -> m3_1005  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1002 -> m3_1006  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1002 -> m3_1007  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1002 -> m3_1008  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1002 -> m3_1009  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1002 -> m3_1010  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1627 -> m3_1629  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1627 -> m3_1630  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1627 -> m3_1631  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_479 -> m3_483  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_480 -> m3_482  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1503 -> m3_1505  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1503 -> m3_1506  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1503 -> m3_1507  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1503 -> m3_1508  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_267 -> m3_269  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_267 -> m3_270  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_267 -> m3_271  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_267 -> m3_272  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_267 -> m3_273  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_267 -> m3_274  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_267 -> m3_275  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_267 -> m3_276  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_267 -> m3_277  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_267 -> m3_278  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_267 -> m3_279  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_267 -> m3_280  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1421 -> m3_1425  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1422 -> m3_1424  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1580 -> m3_1584  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1581 -> m3_1583  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1800 -> m3_1804  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1801 -> m3_1803  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_988 -> m3_990  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_988 -> m3_991  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_988 -> m3_992  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_988 -> m3_993  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_988 -> m3_994  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_988 -> m3_995  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_988 -> m3_996  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_988 -> m3_997  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_988 -> m3_998  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_970 -> m3_972  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_970 -> m3_973  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_970 -> m3_974  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_970 -> m3_975  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_970 -> m3_976  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_970 -> m3_977  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_970 -> m3_978  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_970 -> m3_979  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_970 -> m3_980  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_970 -> m3_981  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_970 -> m3_982  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_970 -> m3_983  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1280 -> m3_1282  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1280 -> m3_1283  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1280 -> m3_1284  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1280 -> m3_1285  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1280 -> m3_1286  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1280 -> m3_1287  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1280 -> m3_1288  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1280 -> m3_1289  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1280 -> m3_1290  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_623 -> m3_626  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_623 -> m3_628  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_623 -> m3_629  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_623 -> m3_630  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_624 -> m3_627  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_627 -> m3_627  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_1294 -> m3_1296  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1294 -> m3_1297  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1294 -> m3_1298  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1294 -> m3_1299  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1294 -> m3_1302  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1299 -> m3_1301  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1169 -> m3_1171  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_64 -> m3_66  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_64 -> m3_67  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_64 -> m3_76  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_64 -> m3_68  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_64 -> m3_79  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_64 -> m3_69  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_64 -> m3_82  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_64 -> m3_70  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_64 -> m3_85  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_64 -> m3_71  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_64 -> m3_72  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_64 -> m3_73  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_67 -> m3_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_68 -> m3_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_69 -> m3_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_70 -> m3_84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1179 -> m3_1183  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1180 -> m3_1182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1596 -> m3_1598  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1596 -> m3_1599  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1596 -> m3_1600  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_14 -> m3_16  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_16 -> m3_23  [color=green, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_16 -> m3_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_16 -> m3_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_17 -> m3_24  [color=green, key=1, label=ds, style=dashed];
m3_1336 -> m3_1338  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1336 -> m3_1339  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1336 -> m3_1340  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1336 -> m3_1341  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1336 -> m3_1342  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1336 -> m3_1343  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1336 -> m3_1344  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1336 -> m3_1345  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1336 -> m3_1346  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1384 -> m3_1386  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1384 -> m3_1387  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1384 -> m3_1388  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1384 -> m3_1389  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1384 -> m3_1390  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1384 -> m3_1391  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1384 -> m3_1392  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1494 -> m3_1496  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1494 -> m3_1497  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1494 -> m3_1498  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1494 -> m3_1499  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_562 -> m3_564  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_568 -> m3_572  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_565 -> m3_569  [color=darkseagreen4, key=1, label=j, style=dashed];
m3_569 -> m3_569  [color=darkseagreen4, key=1, label=j, style=dashed];
m3_1443 -> m3_1445  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1443 -> m3_1446  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1443 -> m3_1447  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1443 -> m3_1449  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1443 -> m3_1450  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1443 -> m3_1452  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1443 -> m3_1453  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1448 -> m3_1451  [color=darkseagreen4, key=1, label=d, style=dashed];
m3_1837 -> m3_1839  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1837 -> m3_1840  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1837 -> m3_1843  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1840 -> m3_1842  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1937 -> m3_1939  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1937 -> m3_1940  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1937 -> m3_1941  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1937 -> m3_1942  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1937 -> m3_1943  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1937 -> m3_1944  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1937 -> m3_1945  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1937 -> m3_1946  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1937 -> m3_1947  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1937 -> m3_1948  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1937 -> m3_1949  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1937 -> m3_1950  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1937 -> m3_1951  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1937 -> m3_1952  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1937 -> m3_1953  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1937 -> m3_1954  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1937 -> m3_1955  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1937 -> m3_1956  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1937 -> m3_1957  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1937 -> m3_1958  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1937 -> m3_1959  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1937 -> m3_1960  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1937 -> m3_1961  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1937 -> m3_1962  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1937 -> m3_1963  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1937 -> m3_1964  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1937 -> m3_1965  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1937 -> m3_1966  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1937 -> m3_1967  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1937 -> m3_1968  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1937 -> m3_1969  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1937 -> m3_1970  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1937 -> m3_1971  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1937 -> m3_1972  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1937 -> m3_1973  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1937 -> m3_1974  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_189 -> m3_191  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_189 -> m3_192  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_189 -> m3_193  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_189 -> m3_194  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_189 -> m3_195  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_189 -> m3_196  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_189 -> m3_197  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_189 -> m3_198  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_189 -> m3_199  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_189 -> m3_200  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_189 -> m3_201  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_189 -> m3_202  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_189 -> m3_203  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_189 -> m3_204  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_189 -> m3_205  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_730 -> m3_732  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_730 -> m3_733  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_730 -> m3_734  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_730 -> m3_735  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_730 -> m3_736  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_730 -> m3_737  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_730 -> m3_738  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_730 -> m3_739  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_730 -> m3_740  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1192 -> m3_1196  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1193 -> m3_1195  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1206 -> m3_1210  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1207 -> m3_1209  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1174 -> m3_1176  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1396 -> m3_1398  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1396 -> m3_1399  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1396 -> m3_1400  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1396 -> m3_1401  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1396 -> m3_1404  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1401 -> m3_1403  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1457 -> m3_1459  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1457 -> m3_1460  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1457 -> m3_1461  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1457 -> m3_1462  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1457 -> m3_1464  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1457 -> m3_1465  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1457 -> m3_1467  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1457 -> m3_1468  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1463 -> m3_1466  [color=darkseagreen4, key=1, label=d, style=dashed];
m3_246 -> m3_248  [color=darkseagreen4, key=1, label=ms, style=dashed];
m3_246 -> m3_250  [color=darkseagreen4, key=1, label=ms, style=dashed];
m3_247 -> m3_249  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_251 -> m3_253  [color=darkseagreen4, key=1, label=ms, style=dashed];
m3_251 -> m3_255  [color=darkseagreen4, key=1, label=ms, style=dashed];
m3_252 -> m3_254  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1220 -> m3_1224  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1221 -> m3_1223  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1529 -> m3_1531  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1529 -> m3_1532  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1529 -> m3_1533  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1529 -> m3_1534  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1529 -> m3_1535  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1529 -> m3_1536  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1529 -> m3_1537  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1529 -> m3_1538  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1529 -> m3_1539  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1529 -> m3_1540  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1529 -> m3_1541  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1529 -> m3_1542  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1529 -> m3_1543  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1529 -> m3_1544  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1529 -> m3_1545  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1529 -> m3_1546  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1529 -> m3_1547  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1529 -> m3_1548  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1529 -> m3_1549  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1529 -> m3_1550  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1529 -> m3_1551  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1529 -> m3_1552  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1529 -> m3_1553  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1529 -> m3_1554  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1529 -> m3_1555  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1529 -> m3_1556  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1529 -> m3_1557  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1529 -> m3_1558  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1529 -> m3_1559  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1529 -> m3_1560  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1529 -> m3_1561  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1529 -> m3_1562  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1529 -> m3_1563  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1529 -> m3_1564  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1529 -> m3_1565  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1529 -> m3_1566  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1529 -> m3_1567  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1529 -> m3_1568  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1529 -> m3_1569  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1808 -> m3_1810  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1808 -> m3_1811  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_760 -> m3_769  [color=darkseagreen4, key=1, label=helloWorldData, style=dashed];
m3_761 -> m3_763  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_761 -> m3_764  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_761 -> m3_765  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_761 -> m3_766  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_761 -> m3_767  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_761 -> m3_770  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_761 -> m3_771  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_761 -> m3_772  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_761 -> m3_773  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_594 -> m3_596  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_597 -> m3_603  [color=darkseagreen4, key=1, label=j, style=dashed];
m3_603 -> m3_603  [color=darkseagreen4, key=1, label=j, style=dashed];
m3_600 -> m3_602  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_744 -> m3_751  [color=darkseagreen4, key=1, label=helloWorldData, style=dashed];
m3_745 -> m3_747  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_745 -> m3_748  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_745 -> m3_749  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_745 -> m3_752  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_745 -> m3_753  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_745 -> m3_754  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_745 -> m3_755  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1815 -> m3_1817  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1815 -> m3_1818  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_645 -> m3_649  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_646 -> m3_648  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_859 -> m3_872  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_860 -> m3_871  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_861 -> m3_863  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_861 -> m3_875  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_863 -> m3_874  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_868 -> m3_878  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_869 -> m3_877  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1250 -> m3_1252  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1250 -> m3_1253  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1250 -> m3_1254  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1250 -> m3_1255  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1250 -> m3_1256  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1250 -> m3_1257  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1250 -> m3_1258  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1250 -> m3_1259  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1512 -> m3_1514  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1512 -> m3_1515  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1512 -> m3_1516  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1512 -> m3_1517  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1512 -> m3_1518  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1512 -> m3_1519  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1512 -> m3_1520  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1512 -> m3_1521  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1512 -> m3_1522  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1512 -> m3_1523  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1512 -> m3_1524  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1512 -> m3_1525  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1512 -> m3_1526  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1161 -> m3_1163  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1161 -> m3_1166  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1163 -> m3_1165  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1227 -> m3_1231  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1228 -> m3_1230  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_22 -> m3_24  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_22 -> m3_26  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_22 -> m3_27  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_22 -> m3_28  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_22 -> m3_30  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_22 -> m3_31  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_22 -> m3_32  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_22 -> m3_33  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_22 -> m3_34  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_22 -> m3_35  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_22 -> m3_36  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_22 -> m3_37  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_2074 -> m3_2076  [color=darkseagreen4, key=1, label=writer, style=dashed];
m3_2074 -> m3_2077  [color=darkseagreen4, key=1, label=writer, style=dashed];
m3_2074 -> m3_2078  [color=darkseagreen4, key=1, label=writer, style=dashed];
m3_2081 -> m3_2087  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1306 -> m3_1308  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1306 -> m3_1309  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1306 -> m3_1310  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1306 -> m3_1311  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1306 -> m3_1312  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1306 -> m3_1313  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1306 -> m3_1314  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1306 -> m3_1315  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1306 -> m3_1316  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1320 -> m3_1322  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1320 -> m3_1323  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1320 -> m3_1324  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1320 -> m3_1325  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1320 -> m3_1326  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1320 -> m3_1327  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1320 -> m3_1328  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1320 -> m3_1329  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1320 -> m3_1330  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_521 -> m3_523  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_521 -> m3_524  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_521 -> m3_525  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_521 -> m3_526  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_521 -> m3_527  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_521 -> m3_528  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_521 -> m3_529  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_521 -> m3_530  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_521 -> m3_531  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_521 -> m3_532  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_521 -> m3_533  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_521 -> m3_534  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_521 -> m3_535  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_521 -> m3_536  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_521 -> m3_537  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_521 -> m3_538  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_521 -> m3_539  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_521 -> m3_540  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_521 -> m3_541  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_521 -> m3_542  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_521 -> m3_543  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_521 -> m3_544  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_521 -> m3_545  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_521 -> m3_546  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_521 -> m3_547  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_521 -> m3_548  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1708  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1709  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1710  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1711  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1712  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1713  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1714  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1715  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1716  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1717  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1718  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1719  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1720  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1721  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1722  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1723  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1724  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1725  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1726  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1727  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1728  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1729  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1730  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1731  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1732  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1733  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1734  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1735  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1736  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1737  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1738  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1739  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1740  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1741  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1742  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1743  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1744  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1745  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1746  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1747  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1748  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1749  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1750  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1751  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1752  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1753  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1754  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1755  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1756  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1757  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1758  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1759  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1760  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1761  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1762  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1763  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1764  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1765  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1766  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1767  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1768  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1769  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1770  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1771  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1772  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1773  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1774  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1775  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1776  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1777  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1778  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1779  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1780  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1781  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1782  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1783  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1784  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1785  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1786  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1787  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1706 -> m3_1788  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_152 -> m3_154  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_152 -> m3_155  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_152 -> m3_156  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_152 -> m3_157  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_152 -> m3_158  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_152 -> m3_159  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_152 -> m3_160  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_152 -> m3_161  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_152 -> m3_162  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_152 -> m3_163  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_152 -> m3_164  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_152 -> m3_165  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_152 -> m3_166  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_152 -> m3_167  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_152 -> m3_168  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_152 -> m3_169  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_152 -> m3_170  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_152 -> m3_171  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_152 -> m3_172  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_152 -> m3_173  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2100 -> m3_2103  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m3_1214 -> m3_1216  [color=darkseagreen4, key=1, label=data, style=dashed];
m3_1214 -> m3_1217  [color=darkseagreen4, key=1, label=data, style=dashed];
m3_286 -> m3_290  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_287 -> m3_289  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1573 -> m3_1575  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1573 -> m3_1576  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_662 -> m3_667  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_663 -> m3_666  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_2115 -> m3_2119  [color=darkseagreen4, key=1, label="byte[]", style=dashed];
m3_2117 -> m3_2119  [color=darkseagreen4, key=1, label=toReturn, style=dashed];
m3_2117 -> m3_2121  [color=darkseagreen4, key=1, label=toReturn, style=dashed];
m3_1407 -> m3_1411  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1408 -> m3_1410  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1893 -> m3_1895  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1893 -> m3_1898  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1895 -> m3_1897  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1435 -> m3_1439  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1436 -> m3_1438  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_47 -> m3_49  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_47 -> m3_50  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_47 -> m3_51  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_47 -> m3_52  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_47 -> m3_59  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_47 -> m3_53  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_47 -> m3_54  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_47 -> m3_55  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_52 -> m3_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1667 -> m3_1669  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1667 -> m3_1670  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1667 -> m3_1671  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1667 -> m3_1672  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1667 -> m3_1673  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1667 -> m3_1674  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1667 -> m3_1675  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1667 -> m3_1676  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1667 -> m3_1677  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1667 -> m3_1678  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1667 -> m3_1679  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1667 -> m3_1680  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1667 -> m3_1681  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1667 -> m3_1682  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1667 -> m3_1683  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1667 -> m3_1684  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1667 -> m3_1685  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1667 -> m3_1686  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1667 -> m3_1687  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1667 -> m3_1688  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1667 -> m3_1689  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1667 -> m3_1690  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1667 -> m3_1691  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1667 -> m3_1692  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1667 -> m3_1693  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1667 -> m3_1694  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1667 -> m3_1695  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1667 -> m3_1696  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1667 -> m3_1697  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1667 -> m3_1698  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1667 -> m3_1699  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1667 -> m3_1700  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1667 -> m3_1701  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1667 -> m3_1702  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_577 -> m3_581  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_578 -> m3_580  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_578 -> m3_581  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_585 -> m3_588  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_582 -> m3_586  [color=darkseagreen4, key=1, label=j, style=dashed];
m3_586 -> m3_586  [color=darkseagreen4, key=1, label=j, style=dashed];
m3_103 -> m3_105  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_103 -> m3_106  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_103 -> m3_107  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_103 -> m3_108  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_103 -> m3_109  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_103 -> m3_110  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_103 -> m3_111  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_103 -> m3_112  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_103 -> m3_113  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_1186 -> m3_1188  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_89 -> m3_91  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_89 -> m3_92  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_89 -> m3_93  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_89 -> m3_94  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_89 -> m3_96  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_89 -> m3_97  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_89 -> m3_98  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_638 -> m3_642  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_639 -> m3_641  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1120 -> m3_1122  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1120 -> m3_1123  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1120 -> m3_1124  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1120 -> m3_1125  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1120 -> m3_1126  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1120 -> m3_1127  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1120 -> m3_1128  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1120 -> m3_1129  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1120 -> m3_1130  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1120 -> m3_1131  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1120 -> m3_1132  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1120 -> m3_1133  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1120 -> m3_1134  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1120 -> m3_1135  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1120 -> m3_1136  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1120 -> m3_1137  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_778 -> m3_780  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_778 -> m3_781  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_778 -> m3_782  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_778 -> m3_783  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_778 -> m3_784  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_778 -> m3_785  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_778 -> m3_786  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_778 -> m3_787  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_778 -> m3_788  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_778 -> m3_789  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_778 -> m3_790  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_778 -> m3_791  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_778 -> m3_792  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_778 -> m3_793  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1847 -> m3_1849  [color=darkseagreen4, key=1, label=d, style=dashed];
m3_1851 -> m3_1853  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1851 -> m3_1854  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1851 -> m3_1855  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1851 -> m3_1856  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1851 -> m3_1857  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1851 -> m3_1858  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1851 -> m3_1859  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1851 -> m3_1860  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1851 -> m3_1861  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1851 -> m3_1862  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1851 -> m3_1863  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1851 -> m3_1864  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1851 -> m3_1865  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1851 -> m3_1866  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1851 -> m3_1867  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1851 -> m3_1868  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1869 -> m3_1871  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1869 -> m3_1872  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1869 -> m3_1873  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1869 -> m3_1874  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1869 -> m3_1875  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1869 -> m3_1876  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1869 -> m3_1877  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1869 -> m3_1878  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1869 -> m3_1879  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1869 -> m3_1880  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1869 -> m3_1881  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1869 -> m3_1882  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1869 -> m3_1883  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1869 -> m3_1884  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1869 -> m3_1885  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1869 -> m3_1886  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_486 -> m3_489  [color=darkseagreen4, key=1, label=s, style=dashed];
m3_487 -> m3_489  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_209 -> m3_211  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_209 -> m3_212  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_209 -> m3_213  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_493 -> m3_498  [color=darkseagreen4, key=1, label=valueCount, style=dashed];
m3_493 -> m3_506  [color=darkseagreen4, key=1, label=valueCount, style=dashed];
m3_495 -> m3_499  [color=darkseagreen4, key=1, label=writer, style=dashed];
m3_495 -> m3_501  [color=darkseagreen4, key=1, label=writer, style=dashed];
m3_497 -> m3_499  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_497 -> m3_500  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_500 -> m3_500  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_503 -> m3_507  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_503 -> m3_508  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_503 -> m3_510  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_503 -> m3_511  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_505 -> m3_508  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_505 -> m3_509  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_509 -> m3_509  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_2092 -> m3_2094  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1604 -> m3_1606  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1604 -> m3_1607  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1604 -> m3_1608  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_552 -> m3_555  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_552 -> m3_557  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_552 -> m3_558  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_553 -> m3_556  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_556 -> m3_556  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_1016 -> m3_1018  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1019  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1020  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1021  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1022  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1023  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1024  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1025  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1026  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1027  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1028  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1029  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1030  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1031  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1032  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1033  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1034  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1035  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1036  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1037  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1038  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1039  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1040  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1041  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1042  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1043  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1044  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1045  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1046  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1047  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1048  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1049  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1050  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1051  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1052  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1053  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1054  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1055  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1056  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1057  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1058  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1059  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1060  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1061  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1062  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1063  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1064  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1065  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1066  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1067  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1068  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1069  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1070  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1071  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1072  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1073  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_1016 -> m3_1074  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m3_117 -> m3_125  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_119 -> m3_128  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_121 -> m3_132  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_118 -> m3_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_120 -> m3_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_122 -> m3_131  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_685 -> m3_696  [color=darkseagreen4, key=1, label=newLinesText, style=dashed];
m3_685 -> m3_711  [color=darkseagreen4, key=1, label=newLinesText, style=dashed];
m3_687 -> m3_690  [color=darkseagreen4, key=1, label=count, style=dashed];
m3_691 -> m3_693  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_691 -> m3_694  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_691 -> m3_695  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_691 -> m3_696  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_691 -> m3_697  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_691 -> m3_698  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_691 -> m3_699  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_691 -> m3_700  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_691 -> m3_701  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_691 -> m3_702  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_691 -> m3_703  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_691 -> m3_704  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_691 -> m3_705  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_691 -> m3_706  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_691 -> m3_707  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_691 -> m3_708  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_691 -> m3_709  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_691 -> m3_710  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_691 -> m3_711  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_691 -> m3_712  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_691 -> m3_713  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_691 -> m3_714  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_691 -> m3_715  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_691 -> m3_716  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_691 -> m3_717  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_691 -> m3_718  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_691 -> m3_719  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_691 -> m3_720  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_691 -> m3_721  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_691 -> m3_722  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_691 -> m3_723  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_691 -> m3_724  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_691 -> m3_725  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_691 -> m3_726  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_690 -> m3_690  [color=darkseagreen4, key=1, label=count, style=dashed];
m3_633 -> m3_635  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_670 -> m3_672  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_670 -> m3_673  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2135 -> m3_59  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_2136 -> m3_76  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_2136 -> m3_79  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_2136 -> m3_82  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_2136 -> m3_85  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_2137 -> m3_125  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2137 -> m3_128  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2137 -> m3_132  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2138 -> m3_148  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2139 -> m3_185  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2140 -> m3_222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m3_2140 -> m3_223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m3_2140 -> m3_224  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m3_2140 -> m3_225  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m3_2140 -> m3_226  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m3_2140 -> m3_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m3_2140 -> m3_228  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m3_2140 -> m3_229  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m3_2140 -> m3_230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m3_2140 -> m3_231  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m3_2140 -> m3_232  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m3_2140 -> m3_233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m3_2141 -> m3_290  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2142 -> m3_308  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2143 -> m3_321  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2144 -> m3_483  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2147 -> m3_642  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2148 -> m3_649  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2149 -> m3_656  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2150 -> m3_667  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2151 -> m3_682  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2152 -> m3_835  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2152 -> m3_838  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2152 -> m3_841  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2152 -> m3_844  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2152 -> m3_847  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2153 -> m3_872  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2153 -> m3_875  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2153 -> m3_878  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2154 -> m3_910  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2154 -> m3_913  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2155 -> m3_1088  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2156 -> m3_1166  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2157 -> m3_1183  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2158 -> m3_1196  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2159 -> m3_1203  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2160 -> m3_1210  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2161 -> m3_1224  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2162 -> m3_1231  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2163 -> m3_1302  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2164 -> m3_1404  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2165 -> m3_1411  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2166 -> m3_1418  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2167 -> m3_1425  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2168 -> m3_1432  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2169 -> m3_1439  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2170 -> m3_1584  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2171 -> m3_1592  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2172 -> m3_1623  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2173 -> m3_1640  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2174 -> m3_1804  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2175 -> m3_1843  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2176 -> m3_1898  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2177 -> m3_1930  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2177 -> m3_1933  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_2178 -> m3_2055  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_2178 -> m3_2058  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_2178 -> m3_2061  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_2178 -> m3_2064  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_2178 -> m3_2067  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_2178 -> m3_2070  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_2180 -> m3_2101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ToggleReaderError", style=dashed];
m3_2180 -> m3_2103  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ToggleReaderError", style=dashed];
m3_2181 -> m3_2119  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.SlowStream", style=dashed];
m4_20 -> m4_22  [color=green, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_20 -> m4_23  [color=green, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_20 -> m4_24  [color=green, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_20 -> m4_26  [color=green, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_20 -> m4_27  [color=green, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_20 -> m4_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_20 -> m4_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_20 -> m4_32  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_20 -> m4_37  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_23 -> m4_28  [color=green, key=1, label=dt, style=dashed];
m4_23 -> m4_35  [color=green, key=1, label=dt, style=dashed];
m4_25 -> m4_28  [color=green, key=1, label=dt, style=dashed];
m4_25 -> m4_35  [color=green, key=1, label=dt, style=dashed];
m4_28 -> m4_30  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_33 -> m4_35  [color=darkseagreen4, key=1, label=key, style=dashed];
m4_31 -> m4_35  [color=darkseagreen4, key=1, label=columnName, style=dashed];
m4_36 -> m4_42  [color=darkseagreen4, key=1, label=contract, style=dashed];
m4_580 -> m4_584  [color=darkseagreen4, key=1, label=members, style=dashed];
m4_583 -> m4_590  [color=darkseagreen4, key=1, label=properties, style=dashed];
m4_585 -> m4_590  [color=darkseagreen4, key=1, label=property, style=dashed];
m4_591 -> m4_597  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_465 -> m4_467  [color=darkseagreen4, key=1, label=contract, style=dashed];
m4_471 -> m4_473  [color=darkseagreen4, key=1, label=contract, style=dashed];
m4_323 -> m4_658  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_323 -> m4_659  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberSerialization", style=dashed];
m4_323 -> m4_675  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m4_323 -> m4_683  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberSerialization", style=dashed];
m4_627 -> m4_630  [color=darkseagreen4, key=1, label=dataContractAttribute, style=dashed];
m4_628 -> m4_630  [color=darkseagreen4, key=1, label=memberInfo, style=dashed];
m4_633 -> m4_636  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m4_633 -> m4_644  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m4_633 -> m4_675  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m4_634 -> m4_654  [color=darkseagreen4, key=1, label=requiredAttribute, style=dashed];
m4_631 -> m4_638  [color=darkseagreen4, key=1, label=dataMemberAttribute, style=dashed];
m4_631 -> m4_649  [color=darkseagreen4, key=1, label=dataMemberAttribute, style=dashed];
m4_632 -> m4_638  [color=darkseagreen4, key=1, label=dataMemberAttribute, style=dashed];
m4_632 -> m4_649  [color=darkseagreen4, key=1, label=dataMemberAttribute, style=dashed];
m4_643 -> m4_681  [color=darkseagreen4, key=1, label=hasMemberAttribute, style=dashed];
m4_648 -> m4_681  [color=darkseagreen4, key=1, label=hasMemberAttribute, style=dashed];
m4_653 -> m4_681  [color=darkseagreen4, key=1, label=hasMemberAttribute, style=dashed];
m4_656 -> m4_681  [color=darkseagreen4, key=1, label=hasMemberAttribute, style=dashed];
m4_678 -> m4_685  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m4_680 -> m4_685  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m4_682 -> m4_685  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m4_110 -> m4_115  [color=darkseagreen4, key=1, label=contract, style=dashed];
m4_110 -> m4_119  [color=darkseagreen4, key=1, label=contract, style=dashed];
m4_110 -> m4_123  [color=darkseagreen4, key=1, label=contract, style=dashed];
m4_110 -> m4_124  [color=darkseagreen4, key=1, label=contract, style=dashed];
m4_110 -> m4_127  [color=darkseagreen4, key=1, label=contract, style=dashed];
m4_110 -> m4_131  [color=darkseagreen4, key=1, label=contract, style=dashed];
m4_110 -> m4_134  [color=darkseagreen4, key=1, label=contract, style=dashed];
m4_110 -> m4_135  [color=darkseagreen4, key=1, label=contract, style=dashed];
m4_120 -> m4_123  [color=darkseagreen4, key=1, label=overrideConstructor, style=dashed];
m4_128 -> m4_131  [color=darkseagreen4, key=1, label=constructor, style=dashed];
m4_132 -> m4_134  [color=darkseagreen4, key=1, label=extensionDataMember, style=dashed];
m4_276 -> m4_278  [color=darkseagreen4, key=1, label=constructors, style=dashed];
m4_1 -> m4_721  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ResolverContractKey", style=dashed];
m4_2 -> m4_721  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ResolverContractKey", style=dashed];
m4_366 -> m4_372  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_367 -> m4_404  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m4_372 -> m4_380  [color=darkseagreen4, key=1, label=baseType, style=dashed];
m4_368 -> m4_404  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m4_385 -> m4_404  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m4_369 -> m4_404  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m4_389 -> m4_404  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m4_370 -> m4_404  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m4_393 -> m4_404  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m4_371 -> m4_404  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>", style=dashed];
m4_397 -> m4_404  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m4_401 -> m4_404  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>", style=dashed];
m4_373 -> m4_384  [color=darkseagreen4, key=1, label=currentOnSerializing, style=dashed];
m4_378 -> m4_384  [color=darkseagreen4, key=1, label=skipSerializing, style=dashed];
m4_379 -> m4_396  [color=darkseagreen4, key=1, label=skipDeserialized, style=dashed];
m4_380 -> m4_384  [color=darkseagreen4, key=1, label=method, style=dashed];
m4_380 -> m4_386  [color=darkseagreen4, key=1, label=method, style=dashed];
m4_380 -> m4_388  [color=darkseagreen4, key=1, label=method, style=dashed];
m4_380 -> m4_390  [color=darkseagreen4, key=1, label=method, style=dashed];
m4_380 -> m4_392  [color=darkseagreen4, key=1, label=method, style=dashed];
m4_380 -> m4_394  [color=darkseagreen4, key=1, label=method, style=dashed];
m4_380 -> m4_396  [color=darkseagreen4, key=1, label=method, style=dashed];
m4_380 -> m4_398  [color=darkseagreen4, key=1, label=method, style=dashed];
m4_380 -> m4_400  [color=darkseagreen4, key=1, label=method, style=dashed];
m4_380 -> m4_402  [color=darkseagreen4, key=1, label=method, style=dashed];
m4_374 -> m4_388  [color=darkseagreen4, key=1, label=currentOnSerialized, style=dashed];
m4_384 -> m4_384  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m4_375 -> m4_392  [color=darkseagreen4, key=1, label=currentOnDeserializing, style=dashed];
m4_388 -> m4_388  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m4_376 -> m4_396  [color=darkseagreen4, key=1, label=currentOnDeserialized, style=dashed];
m4_392 -> m4_392  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m4_377 -> m4_400  [color=darkseagreen4, key=1, label=currentOnError, style=dashed];
m4_396 -> m4_396  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m4_400 -> m4_400  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m4_383 -> m4_388  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m4_383 -> m4_392  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m4_383 -> m4_396  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m4_383 -> m4_400  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m4_382 -> m4_384  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m4_449 -> m4_459  [color=darkseagreen4, key=1, label=contract, style=dashed];
m4_449 -> m4_461  [color=darkseagreen4, key=1, label=contract, style=dashed];
m4_454 -> m4_457  [color=darkseagreen4, key=1, label=expectedParameterType, style=dashed];
m4_454 -> m4_459  [color=darkseagreen4, key=1, label=expectedParameterType, style=dashed];
m4_453 -> m4_455  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m4_453 -> m4_457  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m4_348 -> m4_354  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_348 -> m4_356  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m4_348 -> m4_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m4_348 -> m4_360  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m4_348 -> m4_362  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m4_348 -> m4_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m4_354 -> m4_356  [color=darkseagreen4, key=1, label=onSerializing, style=dashed];
m4_354 -> m4_357  [color=darkseagreen4, key=1, label=onSerialized, style=dashed];
m4_354 -> m4_358  [color=darkseagreen4, key=1, label=onSerialized, style=dashed];
m4_354 -> m4_359  [color=darkseagreen4, key=1, label=onDeserializing, style=dashed];
m4_354 -> m4_360  [color=darkseagreen4, key=1, label=onDeserializing, style=dashed];
m4_354 -> m4_361  [color=darkseagreen4, key=1, label=onDeserialized, style=dashed];
m4_354 -> m4_362  [color=darkseagreen4, key=1, label=onDeserialized, style=dashed];
m4_354 -> m4_363  [color=darkseagreen4, key=1, label=onError, style=dashed];
m4_354 -> m4_364  [color=darkseagreen4, key=1, label=onError, style=dashed];
m4_48 -> m4_502  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_48 -> m4_506  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_48 -> m4_508  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_48 -> m4_510  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_48 -> m4_512  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_48 -> m4_514  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_48 -> m4_516  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_48 -> m4_518  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_48 -> m4_520  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_48 -> m4_522  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_48 -> m4_525  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_503 -> m4_511  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_503 -> m4_513  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_503 -> m4_515  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_503 -> m4_517  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_503 -> m4_519  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_503 -> m4_521  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_503 -> m4_523  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_503 -> m4_524  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_504 -> m4_507  [color=darkseagreen4, key=1, label=containerAttribute, style=dashed];
m4_504 -> m4_509  [color=darkseagreen4, key=1, label=containerAttribute, style=dashed];
m4_408 -> m4_555  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m4_408 -> m4_556  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m4_408 -> m4_557  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m4_408 -> m4_558  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m4_408 -> m4_559  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m4_408 -> m4_560  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m4_408 -> m4_561  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m4_408 -> m4_562  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m4_408 -> m4_563  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_408 -> m4_564  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo[]", style=dashed];
m4_408 -> m4_565  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m4_408 -> m4_566  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo[]", style=dashed];
m4_408 -> m4_567  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m4_568 -> m4_570  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m4_181 -> m4_574  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_181 -> m4_575  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_477 -> m4_483  [color=darkseagreen4, key=1, label=contract, style=dashed];
m4_406 -> m4_413  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_256 -> m4_256  [color=darkseagreen4, key=1, label=item, style=dashed];
m4_626 -> m4_705  [color=darkseagreen4, key=1, label=bool, style=dashed];
m4_698 -> m4_701  [color=darkseagreen4, key=1, label=specifiedMember, style=dashed];
m4_698 -> m4_705  [color=darkseagreen4, key=1, label=specifiedMember, style=dashed];
m4_700 -> m4_705  [color=darkseagreen4, key=1, label=specifiedMember, style=dashed];
m4_704 -> m4_711  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_703 -> m4_711  [color=darkseagreen4, key=1, label=specifiedPropertyGet, style=dashed];
m4_282 -> m4_284  [color=darkseagreen4, key=1, label=constructorParameters, style=dashed];
m4_283 -> m4_291  [color=darkseagreen4, key=1, label=parameterCollection, style=dashed];
m4_283 -> m4_292  [color=darkseagreen4, key=1, label=parameterCollection, style=dashed];
m4_285 -> m4_288  [color=darkseagreen4, key=1, label=matchingMemberProperty, style=dashed];
m4_284 -> m4_286  [color=darkseagreen4, key=1, label=parameterInfo, style=dashed];
m4_284 -> m4_288  [color=darkseagreen4, key=1, label=parameterInfo, style=dashed];
m4_289 -> m4_291  [color=darkseagreen4, key=1, label=property, style=dashed];
m4_51 -> m4_54  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_51 -> m4_55  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_51 -> m4_58  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_51 -> m4_59  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_51 -> m4_73  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_54 -> m4_57  [color=darkseagreen4, key=1, label=memberSerialization, style=dashed];
m4_54 -> m4_70  [color=darkseagreen4, key=1, label=memberSerialization, style=dashed];
m4_55 -> m4_93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_55 -> m4_60  [color=darkseagreen4, key=1, label=allMembers, style=dashed];
m4_55 -> m4_75  [color=darkseagreen4, key=1, label=allMembers, style=dashed];
m4_58 -> m4_68  [color=darkseagreen4, key=1, label=dataContractAttribute, style=dashed];
m4_59 -> m4_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_59 -> m4_62  [color=darkseagreen4, key=1, label=defaultMembers, style=dashed];
m4_56 -> m4_63  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m4_56 -> m4_65  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m4_56 -> m4_67  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m4_56 -> m4_69  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m4_56 -> m4_71  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m4_56 -> m4_78  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m4_56 -> m4_79  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m4_60 -> m4_62  [color=darkseagreen4, key=1, label=member, style=dashed];
m4_60 -> m4_63  [color=darkseagreen4, key=1, label=member, style=dashed];
m4_60 -> m4_64  [color=darkseagreen4, key=1, label=member, style=dashed];
m4_60 -> m4_65  [color=darkseagreen4, key=1, label=member, style=dashed];
m4_60 -> m4_66  [color=darkseagreen4, key=1, label=member, style=dashed];
m4_60 -> m4_67  [color=darkseagreen4, key=1, label=member, style=dashed];
m4_60 -> m4_68  [color=darkseagreen4, key=1, label=member, style=dashed];
m4_60 -> m4_69  [color=darkseagreen4, key=1, label=member, style=dashed];
m4_60 -> m4_70  [color=darkseagreen4, key=1, label=member, style=dashed];
m4_60 -> m4_71  [color=darkseagreen4, key=1, label=member, style=dashed];
m4_75 -> m4_78  [color=darkseagreen4, key=1, label=member, style=dashed];
m4_487 -> m4_491  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_488 -> m4_491  [color=darkseagreen4, key=1, label=contract, style=dashed];
m4_488 -> m4_492  [color=darkseagreen4, key=1, label=contract, style=dashed];
m4_531 -> m4_547  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_543 -> m4_545  [color=darkseagreen4, key=1, label=converter, style=dashed];
m4_421 -> m4_424  [color=darkseagreen4, key=1, label=ret, style=dashed];
m4_421 -> m4_426  [color=darkseagreen4, key=1, label=ret, style=dashed];
m4_421 -> m4_427  [color=darkseagreen4, key=1, label=ret, style=dashed];
m4_422 -> m4_424  [color=darkseagreen4, key=1, label=current, style=dashed];
m4_689 -> m4_692  [color=darkseagreen4, key=1, label=shouldSerializeMethod, style=dashed];
m4_692 -> m4_696  [color=darkseagreen4, key=1, label=shouldSerializeCall, style=dashed];
m4_693 -> m4_696  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_142 -> m4_267  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_142 -> m4_268  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_262 -> m4_273  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_262 -> m4_265  [color=darkseagreen4, key=1, label=markedConstructors, style=dashed];
m4_262 -> m4_266  [color=darkseagreen4, key=1, label=markedConstructors, style=dashed];
m4_146 -> m4_231  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m4_187 -> m4_200  [color=darkseagreen4, key=1, label=extensionDataAttribute, style=dashed];
m4_187 -> m4_207  [color=darkseagreen4, key=1, label=extensionDataAttribute, style=dashed];
m4_190 -> m4_192  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_190 -> m4_196  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_201 -> m4_230  [color=darkseagreen4, key=1, label=setExtensionDataDictionary, style=dashed];
m4_201 -> m4_233  [color=darkseagreen4, key=1, label=setExtensionDataDictionary, style=dashed];
m4_205 -> m4_233  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_205 -> m4_234  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_204 -> m4_234  [color=darkseagreen4, key=1, label=setExtensionDataDictionaryValue, style=dashed];
m4_210 -> m4_246  [color=darkseagreen4, key=1, label=createEnumerableWrapper, style=dashed];
m4_594 -> m4_615  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m4_594 -> m4_616  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberSerialization", style=dashed];
m4_594 -> m4_622  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m4_609 -> m4_615  [color=darkseagreen4, key=1, label=property, style=dashed];
m4_609 -> m4_622  [color=darkseagreen4, key=1, label=property, style=dashed];
m4_609 -> m4_623  [color=darkseagreen4, key=1, label=property, style=dashed];
m4_615 -> m4_622  [color=darkseagreen4, key=1, label=allowNonPublicAccess, style=dashed];
m4_101 -> m4_103  [color=darkseagreen4, key=1, label=propertyInfo, style=dashed];
m4_297 -> m4_303  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo", style=dashed];
m4_297 -> m4_306  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m4_297 -> m4_310  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m4_299 -> m4_303  [color=darkseagreen4, key=1, label=property, style=dashed];
m4_299 -> m4_310  [color=darkseagreen4, key=1, label=property, style=dashed];
m4_299 -> m4_319  [color=darkseagreen4, key=1, label=property, style=dashed];
m4_496 -> m4_498  [color=darkseagreen4, key=1, label=contract, style=dashed];
m4_532 -> m4_538  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_138 -> m4_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m4_138 -> m4_342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m4_432 -> m4_443  [color=darkseagreen4, key=1, label=contract, style=dashed];
m4_432 -> m4_445  [color=darkseagreen4, key=1, label=contract, style=dashed];
m4_438 -> m4_441  [color=darkseagreen4, key=1, label=expectedParameterType, style=dashed];
m4_438 -> m4_443  [color=darkseagreen4, key=1, label=expectedParameterType, style=dashed];
m4_437 -> m4_439  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m4_437 -> m4_441  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m4_147 -> m4_154  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_148 -> m4_162  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_154 -> m4_156  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_154 -> m4_157  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_162 -> m4_166  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m4_162 -> m4_168  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m4_162 -> m4_169  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m4_162 -> m4_177  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m4_155 -> m4_157  [color=darkseagreen4, key=1, label=m, style=dashed];
m4_155 -> m4_158  [color=darkseagreen4, key=1, label=m, style=dashed];
m4_170 -> m4_172  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_173 -> m4_175  [color=darkseagreen4, key=1, label=keyType, style=dashed];
m4_228 -> m4_234  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m4_243 -> m4_246  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m4_232 -> m4_234  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m4_227 -> m4_233  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_227 -> m4_234  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_722 -> m4_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ResolverContractKey", style=dashed];
m4_723 -> m4_12  [color=darkseagreen4, key=1, label="ref Newtonsoft.Json.Serialization.ResolverContractKey", style=dashed];
m4_724 -> m4_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_111  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_115  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_123  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_131  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_303  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_354  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_372  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_433  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_450  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_466  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_472  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_478  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_489  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_491  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_497  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_502  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_506  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_508  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_510  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_512  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_514  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_516  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_518  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_519  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_520  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_522  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_524  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_525  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_602  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_615  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_622  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_679  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_716  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_724 -> m4_719  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m4_726 -> m4_230  [color=darkseagreen4, key=1, label=setExtensionDataDictionary, style=dashed];
m4_726 -> m4_233  [color=darkseagreen4, key=1, label=setExtensionDataDictionary, style=dashed];
m4_727 -> m4_231  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m4_729 -> m4_234  [color=darkseagreen4, key=1, label=setExtensionDataDictionaryValue, style=dashed];
m4_730 -> m4_246  [color=darkseagreen4, key=1, label=createEnumerableWrapper, style=dashed];
m4_731 -> m4_255  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>", style=dashed];
m4_731 -> m4_260  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>", style=dashed];
m4_732 -> m4_696  [color=darkseagreen4, key=1, label=shouldSerializeCall, style=dashed];
m4_733 -> m4_711  [color=darkseagreen4, key=1, label=specifiedPropertyGet, style=dashed];
m5_81 -> m5_83  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_81 -> m5_84  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_81 -> m5_85  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_86 -> m5_88  [color=darkseagreen4, key=1, label=chars, style=dashed];
m5_86 -> m5_90  [color=darkseagreen4, key=1, label=chars, style=dashed];
m5_86 -> m5_93  [color=darkseagreen4, key=1, label=chars, style=dashed];
m5_87 -> m5_90  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_87 -> m5_92  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_92 -> m5_92  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_45 -> m5_48  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_13 -> m5_15  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_20 -> m5_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_20 -> m5_23  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_20 -> m5_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_20 -> m5_27  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_25 -> m5_27  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_25 -> m5_29  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_29 -> m5_29  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_59 -> m5_61  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
m5_59 -> m5_62  [color=darkseagreen4, key=1, label="System.Func<TSource, string>", style=dashed];
m5_59 -> m5_63  [color=darkseagreen4, key=1, label="System.Func<TSource, string>", style=dashed];
m5_59 -> m5_74  [color=darkseagreen4, key=1, label="System.Func<TSource, string>", style=dashed];
m5_59 -> m5_79  [color=darkseagreen4, key=1, label="System.Func<TSource, string>", style=dashed];
m5_64 -> m5_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_64 -> m5_66  [color=darkseagreen4, key=1, label=caseInsensitiveResults, style=dashed];
m5_67 -> m5_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_113 -> m5_74  [color=darkseagreen4, key=1, label="System.Func<TSource, string>", style=dashed];
m5_113 -> m5_79  [color=darkseagreen4, key=1, label="System.Func<TSource, string>", style=dashed];
m5_114 -> m5_74  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_114 -> m5_79  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_424 -> m6_428  [color=darkseagreen4, key=1, label=members, style=dashed];
m6_427 -> m6_431  [color=darkseagreen4, key=1, label=properties, style=dashed];
m6_429 -> m6_431  [color=darkseagreen4, key=1, label=property, style=dashed];
m6_432 -> m6_438  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_312 -> m6_279  [color=darkseagreen4, key=1, label=currentOnError, style=dashed];
m6_313 -> m6_265  [color=darkseagreen4, key=1, label=method, style=dashed];
m6_313 -> m6_267  [color=darkseagreen4, key=1, label=method, style=dashed];
m6_313 -> m6_269  [color=darkseagreen4, key=1, label=method, style=dashed];
m6_313 -> m6_271  [color=darkseagreen4, key=1, label=method, style=dashed];
m6_313 -> m6_273  [color=darkseagreen4, key=1, label=method, style=dashed];
m6_313 -> m6_275  [color=darkseagreen4, key=1, label=method, style=dashed];
m6_313 -> m6_277  [color=darkseagreen4, key=1, label=method, style=dashed];
m6_313 -> m6_279  [color=darkseagreen4, key=1, label=method, style=dashed];
m6_313 -> m6_281  [color=darkseagreen4, key=1, label=method, style=dashed];
m6_315 -> m6_317  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m6_319 -> m6_321  [color=darkseagreen4, key=1, label=contract, style=dashed];
m6_143 -> m6_145  [color=green, key=1, label="System.Type", style=dashed];
m6_145 -> m6_147  [color=green, key=1, label=baseType, style=dashed];
m6_145 -> m6_148  [color=green, key=1, label=baseType, style=dashed];
m6_166 -> m6_191  [color=green, key=1, label=object, style=dashed];
m6_166 -> m6_192  [color=green, key=1, label=string, style=dashed];
m6_149 -> m6_152  [color=green, key=1, label=member, style=dashed];
m6_149 -> m6_153  [color=green, key=1, label=member, style=dashed];
m6_149 -> m6_162  [color=green, key=1, label=member, style=dashed];
m6_149 -> m6_167  [color=green, key=1, label=member, style=dashed];
m6_146 -> m6_148  [color=green, key=1, label=members, style=dashed];
m6_146 -> m6_149  [color=green, key=1, label=members, style=dashed];
m6_153 -> m6_155  [color=green, key=1, label=t, style=dashed];
m6_153 -> m6_158  [color=green, key=1, label=t, style=dashed];
m6_153 -> m6_161  [color=green, key=1, label=t, style=dashed];
m6_163 -> m6_191  [color=green, key=1, label=setExtensionDataDictionary, style=dashed];
m6_163 -> m6_165  [color=darkseagreen4, key=1, label=constructorParameters, style=dashed];
m6_161 -> m6_165  [color=green, key=1, label=addMethod, style=dashed];
m6_164 -> m6_171  [color=darkseagreen4, key=1, label=parameterCollection, style=dashed];
m6_164 -> m6_172  [color=darkseagreen4, key=1, label=parameterCollection, style=dashed];
m6_156 -> m6_161  [color=green, key=1, label=keyType, style=dashed];
m6_156 -> m6_159  [color=green, key=1, label=keyType, style=dashed];
m6_156 -> m6_160  [color=green, key=1, label=keyType, style=dashed];
m6_157 -> m6_161  [color=green, key=1, label=valueType, style=dashed];
m6_157 -> m6_159  [color=darkseagreen4, key=1, label=constructors, style=dashed];
m6_157 -> m6_160  [color=green, key=1, label=valueType, style=dashed];
m6_159 -> m6_161  [color=green, key=1, label=t, style=dashed];
m6_165 -> m6_192  [color=green, key=1, label=setExtensionDataDictionaryValue, style=dashed];
m6_165 -> m6_167  [color=darkseagreen4, key=1, label=parameterInfo, style=dashed];
m6_169 -> m6_171  [color=darkseagreen4, key=1, label=property, style=dashed];
m6_256 -> m6_545  [color=green, key=1, label=object, style=dashed];
m6_256 -> m6_546  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberSerialization", style=dashed];
m6_256 -> m6_549  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m6_256 -> m6_515  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m6_256 -> m6_523  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberSerialization", style=dashed];
m6_256 -> m6_271  [color=darkseagreen4, key=1, label=currentOnDeserializing, style=dashed];
m6_201 -> m6_498  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_201 -> m6_499  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberSerialization", style=dashed];
m6_201 -> m6_515  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m6_201 -> m6_523  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberSerialization", style=dashed];
m6_470 -> m6_473  [color=darkseagreen4, key=1, label=dataContractAttribute, style=dashed];
m6_471 -> m6_473  [color=darkseagreen4, key=1, label=memberInfo, style=dashed];
m6_476 -> m6_480  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m6_476 -> m6_488  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m6_476 -> m6_515  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m6_476 -> m6_521  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m6_474 -> m6_482  [color=darkseagreen4, key=1, label=dataMemberAttribute, style=dashed];
m6_474 -> m6_493  [color=darkseagreen4, key=1, label=dataMemberAttribute, style=dashed];
m6_474 -> m6_525  [color=darkseagreen4, key=1, label=dataMemberAttribute, style=dashed];
m6_474 -> m6_540  [color=darkseagreen4, key=1, label=dataMemberAttribute, style=dashed];
m6_475 -> m6_482  [color=darkseagreen4, key=1, label=dataMemberAttribute, style=dashed];
m6_475 -> m6_493  [color=darkseagreen4, key=1, label=dataMemberAttribute, style=dashed];
m6_475 -> m6_525  [color=darkseagreen4, key=1, label=dataMemberAttribute, style=dashed];
m6_475 -> m6_540  [color=darkseagreen4, key=1, label=dataMemberAttribute, style=dashed];
m6_518 -> m6_528  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m6_520 -> m6_528  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m6_522 -> m6_528  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m6_524 -> m6_528  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m6_526 -> m6_528  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m6_545 -> m6_549  [color=green, key=1, label=hasJsonIgnoreAttribute, style=dashed];
m6_544 -> m6_549  [color=darkseagreen4, key=1, label=specifiedMember, style=dashed];
m6_111 -> m6_116  [color=darkseagreen4, key=1, label=contract, style=dashed];
m6_111 -> m6_123  [color=darkseagreen4, key=1, label=contract, style=dashed];
m6_111 -> m6_124  [color=darkseagreen4, key=1, label=contract, style=dashed];
m6_111 -> m6_127  [color=darkseagreen4, key=1, label=contract, style=dashed];
m6_111 -> m6_131  [color=darkseagreen4, key=1, label=contract, style=dashed];
m6_111 -> m6_133  [color=green, key=1, label=contract, style=dashed];
m6_120 -> m6_123  [color=darkseagreen4, key=1, label=overrideConstructor, style=dashed];
m6_128 -> m6_131  [color=darkseagreen4, key=1, label=constructor, style=dashed];
m6_1 -> m6_565  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ResolverContractKey", style=dashed];
m6_2 -> m6_565  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ResolverContractKey", style=dashed];
m6_247 -> m6_253  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_248 -> m6_283  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m6_253 -> m6_259  [color=darkseagreen4, key=1, label=baseType, style=dashed];
m6_249 -> m6_283  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m6_264 -> m6_283  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m6_250 -> m6_283  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m6_268 -> m6_283  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m6_251 -> m6_283  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m6_272 -> m6_283  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m6_252 -> m6_283  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>", style=dashed];
m6_276 -> m6_283  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m6_280 -> m6_283  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>", style=dashed];
m6_254 -> m6_263  [color=darkseagreen4, key=1, label=currentOnSerializing, style=dashed];
m6_259 -> m6_263  [color=darkseagreen4, key=1, label=method, style=dashed];
m6_259 -> m6_265  [color=darkseagreen4, key=1, label=method, style=dashed];
m6_259 -> m6_267  [color=darkseagreen4, key=1, label=method, style=dashed];
m6_259 -> m6_269  [color=darkseagreen4, key=1, label=method, style=dashed];
m6_259 -> m6_271  [color=darkseagreen4, key=1, label=method, style=dashed];
m6_259 -> m6_273  [color=darkseagreen4, key=1, label=method, style=dashed];
m6_259 -> m6_275  [color=darkseagreen4, key=1, label=method, style=dashed];
m6_259 -> m6_277  [color=darkseagreen4, key=1, label=method, style=dashed];
m6_259 -> m6_279  [color=darkseagreen4, key=1, label=method, style=dashed];
m6_259 -> m6_281  [color=darkseagreen4, key=1, label=method, style=dashed];
m6_255 -> m6_267  [color=darkseagreen4, key=1, label=currentOnSerialized, style=dashed];
m6_263 -> m6_263  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m6_267 -> m6_267  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m6_257 -> m6_275  [color=darkseagreen4, key=1, label=currentOnDeserialized, style=dashed];
m6_271 -> m6_271  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m6_258 -> m6_279  [color=darkseagreen4, key=1, label=currentOnError, style=dashed];
m6_275 -> m6_275  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m6_279 -> m6_279  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m6_262 -> m6_267  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m6_262 -> m6_271  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m6_262 -> m6_275  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m6_262 -> m6_279  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m6_261 -> m6_263  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m6_308 -> m6_317  [color=green, key=1, label=currentOnSerializing, style=dashed];
m6_309 -> m6_267  [color=darkseagreen4, key=1, label=currentOnSerialized, style=dashed];
m6_310 -> m6_271  [color=darkseagreen4, key=1, label=currentOnDeserializing, style=dashed];
m6_311 -> m6_275  [color=darkseagreen4, key=1, label=currentOnDeserialized, style=dashed];
m6_307 -> m6_313  [color=darkseagreen4, key=1, label=baseType, style=dashed];
m6_307 -> m6_309  [color=darkseagreen4, key=1, label=contract, style=dashed];
m6_317 -> m6_317  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m6_228 -> m6_234  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_228 -> m6_236  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m6_228 -> m6_238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m6_228 -> m6_240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m6_228 -> m6_242  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_228 -> m6_243  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m6_228 -> m6_245  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m6_234 -> m6_236  [color=darkseagreen4, key=1, label=onSerializing, style=dashed];
m6_234 -> m6_237  [color=darkseagreen4, key=1, label=onSerialized, style=dashed];
m6_234 -> m6_238  [color=darkseagreen4, key=1, label=onSerialized, style=dashed];
m6_234 -> m6_239  [color=darkseagreen4, key=1, label=onDeserializing, style=dashed];
m6_234 -> m6_240  [color=darkseagreen4, key=1, label=onDeserializing, style=dashed];
m6_234 -> m6_241  [color=darkseagreen4, key=1, label=onDeserialized, style=dashed];
m6_234 -> m6_243  [color=darkseagreen4, key=1, label=onDeserialized, style=dashed];
m6_234 -> m6_244  [color=darkseagreen4, key=1, label=onError, style=dashed];
m6_234 -> m6_245  [color=darkseagreen4, key=1, label=onError, style=dashed];
m6_51 -> m6_355  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_51 -> m6_356  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_51 -> m6_358  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_51 -> m6_360  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_51 -> m6_362  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_51 -> m6_364  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_51 -> m6_366  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_51 -> m6_368  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_51 -> m6_370  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_51 -> m6_372  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_51 -> m6_374  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_51 -> m6_375  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_354 -> m6_357  [color=darkseagreen4, key=1, label=t, style=dashed];
m6_354 -> m6_359  [color=darkseagreen4, key=1, label=t, style=dashed];
m6_354 -> m6_361  [color=darkseagreen4, key=1, label=t, style=dashed];
m6_354 -> m6_363  [color=darkseagreen4, key=1, label=t, style=dashed];
m6_354 -> m6_365  [color=darkseagreen4, key=1, label=t, style=dashed];
m6_354 -> m6_367  [color=darkseagreen4, key=1, label=t, style=dashed];
m6_354 -> m6_369  [color=darkseagreen4, key=1, label=t, style=dashed];
m6_354 -> m6_371  [color=darkseagreen4, key=1, label=t, style=dashed];
m6_354 -> m6_373  [color=darkseagreen4, key=1, label=t, style=dashed];
m6_339 -> m6_397  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m6_339 -> m6_398  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m6_339 -> m6_399  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m6_339 -> m6_400  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m6_339 -> m6_401  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m6_339 -> m6_402  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m6_339 -> m6_403  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m6_339 -> m6_404  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m6_339 -> m6_405  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_339 -> m6_406  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo[]", style=dashed];
m6_339 -> m6_407  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m6_339 -> m6_408  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo[]", style=dashed];
m6_339 -> m6_409  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m6_286 -> m6_397  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m6_286 -> m6_398  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m6_286 -> m6_399  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m6_286 -> m6_400  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m6_286 -> m6_401  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m6_286 -> m6_402  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m6_286 -> m6_403  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m6_286 -> m6_404  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m6_286 -> m6_405  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_286 -> m6_406  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo[]", style=dashed];
m6_286 -> m6_407  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m6_286 -> m6_408  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo[]", style=dashed];
m6_286 -> m6_409  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m6_410 -> m6_412  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m6_413 -> m6_418  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_413 -> m6_419  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_325 -> m6_331  [color=darkseagreen4, key=1, label=contract, style=dashed];
m6_330 -> m6_337  [color=darkseagreen4, key=1, label="object[]", style=dashed];
m6_329 -> m6_337  [color=darkseagreen4, key=1, label=methodCall, style=dashed];
m6_142 -> m6_154  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_142 -> m6_145  [color=darkseagreen4, key=1, label=markedConstructors, style=dashed];
m6_142 -> m6_146  [color=darkseagreen4, key=1, label=markedConstructors, style=dashed];
m6_469 -> m6_549  [color=darkseagreen4, key=1, label=bool, style=dashed];
m6_542 -> m6_545  [color=darkseagreen4, key=1, label=specifiedMember, style=dashed];
m6_542 -> m6_549  [color=darkseagreen4, key=1, label=specifiedMember, style=dashed];
m6_548 -> m6_557  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_547 -> m6_557  [color=darkseagreen4, key=1, label=specifiedPropertyGet, style=dashed];
m6_140 -> m6_147  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_140 -> m6_148  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_54 -> m6_74  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_57 -> m6_60  [color=darkseagreen4, key=1, label=memberSerialization, style=dashed];
m6_57 -> m6_71  [color=darkseagreen4, key=1, label=memberSerialization, style=dashed];
m6_58 -> m6_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_58 -> m6_63  [color=darkseagreen4, key=1, label=allMembers, style=dashed];
m6_58 -> m6_76  [color=darkseagreen4, key=1, label=allMembers, style=dashed];
m6_61 -> m6_69  [color=darkseagreen4, key=1, label=dataContractAttribute, style=dashed];
m6_62 -> m6_98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_62 -> m6_65  [color=darkseagreen4, key=1, label=defaultMembers, style=dashed];
m6_59 -> m6_66  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m6_59 -> m6_68  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m6_59 -> m6_70  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m6_59 -> m6_72  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m6_59 -> m6_79  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m6_59 -> m6_80  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m6_63 -> m6_65  [color=darkseagreen4, key=1, label=member, style=dashed];
m6_63 -> m6_66  [color=darkseagreen4, key=1, label=member, style=dashed];
m6_63 -> m6_67  [color=darkseagreen4, key=1, label=member, style=dashed];
m6_63 -> m6_68  [color=darkseagreen4, key=1, label=member, style=dashed];
m6_63 -> m6_69  [color=darkseagreen4, key=1, label=member, style=dashed];
m6_63 -> m6_70  [color=darkseagreen4, key=1, label=member, style=dashed];
m6_63 -> m6_71  [color=darkseagreen4, key=1, label=member, style=dashed];
m6_63 -> m6_72  [color=darkseagreen4, key=1, label=member, style=dashed];
m6_76 -> m6_79  [color=darkseagreen4, key=1, label=member, style=dashed];
m6_340 -> m6_344  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_341 -> m6_344  [color=darkseagreen4, key=1, label=contract, style=dashed];
m6_341 -> m6_345  [color=darkseagreen4, key=1, label=contract, style=dashed];
m6_384 -> m6_389  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_385 -> m6_387  [color=darkseagreen4, key=1, label=converter, style=dashed];
m6_289 -> m6_292  [color=darkseagreen4, key=1, label=ret, style=dashed];
m6_289 -> m6_294  [color=darkseagreen4, key=1, label=ret, style=dashed];
m6_289 -> m6_295  [color=darkseagreen4, key=1, label=ret, style=dashed];
m6_290 -> m6_292  [color=darkseagreen4, key=1, label=current, style=dashed];
m6_532 -> m6_535  [color=darkseagreen4, key=1, label=shouldSerializeMethod, style=dashed];
m6_535 -> m6_540  [color=darkseagreen4, key=1, label=shouldSerializeCall, style=dashed];
m6_536 -> m6_540  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_8 -> m6_11  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_11 -> m6_567  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ResolverContractKey", style=dashed];
m6_139 -> m6_147  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_139 -> m6_148  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_436 -> m6_455  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m6_436 -> m6_456  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberSerialization", style=dashed];
m6_436 -> m6_462  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m6_450 -> m6_455  [color=darkseagreen4, key=1, label=property, style=dashed];
m6_450 -> m6_462  [color=darkseagreen4, key=1, label=property, style=dashed];
m6_450 -> m6_463  [color=darkseagreen4, key=1, label=property, style=dashed];
m6_455 -> m6_462  [color=darkseagreen4, key=1, label=allowNonPublicAccess, style=dashed];
m6_102 -> m6_104  [color=darkseagreen4, key=1, label=propertyInfo, style=dashed];
m6_177 -> m6_182  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo", style=dashed];
m6_177 -> m6_185  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m6_177 -> m6_187  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m6_177 -> m6_189  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m6_177 -> m6_191  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m6_177 -> m6_192  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m6_177 -> m6_193  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m6_177 -> m6_196  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m6_179 -> m6_182  [color=darkseagreen4, key=1, label=property, style=dashed];
m6_179 -> m6_187  [color=darkseagreen4, key=1, label=property, style=dashed];
m6_179 -> m6_189  [color=darkseagreen4, key=1, label=property, style=dashed];
m6_179 -> m6_191  [color=darkseagreen4, key=1, label=property, style=dashed];
m6_179 -> m6_192  [color=darkseagreen4, key=1, label=property, style=dashed];
m6_179 -> m6_193  [color=darkseagreen4, key=1, label=property, style=dashed];
m6_179 -> m6_196  [color=darkseagreen4, key=1, label=property, style=dashed];
m6_179 -> m6_198  [color=darkseagreen4, key=1, label=property, style=dashed];
m6_187 -> m6_191  [color=green, key=1, label=object, style=dashed];
m6_187 -> m6_192  [color=green, key=1, label=string, style=dashed];
m6_188 -> m6_192  [color=green, key=1, label=dictionary, style=dashed];
m6_190 -> m6_192  [color=green, key=1, label=dictionary, style=dashed];
m6_37 -> m6_39  [color=darkseagreen4, key=1, label=key, style=dashed];
m6_40 -> m6_46  [color=darkseagreen4, key=1, label=contract, style=dashed];
m6_43 -> m6_45  [color=darkseagreen4, key=1, label=updatedCache, style=dashed];
m6_349 -> m6_351  [color=darkseagreen4, key=1, label=contract, style=dashed];
m6_135 -> m6_218  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m6_135 -> m6_221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m6_300 -> m6_303  [color=darkseagreen4, key=1, label=contract, style=dashed];
m6_566 -> m6_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ResolverContractKey", style=dashed];
m6_566 -> m6_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ResolverContractKey", style=dashed];
m6_566 -> m6_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ResolverContractKey", style=dashed];
m6_567 -> m6_12  [color=darkseagreen4, key=1, label="ref Newtonsoft.Json.Serialization.ResolverContractKey", style=dashed];
m6_568 -> m6_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_568 -> m6_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_568 -> m6_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_568 -> m6_45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_568 -> m6_64  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_568 -> m6_112  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_568 -> m6_116  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_568 -> m6_123  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_568 -> m6_131  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_568 -> m6_182  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_568 -> m6_221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_568 -> m6_234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_568 -> m6_253  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_568 -> m6_301  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_568 -> m6_308  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_568 -> m6_314  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_568 -> m6_320  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_568 -> m6_326  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_568 -> m6_342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_568 -> m6_344  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_568 -> m6_350  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_568 -> m6_356  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_568 -> m6_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_568 -> m6_360  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_568 -> m6_362  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_568 -> m6_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_568 -> m6_366  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_568 -> m6_368  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_568 -> m6_370  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_568 -> m6_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_568 -> m6_372  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_568 -> m6_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_568 -> m6_375  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_568 -> m6_443  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_568 -> m6_455  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_568 -> m6_462  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_568 -> m6_519  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_568 -> m6_563  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_568 -> m6_145  [color=green, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m6_569 -> m6_337  [color=darkseagreen4, key=1, label=methodCall, style=dashed];
m6_570 -> m6_540  [color=darkseagreen4, key=1, label=shouldSerializeCall, style=dashed];
m6_571 -> m6_557  [color=darkseagreen4, key=1, label=specifiedPropertyGet, style=dashed];
m6_614 -> m6_191  [color=green, key=1, label=setExtensionDataDictionary, style=dashed];
m6_615 -> m6_192  [color=green, key=1, label=setExtensionDataDictionaryValue, style=dashed];
m7_1 -> m7_3  [color=darkseagreen4, key=1, label=assemblyName, style=dashed];
m7_1 -> m7_9  [color=green, key=1, label=assemblyName, style=dashed];
m7_2 -> m7_8  [color=darkseagreen4, key=1, label=typeName, style=dashed];
m7_2 -> m7_12  [color=darkseagreen4, key=1, label=typeName, style=dashed];
m7_5 -> m7_8  [color=darkseagreen4, key=1, label=assembly, style=dashed];
m7_8 -> m7_11  [color=darkseagreen4, key=1, label=type, style=dashed];
m7_10 -> m7_8  [color=green, key=1, label=assembly, style=dashed];
m7_28 -> m7_31  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_31 -> m7_46  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", style=dashed];
m7_41 -> m7_43  [color=darkseagreen4, key=1, label="out string", style=dashed];
m7_21 -> m7_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", style=dashed];
m7_22 -> m7_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", style=dashed];
m7_45 -> m7_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", style=dashed];
m7_45 -> m7_31  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", style=dashed];
m7_45 -> m7_34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", style=dashed];
m7_46 -> m7_32  [color=darkseagreen4, key=1, label="ref Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", style=dashed];
m7_47 -> m7_37  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultSerializationBinder", style=dashed];
m8_56 -> m8_61  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_58 -> m8_60  [color=darkseagreen4, key=1, label=ms, style=dashed];
m8_475 -> m8_478  [color=darkseagreen4, key=1, label=name, style=dashed];
m8_476 -> m8_479  [color=darkseagreen4, key=1, label=productPrice, style=dashed];
m8_477 -> m8_480  [color=darkseagreen4, key=1, label=productName, style=dashed];
m8_481 -> m8_494  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_481 -> m8_484  [color=darkseagreen4, key=1, label=storeNames, style=dashed];
m8_481 -> m8_485  [color=darkseagreen4, key=1, label=storeNames, style=dashed];
m8_481 -> m8_486  [color=darkseagreen4, key=1, label=storeNames, style=dashed];
m8_482 -> m8_487  [color=darkseagreen4, key=1, label=firstProductNames, style=dashed];
m8_482 -> m8_488  [color=darkseagreen4, key=1, label=firstProductNames, style=dashed];
m8_482 -> m8_489  [color=darkseagreen4, key=1, label=firstProductNames, style=dashed];
m8_482 -> m8_497  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_483 -> m8_490  [color=darkseagreen4, key=1, label=totalPrice, style=dashed];
m8_483 -> m8_500  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_3 -> m8_5  [color=darkseagreen4, key=1, label=tokens, style=dashed];
m8_3 -> m8_6  [color=darkseagreen4, key=1, label=tokens, style=dashed];
m8_3 -> m8_7  [color=darkseagreen4, key=1, label=tokens, style=dashed];
m8_82 -> m8_84  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_82 -> m8_85  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_84 -> m8_86  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_84 -> m8_87  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_36 -> m8_38  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_140 -> m8_144  [color=darkseagreen4, key=1, label=a, style=dashed];
m8_141 -> m8_143  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_219 -> m8_221  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_219 -> m8_222  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_364 -> m8_366  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_364 -> m8_367  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_92 -> m8_94  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_92 -> m8_95  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_298 -> m8_300  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_298 -> m8_303  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_298 -> m8_305  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_298 -> m8_301  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_298 -> m8_302  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_298 -> m8_304  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_297 -> m8_301  [color=darkseagreen4, key=1, label=a, style=dashed];
m8_295 -> m8_302  [color=darkseagreen4, key=1, label=o1, style=dashed];
m8_296 -> m8_304  [color=darkseagreen4, key=1, label=o2, style=dashed];
m8_185 -> m8_194  [color=darkseagreen4, key=1, label=a, style=dashed];
m8_185 -> m8_187  [color=darkseagreen4, key=1, label=a, style=dashed];
m8_185 -> m8_197  [color=darkseagreen4, key=1, label=a, style=dashed];
m8_185 -> m8_188  [color=darkseagreen4, key=1, label=a, style=dashed];
m8_185 -> m8_200  [color=darkseagreen4, key=1, label=a, style=dashed];
m8_186 -> m8_193  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_187 -> m8_196  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_188 -> m8_199  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_190 -> m8_202  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_189 -> m8_203  [color=darkseagreen4, key=1, label=a, style=dashed];
m8_28 -> m8_31  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_420 -> m8_422  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_420 -> m8_423  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_420 -> m8_424  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_211 -> m8_215  [color=darkseagreen4, key=1, label=a, style=dashed];
m8_212 -> m8_214  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_287 -> m8_289  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_287 -> m8_290  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_287 -> m8_291  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_16 -> m8_18  [color=darkseagreen4, key=1, label=results, style=dashed];
m8_72 -> m8_75  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_72 -> m8_77  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_73 -> m8_75  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_73 -> m8_76  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_73 -> m8_77  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_436 -> m8_436  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_437 -> m8_437  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_438 -> m8_438  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_439 -> m8_439  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_440 -> m8_440  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_441 -> m8_441  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_434 -> m8_436  [color=darkseagreen4, key=1, label=tokens, style=dashed];
m8_434 -> m8_437  [color=darkseagreen4, key=1, label=tokens, style=dashed];
m8_434 -> m8_438  [color=darkseagreen4, key=1, label=tokens, style=dashed];
m8_434 -> m8_439  [color=darkseagreen4, key=1, label=tokens, style=dashed];
m8_434 -> m8_440  [color=darkseagreen4, key=1, label=tokens, style=dashed];
m8_434 -> m8_441  [color=darkseagreen4, key=1, label=tokens, style=dashed];
m8_434 -> m8_442  [color=darkseagreen4, key=1, label=tokens, style=dashed];
m8_99 -> m8_104  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_100 -> m8_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_178 -> m8_182  [color=darkseagreen4, key=1, label=a, style=dashed];
m8_179 -> m8_181  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_378 -> m8_380  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_378 -> m8_381  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_378 -> m8_382  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_53 -> m8_55  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_274 -> m8_276  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_274 -> m8_277  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_274 -> m8_278  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_274 -> m8_279  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_65 -> m8_67  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_65 -> m8_68  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_371 -> m8_373  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_371 -> m8_374  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_264 -> m8_266  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_264 -> m8_267  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_264 -> m8_268  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_264 -> m8_269  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_264 -> m8_270  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_400 -> m8_402  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_400 -> m8_403  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_400 -> m8_404  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_392 -> m8_394  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_392 -> m8_395  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_392 -> m8_396  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_328 -> m8_330  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_328 -> m8_333  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_328 -> m8_335  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_328 -> m8_339  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_328 -> m8_331  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_328 -> m8_332  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_328 -> m8_334  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_328 -> m8_336  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_328 -> m8_337  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_328 -> m8_338  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_327 -> m8_331  [color=darkseagreen4, key=1, label=a, style=dashed];
m8_324 -> m8_332  [color=darkseagreen4, key=1, label=o1, style=dashed];
m8_325 -> m8_334  [color=darkseagreen4, key=1, label=o2, style=dashed];
m8_326 -> m8_336  [color=darkseagreen4, key=1, label=o3, style=dashed];
m8_107 -> m8_111  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_108 -> m8_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_357 -> m8_359  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_357 -> m8_360  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_109 -> m8_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser", style=dashed];
m8_114 -> m8_118  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_115 -> m8_117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_227 -> m8_229  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_227 -> m8_230  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_227 -> m8_231  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_232 -> m8_234  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_235 -> m8_237  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_240 -> m8_242  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_243 -> m8_245  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_243 -> m8_246  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_243 -> m8_247  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_243 -> m8_248  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_243 -> m8_249  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_243 -> m8_250  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_243 -> m8_251  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_243 -> m8_252  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_243 -> m8_253  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_254 -> m8_256  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_254 -> m8_257  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_254 -> m8_258  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_254 -> m8_259  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_254 -> m8_260  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_446 -> m8_470  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_133 -> m8_137  [color=darkseagreen4, key=1, label=a, style=dashed];
m8_134 -> m8_136  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_343 -> m8_345  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_346 -> m8_348  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_147 -> m8_152  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_148 -> m8_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_386 -> m8_388  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_126 -> m8_130  [color=darkseagreen4, key=1, label=a, style=dashed];
m8_127 -> m8_129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_159 -> m8_163  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_160 -> m8_162  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_48 -> m8_50  [color=green, key=1, label=o, style=dashed];
m8_314 -> m8_316  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_314 -> m8_317  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_314 -> m8_318  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_314 -> m8_319  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_314 -> m8_320  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_410 -> m8_412  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_410 -> m8_413  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_410 -> m8_414  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_410 -> m8_415  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_410 -> m8_416  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_111 -> m8_105  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializePopulate", style=dashed];
m8_111 -> m8_106  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializePopulate", style=dashed];
m8_171 -> m8_175  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_172 -> m8_174  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_520 -> m8_130  [color=darkseagreen4, key=1, label=a, style=dashed];
m8_517 -> m8_104  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_518 -> m8_111  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_519 -> m8_118  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_524 -> m8_163  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_525 -> m8_175  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_521 -> m8_137  [color=darkseagreen4, key=1, label=a, style=dashed];
m8_522 -> m8_144  [color=darkseagreen4, key=1, label=a, style=dashed];
m8_523 -> m8_152  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_526 -> m8_182  [color=darkseagreen4, key=1, label=a, style=dashed];
m8_527 -> m8_194  [color=darkseagreen4, key=1, label=a, style=dashed];
m8_527 -> m8_197  [color=darkseagreen4, key=1, label=a, style=dashed];
m8_527 -> m8_200  [color=darkseagreen4, key=1, label=a, style=dashed];
m8_527 -> m8_203  [color=darkseagreen4, key=1, label=a, style=dashed];
m8_528 -> m8_215  [color=darkseagreen4, key=1, label=a, style=dashed];
m9_64 -> m9_67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_93 -> m9_98  [color=darkseagreen4, key=1, label="System.Dynamic.ConvertBinder", style=dashed];
m9_96 -> m9_99  [color=darkseagreen4, key=1, label="out object", style=dashed];
m9_43 -> m9_47  [color=darkseagreen4, key=1, label=json, style=dashed];
m9_48 -> m9_50  [color=darkseagreen4, key=1, label=n, style=dashed];
m9_48 -> m9_51  [color=darkseagreen4, key=1, label=n, style=dashed];
m9_48 -> m9_52  [color=darkseagreen4, key=1, label=n, style=dashed];
m9_48 -> m9_53  [color=darkseagreen4, key=1, label=n, style=dashed];
m9_48 -> m9_54  [color=darkseagreen4, key=1, label=n, style=dashed];
m9_45 -> m9_47  [color=darkseagreen4, key=1, label=dynamicChildObjectTypeName, style=dashed];
m9_1 -> m9_10  [color=darkseagreen4, key=1, label=dynamicObject, style=dashed];
m9_1 -> m9_12  [color=darkseagreen4, key=1, label=dynamicObject, style=dashed];
m9_1 -> m9_24  [color=darkseagreen4, key=1, label=dynamicObject, style=dashed];
m9_1 -> m9_25  [color=darkseagreen4, key=1, label=dynamicObject, style=dashed];
m9_3 -> m9_14  [color=darkseagreen4, key=1, label=d, style=dashed];
m9_3 -> m9_15  [color=darkseagreen4, key=1, label=d, style=dashed];
m9_3 -> m9_16  [color=darkseagreen4, key=1, label=d, style=dashed];
m9_9 -> m9_12  [color=darkseagreen4, key=1, label=dynamicContract, style=dashed];
m9_10 -> m9_12  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m9_10 -> m9_13  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m9_7 -> m9_13  [color=darkseagreen4, key=1, label=values, style=dashed];
m9_7 -> m9_14  [color=darkseagreen4, key=1, label=values, style=dashed];
m9_7 -> m9_15  [color=darkseagreen4, key=1, label=values, style=dashed];
m9_7 -> m9_16  [color=darkseagreen4, key=1, label=values, style=dashed];
m9_21 -> m9_23  [color=darkseagreen4, key=1, label=d, style=dashed];
m9_21 -> m9_24  [color=darkseagreen4, key=1, label=d, style=dashed];
m9_21 -> m9_25  [color=darkseagreen4, key=1, label=d, style=dashed];
m9_68 -> m9_71  [color=darkseagreen4, key=1, label=settings, style=dashed];
m9_118 -> m9_90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TestDynamicObject", style=dashed];
m9_118 -> m9_98  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TestDynamicObject", style=dashed];
m9_118 -> m9_103  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TestDynamicObject", style=dashed];
m9_118 -> m9_107  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TestDynamicObject", style=dashed];
m10_24 -> m10_551  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_24 -> m10_552  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_24 -> m10_553  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_24 -> m10_554  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_352 -> m10_398  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_352 -> m10_400  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_352 -> m10_402  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_352 -> m10_403  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_352 -> m10_404  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m10_394 -> m10_399  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m10_395 -> m10_401  [color=darkseagreen4, key=1, label=includeTypeDetails, style=dashed];
m10_396 -> m10_406  [color=darkseagreen4, key=1, label=writeMetadataObject, style=dashed];
m10_125 -> m10_127  [color=darkseagreen4, key=1, label=setMethod, style=dashed];
m10_20 -> m10_111  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_20 -> m10_113  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_20 -> m10_115  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_113 -> m10_118  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m10_116 -> m10_119  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m10_42 -> m10_47  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_42 -> m10_44  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_42 -> m10_45  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_42 -> m10_57  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_42 -> m10_52  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_42 -> m10_61  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_48 -> m10_48  [color=darkseagreen4, key=1, label=expression, style=dashed];
m10_46 -> m10_48  [color=darkseagreen4, key=1, label=resultType, style=dashed];
m10_49 -> m10_479  [color=darkseagreen4, key=1, label="Newtonsoft.Json.TypeNameHandling", style=dashed];
m10_49 -> m10_482  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_49 -> m10_483  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_49 -> m10_485  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m10_49 -> m10_486  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_49 -> m10_489  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_51 -> m10_303  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_51 -> m10_304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_51 -> m10_305  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_87 -> m10_220  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_87 -> m10_221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_87 -> m10_224  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m10_87 -> m10_228  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_87 -> m10_229  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_87 -> m10_230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_87 -> m10_232  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_87 -> m10_233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_87 -> m10_236  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m10_87 -> m10_244  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m10_87 -> m10_245  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_87 -> m10_246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_87 -> m10_247  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_87 -> m10_248  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_87 -> m10_249  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_87 -> m10_250  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_87 -> m10_252  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_222 -> m10_233  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m10_225 -> m10_228  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_225 -> m10_229  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_225 -> m10_230  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_225 -> m10_232  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_228 -> m10_230  [color=darkseagreen4, key=1, label=memberValue, style=dashed];
m10_237 -> m10_239  [color=darkseagreen4, key=1, label=extensionData, style=dashed];
m10_243 -> m10_245  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m10_243 -> m10_248  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m10_244 -> m10_244  [color=darkseagreen4, key=1, label=e, style=dashed];
m10_244 -> m10_246  [color=darkseagreen4, key=1, label=e, style=dashed];
m10_246 -> m10_246  [color=darkseagreen4, key=1, label=e, style=dashed];
m10_247 -> m10_247  [color=darkseagreen4, key=1, label=e, style=dashed];
m10_247 -> m10_249  [color=darkseagreen4, key=1, label=e, style=dashed];
m10_249 -> m10_249  [color=darkseagreen4, key=1, label=e, style=dashed];
m10_223 -> m10_235  [color=darkseagreen4, key=1, label=index, style=dashed];
m10_235 -> m10_235  [color=darkseagreen4, key=1, label=index, style=dashed];
m10_241 -> m10_244  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m10_241 -> m10_247  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m10_241 -> m10_249  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m10_63 -> m10_72  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m10_63 -> m10_69  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m10_63 -> m10_71  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m10_63 -> m10_73  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m10_74 -> m10_74  [color=darkseagreen4, key=1, label=resultExpression, style=dashed];
m10_67 -> m10_72  [color=darkseagreen4, key=1, label=parameterExpression, style=dashed];
m10_66 -> m10_74  [color=darkseagreen4, key=1, label=resultType, style=dashed];
m10_66 -> m10_68  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m10_66 -> m10_69  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m10_65 -> m10_67  [color=darkseagreen4, key=1, label=instanceType, style=dashed];
m10_418 -> m10_422  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m10_418 -> m10_424  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m10_94 -> m10_411  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_94 -> m10_412  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_94 -> m10_413  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.ISerializable", style=dashed];
m10_94 -> m10_414  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_94 -> m10_416  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.ISerializable", style=dashed];
m10_94 -> m10_419  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonISerializableContract", style=dashed];
m10_94 -> m10_420  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_94 -> m10_421  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_94 -> m10_422  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_94 -> m10_423  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_94 -> m10_424  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_94 -> m10_425  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_94 -> m10_427  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_415 -> m10_417  [color=darkseagreen4, key=1, label=serializationInfo, style=dashed];
m10_419 -> m10_419  [color=darkseagreen4, key=1, label=serializationEntry, style=dashed];
m10_420 -> m10_420  [color=darkseagreen4, key=1, label=serializationEntry, style=dashed];
m10_421 -> m10_421  [color=darkseagreen4, key=1, label=serializationEntry, style=dashed];
m10_422 -> m10_422  [color=darkseagreen4, key=1, label=serializationEntry, style=dashed];
m10_423 -> m10_423  [color=darkseagreen4, key=1, label=serializationEntry, style=dashed];
m10_424 -> m10_424  [color=darkseagreen4, key=1, label=serializationEntry, style=dashed];
m10_301 -> m10_303  [color=darkseagreen4, key=1, label=typeName, style=dashed];
m10_301 -> m10_305  [color=darkseagreen4, key=1, label=typeName, style=dashed];
m10_207 -> m10_210  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_207 -> m10_211  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_96 -> m10_105  [color=darkseagreen4, key=1, label="System.Reflection.FieldInfo", style=dashed];
m10_96 -> m10_99  [color=darkseagreen4, key=1, label="System.Reflection.FieldInfo", style=dashed];
m10_96 -> m10_103  [color=darkseagreen4, key=1, label="System.Reflection.FieldInfo", style=dashed];
m10_100 -> m10_105  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m10_100 -> m10_103  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m10_100 -> m10_107  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m10_101 -> m10_107  [color=darkseagreen4, key=1, label=valueParameterExpression, style=dashed];
m10_106 -> m10_108  [color=darkseagreen4, key=1, label=fieldExpression, style=dashed];
m10_104 -> m10_108  [color=darkseagreen4, key=1, label=fieldExpression, style=dashed];
m10_98 -> m10_101  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m10_98 -> m10_103  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m10_98 -> m10_105  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m10_98 -> m10_107  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m10_102 -> m10_105  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m10_102 -> m10_107  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m10_97 -> m10_99  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_97 -> m10_101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_97 -> m10_103  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m10_177 -> m10_183  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_93 -> m10_433  [color=darkseagreen4, key=1, label="System.Dynamic.IDynamicMetaObjectProvider", style=dashed];
m10_93 -> m10_434  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_93 -> m10_437  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDynamicContract", style=dashed];
m10_93 -> m10_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_93 -> m10_443  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_93 -> m10_444  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_93 -> m10_446  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_93 -> m10_447  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_93 -> m10_450  [color=darkseagreen4, key=1, label="System.Dynamic.IDynamicMetaObjectProvider", style=dashed];
m10_93 -> m10_452  [color=darkseagreen4, key=1, label="System.Dynamic.IDynamicMetaObjectProvider", style=dashed];
m10_93 -> m10_455  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_93 -> m10_457  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_93 -> m10_458  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_93 -> m10_460  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_93 -> m10_461  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_93 -> m10_463  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_93 -> m10_465  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_294 -> m10_297  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_294 -> m10_298  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_294 -> m10_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_295 -> m10_297  [color=darkseagreen4, key=1, label=reference, style=dashed];
m10_295 -> m10_299  [color=darkseagreen4, key=1, label=reference, style=dashed];
m10_35 -> m10_140  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression", style=dashed];
m10_139 -> m10_142  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
m10_139 -> m10_144  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
m10_139 -> m10_151  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
m10_141 -> m10_151  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
m10_89 -> m10_356  [color=darkseagreen4, key=1, label="System.Array", style=dashed];
m10_89 -> m10_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_89 -> m10_360  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_89 -> m10_362  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_357 -> m10_359  [color=darkseagreen4, key=1, label=hasWrittenMetadataObject, style=dashed];
m10_435 -> m10_447  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m10_435 -> m10_461  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m10_438 -> m10_442  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_438 -> m10_443  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_438 -> m10_444  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_438 -> m10_446  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_442 -> m10_444  [color=darkseagreen4, key=1, label=memberValue, style=dashed];
m10_450 -> m10_452  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m10_450 -> m10_460  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m10_452 -> m10_454  [color=darkseagreen4, key=1, label=memberValue, style=dashed];
m10_452 -> m10_455  [color=darkseagreen4, key=1, label=memberValue, style=dashed];
m10_452 -> m10_458  [color=darkseagreen4, key=1, label=memberValue, style=dashed];
m10_436 -> m10_449  [color=darkseagreen4, key=1, label=index, style=dashed];
m10_449 -> m10_449  [color=darkseagreen4, key=1, label=index, style=dashed];
m10_453 -> m10_455  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m10_453 -> m10_458  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m10_86 -> m10_316  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_86 -> m10_317  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_86 -> m10_319  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_86 -> m10_321  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_86 -> m10_322  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_86 -> m10_324  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_37 -> m10_41  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_37 -> m10_42  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_37 -> m10_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_37 -> m10_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_37 -> m10_45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_37 -> m10_47  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_256 -> m10_263  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_256 -> m10_267  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_256 -> m10_268  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m10_256 -> m10_269  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_256 -> m10_270  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_256 -> m10_272  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_256 -> m10_278  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_265 -> m10_267  [color=darkseagreen4, key=1, label="out object", style=dashed];
m10_265 -> m10_268  [color=darkseagreen4, key=1, label="out object", style=dashed];
m10_265 -> m10_270  [color=darkseagreen4, key=1, label="out object", style=dashed];
m10_265 -> m10_272  [color=darkseagreen4, key=1, label="out object", style=dashed];
m10_265 -> m10_274  [color=darkseagreen4, key=1, label="out object", style=dashed];
m10_266 -> m10_268  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_266 -> m10_272  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_280 -> m10_283  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_281 -> m10_283  [color=darkseagreen4, key=1, label="out object", style=dashed];
m10_208 -> m10_215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_208 -> m10_216  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_285 -> m10_570  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_568 -> m10_570  [color=darkseagreen4, key=1, label=isSpecified, style=dashed];
m10_568 -> m10_571  [color=darkseagreen4, key=1, label=isSpecified, style=dashed];
m10_22 -> m10_56  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_22 -> m10_58  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_22 -> m10_60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_22 -> m10_62  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_22 -> m10_64  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_22 -> m10_68  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_22 -> m10_69  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_22 -> m10_71  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_22 -> m10_73  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_22 -> m10_76  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_22 -> m10_78  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_22 -> m10_80  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_22 -> m10_82  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_58 -> m10_60  [color=darkseagreen4, key=1, label=converter, style=dashed];
m10_81 -> m10_85  [color=darkseagreen4, key=1, label="System.Reflection.FieldInfo", style=dashed];
m10_83 -> m10_90  [color=darkseagreen4, key=1, label=sourceParameter, style=dashed];
m10_469 -> m10_473  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_364 -> m10_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_364 -> m10_373  [color=darkseagreen4, key=1, label="System.Array", style=dashed];
m10_364 -> m10_379  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m10_364 -> m10_380  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_364 -> m10_381  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_364 -> m10_382  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_364 -> m10_384  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_364 -> m10_385  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_364 -> m10_387  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_364 -> m10_389  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_365 -> m10_368  [color=darkseagreen4, key=1, label=dimension, style=dashed];
m10_365 -> m10_373  [color=darkseagreen4, key=1, label=dimension, style=dashed];
m10_377 -> m10_379  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_377 -> m10_380  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_377 -> m10_381  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_377 -> m10_382  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_378 -> m10_381  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m10_378 -> m10_382  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m10_366 -> m10_387  [color=darkseagreen4, key=1, label=newIndices, style=dashed];
m10_367 -> m10_370  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_370 -> m10_370  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_372 -> m10_384  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_372 -> m10_388  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_388 -> m10_388  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_478 -> m10_481  [color=darkseagreen4, key=1, label=resolvedTypeNameHandling, style=dashed];
m10_88 -> m10_330  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_88 -> m10_333  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_88 -> m10_336  [color=darkseagreen4, key=1, label="System.Collections.IEnumerable", style=dashed];
m10_88 -> m10_338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m10_88 -> m10_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_88 -> m10_340  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_88 -> m10_341  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_88 -> m10_343  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_88 -> m10_344  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_88 -> m10_346  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_88 -> m10_348  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_88 -> m10_350  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_329 -> m10_331  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m10_329 -> m10_343  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m10_329 -> m10_350  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m10_332 -> m10_347  [color=darkseagreen4, key=1, label=hasWrittenMetadataObject, style=dashed];
m10_334 -> m10_344  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m10_336 -> m10_338  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_336 -> m10_339  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_336 -> m10_340  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_336 -> m10_341  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_337 -> m10_340  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m10_337 -> m10_341  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m10_335 -> m10_343  [color=darkseagreen4, key=1, label=index, style=dashed];
m10_19 -> m10_34  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_259 -> m10_524  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_259 -> m10_529  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_259 -> m10_534  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_259 -> m10_537  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_259 -> m10_538  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_259 -> m10_542  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_525 -> m10_531  [color=darkseagreen4, key=1, label=primitiveContract, style=dashed];
m10_538 -> m10_540  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m10_527 -> m10_543  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m10_528 -> m10_530  [color=darkseagreen4, key=1, label=sw, style=dashed];
m10_532 -> m10_543  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m10_536 -> m10_543  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m10_533 -> m10_535  [color=darkseagreen4, key=1, label=sw, style=dashed];
m10_539 -> m10_543  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m10_541 -> m10_543  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m10_186 -> m10_192  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_187 -> m10_189  [color=darkseagreen4, key=1, label=converter, style=dashed];
m10_195 -> m10_197  [color=darkseagreen4, key=1, label="out string", style=dashed];
m10_21 -> m10_171  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_21 -> m10_172  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_21 -> m10_173  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_21 -> m10_174  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_21 -> m10_175  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_169 -> m10_171  [color=darkseagreen4, key=1, label=reference, style=dashed];
m10_169 -> m10_174  [color=darkseagreen4, key=1, label=reference, style=dashed];
m10_255 -> m10_289  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_255 -> m10_290  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_255 -> m10_291  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_255 -> m10_292  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_0 -> m10_15  [color=darkseagreen4, key=1, label="System.Reflection.MethodBase", style=dashed];
m10_0 -> m10_16  [color=darkseagreen4, key=1, label="System.Reflection.MethodBase", style=dashed];
m10_0 -> m10_17  [color=darkseagreen4, key=1, label="System.Reflection.MethodBase", style=dashed];
m10_0 -> m10_18  [color=darkseagreen4, key=1, label="System.Reflection.MethodBase", style=dashed];
m10_0 -> m10_21  [color=darkseagreen4, key=1, label="System.Reflection.MethodBase", style=dashed];
m10_92 -> m10_495  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_92 -> m10_497  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_92 -> m10_498  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m10_92 -> m10_500  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m10_92 -> m10_503  [color=darkseagreen4, key=1, label="System.Collections.IDictionary", style=dashed];
m10_92 -> m10_509  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m10_92 -> m10_510  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_92 -> m10_511  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_92 -> m10_512  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_92 -> m10_513  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_92 -> m10_514  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_92 -> m10_516  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_92 -> m10_517  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_92 -> m10_519  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_92 -> m10_521  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_494 -> m10_496  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m10_494 -> m10_497  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m10_494 -> m10_516  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m10_494 -> m10_521  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m10_502 -> m10_517  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m10_505 -> m10_510  [color=darkseagreen4, key=1, label=escape, style=dashed];
m10_505 -> m10_513  [color=darkseagreen4, key=1, label=escape, style=dashed];
m10_506 -> m10_510  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m10_506 -> m10_513  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m10_506 -> m10_516  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m10_508 -> m10_512  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m10_508 -> m10_514  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m10_507 -> m10_509  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_507 -> m10_511  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_507 -> m10_512  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_507 -> m10_514  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_143 -> m10_151  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
m10_136 -> m10_140  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_136 -> m10_142  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_136 -> m10_144  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m10_136 -> m10_145  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m10_136 -> m10_146  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_136 -> m10_148  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_136 -> m10_153  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_136 -> m10_156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_136 -> m10_160  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_2 -> m10_8  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_2 -> m10_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_2 -> m10_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_2 -> m10_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_2 -> m10_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_5 -> m10_8  [color=darkseagreen4, key=1, label=parametersInfo, style=dashed];
m10_5 -> m10_11  [color=darkseagreen4, key=1, label=parametersInfo, style=dashed];
m10_11 -> m10_11  [color=darkseagreen4, key=1, label=paramAccessorExpression, style=dashed];
m10_6 -> m10_16  [color=darkseagreen4, key=1, label=argsExpression, style=dashed];
m10_6 -> m10_18  [color=darkseagreen4, key=1, label=argsExpression, style=dashed];
m10_6 -> m10_12  [color=darkseagreen4, key=1, label=argsExpression, style=dashed];
m10_4 -> m10_10  [color=darkseagreen4, key=1, label=argsParameterExpression, style=dashed];
m10_7 -> m10_11  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_7 -> m10_9  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_7 -> m10_12  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_7 -> m10_13  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_7 -> m10_10  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_13 -> m10_13  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_284 -> m10_561  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_559 -> m10_561  [color=darkseagreen4, key=1, label=shouldSerialize, style=dashed];
m10_559 -> m10_562  [color=darkseagreen4, key=1, label=shouldSerialize, style=dashed];
m10_145 -> m10_151  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
m10_145 -> m10_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory", style=dashed];
m10_145 -> m10_48  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory", style=dashed];
m10_145 -> m10_72  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory", style=dashed];
m10_145 -> m10_74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory", style=dashed];
m10_145 -> m10_105  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory", style=dashed];
m10_145 -> m10_107  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory", style=dashed];
m10_146 -> m10_57  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_146 -> m10_61  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_150 -> m10_153  [color=darkseagreen4, key=1, label=message, style=dashed];
m10_150 -> m10_156  [color=darkseagreen4, key=1, label=message, style=dashed];
m10_150 -> m10_160  [color=darkseagreen4, key=1, label=message, style=dashed];
m10_90 -> m10_203  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_90 -> m10_204  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_90 -> m10_205  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_573 -> m10_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_28  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_42  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_58  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_64  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_68  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_69  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_71  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_73  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_76  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_78  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_80  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_82  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_113  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_116  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_117  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_126  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_146  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_151  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_155  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_159  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_160  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_170  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_171  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_201  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_205  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_209  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_210  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_211  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_214  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_216  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_220  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_228  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_232  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_244  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_247  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_249  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_251  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_252  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_262  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_267  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_268  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_270  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_272  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_290  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_291  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_292  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_296  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_297  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_302  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_303  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_315  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_316  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_317  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_319  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_320  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_321  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_322  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_323  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_324  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_325  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_330  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_331  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_340  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_341  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_343  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_344  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_349  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_350  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_356  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_361  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_362  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_379  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_380  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_381  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_382  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_384  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_385  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_387  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_400  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_402  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_412  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_413  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_414  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_416  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_419  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_421  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_422  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_424  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_426  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_427  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_432  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_433  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_434  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_444  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_446  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_447  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_454  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_455  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_458  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_460  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_461  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_464  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_465  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_471  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_473  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_478  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_479  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_481  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_488  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_489  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_495  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_496  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_497  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_509  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_511  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_512  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_514  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_516  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_517  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_520  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_521  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_550  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_560  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_561  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_569  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_573 -> m10_570  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m11_57 -> m11_61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_57 -> m11_63  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_59 -> m11_61  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_59 -> m11_62  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_62 -> m11_62  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_37 -> m11_39  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_37 -> m11_40  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_38 -> m11_41  [color=darkseagreen4, key=1, label=a, style=dashed];
m11_50 -> m11_52  [color=darkseagreen4, key=1, label=token, style=dashed];
m11_50 -> m11_53  [color=darkseagreen4, key=1, label=token, style=dashed];
m11_18 -> m11_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_18 -> m11_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_18 -> m11_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_18 -> m11_23  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_18 -> m11_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_18 -> m11_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_18 -> m11_27  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_18 -> m11_28  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_26 -> m11_28  [color=darkseagreen4, key=1, label=a, style=dashed];
m11_26 -> m11_29  [color=darkseagreen4, key=1, label=a, style=dashed];
m11_103 -> m11_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JArray", style=dashed];
m11_103 -> m11_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JArray", style=dashed];
m11_103 -> m11_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JArray", style=dashed];
m11_103 -> m11_60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JArray", style=dashed];
m11_103 -> m11_61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JArray", style=dashed];
m11_103 -> m11_69  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JArray", style=dashed];
m11_103 -> m11_73  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JArray", style=dashed];
m11_103 -> m11_77  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JArray", style=dashed];
m11_103 -> m11_81  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JArray", style=dashed];
m11_103 -> m11_84  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JArray", style=dashed];
m11_103 -> m11_88  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JArray", style=dashed];
m11_103 -> m11_92  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JArray", style=dashed];
m11_103 -> m11_96  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JArray", style=dashed];
m11_103 -> m11_100  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JArray", style=dashed];
m13_14 -> m13_16  [color=green, key=1, label=jsonTextReader, style=dashed];
m13_14 -> m13_17  [color=green, key=1, label=jsonTextReader, style=dashed];
m13_136 -> m13_138  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_136 -> m13_139  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_136 -> m13_140  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_136 -> m13_142  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_136 -> m13_144  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_136 -> m13_148  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_140 -> m13_142  [color=darkseagreen4, key=1, label=expected, style=dashed];
m13_145 -> m13_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_945 -> m13_949  [color=darkseagreen4, key=1, label=jsonObject, style=dashed];
m13_943 -> m13_950  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_944 -> m13_949  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m13_946 -> m13_950  [color=darkseagreen4, key=1, label=sb, style=dashed];
m13_918 -> m13_942  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_918 -> m13_920  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_918 -> m13_921  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_918 -> m13_922  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_918 -> m13_923  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_918 -> m13_924  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_918 -> m13_925  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_918 -> m13_926  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_918 -> m13_927  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_918 -> m13_930  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_918 -> m13_932  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_918 -> m13_933  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_918 -> m13_934  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_918 -> m13_935  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_918 -> m13_936  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_918 -> m13_937  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_918 -> m13_938  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_918 -> m13_939  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_918 -> m13_940  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_918 -> m13_941  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_928 -> m13_930  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_928 -> m13_931  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_931 -> m13_931  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_1351 -> m13_1353  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1351 -> m13_1354  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1351 -> m13_1355  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1351 -> m13_1356  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1351 -> m13_1357  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1351 -> m13_1358  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1351 -> m13_1359  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1351 -> m13_1362  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1351 -> m13_1363  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1361 -> m13_1361  [color=darkseagreen4, key=1, label=dt, style=dashed];
m13_882 -> m13_884  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_882 -> m13_885  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_886 -> m13_888  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_886 -> m13_889  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_890 -> m13_892  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_890 -> m13_893  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_894 -> m13_896  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_894 -> m13_897  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_898 -> m13_910  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_900 -> m13_902  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_900 -> m13_903  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_906 -> m13_913  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_899 -> m13_909  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_907 -> m13_912  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1235 -> m13_1237  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1235 -> m13_1238  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1235 -> m13_1239  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1235 -> m13_1240  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1235 -> m13_1241  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1235 -> m13_1242  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1235 -> m13_1243  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1235 -> m13_1244  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1235 -> m13_1245  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1235 -> m13_1246  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_578 -> m13_580  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_578 -> m13_581  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1978 -> m13_1980  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1978 -> m13_1981  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1978 -> m13_1982  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1978 -> m13_1983  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1978 -> m13_1984  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1978 -> m13_1985  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1978 -> m13_1986  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1978 -> m13_1987  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1988 -> m13_1990  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1988 -> m13_1991  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1988 -> m13_1992  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1988 -> m13_1993  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1988 -> m13_1994  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1988 -> m13_1995  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1988 -> m13_1996  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1988 -> m13_1997  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1998 -> m13_2000  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1998 -> m13_2001  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1998 -> m13_2002  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1998 -> m13_2003  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1998 -> m13_2004  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1998 -> m13_2005  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1998 -> m13_2006  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1998 -> m13_2007  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2008 -> m13_2010  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2008 -> m13_2011  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2008 -> m13_2012  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2008 -> m13_2013  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2008 -> m13_2014  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2008 -> m13_2015  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2008 -> m13_2016  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2008 -> m13_2017  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2018 -> m13_2020  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2018 -> m13_2021  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2018 -> m13_2022  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2018 -> m13_2023  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2018 -> m13_2024  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2018 -> m13_2025  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2018 -> m13_2026  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2018 -> m13_2027  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_317 -> m13_321  [color=darkseagreen4, key=1, label=millisecondsLocal, style=dashed];
m13_317 -> m13_320  [color=darkseagreen4, key=1, label=millisecondsLocal, style=dashed];
m13_317 -> m13_324  [color=darkseagreen4, key=1, label=millisecondsLocal, style=dashed];
m13_317 -> m13_325  [color=darkseagreen4, key=1, label=millisecondsLocal, style=dashed];
m13_317 -> m13_326  [color=darkseagreen4, key=1, label=millisecondsLocal, style=dashed];
m13_317 -> m13_327  [color=darkseagreen4, key=1, label=millisecondsLocal, style=dashed];
m13_318 -> m13_320  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_318 -> m13_323  [color=darkseagreen4, key=1, label=localToUtcDate, style=dashed];
m13_319 -> m13_321  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_319 -> m13_322  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_319 -> m13_323  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_319 -> m13_324  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_319 -> m13_325  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_319 -> m13_326  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_319 -> m13_327  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_326 -> m13_331  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_332  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_333  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_334  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_335  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_336  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_337  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_338  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_341  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_342  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_343  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_344  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_345  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_346  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_347  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_348  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_352  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_353  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_354  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_355  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_356  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_357  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_358  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_359  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_363  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_364  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_365  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_366  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_367  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_368  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_369  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_370  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_372  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_373  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_330 -> m13_332  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_330 -> m13_333  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_330 -> m13_334  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_330 -> m13_335  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_330 -> m13_336  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_330 -> m13_337  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_330 -> m13_338  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_339 -> m13_342  [color=darkseagreen4, key=1, label=year2000Unspecified, style=dashed];
m13_339 -> m13_345  [color=darkseagreen4, key=1, label=year2000Unspecified, style=dashed];
m13_339 -> m13_346  [color=darkseagreen4, key=1, label=year2000Unspecified, style=dashed];
m13_339 -> m13_347  [color=darkseagreen4, key=1, label=year2000Unspecified, style=dashed];
m13_339 -> m13_348  [color=darkseagreen4, key=1, label=year2000Unspecified, style=dashed];
m13_349 -> m13_353  [color=darkseagreen4, key=1, label=year2000Utc, style=dashed];
m13_349 -> m13_357  [color=darkseagreen4, key=1, label=year2000Utc, style=dashed];
m13_349 -> m13_358  [color=darkseagreen4, key=1, label=year2000Utc, style=dashed];
m13_328 -> m13_331  [color=darkseagreen4, key=1, label=ticksLocal, style=dashed];
m13_328 -> m13_332  [color=darkseagreen4, key=1, label=ticksLocal, style=dashed];
m13_328 -> m13_335  [color=darkseagreen4, key=1, label=ticksLocal, style=dashed];
m13_328 -> m13_336  [color=darkseagreen4, key=1, label=ticksLocal, style=dashed];
m13_328 -> m13_337  [color=darkseagreen4, key=1, label=ticksLocal, style=dashed];
m13_328 -> m13_338  [color=darkseagreen4, key=1, label=ticksLocal, style=dashed];
m13_329 -> m13_334  [color=darkseagreen4, key=1, label=localToUtcDate, style=dashed];
m13_340 -> m13_342  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_340 -> m13_343  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_340 -> m13_344  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_340 -> m13_345  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_340 -> m13_346  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_340 -> m13_347  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_340 -> m13_348  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_350 -> m13_353  [color=darkseagreen4, key=1, label=utcTolocalDate, style=dashed];
m13_351 -> m13_353  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_351 -> m13_354  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_351 -> m13_355  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_351 -> m13_356  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_351 -> m13_357  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_351 -> m13_358  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_351 -> m13_359  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_360 -> m13_364  [color=darkseagreen4, key=1, label=unixEpoc, style=dashed];
m13_360 -> m13_368  [color=darkseagreen4, key=1, label=unixEpoc, style=dashed];
m13_360 -> m13_369  [color=darkseagreen4, key=1, label=unixEpoc, style=dashed];
m13_361 -> m13_364  [color=darkseagreen4, key=1, label=utcTolocalDate, style=dashed];
m13_362 -> m13_364  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_362 -> m13_365  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_362 -> m13_366  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_362 -> m13_367  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_362 -> m13_368  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_362 -> m13_369  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_362 -> m13_370  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_371 -> m13_373  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_371 -> m13_374  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_371 -> m13_375  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_371 -> m13_376  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_371 -> m13_377  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_371 -> m13_378  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_371 -> m13_379  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_378 -> m13_381  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_382  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_383  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_384  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_385  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_386  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_387  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_388  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_390  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_391  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_393  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_394  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_396  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_397  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_399  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_400  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_402  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_403  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_405  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_406  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_408  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_409  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_411  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_412  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_413  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_414  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_415  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_416  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_417  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_418  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_419  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_420  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_421  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_422  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_423  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_424  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_427  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_432  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_436  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_437  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_438  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_439  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_442  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_444  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_445  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_446  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_447  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_448  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_449  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_450  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_451  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_452  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_453  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_454  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_455  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_456  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_457  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_458  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_459  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_460  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_462  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_465  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_466  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_468  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_469  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_389 -> m13_391  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_392 -> m13_394  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_395 -> m13_397  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_401 -> m13_403  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_404 -> m13_406  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_410 -> m13_412  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_414 -> m13_427  [color=darkseagreen4, key=1, label=T, style=dashed];
m13_414 -> m13_432  [color=darkseagreen4, key=1, label=T, style=dashed];
m13_414 -> m13_436  [color=darkseagreen4, key=1, label=T, style=dashed];
m13_414 -> m13_437  [color=darkseagreen4, key=1, label=T, style=dashed];
m13_414 -> m13_438  [color=darkseagreen4, key=1, label=T, style=dashed];
m13_414 -> m13_439  [color=darkseagreen4, key=1, label=T, style=dashed];
m13_414 -> m13_442  [color=darkseagreen4, key=1, label=T, style=dashed];
m13_425 -> m13_446  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_440 -> m13_442  [color=darkseagreen4, key=1, label=ms, style=dashed];
m13_450 -> m13_462  [color=darkseagreen4, key=1, label=T, style=dashed];
m13_450 -> m13_465  [color=darkseagreen4, key=1, label="Newtonsoft.Json.DateFormatHandling", style=dashed];
m13_450 -> m13_466  [color=darkseagreen4, key=1, label="Newtonsoft.Json.DateTimeZoneHandling", style=dashed];
m13_450 -> m13_468  [color=darkseagreen4, key=1, label=T, style=dashed];
m13_464 -> m13_474  [color=darkseagreen4, key=1, label=date, style=dashed];
m13_380 -> m13_382  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_380 -> m13_383  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_380 -> m13_384  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_380 -> m13_385  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_380 -> m13_386  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_380 -> m13_387  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_380 -> m13_388  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_398 -> m13_400  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_407 -> m13_409  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_451 -> m13_480  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m13_451 -> m13_482  [color=darkseagreen4, key=1, label=T, style=dashed];
m13_451 -> m13_484  [color=darkseagreen4, key=1, label=T, style=dashed];
m13_463 -> m13_474  [color=darkseagreen4, key=1, label=date, style=dashed];
m13_471 -> m13_473  [color=darkseagreen4, key=1, label=parsedTicks, style=dashed];
m13_1102 -> m13_1104  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1102 -> m13_1105  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1102 -> m13_1106  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1102 -> m13_1107  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1102 -> m13_1108  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1102 -> m13_1109  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1102 -> m13_1110  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1102 -> m13_1111  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1102 -> m13_1112  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1102 -> m13_1113  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1102 -> m13_1114  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1102 -> m13_1115  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1102 -> m13_1116  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1368 -> m13_1370  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1368 -> m13_1371  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1368 -> m13_1372  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1368 -> m13_1373  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1368 -> m13_1374  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1368 -> m13_1375  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1368 -> m13_1376  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1368 -> m13_1379  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1368 -> m13_1380  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1378 -> m13_1378  [color=darkseagreen4, key=1, label=dt, style=dashed];
m13_677 -> m13_679  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_677 -> m13_682  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_679 -> m13_681  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_84 -> m13_86  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m13_553 -> m13_556  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_516 -> m13_518  [color=darkseagreen4, key=1, label=task, style=dashed];
m13_178 -> m13_180  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_178 -> m13_182  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_178 -> m13_185  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_182 -> m13_184  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1902 -> m13_1904  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1905  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1930  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1906  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1907  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1908  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1909  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1910  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1911  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1912  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1913  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1914  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1915  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1916  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1917  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1933  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1918  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1919  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1920  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1921  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1922  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1923  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1924  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1925  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1926  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1927  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1905 -> m13_1929  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1917 -> m13_1932  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_819 -> m13_835  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_821 -> m13_838  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_823 -> m13_841  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_825 -> m13_844  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_829 -> m13_847  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_820 -> m13_834  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_822 -> m13_837  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_824 -> m13_840  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_826 -> m13_843  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_830 -> m13_846  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_119 -> m13_128  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_120 -> m13_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_121 -> m13_132  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_122 -> m13_131  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_152 -> m13_154  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_152 -> m13_155  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_152 -> m13_156  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_152 -> m13_158  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_152 -> m13_160  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_152 -> m13_162  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_152 -> m13_163  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_152 -> m13_164  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_152 -> m13_165  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_152 -> m13_166  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_152 -> m13_167  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_152 -> m13_168  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_152 -> m13_169  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_152 -> m13_170  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_152 -> m13_171  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_152 -> m13_172  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_152 -> m13_173  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_610 -> m13_612  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_616 -> m13_618  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_613 -> m13_619  [color=darkseagreen4, key=1, label=j, style=dashed];
m13_619 -> m13_619  [color=darkseagreen4, key=1, label=j, style=dashed];
m13_1792 -> m13_1794  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1792 -> m13_1795  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1792 -> m13_1796  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1414 -> m13_1418  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1415 -> m13_1417  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1428 -> m13_1432  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1429 -> m13_1431  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_2034 -> m13_2037  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2034 -> m13_2055  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2034 -> m13_2038  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2034 -> m13_2058  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2034 -> m13_2040  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2034 -> m13_2041  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2034 -> m13_2043  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2034 -> m13_2061  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2034 -> m13_2045  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2034 -> m13_2046  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2034 -> m13_2048  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2034 -> m13_2064  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2034 -> m13_2049  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2034 -> m13_2067  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2034 -> m13_2050  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2034 -> m13_2070  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2037 -> m13_2054  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_2038 -> m13_2057  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_2043 -> m13_2060  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_2048 -> m13_2063  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_2049 -> m13_2066  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_2050 -> m13_2069  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1822 -> m13_1824  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1822 -> m13_1825  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1822 -> m13_1826  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1822 -> m13_1827  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1822 -> m13_1828  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1822 -> m13_1829  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1822 -> m13_1830  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1822 -> m13_1831  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1822 -> m13_1832  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1822 -> m13_1833  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1822 -> m13_1834  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1644 -> m13_1646  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1644 -> m13_1647  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1644 -> m13_1648  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1644 -> m13_1649  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1644 -> m13_1650  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1644 -> m13_1651  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1644 -> m13_1652  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1644 -> m13_1653  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1644 -> m13_1654  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1644 -> m13_1655  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1644 -> m13_1656  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1644 -> m13_1657  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1644 -> m13_1658  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1644 -> m13_1659  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1644 -> m13_1660  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1644 -> m13_1661  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1644 -> m13_1662  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1644 -> m13_1663  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1588 -> m13_1592  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1589 -> m13_1591  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_294 -> m13_298  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_294 -> m13_299  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_294 -> m13_300  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_294 -> m13_301  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_294 -> m13_302  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_294 -> m13_303  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_294 -> m13_304  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_294 -> m13_305  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_294 -> m13_308  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_297 -> m13_299  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_297 -> m13_300  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_297 -> m13_301  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_297 -> m13_302  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_297 -> m13_303  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_297 -> m13_304  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_297 -> m13_305  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_305 -> m13_307  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_306 -> m13_308  [color=darkseagreen4, key=1, label=year2000local, style=dashed];
m13_306 -> m13_309  [color=darkseagreen4, key=1, label=year2000local, style=dashed];
m13_306 -> m13_310  [color=darkseagreen4, key=1, label=year2000local, style=dashed];
m13_306 -> m13_313  [color=darkseagreen4, key=1, label=year2000local, style=dashed];
m13_306 -> m13_314  [color=darkseagreen4, key=1, label=year2000local, style=dashed];
m13_306 -> m13_315  [color=darkseagreen4, key=1, label=year2000local, style=dashed];
m13_306 -> m13_316  [color=darkseagreen4, key=1, label=year2000local, style=dashed];
m13_633 -> m13_635  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_652 -> m13_656  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_653 -> m13_655  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1612 -> m13_1614  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1612 -> m13_1615  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1612 -> m13_1616  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_117 -> m13_125  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_118 -> m13_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1483 -> m13_1486  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1483 -> m13_1488  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1483 -> m13_1489  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1483 -> m13_1490  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1484 -> m13_1487  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_1487 -> m13_1487  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_1078 -> m13_1080  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1078 -> m13_1081  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1078 -> m13_1082  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1078 -> m13_1083  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1078 -> m13_1084  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1078 -> m13_1085  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1078 -> m13_1088  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1085 -> m13_1087  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_473 -> m13_475  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_493 -> m13_506  [color=darkseagreen4, key=1, label=valueCount, style=dashed];
m13_493 -> m13_498  [color=darkseagreen4, key=1, label=valueCount, style=dashed];
m13_1635 -> m13_1640  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1636 -> m13_1639  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1472 -> m13_1475  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1472 -> m13_1477  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1472 -> m13_1478  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1473 -> m13_1476  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_1476 -> m13_1476  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_237 -> m13_239  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_670 -> m13_672  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_670 -> m13_673  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1619 -> m13_1623  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1620 -> m13_1622  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1141 -> m13_1143  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1141 -> m13_1144  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1141 -> m13_1145  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1141 -> m13_1146  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1141 -> m13_1147  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1141 -> m13_1148  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1141 -> m13_1149  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1141 -> m13_1150  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1141 -> m13_1151  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1141 -> m13_1152  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1141 -> m13_1153  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1141 -> m13_1154  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1141 -> m13_1155  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1141 -> m13_1156  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1141 -> m13_1157  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1141 -> m13_1158  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1263 -> m13_1265  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1263 -> m13_1266  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1263 -> m13_1267  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1263 -> m13_1268  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1263 -> m13_1269  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1263 -> m13_1270  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1263 -> m13_1271  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1263 -> m13_1272  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1263 -> m13_1273  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1199 -> m13_1203  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1200 -> m13_1202  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1002 -> m13_1004  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1002 -> m13_1005  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1002 -> m13_1006  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1002 -> m13_1007  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1002 -> m13_1008  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1002 -> m13_1009  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1002 -> m13_1010  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1627 -> m13_1629  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1627 -> m13_1630  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1627 -> m13_1631  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_267 -> m13_269  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_267 -> m13_270  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_267 -> m13_272  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_267 -> m13_273  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_267 -> m13_274  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_267 -> m13_275  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_267 -> m13_276  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_267 -> m13_277  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_267 -> m13_278  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_267 -> m13_279  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_267 -> m13_280  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_479 -> m13_483  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_480 -> m13_482  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_481 -> m13_485  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m13_1503 -> m13_1505  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1503 -> m13_1506  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1503 -> m13_1507  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1503 -> m13_1508  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1421 -> m13_1425  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1422 -> m13_1424  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_552 -> m13_555  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_552 -> m13_557  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_552 -> m13_558  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_70 -> m13_81  [color=green, key=1, label="lambda expression", style=dashed];
m13_67 -> m13_17  [color=green, key=1, label="lambda expression", style=dashed];
m13_69 -> m13_58  [color=green, key=1, label="lambda expression", style=dashed];
m13_68 -> m13_28  [color=green, key=1, label="lambda expression", style=dashed];
m13_1580 -> m13_1584  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1581 -> m13_1583  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_503 -> m13_510  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_503 -> m13_511  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_505 -> m13_508  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_505 -> m13_509  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_1800 -> m13_1804  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1801 -> m13_1803  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_988 -> m13_990  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_988 -> m13_991  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_988 -> m13_992  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_988 -> m13_993  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_988 -> m13_994  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_988 -> m13_995  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_988 -> m13_996  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_988 -> m13_997  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_988 -> m13_998  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_970 -> m13_972  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_970 -> m13_973  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_970 -> m13_974  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_970 -> m13_975  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_970 -> m13_976  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_970 -> m13_977  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_970 -> m13_978  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_970 -> m13_979  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_970 -> m13_980  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_970 -> m13_981  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_970 -> m13_982  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_970 -> m13_983  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_623 -> m13_626  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_623 -> m13_628  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_623 -> m13_629  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_623 -> m13_630  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_624 -> m13_627  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_627 -> m13_627  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_1169 -> m13_1171  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1280 -> m13_1282  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1280 -> m13_1283  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1280 -> m13_1284  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1280 -> m13_1285  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1280 -> m13_1286  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1280 -> m13_1287  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1280 -> m13_1288  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1280 -> m13_1289  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1280 -> m13_1290  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1179 -> m13_1183  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1180 -> m13_1182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1294 -> m13_1296  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1294 -> m13_1297  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1294 -> m13_1298  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1294 -> m13_1299  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1294 -> m13_1302  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1299 -> m13_1301  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_486 -> m13_489  [color=darkseagreen4, key=1, label=s, style=dashed];
m13_487 -> m13_489  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1596 -> m13_1598  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1596 -> m13_1599  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1596 -> m13_1600  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1336 -> m13_1338  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1336 -> m13_1339  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1336 -> m13_1340  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1336 -> m13_1341  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1336 -> m13_1342  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1336 -> m13_1343  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1336 -> m13_1344  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1336 -> m13_1345  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1336 -> m13_1346  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1384 -> m13_1386  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1384 -> m13_1387  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1384 -> m13_1388  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1384 -> m13_1389  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1384 -> m13_1390  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1384 -> m13_1391  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1384 -> m13_1392  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1494 -> m13_1496  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1494 -> m13_1497  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1494 -> m13_1498  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1494 -> m13_1499  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_103 -> m13_105  [color=green, key=1, label=jsonTextReader, style=dashed];
m13_103 -> m13_106  [color=green, key=1, label=jsonTextReader, style=dashed];
m13_103 -> m13_110  [color=green, key=1, label=jsonTextReader, style=dashed];
m13_103 -> m13_111  [color=green, key=1, label=jsonTextReader, style=dashed];
m13_103 -> m13_112  [color=green, key=1, label=jsonTextReader, style=dashed];
m13_103 -> m13_107  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_103 -> m13_108  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_103 -> m13_109  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_103 -> m13_113  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_562 -> m13_564  [color=darkseagreen4, key=1, label=depth, style=dashed];
m13_562 -> m13_569  [color=darkseagreen4, key=1, label=depth, style=dashed];
m13_563 -> m13_566  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_568 -> m13_572  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_568 -> m13_571  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_561 -> m13_567  [color=darkseagreen4, key=1, label=sb, style=dashed];
m13_561 -> m13_565  [color=darkseagreen4, key=1, label=sb, style=dashed];
m13_561 -> m13_570  [color=darkseagreen4, key=1, label=sb, style=dashed];
m13_561 -> m13_572  [color=darkseagreen4, key=1, label=sb, style=dashed];
m13_565 -> m13_567  [color=darkseagreen4, key=1, label=j, style=dashed];
m13_565 -> m13_569  [color=darkseagreen4, key=1, label=j, style=dashed];
m13_569 -> m13_569  [color=darkseagreen4, key=1, label=j, style=dashed];
m13_566 -> m13_566  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_1443 -> m13_1445  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1443 -> m13_1446  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1443 -> m13_1447  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1443 -> m13_1449  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1443 -> m13_1450  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1443 -> m13_1452  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1443 -> m13_1453  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1448 -> m13_1451  [color=darkseagreen4, key=1, label=d, style=dashed];
m13_1837 -> m13_1839  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1837 -> m13_1840  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1837 -> m13_1843  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1840 -> m13_1842  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1937 -> m13_1939  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1940  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1941  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1942  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1943  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1944  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1945  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1946  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1947  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1948  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1949  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1950  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1951  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1952  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1953  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1954  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1955  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1956  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1957  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1958  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1959  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1960  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1961  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1962  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1963  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1964  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1965  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1966  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1967  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1968  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1969  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1970  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1971  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1972  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1973  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1974  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_189 -> m13_192  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_189 -> m13_194  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_189 -> m13_196  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_189 -> m13_198  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_189 -> m13_200  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_189 -> m13_202  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_189 -> m13_204  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_500 -> m13_500  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_730 -> m13_732  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_730 -> m13_733  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_730 -> m13_734  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_730 -> m13_735  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_730 -> m13_736  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_730 -> m13_737  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_730 -> m13_738  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_730 -> m13_739  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_730 -> m13_740  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1192 -> m13_1196  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1193 -> m13_1195  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1206 -> m13_1210  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1207 -> m13_1209  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1174 -> m13_1176  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1396 -> m13_1398  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1396 -> m13_1399  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1396 -> m13_1400  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1396 -> m13_1401  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1396 -> m13_1404  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1401 -> m13_1403  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1457 -> m13_1459  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1457 -> m13_1460  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1457 -> m13_1461  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1457 -> m13_1462  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1457 -> m13_1464  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1457 -> m13_1465  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1457 -> m13_1467  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1457 -> m13_1468  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1463 -> m13_1466  [color=darkseagreen4, key=1, label=d, style=dashed];
m13_252 -> m13_254  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_246 -> m13_248  [color=darkseagreen4, key=1, label=ms, style=dashed];
m13_246 -> m13_250  [color=darkseagreen4, key=1, label=ms, style=dashed];
m13_251 -> m13_253  [color=darkseagreen4, key=1, label=ms, style=dashed];
m13_251 -> m13_255  [color=darkseagreen4, key=1, label=ms, style=dashed];
m13_1220 -> m13_1224  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1221 -> m13_1223  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1529 -> m13_1531  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1532  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1533  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1534  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1535  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1536  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1537  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1538  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1539  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1540  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1541  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1542  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1543  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1544  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1545  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1546  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1547  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1548  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1549  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1550  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1551  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1552  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1553  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1554  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1555  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1556  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1557  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1558  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1559  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1560  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1561  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1562  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1563  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1564  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1565  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1566  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1567  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1568  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1569  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1808 -> m13_1810  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1808 -> m13_1811  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_761 -> m13_763  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_761 -> m13_764  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_761 -> m13_765  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_761 -> m13_766  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_761 -> m13_767  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_761 -> m13_770  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_761 -> m13_771  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_761 -> m13_772  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_761 -> m13_773  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_760 -> m13_769  [color=darkseagreen4, key=1, label=helloWorldData, style=dashed];
m13_594 -> m13_596  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_600 -> m13_602  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_597 -> m13_603  [color=darkseagreen4, key=1, label=j, style=dashed];
m13_603 -> m13_603  [color=darkseagreen4, key=1, label=j, style=dashed];
m13_745 -> m13_747  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_745 -> m13_748  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_745 -> m13_749  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_745 -> m13_752  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_745 -> m13_753  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_745 -> m13_754  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_745 -> m13_755  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_744 -> m13_751  [color=darkseagreen4, key=1, label=helloWorldData, style=dashed];
m13_1815 -> m13_1817  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1815 -> m13_1818  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_645 -> m13_649  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_646 -> m13_648  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_859 -> m13_872  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_861 -> m13_863  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_861 -> m13_875  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_868 -> m13_878  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_860 -> m13_871  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_863 -> m13_874  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_869 -> m13_877  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1250 -> m13_1252  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1250 -> m13_1253  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1250 -> m13_1254  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1250 -> m13_1255  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1250 -> m13_1256  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1250 -> m13_1257  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1250 -> m13_1258  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1250 -> m13_1259  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1512 -> m13_1514  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1512 -> m13_1515  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1512 -> m13_1516  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1512 -> m13_1517  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1512 -> m13_1518  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1512 -> m13_1519  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1512 -> m13_1520  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1512 -> m13_1521  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1512 -> m13_1522  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1512 -> m13_1523  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1512 -> m13_1524  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1512 -> m13_1525  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1512 -> m13_1526  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1161 -> m13_1163  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1161 -> m13_1166  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1163 -> m13_1165  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_209 -> m13_211  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_209 -> m13_212  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_209 -> m13_213  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1227 -> m13_1231  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1228 -> m13_1230  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_509 -> m13_509  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_2081 -> m13_2087  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2074 -> m13_2078  [color=darkseagreen4, key=1, label=writer, style=dashed];
m13_2074 -> m13_2076  [color=darkseagreen4, key=1, label=writer, style=dashed];
m13_2074 -> m13_2077  [color=darkseagreen4, key=1, label=writer, style=dashed];
m13_165 -> m13_168  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1306 -> m13_1308  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1306 -> m13_1309  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1306 -> m13_1310  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1306 -> m13_1311  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1306 -> m13_1312  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1306 -> m13_1313  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1306 -> m13_1314  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1306 -> m13_1315  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1306 -> m13_1316  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1320 -> m13_1322  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1320 -> m13_1323  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1320 -> m13_1324  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1320 -> m13_1325  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1320 -> m13_1326  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1320 -> m13_1327  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1320 -> m13_1328  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1320 -> m13_1329  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1320 -> m13_1330  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_519 -> m13_521  [color=darkseagreen4, key=1, label=task, style=dashed];
m13_521 -> m13_523  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_524  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_526  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_528  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_529  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_531  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_532  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_534  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_535  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_539  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_540  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_541  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_542  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_543  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_544  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_545  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_546  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_547  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_548  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_522 -> m13_524  [color=darkseagreen4, key=1, label=taskObject, style=dashed];
m13_530 -> m13_532  [color=darkseagreen4, key=1, label=taskInt, style=dashed];
m13_536 -> m13_540  [color=darkseagreen4, key=1, label=p, style=dashed];
m13_527 -> m13_529  [color=darkseagreen4, key=1, label=versionArray, style=dashed];
m13_533 -> m13_535  [color=darkseagreen4, key=1, label=taskVersion, style=dashed];
m13_1706 -> m13_1708  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1709  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1710  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1711  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1712  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1713  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1714  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1715  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1716  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1717  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1718  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1719  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1720  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1721  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1722  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1723  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1724  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1725  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1726  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1727  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1728  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1729  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1730  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1731  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1732  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1733  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1734  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1735  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1736  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1737  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1738  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1739  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1740  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1741  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1742  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1743  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1744  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1745  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1746  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1747  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1748  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1749  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1750  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1751  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1752  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1753  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1754  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1755  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1756  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1757  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1758  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1759  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1760  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1761  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1762  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1763  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1764  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1765  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1766  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1767  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1768  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1769  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1770  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1771  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1772  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1773  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1774  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1775  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1776  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1777  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1778  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1779  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1780  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1781  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1782  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1783  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1784  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1785  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1786  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1787  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1788  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_22 -> m13_24  [color=green, key=1, label=jsonTextReader, style=dashed];
m13_22 -> m13_28  [color=green, key=1, label=jsonTextReader, style=dashed];
m13_22 -> m13_30  [color=green, key=1, label=jsonTextReader, style=dashed];
m13_22 -> m13_31  [color=green, key=1, label=jsonTextReader, style=dashed];
m13_22 -> m13_32  [color=green, key=1, label=jsonTextReader, style=dashed];
m13_22 -> m13_33  [color=green, key=1, label=jsonTextReader, style=dashed];
m13_22 -> m13_34  [color=green, key=1, label=jsonTextReader, style=dashed];
m13_22 -> m13_35  [color=green, key=1, label=jsonTextReader, style=dashed];
m13_22 -> m13_36  [color=green, key=1, label=jsonTextReader, style=dashed];
m13_22 -> m13_37  [color=green, key=1, label=jsonTextReader, style=dashed];
m13_286 -> m13_290  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_287 -> m13_289  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_571 -> m13_571  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_2100 -> m13_2103  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m13_577 -> m13_581  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_1214 -> m13_1216  [color=darkseagreen4, key=1, label=data, style=dashed];
m13_1214 -> m13_1217  [color=darkseagreen4, key=1, label=data, style=dashed];
m13_1573 -> m13_1575  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1573 -> m13_1576  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_662 -> m13_667  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_663 -> m13_666  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_89 -> m13_91  [color=green, key=1, label=jsonTextReader, style=dashed];
m13_89 -> m13_92  [color=green, key=1, label=jsonTextReader, style=dashed];
m13_89 -> m13_93  [color=green, key=1, label=jsonTextReader, style=dashed];
m13_89 -> m13_94  [color=green, key=1, label=jsonTextReader, style=dashed];
m13_89 -> m13_96  [color=green, key=1, label=jsonTextReader, style=dashed];
m13_89 -> m13_97  [color=green, key=1, label=jsonTextReader, style=dashed];
m13_89 -> m13_98  [color=green, key=1, label=jsonTextReader, style=dashed];
m13_1407 -> m13_1411  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1408 -> m13_1410  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1893 -> m13_1895  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1893 -> m13_1898  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1895 -> m13_1897  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_2 -> m13_4  [color=green, key=1, label=jsonTextReader, style=dashed];
m13_2 -> m13_6  [color=green, key=1, label=jsonTextReader, style=dashed];
m13_52 -> m13_7  [color=green, key=1, label="lambda expression", style=dashed];
m13_1435 -> m13_1439  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1436 -> m13_1438  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_556 -> m13_556  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_580 -> m13_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m13_580 -> m13_303  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m13_580 -> m13_308  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m13_580 -> m13_309  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m13_580 -> m13_310  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m13_580 -> m13_313  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m13_580 -> m13_314  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m13_580 -> m13_315  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m13_580 -> m13_320  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m13_580 -> m13_321  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m13_580 -> m13_324  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m13_580 -> m13_325  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m13_580 -> m13_326  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m13_580 -> m13_331  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m13_580 -> m13_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m13_580 -> m13_335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m13_580 -> m13_336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m13_580 -> m13_337  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m13_580 -> m13_342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m13_580 -> m13_345  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m13_580 -> m13_346  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m13_580 -> m13_347  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m13_580 -> m13_353  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m13_580 -> m13_357  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m13_580 -> m13_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m13_580 -> m13_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m13_580 -> m13_368  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m13_580 -> m13_369  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m13_580 -> m13_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m13_580 -> m13_377  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m13_580 -> m13_382  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m13_580 -> m13_386  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m13_585 -> m13_588  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_582 -> m13_586  [color=darkseagreen4, key=1, label=j, style=dashed];
m13_586 -> m13_586  [color=darkseagreen4, key=1, label=j, style=dashed];
m13_1186 -> m13_1188  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1669  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1670  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1671  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1672  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1673  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1674  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1675  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1676  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1677  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1678  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1679  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1680  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1681  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1682  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1683  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1684  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1685  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1686  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1687  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1688  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1689  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1690  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1691  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1692  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1693  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1694  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1695  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1696  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1697  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1698  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1699  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1700  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1701  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1702  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_638 -> m13_642  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_639 -> m13_641  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_513 -> m13_515  [color=darkseagreen4, key=1, label=task, style=dashed];
m13_1120 -> m13_1122  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1120 -> m13_1123  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1120 -> m13_1124  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1120 -> m13_1125  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1120 -> m13_1126  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1120 -> m13_1127  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1120 -> m13_1128  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1120 -> m13_1129  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1120 -> m13_1130  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1120 -> m13_1131  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1120 -> m13_1132  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1120 -> m13_1133  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1120 -> m13_1134  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1120 -> m13_1135  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1120 -> m13_1136  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1120 -> m13_1137  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_778 -> m13_780  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_778 -> m13_781  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_778 -> m13_782  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_778 -> m13_783  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_778 -> m13_784  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_778 -> m13_785  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_778 -> m13_786  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_778 -> m13_787  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_778 -> m13_788  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_778 -> m13_789  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_778 -> m13_790  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_778 -> m13_791  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_778 -> m13_792  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_778 -> m13_793  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1851 -> m13_1853  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1851 -> m13_1854  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1851 -> m13_1855  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1851 -> m13_1856  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1851 -> m13_1857  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1851 -> m13_1858  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1851 -> m13_1859  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1851 -> m13_1860  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1851 -> m13_1861  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1851 -> m13_1862  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1851 -> m13_1863  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1851 -> m13_1864  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1851 -> m13_1865  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1851 -> m13_1866  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1851 -> m13_1867  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1851 -> m13_1868  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1869 -> m13_1871  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1869 -> m13_1872  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1869 -> m13_1873  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1869 -> m13_1874  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1869 -> m13_1875  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1869 -> m13_1876  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1869 -> m13_1877  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1869 -> m13_1878  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1869 -> m13_1879  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1869 -> m13_1880  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1869 -> m13_1881  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1869 -> m13_1882  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1869 -> m13_1883  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1869 -> m13_1884  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1869 -> m13_1885  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1869 -> m13_1886  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1847 -> m13_1849  [color=darkseagreen4, key=1, label=d, style=dashed];
m13_489 -> m13_496  [color=darkseagreen4, key=1, label=object, style=dashed];
m13_494 -> m13_498  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_495 -> m13_501  [color=darkseagreen4, key=1, label=writer, style=dashed];
m13_495 -> m13_499  [color=darkseagreen4, key=1, label=writer, style=dashed];
m13_495 -> m13_497  [color=darkseagreen4, key=1, label=writer, style=dashed];
m13_497 -> m13_499  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_497 -> m13_500  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_2092 -> m13_2094  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1604 -> m13_1606  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1604 -> m13_1607  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1604 -> m13_1608  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_572 -> m13_574  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_307 -> m13_312  [color=darkseagreen4, key=1, label=localToUtcDate, style=dashed];
m13_308 -> m13_310  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_308 -> m13_311  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_308 -> m13_312  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_308 -> m13_313  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_308 -> m13_314  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_308 -> m13_315  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_308 -> m13_316  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_1016 -> m13_1018  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1019  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1020  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1021  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1022  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1023  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1024  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1025  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1026  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1027  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1028  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1029  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1030  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1031  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1032  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1033  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1034  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1035  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1036  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1037  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1038  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1039  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1040  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1041  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1042  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1043  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1044  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1045  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1046  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1047  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1048  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1049  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1050  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1051  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1052  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1053  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1054  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1055  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1056  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1057  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1058  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1059  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1060  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1061  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1062  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1063  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1064  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1065  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1066  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1067  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1068  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1069  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1070  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1071  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1072  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1073  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1074  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_691 -> m13_693  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_694  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_695  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_696  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_697  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_698  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_699  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_700  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_701  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_702  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_703  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_704  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_705  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_706  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_707  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_708  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_709  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_710  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_711  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_712  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_713  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_714  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_715  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_716  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_717  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_718  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_719  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_720  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_721  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_722  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_723  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_724  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_725  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_726  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_685 -> m13_696  [color=darkseagreen4, key=1, label=newLinesText, style=dashed];
m13_685 -> m13_711  [color=darkseagreen4, key=1, label=newLinesText, style=dashed];
m13_687 -> m13_690  [color=darkseagreen4, key=1, label=count, style=dashed];
m13_690 -> m13_690  [color=darkseagreen4, key=1, label=count, style=dashed];
m13_2135 -> m13_59  [color=green, key=1, label=jsonTextReader, style=dashed];
m13_2136 -> m13_76  [color=green, key=1, label=jsonTextReader, style=dashed];
m13_2136 -> m13_79  [color=green, key=1, label=jsonTextReader, style=dashed];
m13_2136 -> m13_82  [color=green, key=1, label=jsonTextReader, style=dashed];
m13_2136 -> m13_85  [color=green, key=1, label=jsonTextReader, style=dashed];
m13_2137 -> m13_125  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2137 -> m13_132  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2137 -> m13_128  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2138 -> m13_148  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2139 -> m13_185  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2141 -> m13_290  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2142 -> m13_308  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2143 -> m13_321  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2153 -> m13_875  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2153 -> m13_872  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2153 -> m13_878  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2154 -> m13_910  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2154 -> m13_913  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2155 -> m13_1088  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2156 -> m13_1166  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2165 -> m13_1411  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2166 -> m13_1418  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2167 -> m13_1425  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2168 -> m13_1432  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2169 -> m13_1439  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2170 -> m13_1584  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2171 -> m13_1592  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2172 -> m13_1623  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2173 -> m13_1640  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2174 -> m13_1804  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2176 -> m13_1898  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2177 -> m13_1930  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2177 -> m13_1933  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2178 -> m13_2055  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2178 -> m13_2058  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2178 -> m13_2061  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2178 -> m13_2064  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2178 -> m13_2067  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2178 -> m13_2070  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2140 -> m13_222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m13_2140 -> m13_224  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m13_2140 -> m13_226  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m13_2140 -> m13_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m13_2140 -> m13_228  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m13_2140 -> m13_229  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m13_2140 -> m13_230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m13_2140 -> m13_231  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m13_2140 -> m13_232  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m13_2152 -> m13_835  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2152 -> m13_838  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2152 -> m13_841  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2152 -> m13_844  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2152 -> m13_847  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2164 -> m13_1404  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2157 -> m13_1183  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2159 -> m13_1203  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2161 -> m13_1224  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2162 -> m13_1231  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2144 -> m13_483  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2147 -> m13_642  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2148 -> m13_649  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2149 -> m13_656  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2150 -> m13_667  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2151 -> m13_682  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2158 -> m13_1196  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2160 -> m13_1210  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2163 -> m13_1302  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2175 -> m13_1843  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2180 -> m13_2101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ToggleReaderError", style=dashed];
m13_2180 -> m13_2103  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ToggleReaderError", style=dashed];
m15_14 -> m15_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m15_14 -> m15_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m17_22 -> m17_24  [color=darkseagreen4, key=1, label=t, style=dashed];
m17_35 -> m17_46  [color=darkseagreen4, key=1, label=o, style=dashed];
m17_39 -> m17_48  [color=darkseagreen4, key=1, label=sw, style=dashed];
m17_39 -> m17_49  [color=darkseagreen4, key=1, label=sw, style=dashed];
m17_41 -> m17_47  [color=darkseagreen4, key=1, label=i, style=dashed];
m17_47 -> m17_47  [color=darkseagreen4, key=1, label=i, style=dashed];
m17_43 -> m17_46  [color=darkseagreen4, key=1, label=file, style=dashed];
m17_44 -> m17_46  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m17_61 -> m17_63  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m17_67 -> m17_76  [color=darkseagreen4, key=1, label=sw, style=dashed];
m17_67 -> m17_77  [color=darkseagreen4, key=1, label=sw, style=dashed];
m17_69 -> m17_75  [color=darkseagreen4, key=1, label=i, style=dashed];
m17_75 -> m17_75  [color=darkseagreen4, key=1, label=i, style=dashed];
m17_72 -> m17_74  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m17_83 -> m17_86  [color=darkseagreen4, key=1, label=json, style=dashed];
m17_90 -> m17_99  [color=darkseagreen4, key=1, label=sw, style=dashed];
m17_90 -> m17_100  [color=darkseagreen4, key=1, label=sw, style=dashed];
m17_92 -> m17_98  [color=darkseagreen4, key=1, label=i, style=dashed];
m17_98 -> m17_98  [color=darkseagreen4, key=1, label=i, style=dashed];
m17_94 -> m17_97  [color=darkseagreen4, key=1, label=json, style=dashed];
m17_6 -> m17_8  [color=darkseagreen4, key=1, label=t, style=dashed];
m18_362 -> m18_487  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m18_362 -> m18_480  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_362 -> m18_496  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_362 -> m18_481  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m18_362 -> m18_484  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m18_362 -> m18_489  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m18_362 -> m18_493  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m18_362 -> m18_495  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m18_488 -> m18_492  [color=darkseagreen4, key=1, label=list, style=dashed];
m18_490 -> m18_492  [color=darkseagreen4, key=1, label=list, style=dashed];
m18_483 -> m18_486  [color=darkseagreen4, key=1, label=list, style=dashed];
m18_482 -> m18_497  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m18_494 -> m18_497  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m18_491 -> m18_497  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m18_461 -> m18_463  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_461 -> m18_464  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_461 -> m18_466  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_72 -> m18_861  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_72 -> m18_865  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_72 -> m18_867  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_72 -> m18_870  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_72 -> m18_872  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_72 -> m18_874  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_72 -> m18_876  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_72 -> m18_878  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_72 -> m18_880  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_72 -> m18_882  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_521 -> m18_523  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_521 -> m18_524  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m18_757 -> m18_761  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_757 -> m18_772  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_757 -> m18_773  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_757 -> m18_797  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_757 -> m18_771  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_762 -> m18_765  [color=darkseagreen4, key=1, label=propertyValues, style=dashed];
m18_777 -> m18_777  [color=darkseagreen4, key=1, label=remainingPropertyValue, style=dashed];
m18_780 -> m18_789  [color=darkseagreen4, key=1, label=propertyContract, style=dashed];
m18_763 -> m18_808  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_763 -> m18_811  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_770 -> m18_772  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m18_770 -> m18_773  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m18_770 -> m18_797  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m18_770 -> m18_778  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m18_770 -> m18_798  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m18_776 -> m18_778  [color=darkseagreen4, key=1, label=value, style=dashed];
m18_776 -> m18_779  [color=darkseagreen4, key=1, label=value, style=dashed];
m18_775 -> m18_778  [color=darkseagreen4, key=1, label=property, style=dashed];
m18_775 -> m18_779  [color=darkseagreen4, key=1, label=property, style=dashed];
m18_785 -> m18_788  [color=darkseagreen4, key=1, label=createdObjectCollectionWrapper, style=dashed];
m18_793 -> m18_796  [color=darkseagreen4, key=1, label=targetDictionary, style=dashed];
m18_764 -> m18_774  [color=darkseagreen4, key=1, label=remainingPropertyValues, style=dashed];
m18_764 -> m18_769  [color=darkseagreen4, key=1, label=remainingPropertyValues, style=dashed];
m18_766 -> m18_814  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_766 -> m18_769  [color=darkseagreen4, key=1, label=propertyValue, style=dashed];
m18_796 -> m18_796  [color=darkseagreen4, key=1, label=newValue, style=dashed];
m18_363 -> m18_576  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m18_363 -> m18_577  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m18_363 -> m18_587  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_363 -> m18_601  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m18_363 -> m18_602  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_363 -> m18_623  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m18_363 -> m18_624  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m18_363 -> m18_607  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_363 -> m18_604  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_363 -> m18_575  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_363 -> m18_582  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m18_363 -> m18_588  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_363 -> m18_608  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_363 -> m18_620  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_363 -> m18_625  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m18_578 -> m18_587  [color=darkseagreen4, key=1, label=collectionItemContract, style=dashed];
m18_579 -> m18_587  [color=darkseagreen4, key=1, label=collectionItemConverter, style=dashed];
m18_579 -> m18_595  [color=darkseagreen4, key=1, label=collectionItemConverter, style=dashed];
m18_580 -> m18_603  [color=darkseagreen4, key=1, label=previousErrorIndex, style=dashed];
m18_584 -> m18_621  [color=darkseagreen4, key=1, label=finished, style=dashed];
m18_584 -> m18_622  [color=darkseagreen4, key=1, label=finished, style=dashed];
m18_600 -> m18_603  [color=darkseagreen4, key=1, label=errorPosition, style=dashed];
m18_585 -> m18_602  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m18_581 -> m18_586  [color=darkseagreen4, key=1, label=listStack, style=dashed];
m18_581 -> m18_590  [color=darkseagreen4, key=1, label=listStack, style=dashed];
m18_581 -> m18_612  [color=darkseagreen4, key=1, label=listStack, style=dashed];
m18_581 -> m18_615  [color=darkseagreen4, key=1, label=listStack, style=dashed];
m18_581 -> m18_616  [color=darkseagreen4, key=1, label=listStack, style=dashed];
m18_583 -> m18_611  [color=darkseagreen4, key=1, label=currentList, style=dashed];
m18_574 -> m18_586  [color=darkseagreen4, key=1, label=rank, style=dashed];
m18_618 -> m18_622  [color=darkseagreen4, key=1, label=finished, style=dashed];
m18_591 -> m18_598  [color=darkseagreen4, key=1, label=currentList, style=dashed];
m18_592 -> m18_603  [color=darkseagreen4, key=1, label=previousErrorIndex, style=dashed];
m18_610 -> m18_612  [color=darkseagreen4, key=1, label=newList, style=dashed];
m18_77 -> m18_991  [color=darkseagreen4, key=1, label=bool, style=dashed];
m18_77 -> m18_992  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_77 -> m18_993  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_77 -> m18_994  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_90 -> m18_92  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m18_90 -> m18_93  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_90 -> m18_96  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_2 -> m18_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_2 -> m18_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_2 -> m18_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_2 -> m18_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_2 -> m18_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_2 -> m18_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_2 -> m18_6  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_2 -> m18_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_2 -> m18_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_2 -> m18_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_2 -> m18_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_2 -> m18_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_2 -> m18_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_2 -> m18_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_800 -> m18_835  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_800 -> m18_849  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m18_800 -> m18_845  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_800 -> m18_852  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_800 -> m18_846  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_800 -> m18_857  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_800 -> m18_836  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_800 -> m18_847  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_800 -> m18_827  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_800 -> m18_851  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_800 -> m18_856  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_834 -> m18_841  [color=darkseagreen4, key=1, label=propertyConverter, style=dashed];
m18_829 -> m18_849  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m18_829 -> m18_836  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m18_829 -> m18_847  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m18_829 -> m18_851  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m18_830 -> m18_835  [color=darkseagreen4, key=1, label=property, style=dashed];
m18_830 -> m18_832  [color=darkseagreen4, key=1, label=property, style=dashed];
m18_830 -> m18_837  [color=darkseagreen4, key=1, label=property, style=dashed];
m18_830 -> m18_838  [color=darkseagreen4, key=1, label=property, style=dashed];
m18_825 -> m18_858  [color=darkseagreen4, key=1, label=propertyValues, style=dashed];
m18_573 -> m18_636  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_573 -> m18_637  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_36 -> m18_330  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_74 -> m18_118  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_74 -> m18_121  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_74 -> m18_123  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_74 -> m18_129  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_74 -> m18_136  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_74 -> m18_139  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_74 -> m18_144  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_74 -> m18_119  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_74 -> m18_132  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m18_74 -> m18_134  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m18_74 -> m18_142  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m18_74 -> m18_146  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_74 -> m18_148  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_74 -> m18_149  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_74 -> m18_150  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_131 -> m18_136  [color=darkseagreen4, key=1, label=s, style=dashed];
m18_131 -> m18_135  [color=darkseagreen4, key=1, label=s, style=dashed];
m18_950 -> m18_978  [color=darkseagreen4, key=1, label=object, style=dashed];
m18_950 -> m18_983  [color=darkseagreen4, key=1, label=object, style=dashed];
m18_950 -> m18_984  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_950 -> m18_966  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>", style=dashed];
m18_950 -> m18_974  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_950 -> m18_981  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_967 -> m18_977  [color=darkseagreen4, key=1, label=property, style=dashed];
m18_967 -> m18_978  [color=darkseagreen4, key=1, label=property, style=dashed];
m18_967 -> m18_983  [color=darkseagreen4, key=1, label=property, style=dashed];
m18_967 -> m18_974  [color=darkseagreen4, key=1, label=property, style=dashed];
m18_967 -> m18_981  [color=darkseagreen4, key=1, label=property, style=dashed];
m18_967 -> m18_975  [color=darkseagreen4, key=1, label=property, style=dashed];
m18_970 -> m18_973  [color=darkseagreen4, key=1, label=resolvedRequired, style=dashed];
m18_970 -> m18_980  [color=darkseagreen4, key=1, label=resolvedRequired, style=dashed];
m18_968 -> m18_971  [color=darkseagreen4, key=1, label=presence, style=dashed];
m18_42 -> m18_45  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m18_41 -> m18_923  [color=green, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_41 -> m18_924  [color=green, key=1, label=object, style=dashed];
m18_41 -> m18_931  [color=green, key=1, label=object, style=dashed];
m18_41 -> m18_932  [color=green, key=1, label=object, style=dashed];
m18_41 -> m18_910  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_41 -> m18_911  [color=darkseagreen4, key=1, label=object, style=dashed];
m18_41 -> m18_914  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_41 -> m18_920  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_41 -> m18_922  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_41 -> m18_928  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_41 -> m18_929  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_41 -> m18_930  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_41 -> m18_934  [color=darkseagreen4, key=1, label=object, style=dashed];
m18_41 -> m18_935  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_41 -> m18_940  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_41 -> m18_941  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_41 -> m18_943  [color=darkseagreen4, key=1, label=object, style=dashed];
m18_41 -> m18_944  [color=darkseagreen4, key=1, label=object, style=dashed];
m18_41 -> m18_945  [color=darkseagreen4, key=1, label=object, style=dashed];
m18_41 -> m18_946  [color=darkseagreen4, key=1, label=object, style=dashed];
m18_916 -> m18_924  [color=green, key=1, label=memberName, style=dashed];
m18_916 -> m18_932  [color=green, key=1, label=memberName, style=dashed];
m18_916 -> m18_920  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m18_916 -> m18_922  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m18_916 -> m18_929  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m18_916 -> m18_934  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m18_917 -> m18_931  [color=green, key=1, label=property, style=dashed];
m18_917 -> m18_925  [color=darkseagreen4, key=1, label=property, style=dashed];
m18_917 -> m18_928  [color=darkseagreen4, key=1, label=property, style=dashed];
m18_917 -> m18_930  [color=darkseagreen4, key=1, label=property, style=dashed];
m18_927 -> m18_931  [color=green, key=1, label=propertyConverter, style=dashed];
m18_909 -> m18_930  [color=darkseagreen4, key=1, label=propertiesPresence, style=dashed];
m18_909 -> m18_951  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_909 -> m18_954  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_909 -> m18_944  [color=darkseagreen4, key=1, label=propertiesPresence, style=dashed];
m18_912 -> m18_935  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m18_912 -> m18_944  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m18_938 -> m18_942  [color=darkseagreen4, key=1, label=finished, style=dashed];
m18_321 -> m18_326  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_321 -> m18_323  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_324 -> m18_327  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m18_40 -> m18_544  [color=green, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_40 -> m18_546  [color=green, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_40 -> m18_529  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_40 -> m18_530  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_40 -> m18_531  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_40 -> m18_533  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m18_40 -> m18_535  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m18_40 -> m18_540  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_40 -> m18_550  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_40 -> m18_551  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_40 -> m18_552  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_40 -> m18_559  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_40 -> m18_560  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_40 -> m18_565  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_40 -> m18_566  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_40 -> m18_568  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_40 -> m18_569  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_538 -> m18_544  [color=green, key=1, label=keyTypeCode, style=dashed];
m18_538 -> m18_546  [color=green, key=1, label=keyTypeCode, style=dashed];
m18_542 -> m18_544  [color=green, key=1, label=keyValue, style=dashed];
m18_542 -> m18_546  [color=green, key=1, label=keyValue, style=dashed];
m18_545 -> m18_559  [color=green, key=1, label=keyValue, style=dashed];
m18_547 -> m18_559  [color=green, key=1, label=keyValue, style=dashed];
m18_548 -> m18_559  [color=darkseagreen4, key=1, label=keyValue, style=dashed];
m18_537 -> m18_551  [color=darkseagreen4, key=1, label=dictionaryValueConverter, style=dashed];
m18_537 -> m18_554  [color=darkseagreen4, key=1, label=dictionaryValueConverter, style=dashed];
m18_528 -> m18_559  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m18_528 -> m18_530  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m18_528 -> m18_531  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m18_528 -> m18_568  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m18_528 -> m18_569  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m18_528 -> m18_570  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m18_532 -> m18_560  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m18_564 -> m18_567  [color=darkseagreen4, key=1, label=finished, style=dashed];
m18_152 -> m18_195  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_152 -> m18_198  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_152 -> m18_209  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_152 -> m18_213  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_152 -> m18_217  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_152 -> m18_231  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_152 -> m18_241  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_152 -> m18_244  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_152 -> m18_245  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_152 -> m18_204  [color=darkseagreen4, key=1, label=object, style=dashed];
m18_152 -> m18_212  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_152 -> m18_214  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_152 -> m18_215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_152 -> m18_222  [color=darkseagreen4, key=1, label=object, style=dashed];
m18_152 -> m18_226  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_152 -> m18_228  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_152 -> m18_230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_195 -> m18_195  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m18_195 -> m18_199  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m18_195 -> m18_209  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_195 -> m18_225  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_195 -> m18_226  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m18_195 -> m18_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m18_195 -> m18_228  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m18_195 -> m18_229  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m18_195 -> m18_230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m18_195 -> m18_231  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_195 -> m18_241  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_195 -> m18_244  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_195 -> m18_245  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m18_206 -> m18_208  [color=darkseagreen4, key=1, label=targetObject, style=dashed];
m18_206 -> m18_209  [color=darkseagreen4, key=1, label=targetObject, style=dashed];
m18_216 -> m18_218  [color=darkseagreen4, key=1, label=value, style=dashed];
m18_224 -> m18_227  [color=darkseagreen4, key=1, label=createdFromNonDefaultConstructor, style=dashed];
m18_224 -> m18_229  [color=darkseagreen4, key=1, label=createdFromNonDefaultConstructor, style=dashed];
m18_224 -> m18_231  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m18_224 -> m18_232  [color=darkseagreen4, key=1, label=createdFromNonDefaultConstructor, style=dashed];
m18_224 -> m18_233  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m18_224 -> m18_234  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m18_224 -> m18_235  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m18_220 -> m18_231  [color=darkseagreen4, key=1, label=dictionaryContract, style=dashed];
m18_220 -> m18_233  [color=darkseagreen4, key=1, label=dictionaryContract, style=dashed];
m18_202 -> m18_209  [color=darkseagreen4, key=1, label=objectContract, style=dashed];
m18_201 -> m18_207  [color=darkseagreen4, key=1, label=createdFromNonDefaultConstructor, style=dashed];
m18_205 -> m18_209  [color=darkseagreen4, key=1, label=targetObject, style=dashed];
m18_205 -> m18_208  [color=darkseagreen4, key=1, label=targetObject, style=dashed];
m18_515 -> m18_517  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_515 -> m18_518  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m18_253 -> m18_682  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_253 -> m18_697  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_253 -> m18_702  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_253 -> m18_703  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_253 -> m18_704  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_253 -> m18_688  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_253 -> m18_695  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_253 -> m18_690  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_253 -> m18_680  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_253 -> m18_689  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_253 -> m18_699  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_253 -> m18_685  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_253 -> m18_694  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_253 -> m18_698  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonISerializableContract", style=dashed];
m18_253 -> m18_701  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_683 -> m18_690  [color=darkseagreen4, key=1, label=serializationInfo, style=dashed];
m18_683 -> m18_697  [color=darkseagreen4, key=1, label=serializationInfo, style=dashed];
m18_700 -> m18_702  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m18_700 -> m18_703  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m18_700 -> m18_704  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m18_700 -> m18_705  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m18_687 -> m18_689  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m18_687 -> m18_690  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m18_693 -> m18_696  [color=darkseagreen4, key=1, label=finished, style=dashed];
m18_678 -> m18_680  [color=darkseagreen4, key=1, label=objectType, style=dashed];
m18_678 -> m18_699  [color=darkseagreen4, key=1, label=objectType, style=dashed];
m18_252 -> m18_732  [color=green, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_252 -> m18_733  [color=green, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_252 -> m18_712  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDynamicContract", style=dashed];
m18_252 -> m18_713  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_252 -> m18_714  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDynamicContract", style=dashed];
m18_252 -> m18_716  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_252 -> m18_717  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_252 -> m18_718  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_252 -> m18_719  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_252 -> m18_722  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_252 -> m18_725  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_252 -> m18_726  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_252 -> m18_741  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDynamicContract", style=dashed];
m18_252 -> m18_743  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_252 -> m18_744  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_252 -> m18_748  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_252 -> m18_749  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_252 -> m18_751  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_252 -> m18_752  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_711 -> m18_732  [color=green, key=1, label=newObject, style=dashed];
m18_711 -> m18_718  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m18_711 -> m18_719  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m18_711 -> m18_741  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m18_711 -> m18_743  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m18_711 -> m18_751  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m18_711 -> m18_752  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m18_711 -> m18_753  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m18_715 -> m18_732  [color=green, key=1, label=newObject, style=dashed];
m18_715 -> m18_718  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m18_715 -> m18_719  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m18_715 -> m18_741  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m18_715 -> m18_743  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m18_715 -> m18_751  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m18_715 -> m18_752  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m18_715 -> m18_753  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m18_727 -> m18_732  [color=green, key=1, label=property, style=dashed];
m18_727 -> m18_729  [color=darkseagreen4, key=1, label=property, style=dashed];
m18_736 -> m18_738  [color=darkseagreen4, key=1, label=dynamicMemberConverter, style=dashed];
m18_724 -> m18_743  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m18_724 -> m18_726  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m18_724 -> m18_741  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m18_720 -> m18_744  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m18_747 -> m18_750  [color=darkseagreen4, key=1, label=finished, style=dashed];
m18_33 -> m18_643  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_33 -> m18_647  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_33 -> m18_653  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_33 -> m18_665  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_33 -> m18_666  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_33 -> m18_673  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_33 -> m18_674  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_33 -> m18_645  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_33 -> m18_668  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_33 -> m18_642  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_33 -> m18_644  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m18_33 -> m18_654  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_33 -> m18_662  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m18_649 -> m18_653  [color=darkseagreen4, key=1, label=collectionItemContract, style=dashed];
m18_650 -> m18_653  [color=darkseagreen4, key=1, label=collectionItemConverter, style=dashed];
m18_650 -> m18_659  [color=darkseagreen4, key=1, label=collectionItemConverter, style=dashed];
m18_651 -> m18_667  [color=darkseagreen4, key=1, label=previousErrorIndex, style=dashed];
m18_652 -> m18_671  [color=darkseagreen4, key=1, label=finished, style=dashed];
m18_652 -> m18_672  [color=darkseagreen4, key=1, label=finished, style=dashed];
m18_641 -> m18_643  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m18_641 -> m18_647  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m18_641 -> m18_665  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m18_641 -> m18_673  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m18_641 -> m18_674  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m18_641 -> m18_646  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m18_641 -> m18_675  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m18_648 -> m18_666  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m18_664 -> m18_667  [color=darkseagreen4, key=1, label=errorPosition, style=dashed];
m18_656 -> m18_672  [color=darkseagreen4, key=1, label=finished, style=dashed];
m18_71 -> m18_175  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m18_71 -> m18_177  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m18_71 -> m18_179  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m18_71 -> m18_181  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m18_71 -> m18_183  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m18_71 -> m18_187  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m18_174 -> m18_189  [color=darkseagreen4, key=1, label=converter, style=dashed];
m18_250 -> m18_503  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m18_250 -> m18_512  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_250 -> m18_502  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m18_250 -> m18_505  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m18_250 -> m18_509  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m18_250 -> m18_511  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m18_504 -> m18_508  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m18_506 -> m18_508  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m18_501 -> m18_513  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m18_510 -> m18_513  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m18_507 -> m18_513  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m18_247 -> m18_263  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_247 -> m18_267  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_247 -> m18_273  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_247 -> m18_277  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_247 -> m18_279  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m18_247 -> m18_291  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_247 -> m18_296  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_247 -> m18_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_247 -> m18_301  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_247 -> m18_304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_247 -> m18_306  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_247 -> m18_265  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_247 -> m18_270  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_247 -> m18_287  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_247 -> m18_289  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_247 -> m18_257  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_247 -> m18_264  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_247 -> m18_269  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_247 -> m18_292  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m18_247 -> m18_293  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_247 -> m18_310  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_247 -> m18_312  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m18_271 -> m18_273  [color=darkseagreen4, key=1, label="out object", style=dashed];
m18_271 -> m18_312  [color=darkseagreen4, key=1, label="out object", style=dashed];
m18_285 -> m18_291  [color=darkseagreen4, key=1, label=specifiedType, style=dashed];
m18_285 -> m18_292  [color=darkseagreen4, key=1, label=specifiedType, style=dashed];
m18_285 -> m18_293  [color=darkseagreen4, key=1, label=specifiedType, style=dashed];
m18_295 -> m18_312  [color=darkseagreen4, key=1, label="ref Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m18_261 -> m18_276  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m18_261 -> m18_298  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m18_261 -> m18_303  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m18_266 -> m18_273  [color=darkseagreen4, key=1, label=reference, style=dashed];
m18_266 -> m18_268  [color=darkseagreen4, key=1, label=reference, style=dashed];
m18_278 -> m18_291  [color=darkseagreen4, key=1, label=qualifiedTypeName, style=dashed];
m18_278 -> m18_283  [color=darkseagreen4, key=1, label=qualifiedTypeName, style=dashed];
m18_278 -> m18_287  [color=darkseagreen4, key=1, label=qualifiedTypeName, style=dashed];
m18_278 -> m18_289  [color=darkseagreen4, key=1, label=qualifiedTypeName, style=dashed];
m18_300 -> m18_312  [color=darkseagreen4, key=1, label="out string", style=dashed];
m18_294 -> m18_312  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m18_255 -> m18_312  [color=darkseagreen4, key=1, label="out string", style=dashed];
m18_307 -> m18_312  [color=darkseagreen4, key=1, label="out object", style=dashed];
m18_260 -> m18_310  [color=darkseagreen4, key=1, label=specialProperty, style=dashed];
m18_256 -> m18_312  [color=darkseagreen4, key=1, label="out object", style=dashed];
m18_103 -> m18_108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_103 -> m18_109  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_106 -> m18_109  [color=darkseagreen4, key=1, label=writer, style=dashed];
m18_106 -> m18_110  [color=darkseagreen4, key=1, label=writer, style=dashed];
m18_423 -> m18_473  [color=green, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m18_423 -> m18_475  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m18_153 -> m18_333  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m18_153 -> m18_334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_153 -> m18_346  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_153 -> m18_347  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_153 -> m18_340  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_153 -> m18_342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_153 -> m18_344  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_153 -> m18_336  [color=darkseagreen4, key=1, label=object, style=dashed];
m18_153 -> m18_339  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_153 -> m18_341  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m18_153 -> m18_343  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m18_153 -> m18_351  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m18_335 -> m18_345  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m18_335 -> m18_346  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m18_335 -> m18_347  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m18_335 -> m18_349  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m18_335 -> m18_355  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m18_338 -> m18_341  [color=darkseagreen4, key=1, label=createdFromNonDefaultConstructor, style=dashed];
m18_338 -> m18_343  [color=darkseagreen4, key=1, label=createdFromNonDefaultConstructor, style=dashed];
m18_338 -> m18_346  [color=darkseagreen4, key=1, label=list, style=dashed];
m18_338 -> m18_347  [color=darkseagreen4, key=1, label=list, style=dashed];
m18_338 -> m18_348  [color=darkseagreen4, key=1, label=createdFromNonDefaultConstructor, style=dashed];
m18_338 -> m18_353  [color=darkseagreen4, key=1, label=list, style=dashed];
m18_338 -> m18_355  [color=darkseagreen4, key=1, label=list, style=dashed];
m18_338 -> m18_356  [color=darkseagreen4, key=1, label=list, style=dashed];
m18_338 -> m18_357  [color=darkseagreen4, key=1, label=list, style=dashed];
m18_154 -> m18_371  [color=darkseagreen4, key=1, label=object, style=dashed];
m18_154 -> m18_373  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m18_154 -> m18_374  [color=darkseagreen4, key=1, label=object, style=dashed];
m18_154 -> m18_376  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m18_154 -> m18_378  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m18_154 -> m18_379  [color=darkseagreen4, key=1, label=object, style=dashed];
m18_154 -> m18_380  [color=darkseagreen4, key=1, label=object, style=dashed];
m18_154 -> m18_382  [color=darkseagreen4, key=1, label=object, style=dashed];
m18_154 -> m18_383  [color=darkseagreen4, key=1, label=object, style=dashed];
m18_154 -> m18_384  [color=darkseagreen4, key=1, label=object, style=dashed];
m18_154 -> m18_385  [color=darkseagreen4, key=1, label=object, style=dashed];
m18_154 -> m18_386  [color=darkseagreen4, key=1, label=object, style=dashed];
m18_154 -> m18_388  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_154 -> m18_389  [color=darkseagreen4, key=1, label=object, style=dashed];
m18_377 -> m18_381  [color=darkseagreen4, key=1, label=primitiveContract, style=dashed];
m18_5 -> m18_9  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_5 -> m18_20  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_5 -> m18_23  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_5 -> m18_24  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_5 -> m18_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m18_15 -> m18_22  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_15 -> m18_24  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_18 -> m18_22  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_18 -> m18_24  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_4 -> m18_12  [color=darkseagreen4, key=1, label=objectType, style=dashed];
m18_4 -> m18_25  [color=darkseagreen4, key=1, label=objectType, style=dashed];
m18_47 -> m18_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_47 -> m18_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_47 -> m18_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_47 -> m18_61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_47 -> m18_54  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_47 -> m18_60  [color=darkseagreen4, key=1, label=bool, style=dashed];
m18_50 -> m18_52  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_50 -> m18_53  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_50 -> m18_54  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_50 -> m18_65  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_51 -> m18_57  [color=darkseagreen4, key=1, label=converter, style=dashed];
m18_58 -> m18_63  [color=darkseagreen4, key=1, label=deserializedValue, style=dashed];
m18_59 -> m18_63  [color=darkseagreen4, key=1, label=deserializedValue, style=dashed];
m18_948 -> m18_959  [color=green, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m18_948 -> m18_961  [color=green, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m18_948 -> m18_962  [color=green, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_73 -> m18_818  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m18_73 -> m18_821  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m18_819 -> m18_822  [color=darkseagreen4, key=1, label=value, style=dashed];
m18_815 -> m18_815  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<System.Reflection.ParameterInfo, object>", style=dashed];
m18_399 -> m18_404  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m18_399 -> m18_412  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m18_399 -> m18_414  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m18_399 -> m18_417  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m18_399 -> m18_408  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m18_399 -> m18_413  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m18_399 -> m18_416  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m18_404 -> m18_419  [color=green, key=1, label=useExistingValue, style=dashed];
m18_404 -> m18_404  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m18_404 -> m18_407  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m18_404 -> m18_408  [color=darkseagreen4, key=1, label=gottenCurrentValue, style=dashed];
m18_404 -> m18_412  [color=darkseagreen4, key=1, label=currentValue, style=dashed];
m18_410 -> m18_413  [color=darkseagreen4, key=1, label=value, style=dashed];
m18_411 -> m18_413  [color=darkseagreen4, key=1, label=value, style=dashed];
m18_409 -> m18_412  [color=darkseagreen4, key=1, label=currentValue, style=dashed];
m18_249 -> m18_896  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_249 -> m18_898  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m18_249 -> m18_902  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_249 -> m18_892  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_249 -> m18_904  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m18_249 -> m18_891  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m18_249 -> m18_893  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m18_249 -> m18_894  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m18_249 -> m18_900  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m18_890 -> m18_903  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m18_890 -> m18_906  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m18_899 -> m18_906  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m18_897 -> m18_906  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m18_905 -> m18_907  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m18_421 -> m18_446  [color=green, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m18_421 -> m18_430  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m18_421 -> m18_433  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m18_421 -> m18_435  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m18_421 -> m18_436  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m18_421 -> m18_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m18_421 -> m18_444  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m18_421 -> m18_451  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m18_421 -> m18_454  [color=darkseagreen4, key=1, label="ref Newtonsoft.Json.JsonConverter", style=dashed];
m18_432 -> m18_446  [color=green, key=1, label=tokenType, style=dashed];
m18_432 -> m18_436  [color=darkseagreen4, key=1, label=tokenType, style=dashed];
m18_432 -> m18_444  [color=darkseagreen4, key=1, label=tokenType, style=dashed];
m18_450 -> m18_454  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m18_452 -> m18_454  [color=darkseagreen4, key=1, label="ref Newtonsoft.Json.JsonConverter", style=dashed];
m18_426 -> m18_448  [color=darkseagreen4, key=1, label="out object", style=dashed];
m18_426 -> m18_454  [color=darkseagreen4, key=1, label="out object", style=dashed];
m18_437 -> m18_448  [color=darkseagreen4, key=1, label="out object", style=dashed];
m18_437 -> m18_454  [color=darkseagreen4, key=1, label="out object", style=dashed];
m18_437 -> m18_439  [color=darkseagreen4, key=1, label="out object", style=dashed];
m18_449 -> m18_454  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m18_441 -> m18_454  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m18_427 -> m18_454  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m18_427 -> m18_442  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m18_429 -> m18_454  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m18_438 -> m18_454  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m18_997 -> m18_446  [color=green, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_473  [color=green, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_732  [color=green, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_924  [color=green, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_931  [color=green, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_932  [color=green, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_404  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_412  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_79  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_81  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_85  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_87  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_118  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_121  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_123  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_129  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_136  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_139  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_144  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_192  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_195  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_197  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_198  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_209  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_213  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_217  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_231  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_241  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_244  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_245  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_263  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_267  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_272  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_273  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_277  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_279  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_290  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_291  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_296  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_301  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_306  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_326  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_333  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_346  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_347  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_415  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_416  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_435  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_444  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_462  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_463  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_464  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_471  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_487  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_503  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_516  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_517  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_518  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_522  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_523  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_524  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_530  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_531  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_551  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_559  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_560  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_568  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_569  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_576  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_577  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_587  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_601  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_602  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_623  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_624  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_636  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_637  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_643  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_647  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_653  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_665  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_666  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_673  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_674  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_681  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_682  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_697  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_702  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_703  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_704  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_714  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_718  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_719  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_743  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_744  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_751  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_752  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_760  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_761  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_772  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_773  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_777  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_797  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_817  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_818  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_820  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_821  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_835  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_848  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_849  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_850  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_896  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_898  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_902  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_908  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_911  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_919  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_920  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_921  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_928  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_930  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_934  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_935  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_943  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_944  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_945  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_977  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_978  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_983  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_984  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m18_997 -> m18_990  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m20_1779 -> m20_1781  [color=darkseagreen4, key=1, label=reference, style=dashed];
m20_1779 -> m20_1785  [color=darkseagreen4, key=1, label=reference, style=dashed];
m20_1782 -> m20_1784  [color=darkseagreen4, key=1, label=child, style=dashed];
m20_1782 -> m20_1785  [color=darkseagreen4, key=1, label=child, style=dashed];
m20_1786 -> m20_1790  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_1787 -> m20_1789  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_3199 -> m20_3208  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3200 -> m20_3202  [color=darkseagreen4, key=1, label=aa, style=dashed];
m20_3200 -> m20_3203  [color=darkseagreen4, key=1, label=aa, style=dashed];
m20_3200 -> m20_3204  [color=darkseagreen4, key=1, label=aa, style=dashed];
m20_3200 -> m20_3205  [color=darkseagreen4, key=1, label=aa, style=dashed];
m20_3200 -> m20_3206  [color=darkseagreen4, key=1, label=aa, style=dashed];
m20_2853 -> m20_2864  [color=darkseagreen4, key=1, label=errors, style=dashed];
m20_2853 -> m20_2857  [color=darkseagreen4, key=1, label=errors, style=dashed];
m20_2853 -> m20_2858  [color=darkseagreen4, key=1, label=errors, style=dashed];
m20_2853 -> m20_2859  [color=darkseagreen4, key=1, label=errors, style=dashed];
m20_2853 -> m20_2860  [color=darkseagreen4, key=1, label=errors, style=dashed];
m20_2854 -> m20_2864  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m20_1245 -> m20_1254  [color=darkseagreen4, key=1, label=wagePerson, style=dashed];
m20_1409 -> m20_1411  [color=darkseagreen4, key=1, label=newModelStateDictionary, style=dashed];
m20_3238 -> m20_3242  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3239 -> m20_3241  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_3245 -> m20_3249  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3246 -> m20_3248  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_2762 -> m20_2767  [color=darkseagreen4, key=1, label=person, style=dashed];
m20_2492 -> m20_2496  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_2493 -> m20_2495  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_1065 -> m20_1069  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_1066 -> m20_1068  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_2466 -> m20_2468  [color=darkseagreen4, key=1, label=values, style=dashed];
m20_2466 -> m20_2469  [color=darkseagreen4, key=1, label=values, style=dashed];
m20_2466 -> m20_2470  [color=darkseagreen4, key=1, label=values, style=dashed];
m20_2466 -> m20_2471  [color=darkseagreen4, key=1, label=values, style=dashed];
m20_2466 -> m20_2472  [color=darkseagreen4, key=1, label=values, style=dashed];
m20_2466 -> m20_2473  [color=darkseagreen4, key=1, label=values, style=dashed];
m20_2466 -> m20_2474  [color=darkseagreen4, key=1, label=values, style=dashed];
m20_2466 -> m20_2475  [color=darkseagreen4, key=1, label=values, style=dashed];
m20_1515 -> m20_1524  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m20_1517 -> m20_1520  [color=darkseagreen4, key=1, label=dateTimeOffsetText, style=dashed];
m20_1521 -> m20_1523  [color=darkseagreen4, key=1, label=o2, style=dashed];
m20_1521 -> m20_1524  [color=darkseagreen4, key=1, label=o2, style=dashed];
m20_1521 -> m20_1525  [color=darkseagreen4, key=1, label=o2, style=dashed];
m20_1521 -> m20_1526  [color=darkseagreen4, key=1, label=o2, style=dashed];
m20_1521 -> m20_1527  [color=darkseagreen4, key=1, label=o2, style=dashed];
m20_3482 -> m20_3484  [color=darkseagreen4, key=1, label=dic, style=dashed];
m20_3482 -> m20_3485  [color=darkseagreen4, key=1, label=dic, style=dashed];
m20_3482 -> m20_3486  [color=darkseagreen4, key=1, label=dic, style=dashed];
m20_1772 -> m20_1775  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_1040 -> m20_1042  [color=darkseagreen4, key=1, label=a, style=dashed];
m20_1040 -> m20_1043  [color=darkseagreen4, key=1, label=a, style=dashed];
m20_847 -> m20_849  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_2969 -> m20_2977  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_2969 -> m20_2980  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_2972 -> m20_2974  [color=darkseagreen4, key=1, label=o, style=dashed];
m20_2977 -> m20_2979  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_2976 -> m20_2980  [color=darkseagreen4, key=1, label=s, style=dashed];
m20_1986 -> m20_1986  [color=darkseagreen4, key=1, label=newStruct, style=dashed];
m20_1648 -> m20_1651  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m20_1648 -> m20_1652  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m20_1649 -> m20_1651  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_1992 -> m20_1994  [color=darkseagreen4, key=1, label=deserializeObject, style=dashed];
m20_2984 -> m20_2986  [color=darkseagreen4, key=1, label=exception, style=dashed];
m20_2984 -> m20_2987  [color=darkseagreen4, key=1, label=exception, style=dashed];
m20_1332 -> m20_1339  [color=darkseagreen4, key=1, label=c, style=dashed];
m20_1337 -> m20_1339  [color=darkseagreen4, key=1, label=ms, style=dashed];
m20_1093 -> m20_1097  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_1094 -> m20_1096  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_1827 -> m20_1829  [color=darkseagreen4, key=1, label=cc, style=dashed];
m20_1827 -> m20_1830  [color=darkseagreen4, key=1, label=cc, style=dashed];
m20_1079 -> m20_1083  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_1080 -> m20_1082  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_1072 -> m20_1076  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_1073 -> m20_1075  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_1938 -> m20_1940  [color=darkseagreen4, key=1, label=d, style=dashed];
m20_1938 -> m20_1941  [color=darkseagreen4, key=1, label=d, style=dashed];
m20_1938 -> m20_1942  [color=darkseagreen4, key=1, label=d, style=dashed];
m20_1807 -> m20_1809  [color=darkseagreen4, key=1, label=reference, style=dashed];
m20_1807 -> m20_1810  [color=darkseagreen4, key=1, label=reference, style=dashed];
m20_1807 -> m20_1814  [color=darkseagreen4, key=1, label=reference, style=dashed];
m20_1811 -> m20_1813  [color=darkseagreen4, key=1, label=child, style=dashed];
m20_1811 -> m20_1814  [color=darkseagreen4, key=1, label=child, style=dashed];
m20_1816 -> m20_1818  [color=darkseagreen4, key=1, label=result, style=dashed];
m20_1816 -> m20_1819  [color=darkseagreen4, key=1, label=result, style=dashed];
m20_2708 -> m20_2710  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_1148 -> m20_1150  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_1964 -> m20_1966  [color=darkseagreen4, key=1, label=z, style=dashed];
m20_1964 -> m20_1967  [color=darkseagreen4, key=1, label=z, style=dashed];
m20_2201 -> m20_2203  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_2201 -> m20_2204  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_1031 -> m20_1035  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_1032 -> m20_1034  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_1121 -> m20_1125  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_1122 -> m20_1124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_2932 -> m20_2937  [color=darkseagreen4, key=1, label=T, style=dashed];
m20_2934 -> m20_2937  [color=darkseagreen4, key=1, label=stringWriter, style=dashed];
m20_2934 -> m20_2938  [color=darkseagreen4, key=1, label=stringWriter, style=dashed];
m20_2935 -> m20_2937  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m20_3356 -> m20_3360  [color=darkseagreen4, key=1, label=dates, style=dashed];
m20_3358 -> m20_3360  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m20_3358 -> m20_3361  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m20_3358 -> m20_3362  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m20_3358 -> m20_3363  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m20_2224 -> m20_2226  [color=darkseagreen4, key=1, label=commentTestClass, style=dashed];
m20_2224 -> m20_2227  [color=darkseagreen4, key=1, label=commentTestClass, style=dashed];
m20_3188 -> m20_3190  [color=darkseagreen4, key=1, label=aa, style=dashed];
m20_3188 -> m20_3191  [color=darkseagreen4, key=1, label=aa, style=dashed];
m20_3188 -> m20_3192  [color=darkseagreen4, key=1, label=aa, style=dashed];
m20_3188 -> m20_3193  [color=darkseagreen4, key=1, label=aa, style=dashed];
m20_3188 -> m20_3194  [color=darkseagreen4, key=1, label=aa, style=dashed];
m20_3188 -> m20_3195  [color=darkseagreen4, key=1, label=aa, style=dashed];
m20_2287 -> m20_2289  [color=darkseagreen4, key=1, label=c1, style=dashed];
m20_2287 -> m20_2293  [color=darkseagreen4, key=1, label=c1, style=dashed];
m20_2287 -> m20_2294  [color=darkseagreen4, key=1, label=c1, style=dashed];
m20_2292 -> m20_2294  [color=darkseagreen4, key=1, label=c2, style=dashed];
m20_2292 -> m20_2295  [color=darkseagreen4, key=1, label=c2, style=dashed];
m20_2292 -> m20_2296  [color=darkseagreen4, key=1, label=c2, style=dashed];
m20_2620 -> m20_2622  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_999 -> m20_1001  [color=darkseagreen4, key=1, label=values, style=dashed];
m20_999 -> m20_1002  [color=darkseagreen4, key=1, label=values, style=dashed];
m20_999 -> m20_1003  [color=darkseagreen4, key=1, label=values, style=dashed];
m20_999 -> m20_1004  [color=darkseagreen4, key=1, label=values, style=dashed];
m20_961 -> m20_963  [color=darkseagreen4, key=1, label=content, style=dashed];
m20_961 -> m20_964  [color=darkseagreen4, key=1, label=content, style=dashed];
m20_961 -> m20_965  [color=darkseagreen4, key=1, label=content, style=dashed];
m20_2111 -> m20_2113  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m20_2115 -> m20_2117  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m20_1793 -> m20_1795  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_1160 -> m20_1162  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_2414 -> m20_2418  [color=darkseagreen4, key=1, label=c1, style=dashed];
m20_2414 -> m20_2419  [color=darkseagreen4, key=1, label=c1, style=dashed];
m20_2414 -> m20_2420  [color=darkseagreen4, key=1, label=c1, style=dashed];
m20_2414 -> m20_2421  [color=darkseagreen4, key=1, label=c1, style=dashed];
m20_2414 -> m20_2422  [color=darkseagreen4, key=1, label=c1, style=dashed];
m20_2417 -> m20_2419  [color=darkseagreen4, key=1, label=c2, style=dashed];
m20_2417 -> m20_2420  [color=darkseagreen4, key=1, label=c2, style=dashed];
m20_2417 -> m20_2421  [color=darkseagreen4, key=1, label=c2, style=dashed];
m20_2417 -> m20_2422  [color=darkseagreen4, key=1, label=c2, style=dashed];
m20_1233 -> m20_1235  [color=darkseagreen4, key=1, label=results, style=dashed];
m20_1234 -> m20_1237  [color=darkseagreen4, key=1, label=searchResults, style=dashed];
m20_1234 -> m20_1238  [color=darkseagreen4, key=1, label=searchResults, style=dashed];
m20_1234 -> m20_1239  [color=darkseagreen4, key=1, label=searchResults, style=dashed];
m20_1234 -> m20_1240  [color=darkseagreen4, key=1, label=searchResults, style=dashed];
m20_3369 -> m20_3372  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m20_1018 -> m20_1022  [color=darkseagreen4, key=1, label=products, style=dashed];
m20_1018 -> m20_1023  [color=darkseagreen4, key=1, label=products, style=dashed];
m20_271 -> m20_275  [color=darkseagreen4, key=1, label=r1, style=dashed];
m20_2005 -> m20_2007  [color=darkseagreen4, key=1, label=deserializeObject, style=dashed];
m20_2479 -> m20_2481  [color=darkseagreen4, key=1, label=values, style=dashed];
m20_2479 -> m20_2482  [color=darkseagreen4, key=1, label=values, style=dashed];
m20_2479 -> m20_2483  [color=darkseagreen4, key=1, label=values, style=dashed];
m20_2479 -> m20_2484  [color=darkseagreen4, key=1, label=values, style=dashed];
m20_2479 -> m20_2485  [color=darkseagreen4, key=1, label=values, style=dashed];
m20_2479 -> m20_2486  [color=darkseagreen4, key=1, label=values, style=dashed];
m20_2479 -> m20_2487  [color=darkseagreen4, key=1, label=values, style=dashed];
m20_2479 -> m20_2488  [color=darkseagreen4, key=1, label=values, style=dashed];
m20_2479 -> m20_2489  [color=darkseagreen4, key=1, label=values, style=dashed];
m20_2894 -> m20_2896  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m20_2894 -> m20_2897  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m20_2990 -> m20_2992  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_1796 -> m20_1798  [color=darkseagreen4, key=1, label=reference, style=dashed];
m20_1796 -> m20_1802  [color=darkseagreen4, key=1, label=reference, style=dashed];
m20_1799 -> m20_1801  [color=darkseagreen4, key=1, label=child, style=dashed];
m20_1799 -> m20_1802  [color=darkseagreen4, key=1, label=child, style=dashed];
m20_2994 -> m20_2999  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m20_2996 -> m20_2998  [color=darkseagreen4, key=1, label=reader, style=dashed];
m20_2996 -> m20_2999  [color=darkseagreen4, key=1, label=reader, style=dashed];
m20_3117 -> m20_3113  [color=darkseagreen4, key=1, label=obj, style=dashed];
m20_2941 -> m20_2944  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m20_2942 -> m20_2944  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m20_899 -> m20_901  [color=darkseagreen4, key=1, label=c, style=dashed];
m20_899 -> m20_902  [color=darkseagreen4, key=1, label=c, style=dashed];
m20_1847 -> m20_1849  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m20_1665 -> m20_1668  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m20_1665 -> m20_1669  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m20_1666 -> m20_1668  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_2786 -> m20_2789  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m20_281 -> m20_284  [color=darkseagreen4, key=1, label=dataContractResult, style=dashed];
m20_282 -> m20_284  [color=darkseagreen4, key=1, label=jsonNetResult, style=dashed];
m20_1166 -> m20_1168  [color=darkseagreen4, key=1, label=strings, style=dashed];
m20_1166 -> m20_1169  [color=darkseagreen4, key=1, label=strings, style=dashed];
m20_3475 -> m20_3477  [color=darkseagreen4, key=1, label=list, style=dashed];
m20_3475 -> m20_3478  [color=darkseagreen4, key=1, label=list, style=dashed];
m20_3475 -> m20_3479  [color=darkseagreen4, key=1, label=list, style=dashed];
m20_2513 -> m20_2519  [color=darkseagreen4, key=1, label=test, style=dashed];
m20_2514 -> m20_2519  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m20_2524 -> m20_2526  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m20_2518 -> m20_2520  [color=darkseagreen4, key=1, label=bsonWriter, style=dashed];
m20_2803 -> m20_2805  [color=darkseagreen4, key=1, label=writer, style=dashed];
m20_2803 -> m20_2806  [color=darkseagreen4, key=1, label=writer, style=dashed];
m20_2809 -> m20_2812  [color=darkseagreen4, key=1, label=a, style=dashed];
m20_1154 -> m20_1156  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_798 -> m20_800  [color=darkseagreen4, key=1, label=o, style=dashed];
m20_798 -> m20_801  [color=darkseagreen4, key=1, label=o, style=dashed];
m20_798 -> m20_802  [color=darkseagreen4, key=1, label=o, style=dashed];
m20_798 -> m20_803  [color=darkseagreen4, key=1, label=o, style=dashed];
m20_405 -> m20_407  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m20_405 -> m20_408  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m20_405 -> m20_409  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m20_405 -> m20_410  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m20_405 -> m20_411  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m20_136 -> m20_138  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m20_136 -> m20_139  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m20_136 -> m20_140  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m20_136 -> m20_141  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m20_136 -> m20_142  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m20_2718 -> m20_2720  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_3102 -> m20_3104  [color=darkseagreen4, key=1, label=l, style=dashed];
m20_758 -> m20_762  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_2456 -> m20_2458  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m20_2456 -> m20_2459  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m20_376 -> m20_380  [color=darkseagreen4, key=1, label=collection, style=dashed];
m20_376 -> m20_383  [color=darkseagreen4, key=1, label=collection, style=dashed];
m20_377 -> m20_380  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m20_379 -> m20_381  [color=darkseagreen4, key=1, label=sw, style=dashed];
m20_1750 -> m20_1753  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_1750 -> m20_1754  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_1750 -> m20_1755  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_3285 -> m20_3289  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3286 -> m20_3288  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_3032 -> m20_3032  [color=darkseagreen4, key=1, label=result, style=dashed];
m20_3033 -> m20_3033  [color=darkseagreen4, key=1, label=result, style=dashed];
m20_486 -> m20_490  [color=darkseagreen4, key=1, label=ts, style=dashed];
m20_2019 -> m20_2029  [color=darkseagreen4, key=1, label=expando, style=dashed];
m20_2019 -> m20_2031  [color=darkseagreen4, key=1, label=expando, style=dashed];
m20_2019 -> m20_2035  [color=darkseagreen4, key=1, label=expando, style=dashed];
m20_2019 -> m20_2037  [color=darkseagreen4, key=1, label=expando, style=dashed];
m20_2027 -> m20_2029  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m20_2027 -> m20_2030  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m20_2027 -> m20_2031  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m20_2027 -> m20_2032  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m20_2033 -> m20_2035  [color=darkseagreen4, key=1, label=o, style=dashed];
m20_2033 -> m20_2036  [color=darkseagreen4, key=1, label=o, style=dashed];
m20_2033 -> m20_2037  [color=darkseagreen4, key=1, label=o, style=dashed];
m20_2093 -> m20_2095  [color=darkseagreen4, key=1, label=meh, style=dashed];
m20_3218 -> m20_3222  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3219 -> m20_3221  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_3292 -> m20_3298  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3293 -> m20_3295  [color=darkseagreen4, key=1, label=aa, style=dashed];
m20_3293 -> m20_3296  [color=darkseagreen4, key=1, label=aa, style=dashed];
m20_1873 -> m20_1875  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m20_1873 -> m20_1876  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m20_1873 -> m20_1877  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m20_1873 -> m20_1878  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m20_1873 -> m20_1879  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m20_1886 -> m20_1888  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m20_1886 -> m20_1889  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m20_1886 -> m20_1890  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m20_1886 -> m20_1891  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m20_1886 -> m20_1892  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m20_1886 -> m20_1893  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m20_1971 -> m20_1974  [color=darkseagreen4, key=1, label=classRef, style=dashed];
m20_1974 -> m20_1978  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_1973 -> m20_1979  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_1455 -> m20_1457  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m20_1455 -> m20_1458  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m20_1455 -> m20_1459  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m20_1455 -> m20_1460  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m20_1455 -> m20_1461  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m20_1455 -> m20_1462  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m20_1455 -> m20_1463  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m20_1455 -> m20_1464  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m20_1455 -> m20_1465  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m20_1455 -> m20_1466  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m20_1455 -> m20_1467  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m20_1455 -> m20_1468  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m20_1455 -> m20_1469  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m20_1455 -> m20_1470  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m20_1455 -> m20_1471  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m20_1455 -> m20_1472  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m20_1455 -> m20_1473  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m20_3450 -> m20_3452  [color=darkseagreen4, key=1, label=l, style=dashed];
m20_3450 -> m20_3453  [color=darkseagreen4, key=1, label=l, style=dashed];
m20_2922 -> m20_2924  [color=darkseagreen4, key=1, label=testObj, style=dashed];
m20_2923 -> m20_2925  [color=darkseagreen4, key=1, label=objDeserialized, style=dashed];
m20_1349 -> m20_1352  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m20_1353 -> m20_1353  [color=darkseagreen4, key=1, label=entry, style=dashed];
m20_921 -> m20_923  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m20_921 -> m20_924  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m20_921 -> m20_925  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m20_921 -> m20_926  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m20_921 -> m20_927  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m20_2238 -> m20_2240  [color=darkseagreen4, key=1, label=withoutParameterisedConstructor, style=dashed];
m20_661 -> m20_663  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m20_661 -> m20_664  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m20_661 -> m20_665  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m20_661 -> m20_666  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m20_661 -> m20_667  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m20_661 -> m20_668  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m20_2178 -> m20_2180  [color=darkseagreen4, key=1, label=c, style=dashed];
m20_2178 -> m20_2181  [color=darkseagreen4, key=1, label=c, style=dashed];
m20_906 -> m20_908  [color=darkseagreen4, key=1, label=c, style=dashed];
m20_906 -> m20_909  [color=darkseagreen4, key=1, label=c, style=dashed];
m20_906 -> m20_910  [color=darkseagreen4, key=1, label=c, style=dashed];
m20_906 -> m20_911  [color=darkseagreen4, key=1, label=c, style=dashed];
m20_906 -> m20_912  [color=darkseagreen4, key=1, label=c, style=dashed];
m20_906 -> m20_913  [color=darkseagreen4, key=1, label=c, style=dashed];
m20_906 -> m20_914  [color=darkseagreen4, key=1, label=c, style=dashed];
m20_906 -> m20_915  [color=darkseagreen4, key=1, label=c, style=dashed];
m20_906 -> m20_916  [color=darkseagreen4, key=1, label=c, style=dashed];
m20_739 -> m20_748  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_740 -> m20_742  [color=darkseagreen4, key=1, label=aa, style=dashed];
m20_740 -> m20_743  [color=darkseagreen4, key=1, label=aa, style=dashed];
m20_740 -> m20_744  [color=darkseagreen4, key=1, label=aa, style=dashed];
m20_740 -> m20_745  [color=darkseagreen4, key=1, label=aa, style=dashed];
m20_740 -> m20_746  [color=darkseagreen4, key=1, label=aa, style=dashed];
m20_2702 -> m20_2704  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_510 -> m20_513  [color=darkseagreen4, key=1, label=name, style=dashed];
m20_510 -> m20_514  [color=darkseagreen4, key=1, label=name, style=dashed];
m20_511 -> m20_513  [color=darkseagreen4, key=1, label=p1, style=dashed];
m20_512 -> m20_514  [color=darkseagreen4, key=1, label=p2, style=dashed];
m20_517 -> m20_519  [color=darkseagreen4, key=1, label=newName, style=dashed];
m20_517 -> m20_520  [color=darkseagreen4, key=1, label=newName, style=dashed];
m20_517 -> m20_521  [color=darkseagreen4, key=1, label=newName, style=dashed];
m20_3301 -> m20_3309  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3302 -> m20_3304  [color=darkseagreen4, key=1, label=aa, style=dashed];
m20_3302 -> m20_3305  [color=darkseagreen4, key=1, label=aa, style=dashed];
m20_3302 -> m20_3306  [color=darkseagreen4, key=1, label=aa, style=dashed];
m20_3302 -> m20_3307  [color=darkseagreen4, key=1, label=aa, style=dashed];
m20_3211 -> m20_3215  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3212 -> m20_3214  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_715 -> m20_717  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_1086 -> m20_1090  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_1087 -> m20_1089  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_427 -> m20_429  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m20_3461 -> m20_3463  [color=darkseagreen4, key=1, label=list, style=dashed];
m20_3461 -> m20_3464  [color=darkseagreen4, key=1, label=list, style=dashed];
m20_3461 -> m20_3465  [color=darkseagreen4, key=1, label=list, style=dashed];
m20_622 -> m20_624  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_677 -> m20_680  [color=darkseagreen4, key=1, label=boolRef, style=dashed];
m20_683 -> m20_686  [color=darkseagreen4, key=1, label=jsonSerializerTestRef, style=dashed];
m20_120 -> m20_123  [color=darkseagreen4, key=1, label=store, style=dashed];
m20_120 -> m20_124  [color=darkseagreen4, key=1, label=store, style=dashed];
m20_121 -> m20_125  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m20_122 -> m20_124  [color=darkseagreen4, key=1, label=deserializedStore, style=dashed];
m20_2579 -> m20_2581  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_1302 -> m20_1304  [color=darkseagreen4, key=1, label=dic, style=dashed];
m20_1302 -> m20_1305  [color=darkseagreen4, key=1, label=dic, style=dashed];
m20_1302 -> m20_1306  [color=darkseagreen4, key=1, label=dic, style=dashed];
m20_839 -> m20_841  [color=darkseagreen4, key=1, label=o, style=dashed];
m20_839 -> m20_842  [color=darkseagreen4, key=1, label=o, style=dashed];
m20_839 -> m20_843  [color=darkseagreen4, key=1, label=o, style=dashed];
m20_1693 -> m20_1695  [color=darkseagreen4, key=1, label=c, style=dashed];
m20_1697 -> m20_1699  [color=darkseagreen4, key=1, label=newValue, style=dashed];
m20_57 -> m20_59  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_415 -> m20_417  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m20_415 -> m20_418  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m20_415 -> m20_419  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m20_415 -> m20_420  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m20_415 -> m20_421  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m20_1722 -> m20_1724  [color=darkseagreen4, key=1, label=result, style=dashed];
m20_1722 -> m20_1725  [color=darkseagreen4, key=1, label=result, style=dashed];
m20_1722 -> m20_1726  [color=darkseagreen4, key=1, label=result, style=dashed];
m20_1722 -> m20_1727  [color=darkseagreen4, key=1, label=result, style=dashed];
m20_353 -> m20_355  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m20_353 -> m20_356  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m20_353 -> m20_357  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m20_353 -> m20_358  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m20_353 -> m20_359  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m20_353 -> m20_360  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m20_1051 -> m20_1053  [color=darkseagreen4, key=1, label=l, style=dashed];
m20_1051 -> m20_1054  [color=darkseagreen4, key=1, label=l, style=dashed];
m20_1051 -> m20_1055  [color=darkseagreen4, key=1, label=l, style=dashed];
m20_2303 -> m20_2305  [color=darkseagreen4, key=1, label=c1, style=dashed];
m20_2303 -> m20_2309  [color=darkseagreen4, key=1, label=c1, style=dashed];
m20_2303 -> m20_2310  [color=darkseagreen4, key=1, label=c1, style=dashed];
m20_2308 -> m20_2310  [color=darkseagreen4, key=1, label=c2, style=dashed];
m20_2308 -> m20_2311  [color=darkseagreen4, key=1, label=c2, style=dashed];
m20_2308 -> m20_2312  [color=darkseagreen4, key=1, label=c2, style=dashed];
m20_2839 -> m20_2849  [color=darkseagreen4, key=1, label=errors, style=dashed];
m20_2839 -> m20_2843  [color=darkseagreen4, key=1, label=errors, style=dashed];
m20_2839 -> m20_2844  [color=darkseagreen4, key=1, label=errors, style=dashed];
m20_2839 -> m20_2845  [color=darkseagreen4, key=1, label=errors, style=dashed];
m20_2839 -> m20_2846  [color=darkseagreen4, key=1, label=errors, style=dashed];
m20_2840 -> m20_2849  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m20_50 -> m20_86  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_50 -> m20_92  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_84 -> m20_86  [color=darkseagreen4, key=1, label=ms, style=dashed];
m20_89 -> m20_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_89 -> m20_93  [color=darkseagreen4, key=1, label=dataContractJson, style=dashed];
m20_89 -> m20_95  [color=darkseagreen4, key=1, label=dataContractJson, style=dashed];
m20_89 -> m20_96  [color=darkseagreen4, key=1, label=dataContractJson, style=dashed];
m20_91 -> m20_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_91 -> m20_94  [color=darkseagreen4, key=1, label=jsonNetJson, style=dashed];
m20_91 -> m20_95  [color=darkseagreen4, key=1, label=jsonNetJson, style=dashed];
m20_91 -> m20_97  [color=darkseagreen4, key=1, label=jsonNetJson, style=dashed];
m20_91 -> m20_98  [color=darkseagreen4, key=1, label=jsonNetJson, style=dashed];
m20_97 -> m20_97  [color=darkseagreen4, key=1, label=property, style=dashed];
m20_497 -> m20_499  [color=darkseagreen4, key=1, label=c, style=dashed];
m20_723 -> m20_725  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_1495 -> m20_1504  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m20_1497 -> m20_1500  [color=darkseagreen4, key=1, label=dateTimeOffsetText, style=dashed];
m20_1501 -> m20_1503  [color=darkseagreen4, key=1, label=o2, style=dashed];
m20_1501 -> m20_1504  [color=darkseagreen4, key=1, label=o2, style=dashed];
m20_1501 -> m20_1505  [color=darkseagreen4, key=1, label=o2, style=dashed];
m20_1501 -> m20_1506  [color=darkseagreen4, key=1, label=o2, style=dashed];
m20_1501 -> m20_1507  [color=darkseagreen4, key=1, label=o2, style=dashed];
m20_872 -> m20_874  [color=darkseagreen4, key=1, label=newOptInClass, style=dashed];
m20_872 -> m20_875  [color=darkseagreen4, key=1, label=newOptInClass, style=dashed];
m20_364 -> m20_371  [color=darkseagreen4, key=1, label=d, style=dashed];
m20_708 -> m20_710  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_3225 -> m20_3235  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3226 -> m20_3228  [color=darkseagreen4, key=1, label=aa, style=dashed];
m20_3226 -> m20_3229  [color=darkseagreen4, key=1, label=aa, style=dashed];
m20_3226 -> m20_3230  [color=darkseagreen4, key=1, label=aa, style=dashed];
m20_3226 -> m20_3231  [color=darkseagreen4, key=1, label=aa, style=dashed];
m20_3226 -> m20_3232  [color=darkseagreen4, key=1, label=aa, style=dashed];
m20_3226 -> m20_3233  [color=darkseagreen4, key=1, label=aa, style=dashed];
m20_2500 -> m20_2503  [color=darkseagreen4, key=1, label=uri, style=dashed];
m20_939 -> m20_941  [color=darkseagreen4, key=1, label=uri, style=dashed];
m20_939 -> m20_943  [color=darkseagreen4, key=1, label=uri, style=dashed];
m20_2125 -> m20_2129  [color=darkseagreen4, key=1, label=response, style=dashed];
m20_2127 -> m20_2129  [color=darkseagreen4, key=1, label=deserializedResponse, style=dashed];
m20_292 -> m20_298  [color=darkseagreen4, key=1, label=javaScriptSerializerResult, style=dashed];
m20_294 -> m20_297  [color=darkseagreen4, key=1, label=dataContractResult, style=dashed];
m20_295 -> m20_297  [color=darkseagreen4, key=1, label=jsonNetResult, style=dashed];
m20_295 -> m20_298  [color=darkseagreen4, key=1, label=jsonNetResult, style=dashed];
m20_2254 -> m20_2257  [color=darkseagreen4, key=1, label=cc, style=dashed];
m20_2255 -> m20_2257  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m20_1008 -> m20_1011  [color=darkseagreen4, key=1, label=p1, style=dashed];
m20_1009 -> m20_1012  [color=darkseagreen4, key=1, label=p2, style=dashed];
m20_1010 -> m20_1012  [color=darkseagreen4, key=1, label=products, style=dashed];
m20_577 -> m20_579  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_702 -> m20_704  [color=darkseagreen4, key=1, label=c, style=dashed];
m20_702 -> m20_705  [color=darkseagreen4, key=1, label=c, style=dashed];
m20_2613 -> m20_2615  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_2363 -> m20_2365  [color=darkseagreen4, key=1, label=r, style=dashed];
m20_2363 -> m20_2366  [color=darkseagreen4, key=1, label=r, style=dashed];
m20_2363 -> m20_2367  [color=darkseagreen4, key=1, label=r, style=dashed];
m20_2363 -> m20_2368  [color=darkseagreen4, key=1, label=r, style=dashed];
m20_2823 -> m20_2834  [color=darkseagreen4, key=1, label=errors, style=dashed];
m20_2823 -> m20_2827  [color=darkseagreen4, key=1, label=errors, style=dashed];
m20_2823 -> m20_2828  [color=darkseagreen4, key=1, label=errors, style=dashed];
m20_2823 -> m20_2829  [color=darkseagreen4, key=1, label=errors, style=dashed];
m20_2823 -> m20_2830  [color=darkseagreen4, key=1, label=errors, style=dashed];
m20_2823 -> m20_2831  [color=darkseagreen4, key=1, label=errors, style=dashed];
m20_2824 -> m20_2834  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m20_2638 -> m20_2640  [color=darkseagreen4, key=1, label=actual, style=dashed];
m20_976 -> m20_978  [color=darkseagreen4, key=1, label=o, style=dashed];
m20_976 -> m20_979  [color=darkseagreen4, key=1, label=o, style=dashed];
m20_976 -> m20_980  [color=darkseagreen4, key=1, label=o, style=dashed];
m20_976 -> m20_981  [color=darkseagreen4, key=1, label=o, style=dashed];
m20_2207 -> m20_2209  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_1262 -> m20_1264  [color=darkseagreen4, key=1, label=d, style=dashed];
m20_1262 -> m20_1265  [color=darkseagreen4, key=1, label=d, style=dashed];
m20_1262 -> m20_1266  [color=darkseagreen4, key=1, label=d, style=dashed];
m20_1262 -> m20_1267  [color=darkseagreen4, key=1, label=d, style=dashed];
m20_1262 -> m20_1268  [color=darkseagreen4, key=1, label=d, style=dashed];
m20_1262 -> m20_1269  [color=darkseagreen4, key=1, label=d, style=dashed];
m20_1262 -> m20_1270  [color=darkseagreen4, key=1, label=d, style=dashed];
m20_1262 -> m20_1271  [color=darkseagreen4, key=1, label=d, style=dashed];
m20_1679 -> m20_1683  [color=darkseagreen4, key=1, label=s, style=dashed];
m20_1679 -> m20_1686  [color=darkseagreen4, key=1, label=s, style=dashed];
m20_1682 -> m20_1684  [color=darkseagreen4, key=1, label=d1, style=dashed];
m20_1685 -> m20_1687  [color=darkseagreen4, key=1, label=d2, style=dashed];
m20_651 -> m20_653  [color=darkseagreen4, key=1, label=personRaw, style=dashed];
m20_651 -> m20_654  [color=darkseagreen4, key=1, label=personRaw, style=dashed];
m20_2072 -> m20_2074  [color=darkseagreen4, key=1, label=obj, style=dashed];
m20_2072 -> m20_2075  [color=darkseagreen4, key=1, label=obj, style=dashed];
m20_2507 -> m20_2510  [color=darkseagreen4, key=1, label=uri, style=dashed];
m20_3068 -> m20_3072  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3069 -> m20_3071  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_3414 -> m20_3417  [color=darkseagreen4, key=1, label=s1, style=dashed];
m20_3414 -> m20_3418  [color=darkseagreen4, key=1, label=s1, style=dashed];
m20_3416 -> m20_3419  [color=darkseagreen4, key=1, label=s2, style=dashed];
m20_3567 -> m20_3569  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m20_3569 -> m20_3569  [color=darkseagreen4, key=1, label=id, style=dashed];
m20_2271 -> m20_2273  [color=darkseagreen4, key=1, label=result, style=dashed];
m20_2912 -> m20_2914  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m20_2912 -> m20_2915  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m20_1107 -> m20_1111  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_1108 -> m20_1110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_3387 -> m20_3389  [color=darkseagreen4, key=1, label=floats, style=dashed];
m20_3387 -> m20_3390  [color=darkseagreen4, key=1, label=floats, style=dashed];
m20_3391 -> m20_3393  [color=darkseagreen4, key=1, label=doubles, style=dashed];
m20_3391 -> m20_3394  [color=darkseagreen4, key=1, label=doubles, style=dashed];
m20_199 -> m20_201  [color=darkseagreen4, key=1, label=c, style=dashed];
m20_433 -> m20_435  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m20_433 -> m20_436  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m20_433 -> m20_437  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m20_439 -> m20_441  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m20_439 -> m20_442  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m20_439 -> m20_443  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m20_439 -> m20_444  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m20_439 -> m20_445  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m20_439 -> m20_446  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m20_1224 -> m20_1226  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_2647 -> m20_2649  [color=darkseagreen4, key=1, label=dict, style=dashed];
m20_3535 -> m20_3539  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_3406 -> m20_3408  [color=darkseagreen4, key=1, label=c2, style=dashed];
m20_3406 -> m20_3409  [color=darkseagreen4, key=1, label=c2, style=dashed];
m20_3406 -> m20_3410  [color=darkseagreen4, key=1, label=c2, style=dashed];
m20_3406 -> m20_3411  [color=darkseagreen4, key=1, label=c2, style=dashed];
m20_1183 -> m20_1188  [color=darkseagreen4, key=1, label=structTest, style=dashed];
m20_1184 -> m20_1186  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_1188 -> m20_1188  [color=darkseagreen4, key=1, label=structTest, style=dashed];
m20_1188 -> m20_1190  [color=darkseagreen4, key=1, label=structTest, style=dashed];
m20_1190 -> m20_1190  [color=darkseagreen4, key=1, label=structTest, style=dashed];
m20_1609 -> m20_1616  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m20_1609 -> m20_1617  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m20_1612 -> m20_1614  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_1615 -> m20_1617  [color=darkseagreen4, key=1, label=newTestObject, style=dashed];
m20_1615 -> m20_1618  [color=darkseagreen4, key=1, label=newTestObject, style=dashed];
m20_1317 -> m20_1317  [color=darkseagreen4, key=1, label=pair, style=dashed];
m20_2903 -> m20_2905  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m20_2903 -> m20_2906  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m20_2164 -> m20_2166  [color=darkseagreen4, key=1, label=c, style=dashed];
m20_238 -> m20_244  [color=darkseagreen4, key=1, label=test, style=dashed];
m20_238 -> m20_245  [color=darkseagreen4, key=1, label=test, style=dashed];
m20_243 -> m20_245  [color=darkseagreen4, key=1, label=test2, style=dashed];
m20_2393 -> m20_2395  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m20_3278 -> m20_3282  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3279 -> m20_3281  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_3468 -> m20_3470  [color=darkseagreen4, key=1, label=list, style=dashed];
m20_3468 -> m20_3471  [color=darkseagreen4, key=1, label=list, style=dashed];
m20_3468 -> m20_3472  [color=darkseagreen4, key=1, label=list, style=dashed];
m20_1702 -> m20_1704  [color=darkseagreen4, key=1, label=list, style=dashed];
m20_1707 -> m20_1709  [color=darkseagreen4, key=1, label=result, style=dashed];
m20_1707 -> m20_1710  [color=darkseagreen4, key=1, label=result, style=dashed];
m20_1707 -> m20_1711  [color=darkseagreen4, key=1, label=result, style=dashed];
m20_1707 -> m20_1712  [color=darkseagreen4, key=1, label=result, style=dashed];
m20_193 -> m20_195  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_1141 -> m20_1143  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_2674 -> m20_2677  [color=darkseagreen4, key=1, label=dict, style=dashed];
m20_2560 -> m20_2563  [color=darkseagreen4, key=1, label=d1, style=dashed];
m20_2560 -> m20_2564  [color=darkseagreen4, key=1, label=d1, style=dashed];
m20_2562 -> m20_2564  [color=darkseagreen4, key=1, label=d2, style=dashed];
m20_1552 -> m20_1554  [color=darkseagreen4, key=1, label=myA, style=dashed];
m20_1552 -> m20_1555  [color=darkseagreen4, key=1, label=myA, style=dashed];
m20_1552 -> m20_1556  [color=darkseagreen4, key=1, label=myA, style=dashed];
m20_1552 -> m20_1557  [color=darkseagreen4, key=1, label=myA, style=dashed];
m20_1552 -> m20_1558  [color=darkseagreen4, key=1, label=myA, style=dashed];
m20_1552 -> m20_1559  [color=darkseagreen4, key=1, label=myA, style=dashed];
m20_1552 -> m20_1560  [color=darkseagreen4, key=1, label=myA, style=dashed];
m20_1561 -> m20_1563  [color=darkseagreen4, key=1, label=myB, style=dashed];
m20_1561 -> m20_1564  [color=darkseagreen4, key=1, label=myB, style=dashed];
m20_1561 -> m20_1565  [color=darkseagreen4, key=1, label=myB, style=dashed];
m20_1561 -> m20_1566  [color=darkseagreen4, key=1, label=myB, style=dashed];
m20_1561 -> m20_1567  [color=darkseagreen4, key=1, label=myB, style=dashed];
m20_1561 -> m20_1568  [color=darkseagreen4, key=1, label=myB, style=dashed];
m20_1561 -> m20_1569  [color=darkseagreen4, key=1, label=myB, style=dashed];
m20_1561 -> m20_1570  [color=darkseagreen4, key=1, label=myB, style=dashed];
m20_1561 -> m20_1571  [color=darkseagreen4, key=1, label=myB, style=dashed];
m20_1561 -> m20_1572  [color=darkseagreen4, key=1, label=myB, style=dashed];
m20_1561 -> m20_1573  [color=darkseagreen4, key=1, label=myB, style=dashed];
m20_1561 -> m20_1574  [color=darkseagreen4, key=1, label=myB, style=dashed];
m20_1561 -> m20_1575  [color=darkseagreen4, key=1, label=myB, style=dashed];
m20_1561 -> m20_1576  [color=darkseagreen4, key=1, label=myB, style=dashed];
m20_1561 -> m20_1577  [color=darkseagreen4, key=1, label=myB, style=dashed];
m20_1561 -> m20_1578  [color=darkseagreen4, key=1, label=myB, style=dashed];
m20_1561 -> m20_1579  [color=darkseagreen4, key=1, label=myB, style=dashed];
m20_2885 -> m20_2887  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m20_2885 -> m20_2888  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m20_553 -> m20_558  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m20_553 -> m20_559  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m20_557 -> m20_559  [color=darkseagreen4, key=1, label=m2, style=dashed];
m20_593 -> m20_598  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m20_593 -> m20_599  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m20_597 -> m20_599  [color=darkseagreen4, key=1, label=m2, style=dashed];
m20_1201 -> m20_1203  [color=darkseagreen4, key=1, label=newFoo, style=dashed];
m20_1201 -> m20_1204  [color=darkseagreen4, key=1, label=newFoo, style=dashed];
m20_1201 -> m20_1205  [color=darkseagreen4, key=1, label=newFoo, style=dashed];
m20_155 -> m20_166  [color=darkseagreen4, key=1, label=dateValue, style=dashed];
m20_156 -> m20_161  [color=darkseagreen4, key=1, label=testDictionary, style=dashed];
m20_159 -> m20_161  [color=darkseagreen4, key=1, label=ms, style=dashed];
m20_969 -> m20_971  [color=darkseagreen4, key=1, label=r, style=dashed];
m20_969 -> m20_972  [color=darkseagreen4, key=1, label=r, style=dashed];
m20_3596 -> m20_3599  [color=darkseagreen4, key=1, label=s, style=dashed];
m20_1734 -> m20_1737  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m20_1734 -> m20_1738  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m20_1734 -> m20_1741  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m20_1736 -> m20_1740  [color=darkseagreen4, key=1, label=newStrings, style=dashed];
m20_1736 -> m20_1742  [color=darkseagreen4, key=1, label=newStrings, style=dashed];
m20_2735 -> m20_2737  [color=darkseagreen4, key=1, label=c, style=dashed];
m20_2735 -> m20_2738  [color=darkseagreen4, key=1, label=c, style=dashed];
m20_2735 -> m20_2739  [color=darkseagreen4, key=1, label=c, style=dashed];
m20_2740 -> m20_2742  [color=darkseagreen4, key=1, label=c2, style=dashed];
m20_2740 -> m20_2743  [color=darkseagreen4, key=1, label=c2, style=dashed];
m20_2740 -> m20_2744  [color=darkseagreen4, key=1, label=c2, style=dashed];
m20_2592 -> m20_2596  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_2593 -> m20_2595  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_3398 -> m20_3401  [color=darkseagreen4, key=1, label=expected, style=dashed];
m20_3398 -> m20_3402  [color=darkseagreen4, key=1, label=expected, style=dashed];
m20_3400 -> m20_3402  [color=darkseagreen4, key=1, label=actual, style=dashed];
m20_340 -> m20_342  [color=darkseagreen4, key=1, label=values, style=dashed];
m20_340 -> m20_346  [color=darkseagreen4, key=1, label=values, style=dashed];
m20_528 -> m20_530  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m20_528 -> m20_531  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m20_1177 -> m20_1179  [color=darkseagreen4, key=1, label=c2, style=dashed];
m20_2607 -> m20_2610  [color=darkseagreen4, key=1, label=w, style=dashed];
m20_1100 -> m20_1104  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_1101 -> m20_1103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_170 -> m20_176  [color=darkseagreen4, key=1, label=executorObject, style=dashed];
m20_175 -> m20_177  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m20_175 -> m20_178  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m20_175 -> m20_179  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m20_175 -> m20_180  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m20_310 -> m20_313  [color=darkseagreen4, key=1, label=testDates, style=dashed];
m20_311 -> m20_313  [color=darkseagreen4, key=1, label=ms, style=dashed];
m20_311 -> m20_314  [color=darkseagreen4, key=1, label=ms, style=dashed];
m20_316 -> m20_318  [color=darkseagreen4, key=1, label=expected, style=dashed];
m20_3377 -> m20_3380  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3377 -> m20_3383  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3380 -> m20_3382  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_3150 -> m20_3152  [color=darkseagreen4, key=1, label=c2, style=dashed];
m20_3150 -> m20_3153  [color=darkseagreen4, key=1, label=c2, style=dashed];
m20_3150 -> m20_3154  [color=darkseagreen4, key=1, label=c2, style=dashed];
m20_3150 -> m20_3155  [color=darkseagreen4, key=1, label=c2, style=dashed];
m20_3150 -> m20_3156  [color=darkseagreen4, key=1, label=c2, style=dashed];
m20_3150 -> m20_3157  [color=darkseagreen4, key=1, label=c2, style=dashed];
m20_1114 -> m20_1118  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_1115 -> m20_1117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_772 -> m20_775  [color=darkseagreen4, key=1, label=defaultJson, style=dashed];
m20_773 -> m20_776  [color=darkseagreen4, key=1, label=isoJson, style=dashed];
m20_774 -> m20_777  [color=darkseagreen4, key=1, label=javascriptJson, style=dashed];
m20_584 -> m20_589  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m20_584 -> m20_590  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m20_588 -> m20_590  [color=darkseagreen4, key=1, label=m2, style=dashed];
m20_781 -> m20_789  [color=darkseagreen4, key=1, label=o, style=dashed];
m20_781 -> m20_790  [color=darkseagreen4, key=1, label=o, style=dashed];
m20_781 -> m20_791  [color=darkseagreen4, key=1, label=o, style=dashed];
m20_787 -> m20_789  [color=darkseagreen4, key=1, label=deserializedObject, style=dashed];
m20_787 -> m20_790  [color=darkseagreen4, key=1, label=deserializedObject, style=dashed];
m20_787 -> m20_791  [color=darkseagreen4, key=1, label=deserializedObject, style=dashed];
m20_148 -> m20_150  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_148 -> m20_151  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_695 -> m20_697  [color=darkseagreen4, key=1, label=c2, style=dashed];
m20_3489 -> m20_3491  [color=darkseagreen4, key=1, label=dic, style=dashed];
m20_3489 -> m20_3492  [color=darkseagreen4, key=1, label=dic, style=dashed];
m20_2437 -> m20_2440  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_2439 -> m20_2441  [color=darkseagreen4, key=1, label=jw, style=dashed];
m20_1382 -> m20_1385  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m20_3548 -> m20_3550  [color=darkseagreen4, key=1, label=list, style=dashed];
m20_3548 -> m20_3551  [color=darkseagreen4, key=1, label=list, style=dashed];
m20_3548 -> m20_3552  [color=darkseagreen4, key=1, label=list, style=dashed];
m20_3252 -> m20_3256  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3253 -> m20_3255  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_564 -> m20_569  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m20_564 -> m20_570  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m20_568 -> m20_570  [color=darkseagreen4, key=1, label=m2, style=dashed];
m20_1834 -> m20_1836  [color=darkseagreen4, key=1, label=dic, style=dashed];
m20_2724 -> m20_2726  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_2696 -> m20_2698  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_1129 -> m20_1133  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_1130 -> m20_1132  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_504 -> m20_506  [color=darkseagreen4, key=1, label=o, style=dashed];
m20_504 -> m20_507  [color=darkseagreen4, key=1, label=o, style=dashed];
m20_2098 -> m20_3663  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", style=dashed];
m20_2187 -> m20_2189  [color=darkseagreen4, key=1, label=c2, style=dashed];
m20_2187 -> m20_2190  [color=darkseagreen4, key=1, label=c2, style=dashed];
m20_932 -> m20_934  [color=darkseagreen4, key=1, label=s, style=dashed];
m20_932 -> m20_935  [color=darkseagreen4, key=1, label=s, style=dashed];
m20_932 -> m20_936  [color=darkseagreen4, key=1, label=s, style=dashed];
m20_2429 -> m20_2431  [color=darkseagreen4, key=1, label=v2, style=dashed];
m20_2429 -> m20_2432  [color=darkseagreen4, key=1, label=v2, style=dashed];
m20_2429 -> m20_2433  [color=darkseagreen4, key=1, label=v2, style=dashed];
m20_257 -> m20_260  [color=darkseagreen4, key=1, label=a1, style=dashed];
m20_258 -> m20_261  [color=darkseagreen4, key=1, label=a2, style=dashed];
m20_259 -> m20_261  [color=darkseagreen4, key=1, label=articles1, style=dashed];
m20_259 -> m20_264  [color=darkseagreen4, key=1, label=articles1, style=dashed];
m20_259 -> m20_265  [color=darkseagreen4, key=1, label=articles1, style=dashed];
m20_263 -> m20_265  [color=darkseagreen4, key=1, label=articles2, style=dashed];
m20_249 -> m20_252  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_2380 -> m20_2383  [color=darkseagreen4, key=1, label=classWithException, style=dashed];
m20_3334 -> m20_3334  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m20_3335 -> m20_3335  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m20_1947 -> m20_1949  [color=darkseagreen4, key=1, label=d, style=dashed];
m20_1947 -> m20_1950  [color=darkseagreen4, key=1, label=d, style=dashed];
m20_1947 -> m20_1951  [color=darkseagreen4, key=1, label=d, style=dashed];
m20_214 -> m20_216  [color=darkseagreen4, key=1, label=c, style=dashed];
m20_2540 -> m20_2542  [color=darkseagreen4, key=1, label=c, style=dashed];
m20_303 -> m20_307  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_304 -> m20_306  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_2750 -> m20_2752  [color=darkseagreen4, key=1, label=c, style=dashed];
m20_2750 -> m20_2753  [color=darkseagreen4, key=1, label=c, style=dashed];
m20_2750 -> m20_2754  [color=darkseagreen4, key=1, label=c, style=dashed];
m20_2755 -> m20_2757  [color=darkseagreen4, key=1, label=c2, style=dashed];
m20_2755 -> m20_2758  [color=darkseagreen4, key=1, label=c2, style=dashed];
m20_2755 -> m20_2759  [color=darkseagreen4, key=1, label=c2, style=dashed];
m20_3324 -> m20_3326  [color=darkseagreen4, key=1, label=values2, style=dashed];
m20_1534 -> m20_1536  [color=darkseagreen4, key=1, label=kvPairs, style=dashed];
m20_1534 -> m20_1537  [color=darkseagreen4, key=1, label=kvPairs, style=dashed];
m20_1534 -> m20_1538  [color=darkseagreen4, key=1, label=kvPairs, style=dashed];
m20_1534 -> m20_1539  [color=darkseagreen4, key=1, label=kvPairs, style=dashed];
m20_1625 -> m20_1633  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m20_1629 -> m20_1631  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_2546 -> m20_2549  [color=darkseagreen4, key=1, label=d1, style=dashed];
m20_2546 -> m20_2550  [color=darkseagreen4, key=1, label=d1, style=dashed];
m20_2548 -> m20_2550  [color=darkseagreen4, key=1, label=d2, style=dashed];
m20_1058 -> m20_1062  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_1059 -> m20_1061  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_450 -> m20_453  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_454 -> m20_456  [color=darkseagreen4, key=1, label=c, style=dashed];
m20_454 -> m20_457  [color=darkseagreen4, key=1, label=c, style=dashed];
m20_461 -> m20_463  [color=darkseagreen4, key=1, label=s, style=dashed];
m20_461 -> m20_464  [color=darkseagreen4, key=1, label=s, style=dashed];
m20_2402 -> m20_2406  [color=darkseagreen4, key=1, label=c1, style=dashed];
m20_2402 -> m20_2407  [color=darkseagreen4, key=1, label=c1, style=dashed];
m20_2402 -> m20_2408  [color=darkseagreen4, key=1, label=c1, style=dashed];
m20_2402 -> m20_2409  [color=darkseagreen4, key=1, label=c1, style=dashed];
m20_2402 -> m20_2410  [color=darkseagreen4, key=1, label=c1, style=dashed];
m20_2405 -> m20_2407  [color=darkseagreen4, key=1, label=c2, style=dashed];
m20_2405 -> m20_2408  [color=darkseagreen4, key=1, label=c2, style=dashed];
m20_2405 -> m20_2409  [color=darkseagreen4, key=1, label=c2, style=dashed];
m20_2405 -> m20_2410  [color=darkseagreen4, key=1, label=c2, style=dashed];
m20_1310 -> m20_1312  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_2553 -> m20_2556  [color=darkseagreen4, key=1, label=d1, style=dashed];
m20_2553 -> m20_2557  [color=darkseagreen4, key=1, label=d1, style=dashed];
m20_2555 -> m20_2557  [color=darkseagreen4, key=1, label=d2, style=dashed];
m20_616 -> m20_618  [color=darkseagreen4, key=1, label=c2, style=dashed];
m20_858 -> m20_860  [color=darkseagreen4, key=1, label=n, style=dashed];
m20_858 -> m20_861  [color=darkseagreen4, key=1, label=n, style=dashed];
m20_858 -> m20_862  [color=darkseagreen4, key=1, label=n, style=dashed];
m20_858 -> m20_863  [color=darkseagreen4, key=1, label=n, style=dashed];
m20_985 -> m20_987  [color=darkseagreen4, key=1, label=o, style=dashed];
m20_985 -> m20_988  [color=darkseagreen4, key=1, label=o, style=dashed];
m20_985 -> m20_989  [color=darkseagreen4, key=1, label=o, style=dashed];
m20_985 -> m20_990  [color=darkseagreen4, key=1, label=o, style=dashed];
m20_985 -> m20_991  [color=darkseagreen4, key=1, label=o, style=dashed];
m20_985 -> m20_992  [color=darkseagreen4, key=1, label=o, style=dashed];
m20_985 -> m20_993  [color=darkseagreen4, key=1, label=o, style=dashed];
m20_985 -> m20_994  [color=darkseagreen4, key=1, label=o, style=dashed];
m20_1928 -> m20_1930  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_2869 -> m20_2871  [color=darkseagreen4, key=1, label=c2, style=dashed];
m20_2869 -> m20_2872  [color=darkseagreen4, key=1, label=c2, style=dashed];
m20_2869 -> m20_2873  [color=darkseagreen4, key=1, label=c2, style=dashed];
m20_471 -> m20_475  [color=darkseagreen4, key=1, label=guid, style=dashed];
m20_1210 -> m20_1212  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m20_3267 -> m20_3275  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3268 -> m20_3270  [color=darkseagreen4, key=1, label=aa, style=dashed];
m20_3268 -> m20_3271  [color=darkseagreen4, key=1, label=aa, style=dashed];
m20_3268 -> m20_3272  [color=darkseagreen4, key=1, label=aa, style=dashed];
m20_3268 -> m20_3273  [color=darkseagreen4, key=1, label=aa, style=dashed];
m20_3003 -> m20_3005  [color=darkseagreen4, key=1, label=uris, style=dashed];
m20_3008 -> m20_3010  [color=darkseagreen4, key=1, label=i1, style=dashed];
m20_3011 -> m20_3013  [color=darkseagreen4, key=1, label=uri, style=dashed];
m20_3052 -> m20_3054  [color=darkseagreen4, key=1, label=result, style=dashed];
m20_3052 -> m20_3055  [color=darkseagreen4, key=1, label=result, style=dashed];
m20_3052 -> m20_3056  [color=darkseagreen4, key=1, label=result, style=dashed];
m20_3626 -> m20_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>", style=dashed];
m20_3626 -> m20_6  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>", style=dashed];
m20_3626 -> m20_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>", style=dashed];
m20_3627 -> m20_2930  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", style=dashed];
m20_3628 -> m20_307  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3631 -> m20_887  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", style=dashed];
m20_3632 -> m20_1035  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3633 -> m20_1062  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3634 -> m20_1069  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3635 -> m20_1076  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3636 -> m20_1083  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3637 -> m20_1090  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3638 -> m20_1097  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3639 -> m20_1104  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3640 -> m20_1111  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3641 -> m20_1118  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3642 -> m20_1125  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3643 -> m20_1133  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3645 -> m20_1274  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", style=dashed];
m20_3645 -> m20_1277  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", style=dashed];
m20_3645 -> m20_1280  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", style=dashed];
m20_3647 -> m20_1317  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor", style=dashed];
m20_3648 -> m20_1353  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m20_3648 -> m20_1357  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m20_3648 -> m20_1360  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m20_3648 -> m20_1363  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m20_3648 -> m20_1367  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m20_3648 -> m20_1371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m20_3648 -> m20_1375  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m20_3648 -> m20_1379  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m20_3648 -> m20_1389  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m20_3648 -> m20_1393  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m20_3648 -> m20_1397  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m20_3648 -> m20_1401  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m20_3649 -> m20_1456  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m20_3649 -> m20_1457  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m20_3649 -> m20_1458  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m20_3649 -> m20_1459  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m20_3649 -> m20_1460  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m20_3649 -> m20_1462  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m20_3649 -> m20_1463  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m20_3649 -> m20_1464  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m20_3649 -> m20_1465  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m20_3649 -> m20_1466  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m20_3649 -> m20_1467  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m20_3649 -> m20_1468  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m20_3649 -> m20_1469  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m20_3649 -> m20_1470  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m20_3649 -> m20_1471  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m20_3649 -> m20_1472  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m20_3649 -> m20_1473  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m20_3654 -> m20_1790  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3656 -> m20_1853  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee", style=dashed];
m20_3657 -> m20_1918  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey", style=dashed];
m20_3659 -> m20_1979  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3660 -> m20_2065  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector", style=dashed];
m20_3664 -> m20_2101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", style=dashed];
m20_3673 -> m20_2353  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes", style=dashed];
m20_3675 -> m20_2496  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3677 -> m20_2596  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3678 -> m20_2834  [color=darkseagreen4, key=1, label=errors, style=dashed];
m20_3679 -> m20_2849  [color=darkseagreen4, key=1, label=errors, style=dashed];
m20_3680 -> m20_2864  [color=darkseagreen4, key=1, label=errors, style=dashed];
m20_3681 -> m20_2980  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3682 -> m20_2980  [color=darkseagreen4, key=1, label=s, style=dashed];
m20_3683 -> m20_3044  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>", style=dashed];
m20_3683 -> m20_3048  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>", style=dashed];
m20_3684 -> m20_3062  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>", style=dashed];
m20_3684 -> m20_3065  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>", style=dashed];
m20_3685 -> m20_3072  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3691 -> m20_3215  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3692 -> m20_3222  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3693 -> m20_3242  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3694 -> m20_3249  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3695 -> m20_3256  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3696 -> m20_3282  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3697 -> m20_3289  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3698 -> m20_3383  [color=darkseagreen4, key=1, label=json, style=dashed];
m20_3699 -> m20_3498  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>", style=dashed];
m20_3699 -> m20_3502  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>", style=dashed];
m20_3699 -> m20_3506  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>", style=dashed];
m20_3699 -> m20_3509  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>", style=dashed];
m20_3700 -> m20_3521  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>", style=dashed];
m20_3700 -> m20_3524  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>", style=dashed];
m20_3701 -> m20_3545  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>", style=dashed];
m20_3705 -> m20_3624  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass", style=dashed];
m21_81 -> m21_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.RegexConverter", style=dashed];
m21_81 -> m21_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.RegexConverter", style=dashed];
m21_81 -> m21_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.RegexConverter", style=dashed];
m21_81 -> m21_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.RegexConverter", style=dashed];
m21_81 -> m21_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.RegexConverter", style=dashed];
m21_899 -> m21_901  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_554 -> m21_556  [color=darkseagreen4, key=1, label=emptyData, style=dashed];
m21_860 -> m21_863  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_696 -> m21_699  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_697 -> m21_699  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m21_697 -> m21_700  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m21_697 -> m21_702  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m21_697 -> m21_703  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m21_697 -> m21_704  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m21_697 -> m21_701  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m21_13 -> m21_15  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_17 -> m21_20  [color=darkseagreen4, key=1, label=reader, style=dashed];
m21_23 -> m21_25  [color=darkseagreen4, key=1, label=c, style=dashed];
m21_33 -> m21_35  [color=darkseagreen4, key=1, label=v, style=dashed];
m21_20 -> m21_22  [color=darkseagreen4, key=1, label=p, style=dashed];
m21_19 -> m21_22  [color=darkseagreen4, key=1, label=options, style=dashed];
m21_286 -> m21_335  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_294 -> m21_360  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_302 -> m21_384  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_311 -> m21_411  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_299 -> m21_375  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_307 -> m21_399  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_315 -> m21_423  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_325 -> m21_453  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_326 -> m21_456  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_300 -> m21_378  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_308 -> m21_402  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_316 -> m21_426  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_285 -> m21_332  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_293 -> m21_357  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_301 -> m21_381  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_310 -> m21_408  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_319 -> m21_435  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_320 -> m21_438  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_291 -> m21_350  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_305 -> m21_393  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_314 -> m21_420  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_322 -> m21_444  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_287 -> m21_338  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_295 -> m21_363  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_303 -> m21_387  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_312 -> m21_414  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_327 -> m21_459  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_328 -> m21_462  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_288 -> m21_341  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_296 -> m21_366  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_304 -> m21_390  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_313 -> m21_417  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_317 -> m21_429  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_289 -> m21_344  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_297 -> m21_369  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_292 -> m21_353  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_298 -> m21_372  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_306 -> m21_396  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_323 -> m21_447  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_324 -> m21_450  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_290 -> m21_347  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_309 -> m21_405  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_318 -> m21_432  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_321 -> m21_441  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_48 -> m21_61  [color=darkseagreen4, key=1, label=patternText, style=dashed];
m21_46 -> m21_49  [color=darkseagreen4, key=1, label=regexText, style=dashed];
m21_708 -> m21_713  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_711 -> m21_713  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m21_711 -> m21_719  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m21_711 -> m21_720  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m21_711 -> m21_721  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m21_711 -> m21_714  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m21_711 -> m21_716  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m21_711 -> m21_717  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m21_711 -> m21_718  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m21_711 -> m21_715  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m21_709 -> m21_719  [color=darkseagreen4, key=1, label=o, style=dashed];
m21_709 -> m21_720  [color=darkseagreen4, key=1, label=o, style=dashed];
m21_709 -> m21_721  [color=darkseagreen4, key=1, label=o, style=dashed];
m21_73 -> m21_75  [color=green, key=1, label=o2, style=dashed];
m21_73 -> m21_77  [color=green, key=1, label=o2, style=dashed];
m21_762 -> m21_766  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_762 -> m21_765  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_763 -> m21_767  [color=darkseagreen4, key=1, label=first, style=dashed];
m21_763 -> m21_768  [color=darkseagreen4, key=1, label=first, style=dashed];
m21_8 -> m21_28  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m21_8 -> m21_31  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m21_790 -> m21_792  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_790 -> m21_793  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_790 -> m21_795  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_790 -> m21_797  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_790 -> m21_798  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_790 -> m21_799  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_790 -> m21_794  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_790 -> m21_796  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_609 -> m21_611  [color=darkseagreen4, key=1, label=beforeTokens, style=dashed];
m21_609 -> m21_612  [color=darkseagreen4, key=1, label=beforeTokens, style=dashed];
m21_47 -> m21_49  [color=darkseagreen4, key=1, label=patternOptionDelimiterIndex, style=dashed];
m21_49 -> m21_51  [color=darkseagreen4, key=1, label=optionsText, style=dashed];
m21_50 -> m21_54  [color=darkseagreen4, key=1, label=options, style=dashed];
m21_50 -> m21_61  [color=darkseagreen4, key=1, label=options, style=dashed];
m21_54 -> m21_54  [color=darkseagreen4, key=1, label=options, style=dashed];
m21_54 -> m21_56  [color=darkseagreen4, key=1, label=options, style=dashed];
m21_56 -> m21_56  [color=darkseagreen4, key=1, label=options, style=dashed];
m21_56 -> m21_58  [color=darkseagreen4, key=1, label=options, style=dashed];
m21_58 -> m21_58  [color=darkseagreen4, key=1, label=options, style=dashed];
m21_60 -> m21_61  [color=darkseagreen4, key=1, label=options, style=dashed];
m21_60 -> m21_62  [color=darkseagreen4, key=1, label=v, style=dashed];
m21_60 -> m21_63  [color=darkseagreen4, key=1, label=v, style=dashed];
m21_60 -> m21_65  [color=darkseagreen4, key=1, label=v, style=dashed];
m21_60 -> m21_64  [color=darkseagreen4, key=1, label=v, style=dashed];
m21_60 -> m21_66  [color=darkseagreen4, key=1, label=v, style=dashed];
m21_62 -> m21_69  [color=green, key=1, label=o, style=dashed];
m21_62 -> m21_71  [color=green, key=1, label=o, style=dashed];
m21_62 -> m21_72  [color=green, key=1, label=o, style=dashed];
m21_62 -> m21_65  [color=darkseagreen4, key=1, label=o, style=dashed];
m21_747 -> m21_749  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_747 -> m21_750  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_747 -> m21_751  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_747 -> m21_752  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_747 -> m21_754  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_747 -> m21_755  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_747 -> m21_756  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_747 -> m21_757  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_747 -> m21_758  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_747 -> m21_753  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_599 -> m21_601  [color=darkseagreen4, key=1, label=afterTokens, style=dashed];
m21_599 -> m21_602  [color=darkseagreen4, key=1, label=afterTokens, style=dashed];
m21_831 -> m21_833  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_831 -> m21_834  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_831 -> m21_835  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_831 -> m21_836  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_831 -> m21_837  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_831 -> m21_839  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_831 -> m21_840  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_831 -> m21_841  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_831 -> m21_842  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_831 -> m21_843  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_831 -> m21_844  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_831 -> m21_846  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_831 -> m21_847  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_831 -> m21_838  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_831 -> m21_845  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_851 -> m21_854  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_852 -> m21_854  [color=darkseagreen4, key=1, label=a2, style=dashed];
m21_575 -> m21_577  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_575 -> m21_579  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_575 -> m21_581  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_575 -> m21_584  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_575 -> m21_590  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_575 -> m21_580  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_575 -> m21_578  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_582 -> m21_585  [color=darkseagreen4, key=1, label=t, style=dashed];
m21_582 -> m21_586  [color=darkseagreen4, key=1, label=t, style=dashed];
m21_582 -> m21_587  [color=darkseagreen4, key=1, label=t, style=dashed];
m21_588 -> m21_591  [color=darkseagreen4, key=1, label=t, style=dashed];
m21_588 -> m21_592  [color=darkseagreen4, key=1, label=t, style=dashed];
m21_588 -> m21_593  [color=darkseagreen4, key=1, label=t, style=dashed];
m21_656 -> m21_663  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_656 -> m21_664  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_661 -> m21_663  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m21_661 -> m21_664  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m21_661 -> m21_665  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m21_661 -> m21_666  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m21_657 -> m21_665  [color=darkseagreen4, key=1, label=o, style=dashed];
m21_657 -> m21_666  [color=darkseagreen4, key=1, label=o, style=dashed];
m21_115 -> m21_117  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_628 -> m21_633  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_628 -> m21_634  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_630 -> m21_633  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m21_630 -> m21_634  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m21_630 -> m21_632  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m21_629 -> m21_632  [color=darkseagreen4, key=1, label=t, style=dashed];
m21_682 -> m21_691  [color=darkseagreen4, key=1, label=o, style=dashed];
m21_682 -> m21_692  [color=darkseagreen4, key=1, label=o, style=dashed];
m21_684 -> m21_691  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m21_684 -> m21_692  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m21_684 -> m21_686  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m21_684 -> m21_688  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m21_684 -> m21_689  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m21_684 -> m21_690  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m21_684 -> m21_687  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m21_122 -> m21_124  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_867 -> m21_869  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_871 -> m21_873  [color=darkseagreen4, key=1, label=v1, style=dashed];
m21_725 -> m21_728  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_725 -> m21_730  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_725 -> m21_731  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_725 -> m21_736  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_725 -> m21_737  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_726 -> m21_729  [color=darkseagreen4, key=1, label=writer, style=dashed];
m21_726 -> m21_732  [color=darkseagreen4, key=1, label=writer, style=dashed];
m21_726 -> m21_735  [color=darkseagreen4, key=1, label=writer, style=dashed];
m21_726 -> m21_733  [color=darkseagreen4, key=1, label=writer, style=dashed];
m21_726 -> m21_734  [color=darkseagreen4, key=1, label=writer, style=dashed];
m21_619 -> m21_623  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_619 -> m21_624  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_621 -> m21_623  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m21_621 -> m21_624  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m21_772 -> m21_774  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_7 -> m21_13  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Regex", style=dashed];
m21_7 -> m21_15  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Regex", style=dashed];
m21_7 -> m21_17  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Regex", style=dashed];
m21_7 -> m21_20  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Regex", style=dashed];
m21_7 -> m21_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonWriter", style=dashed];
m21_819 -> m21_821  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_819 -> m21_822  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_819 -> m21_823  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_819 -> m21_824  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_819 -> m21_826  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_819 -> m21_827  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_819 -> m21_825  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_906 -> m21_908  [color=darkseagreen4, key=1, label=o, style=dashed];
m21_906 -> m21_909  [color=darkseagreen4, key=1, label=o, style=dashed];
m21_906 -> m21_910  [color=darkseagreen4, key=1, label=o, style=dashed];
m21_568 -> m21_570  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_568 -> m21_571  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_638 -> m21_646  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_638 -> m21_647  [color=darkseagreen4, key=1, label=a, style=dashed];
m21_643 -> m21_646  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m21_643 -> m21_647  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m21_643 -> m21_649  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m21_643 -> m21_650  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m21_643 -> m21_645  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m21_643 -> m21_648  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m21_639 -> m21_649  [color=darkseagreen4, key=1, label=o, style=dashed];
m21_639 -> m21_650  [color=darkseagreen4, key=1, label=o, style=dashed];
m21_640 -> m21_645  [color=darkseagreen4, key=1, label=t1, style=dashed];
m21_641 -> m21_648  [color=darkseagreen4, key=1, label=t2, style=dashed];
m21_782 -> m21_784  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_877 -> m21_879  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_1 -> m21_3  [color=darkseagreen4, key=1, label=ob1, style=dashed];
m21_1 -> m21_4  [color=darkseagreen4, key=1, label=regex, style=dashed];
m21_2 -> m21_4  [color=darkseagreen4, key=1, label=bsonWriter, style=dashed];
m21_671 -> m21_673  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m21_671 -> m21_675  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m21_671 -> m21_676  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m21_671 -> m21_677  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m21_671 -> m21_674  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m21_64 -> m21_66  [color=darkseagreen4, key=1, label=p, style=dashed];
m21_238 -> m21_240  [color=darkseagreen4, key=1, label=bigIntegerText, style=dashed];
m21_238 -> m21_249  [color=darkseagreen4, key=1, label=bigIntegerText, style=dashed];
m22_30 -> m22_32  [color=darkseagreen4, key=1, label=newRegex, style=dashed];
m22_67 -> m22_75  [color=darkseagreen4, key=1, label=ms, style=dashed];
m22_69 -> m22_77  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m22_78 -> m22_80  [color=darkseagreen4, key=1, label=c, style=dashed];
m22_72 -> m22_74  [color=darkseagreen4, key=1, label=expected, style=dashed];
m22_41 -> m22_43  [color=darkseagreen4, key=1, label=c, style=dashed];
m22_86 -> m22_88  [color=darkseagreen4, key=1, label=newRegex, style=dashed];
m22_10 -> m22_15  [color=darkseagreen4, key=1, label=regex, style=dashed];
m22_12 -> m22_15  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_13 -> m22_15  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m22_16 -> m22_18  [color=darkseagreen4, key=1, label=expected, style=dashed];
m22_51 -> m22_56  [color=darkseagreen4, key=1, label=ms, style=dashed];
m22_53 -> m22_58  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m22_59 -> m22_61  [color=darkseagreen4, key=1, label=c, style=dashed];
m23_557 -> m23_559  [color=darkseagreen4, key=1, label=r, style=dashed];
m23_557 -> m23_560  [color=darkseagreen4, key=1, label=r, style=dashed];
m23_557 -> m23_562  [color=darkseagreen4, key=1, label=r, style=dashed];
m23_557 -> m23_563  [color=darkseagreen4, key=1, label=r, style=dashed];
m23_557 -> m23_565  [color=darkseagreen4, key=1, label=r, style=dashed];
m23_557 -> m23_566  [color=darkseagreen4, key=1, label=r, style=dashed];
m23_557 -> m23_568  [color=darkseagreen4, key=1, label=r, style=dashed];
m23_557 -> m23_569  [color=darkseagreen4, key=1, label=r, style=dashed];
m23_557 -> m23_561  [color=darkseagreen4, key=1, label=r, style=dashed];
m23_557 -> m23_564  [color=darkseagreen4, key=1, label=r, style=dashed];
m23_557 -> m23_567  [color=darkseagreen4, key=1, label=r, style=dashed];
m23_557 -> m23_570  [color=darkseagreen4, key=1, label=r, style=dashed];
m23_572 -> m23_574  [color=darkseagreen4, key=1, label=r, style=dashed];
m23_572 -> m23_575  [color=darkseagreen4, key=1, label=r, style=dashed];
m23_572 -> m23_577  [color=darkseagreen4, key=1, label=r, style=dashed];
m23_572 -> m23_578  [color=darkseagreen4, key=1, label=r, style=dashed];
m23_572 -> m23_580  [color=darkseagreen4, key=1, label=r, style=dashed];
m23_572 -> m23_581  [color=darkseagreen4, key=1, label=r, style=dashed];
m23_572 -> m23_583  [color=darkseagreen4, key=1, label=r, style=dashed];
m23_572 -> m23_584  [color=darkseagreen4, key=1, label=r, style=dashed];
m23_572 -> m23_576  [color=darkseagreen4, key=1, label=r, style=dashed];
m23_572 -> m23_579  [color=darkseagreen4, key=1, label=r, style=dashed];
m23_572 -> m23_582  [color=darkseagreen4, key=1, label=r, style=dashed];
m23_572 -> m23_585  [color=darkseagreen4, key=1, label=r, style=dashed];
m23_47 -> m23_49  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m23_47 -> m23_50  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m23_47 -> m23_51  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m23_246 -> m23_248  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_243 -> m23_252  [color=darkseagreen4, key=1, label=arrayPool, style=dashed];
m23_243 -> m23_253  [color=darkseagreen4, key=1, label=arrayPool, style=dashed];
m23_243 -> m23_250  [color=darkseagreen4, key=1, label=arrayPool, style=dashed];
m23_244 -> m23_249  [color=darkseagreen4, key=1, label=i, style=dashed];
m23_244 -> m23_251  [color=darkseagreen4, key=1, label=i, style=dashed];
m23_251 -> m23_251  [color=darkseagreen4, key=1, label=i, style=dashed];
m23_299 -> m23_303  [color=darkseagreen4, key=1, label=jsonObject, style=dashed];
m23_297 -> m23_304  [color=darkseagreen4, key=1, label=json, style=dashed];
m23_300 -> m23_304  [color=darkseagreen4, key=1, label=sb, style=dashed];
m23_298 -> m23_303  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m23_272 -> m23_296  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m23_272 -> m23_274  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m23_272 -> m23_275  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m23_272 -> m23_276  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m23_272 -> m23_277  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m23_272 -> m23_278  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m23_272 -> m23_279  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m23_272 -> m23_280  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m23_272 -> m23_281  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m23_272 -> m23_284  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m23_272 -> m23_286  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m23_272 -> m23_287  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m23_272 -> m23_288  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m23_272 -> m23_289  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m23_272 -> m23_290  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m23_272 -> m23_291  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m23_272 -> m23_292  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m23_272 -> m23_293  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m23_272 -> m23_294  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m23_272 -> m23_295  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m23_282 -> m23_284  [color=darkseagreen4, key=1, label=i, style=dashed];
m23_282 -> m23_285  [color=darkseagreen4, key=1, label=i, style=dashed];
m23_285 -> m23_285  [color=darkseagreen4, key=1, label=i, style=dashed];
m23_12 -> m23_14  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m23_12 -> m23_15  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m23_12 -> m23_16  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m23_12 -> m23_18  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m23_12 -> m23_19  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m23_12 -> m23_20  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m23_12 -> m23_23  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m23_12 -> m23_26  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m23_12 -> m23_27  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m23_12 -> m23_28  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m23_12 -> m23_17  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m23_261 -> m23_263  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_260 -> m23_265  [color=darkseagreen4, key=1, label=arrayPool, style=dashed];
m23_260 -> m23_266  [color=darkseagreen4, key=1, label=arrayPool, style=dashed];
m23_232 -> m23_238  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_232 -> m23_239  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_232 -> m23_235  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_232 -> m23_237  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_233 -> m23_236  [color=darkseagreen4, key=1, label=i, style=dashed];
m23_236 -> m23_236  [color=darkseagreen4, key=1, label=i, style=dashed];
m23_545 -> m23_551  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_538 -> m23_542  [color=darkseagreen4, key=1, label=writer, style=dashed];
m23_538 -> m23_540  [color=darkseagreen4, key=1, label=writer, style=dashed];
m23_538 -> m23_541  [color=darkseagreen4, key=1, label=writer, style=dashed];
m23_72 -> m23_74  [color=darkseagreen4, key=1, label=negativeEnumClass, style=dashed];
m23_483 -> m23_485  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_483 -> m23_486  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_483 -> m23_487  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_397  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_398  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_399  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_401  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_402  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_404  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_405  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_407  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_408  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_409  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_411  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_412  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_414  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_415  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_416  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_418  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_419  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_420  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_422  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_423  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_424  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_426  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_427  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_428  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_430  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_431  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_433  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_434  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_435  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_437  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_439  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_440  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_442  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_443  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_445  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_446  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_448  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_449  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_451  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_453  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_454  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_456  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_458  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_460  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_462  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_464  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_466  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_468  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_470  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_472  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_473  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_475  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_476  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_400  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_403  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_406  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_410  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_413  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_417  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_421  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_425  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_429  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_432  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_436  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_438  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_441  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_444  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_447  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_450  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_452  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_455  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_457  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_459  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_461  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_463  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_465  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_467  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_469  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_471  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_474  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_395 -> m23_477  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_30 -> m23_32  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m23_30 -> m23_33  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m23_30 -> m23_34  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m23_30 -> m23_36  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m23_30 -> m23_38  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m23_30 -> m23_44  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m23_30 -> m23_45  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m23_30 -> m23_46  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m23_30 -> m23_48  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m23_30 -> m23_49  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m23_30 -> m23_50  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m23_30 -> m23_52  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m23_30 -> m23_53  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m23_30 -> m23_54  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m23_30 -> m23_35  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m23_30 -> m23_47  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m23_30 -> m23_51  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m23_494 -> m23_497  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_494 -> m23_498  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_494 -> m23_500  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_494 -> m23_501  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_494 -> m23_503  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_494 -> m23_504  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_494 -> m23_506  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_494 -> m23_507  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_494 -> m23_509  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_494 -> m23_510  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_494 -> m23_496  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_494 -> m23_499  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_494 -> m23_502  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_494 -> m23_505  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_494 -> m23_508  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_494 -> m23_511  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_512 -> m23_515  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_512 -> m23_516  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_512 -> m23_518  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_512 -> m23_519  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_512 -> m23_521  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_512 -> m23_522  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_512 -> m23_524  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_512 -> m23_525  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_512 -> m23_527  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_512 -> m23_528  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_512 -> m23_514  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_512 -> m23_517  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_512 -> m23_520  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_512 -> m23_523  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_512 -> m23_526  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_512 -> m23_529  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_490 -> m23_492  [color=darkseagreen4, key=1, label=d, style=dashed];
m23_114 -> m23_120  [color=darkseagreen4, key=1, label=json, style=dashed];
m23_115 -> m23_117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_55 -> m23_57  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m23_222 -> m23_228  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_222 -> m23_225  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_222 -> m23_227  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_223 -> m23_226  [color=darkseagreen4, key=1, label=i, style=dashed];
m23_226 -> m23_226  [color=darkseagreen4, key=1, label=i, style=dashed];
m23_2 -> m23_4  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m23_2 -> m23_6  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m23_2 -> m23_8  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m23_2 -> m23_9  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m23_2 -> m23_10  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m23_2 -> m23_7  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m23_1 -> m23_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_323 -> m23_325  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_323 -> m23_327  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_323 -> m23_328  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_323 -> m23_329  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_323 -> m23_331  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_323 -> m23_333  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_323 -> m23_326  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_323 -> m23_330  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_323 -> m23_332  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_83 -> m23_87  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_83 -> m23_85  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_83 -> m23_86  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_85 -> m23_87  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m23_78 -> m23_80  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m23_78 -> m23_81  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m23_63 -> m23_67  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_63 -> m23_69  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_63 -> m23_71  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_63 -> m23_73  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_63 -> m23_75  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_63 -> m23_76  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_63 -> m23_78  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_63 -> m23_79  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_63 -> m23_68  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_63 -> m23_70  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_63 -> m23_72  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_63 -> m23_74  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_63 -> m23_77  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_184  [color=green, key=1, label=reader, style=dashed];
m23_126 -> m23_128  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_129  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_130  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_131  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_132  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_133  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_134  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_135  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_136  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_137  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_138  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_139  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_140  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_141  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_142  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_143  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_144  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_145  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_146  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_147  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_148  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_149  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_150  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_151  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_152  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_153  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_154  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_155  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_156  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_157  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_158  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_159  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_160  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_161  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_162  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_163  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_164  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_165  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_166  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_167  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_168  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_169  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_170  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_171  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_172  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_173  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_174  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_175  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_176  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_177  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_178  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_179  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_180  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_181  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_182  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_183  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_185  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_186  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_187  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_188  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_189  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_190  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_191  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_192  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_193  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_194  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_195  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_196  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_197  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_198  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_199  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_200  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_201  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_202  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_203  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_204  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_205  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_206  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_207  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_208  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_209  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_210  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_211  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_212  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_213  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_214  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_215  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_216  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_217  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_126 -> m23_218  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_338 -> m23_340  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_338 -> m23_342  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_338 -> m23_344  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_338 -> m23_346  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_338 -> m23_341  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_338 -> m23_343  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_338 -> m23_345  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_118 -> m23_120  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m23_92 -> m23_94  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m23_92 -> m23_95  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m23_111 -> m23_113  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_354  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_356  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_358  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_360  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_362  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_364  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_366  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_368  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_370  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_372  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_374  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_376  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_378  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_380  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_382  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_384  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_386  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_388  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_390  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_353  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_355  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_357  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_359  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_361  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_363  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_365  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_367  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_369  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_371  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_373  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_375  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_377  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_379  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_381  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_383  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_385  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_387  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_389  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_351 -> m23_391  [color=darkseagreen4, key=1, label=reader, style=dashed];
m23_127 -> m23_120  [color=darkseagreen4, key=1, label=json, style=dashed];
m23_587 -> m23_96  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests", style=dashed];
m23_587 -> m23_97  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests", style=dashed];
m23_587 -> m23_100  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests", style=dashed];
m23_587 -> m23_101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests", style=dashed];
m23_587 -> m23_102  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests", style=dashed];
m23_587 -> m23_105  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests", style=dashed];
m23_587 -> m23_106  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests", style=dashed];
m23_587 -> m23_107  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests", style=dashed];
m25_7 -> m25_9  [color=darkseagreen4, key=1, label=result, style=dashed];
m25_32 -> m25_39  [color=darkseagreen4, key=1, label=bool, style=dashed];
m25_33 -> m25_35  [color=darkseagreen4, key=1, label=objectAttribute, style=dashed];
m25_164 -> m25_171  [color=darkseagreen4, key=1, label=object, style=dashed];
m25_165 -> m25_167  [color=darkseagreen4, key=1, label=type, style=dashed];
m25_168 -> m25_170  [color=darkseagreen4, key=1, label=memberInfo, style=dashed];
m25_59 -> m25_61  [color=darkseagreen4, key=1, label="object[]", style=dashed];
m25_63 -> m25_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonContainerAttribute", style=dashed];
m25_63 -> m25_68  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonContainerAttribute", style=dashed];
m25_70 -> m25_83  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m25_70 -> m25_85  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m25_70 -> m25_88  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m25_71 -> m25_84  [color=darkseagreen4, key=1, label=defaultConstructor, style=dashed];
m25_71 -> m25_86  [color=darkseagreen4, key=1, label=defaultConstructor, style=dashed];
m25_72 -> m25_77  [color=darkseagreen4, key=1, label="object[]", style=dashed];
m25_72 -> m25_82  [color=darkseagreen4, key=1, label="object[]", style=dashed];
m25_72 -> m25_88  [color=darkseagreen4, key=1, label=ex, style=dashed];
m25_143 -> m25_155  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m25_143 -> m25_156  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m25_152 -> m25_154  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m25_149 -> m25_151  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m25_159 -> m25_161  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m25_55 -> m25_57  [color=darkseagreen4, key=1, label="object[]", style=dashed];
m25_14 -> m25_16  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m25_17 -> m25_20  [color=darkseagreen4, key=1, label=propertyInfo, style=dashed];
m25_18 -> m25_22  [color=darkseagreen4, key=1, label=result, style=dashed];
m25_18 -> m25_27  [color=darkseagreen4, key=1, label=result, style=dashed];
m25_25 -> m25_27  [color=darkseagreen4, key=1, label=result, style=dashed];
m25_125 -> m25_135  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m25_132 -> m25_134  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m25_129 -> m25_131  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m25_136 -> m25_138  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m25_112 -> m25_118  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m25_115 -> m25_118  [color=darkseagreen4, key=1, label=metadataClassTypeName, style=dashed];
m25_46 -> m25_50  [color=darkseagreen4, key=1, label=converterAttribute, style=dashed];
m25_48 -> m25_50  [color=darkseagreen4, key=1, label=creator, style=dashed];
m25_78 -> m25_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_76 -> m25_82  [color=darkseagreen4, key=1, label="object[]", style=dashed];
m25_173 -> m25_83  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m25_173 -> m25_85  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m25_173 -> m25_88  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m25_174 -> m25_84  [color=darkseagreen4, key=1, label=defaultConstructor, style=dashed];
m25_174 -> m25_86  [color=darkseagreen4, key=1, label=defaultConstructor, style=dashed];
}
