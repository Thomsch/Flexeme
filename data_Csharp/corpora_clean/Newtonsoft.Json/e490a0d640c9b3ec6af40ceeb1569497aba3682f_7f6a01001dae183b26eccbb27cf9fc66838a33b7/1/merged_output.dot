digraph  {
n0 [cluster="Newtonsoft.Json.Utilities.EnumUtils.InitializeEnumType(System.Type)", label="Entry Newtonsoft.Json.Utilities.EnumUtils.InitializeEnumType(System.Type)", span="42-42"];
n1 [cluster="Newtonsoft.Json.Utilities.EnumUtils.InitializeEnumType(System.Type)", label="BidirectionalDictionary<string, string> map = new BidirectionalDictionary<string, string>(\r\n                StringComparer.OrdinalIgnoreCase,\r\n                StringComparer.OrdinalIgnoreCase)", span="44-46"];
n2 [cluster="Newtonsoft.Json.Utilities.EnumUtils.InitializeEnumType(System.Type)", label="type.GetFields()", span="48-48"];
n8 [cluster="Newtonsoft.Json.Utilities.EnumUtils.InitializeEnumType(System.Type)", label="throw new InvalidOperationException(''Enum name '{0}' already exists on enum '{1}'.''.FormatWith(CultureInfo.InvariantCulture, n2, type.Name));", span="65-65"];
n12 [cluster="Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.BidirectionalDictionary(System.Collections.Generic.IEqualityComparer<TFirst>, System.Collections.Generic.IEqualityComparer<TSecond>)", label="Entry Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.BidirectionalDictionary(System.Collections.Generic.IEqualityComparer<TFirst>, System.Collections.Generic.IEqualityComparer<TSecond>)", span="43-43"];
n7 [cluster="Newtonsoft.Json.Utilities.EnumUtils.InitializeEnumType(System.Type)", label="map.TryGetBySecond(n2, out s)", span="63-63"];
n9 [cluster="Newtonsoft.Json.Utilities.EnumUtils.InitializeEnumType(System.Type)", label="map.Set(n1, n2)", span="68-68"];
n10 [cluster="Newtonsoft.Json.Utilities.EnumUtils.InitializeEnumType(System.Type)", label="return map;", span="71-71"];
n3 [cluster="Newtonsoft.Json.Utilities.EnumUtils.InitializeEnumType(System.Type)", label="string n1 = f.Name", span="50-50"];
n13 [cluster="System.Type.GetFields()", label="Entry System.Type.GetFields()", span="0-0"];
n5 [cluster="Newtonsoft.Json.Utilities.EnumUtils.InitializeEnumType(System.Type)", label="n2 = f.GetCustomAttributes(typeof(EnumMemberAttribute), true)\r\n                    .Cast<EnumMemberAttribute>()\r\n                    .Select(a => a.Value)\r\n                    .SingleOrDefault() ?? f.Name", span="54-57"];
n4 [cluster="Newtonsoft.Json.Utilities.EnumUtils.InitializeEnumType(System.Type)", label="string n2", span="51-51"];
n6 [cluster="Newtonsoft.Json.Utilities.EnumUtils.InitializeEnumType(System.Type)", label="string s", span="62-62"];
n14 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0"];
n15 [cluster="System.Collections.IEnumerable.Cast<TResult>()", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
n16 [cluster="Unk.Select", label="Entry Unk.Select", span=""];
n17 [cluster="Unk.SingleOrDefault", label="Entry Unk.SingleOrDefault", span=""];
n22 [cluster="lambda expression", label="Entry lambda expression", span="56-56"];
n18 [cluster="Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.TryGetBySecond(TSecond, out TFirst)", label="Entry Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.TryGetBySecond(TSecond, out TFirst)", span="91-91"];
n21 [cluster="Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.Set(TFirst, TSecond)", label="Entry Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.Set(TFirst, TSecond)", span="61-61"];
n11 [cluster="Newtonsoft.Json.Utilities.EnumUtils.InitializeEnumType(System.Type)", label="Exit Newtonsoft.Json.Utilities.EnumUtils.InitializeEnumType(System.Type)", span="42-42"];
n19 [cluster="System.InvalidOperationException.InvalidOperationException(string)", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
n20 [cluster="string.FormatWith(System.IFormatProvider, object, object)", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
n23 [cluster="lambda expression", label="a.Value", span="56-56"];
n24 [cluster="lambda expression", label="Exit lambda expression", span="56-56"];
n25 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", label="Entry Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", span="74-74"];
n26 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", label="Type enumType = typeof(T)", span="76-76"];
n29 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", label="Type underlyingType = Enum.GetUnderlyingType(value.GetType())", span="83-83"];
n30 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", label="ulong num = Convert.ToUInt64(value, CultureInfo.InvariantCulture)", span="85-85"];
n27 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", label="!enumType.IsDefined(typeof(FlagsAttribute), false)", span="78-78"];
n28 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", label="throw new ArgumentException(''Enum type {0} is not a set of flags.''.FormatWith(CultureInfo.InvariantCulture, enumType));", span="80-80"];
n40 [cluster="System.Reflection.MemberInfo.IsDefined(System.Type, bool)", label="Entry System.Reflection.MemberInfo.IsDefined(System.Type, bool)", span="0-0"];
n43 [cluster="object.GetType()", label="Entry object.GetType()", span="0-0"];
n44 [cluster="System.Enum.GetUnderlyingType(System.Type)", label="Entry System.Enum.GetUnderlyingType(System.Type)", span="0-0"];
n35 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", label="selectedFlagsValues.Add((T)Convert.ChangeType(enumNameValue.Value, underlyingType, CultureInfo.CurrentCulture))", span="93-93"];
n31 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", label="IList<EnumValue<ulong>> enumNameValues = GetNamesAndValues<T>()", span="86-86"];
n45 [cluster="System.Convert.ToUInt64(object, System.IFormatProvider)", label="Entry System.Convert.ToUInt64(object, System.IFormatProvider)", span="0-0"];
n34 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", label="(num & enumNameValue.Value) == enumNameValue.Value && enumNameValue.Value != 0", span="91-91"];
n32 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", label="IList<T> selectedFlagsValues = new List<T>()", span="87-87"];
n46 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<T>()", label="Entry Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<T>()", span="109-109"];
n33 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", label=enumNameValues, span="89-89"];
n36 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", label="selectedFlagsValues.Count == 0 && enumNameValues.SingleOrDefault(v => v.Value == 0) != null", span="97-97"];
n47 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n37 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", label="selectedFlagsValues.Add(default(T))", span="99-99"];
n38 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", label="return selectedFlagsValues;", span="102-102"];
n48 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
n49 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
n50 [cluster="lambda expression", label="Entry lambda expression", span="97-97"];
n39 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", label="Exit Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", span="74-74"];
n41 [cluster="System.ArgumentException.ArgumentException(string)", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
n42 [cluster="string.FormatWith(System.IFormatProvider, object)", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
n51 [cluster="lambda expression", label="v.Value == 0", span="97-97"];
n52 [cluster="lambda expression", label="Exit lambda expression", span="97-97"];
n53 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<T>()", label="return GetNamesAndValues<ulong>(typeof(T));", span="111-111"];
n54 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<T>()", label="Exit Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<T>()", span="109-109"];
n55 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", label="Entry Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", span="119-119"];
n56 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", label="enumType == null", span="121-121"];
n57 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", label="throw new ArgumentNullException(nameof(enumType));", span="123-123"];
n58 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", label="!enumType.IsEnum()", span="126-126"];
n59 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", label="throw new ArgumentException(''Type {0} is not an Enum.''.FormatWith(CultureInfo.InvariantCulture, enumType), nameof(enumType));", span="128-128"];
n60 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", label="IList<object> enumValues = GetValues(enumType)", span="131-131"];
n61 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", label="IList<string> enumNames = GetNames(enumType)", span="132-132"];
n67 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", label="throw new InvalidOperationException(\r\n                        string.Format(CultureInfo.InvariantCulture, ''Value from enum with the underlying type of {0} cannot be added to dictionary with a value type of {1}. Value was too large: {2}'',\r\n                            Enum.GetUnderlyingType(enumType), typeof(TUnderlyingType), Convert.ToUInt64(enumValues[i], CultureInfo.InvariantCulture)), e);", span="144-146"];
n73 [cluster="System.Type.IsEnum()", label="Entry System.Type.IsEnum()", span="189-189"];
n75 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", label="Entry Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", span="153-153"];
n64 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", label="i < enumValues.Count", span="136-136"];
n65 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", label="nameValues.Add(new EnumValue<TUnderlyingType>(enumNames[i], (TUnderlyingType)Convert.ChangeType(enumValues[i], typeof(TUnderlyingType), CultureInfo.CurrentCulture)))", span="140-140"];
n62 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", label="IList<EnumValue<TUnderlyingType>> nameValues = new List<EnumValue<TUnderlyingType>>()", span="134-134"];
n76 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", label="Entry Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", span="173-173"];
n63 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", label="int i = 0", span="136-136"];
n69 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", label="return nameValues;", span="150-150"];
n68 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", label="i++", span="136-136"];
n66 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", label=OverflowException, span="142-142"];
n77 [cluster="Newtonsoft.Json.Utilities.EnumValue<T>.EnumValue(string, T)", label="Entry Newtonsoft.Json.Utilities.EnumValue<T>.EnumValue(string, T)", span="42-42"];
n70 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", label="Exit Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", span="119-119"];
n78 [cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0"];
n79 [cluster="string.Format(System.IFormatProvider, string, object, object, object)", label="Entry string.Format(System.IFormatProvider, string, object, object, object)", span="0-0"];
n74 [cluster="System.ArgumentException.ArgumentException(string, string)", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
n72 [cluster="Unk.nameof", label="Entry Unk.nameof", span=""];
n71 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n80 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", label="!enumType.IsEnum()", span="155-155"];
n81 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", label="throw new ArgumentException(''Type ''' + enumType.Name + ''' is not an enum.'');", span="157-157"];
n83 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", label="var fields = enumType.GetFields().Where(f => f.IsLiteral)", span="162-162"];
n85 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", label="object value = field.GetValue(enumType)", span="166-166"];
n82 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", label="List<object> values = new List<object>()", span="160-160"];
n86 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", label="values.Add(value)", span="167-167"];
n87 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", label="return values;", span="170-170"];
n84 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", label=fields, span="164-164"];
n89 [cluster="Unk.Where", label="Entry Unk.Where", span=""];
n92 [cluster="lambda expression", label="Entry lambda expression", span="162-162"];
n90 [cluster="System.Reflection.FieldInfo.GetValue(object)", label="Entry System.Reflection.FieldInfo.GetValue(object)", span="0-0"];
n91 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n88 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", label="Exit Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", span="153-153"];
n93 [cluster="lambda expression", label="f.IsLiteral", span="162-162"];
n94 [cluster="lambda expression", label="Exit lambda expression", span="162-162"];
n95 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", label="!enumType.IsEnum()", span="175-175"];
n96 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", label="throw new ArgumentException(''Type ''' + enumType.Name + ''' is not an enum.'');", span="177-177"];
n98 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", label="var fields = enumType.GetFields().Where(f => f.IsLiteral)", span="182-182"];
n97 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", label="List<string> values = new List<string>()", span="180-180"];
n100 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", label="values.Add(field.Name)", span="186-186"];
n101 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", label="return values;", span="189-189"];
n99 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", label=fields, span="184-184"];
n103 [cluster="lambda expression", label="Entry lambda expression", span="182-182"];
n102 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", label="Exit Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", span="173-173"];
n104 [cluster="lambda expression", label="f.IsLiteral", span="182-182"];
n105 [cluster="lambda expression", label="Exit lambda expression", span="182-182"];
n106 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, System.Type)", label="Entry Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, System.Type)", span="192-192"];
n107 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, System.Type)", label="enumText == string.Empty && isNullable", span="194-194"];
n110 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, System.Type)", label="BidirectionalDictionary<string, string> map = EnumMemberNamesPerType.Get(t)", span="201-201"];
n111 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, System.Type)", color=red, community=0, label="-1: enumText.IndexOf(',') != -1", span="202-202"];
n112 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, System.Type)", label="string[] names = enumText.Split(',')", span="204-204"];
n119 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, System.Type)", color=red, community=0, label="-1: finalEnumText = ResolvedEnumName(map, enumText)", span="216-216"];
n120 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, System.Type)", label="return Enum.Parse(t, finalEnumText, true);", span="219-219"];
n108 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, System.Type)", label="return null;", span="196-196"];
n109 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, System.Type)", label="string finalEnumText", span="199-199"];
n122 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", label="Entry Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", span="52-52"];
n116 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, System.Type)", color=red, community=0, label="-1: names[i] = ResolvedEnumName(map, name)", span="209-209"];
n123 [cluster="string.IndexOf(char)", label="Entry string.IndexOf(char)", span="0-0"];
n113 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, System.Type)", label="int i = 0", span="205-205"];
n124 [cluster="string.Split(params char[])", label="Entry string.Split(params char[])", span="0-0"];
n114 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, System.Type)", label="i < names.Length", span="205-205"];
n115 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, System.Type)", label="string name = names[i].Trim()", span="207-207"];
n118 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, System.Type)", label="finalEnumText = string.Join('', '', names)", span="212-212"];
n117 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, System.Type)", label="i++", span="205-205"];
n125 [cluster="string.Trim()", label="Entry string.Trim()", span="0-0"];
n126 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ResolvedEnumName(Newtonsoft.Json.Utilities.BidirectionalDictionary<string, string>, string)", label="Entry Newtonsoft.Json.Utilities.EnumUtils.ResolvedEnumName(Newtonsoft.Json.Utilities.BidirectionalDictionary<string, string>, string)", span="248-248"];
n127 [cluster="string.Join(string, params string[])", label="Entry string.Join(string, params string[])", span="0-0"];
n121 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, System.Type)", label="Exit Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, System.Type)", span="192-192"];
n128 [cluster="System.Enum.Parse(System.Type, string, bool)", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
n129 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", label="Entry Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", span="222-222"];
n130 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", label="BidirectionalDictionary<string, string> map = EnumMemberNamesPerType.Get(enumType)", span="224-224"];
n131 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", label="string[] names = enumText.Split(',')", span="226-226"];
n138 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", label=camelCaseText, span="235-235"];
n136 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", label="map.TryGetByFirst(name, out resolvedEnumName)", span="232-232"];
n132 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", label="int i = 0", span="227-227"];
n133 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", label="i < names.Length", span="227-227"];
n134 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", label="string name = names[i].Trim()", span="229-229"];
n140 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", label="names[i] = resolvedEnumName", span="240-240"];
n142 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", label="string finalName = string.Join('', '', names)", span="243-243"];
n141 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", label="i++", span="227-227"];
n135 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", label="string resolvedEnumName", span="231-231"];
n137 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", label="resolvedEnumName = resolvedEnumName ?? name", span="233-233"];
n145 [cluster="Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.TryGetByFirst(TFirst, out TSecond)", label="Entry Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.TryGetByFirst(TFirst, out TSecond)", span="86-86"];
n139 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", label="resolvedEnumName = StringUtils.ToCamelCase(resolvedEnumName)", span="237-237"];
n146 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", label="Entry Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", span="148-148"];
n143 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", label="return finalName;", span="245-245"];
n144 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", label="Exit Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", span="222-222"];
n147 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ResolvedEnumName(Newtonsoft.Json.Utilities.BidirectionalDictionary<string, string>, string)", color=red, community=0, label="-1: string resolvedEnumName", span="250-250"];
n148 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ResolvedEnumName(Newtonsoft.Json.Utilities.BidirectionalDictionary<string, string>, string)", color=red, community=0, label="-1: map.TryGetBySecond(enumText, out resolvedEnumName)", span="251-251"];
n149 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ResolvedEnumName(Newtonsoft.Json.Utilities.BidirectionalDictionary<string, string>, string)", color=red, community=0, label="-1: resolvedEnumName = resolvedEnumName ?? enumText", span="252-252"];
n150 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ResolvedEnumName(Newtonsoft.Json.Utilities.BidirectionalDictionary<string, string>, string)", color=red, community=0, label="-1: return resolvedEnumName;", span="253-253"];
n151 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ResolvedEnumName(Newtonsoft.Json.Utilities.BidirectionalDictionary<string, string>, string)", label="Exit Newtonsoft.Json.Utilities.EnumUtils.ResolvedEnumName(Newtonsoft.Json.Utilities.BidirectionalDictionary<string, string>, string)", span="248-248"];
d40 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsInt32()", color=green, community=0, label="-1: return ReadAsInt32Internal();", span="202-202"];
d424 [label="Newtonsoft.Json.Bson.BsonReader", span=""];
d39 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsInt32()", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadAsInt32()", span="200-200"];
d61 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", color=green, community=0, label="-1: _bsonReaderState", span="255-255"];
d41 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsInt32()", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadAsInt32()", span="200-200"];
d42 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", label="Entry Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", span="607-607"];
d60 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label="bool success", span="253-253"];
d62 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", color=green, community=0, label="-1: BsonReaderState.Normal", span="257-257"];
d64 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", color=green, community=0, label="-1: BsonReaderState.ReferenceStart", span="260-260"];
d68 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label="BsonReaderState.CodeWScopeStart", span="265-265"];
d74 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label="throw JsonReaderException.Create(this, ''Unexpected state: {0}''.FormatWith(CultureInfo.InvariantCulture, _bsonReaderState));", span="273-273"];
d67 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", color=green, community=0, label="-1: success = ReadReference()", span="263-263"];
d63 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", color=green, community=0, label="-1: success = ReadNormal()", span="258-258"];
d65 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", color=green, community=0, label="-1: BsonReaderState.ReferenceRef", span="261-261"];
d75 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label="!success", span="276-276"];
d83 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadNormal()", span="404-404"];
d66 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", color=green, community=0, label="-1: BsonReaderState.ReferenceId", span="262-262"];
d84 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadReference()", span="353-353"];
d9 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", label="_reader = new BinaryReader(stream)", span="148-148"];
d10 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", label="_stack = new List<ContainerContext>()", span="149-149"];
d11 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", label="_readRootValueAsArray = readRootValueAsArray", span="150-150"];
d12 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", label="_dateTimeKindHandling = dateTimeKindHandling", span="151-151"];
d19 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)", label="_reader = reader", span="163-163"];
d20 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)", label="_stack = new List<ContainerContext>()", span="164-164"];
d21 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)", label="_readRootValueAsArray = readRootValueAsArray", span="165-165"];
d22 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)", label="_dateTimeKindHandling = dateTimeKindHandling", span="166-166"];
d25 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadElement()", label="_currentElementType = ReadType()", span="171-171"];
d26 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadElement()", label="string elementName = ReadString()", span="172-172"];
d32 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsBytes()", label="return ReadAsBytesInternal();", span="184-184"];
d36 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDecimal()", label="return ReadAsDecimalInternal();", span="193-193"];
d44 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsString()", label="return ReadAsStringInternal();", span="211-211"];
d48 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDateTime()", label="return ReadAsDateTimeInternal();", span="220-220"];
d52 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDateTimeOffset()", label="return ReadAsDateTimeOffsetInternal();", span="232-232"];
d56 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", label="_readType = Json.ReadType.Read", span="244-244"];
d57 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", label="return ReadInternal();", span="246-246"];
d73 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label="success = ReadCodeWScope()", span="270-270"];
d76 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label="SetToken(JsonToken.None)", span="278-278"];
d80 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label="SetToken(JsonToken.None)", span="286-286"];
d90 [cluster="Newtonsoft.Json.Bson.BsonReader.Close()", label="base.Close()", span="296-296"];
d91 [cluster="Newtonsoft.Json.Bson.BsonReader.Close()", label="CloseInput && _reader != null", span="298-298"];
d92 [cluster="Newtonsoft.Json.Bson.BsonReader.Close()", label="_reader.Close()", span="300-300"];
d96 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label=_bsonReaderState, span="308-308"];
d98 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="SetToken(JsonToken.PropertyName, ''$code'')", span="311-311"];
d99 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="_bsonReaderState = BsonReaderState.CodeWScopeCode", span="312-312"];
d102 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="ReadInt32()", span="316-316"];
d103 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="SetToken(JsonToken.String, ReadLengthString())", span="318-318"];
d104 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="_bsonReaderState = BsonReaderState.CodeWScopeScope", span="319-319"];
d107 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="CurrentState == State.PostValue", span="322-322"];
d108 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="SetToken(JsonToken.PropertyName, ''$scope'')", span="324-324"];
d110 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="SetToken(JsonToken.StartObject)", span="329-329"];
d111 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="_bsonReaderState = BsonReaderState.CodeWScopeScopeObject", span="330-330"];
d113 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="PushContext(newContext)", span="333-333"];
d114 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="newContext.Length = ReadInt32()", span="334-334"];
d117 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="bool result = ReadNormal()", span="339-339"];
d118 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="result && TokenType == JsonToken.EndObject", span="340-340"];
d119 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="_bsonReaderState = BsonReaderState.CodeWScopeScopeEnd", span="341-341"];
d122 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="SetToken(JsonToken.EndObject)", span="345-345"];
d123 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="_bsonReaderState = BsonReaderState.Normal", span="346-346"];
d132 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label=CurrentState, span="355-355"];
d134 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="SetToken(JsonToken.PropertyName, JsonTypeReflector.RefPropertyName)", span="359-359"];
d135 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="_bsonReaderState = BsonReaderState.ReferenceRef", span="360-360"];
d138 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="_bsonReaderState == BsonReaderState.ReferenceRef", span="365-365"];
d139 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="SetToken(JsonToken.String, ReadLengthString())", span="367-367"];
d141 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="_bsonReaderState == BsonReaderState.ReferenceId", span="370-370"];
d142 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="SetToken(JsonToken.Bytes, ReadBytes(12))", span="372-372"];
d144 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="throw JsonReaderException.Create(this, ''Unexpected state when reading BSON reference: '' + _bsonReaderState);", span="377-377"];
d146 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="_bsonReaderState == BsonReaderState.ReferenceRef", span="382-382"];
d147 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="SetToken(JsonToken.PropertyName, JsonTypeReflector.IdPropertyName)", span="384-384"];
d148 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="_bsonReaderState = BsonReaderState.ReferenceId", span="385-385"];
d150 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="_bsonReaderState == BsonReaderState.ReferenceId", span="388-388"];
d151 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="SetToken(JsonToken.EndObject)", span="390-390"];
d152 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="_bsonReaderState = BsonReaderState.Normal", span="391-391"];
d154 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="throw JsonReaderException.Create(this, ''Unexpected state when reading BSON reference: '' + _bsonReaderState);", span="396-396"];
d155 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="throw JsonReaderException.Create(this, ''Unexpected state when reading BSON reference: '' + CurrentState);", span="400-400"];
d158 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label=CurrentState, span="406-406"];
d160 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="JsonToken token = (!_readRootValueAsArray) ? JsonToken.StartObject : JsonToken.StartArray", span="410-410"];
d161 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="BsonType type = (!_readRootValueAsArray) ? BsonType.Object : BsonType.Array", span="411-411"];
d162 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="SetToken(token)", span="413-413"];
d164 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="PushContext(newContext)", span="415-415"];
d165 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="newContext.Length = ReadInt32()", span="416-416"];
d171 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="ReadType(_currentElementType)", span="424-424"];
d176 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="ContainerContext context = _currentContext", span="430-430"];
d182 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="ReadElement()", span="440-440"];
d183 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="ReadType(_currentElementType)", span="441-441"];
d185 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="SetToken(JsonToken.PropertyName, ReadElement())", span="446-446"];
d188 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="ReadByte() != 0", span="452-452"];
d189 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="throw JsonReaderException.Create(this, ''Unexpected end of object byte value.'');", span="453-453"];
d190 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="PopContext()", span="455-455"];
d191 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="_currentContext != null", span="456-456"];
d192 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="MovePosition(context.Length)", span="457-457"];
d194 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="SetToken(endToken)", span="460-460"];
d196 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="throw JsonReaderException.Create(this, ''Read past end of current container context.'');", span="465-465"];
d208 [cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()", label="_stack.RemoveAt(_stack.Count - 1)", span="484-484"];
d209 [cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()", label="_stack.Count == 0", span="485-485"];
d210 [cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()", label="_currentContext = null", span="486-486"];
d211 [cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()", label="_currentContext = _stack[_stack.Count - 1]", span="488-488"];
d214 [cluster="Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", label="_stack.Add(newContext)", span="493-493"];
d215 [cluster="Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", label="_currentContext = newContext", span="494-494"];
d218 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadByte()", label="MovePosition(1)", span="499-499"];
d219 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadByte()", label="return _reader.ReadByte();", span="500-500"];
d224 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="double d = ReadDouble()", span="508-508"];
d225 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="_floatParseHandling == FloatParseHandling.Decimal", span="510-510"];
d226 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="SetToken(JsonToken.Float, Convert.ToDecimal(d, CultureInfo.InvariantCulture))", span="511-511"];
d227 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="SetToken(JsonToken.Float, d)", span="513-513"];
d230 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="SetToken(JsonToken.String, ReadLengthString())", span="517-517"];
d232 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="SetToken(JsonToken.StartObject)", span="521-521"];
d234 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="PushContext(newContext)", span="524-524"];
d235 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="newContext.Length = ReadInt32()", span="525-525"];
d237 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="SetToken(JsonToken.StartArray)", span="530-530"];
d239 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="PushContext(newContext)", span="533-533"];
d240 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="newContext.Length = ReadInt32()", span="534-534"];
d242 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="SetToken(JsonToken.Bytes, ReadBinary())", span="538-538"];
d244 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="SetToken(JsonToken.Undefined)", span="541-541"];
d246 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="byte[] oid = ReadBytes(12)", span="544-544"];
d247 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="SetToken(JsonToken.Bytes, oid)", span="545-545"];
d249 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="bool b = Convert.ToBoolean(ReadByte())", span="548-548"];
d250 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="SetToken(JsonToken.Boolean, b)", span="549-549"];
d252 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="long ticks = ReadInt64()", span="552-552"];
d255 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label=DateTimeKindHandling, span="556-556"];
d261 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="SetToken(JsonToken.Date, dateTime)", span="569-569"];
d263 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="SetToken(JsonToken.Null)", span="572-572"];
d265 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="string expression = ReadString()", span="575-575"];
d266 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="string modifiers = ReadString()", span="576-576"];
d268 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="SetToken(JsonToken.String, regex)", span="579-579"];
d270 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="SetToken(JsonToken.StartObject)", span="582-582"];
d271 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="_bsonReaderState = BsonReaderState.ReferenceStart", span="583-583"];
d273 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="SetToken(JsonToken.String, ReadLengthString())", span="586-586"];
d275 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="SetToken(JsonToken.StartObject)", span="589-589"];
d276 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="_bsonReaderState = BsonReaderState.CodeWScopeStart", span="590-590"];
d278 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="SetToken(JsonToken.Integer, (long)ReadInt32())", span="593-593"];
d281 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="SetToken(JsonToken.Integer, ReadInt64())", span="597-597"];
d293 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary()", label="int dataLength = ReadInt32()", span="606-606"];
d294 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary()", label="BsonBinaryType binaryType = (BsonBinaryType)ReadByte()", span="608-608"];
d295 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary()", label="binaryType == BsonBinaryType.BinaryOld && !_jsonNet35BinaryCompatibility", span="612-612"];
d296 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary()", label="dataLength = ReadInt32()", span="614-614"];
d297 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary()", label="return ReadBytes(dataLength);", span="618-618"];
d299 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="EnsureBuffers()", span="623-623"];
d305 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="count < MaxCharBytesSize && (b = _reader.ReadByte()) > 0", span="634-634"];
d306 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="_byteBuffer[count++] = b", span="636-636"];
d310 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="int length = Encoding.UTF8.GetChars(_byteBuffer, 0, byteCount, _charBuffer, 0)", span="645-645"];
d311 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="MovePosition(totalBytesRead + 1)", span="647-647"];
d312 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="return new string(_charBuffer, 0, length);", span="648-648"];
d313 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="int lastFullCharStop = GetLastFullCharStop(count - 1)", span="653-653"];
d314 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="int charCount = Encoding.UTF8.GetChars(_byteBuffer, 0, lastFullCharStop + 1, _charBuffer, 0)", span="655-655"];
d317 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="builder.Append(_charBuffer, 0, charCount)", span="660-660"];
d320 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="Array.Copy(_byteBuffer, lastFullCharStop + 1, _byteBuffer, 0, offset)", span="666-666"];
d322 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="MovePosition(totalBytesRead + 1)", span="673-673"];
d335 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", label="int length = ReadInt32()", span="685-685"];
d336 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", label="MovePosition(length)", span="687-687"];
d337 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", label="string s = GetString(length - 1)", span="689-689"];
d338 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", label="_reader.ReadByte()", span="690-690"];
d344 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="EnsureBuffers()", span="700-700"];
d349 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="int byteCount = _reader.Read(_byteBuffer, offset, count)", span="714-714"];
d355 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="int charCount = Encoding.UTF8.GetChars(_byteBuffer, 0, byteCount, _charBuffer, 0)", span="729-729"];
d356 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="return new string(_charBuffer, 0, charCount);", span="730-730"];
d357 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="int lastFullCharStop = GetLastFullCharStop(byteCount - 1)", span="734-734"];
d360 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="int charCount = Encoding.UTF8.GetChars(_byteBuffer, 0, lastFullCharStop + 1, _charBuffer, 0)", span="739-739"];
d361 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="builder.Append(_charBuffer, 0, charCount)", span="740-740"];
d364 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="Array.Copy(_byteBuffer, lastFullCharStop + 1, _byteBuffer, 0, offset)", span="746-746"];
d374 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", label="bis = BytesInSequence(_byteBuffer[lookbackPos])", span="764-764"];
d394 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", label="_byteBuffer == null", span="802-802"];
d395 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", label="_byteBuffer = new byte[MaxCharBytesSize]", span="804-804"];
d396 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", label="_charBuffer == null", span="806-806"];
d398 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", label="_charBuffer = new char[charBufferSize]", span="809-809"];
d401 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadDouble()", label="MovePosition(8)", span="815-815"];
d402 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadDouble()", label="return _reader.ReadDouble();", span="816-816"];
d405 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt32()", label="MovePosition(4)", span="821-821"];
d406 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt32()", label="return _reader.ReadInt32();", span="822-822"];
d409 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt64()", label="MovePosition(8)", span="827-827"];
d410 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt64()", label="return _reader.ReadInt64();", span="828-828"];
d413 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType()", label="MovePosition(1)", span="833-833"];
d414 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType()", label="return (BsonType)_reader.ReadSByte();", span="834-834"];
d417 [cluster="Newtonsoft.Json.Bson.BsonReader.MovePosition(int)", label="_currentContext.Position += count", span="839-839"];
d419 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", label="MovePosition(count)", span="844-844"];
d420 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", label="return _reader.ReadBytes(count);", span="845-845"];
d59 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadInternal()", span="249-249"];
d69 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label="BsonReaderState.CodeWScopeCode", span="266-266"];
d82 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadInternal()", span="249-249"];
d86 [cluster="string.FormatWith(System.IFormatProvider, object)", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
d87 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="108-108"];
d78 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label="return true;", span="282-282"];
d203 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadNormal()", span="404-404"];
d156 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadReference()", span="353-353"];
d7 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", span="145-145"];
d8 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", label="ValidationUtils.ArgumentNotNull(stream, ''stream'')", span="147-147"];
d15 [cluster="System.IO.BinaryReader.BinaryReader(System.IO.Stream)", label="Entry System.IO.BinaryReader.BinaryReader(System.IO.Stream)", span="0-0"];
d16 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
d13 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", label="Exit Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", span="145-145"];
d17 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)", label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)", span="160-160"];
d18 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)", label="ValidationUtils.ArgumentNotNull(reader, ''reader'')", span="162-162"];
d23 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)", label="Exit Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)", span="160-160"];
d24 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadElement()", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadElement()", span="169-169"];
d29 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType()", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadType()", span="831-831"];
d27 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadElement()", label="return elementName;", span="173-173"];
d30 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadString()", span="621-621"];
d31 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsBytes()", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadAsBytes()", span="182-182"];
d33 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsBytes()", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadAsBytes()", span="182-182"];
d34 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", span="475-475"];
d35 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDecimal()", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadAsDecimal()", span="191-191"];
d37 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDecimal()", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadAsDecimal()", span="191-191"];
d38 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", label="Entry Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", span="550-550"];
d43 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsString()", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadAsString()", span="209-209"];
d45 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsString()", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadAsString()", span="209-209"];
d46 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", label="Entry Newtonsoft.Json.JsonReader.ReadAsStringInternal()", span="664-664"];
d47 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDateTime()", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadAsDateTime()", span="218-218"];
d49 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDateTime()", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadAsDateTime()", span="218-218"];
d50 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", span="710-710"];
d51 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDateTimeOffset()", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadAsDateTimeOffset()", span="230-230"];
d53 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDateTimeOffset()", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadAsDateTimeOffset()", span="230-230"];
d54 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", span="411-411"];
d55 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", label="Entry Newtonsoft.Json.Bson.BsonReader.Read()", span="242-242"];
d58 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", label="Exit Newtonsoft.Json.Bson.BsonReader.Read()", span="242-242"];
d72 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label="BsonReaderState.CodeWScopeScopeEnd", span="269-269"];
d85 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", span="306-306"];
d77 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label="return false;", span="279-279"];
d88 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", span="814-814"];
d79 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label=EndOfStreamException, span="284-284"];
d81 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label="return false;", span="287-287"];
d89 [cluster="Newtonsoft.Json.Bson.BsonReader.Close()", label="Entry Newtonsoft.Json.Bson.BsonReader.Close()", span="294-294"];
d94 [cluster="Newtonsoft.Json.JsonReader.Close()", label="Entry Newtonsoft.Json.JsonReader.Close()", span="1002-1002"];
d93 [cluster="Newtonsoft.Json.Bson.BsonReader.Close()", label="Exit Newtonsoft.Json.Bson.BsonReader.Close()", span="294-294"];
d95 [cluster="System.IO.BinaryReader.Close()", label="Entry System.IO.BinaryReader.Close()", span="0-0"];
d97 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="BsonReaderState.CodeWScopeStart", span="310-310"];
d101 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="BsonReaderState.CodeWScopeCode", span="314-314"];
d106 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="BsonReaderState.CodeWScopeScope", span="321-321"];
d116 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="BsonReaderState.CodeWScopeScopeObject", span="338-338"];
d121 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="BsonReaderState.CodeWScopeScopeEnd", span="344-344"];
d125 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="throw new ArgumentOutOfRangeException();", span="349-349"];
d127 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", span="824-824"];
d100 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="return true;", span="313-313"];
d128 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt32()", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadInt32()", span="819-819"];
d129 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", span="683-683"];
d105 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="return true;", span="320-320"];
d109 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="return true;", span="325-325"];
d112 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="ContainerContext newContext = new ContainerContext(BsonType.Object)", span="332-332"];
d130 [cluster="Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", label="Entry Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", span="491-491"];
d115 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="return true;", span="336-336"];
d120 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="return result;", span="343-343"];
d124 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="return true;", span="347-347"];
d133 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="State.ObjectStart", span="357-357"];
d137 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="State.Property", span="363-363"];
d145 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="State.PostValue", span="380-380"];
d136 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="return true;", span="361-361"];
d140 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="return true;", span="368-368"];
d143 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="return true;", span="373-373"];
d157 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", span="842-842"];
d149 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="return true;", span="386-386"];
d153 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="return true;", span="392-392"];
d159 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="State.Start", span="408-408"];
d167 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="State.Complete", span="419-419"];
d170 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="State.Property", span="422-422"];
d173 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="State.ObjectStart", span="427-427"];
d197 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="State.ConstructorStart", span="467-467"];
d198 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="State.Constructor", span="469-469"];
d199 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="State.Error", span="471-471"];
d200 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="State.Finished", span="473-473"];
d201 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="throw new ArgumentOutOfRangeException();", span="476-476"];
d163 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="ContainerContext newContext = new ContainerContext(type)", span="414-414"];
d166 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="return true;", span="417-417"];
d172 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="return true;", span="425-425"];
d204 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", span="503-503"];
d175 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="State.PostValue", span="429-429"];
d177 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="context == null", span="431-431"];
d179 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="int lengthMinusEnd = context.Length - 1", span="434-434"];
d180 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="context.Position < lengthMinusEnd", span="436-436"];
d181 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="context.Type == BsonType.Array", span="438-438"];
d187 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="context.Position == lengthMinusEnd", span="450-450"];
d193 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="JsonToken endToken = (context.Type == BsonType.Object) ? JsonToken.EndObject : JsonToken.EndArray", span="459-459"];
d184 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="return true;", span="442-442"];
d186 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="return true;", span="447-447"];
d205 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadByte()", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadByte()", span="497-497"];
d206 [cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()", label="Entry Newtonsoft.Json.Bson.BsonReader.PopContext()", span="482-482"];
d207 [cluster="Newtonsoft.Json.Bson.BsonReader.MovePosition(int)", label="Entry Newtonsoft.Json.Bson.BsonReader.MovePosition(int)", span="837-837"];
d195 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="return true;", span="461-461"];
d213 [cluster="System.Collections.Generic.List<T>.RemoveAt(int)", label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0"];
d212 [cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()", label="Exit Newtonsoft.Json.Bson.BsonReader.PopContext()", span="482-482"];
d217 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
d216 [cluster="Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", label="Exit Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", span="491-491"];
d220 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadByte()", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadByte()", span="497-497"];
d221 [cluster="System.IO.BinaryReader.ReadByte()", label="Entry System.IO.BinaryReader.ReadByte()", span="0-0"];
d223 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="BsonType.Number", span="507-507"];
d284 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadDouble()", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadDouble()", span="813-813"];
d283 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", span="503-503"];
d285 [cluster="System.Convert.ToDecimal(object, System.IFormatProvider)", label="Entry System.Convert.ToDecimal(object, System.IFormatProvider)", span="0-0"];
d229 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="BsonType.Symbol", span="516-516"];
d231 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="BsonType.Object", span="519-519"];
d233 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="ContainerContext newContext = new ContainerContext(BsonType.Object)", span="523-523"];
d236 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="BsonType.Array", span="528-528"];
d238 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="ContainerContext newContext = new ContainerContext(BsonType.Array)", span="532-532"];
d241 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="BsonType.Binary", span="537-537"];
d286 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary()", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadBinary()", span="604-604"];
d243 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="BsonType.Undefined", span="540-540"];
d245 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="BsonType.Oid", span="543-543"];
d248 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="BsonType.Boolean", span="547-547"];
d287 [cluster="System.Convert.ToBoolean(byte)", label="Entry System.Convert.ToBoolean(byte)", span="0-0"];
d251 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="BsonType.Date", span="551-551"];
d253 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="DateTime utcDateTime = DateTimeUtils.ConvertJavaScriptTicksToDateTime(ticks)", span="553-553"];
d288 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt64()", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadInt64()", span="825-825"];
d254 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="DateTime dateTime", span="555-555"];
d256 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="DateTimeKind.Unspecified", span="558-558"];
d258 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="DateTimeKind.Local", span="561-561"];
d260 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="dateTime = utcDateTime", span="565-565"];
d257 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="dateTime = DateTime.SpecifyKind(utcDateTime, DateTimeKind.Unspecified)", span="559-559"];
d259 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="dateTime = utcDateTime.ToLocalTime()", span="562-562"];
d262 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="BsonType.Null", span="571-571"];
d264 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="BsonType.Regex", span="574-574"];
d267 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="string regex = @''/'' + expression + @''/'' + modifiers", span="578-578"];
d269 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="BsonType.Reference", span="581-581"];
d272 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="BsonType.Code", span="585-585"];
d274 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="BsonType.CodeWScope", span="588-588"];
d277 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="BsonType.Integer", span="592-592"];
d280 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="BsonType.Long", span="596-596"];
d298 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary()", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadBinary()", span="604-604"];
d300 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="StringBuilder builder = null", span="625-625"];
d327 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", label="Entry Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", span="800-800"];
d303 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="int count = offset", span="632-632"];
d304 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="byte b", span="633-633"];
d307 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="int byteCount = count - offset", span="638-638"];
d309 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="count < MaxCharBytesSize && builder == null", span="641-641"];
d321 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="count < MaxCharBytesSize", span="671-671"];
d328 [cluster="System.Text.Encoding.GetChars(byte[], int, int, char[], int)", label="Entry System.Text.Encoding.GetChars(byte[], int, int, char[], int)", span="0-0"];
d308 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="totalBytesRead += byteCount", span="639-639"];
d326 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadString()", span="621-621"];
d329 [cluster="string.String(char[], int, int)", label="Entry string.String(char[], int, int)", span="0-0"];
d330 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", label="Entry Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", span="758-758"];
d318 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="lastFullCharStop < byteCount - 1", span="662-662"];
d319 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="offset = byteCount - lastFullCharStop - 1", span="664-664"];
d315 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="builder == null", span="657-657"];
d316 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="builder = new StringBuilder(MaxCharBytesSize * 2)", span="658-658"];
d332 [cluster="System.Text.StringBuilder.Append(char[], int, int)", label="Entry System.Text.StringBuilder.Append(char[], int, int)", span="0-0"];
d325 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label=true, span="680-680"];
d333 [cluster="System.Array.Copy(System.Array, int, System.Array, int, int)", label="Entry System.Array.Copy(System.Array, int, System.Array, int, int)", span="0-0"];
d323 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="return builder.ToString();", span="674-674"];
d341 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="Entry Newtonsoft.Json.Bson.BsonReader.GetString(int)", span="695-695"];
d339 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", label="return s;", span="692-692"];
d342 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="length == 0", span="697-697"];
d345 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="StringBuilder builder = null", span="702-702"];
d348 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="int count = ((length - totalBytesRead) > MaxCharBytesSize - offset)\r\n                    ? MaxCharBytesSize - offset\r\n                    : length - totalBytesRead", span="710-712"];
d347 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="int offset = 0", span="707-707"];
d350 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="byteCount == 0", span="716-716"];
d369 [cluster="System.IO.BinaryReader.Read(byte[], int, int)", label="Entry System.IO.BinaryReader.Read(byte[], int, int)", span="0-0"];
d352 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="totalBytesRead += byteCount", span="719-719"];
d353 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="byteCount += offset", span="723-723"];
d354 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="byteCount == length", span="725-725"];
d368 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="Exit Newtonsoft.Json.Bson.BsonReader.GetString(int)", span="695-695"];
d358 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="builder == null", span="736-736"];
d362 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="lastFullCharStop < byteCount - 1", span="742-742"];
d363 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="offset = byteCount - lastFullCharStop - 1", span="744-744"];
d359 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="builder = new StringBuilder(length)", span="737-737"];
d366 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="totalBytesRead < length", span="753-753"];
d371 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", label="int lookbackPos = start", span="760-760"];
d373 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", label="lookbackPos >= 0", span="762-762"];
d375 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", label="bis == 0", span="765-765"];
d383 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", label="Entry Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", span="791-791"];
d377 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", label="bis == 1", span="770-770"];
d379 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", label="bis == start - lookbackPos", span="780-780"];
d397 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", label="int charBufferSize = Encoding.UTF8.GetMaxCharCount(MaxCharBytesSize)", span="808-808"];
d399 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", label="Exit Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", span="800-800"];
d403 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadDouble()", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadDouble()", span="813-813"];
d404 [cluster="System.IO.BinaryReader.ReadDouble()", label="Entry System.IO.BinaryReader.ReadDouble()", span="0-0"];
d407 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt32()", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadInt32()", span="819-819"];
d408 [cluster="System.IO.BinaryReader.ReadInt32()", label="Entry System.IO.BinaryReader.ReadInt32()", span="0-0"];
d411 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt64()", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadInt64()", span="825-825"];
d412 [cluster="System.IO.BinaryReader.ReadInt64()", label="Entry System.IO.BinaryReader.ReadInt64()", span="0-0"];
d415 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType()", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadType()", span="831-831"];
d416 [cluster="System.IO.BinaryReader.ReadSByte()", label="Entry System.IO.BinaryReader.ReadSByte()", span="0-0"];
d418 [cluster="Newtonsoft.Json.Bson.BsonReader.MovePosition(int)", label="Exit Newtonsoft.Json.Bson.BsonReader.MovePosition(int)", span="837-837"];
d421 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", span="842-842"];
d422 [cluster="System.IO.BinaryReader.ReadBytes(int)", label="Entry System.IO.BinaryReader.ReadBytes(int)", span="0-0"];
d70 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label="BsonReaderState.CodeWScopeScope", span="267-267"];
d169 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="return false;", span="421-421"];
d178 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="return false;", span="432-432"];
d202 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="return false;", span="479-479"];
d14 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="52-52"];
d28 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadElement()", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadElement()", span="169-169"];
d71 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label="BsonReaderState.CodeWScopeScopeObject", span="268-268"];
d126 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", span="306-306"];
d131 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
d340 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", span="683-683"];
d0 [cluster="Newtonsoft.Json.Bson.BsonReader.ContainerContext.ContainerContext(Newtonsoft.Json.Bson.BsonType)", label="Entry Newtonsoft.Json.Bson.BsonReader.ContainerContext.ContainerContext(Newtonsoft.Json.Bson.BsonType)", span="80-80"];
d168 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="State.Closed", span="420-420"];
d174 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="State.ArrayStart", span="428-428"];
d222 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label=type, span="505-505"];
d282 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="throw new ArgumentOutOfRangeException(''type'', ''Unexpected BsonType value: '' + type);", span="600-600"];
d228 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="BsonType.String", span="515-515"];
d289 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", span="181-181"];
d290 [cluster="System.DateTime.SpecifyKind(System.DateTime, System.DateTimeKind)", label="Entry System.DateTime.SpecifyKind(System.DateTime, System.DateTimeKind)", span="0-0"];
d291 [cluster="System.DateTime.ToLocalTime()", label="Entry System.DateTime.ToLocalTime()", span="0-0"];
d279 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="BsonType.TimeStamp", span="595-595"];
d301 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="int totalBytesRead = 0", span="627-627"];
d302 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="int offset = 0", span="629-629"];
d324 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="offset = 0", span="677-677"];
d382 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", label="Exit Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", span="758-758"];
d380 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", label="return start;", span="783-783"];
d331 [cluster="System.Text.StringBuilder.StringBuilder(int)", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
d334 [cluster="System.Text.StringBuilder.ToString()", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
d343 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="return string.Empty;", span="698-698"];
d346 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="int totalBytesRead = 0", span="704-704"];
d367 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="return builder.ToString();", span="755-755"];
d351 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="throw new EndOfStreamException(''Unable to read beyond the end of the stream.'');", span="717-717"];
d365 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="offset = 0", span="750-750"];
d372 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", label="int bis = 0", span="761-761"];
d376 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", label="lookbackPos--", span="767-767"];
d378 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", label="lookbackPos--", span="776-776"];
d381 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", label="return lookbackPos;", span="787-787"];
d393 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", label="Exit Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", span="791-791"];
d384 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", label="b <= SeqRange1[1]", span="793-793"];
d386 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", label="b >= SeqRange2[0] && b <= SeqRange2[1]", span="794-794"];
d388 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", label="b >= SeqRange3[0] && b <= SeqRange3[1]", span="795-795"];
d390 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", label="b >= SeqRange4[0] && b <= SeqRange4[1]", span="796-796"];
d400 [cluster="System.Text.Encoding.GetMaxCharCount(int)", label="Entry System.Text.Encoding.GetMaxCharCount(int)", span="0-0"];
d2 [cluster="Newtonsoft.Json.Bson.BsonReader.ContainerContext.ContainerContext(Newtonsoft.Json.Bson.BsonType)", label="Exit Newtonsoft.Json.Bson.BsonReader.ContainerContext.ContainerContext(Newtonsoft.Json.Bson.BsonType)", span="80-80"];
d1 [cluster="Newtonsoft.Json.Bson.BsonReader.ContainerContext.ContainerContext(Newtonsoft.Json.Bson.BsonType)", label="Type = type", span="82-82"];
d292 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
d370 [cluster="System.IO.EndOfStreamException.EndOfStreamException(string)", label="Entry System.IO.EndOfStreamException.EndOfStreamException(string)", span="0-0"];
d385 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", label="return 1;", span="793-793"];
d387 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", label="return 2;", span="794-794"];
d389 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", label="return 3;", span="795-795"];
d391 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", label="return 4;", span="796-796"];
d392 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", label="return 0;", span="797-797"];
d423 [label="Newtonsoft.Json.Bson.BsonReader.ContainerContext", span=""];
m0_420 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", file="JsonSerializerCollectionsTests.cs", label="return _reader.ReadBytes(count);", span="845-845"];
m0_285 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()", span="608-608"];
m0_408 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", span="840-840"];
m0_291 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()", span="608-608"];
m0_778 [cluster="Newtonsoft.Json.Tests.Serialization.GenericItem<T>.GenericItem()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.GenericItem<T>.GenericItem()", span="2052-2052"];
m0_331 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m0_332 [cluster="System.Text.StringBuilder.Append(char[], int, int)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Text.StringBuilder.Append(char[], int, int)", span="0-0"];
m0_333 [cluster="System.Array.Copy(System.Array, int, System.Array, int, int)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Array.Copy(System.Array, int, System.Array, int, int)", span="0-0"];
m0_24 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, values.Count)", span="99-99"];
m0_25 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0, values[0])", span="100-100"];
m0_26 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, values[1])", span="101-101"];
m0_27 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, values[2])", span="102-102"];
m0_28 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", span="88-88"];
m0_29 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="527-527"];
m0_413 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="p.ReleaseCountries = new List<string> { ''Existing'' }", span="895-895"];
m0_414 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.PopulateObject(''{'ReleaseCountries':['Appended']}'', p, new JsonSerializerSettings\r\n            {\r\n                Converters = new List<JsonConverter> { new StringListAppenderConverter() }\r\n            })", span="897-900"];
m0_415 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, p.ReleaseCountries.Count)", span="902-902"];
m0_127 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryBadIEnumerableParameter.TestDictionaryBadIEnumerableParameter(System.Collections.Generic.Dictionary<string, string>)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryBadIEnumerableParameter.TestDictionaryBadIEnumerableParameter(System.Collections.Generic.Dictionary<string, string>)", span="268-268"];
m0_891 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="2086-2086"];
m0_892 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="return GetEnumerator();", span="2088-2088"];
m0_893 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="2086-2086"];
m0_459 [cluster="Newtonsoft.Json.Tests.TestObjects.GameObject.GameObject()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.GameObject.GameObject()", span="42-42"];
m0_129 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorBadIEnumerableParameter()", file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<JsonException>(\r\n                () => JsonConvert.SerializeObject(new TestDictionaryBadIEnumerableParameter(null)),\r\n                ''Constructor for 'Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests+TestDictionaryBadIEnumerableParameter' must have no parameters or a single parameter that implements 'System.Collections.Generic.IEnumerable`1[System.Collections.Generic.KeyValuePair`2[System.String,System.Int32]]'.'')", span="276-278"];
m0_335 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="return _dictionary.GetEnumerator();", span="712-712"];
m0_336 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="710-710"];
m0_337 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", span="717-717"];
m0_338 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", file="JsonSerializerCollectionsTests.cs", label="IDictionary<string, int> d = new Dictionary<string, int>\r\n            {\r\n                { ''one'', 1 },\r\n                { ''two'', 2 }\r\n            }", span="719-723"];
m0_339 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", file="JsonSerializerCollectionsTests.cs", label="CustomReadOnlyDictionary<string, int> dic = new CustomReadOnlyDictionary<string, int>(d)", span="725-725"];
m0_340 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(dic, Formatting.Indented)", span="727-727"];
m0_51 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDateTimeOffset()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadAsDateTimeOffset()", span="230-230"];
m0_52 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDateTimeOffset()", file="JsonSerializerCollectionsTests.cs", label="return ReadAsDateTimeOffsetInternal();", span="232-232"];
m0_271 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="_bsonReaderState = BsonReaderState.ReferenceStart", span="583-583"];
m0_273 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="SetToken(JsonToken.String, ReadLengthString())", span="586-586"];
m0_275 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="SetToken(JsonToken.StartObject)", span="589-589"];
m0_272 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="BsonType.Code", span="585-585"];
m0_274 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="BsonType.CodeWScope", span="588-588"];
m0_276 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="_bsonReaderState = BsonReaderState.CodeWScopeStart", span="590-590"];
m0_94 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="TestDictionaryPrivateParameterized c2 = JsonConvert.DeserializeObject<TestDictionaryPrivateParameterized>(json)", span="212-212"];
m0_306 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="JsonSerializerCollectionsTests.cs", label="_byteBuffer[count++] = b", span="636-636"];
m0_308 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="JsonSerializerCollectionsTests.cs", label="totalBytesRead += byteCount", span="639-639"];
m0_309 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="JsonSerializerCollectionsTests.cs", label="count < MaxCharBytesSize && builder == null", span="641-641"];
m0_310 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="JsonSerializerCollectionsTests.cs", label="int length = Encoding.UTF8.GetChars(_byteBuffer, 0, byteCount, _charBuffer, 0)", span="645-645"];
m0_307 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="JsonSerializerCollectionsTests.cs", label="int byteCount = count - offset", span="638-638"];
m0_311 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="JsonSerializerCollectionsTests.cs", label="MovePosition(totalBytesRead + 1)", span="647-647"];
m0_312 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="JsonSerializerCollectionsTests.cs", label="return new string(_charBuffer, 0, length);", span="648-648"];
m0_210 [cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()", file="JsonSerializerCollectionsTests.cs", label="_currentContext = null", span="486-486"];
m0_208 [cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()", file="JsonSerializerCollectionsTests.cs", label="_stack.RemoveAt(_stack.Count - 1)", span="484-484"];
m0_17 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="TestCollectionPrivateParameterized c1 = new TestCollectionPrivateParameterized()", span="90-90"];
m0_18 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="c1.Add(0)", span="91-91"];
m0_19 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="c1.Add(1)", span="92-92"];
m0_21 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(c1)", span="94-94"];
m0_22 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="TestCollectionPrivateParameterized c2 = JsonConvert.DeserializeObject<TestCollectionPrivateParameterized>(json)", span="95-95"];
m0_20 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="c1.Add(2)", span="93-93"];
m0_23 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="List<int> values = c2.ToList()", span="97-97"];
m0_234 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="PushContext(newContext)", span="524-524"];
m0_235 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="newContext.Length = ReadInt32()", span="525-525"];
m0_236 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="BsonType.Array", span="528-528"];
m0_261 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="SetToken(JsonToken.Date, dateTime)", span="569-569"];
m0_262 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="BsonType.Null", span="571-571"];
m0_263 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="SetToken(JsonToken.Null)", span="572-572"];
m0_214 [cluster="Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", file="JsonSerializerCollectionsTests.cs", label="_stack.Add(newContext)", span="493-493"];
m0_215 [cluster="Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", file="JsonSerializerCollectionsTests.cs", label="_currentContext = newContext", span="494-494"];
m0_216 [cluster="Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", span="491-491"];
m0_410 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt64()", file="JsonSerializerCollectionsTests.cs", label="return _reader.ReadInt64();", span="828-828"];
m0_373 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="JsonSerializerCollectionsTests.cs", label="lookbackPos >= 0", span="762-762"];
m0_379 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="JsonSerializerCollectionsTests.cs", label="bis == start - lookbackPos", span="780-780"];
m0_380 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="JsonSerializerCollectionsTests.cs", label="return start;", span="783-783"];
m0_378 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="JsonSerializerCollectionsTests.cs", label="lookbackPos--", span="776-776"];
m0_377 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="JsonSerializerCollectionsTests.cs", label="bis == 1", span="770-770"];
m0_374 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="JsonSerializerCollectionsTests.cs", label="bis = BytesInSequence(_byteBuffer[lookbackPos])", span="764-764"];
m0_376 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="JsonSerializerCollectionsTests.cs", label="lookbackPos--", span="767-767"];
m0_375 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="JsonSerializerCollectionsTests.cs", label="bis == 0", span="765-765"];
m0_381 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="JsonSerializerCollectionsTests.cs", label="return lookbackPos;", span="787-787"];
m0_237 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="SetToken(JsonToken.StartArray)", span="530-530"];
m0_238 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="ContainerContext newContext = new ContainerContext(BsonType.Array)", span="532-532"];
m0_239 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="PushContext(newContext)", span="533-533"];
m0_155 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="JsonSerializerCollectionsTests.cs", label="throw JsonReaderException.Create(this, ''Unexpected state when reading BSON reference: '' + CurrentState);", span="400-400"];
m0_157 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", span="842-842"];
m0_159 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="JsonSerializerCollectionsTests.cs", label="State.Start", span="408-408"];
m0_161 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="JsonSerializerCollectionsTests.cs", label="BsonType type = (!_readRootValueAsArray) ? BsonType.Object : BsonType.Array", span="411-411"];
m0_162 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="JsonSerializerCollectionsTests.cs", label="SetToken(token)", span="413-413"];
m0_163 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="JsonSerializerCollectionsTests.cs", label="ContainerContext newContext = new ContainerContext(type)", span="414-414"];
m0_156 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadReference()", span="353-353"];
m0_158 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="JsonSerializerCollectionsTests.cs", label=CurrentState, span="406-406"];
m0_160 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="JsonSerializerCollectionsTests.cs", label="JsonToken token = (!_readRootValueAsArray) ? JsonToken.StartObject : JsonToken.StartArray", span="410-410"];
m0_164 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="JsonSerializerCollectionsTests.cs", label="PushContext(newContext)", span="415-415"];
m0_344 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="JsonSerializerCollectionsTests.cs", label="EnsureBuffers()", span="700-700"];
m0_345 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="JsonSerializerCollectionsTests.cs", label="StringBuilder builder = null", span="702-702"];
m0_346 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="JsonSerializerCollectionsTests.cs", label="int totalBytesRead = 0", span="704-704"];
m0_753 [cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", span="29-29"];
m0_643 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncomplete3DArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncomplete3DArray()", span="1439-1439"];
m0_645 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncomplete3DArray()", file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<JsonException>(() => JsonConvert.DeserializeObject<Array3D>(json))", span="1443-1443"];
m0_644 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncomplete3DArray()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[/*hi*/[/*hi*/[1/*hi*/,/*hi*/1/*hi*/,1]/*hi*/,/*hi*/[1,1''", span="1441-1441"];
m0_646 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncomplete3DArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncomplete3DArray()", span="1439-1439"];
m0_474 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", span="1013-1013"];
m0_477 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, values.Count)", span="1019-1019"];
m0_478 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''aaa'', values[0].Value.Key)", span="1020-1020"];
m0_479 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, values[0].Value.Value.Count)", span="1021-1021"];
m0_480 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''1'', values[0].Value.Value[0])", span="1022-1022"];
m0_481 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''2'', values[0].Value.Value[1])", span="1023-1023"];
m0_482 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(null, values[1])", span="1024-1024"];
m0_483 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''bbb'', values[2].Value.Key)", span="1025-1025"];
m0_484 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, values[2].Value.Value.Count)", span="1026-1026"];
m0_485 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''3'', values[2].Value.Value[0])", span="1027-1027"];
m0_486 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''4'', values[2].Value.Value[1])", span="1028-1028"];
m0_476 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="IList<KeyValuePair<string, IList<string>>?> values = JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>?>>(json)", span="1017-1017"];
m0_475 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="string json = @''[ { ''''Value'''': [ ''''1'''', ''''2'''' ], ''''Key'''': ''''aaa'''', ''''BadContent'''': [ 0 ] }, null, { ''''Value'''': [ ''''3'''', ''''4'''' ], ''''Key'''': ''''bbb'''' } ]''", span="1015-1015"];
m0_487 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", span="1013-1013"];
m0_288 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, list[0])", span="613-613"];
m0_409 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonSerializerCollectionsTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m0_411 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", span="892-892"];
m0_278 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="SetToken(JsonToken.Integer, (long)ReadInt32())", span="593-593"];
m0_280 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="BsonType.Long", span="596-596"];
m0_281 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="SetToken(JsonToken.Integer, ReadInt64())", span="597-597"];
m0_282 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="throw new ArgumentOutOfRangeException(''type'', ''Unexpected BsonType value: '' + type);", span="600-600"];
m0_279 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="BsonType.TimeStamp", span="595-595"];
m0_283 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", span="503-503"];
m0_165 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="JsonSerializerCollectionsTests.cs", label="newContext.Length = ReadInt32()", span="416-416"];
m0_43 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(c1)", span="125-125"];
m0_44 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()", file="JsonSerializerCollectionsTests.cs", label="TestCollectionPrivate c2 = JsonConvert.DeserializeObject<TestCollectionPrivate>(json)", span="126-126"];
m0_45 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()", file="JsonSerializerCollectionsTests.cs", label="List<int> values = c2.ToList()", span="128-128"];
m0_533 [cluster="Newtonsoft.Json.Tests.Serialization.Array2D.Array2D()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Array2D.Array2D()", span="2028-2028"];
m0_509 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()", span="1077-1077"];
m0_512 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''NonReadOnlyList'''': [\r\n    1\r\n  ],\r\n  ''''NonReadOnlyDictionary'''': {\r\n    ''''first'''': 2\r\n  },\r\n  ''''Array'''': [\r\n    3\r\n  ],\r\n  ''''List'''': [\r\n    4\r\n  ],\r\n  ''''Dictionary'''': {\r\n    ''''first'''': 5\r\n  },\r\n  ''''IReadOnlyCollection'''': [\r\n    6\r\n  ],\r\n  ''''ReadOnlyCollection'''': [\r\n    7\r\n  ],\r\n  ''''IReadOnlyList'''': [\r\n    8\r\n  ],\r\n  ''''IReadOnlyDictionary'''': {\r\n    ''''first'''': 9\r\n  },\r\n  ''''ReadOnlyDictionary'''': {\r\n    ''''first'''': 10\r\n  }\r\n}'', json)", span="1083-1114"];
m0_511 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="1081-1081"];
m0_510 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="PopulateReadOnlyTestClass c1 = new PopulateReadOnlyTestClass()", span="1079-1079"];
m0_513 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()", span="1077-1077"];
m0_543 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", span="1194-1194"];
m0_549 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Before'''': ''''Before!'''',\r\n  ''''Coordinates'''': [\r\n    [\r\n      [\r\n        1.0,\r\n        1.0,\r\n        1.0\r\n      ],\r\n      [\r\n        1.0,\r\n        1.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        1.0,\r\n        2.0,\r\n        1.0\r\n      ],\r\n      [\r\n        1.0,\r\n        2.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        2.0,\r\n        1.0,\r\n        1.0\r\n      ],\r\n      [\r\n        2.0,\r\n        1.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        2.0,\r\n        2.0,\r\n        1.0\r\n      ],\r\n      [\r\n        2.0,\r\n        2.0,\r\n        2.0\r\n      ]\r\n    ]\r\n  ],\r\n  ''''After'''': ''''After!''''\r\n}'', json)", span="1203-1256"];
m0_548 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(aa, Formatting.Indented)", span="1201-1201"];
m0_544 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Array3DWithConverter aa = new Array3DWithConverter()", span="1196-1196"];
m0_547 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="aa.Coordinates = new[,,] { { { 1, 1, 1 }, { 1, 1, 2 } }, { { 1, 2, 1 }, { 1, 2, 2 } }, { { 2, 1, 1 }, { 2, 1, 2 } }, { { 2, 2, 1 }, { 2, 2, 2 } } }", span="1199-1199"];
m0_545 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="aa.Before = ''Before!''", span="1197-1197"];
m0_546 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="aa.After = ''After!''", span="1198-1198"];
m0_550 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", span="1194-1194"];
m0_53 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDateTimeOffset()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadAsDateTimeOffset()", span="230-230"];
m0_54 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", span="411-411"];
m0_55 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.Read()", span="242-242"];
m0_677 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", span="1489-1489"];
m0_682 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$values'''': [\r\n    {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$values'''': [\r\n        [\r\n          {\r\n            ''''$id'''': ''''3'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$ref'''': ''''3''''\r\n          }\r\n        ],\r\n        [\r\n          {\r\n            ''''$ref'''': ''''3''''\r\n          },\r\n          {\r\n            ''''$ref'''': ''''3''''\r\n          }\r\n        ]\r\n      ]\r\n    },\r\n    {\r\n      ''''$ref'''': ''''2''''\r\n    }\r\n  ]\r\n}'', json)", span="1508-1539"];
m0_681 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(values1, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                Formatting = Formatting.Indented\r\n            })", span="1502-1506"];
m0_680 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", file="JsonSerializerCollectionsTests.cs", label="IList<Event1[,]> values1 = new List<Event1[,]>\r\n            {\r\n                array1,\r\n                array1\r\n            }", span="1496-1500"];
m0_679 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", file="JsonSerializerCollectionsTests.cs", label="Event1[,] array1 = new[,] { { e1, e1 }, { e1, e1 } }", span="1495-1495"];
m0_678 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", file="JsonSerializerCollectionsTests.cs", label="Event1 e1 = new Event1\r\n            {\r\n                EventName = ''EventName!''\r\n            }", span="1491-1494"];
m0_683 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", span="1489-1489"];
m0_330 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", span="758-758"];
m0_7 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", span="145-145"];
m0_287 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, list.Count)", span="612-612"];
m0_14 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="52-52"];
m0_289 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", span="181-181"];
m0_290 [cluster="System.DateTime.SpecifyKind(System.DateTime, System.DateTimeKind)", file="JsonSerializerCollectionsTests.cs", label="Entry System.DateTime.SpecifyKind(System.DateTime, System.DateTimeKind)", span="0-0"];
m0_286 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadBinary()", span="604-604"];
m0_761 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="799-799"];
m0_293 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerCollectionsTests.cs", label="IReadOnlyCollection<int> list = JsonConvert.DeserializeObject<IReadOnlyCollection<int>>(''[1,2,3]'')", span="621-621"];
m0_294 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, list.Count)", span="623-623"];
m0_297 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, list.ElementAt(2))", span="627-627"];
m0_295 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, list.ElementAt(0))", span="625-625"];
m0_296 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, list.ElementAt(1))", span="626-626"];
m0_298 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", span="619-619"];
m0_46 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, values.Count)", span="130-130"];
m0_726 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", span="1689-1689"];
m0_733 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''personsName'''': ''''The Idiot in Next To Me'''',\r\n  ''''pNumbers'''': [\r\n    {\r\n      ''''phoneNumber'''': ''''555-1212''''\r\n    },\r\n    {\r\n      ''''phoneNumber'''': ''''444-1212''''\r\n    }\r\n  ]\r\n}'', json)", span="1701-1711"];
m0_732 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(name, Formatting.Indented)", span="1699-1699"];
m0_734 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="Name newName = JsonConvert.DeserializeObject<Name>(json)", span="1713-1713"];
m0_735 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''The Idiot in Next To Me'', newName.personsName)", span="1715-1715"];
m0_736 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, newName.pNumbers.Count)", span="1718-1718"];
m0_737 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''555-1212'', newName.pNumbers[0].phoneNumber)", span="1719-1719"];
m0_738 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''444-1212'', newName.pNumbers[1].phoneNumber)", span="1720-1720"];
m0_727 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="Name name = new Name(''The Idiot in Next To Me'')", span="1691-1691"];
m0_731 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="name.pNumbers.Add(p2)", span="1697-1697"];
m0_728 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="PhoneNumber p1 = new PhoneNumber(''555-1212'')", span="1693-1693"];
m0_730 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="name.pNumbers.Add(p1)", span="1696-1696"];
m0_729 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="PhoneNumber p2 = new PhoneNumber(''444-1212'')", span="1694-1694"];
m0_739 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", span="1689-1689"];
m0_508 [cluster="System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.ReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.ReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m0_666 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", span="1471-1471"];
m0_675 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(json, after)", span="1485-1485"];
m0_669 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="1477-1477"];
m0_670 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''After!'', aa.After)", span="1478-1478"];
m0_671 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, aa.Coordinates.GetLength(0))", span="1479-1479"];
m0_672 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0, aa.Coordinates.GetLength(1))", span="1480-1480"];
m0_673 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0, aa.Coordinates.GetLength(2))", span="1481-1481"];
m0_667 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[]],''''After'''':''''After!''''}''", span="1473-1473"];
m0_674 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="string after = JsonConvert.SerializeObject(aa)", span="1483-1483"];
m0_668 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="1475-1475"];
m0_676 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", span="1471-1471"];
m0_254 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="DateTime dateTime", span="555-555"];
m0_150 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="JsonSerializerCollectionsTests.cs", label="_bsonReaderState == BsonReaderState.ReferenceId", span="388-388"];
m0_151 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="JsonSerializerCollectionsTests.cs", label="SetToken(JsonToken.EndObject)", span="390-390"];
m0_152 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="JsonSerializerCollectionsTests.cs", label="_bsonReaderState = BsonReaderState.Normal", span="391-391"];
m0_719 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", span="1677-1677"];
m0_722 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(4, o.Count)", span="1682-1682"];
m0_723 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, ((JArray)o[2]).Count)", span="1683-1683"];
m0_724 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0, ((JObject)o[3]).Count)", span="1684-1684"];
m0_721 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", file="JsonSerializerCollectionsTests.cs", label="ArrayList o = JsonConvert.DeserializeObject<ArrayList>(jsonText)", span="1680-1680"];
m0_720 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", file="JsonSerializerCollectionsTests.cs", label="string jsonText = @''[3, ''''somestring'''',[1,2,3],{}]''", span="1679-1679"];
m0_725 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", span="1677-1677"];
m0_359 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="JsonSerializerCollectionsTests.cs", label="builder = new StringBuilder(length)", span="737-737"];
m0_362 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="JsonSerializerCollectionsTests.cs", label="lastFullCharStop < byteCount - 1", span="742-742"];
m0_365 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="JsonSerializerCollectionsTests.cs", label="offset = 0", span="750-750"];
m0_368 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.GetString(int)", span="695-695"];
m0_361 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="JsonSerializerCollectionsTests.cs", label="builder.Append(_charBuffer, 0, charCount)", span="740-740"];
m0_363 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="JsonSerializerCollectionsTests.cs", label="offset = byteCount - lastFullCharStop - 1", span="744-744"];
m0_364 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="JsonSerializerCollectionsTests.cs", label="Array.Copy(_byteBuffer, lastFullCharStop + 1, _byteBuffer, 0, offset)", span="746-746"];
m0_366 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="JsonSerializerCollectionsTests.cs", label="totalBytesRead < length", span="753-753"];
m0_367 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="JsonSerializerCollectionsTests.cs", label="return builder.ToString();", span="755-755"];
m0_360 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="JsonSerializerCollectionsTests.cs", label="int charCount = Encoding.UTF8.GetChars(_byteBuffer, 0, lastFullCharStop + 1, _charBuffer, 0)", span="739-739"];
m0_369 [cluster="System.IO.BinaryReader.Read(byte[], int, int)", file="JsonSerializerCollectionsTests.cs", label="Entry System.IO.BinaryReader.Read(byte[], int, int)", span="0-0"];
m0_78 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", file="JsonSerializerCollectionsTests.cs", label="return true;", span="282-282"];
m0_79 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", file="JsonSerializerCollectionsTests.cs", label=EndOfStreamException, span="284-284"];
m0_590 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", span="1364-1364"];
m0_601 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(json, after)", span="1380-1380"];
m0_593 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="1370-1370"];
m0_594 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''After!'', aa.After)", span="1371-1371"];
m0_595 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(4, aa.Coordinates.GetLength(0))", span="1372-1372"];
m0_596 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, aa.Coordinates.GetLength(1))", span="1373-1373"];
m0_597 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, aa.Coordinates.GetLength(2))", span="1374-1374"];
m0_598 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, aa.Coordinates[0, 0, 0])", span="1375-1375"];
m0_599 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, aa.Coordinates[1, 1, 1])", span="1376-1376"];
m0_591 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],[2,2,2]]],''''After'''':''''After!''''}''", span="1366-1366"];
m0_600 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="string after = JsonConvert.SerializeObject(aa)", span="1378-1378"];
m0_592 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="1368-1368"];
m0_602 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", span="1364-1364"];
m0_229 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="BsonType.Symbol", span="516-516"];
m0_382 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", span="758-758"];
m0_383 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", span="791-791"];
m0_387 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", file="JsonSerializerCollectionsTests.cs", label="return 2;", span="794-794"];
m0_389 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", file="JsonSerializerCollectionsTests.cs", label="return 3;", span="795-795"];
m0_390 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", file="JsonSerializerCollectionsTests.cs", label="b >= SeqRange4[0] && b <= SeqRange4[1]", span="796-796"];
m0_391 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", file="JsonSerializerCollectionsTests.cs", label="return 4;", span="796-796"];
m0_392 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", file="JsonSerializerCollectionsTests.cs", label="return 0;", span="797-797"];
m0_393 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", span="791-791"];
m0_384 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", file="JsonSerializerCollectionsTests.cs", label="b <= SeqRange1[1]", span="793-793"];
m0_385 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", file="JsonSerializerCollectionsTests.cs", label="return 1;", span="793-793"];
m0_386 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", file="JsonSerializerCollectionsTests.cs", label="b >= SeqRange2[0] && b <= SeqRange2[1]", span="794-794"];
m0_388 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", file="JsonSerializerCollectionsTests.cs", label="b >= SeqRange3[0] && b <= SeqRange3[1]", span="795-795"];
m0_394 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", file="JsonSerializerCollectionsTests.cs", label="_byteBuffer == null", span="802-802"];
m0_782 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", span="1773-1773"];
m0_790 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(articles1.Count, articles2.Count)", span="1786-1786"];
m0_791 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(articles1[0].Name, articles2[0].Name)", span="1787-1787"];
m0_785 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerCollectionsTests.cs", label="ArticleCollection articles1 = new ArticleCollection()", span="1778-1778"];
m0_789 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerCollectionsTests.cs", label="ArticleCollection articles2 = JsonConvert.DeserializeObject<ArticleCollection>(jsonText)", span="1784-1784"];
m0_788 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerCollectionsTests.cs", label="string jsonText = JsonConvert.SerializeObject(articles1)", span="1782-1782"];
m0_784 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerCollectionsTests.cs", label="Article a2 = new Article(''a2'')", span="1776-1776"];
m0_786 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerCollectionsTests.cs", label="articles1.Add(a1)", span="1779-1779"];
m0_787 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerCollectionsTests.cs", label="articles1.Add(a2)", span="1780-1780"];
m0_783 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerCollectionsTests.cs", label="Article a1 = new Article(''a1'')", span="1775-1775"];
m0_792 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", span="1773-1773"];
m0_416 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Existing'', p.ReleaseCountries[0])", span="903-903"];
m0_752 [cluster="Newtonsoft.Json.Tests.TestObjects.ProductCollection.ProductCollection()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ProductCollection.ProductCollection()", span="29-29"];
m0_438 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", span="937-937"];
m0_441 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''First'''': 1,\r\n  ''''Second'''': null,\r\n  ''''Third'''': 3\r\n}'', json)", span="948-952"];
m0_440 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(v1, Formatting.Indented)", span="946-946"];
m0_442 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerCollectionsTests.cs", label="IDictionary<string, int?> v2 = JsonConvert.DeserializeObject<IDictionary<string, int?>>(json)", span="954-954"];
m0_443 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, v2.Count)", span="955-955"];
m0_444 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, v2[''First''])", span="956-956"];
m0_445 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(null, v2[''Second''])", span="957-957"];
m0_446 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, v2[''Third''])", span="958-958"];
m0_439 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerCollectionsTests.cs", label="IDictionary<string, int?> v1 = new Dictionary<string, int?>\r\n            {\r\n                { ''First'', 1 },\r\n                { ''Second'', null },\r\n                { ''Third'', 3 }\r\n            }", span="939-944"];
m0_447 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", span="937-937"];
m0_793 [cluster="Newtonsoft.Json.Tests.TestObjects.Article.Article(string)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Article.Article(string)", span="35-35"];
m0_35 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDecimal()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadAsDecimal()", span="191-191"];
m0_36 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDecimal()", file="JsonSerializerCollectionsTests.cs", label="return ReadAsDecimalInternal();", span="193-193"];
m0_37 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDecimal()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadAsDecimal()", span="191-191"];
m0_421 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", span="842-842"];
m0_610 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()", span="1392-1392"];
m0_612 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()", file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Array3D>(json), ''Unexpected token when deserializing multidimensional array: StartObject. Path 'Coordinates[3][1]', line 1, position 99.'')", span="1396-1396"];
m0_611 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],{}]],''''After'''':''''After!''''}''", span="1394-1394"];
m0_613 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()", span="1392-1392"];
m0_802 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", span="1805-1805"];
m0_809 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''Name'''': ''''Product 1'''',\r\n    ''''ExpiryDate'''': ''''2000-12-29T00:00:00Z'''',\r\n    ''''Price'''': 99.95,\r\n    ''''Sizes'''': null\r\n  },\r\n  {\r\n    ''''Name'''': ''''Product 2'''',\r\n    ''''ExpiryDate'''': ''''2009-07-31T00:00:00Z'''',\r\n    ''''Price'''': 12.50,\r\n    ''''Sizes'''': null\r\n  }\r\n]'', json)", span="1840-1853"];
m0_808 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(products, Formatting.Indented)", span="1824-1824"];
m0_805 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="List<Product> products = new List<Product>()", span="1820-1820"];
m0_807 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="products.Add(p2)", span="1822-1822"];
m0_804 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="Product p2 = new Product\r\n            {\r\n                Name = ''Product 2'',\r\n                Price = 12.50m,\r\n                ExpiryDate = new DateTime(2009, 7, 31, 0, 0, 0, DateTimeKind.Utc),\r\n            }", span="1813-1818"];
m0_806 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="products.Add(p1)", span="1821-1821"];
m0_803 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="Product p1 = new Product\r\n            {\r\n                Name = ''Product 1'',\r\n                Price = 99.95m,\r\n                ExpiryDate = new DateTime(2000, 12, 29, 0, 0, 0, DateTimeKind.Utc),\r\n            }", span="1807-1812"];
m0_810 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", span="1805-1805"];
m0_33 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsBytes()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadAsBytes()", span="182-182"];
m0_34 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", span="475-475"];
m0_696 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="732-732"];
m0_213 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<T>)", span="476-476"];
m0_88 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivateParameterized()", span="205-205"];
m0_780 [cluster="Newtonsoft.Json.Tests.Serialization.NonGenericItem.NonGenericItem()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.NonGenericItem.NonGenericItem()", span="2057-2057"];
m0_50 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()", span="119-119"];
m0_59 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="148-148"];
m0_60 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionBadIEnumerableParameter.TestCollectionBadIEnumerableParameter(System.Collections.Generic.List<string>)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionBadIEnumerableParameter.TestCollectionBadIEnumerableParameter(System.Collections.Generic.List<string>)", span="155-155"];
m0_61 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionBadIEnumerableParameter.TestCollectionBadIEnumerableParameter(System.Collections.Generic.List<string>)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionBadIEnumerableParameter.TestCollectionBadIEnumerableParameter(System.Collections.Generic.List<string>)", span="155-155"];
m0_62 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorBadIEnumerableParameter()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorBadIEnumerableParameter()", span="161-161"];
m0_64 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorBadIEnumerableParameter()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorBadIEnumerableParameter()", span="161-161"];
m0_68 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", file="JsonSerializerCollectionsTests.cs", label="BsonReaderState.CodeWScopeStart", span="265-265"];
m0_74 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, l[0])", span="185-185"];
m0_63 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorBadIEnumerableParameter()", file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<JsonException>(\r\n                () => JsonConvert.SerializeObject(new TestCollectionBadIEnumerableParameter(null)),\r\n                ''Constructor for 'Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests+TestCollectionBadIEnumerableParameter' must have no parameters or a single parameter that implements 'System.Collections.Generic.IEnumerable`1[System.Int32]'.'')", span="163-165"];
m0_65 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="164-164"];
m0_66 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.SerializeObject(new TestCollectionBadIEnumerableParameter(null))", span="164-164"];
m0_67 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="164-164"];
m0_69 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", file="JsonSerializerCollectionsTests.cs", label="BsonReaderState.CodeWScopeCode", span="266-266"];
m0_70 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()", span="179-179"];
m0_71 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()", file="JsonSerializerCollectionsTests.cs", label="string json = @''[1,2,3]''", span="181-181"];
m0_72 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()", file="JsonSerializerCollectionsTests.cs", label="TestCollectionNonGeneric l = JsonConvert.DeserializeObject<TestCollectionNonGeneric>(json)", span="182-182"];
m0_73 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, l.Count)", span="184-184"];
m0_75 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, l[1])", span="186-186"];
m0_76 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, l[2])", span="187-187"];
m0_77 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()", span="179-179"];
m0_80 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", file="JsonSerializerCollectionsTests.cs", label="SetToken(JsonToken.None)", span="286-286"];
m0_81 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", file="JsonSerializerCollectionsTests.cs", label="return false;", span="287-287"];
m0_82 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadInternal()", span="249-249"];
m0_100 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="JsonSerializerCollectionsTests.cs", label="return true;", span="313-313"];
m0_4 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="125-125"];
m0_5 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader)", span="134-134"];
m0_6 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader)", span="134-134"];
m0_617 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()", span="1400-1400"];
m0_619 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()", file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<Exception>(() => JsonConvert.DeserializeObject<Array3D>(json), ''Cannot deserialize non-cubical array as multidimensional array.'')", span="1404-1404"];
m0_618 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],[2,2,2]]],''''After'''':''''After!''''}''", span="1402-1402"];
m0_620 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()", span="1400-1400"];
m0_120 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="JsonSerializerCollectionsTests.cs", label="return result;", span="343-343"];
m0_121 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="JsonSerializerCollectionsTests.cs", label="BsonReaderState.CodeWScopeScopeEnd", span="344-344"];
m0_122 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="JsonSerializerCollectionsTests.cs", label="SetToken(JsonToken.EndObject)", span="345-345"];
m0_218 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadByte()", file="JsonSerializerCollectionsTests.cs", label="MovePosition(1)", span="499-499"];
m0_219 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadByte()", file="JsonSerializerCollectionsTests.cs", label="return _reader.ReadByte();", span="500-500"];
m0_220 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadByte()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadByte()", span="497-497"];
m0_434 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()", span="930-930"];
m0_436 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, list.Count)", span="933-933"];
m0_435 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()", file="JsonSerializerCollectionsTests.cs", label="IList list = JsonConvert.DeserializeObject<IList>(''['1', 'two', 'III']'')", span="932-932"];
m0_437 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()", span="930-930"];
m0_249 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="bool b = Convert.ToBoolean(ReadByte())", span="548-548"];
m0_251 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="BsonType.Date", span="551-551"];
m0_250 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="SetToken(JsonToken.Boolean, b)", span="549-549"];
m0_252 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="long ticks = ReadInt64()", span="552-552"];
m0_253 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="DateTime utcDateTime = DateTimeUtils.ConvertJavaScriptTicksToDateTime(ticks)", span="553-553"];
m0_154 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="JsonSerializerCollectionsTests.cs", label="throw JsonReaderException.Create(this, ''Unexpected state when reading BSON reference: '' + _bsonReaderState);", span="396-396"];
m0_89 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="TestDictionaryPrivateParameterized c1 = new TestDictionaryPrivateParameterized()", span="207-207"];
m0_90 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="c1.Add(''zero'', 0)", span="208-208"];
m0_91 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="c1.Add(''one'', 1)", span="209-209"];
m0_92 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="c1.Add(''two'', 2)", span="210-210"];
m0_93 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(c1)", span="211-211"];
m0_240 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="newContext.Length = ReadInt32()", span="534-534"];
m0_242 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="SetToken(JsonToken.Bytes, ReadBinary())", span="538-538"];
m0_241 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="BsonType.Binary", span="537-537"];
m0_243 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="BsonType.Undefined", span="540-540"];
m0_525 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", span="1168-1168"];
m0_531 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}'', json)", span="1177-1177"];
m0_530 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(aa)", span="1175-1175"];
m0_526 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Array2D aa = new Array2D()", span="1170-1170"];
m0_529 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="aa.Coordinates = new[,] { { 1, 1 }, { 1, 2 }, { 2, 1 }, { 2, 2 } }", span="1173-1173"];
m0_527 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="aa.Before = ''Before!''", span="1171-1171"];
m0_528 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="aa.After = ''After!''", span="1172-1172"];
m0_532 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", span="1168-1168"];
m0_341 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.GetString(int)", span="695-695"];
m0_342 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="JsonSerializerCollectionsTests.cs", label="length == 0", span="697-697"];
m0_323 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="JsonSerializerCollectionsTests.cs", label="return builder.ToString();", span="674-674"];
m0_324 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="JsonSerializerCollectionsTests.cs", label="offset = 0", span="677-677"];
m0_325 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="JsonSerializerCollectionsTests.cs", label=true, span="680-680"];
m0_106 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="JsonSerializerCollectionsTests.cs", label="BsonReaderState.CodeWScopeScope", span="321-321"];
m0_113 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="JsonSerializerCollectionsTests.cs", label="PushContext(newContext)", span="333-333"];
m0_114 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="JsonSerializerCollectionsTests.cs", label="newContext.Length = ReadInt32()", span="334-334"];
m0_115 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="JsonSerializerCollectionsTests.cs", label="return true;", span="336-336"];
m0_116 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="JsonSerializerCollectionsTests.cs", label="BsonReaderState.CodeWScopeScopeObject", span="338-338"];
m0_112 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="JsonSerializerCollectionsTests.cs", label="ContainerContext newContext = new ContainerContext(BsonType.Object)", span="332-332"];
m0_111 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="JsonSerializerCollectionsTests.cs", label="_bsonReaderState = BsonReaderState.CodeWScopeScopeObject", span="330-330"];
m0_107 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="JsonSerializerCollectionsTests.cs", label="CurrentState == State.PostValue", span="322-322"];
m0_110 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="JsonSerializerCollectionsTests.cs", label="SetToken(JsonToken.StartObject)", span="329-329"];
m0_108 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="JsonSerializerCollectionsTests.cs", label="SetToken(JsonToken.PropertyName, ''$scope'')", span="324-324"];
m0_109 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="JsonSerializerCollectionsTests.cs", label="return true;", span="325-325"];
m0_117 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="JsonSerializerCollectionsTests.cs", label="bool result = ReadNormal()", span="339-339"];
m0_534 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", span="1181-1181"];
m0_540 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],[2,2,2]]],''''After'''':''''After!''''}'', json)", span="1190-1190"];
m0_539 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(aa)", span="1188-1188"];
m0_535 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Array3D aa = new Array3D()", span="1183-1183"];
m0_538 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="aa.Coordinates = new[,,] { { { 1, 1, 1 }, { 1, 1, 2 } }, { { 1, 2, 1 }, { 1, 2, 2 } }, { { 2, 1, 1 }, { 2, 1, 2 } }, { { 2, 2, 1 }, { 2, 2, 2 } } }", span="1186-1186"];
m0_536 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="aa.Before = ''Before!''", span="1184-1184"];
m0_537 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="aa.After = ''After!''", span="1185-1185"];
m0_541 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", span="1181-1181"];
m0_144 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="JsonSerializerCollectionsTests.cs", label="throw JsonReaderException.Create(this, ''Unexpected state when reading BSON reference: '' + _bsonReaderState);", span="377-377"];
m0_145 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="JsonSerializerCollectionsTests.cs", label="State.PostValue", span="380-380"];
m0_146 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="JsonSerializerCollectionsTests.cs", label="_bsonReaderState == BsonReaderState.ReferenceRef", span="382-382"];
m0_404 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''key1'', result[0].Key)", span="885-885"];
m0_230 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="SetToken(JsonToken.String, ReadLengthString())", span="517-517"];
m0_130 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorBadIEnumerableParameter()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorBadIEnumerableParameter()", span="274-274"];
m0_0 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.TestCollectionPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.TestCollectionPrivateParameterized()", span="66-66"];
m0_1 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.TestCollectionPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="_bars = new List<int>()", span="68-68"];
m0_2 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.TestCollectionPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.TestCollectionPrivateParameterized()", span="66-66"];
m0_42 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()", file="JsonSerializerCollectionsTests.cs", label="c1.Add(2)", span="124-124"];
m0_176 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="JsonSerializerCollectionsTests.cs", label="ContainerContext context = _currentContext", span="430-430"];
m0_299 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="JsonSerializerCollectionsTests.cs", label="EnsureBuffers()", span="623-623"];
m0_301 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="JsonSerializerCollectionsTests.cs", label="int totalBytesRead = 0", span="627-627"];
m0_302 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="JsonSerializerCollectionsTests.cs", label="int offset = 0", span="629-629"];
m0_303 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="JsonSerializerCollectionsTests.cs", label="int count = offset", span="632-632"];
m0_304 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="JsonSerializerCollectionsTests.cs", label="byte b", span="633-633"];
m0_300 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="JsonSerializerCollectionsTests.cs", label="StringBuilder builder = null", span="625-625"];
m0_305 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="JsonSerializerCollectionsTests.cs", label="count < MaxCharBytesSize && (b = _reader.ReadByte()) > 0", span="634-634"];
m0_39 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()", file="JsonSerializerCollectionsTests.cs", label="TestCollectionPrivate c1 = TestCollectionPrivate.Create()", span="121-121"];
m0_40 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()", file="JsonSerializerCollectionsTests.cs", label="c1.Add(0)", span="122-122"];
m0_41 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()", file="JsonSerializerCollectionsTests.cs", label="c1.Add(1)", span="123-123"];
m0_832 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeCollectionWithConstructorArrayArgument()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeCollectionWithConstructorArrayArgument()", span="1921-1921"];
m0_833 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeCollectionWithConstructorArrayArgument()", file="JsonSerializerCollectionsTests.cs", label="var v = new ReadOnlyCollectionWithArrayArgument<double>(new[] { -0.014147478859765236, -0.011419606805541858, -0.010038461483676238 })", span="1923-1923"];
m0_835 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeCollectionWithConstructorArrayArgument()", file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<ReadOnlyCollectionWithArrayArgument<double>>(json);\r\n            }, ''Unable to find a constructor to use for type Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument`1[System.Double]. Path '', line 1, position 1.'')", span="1926-1929"];
m0_834 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeCollectionWithConstructorArrayArgument()", file="JsonSerializerCollectionsTests.cs", label="var json = JsonConvert.SerializeObject(v)", span="1924-1924"];
m0_836 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeCollectionWithConstructorArrayArgument()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeCollectionWithConstructorArrayArgument()", span="1921-1921"];
m0_347 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="JsonSerializerCollectionsTests.cs", label="int offset = 0", span="707-707"];
m0_348 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="JsonSerializerCollectionsTests.cs", label="int count = ((length - totalBytesRead) > MaxCharBytesSize - offset)\r\n                    ? MaxCharBytesSize - offset\r\n                    : length - totalBytesRead", span="710-712"];
m0_349 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="JsonSerializerCollectionsTests.cs", label="int byteCount = _reader.Read(_byteBuffer, offset, count)", span="714-714"];
m0_211 [cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()", file="JsonSerializerCollectionsTests.cs", label="_currentContext = _stack[_stack.Count - 1]", span="488-488"];
m0_212 [cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.PopContext()", span="482-482"];
m0_128 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt32()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadInt32()", span="819-819"];
m0_400 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(list, Formatting.Indented)", span="860-860"];
m0_178 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="JsonSerializerCollectionsTests.cs", label="return false;", span="432-432"];
m0_756 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="948-948"];
m0_429 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()", span="922-922"];
m0_431 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, dictionary.Count)", span="925-925"];
m0_432 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''value!'', dictionary[''name''])", span="926-926"];
m0_430 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()", file="JsonSerializerCollectionsTests.cs", label="IDictionary dictionary = JsonConvert.DeserializeObject<IDictionary>(''{'name':'value!'}'')", span="924-924"];
m0_433 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()", span="922-922"];
m0_277 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="BsonType.Integer", span="592-592"];
m0_16 [cluster="System.Collections.Generic.List<T>.List()", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m0_759 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="78-78"];
m0_255 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label=DateTimeKindHandling, span="556-556"];
m0_762 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", span="1749-1749"];
m0_767 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{''''selectList'''':[{''''Value'''':''''Hello''''}]}'', json)", span="1757-1757"];
m0_771 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{''''selectList'''':[{''''Value'''':''''Hello''''}]}'', json)", span="1763-1763"];
m0_775 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{''''selectList'''':[{''''Value'''':''''Hello''''}]}'', json)", span="1769-1769"];
m0_766 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="json = JsonConvert.SerializeObject(new { selectList = foo1 })", span="1756-1756"];
m0_768 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="GenericClass<NonGenericItem, string> foo2 = new GenericClass<NonGenericItem, string>()", span="1759-1759"];
m0_770 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="json = JsonConvert.SerializeObject(new { selectList = foo2 })", span="1762-1762"];
m0_772 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="NonGenericClass foo3 = new NonGenericClass()", span="1765-1765"];
m0_774 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="json = JsonConvert.SerializeObject(new { selectList = foo3 })", span="1768-1768"];
m0_764 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="GenericClass<GenericItem<string>, string> foo1 = new GenericClass<GenericItem<string>, string>()", span="1753-1753"];
m0_765 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="foo1.Items.Add(new GenericItem<string> { Value = ''Hello'' })", span="1754-1754"];
m0_769 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="foo2.Items.Add(new NonGenericItem { Value = ''Hello'' })", span="1760-1760"];
m0_773 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="foo3.Items.Add(new NonGenericItem { Value = ''Hello'' })", span="1766-1766"];
m0_763 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="string json", span="1751-1751"];
m0_776 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", span="1749-1749"];
m0_706 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", span="1658-1658"];
m0_709 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Router'', o.Action)", span="1664-1664"];
m0_710 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Navigate'', o.Method)", span="1665-1665"];
m0_711 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, o.Data.Length)", span="1666-1666"];
m0_712 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''dashboard'', o.Data[0])", span="1667-1667"];
m0_714 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(4, ((JArray)o.Data[1]).Count)", span="1669-1669"];
m0_716 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, ((JObject)o.Data[2]).Count)", span="1671-1671"];
m0_717 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, (int)((JObject)o.Data[2])[''one''])", span="1672-1672"];
m0_708 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="ObjectArrayPropertyTest o = JsonConvert.DeserializeObject<ObjectArrayPropertyTest>(json)", span="1662-1662"];
m0_713 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="CustomAssert.IsInstanceOfType(typeof(JArray), o.Data[1])", span="1668-1668"];
m0_715 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="CustomAssert.IsInstanceOfType(typeof(JObject), o.Data[2])", span="1670-1670"];
m0_707 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''action'''':''''Router'''',''''method'''':''''Navigate'''',''''data'''':[''''dashboard'''',[''''id'''', 1, ''''teststring'''', ''''test''''],{''''one'''':1}],''''type'''':''''rpc'''',''''tid'''':2}''", span="1660-1660"];
m0_718 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", span="1658-1658"];
m0_684 [cluster="Newtonsoft.Json.Tests.TestObjects.Event1.Event1()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Event1.Event1()", span="31-31"];
m0_419 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", file="JsonSerializerCollectionsTests.cs", label="MovePosition(count)", span="844-844"];
m0_846 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.System.Collections.IEnumerable.GetEnumerator()", span="1947-1947"];
m0_847 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="return _values.GetEnumerator();", span="1949-1949"];
m0_848 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.System.Collections.IEnumerable.GetEnumerator()", span="1947-1947"];
m0_206 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", span="427-427"];
m0_209 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="155-155"];
m0_685 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="585-585"];
m0_354 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", file="JsonSerializerCollectionsTests.cs", label="IList<int> l = new List<int>\r\n            {\r\n                1,\r\n                2,\r\n                3\r\n            }", span="762-767"];
m0_343 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m0_358 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", span="760-760"];
m0_352 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", span="753-753"];
m0_353 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", span="760-760"];
m0_350 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", span="753-753"];
m0_351 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="return _values.GetEnumerator();", span="755-755"];
m0_355 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", file="JsonSerializerCollectionsTests.cs", label="CustomReadOnlyCollection<int> list = new CustomReadOnlyCollection<int>(l)", span="769-769"];
m0_357 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''[\r\n  1,\r\n  2,\r\n  3\r\n]'', json)", span="772-776"];
m0_356 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(list, Formatting.Indented)", span="771-771"];
m0_86 [cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonSerializerCollectionsTests.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m0_177 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="JsonSerializerCollectionsTests.cs", label="context == null", span="431-431"];
m0_95 [cluster="System.IO.BinaryReader.Close()", file="JsonSerializerCollectionsTests.cs", label="Entry System.IO.BinaryReader.Close()", span="0-0"];
m0_96 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="JsonSerializerCollectionsTests.cs", label=_bsonReaderState, span="308-308"];
m0_97 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="JsonSerializerCollectionsTests.cs", label="BsonReaderState.CodeWScopeStart", span="310-310"];
m0_98 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="JsonSerializerCollectionsTests.cs", label="SetToken(JsonToken.PropertyName, ''$code'')", span="311-311"];
m0_99 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="JsonSerializerCollectionsTests.cs", label="_bsonReaderState = BsonReaderState.CodeWScopeCode", span="312-312"];
m0_221 [cluster="System.IO.BinaryReader.ReadByte()", file="JsonSerializerCollectionsTests.cs", label="Entry System.IO.BinaryReader.ReadByte()", span="0-0"];
m0_224 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="double d = ReadDouble()", span="508-508"];
m0_225 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="_floatParseHandling == FloatParseHandling.Decimal", span="510-510"];
m0_226 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="SetToken(JsonToken.Float, Convert.ToDecimal(d, CultureInfo.InvariantCulture))", span="511-511"];
m0_227 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="SetToken(JsonToken.Float, d)", span="513-513"];
m0_223 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="BsonType.Number", span="507-507"];
m0_222 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label=type, span="505-505"];
m0_228 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="BsonType.String", span="515-515"];
m0_564 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", span="1329-1329"];
m0_574 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(json, after)", span="1344-1344"];
m0_567 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="1335-1335"];
m0_568 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''After!'', aa.After)", span="1336-1336"];
m0_569 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(4, aa.Coordinates.GetLength(0))", span="1337-1337"];
m0_570 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, aa.Coordinates.GetLength(1))", span="1338-1338"];
m0_571 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, aa.Coordinates[0, 0])", span="1339-1339"];
m0_572 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, aa.Coordinates[1, 1])", span="1340-1340"];
m0_565 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}''", span="1331-1331"];
m0_573 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="string after = JsonConvert.SerializeObject(aa)", span="1342-1342"];
m0_566 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Array2D aa = JsonConvert.DeserializeObject<Array2D>(json)", span="1333-1333"];
m0_575 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", span="1329-1329"];
m0_31 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m0_32 [cluster="Unk.AreEqual", file="JsonSerializerCollectionsTests.cs", label="Entry Unk.AreEqual", span=""];
m0_777 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GenericClass()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GenericClass()", span="2066-2066"];
m0_883 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GenericClass()", file="JsonSerializerCollectionsTests.cs", label="Items = new List<T>()", span="2068-2068"];
m0_884 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GenericClass()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GenericClass()", span="2066-2066"];
m0_412 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="Movie p = new Movie()", span="894-894"];
m0_292 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="JsonSerializerCollectionsTests.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
m0_328 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonSerializerCollectionsTests.cs", label="return _dictionary.TryGetValue(key, out value);", span="687-687"];
m0_126 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", span="306-306"];
m0_908 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="410-410"];
m0_879 [cluster="System.Collections.Generic.List<T>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.List<T>.GetEnumerator()", span="0-0"];
m0_417 [cluster="Newtonsoft.Json.Bson.BsonReader.MovePosition(int)", file="JsonSerializerCollectionsTests.cs", label="_currentContext.Position += count", span="839-839"];
m0_418 [cluster="Newtonsoft.Json.Bson.BsonReader.MovePosition(int)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.MovePosition(int)", span="837-837"];
m0_15 [cluster="System.IO.BinaryReader.BinaryReader(System.IO.Stream)", file="JsonSerializerCollectionsTests.cs", label="Entry System.IO.BinaryReader.BinaryReader(System.IO.Stream)", span="0-0"];
m0_686 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", span="1543-1543"];
m0_691 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", color=green, community=0, file="JsonSerializerCollectionsTests.cs", label="-1: StringAssert.AreEqual(@''{\r\n  ''''$type'''': ''''System.Collections.Generic.List`1[[Newtonsoft.Json.Tests.TestObjects.Event1[,], Newtonsoft.Json.Tests]], mscorlib'''',\r\n  ''''$values'''': [\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1[,], Newtonsoft.Json.Tests'''',\r\n      ''''$values'''': [\r\n        [\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          }\r\n        ],\r\n        [\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          }\r\n        ]\r\n      ]\r\n    },\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1[,], Newtonsoft.Json.Tests'''',\r\n      ''''$values'''': [\r\n        [\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          }\r\n        ],\r\n        [\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          }\r\n        ]\r\n      ]\r\n    }\r\n  ]\r\n}'', json)", span="1562-1632"];
m0_690 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(values1, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All,\r\n                Formatting = Formatting.Indented\r\n            })", span="1556-1560"];
m0_692 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerCollectionsTests.cs", label="IList<Event1[,]> values2 = (IList<Event1[,]>)JsonConvert.DeserializeObject(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All\r\n            })", span="1634-1637"];
m0_689 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerCollectionsTests.cs", label="IList<Event1[,]> values1 = new List<Event1[,]>\r\n            {\r\n                array1,\r\n                array1\r\n            }", span="1550-1554"];
m0_693 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, values2.Count)", span="1639-1639"];
m0_694 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''EventName!'', values2[0][0, 0].EventName)", span="1640-1640"];
m0_688 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerCollectionsTests.cs", label="Event1[,] array1 = new[,] { { e1, e1 }, { e1, e1 } }", span="1549-1549"];
m0_687 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerCollectionsTests.cs", label="Event1 e1 = new Event1\r\n            {\r\n                EventName = ''EventName!''\r\n            }", span="1545-1548"];
m0_695 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", span="1543-1543"];
m0_422 [cluster="System.IO.BinaryReader.ReadBytes(int)", file="JsonSerializerCollectionsTests.cs", label="Entry System.IO.BinaryReader.ReadBytes(int)", span="0-0"];
m0_425 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.PopulateObject(''{'Name':'Appended'}'', p, new JsonSerializerSettings\r\n            {\r\n                Converters = new List<JsonConverter> { new StringAppenderConverter() }\r\n            })", span="913-916"];
m0_423 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="Newtonsoft.Json.Bson.BsonReader.ContainerContext", span=""];
m0_424 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="Newtonsoft.Json.Bson.BsonReader", span=""];
m0_426 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Existing,Appended'', p.Name)", span="918-918"];
m0_427 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", span="908-908"];
m0_179 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="JsonSerializerCollectionsTests.cs", label="int lengthMinusEnd = context.Length - 1", span="434-434"];
m0_757 [cluster="System.IO.StringWriter.GetStringBuilder()", file="JsonSerializerCollectionsTests.cs", label="Entry System.IO.StringWriter.GetStringBuilder()", span="0-0"];
m0_136 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="JsonSerializerCollectionsTests.cs", label="return true;", span="361-361"];
m0_139 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="JsonSerializerCollectionsTests.cs", label="SetToken(JsonToken.String, ReadLengthString())", span="367-367"];
m0_140 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="JsonSerializerCollectionsTests.cs", label="return true;", span="368-368"];
m0_141 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="JsonSerializerCollectionsTests.cs", label="_bsonReaderState == BsonReaderState.ReferenceId", span="370-370"];
m0_142 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="JsonSerializerCollectionsTests.cs", label="SetToken(JsonToken.Bytes, ReadBytes(12))", span="372-372"];
m0_138 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="JsonSerializerCollectionsTests.cs", label="_bsonReaderState == BsonReaderState.ReferenceRef", span="365-365"];
m0_137 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="JsonSerializerCollectionsTests.cs", label="State.Property", span="363-363"];
m0_143 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="JsonSerializerCollectionsTests.cs", label="return true;", span="373-373"];
m0_754 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="478-478"];
m0_38 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", span="550-550"];
m0_47 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDateTime()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadAsDateTime()", span="218-218"];
m0_48 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDateTime()", file="JsonSerializerCollectionsTests.cs", label="return ReadAsDateTimeInternal();", span="220-220"];
m0_49 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDateTime()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadAsDateTime()", span="218-218"];
m0_8 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.Add(int)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.Add(int)", span="77-77"];
m0_9 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.Add(int)", file="JsonSerializerCollectionsTests.cs", label="_bars.Add(bar)", span="79-79"];
m0_11 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m0_12 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", file="JsonSerializerCollectionsTests.cs", label="_dateTimeKindHandling = dateTimeKindHandling", span="151-151"];
m0_10 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.Add(int)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.Add(int)", span="77-77"];
m0_13 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", span="145-145"];
m0_742 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", span="1724-1724"];
m0_750 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerCollectionsTests.cs", label="CollectionAssert.AreEqual(collection, collectionNew)", span="1745-1745"];
m0_748 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''[{''''Name'''':''''Test1'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null},{''''Name'''':''''Test2'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null},{''''Name'''':''''Test3'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null}]'',\r\n                sw.GetStringBuilder().ToString())", span="1740-1741"];
m0_743 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerCollectionsTests.cs", label="ProductCollection collection = new ProductCollection()\r\n            {\r\n                new Product() { Name = ''Test1'' },\r\n                new Product() { Name = ''Test2'' },\r\n                new Product() { Name = ''Test3'' }\r\n            }", span="1726-1731"];
m0_749 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerCollectionsTests.cs", label="ProductCollection collectionNew = (ProductCollection)jsonSerializer.Deserialize(new JsonTextReader(new StringReader(sw.GetStringBuilder().ToString())), typeof(ProductCollection))", span="1743-1743"];
m0_747 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerCollectionsTests.cs", label="jsonSerializer.Serialize(sw, collection)", span="1738-1738"];
m0_746 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerCollectionsTests.cs", label="StringWriter sw = new StringWriter()", span="1736-1736"];
m0_744 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerCollectionsTests.cs", label="JsonSerializer jsonSerializer = new JsonSerializer()", span="1733-1733"];
m0_745 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerCollectionsTests.cs", label="jsonSerializer.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="1734-1734"];
m0_751 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", span="1724-1724"];
m0_334 [cluster="System.Text.StringBuilder.ToString()", file="JsonSerializerCollectionsTests.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m0_207 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m0_217 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
m0_56 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="369-369"];
m0_57 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="148-148"];
m0_58 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.SerializeObject(new TestCollectionMultipleParameters(null, null))", span="148-148"];
m0_624 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", span="1408-1408"];
m0_630 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[],''''After'''':''''After!''''}'', json)", span="1417-1417"];
m0_629 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(aa)", span="1415-1415"];
m0_625 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Array3D aa = new Array3D()", span="1410-1410"];
m0_628 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="aa.Coordinates = new int[0, 0, 0]", span="1413-1413"];
m0_626 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="aa.Before = ''Before!''", span="1411-1411"];
m0_627 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="aa.After = ''After!''", span="1412-1412"];
m0_631 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", span="1408-1408"];
m0_552 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", span="1260-1260"];
m0_553 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{\r\n  ''''Before'''': ''''Before!'''',\r\n  ''''Coordinates'''': [\r\n    [\r\n      [\r\n        1.0,\r\n        1.0,\r\n        1.0\r\n      ],\r\n      [\r\n        1.0,\r\n        1.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        1.0,\r\n        2.0,\r\n        1.0\r\n      ],\r\n      [\r\n        1.0,\r\n        2.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        2.0,\r\n        1.0,\r\n        1.0\r\n      ],\r\n      [\r\n        2.0,\r\n        1.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        2.0,\r\n        2.0,\r\n        1.0\r\n      ],\r\n      [\r\n        2.0,\r\n        2.0,\r\n        2.0\r\n      ]\r\n    ]\r\n  ],\r\n  ''''After'''': ''''After!''''\r\n}''", span="1262-1315"];
m0_555 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="1319-1319"];
m0_556 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''After!'', aa.After)", span="1320-1320"];
m0_557 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(4, aa.Coordinates.GetLength(0))", span="1321-1321"];
m0_558 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, aa.Coordinates.GetLength(1))", span="1322-1322"];
m0_559 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, aa.Coordinates.GetLength(2))", span="1323-1323"];
m0_560 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, aa.Coordinates[0, 0, 0])", span="1324-1324"];
m0_561 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, aa.Coordinates[1, 1, 1])", span="1325-1325"];
m0_554 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Array3DWithConverter aa = JsonConvert.DeserializeObject<Array3DWithConverter>(json)", span="1317-1317"];
m0_562 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", span="1260-1260"];
m0_428 [cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.StringAppenderConverter()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.StringAppenderConverter()", span="2127-2127"];
m0_448 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", span="963-963"];
m0_452 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Components'''': {\r\n    ''''Key!'''': {}\r\n  },\r\n  ''''Id'''': ''''Id!'''',\r\n  ''''Name'''': ''''Name!''''\r\n}'', originalJson)", span="978-984"];
m0_451 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="string originalJson = JsonConvert.SerializeObject(go, Formatting.Indented)", span="976-976"];
m0_453 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="GameObject newObject = JsonConvert.DeserializeObject<GameObject>(originalJson)", span="986-986"];
m0_454 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, newObject.Components.Count)", span="988-988"];
m0_455 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Id!'', newObject.Id)", span="989-989"];
m0_456 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Name!'', newObject.Name)", span="990-990"];
m0_450 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="GameObject go = new GameObject\r\n            {\r\n                Components = new ConcurrentDictionary<string, TestObjects.Component>(components),\r\n                Id = ''Id!'',\r\n                Name = ''Name!''\r\n            }", span="969-974"];
m0_449 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="IDictionary<string, TestObjects.Component> components = new Dictionary<string, TestObjects.Component>\r\n            {\r\n                { ''Key!'', new TestObjects.Component() }\r\n            }", span="965-968"];
m0_457 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", span="963-963"];
m0_83 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadNormal()", span="404-404"];
m0_167 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()", span="371-371"];
m0_170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()", file="JsonSerializerCollectionsTests.cs", label="i <= onebasedArray.GetUpperBound(0)", span="375-375"];
m0_173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()", file="JsonSerializerCollectionsTests.cs", label="string output = JsonConvert.SerializeObject(onebasedArray, Formatting.Indented)", span="380-380"];
m0_197 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''[\r\n  [\r\n    {\r\n      ''''Key'''': ''''my value'''',\r\n      ''''Value'''': 0.8\r\n    },\r\n    ''''foobar''''\r\n  ],\r\n  [\r\n    true,\r\n    0.4\r\n  ],\r\n  [\r\n    0.05,\r\n    6\r\n  ]\r\n]'', myOtherArrayAsString)", span="438-454"];
m0_198 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerCollectionsTests.cs", label="JObject o = JObject.Parse(@''{\r\n              ''''Key'''': ''''my value'''',\r\n              ''''Value'''': 0.8\r\n            }'')", span="456-459"];
m0_199 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerCollectionsTests.cs", label="object[,] myOtherResult = JsonConvert.DeserializeObject<object[,]>(myOtherArrayAsString)", span="461-461"];
m0_200 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.IsTrue(JToken.DeepEquals(o, (JToken)myOtherResult[0, 0]))", span="462-462"];
m0_201 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''foobar'', myOtherResult[0, 1])", span="463-463"];
m0_166 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="540-540"];
m0_168 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()", file="JsonSerializerCollectionsTests.cs", label="var onebasedArray = Array.CreateInstance(typeof(string), new[] { 3 }, new[] { 2 })", span="373-373"];
m0_169 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()", file="JsonSerializerCollectionsTests.cs", label="var i = onebasedArray.GetLowerBound(0)", span="375-375"];
m0_171 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()", file="JsonSerializerCollectionsTests.cs", label="onebasedArray.SetValue(i.ToString(CultureInfo.InvariantCulture), new[] { i, })", span="377-377"];
m0_172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()", file="JsonSerializerCollectionsTests.cs", label="i++", span="375-375"];
m0_174 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''[\r\n  ''''2'''',\r\n  ''''3'''',\r\n  ''''4''''\r\n]'', output)", span="382-386"];
m0_175 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()", span="371-371"];
m0_180 [cluster="System.Array.SetValue(object, params int[])", file="JsonSerializerCollectionsTests.cs", label="Entry System.Array.SetValue(object, params int[])", span="0-0"];
m0_181 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="340-340"];
m0_187 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", file="JsonSerializerCollectionsTests.cs", label="j <= onebasedArray.GetUpperBound(1)", span="398-398"];
m0_192 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''[\r\n  [\r\n    ''''1_2'''',\r\n    ''''1_3'''',\r\n    ''''1_4''''\r\n  ],\r\n  [\r\n    ''''2_2'''',\r\n    ''''2_3'''',\r\n    ''''2_4''''\r\n  ],\r\n  [\r\n    ''''3_2'''',\r\n    ''''3_3'''',\r\n    ''''3_4''''\r\n  ]\r\n]'', output)", span="407-423"];
m0_193 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", span="390-390"];
m0_182 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", span="390-390"];
m0_185 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", file="JsonSerializerCollectionsTests.cs", label="i <= onebasedArray.GetUpperBound(0)", span="396-396"];
m0_183 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", file="JsonSerializerCollectionsTests.cs", label="var onebasedArray = Array.CreateInstance(typeof(string), new[] { 3, 3 }, new[] { 1, 2 })", span="393-393"];
m0_184 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", file="JsonSerializerCollectionsTests.cs", label="var i = onebasedArray.GetLowerBound(0)", span="396-396"];
m0_186 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", file="JsonSerializerCollectionsTests.cs", label="var j = onebasedArray.GetLowerBound(1)", span="398-398"];
m0_188 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", file="JsonSerializerCollectionsTests.cs", label="onebasedArray.SetValue(i + ''_'' + j, new[] { i, j })", span="400-400"];
m0_196 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerCollectionsTests.cs", label="string myOtherArrayAsString = JsonConvert.SerializeObject(myOtherArray, Formatting.Indented)", span="436-436"];
m0_189 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", file="JsonSerializerCollectionsTests.cs", label="j++", span="398-398"];
m0_190 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", file="JsonSerializerCollectionsTests.cs", label="i++", span="396-396"];
m0_191 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", file="JsonSerializerCollectionsTests.cs", label="string output = JsonConvert.SerializeObject(onebasedArray, Formatting.Indented)", span="405-405"];
m0_194 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", span="427-427"];
m0_195 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerCollectionsTests.cs", label="object[,] myOtherArray =\r\n            {\r\n                { new KeyValuePair<string, double>(''my value'', 0.8), ''foobar'' },\r\n                { true, 0.4d },\r\n                { 0.05f, 6 }\r\n            }", span="429-434"];
m0_202 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(true, myOtherResult[1, 0])", span="465-465"];
m0_203 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0.4, myOtherResult[1, 1])", span="466-466"];
m0_458 [cluster="Newtonsoft.Json.Tests.TestObjects.Component.Component()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Component.Component()", span="34-34"];
m0_153 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="JsonSerializerCollectionsTests.cs", label="return true;", span="392-392"];
m0_320 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="JsonSerializerCollectionsTests.cs", label="Array.Copy(_byteBuffer, lastFullCharStop + 1, _byteBuffer, 0, offset)", span="666-666"];
m0_321 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="JsonSerializerCollectionsTests.cs", label="count < MaxCharBytesSize", span="671-671"];
m0_322 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="JsonSerializerCollectionsTests.cs", label="MovePosition(totalBytesRead + 1)", span="673-673"];
m0_495 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", span="1057-1057"];
m0_496 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerCollectionsTests.cs", label="NonReadOnlyList = new List<int> { 1 }", span="1059-1059"];
m0_497 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerCollectionsTests.cs", label="NonReadOnlyDictionary = new Dictionary<string, int> { { ''first'', 2 } }", span="1060-1060"];
m0_498 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerCollectionsTests.cs", label="Array = new[] { 3 }", span="1062-1062"];
m0_499 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerCollectionsTests.cs", label="List = new ReadOnlyCollection<int>(new[] { 4 })", span="1064-1064"];
m0_500 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerCollectionsTests.cs", label="Dictionary = new ReadOnlyDictionary<string, int>(new Dictionary<string, int> { { ''first'', 5 } })", span="1065-1065"];
m0_501 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerCollectionsTests.cs", label="IReadOnlyCollection = new ReadOnlyCollection<int>(new[] { 6 })", span="1067-1067"];
m0_502 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerCollectionsTests.cs", label="ReadOnlyCollection = new ReadOnlyCollection<int>(new[] { 7 })", span="1068-1068"];
m0_503 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerCollectionsTests.cs", label="IReadOnlyList = new ReadOnlyCollection<int>(new[] { 8 })", span="1069-1069"];
m0_504 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerCollectionsTests.cs", label="IReadOnlyDictionary = new ReadOnlyDictionary<string, int>(new Dictionary<string, int> { { ''first'', 9 } })", span="1071-1071"];
m0_505 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerCollectionsTests.cs", label="ReadOnlyDictionary = new ReadOnlyDictionary<string, int>(new Dictionary<string, int> { { ''first'', 10 } })", span="1072-1072"];
m0_506 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", span="1057-1057"];
m0_583 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooFewItems()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooFewItems()", span="1356-1356"];
m0_585 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooFewItems()", file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<Exception>(() => JsonConvert.DeserializeObject<Array2D>(json), ''Cannot deserialize non-cubical array as multidimensional array.'')", span="1360-1360"];
m0_584 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooFewItems()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1],[2,1],[2,2]],''''After'''':''''After!''''}''", span="1358-1358"];
m0_586 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooFewItems()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooFewItems()", span="1356-1356"];
m0_794 [cluster="Newtonsoft.Json.Tests.TestObjects.ArticleCollection.ArticleCollection()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ArticleCollection.ArticleCollection()", span="29-29"];
m0_395 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", file="JsonSerializerCollectionsTests.cs", label="_byteBuffer = new byte[MaxCharBytesSize]", span="804-804"];
m0_401 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadDouble()", file="JsonSerializerCollectionsTests.cs", label="MovePosition(8)", span="815-815"];
m0_402 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadDouble()", file="JsonSerializerCollectionsTests.cs", label="return _reader.ReadDouble();", span="816-816"];
m0_397 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", file="JsonSerializerCollectionsTests.cs", label="int charBufferSize = Encoding.UTF8.GetMaxCharCount(MaxCharBytesSize)", span="808-808"];
m0_403 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadDouble()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadDouble()", span="813-813"];
m0_405 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt32()", file="JsonSerializerCollectionsTests.cs", label="MovePosition(4)", span="821-821"];
m0_406 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt32()", file="JsonSerializerCollectionsTests.cs", label="return _reader.ReadInt32();", span="822-822"];
m0_407 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt32()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadInt32()", span="819-819"];
m0_399 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", span="800-800"];
m0_396 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", file="JsonSerializerCollectionsTests.cs", label="_charBuffer == null", span="806-806"];
m0_398 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", file="JsonSerializerCollectionsTests.cs", label="_charBuffer = new char[charBufferSize]", span="809-809"];
m0_264 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="BsonType.Regex", span="574-574"];
m0_266 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="string modifiers = ReadString()", span="576-576"];
m0_267 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="string regex = @''/'' + expression + @''/'' + modifiers", span="578-578"];
m0_268 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="SetToken(JsonToken.String, regex)", span="579-579"];
m0_269 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="BsonType.Reference", span="581-581"];
m0_265 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="string expression = ReadString()", span="575-575"];
m0_270 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="SetToken(JsonToken.StartObject)", span="582-582"];
m0_329 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="685-685"];
m0_811 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", span="1857-1857"];
m0_815 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, products.Count)", span="1878-1878"];
m0_816 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Product 1'', p1.Name)", span="1879-1879"];
m0_813 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="List<Product> products = JsonConvert.DeserializeObject<List<Product>>(json)", span="1874-1874"];
m0_814 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="Product p1 = products[0]", span="1876-1876"];
m0_812 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="string json = @''[\r\n        {\r\n          ''''Name'''': ''''Product 1'''',\r\n          ''''ExpiryDate'''': ''''\/Date(978048000000)\/'''',\r\n          ''''Price'''': 99.95,\r\n          ''''Sizes'''': null\r\n        },\r\n        {\r\n          ''''Name'''': ''''Product 2'''',\r\n          ''''ExpiryDate'''': ''''\/Date(1248998400000)\/'''',\r\n          ''''Price'''': 12.50,\r\n          ''''Sizes'''': null\r\n        }\r\n      ]''", span="1859-1872"];
m0_817 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", span="1857-1857"];
m0_326 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadString()", span="621-621"];
m0_779 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m0_818 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", span="1884-1884"];
m0_821 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''[\r\n  1,\r\n  2,\r\n  3,\r\n  2147483647\r\n]'', json)", span="1896-1901"];
m0_820 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="1894-1894"];
m0_819 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", file="JsonSerializerCollectionsTests.cs", label="ReadOnlyIntegerList l = new ReadOnlyIntegerList(new List<int>\r\n            {\r\n                1,\r\n                2,\r\n                3,\r\n                int.MaxValue\r\n            })", span="1886-1892"];
m0_822 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", span="1884-1884"];
m0_84 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadReference()", span="353-353"];
m0_132 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.SerializeObject(new TestDictionaryBadIEnumerableParameter(null))", span="277-277"];
m0_133 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="277-277"];
m0_134 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="JsonSerializerCollectionsTests.cs", label="SetToken(JsonToken.PropertyName, JsonTypeReflector.RefPropertyName)", span="359-359"];
m0_135 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="JsonSerializerCollectionsTests.cs", label="_bsonReaderState = BsonReaderState.ReferenceRef", span="360-360"];
m0_147 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="314-314"];
m0_148 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<NameValueCollectionTestClass>(''{Collection:[]}'')", span="314-314"];
m0_149 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="314-314"];
m0_632 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", span="1421-1421"];
m0_641 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(json, after)", span="1435-1435"];
m0_635 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="1427-1427"];
m0_636 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''After!'', aa.After)", span="1428-1428"];
m0_637 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0, aa.Coordinates.GetLength(0))", span="1429-1429"];
m0_638 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0, aa.Coordinates.GetLength(1))", span="1430-1430"];
m0_639 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0, aa.Coordinates.GetLength(2))", span="1431-1431"];
m0_633 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[],''''After'''':''''After!''''}''", span="1423-1423"];
m0_640 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="string after = JsonConvert.SerializeObject(aa)", span="1433-1433"];
m0_634 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="1425-1425"];
m0_642 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", span="1421-1421"];
m0_327 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", span="800-800"];
m0_460 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)", span="0-0"];
m0_87 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="108-108"];
m0_30 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="754-754"];
m0_315 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", file="JsonSerializerCollectionsTests.cs", label="ReadOnlyDictionary<string, int> dic = JsonConvert.DeserializeObject<ReadOnlyDictionary<string, int>>(''{'one':1,'two':2}'')", span="658-658"];
m0_317 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, dic[''one''])", span="662-662"];
m0_313 [cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="310-310"];
m0_318 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, dic[''two''])", span="663-663"];
m0_319 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", span="656-656"];
m0_314 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", span="656-656"];
m0_316 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, dic.Count)", span="660-660"];
m0_603 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()", span="1384-1384"];
m0_605 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()", file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<Exception>(() => JsonConvert.DeserializeObject<Array3D>(json), ''Cannot deserialize non-cubical array as multidimensional array.'')", span="1388-1388"];
m0_604 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2,1]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],[2,2,2]]],''''After'''':''''After!''''}''", span="1386-1386"];
m0_606 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()", span="1384-1384"];
m0_514 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", span="1118-1118"];
m0_517 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, c2.NonReadOnlyDictionary.Count)", span="1155-1155"];
m0_518 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(12, c2.NonReadOnlyDictionary[''first''])", span="1156-1156"];
m0_519 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, c2.NonReadOnlyList.Count)", span="1158-1158"];
m0_520 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, c2.NonReadOnlyList[0])", span="1159-1159"];
m0_521 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(11, c2.NonReadOnlyList[1])", span="1160-1160"];
m0_522 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, c2.Array.Count)", span="1162-1162"];
m0_523 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(13, c2.Array[0])", span="1163-1163"];
m0_516 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="var c2 = JsonConvert.DeserializeObject<PopulateReadOnlyTestClass>(json)", span="1153-1153"];
m0_515 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{\r\n  ''''NonReadOnlyList'''': [\r\n    11\r\n  ],\r\n  ''''NonReadOnlyDictionary'''': {\r\n    ''''first'''': 12\r\n  },\r\n  ''''Array'''': [\r\n    13\r\n  ],\r\n  ''''List'''': [\r\n    14\r\n  ],\r\n  ''''Dictionary'''': {\r\n    ''''first'''': 15\r\n  },\r\n  ''''IReadOnlyCollection'''': [\r\n    16\r\n  ],\r\n  ''''ReadOnlyCollection'''': [\r\n    17\r\n  ],\r\n  ''''IReadOnlyList'''': [\r\n    18\r\n  ],\r\n  ''''IReadOnlyDictionary'''': {\r\n    ''''first'''': 19\r\n  },\r\n  ''''ReadOnlyDictionary'''': {\r\n    ''''first'''': 20\r\n  }\r\n}''", span="1120-1151"];
m0_524 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", span="1118-1118"];
m0_131 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="JsonSerializerCollectionsTests.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m0_256 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="DateTimeKind.Unspecified", span="558-558"];
m0_245 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="BsonType.Oid", span="543-543"];
m0_257 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="dateTime = DateTime.SpecifyKind(utcDateTime, DateTimeKind.Unspecified)", span="559-559"];
m0_493 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>>>(json)", span="1036-1036"];
m0_581 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<Array2D>(json)", span="1352-1352"];
m0_588 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<Array2D>(json)", span="1360-1360"];
m0_608 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<Array3D>(json)", span="1388-1388"];
m0_615 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<Array3D>(json)", span="1396-1396"];
m0_622 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<Array3D>(json)", span="1404-1404"];
m0_648 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<Array3D>(json)", span="1443-1443"];
m0_655 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<Array3D>(json)", span="1451-1451"];
m0_839 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<ReadOnlyCollectionWithArrayArgument<double>>(json)", span="1928-1928"];
m0_258 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="DateTimeKind.Local", span="561-561"];
m0_124 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="JsonSerializerCollectionsTests.cs", label="return true;", span="347-347"];
m0_244 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="SetToken(JsonToken.Undefined)", span="541-541"];
m0_246 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="byte[] oid = ReadBytes(12)", span="544-544"];
m0_492 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="1036-1036"];
m0_494 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="1036-1036"];
m0_580 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="1352-1352"];
m0_582 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="1352-1352"];
m0_587 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="1360-1360"];
m0_589 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="1360-1360"];
m0_607 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="1388-1388"];
m0_609 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="1388-1388"];
m0_614 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="1396-1396"];
m0_616 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="1396-1396"];
m0_621 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="1404-1404"];
m0_623 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="1404-1404"];
m0_647 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="1443-1443"];
m0_649 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="1443-1443"];
m0_654 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="1451-1451"];
m0_656 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="1451-1451"];
m0_838 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="1926-1929"];
m0_840 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="1926-1929"];
m0_123 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="JsonSerializerCollectionsTests.cs", label="_bsonReaderState = BsonReaderState.Normal", span="346-346"];
m0_125 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="JsonSerializerCollectionsTests.cs", label="throw new ArgumentOutOfRangeException();", span="349-349"];
m0_284 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadDouble()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadDouble()", span="813-813"];
m0_823 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.ReadOnlyIntegerList(System.Collections.Generic.List<int>)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.ReadOnlyIntegerList(System.Collections.Generic.List<int>)", span="2006-2006"];
m0_874 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.ReadOnlyIntegerList(System.Collections.Generic.List<int>)", file="JsonSerializerCollectionsTests.cs", label="_list = l", span="2008-2008"];
m0_875 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.ReadOnlyIntegerList(System.Collections.Generic.List<int>)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.ReadOnlyIntegerList(System.Collections.Generic.List<int>)", span="2006-2006"];
m0_371 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass.GenericListTestClass()", file="JsonSerializerCollectionsTests.cs", label="GenericList = new List<string>()", span="802-802"];
m0_372 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass.GenericListTestClass()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass.GenericListTestClass()", span="800-800"];
m0_576 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooManyItems()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooManyItems()", span="1348-1348"];
m0_578 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooManyItems()", file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<Exception>(() => JsonConvert.DeserializeObject<Array2D>(json), ''Cannot deserialize non-cubical array as multidimensional array.'')", span="1352-1352"];
m0_577 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooManyItems()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2,3],[2,1],[2,2]],''''After'''':''''After!''''}''", span="1350-1350"];
m0_579 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooManyItems()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooManyItems()", span="1348-1348"];
m0_551 [cluster="Newtonsoft.Json.Tests.Serialization.Array3DWithConverter.Array3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Array3DWithConverter.Array3DWithConverter()", span="2042-2042"];
m0_101 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="JsonSerializerCollectionsTests.cs", label="BsonReaderState.CodeWScopeCode", span="314-314"];
m0_102 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="JsonSerializerCollectionsTests.cs", label="ReadInt32()", span="316-316"];
m0_760 [cluster="System.IO.StringReader.StringReader(string)", file="JsonSerializerCollectionsTests.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m0_3 [cluster="System.Collections.Generic.List<T>.List()", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m0_563 [cluster="System.Array.GetLength(int)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Array.GetLength(int)", span="0-0"];
m0_741 [cluster="Newtonsoft.Json.Tests.TestObjects.PhoneNumber.PhoneNumber(string)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PhoneNumber.PhoneNumber(string)", span="31-31"];
m0_204 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0.05, myOtherResult[2, 0])", span="468-468"];
m0_231 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.EnumerableClassFailure()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.EnumerableClassFailure()", span="513-513"];
m0_248 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="BsonType.Boolean", span="547-547"];
m0_232 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.EnumerableClassFailure()", file="JsonSerializerCollectionsTests.cs", label="_values = new List<T>()", span="515-515"];
m0_233 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.EnumerableClassFailure()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.EnumerableClassFailure()", span="513-513"];
m0_247 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="SetToken(JsonToken.Bytes, oid)", span="545-545"];
m0_259 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="dateTime = utcDateTime.ToLocalTime()", span="562-562"];
m0_260 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="JsonSerializerCollectionsTests.cs", label="dateTime = utcDateTime", span="565-565"];
m0_370 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass.GenericListTestClass()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass.GenericListTestClass()", span="800-800"];
m0_837 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.ReadOnlyCollectionWithArrayArgument(T[])", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.ReadOnlyCollectionWithArrayArgument(T[])", span="1937-1937"];
m0_841 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.ReadOnlyCollectionWithArrayArgument(T[])", file="JsonSerializerCollectionsTests.cs", label="_values = args ?? (IList<T>)new List<T>()", span="1939-1939"];
m0_842 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.ReadOnlyCollectionWithArrayArgument(T[])", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.ReadOnlyCollectionWithArrayArgument(T[])", span="1937-1937"];
m0_103 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="JsonSerializerCollectionsTests.cs", label="SetToken(JsonToken.String, ReadLengthString())", span="318-318"];
m0_104 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="JsonSerializerCollectionsTests.cs", label="_bsonReaderState = BsonReaderState.CodeWScopeScope", span="319-319"];
m0_105 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="JsonSerializerCollectionsTests.cs", label="return true;", span="320-320"];
m0_461 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", span="995-995"];
m0_464 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, values.Count)", span="1001-1001"];
m0_465 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''aaa'', values[0].Key)", span="1002-1002"];
m0_466 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, values[0].Value.Count)", span="1003-1003"];
m0_467 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''1'', values[0].Value[0])", span="1004-1004"];
m0_468 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''2'', values[0].Value[1])", span="1005-1005"];
m0_469 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''bbb'', values[1].Key)", span="1006-1006"];
m0_470 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, values[1].Value.Count)", span="1007-1007"];
m0_471 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''3'', values[1].Value[0])", span="1008-1008"];
m0_472 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''4'', values[1].Value[1])", span="1009-1009"];
m0_463 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="IList<KeyValuePair<string, IList<string>>> values = JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>>>(json)", span="999-999"];
m0_462 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="string json = @''[ { ''''Value'''': [ ''''1'''', ''''2'''' ], ''''Key'''': ''''aaa'''', ''''BadContent'''': [ 0 ] }, { ''''Value'''': [ ''''3'''', ''''4'''' ], ''''Key'''': ''''bbb'''' } ]''", span="997-997"];
m0_473 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", span="995-995"];
m0_755 [cluster="System.IO.StringWriter.StringWriter()", file="JsonSerializerCollectionsTests.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m0_831 [cluster="System.Collections.Hashtable.Hashtable()", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Hashtable.Hashtable()", span="0-0"];
m0_118 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="JsonSerializerCollectionsTests.cs", label="result && TokenType == JsonToken.EndObject", span="340-340"];
m0_119 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="JsonSerializerCollectionsTests.cs", label="_bsonReaderState = BsonReaderState.CodeWScopeScopeEnd", span="341-341"];
m0_781 [cluster="Newtonsoft.Json.Tests.Serialization.NonGenericClass.NonGenericClass()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.NonGenericClass.NonGenericClass()", span="2092-2092"];
m0_205 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadByte()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadByte()", span="497-497"];
m0_507 [cluster="System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", span="0-0"];
m0_843 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.GetEnumerator()", span="1942-1942"];
m0_844 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="return _values.GetEnumerator();", span="1944-1944"];
m0_845 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.GetEnumerator()", span="1942-1942"];
m0_488 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()", span="1032-1032"];
m0_490 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>>>(json); }, ''Cannot convert null value to KeyValuePair. Path '[0]', line 1, position 6.'')", span="1036-1036"];
m0_489 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="string json = @''[ null ]''", span="1034-1034"];
m0_491 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()", span="1032-1032"];
m0_697 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", span="1644-1644"];
m0_700 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Router'', o.Action)", span="1650-1650"];
m0_701 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Navigate'', o.Method)", span="1651-1651"];
m0_702 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, o.Data.Length)", span="1652-1652"];
m0_703 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''dashboard'', o.Data[0])", span="1653-1653"];
m0_704 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(null, o.Data[1])", span="1654-1654"];
m0_699 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="ObjectArrayPropertyTest o = JsonConvert.DeserializeObject<ObjectArrayPropertyTest>(json)", span="1648-1648"];
m0_698 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''action'''':''''Router'''',''''method'''':''''Navigate'''',''''data'''':[''''dashboard'''',null],''''type'''':''''rpc'''',''''tid'''':2}''", span="1646-1646"];
m0_705 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", span="1644-1644"];
m0_657 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", span="1455-1455"];
m0_664 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(json, after)", span="1467-1467"];
m0_660 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="1461-1461"];
m0_661 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''After!'', aa.After)", span="1462-1462"];
m0_662 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(null, aa.Coordinates)", span="1463-1463"];
m0_658 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':null,''''After'''':''''After!''''}''", span="1457-1457"];
m0_663 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonSerializerCollectionsTests.cs", label="string after = JsonConvert.SerializeObject(aa)", span="1465-1465"];
m0_659 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonSerializerCollectionsTests.cs", label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="1459-1459"];
m0_665 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", span="1455-1455"];
m0_898 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="2103-2103"];
m0_904 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="newStrings.Add(s)", span="2113-2113"];
m0_903 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="string s = (string)reader.Value", span="2112-2112"];
m0_900 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="List<string> newStrings = new List<string>(existingStrings)", span="2106-2106"];
m0_905 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="reader.Read()", span="2115-2115"];
m0_902 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="reader.TokenType != JsonToken.EndArray", span="2110-2110"];
m0_899 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="List<string> existingStrings = (List<string>)existingValue", span="2105-2105"];
m0_901 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="reader.Read()", span="2108-2108"];
m0_906 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="return newStrings;", span="2118-2118"];
m0_907 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="2103-2103"];
m0_85 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", span="306-306"];
m0_885 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", span="2071-2071"];
m0_886 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Items != null", span="2073-2073"];
m0_887 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label=Items, span="2075-2075"];
m0_889 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="yield break;", span="2082-2082"];
m0_888 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="yield return item;", span="2077-2077"];
m0_890 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", span="2071-2071"];
m0_650 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncompleteNotTopLevel3DArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncompleteNotTopLevel3DArray()", span="1447-1447"];
m0_652 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncompleteNotTopLevel3DArray()", file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<JsonException>(() => JsonConvert.DeserializeObject<Array3D>(json))", span="1451-1451"];
m0_651 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncompleteNotTopLevel3DArray()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[/*hi*/[/*hi*/''", span="1449-1449"];
m0_653 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncompleteNotTopLevel3DArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncompleteNotTopLevel3DArray()", span="1447-1447"];
m0_758 [cluster="System.Text.StringBuilder.ToString()", file="JsonSerializerCollectionsTests.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m0_542 [cluster="Newtonsoft.Json.Tests.Serialization.Array3D.Array3D()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Array3D.Array3D()", span="2035-2035"];
m0_740 [cluster="Newtonsoft.Json.Tests.TestObjects.Name.Name(string)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Name.Name(string)", span="35-35"];
m0_880 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.System.Collections.IEnumerable.GetEnumerator()", span="2021-2021"];
m0_881 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="return GetEnumerator();", span="2023-2023"];
m0_882 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.System.Collections.IEnumerable.GetEnumerator()", span="2021-2021"];
m0_824 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EmptyStringInHashtableIsDeserialized()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EmptyStringInHashtableIsDeserialized()", span="1907-1907"];
m0_826 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EmptyStringInHashtableIsDeserialized()", file="JsonSerializerCollectionsTests.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.All }", span="1911-1911"];
m0_827 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EmptyStringInHashtableIsDeserialized()", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.SerializeObject(new Hashtable { { ''testkey'', '''' } }, settings)", span="1913-1913"];
m0_825 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EmptyStringInHashtableIsDeserialized()", file="JsonSerializerCollectionsTests.cs", label="string externalJson = @''{''''$type'''':''''System.Collections.Hashtable, mscorlib'''',''''testkey'''':''''''''}''", span="1909-1909"];
m0_828 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EmptyStringInHashtableIsDeserialized()", file="JsonSerializerCollectionsTests.cs", label="Hashtable deserializeTest2 = JsonConvert.DeserializeObject<Hashtable>(externalJson, settings)", span="1914-1914"];
m0_829 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EmptyStringInHashtableIsDeserialized()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(deserializeTest2[''testkey''], '''')", span="1916-1916"];
m0_830 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EmptyStringInHashtableIsDeserialized()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EmptyStringInHashtableIsDeserialized()", span="1907-1907"];
m0_795 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", span="1791-1791"];
m0_800 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="JsonSerializerCollectionsTests.cs", label="CollectionAssert.AreEqual(r1, r2)", span="1801-1801"];
m0_798 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''[0,1,2,3,4]'', jsonText)", span="1797-1797"];
m0_796 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="JsonSerializerCollectionsTests.cs", label="ReadOnlyCollection<int> r1 = new ReadOnlyCollection<int>(new int[] { 0, 1, 2, 3, 4 })", span="1793-1793"];
m0_799 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="JsonSerializerCollectionsTests.cs", label="ReadOnlyCollection<int> r2 = JsonConvert.DeserializeObject<ReadOnlyCollection<int>>(jsonText)", span="1799-1799"];
m0_797 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="JsonSerializerCollectionsTests.cs", label="string jsonText = JsonConvert.SerializeObject(r1)", span="1795-1795"];
m0_801 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", span="1791-1791"];
m0_876 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.GetEnumerator()", span="2016-2016"];
m0_877 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="return _list.GetEnumerator();", span="2018-2018"];
m0_878 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.GetEnumerator()", span="2016-2016"];
m0_923 [file="JsonSerializerCollectionsTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized", span=""];
m0_924 [file="JsonSerializerCollectionsTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomConcurrentDictionary", span=""];
m0_926 [file="JsonSerializerCollectionsTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>", span=""];
m0_931 [file="JsonSerializerCollectionsTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass", span=""];
m0_933 [file="JsonSerializerCollectionsTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass", span=""];
m0_942 [file="JsonSerializerCollectionsTests.cs", label="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>", span=""];
m0_944 [file="JsonSerializerCollectionsTests.cs", label="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>", span=""];
m0_927 [file="JsonSerializerCollectionsTests.cs", label=json, span=""];
m0_932 [file="JsonSerializerCollectionsTests.cs", label=json, span=""];
m0_934 [file="JsonSerializerCollectionsTests.cs", label=json, span=""];
m0_935 [file="JsonSerializerCollectionsTests.cs", label=json, span=""];
m0_936 [file="JsonSerializerCollectionsTests.cs", label=json, span=""];
m0_937 [file="JsonSerializerCollectionsTests.cs", label=json, span=""];
m0_938 [file="JsonSerializerCollectionsTests.cs", label=json, span=""];
m0_939 [file="JsonSerializerCollectionsTests.cs", label=json, span=""];
m0_940 [file="JsonSerializerCollectionsTests.cs", label=json, span=""];
m0_941 [file="JsonSerializerCollectionsTests.cs", label=json, span=""];
m0_943 [file="JsonSerializerCollectionsTests.cs", label="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList", span=""];
m0_929 [file="JsonSerializerCollectionsTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>", span=""];
m0_930 [file="JsonSerializerCollectionsTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>", span=""];
m0_928 [file="JsonSerializerCollectionsTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>", span=""];
m0_925 [file="JsonSerializerCollectionsTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>", span=""];
m1_2371 [cluster="XmlDocument.cstr", file="JsonSerializerTest.cs", label="Entry XmlDocument.cstr", span=""];
m1_1480 [cluster="Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", span="27-27"];
m1_3885 [cluster="Newtonsoft.Json.Tests.TestObjects.ParticipantEntity.ParticipantEntity()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ParticipantEntity.ParticipantEntity()", span="35-35"];
m1_2129 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="4763-4763"];
m1_2130 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="return ((IDictionary<string, T>)_innerDictionary).Remove(item);", span="4765-4765"];
m1_2131 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="4763-4763"];
m1_684 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", span="1490-1490"];
m1_685 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonSerializerTest.cs", label="_stringValue = stringValue", span="1492-1492"];
m1_686 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonSerializerTest.cs", label="_intValue = intValue", span="1493-1493"];
m1_687 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonSerializerTest.cs", label="_person1 = p1", span="1494-1494"];
m1_688 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonSerializerTest.cs", label="_person2 = p2", span="1495-1495"];
m1_689 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonSerializerTest.cs", label="_person3 = p3", span="1496-1496"];
m1_690 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", span="1490-1490"];
m1_757 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", span="1623-1623"];
m1_758 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="string s = null", span="1625-1625"];
m1_759 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="var v = new JValue(s)", span="1626-1626"];
m1_760 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="var o = JObject.FromObject(new { title = v })", span="1627-1627"];
m1_761 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="JObject oo = new JObject\r\n            {\r\n                { ''title'', v }\r\n            }", span="1629-1632"];
m1_763 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, v.Value)", span="1636-1636"];
m1_764 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JTokenType.String, v.Type)", span="1637-1637"];
m1_762 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="string output = o.ToString()", span="1634-1634"];
m1_765 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''title'''': null\r\n}'', output)", span="1639-1641"];
m1_766 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", span="1623-1623"];
m1_237 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", span="585-585"];
m1_238 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="RequiredPropertyTestClass c1 = new RequiredPropertyTestClass()", span="587-587"];
m1_239 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.SerializeObject(c1),\r\n                ''Cannot write a null value for property 'Name'. Property requires a value. Path ''.'')", span="589-591"];
m1_240 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="RequiredPropertyTestClass c2 = new RequiredPropertyTestClass\r\n            {\r\n                Name = ''Name!''\r\n            }", span="593-596"];
m1_241 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c2)", span="598-598"];
m1_242 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Name'''':''''Name!''''}'', json)", span="600-600"];
m1_243 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{}''),\r\n                ''Required property 'Name' not found in JSON. Path '', line 1, position 2.'')", span="602-604"];
m1_244 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{''''Name'''':null}''),\r\n                ''Required property 'Name' expects a value but got null. Path '', line 1, position 13.'')", span="606-608"];
m1_245 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="RequiredPropertyTestClass c3 = JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{''''Name'''':''''Name!''''}'')", span="610-610"];
m1_246 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', c3.Name)", span="612-612"];
m1_247 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", span="585-585"];
m1_790 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Bar1.Bar1()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Bar1.Bar1()", span="1653-1653"];
m1_1643 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="3529-3529"];
m1_1644 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="_name = name", span="3531-3531"];
m1_1645 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="Age = age", span="3532-3532"];
m1_1646 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="Rank = rank", span="3533-3533"];
m1_1647 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="Title = title", span="3534-3534"];
m1_1648 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="3529-3529"];
m1_2086 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", span="4618-4618"];
m1_18 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="366-366"];
m1_1149 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="34-34"];
m1_15 [cluster="System.IO.File.OpenRead(string)", file="JsonSerializerTest.cs", label="Entry System.IO.File.OpenRead(string)", span="0-0"];
m1_2372 [cluster="Unk.LoadXml", file="JsonSerializerTest.cs", label="Entry Unk.LoadXml", span=""];
m1_840 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", span="775-775"];
m1_541 [cluster="System.Globalization.CultureInfo.ToString()", file="JsonSerializerTest.cs", label="Entry System.Globalization.CultureInfo.ToString()", span="0-0"];
m1_2216 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", span="0-0"];
m1_833 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="522-522"];
m1_2390 [cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteRawValue(string)", span="895-895"];
m1_3875 [cluster="Newtonsoft.Json.JsonConverterCollection.JsonConverterCollection()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConverterCollection.JsonConverterCollection()", span="35-35"];
m1_4154 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", span="9656-9656"];
m1_4155 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="return objectType == typeof(System.Net.Mail.Attachment);", span="9658-9658"];
m1_4156 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", span="9656-9656"];
m1_798 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", span="1706-1706"];
m1_799 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="var original = new Foo1<Bar1> { foo = new Bar1 { bar = ''value'' }, foo2 = new Bar1 { bar = ''value2'' } }", span="1708-1708"];
m1_800 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(original)", span="1709-1709"];
m1_801 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="var expectedJson = @''{''''foo'''':{''''bar'''':''''value''''},''''foo2'''':{''''bar'''':''''value2''''}}''", span="1710-1710"];
m1_802 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expectedJson, json)", span="1711-1711"];
m1_803 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", span="1706-1706"];
m1_1287 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", span="32-32"];
m1_1730 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="3763-3763"];
m1_1731 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="string json = @''{''''Operation'''':''''1'''',''''RoleName'''':''''Admin'''',''''Direction'''':''''0''''}''", span="3765-3765"];
m1_1732 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="RoleTransfer r = JsonConvert.DeserializeObject<RoleTransfer>(json)", span="3767-3767"];
m1_1733 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(RoleTransferOperation.Second, r.Operation)", span="3769-3769"];
m1_1734 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Admin'', r.RoleName)", span="3770-3770"];
m1_1735 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(RoleTransferDirection.First, r.Direction)", span="3771-3771"];
m1_1736 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="3763-3763"];
m1_467 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="400-400"];
m1_1234 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", span="2660-2660"];
m1_1235 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonSerializerTest.cs", label="var date = new DateTime(2001, 4, 4, 0, 0, 0, DateTimeKind.Utc)", span="2662-2662"];
m1_1236 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(date)", span="2664-2664"];
m1_1237 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''''''2001-04-04T00:00:00Z'''''', json)", span="2665-2665"];
m1_1238 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", span="2660-2660"];
m1_917 [cluster="System.Text.Encoding.GetString(byte[], int, int)", file="JsonSerializerTest.cs", label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0"];
m1_542 [cluster="Newtonsoft.Json.Tests.TestObjects.IdReferenceResolver.IdReferenceResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.IdReferenceResolver.IdReferenceResolver()", span="31-31"];
m1_953 [cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", span="29-29"];
m1_2033 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="4445-4445"];
m1_2034 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonSerializerTest.cs", label=initial, span="4447-4447"];
m1_2035 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonSerializerTest.cs", label="Add(pair.Key, pair.Value)", span="4449-4449"];
m1_2036 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="4445-4445"];
m1_2426 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="5453-5453"];
m1_2427 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                //Additional text found in JSON string after finishing deserializing object.\r\n                //Test 1\r\n                var reference = new Dictionary<string, object>();\r\n                reference.Add(''$ref'', 1);\r\n                reference.Add(''$id'', 1);\r\n\r\n                var child = new Dictionary<string, object>();\r\n                child.Add(''_id'', 2);\r\n                child.Add(''Name'', ''Isabell'');\r\n                child.Add(''Father'', reference);\r\n\r\n                var json = JsonConvert.SerializeObject(child, Formatting.Indented);\r\n                JsonConvert.DeserializeObject<Dictionary<string, object>>(json);\r\n            }, ''JSON reference $ref property must have a string or null value. Path 'Father.$ref', line 5, position 13.'')", span="5455-5470"];
m1_2428 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="5453-5453"];
m1_890 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewProperties.SubWithContractNewProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewProperties.SubWithContractNewProperties()", span="1868-1868"];
m1_719 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", span="1534-1534"];
m1_720 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="var p1 = new PersonReference\r\n            {\r\n                Name = ''John Smith''\r\n            }", span="1536-1539"];
m1_721 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="var p2 = new PersonReference\r\n            {\r\n                Name = ''Mary Sue'',\r\n            }", span="1540-1543"];
m1_722 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="p1.Spouse = p2", span="1545-1545"];
m1_723 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="p2.Spouse = p1", span="1546-1546"];
m1_724 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="var obj = new PreserveReferencesCallbackTestObject(''string!'', 42, p1, p2, p1)", span="1548-1548"];
m1_725 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="obj._parent = obj", span="1549-1549"];
m1_727 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(obj, settings)", span="1557-1557"];
m1_730 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(obj._stringValue, obj2._stringValue)", span="1587-1587"];
m1_731 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(obj._intValue, obj2._intValue)", span="1588-1588"];
m1_732 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(obj._person1.Name, obj2._person1.Name)", span="1589-1589"];
m1_733 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(obj._person2.Name, obj2._person2.Name)", span="1590-1590"];
m1_734 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(obj._person3.Name, obj2._person3.Name)", span="1591-1591"];
m1_726 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="var settings = new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                Formatting = Formatting.Indented\r\n            }", span="1551-1555"];
m1_728 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(json, @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''stringValue'''': ''''string!'''',\r\n  ''''intValue'''': 42,\r\n  ''''person1'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''3'''',\r\n      ''''Name'''': ''''Mary Sue'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''2''''\r\n      }\r\n    }\r\n  },\r\n  ''''person2'''': {\r\n    ''''$ref'''': ''''3''''\r\n  },\r\n  ''''person3'''': {\r\n    ''''$ref'''': ''''2''''\r\n  },\r\n  ''''parent'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}'')", span="1559-1583"];
m1_729 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="PreserveReferencesCallbackTestObject obj2 = JsonConvert.DeserializeObject<PreserveReferencesCallbackTestObject>(json)", span="1585-1585"];
m1_735 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(obj2._person1, obj2._person3)", span="1592-1592"];
m1_736 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(obj2._person1.Spouse, obj2._person2)", span="1593-1593"];
m1_737 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(obj2._person2.Spouse, obj2._person1)", span="1594-1594"];
m1_738 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(obj2._parent, obj2)", span="1595-1595"];
m1_739 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", span="1534-1534"];
m1_1138 [cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", span="770-770"];
m1_1865 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="195-195"];
m1_1326 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", span="2817-2817"];
m1_1327 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2819-2819"];
m1_1328 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2820-2820"];
m1_1332 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2830-2830"];
m1_1333 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2831-2831"];
m1_1329 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n            })", span="2822-2825"];
m1_1330 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':''''1970-01-01T00:00:00Z'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2826-2826"];
m1_1331 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="2828-2828"];
m1_1334 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", span="2817-2817"];
m1_1769 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="3826-3826"];
m1_1770 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="List<decimal?> l = JsonConvert.DeserializeObject<List<decimal?>>(''[ 3.3, null, 1.1 ] '')", span="3828-3828"];
m1_1771 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, l.Count)", span="3829-3829"];
m1_1772 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3.3m, l[0])", span="3831-3831"];
m1_1773 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, l[1])", span="3832-3832"];
m1_1774 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1.1m, l[2])", span="3833-3833"];
m1_1775 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="3826-3826"];
m1_3053 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="6980-6980"];
m1_3054 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs", label="IList<decimal> d1 = new List<decimal> { 1.1m }", span="6982-6982"];
m1_3055 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(d1)", span="6984-6984"];
m1_3057 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs", label="Assert.AreEqual(d1.Count, d2.Count)", span="6988-6988"];
m1_3058 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs", label="Assert.AreEqual(d1[0], d2[0])", span="6989-6989"];
m1_3056 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs", label="IList<decimal> d2 = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="6986-6986"];
m1_3059 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="6980-6980"];
m1_1710 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="3695-3695"];
m1_1711 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs", label="var value = new\r\n            {\r\n                bar = new JObject(new JProperty(''baz'', 13))\r\n            }", span="3697-3700"];
m1_1712 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(value)", span="3702-3702"];
m1_1713 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''bar'''':{''''baz'''':13}}'', json)", span="3704-3704"];
m1_1714 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="3695-3695"];
m1_2576 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="5778-5778"];
m1_2577 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonSerializerTest.cs", label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''\\/Date(946663200000+0600)\\/\''}'')", span="5780-5780"];
m1_2578 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="5781-5781"];
m1_2579 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="5778-5778"];
m1_1481 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="3114-3114"];
m1_1482 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}''", span="3116-3116"];
m1_1483 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="JaggedArray aa = JsonConvert.DeserializeObject<JaggedArray>(json)", span="3118-3118"];
m1_1491 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(json, after)", span="3129-3129"];
m1_1484 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="3120-3120"];
m1_1485 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''After!'', aa.After)", span="3121-3121"];
m1_1486 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, aa.Coordinates.Length)", span="3122-3122"];
m1_1487 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, aa.Coordinates[0].Length)", span="3123-3123"];
m1_1488 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, aa.Coordinates[0][0])", span="3124-3124"];
m1_1489 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, aa.Coordinates[1][1])", span="3125-3125"];
m1_1490 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="string after = JsonConvert.SerializeObject(aa)", span="3127-3127"];
m1_1492 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="3114-3114"];
m1_1749 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="3798-3798"];
m1_1750 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs", label="string json = @''{''''sublocation'''':''''AlertEmailSender.Program.Main'''',''''userId'''':0,''''type'''':0,''''summary'''':''''Loading settings variables'''',''''details'''':null,''''stackTrace'''':''''   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)\r\n   at System.Environment.get_StackTrace()\r\n   at mr.Logging.Event..ctor(String summary) in C:\\Projects\\MRUtils\\Logging\\Event.vb:line 71\r\n   at AlertEmailSender.Program.Main(String[] args) in C:\\Projects\\AlertEmailSender\\AlertEmailSender\\Program.cs:line 25'''',''''tag'''':null,''''time'''':''''\/Date(1249591032026-0400)\/''''}''", span="3800-3800"];
m1_1751 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<TestObjects.Event>(json); }, @''Unable to find a constructor to use for type Newtonsoft.Json.Tests.TestObjects.Event. A class should either have a default constructor, one constructor with arguments or a constructor marked with the JsonConstructor attribute. Path 'sublocation', line 1, position 15.'')", span="3802-3802"];
m1_1752 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="3798-3798"];
m1_3310 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", span="7531-7531"];
m1_4101 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringTestClass.ErroringTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringTestClass.ErroringTestClass()", span="9515-9515"];
m1_429 [cluster="System.Linq.Enumerable.Range(int, int)", file="JsonSerializerTest.cs", label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0"];
m1_3188 [cluster="Newtonsoft.Json.Tests.TestObjects.WithEnums.WithEnums()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.WithEnums.WithEnums()", span="27-27"];
m1_1351 [cluster="System.Convert.ToDateTime(string)", file="JsonSerializerTest.cs", label="Entry System.Convert.ToDateTime(string)", span="0-0"];
m1_1708 [cluster="System.Uri.Uri(string)", file="JsonSerializerTest.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m1_2217 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", span="0-0"];
m1_2650 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", span="5909-5909"];
m1_1041 [cluster="Newtonsoft.Json.Linq.JToken.Children()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="357-357"];
m1_2745 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="6157-6157"];
m1_2746 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  'Name': 'James Hughes',\r\n  'Age': '40',\r\n  'Height': '44.4',\r\n  'Price': '4'\r\n}''", span="6159-6164"];
m1_2747 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="DeserializeStringConvert p = JsonConvert.DeserializeObject<DeserializeStringConvert>(json)", span="6166-6166"];
m1_2748 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="Assert.AreEqual(40, p.Age)", span="6167-6167"];
m1_2749 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="Assert.AreEqual(44.4, p.Height)", span="6168-6168"];
m1_2750 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4m, p.Price)", span="6169-6169"];
m1_2751 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="6157-6157"];
m1_2440 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="5474-5474"];
m1_2441 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="var reference = new Dictionary<string, object>()", span="5476-5476"];
m1_2442 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="reference.Add(''$ref'', null)", span="5477-5477"];
m1_2443 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="reference.Add(''$id'', null)", span="5478-5478"];
m1_2444 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="reference.Add(''blah'', ''blah!'')", span="5479-5479"];
m1_2448 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="child.Add(''Father'', reference)", span="5484-5484"];
m1_2445 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="var child = new Dictionary<string, object>()", span="5481-5481"];
m1_2446 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="child.Add(''_id'', 2)", span="5482-5482"];
m1_2447 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="child.Add(''Name'', ''Isabell'')", span="5483-5483"];
m1_2449 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(child)", span="5486-5486"];
m1_2450 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''_id'''':2,''''Name'''':''''Isabell'''',''''Father'''':{''''$ref'''':null,''''$id'''':null,''''blah'''':''''blah!''''}}'', json)", span="5488-5488"];
m1_2451 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="Dictionary<string, object> result = JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="5490-5490"];
m1_2452 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, result.Count)", span="5492-5492"];
m1_2453 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, ((JObject)result[''Father'']).Count)", span="5493-5493"];
m1_2454 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''blah!'', (string)((JObject)result[''Father''])[''blah''])", span="5494-5494"];
m1_2455 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="5474-5474"];
m1_4131 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", span="9622-9622"];
m1_4132 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="return objectType == typeof(System.Net.Mail.MailAddress);", span="9624-9624"];
m1_4133 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", span="9622-9622"];
m1_1156 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="2514-2514"];
m1_1157 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(null)", span="2516-2516"];
m1_1158 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''null'', json)", span="2517-2517"];
m1_1159 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="2514-2514"];
m1_3946 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", span="9147-9147"];
m1_3947 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonSerializerTest.cs", label="var c = new TestClassConvertable { Id = new ConvertibleId { Value = 1 }, X = 2 }", span="9149-9149"];
m1_3948 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonSerializerTest.cs", label="var s = JsonConvert.SerializeObject(c, Formatting.Indented)", span="9150-9150"];
m1_3949 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Id'''': ''''1'''',\r\n  ''''X'''': 2\r\n}'', s)", span="9151-9154"];
m1_3950 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", span="9147-9147"];
m1_3295 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="7473-7473"];
m1_3296 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="Product product = new Product()", span="7475-7475"];
m1_3297 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="product.Name = ''Apple''", span="7476-7476"];
m1_3298 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="product.ExpiryDate = new DateTime(2012, 4, 1)", span="7477-7477"];
m1_3299 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="product.Price = 3.99M", span="7478-7478"];
m1_3300 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="product.Sizes = new[] { ''Small'', ''Medium'', ''Large'' }", span="7479-7479"];
m1_3301 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(product)", span="7481-7481"];
m1_3302 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="string metroJson = JsonConvert.SerializeObject(product, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new MetroPropertyNameResolver(),\r\n                Converters = { new MetroStringConverter() },\r\n                Formatting = Formatting.Indented\r\n            })", span="7489-7494"];
m1_3303 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  '''':::NAME:::'''': '''':::APPLE:::'''',\r\n  '''':::EXPIRYDATE:::'''': ''''2012-04-01T00:00:00'''',\r\n  '''':::PRICE:::'''': 3.99,\r\n  '''':::SIZES:::'''': [\r\n    '''':::SMALL:::'''',\r\n    '''':::MEDIUM:::'''',\r\n    '''':::LARGE:::''''\r\n  ]\r\n}'', metroJson)", span="7495-7504"];
m1_3304 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="Color[] colors = new[] { Color.Blue, Color.Red, Color.Yellow, Color.Green, Color.Black, Color.Brown }", span="7512-7512"];
m1_3305 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="string json2 = JsonConvert.SerializeObject(colors, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new MetroPropertyNameResolver(),\r\n                Converters = { new MetroStringConverter(), new MetroColorConverter() },\r\n                Formatting = Formatting.Indented\r\n            })", span="7514-7519"];
m1_3306 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::BLACK:::'''',\r\n  '''':::GRAY:::''''\r\n]'', json2)", span="7521-7528"];
m1_3307 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="7473-7473"];
m1_357 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", span="937-937"];
m1_358 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", file="JsonSerializerTest.cs", label="Dictionary<string, string> d = JsonConvert.DeserializeObject<Dictionary<string, string>>(''{\''Test1\'':false}'')", span="939-939"];
m1_359 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, d.Count)", span="940-940"];
m1_360 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''false'', d[''Test1''])", span="941-941"];
m1_361 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", span="937-937"];
m1_1472 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="3101-3101"];
m1_1473 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="JaggedArray aa = new JaggedArray()", span="3103-3103"];
m1_1474 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="aa.Before = ''Before!''", span="3104-3104"];
m1_1475 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="aa.After = ''After!''", span="3105-3105"];
m1_1476 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="aa.Coordinates = new[] { new[] { 1, 1 }, new[] { 1, 2 }, new[] { 2, 1 }, new[] { 2, 2 } }", span="3106-3106"];
m1_1477 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(aa)", span="3108-3108"];
m1_1478 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}'', json)", span="3110-3110"];
m1_1479 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="3101-3101"];
m1_3953 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", span="9159-9159"];
m1_3954 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonSerializerTest.cs", label="string content = @''{''''result'''':{''''time'''':1408188592,''''time'''':1408188593},''''error'''':null,''''id'''':''''1''''}''", span="9161-9161"];
m1_3955 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonSerializerTest.cs", label="JObject o = JsonConvert.DeserializeObject<JObject>(content)", span="9162-9162"];
m1_3956 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonSerializerTest.cs", label="int time = (int)o[''result''][''time'']", span="9163-9163"];
m1_3957 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1408188593, time)", span="9165-9165"];
m1_3958 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", span="9159-9159"];
m1_2480 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="5554-5554"];
m1_2481 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="Dictionary<DictionaryKey, string> dictionary = new Dictionary<DictionaryKey, string>()", span="5556-5556"];
m1_2482 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="dictionary.Add(new DictionaryKey() { Value = ''First!'' }, ''First'')", span="5558-5558"];
m1_2483 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="dictionary.Add(new DictionaryKey() { Value = ''Second!'' }, ''Second'')", span="5559-5559"];
m1_2484 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="5561-5561"];
m1_2485 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''First!'''': ''''First'''',\r\n  ''''Second!'''': ''''Second''''\r\n}'', json)", span="5563-5566"];
m1_2486 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="Dictionary<DictionaryKey, string> newDictionary =\r\n                JsonConvert.DeserializeObject<Dictionary<DictionaryKey, string>>(json)", span="5568-5569"];
m1_2487 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, newDictionary.Count)", span="5571-5571"];
m1_2488 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="5554-5554"];
m1_769 [cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="88-88"];
m1_2974 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="483-483"];
m1_1352 [cluster="System.DateTime.ToUniversalTime()", file="JsonSerializerTest.cs", label="Entry System.DateTime.ToUniversalTime()", span="0-0"];
m1_2018 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="4419-4419"];
m1_2019 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="string json = ''{key1:'value1',key2:'value2',key3:'value3'}''", span="4421-4421"];
m1_2020 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="var dic = JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json)", span="4423-4423"];
m1_2021 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, dic.Count)", span="4425-4425"];
m1_2022 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value1'', dic[''key1''])", span="4426-4426"];
m1_2023 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value2'', dic[''key2''])", span="4427-4427"];
m1_2024 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value3'', dic[''key3''])", span="4428-4428"];
m1_2025 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="4419-4419"];
m1_374 [cluster="Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", span="724-724"];
m1_2984 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="6830-6830"];
m1_2985 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs", label="string input = @''http://tes/?a=b\\c&d=e\''", span="6832-6832"];
m1_2986 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs", label="Uri uri = new Uri(input)", span="6833-6833"];
m1_2987 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(uri)", span="6834-6834"];
m1_2989 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(uri, output)", span="6837-6837"];
m1_2988 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs", label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="6835-6835"];
m1_2990 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="6830-6830"];
m1_1233 [cluster="Unk.AreNotEqual", file="JsonSerializerTest.cs", label="Entry Unk.AreNotEqual", span=""];
m1_2137 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="4773-4773"];
m1_2138 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonSerializerTest.cs", label="return _innerDictionary.TryGetValue(key, out value);", span="4775-4775"];
m1_2139 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="4773-4773"];
m1_2897 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", span="6622-6622"];
m1_2898 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonSerializerTest.cs", label="return _readonlyString;", span="6624-6624"];
m1_2899 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", span="6622-6622"];
m1_2220 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", span="0-0"];
m1_258 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", span="617-617"];
m1_259 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", file="JsonSerializerTest.cs", label="Name = name", span="619-619"];
m1_260 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", span="617-617"];
m1_4176 [cluster="System.Text.Encoding.GetEncoding(string)", file="JsonSerializerTest.cs", label="Entry System.Text.Encoding.GetEncoding(string)", span="0-0"];
m1_3067 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="7006-7006"];
m1_3068 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs", label="IList<byte[]> d1 = new List<byte[]> { null }", span="7008-7008"];
m1_3069 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(d1)", span="7010-7010"];
m1_3071 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(d1.Count, d2.Count)", span="7014-7014"];
m1_3072 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(d1[0], d2[0])", span="7015-7015"];
m1_3070 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs", label="IList<byte[]> d2 = JsonConvert.DeserializeObject<IList<byte[]>>(json)", span="7012-7012"];
m1_3073 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="7006-7006"];
m1_4055 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", span="9406-9406"];
m1_4056 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonSerializerTest.cs", label="ConstantTestClass c1 = new ConstantTestClass()", span="9408-9408"];
m1_4057 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="9410-9410"];
m1_4058 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''MY_CONSTANT'''': ''''.''''\r\n}'', json)", span="9412-9414"];
m1_4059 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<ConstantTestClass>(json)", span="9416-9416"];
m1_4060 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", span="9406-9406"];
m1_1991 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="4324-4324"];
m1_1992 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonSerializerTest.cs", label="_dict1.Add(item.Key, item)", span="4326-4326"];
m1_1993 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="4324-4324"];
m1_3688 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", span="8485-8485"];
m1_3689 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs", label="Tuple<int, int> tuple = Tuple.Create(500, 20)", span="8487-8487"];
m1_3690 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(tuple)", span="8488-8488"];
m1_3691 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Item1'''':500,''''Item2'''':20}'', json)", span="8489-8489"];
m1_3692 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs", label="Tuple<int, int> tuple2 = JsonConvert.DeserializeObject<Tuple<int, int>>(json)", span="8491-8491"];
m1_3693 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs", label="Assert.AreEqual(500, tuple2.Item1)", span="8492-8492"];
m1_3694 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs", label="Assert.AreEqual(20, tuple2.Item2)", span="8493-8493"];
m1_3695 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", span="8485-8485"];
m1_3323 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", span="7546-7546"];
m1_3324 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="return objectType == typeof(Color);", span="7548-7548"];
m1_3325 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", span="7546-7546"];
m1_2606 [cluster="System.Dynamic.ExpandoObject.ExpandoObject()", file="JsonSerializerTest.cs", label="Entry System.Dynamic.ExpandoObject.ExpandoObject()", span="0-0"];
m1_832 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m1_2062 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", span="4581-4581"];
m1_2064 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="JsonSerializerTest.cs", label="C2 = c2", span="4583-4583"];
m1_2065 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", span="4581-4581"];
m1_2714 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="6096-6096"];
m1_2715 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs", label="NonPublicConstructorWithJsonConstructor c = JsonConvert.DeserializeObject<NonPublicConstructorWithJsonConstructor>(''{}'')", span="6098-6098"];
m1_2716 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''NonPublic'', c.Constructor)", span="6099-6099"];
m1_2717 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="6096-6096"];
m1_3457 [cluster="Unk.IsFalse", file="JsonSerializerTest.cs", label="Entry Unk.IsFalse", span=""];
m1_3641 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="8319-8319"];
m1_3642 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonSerializerTest.cs", label="IgnoreSerializableAttribute = false", span="8321-8321"];
m1_3643 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="8319-8319"];
m1_335 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", span="873-873"];
m1_336 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs", label="NullTestClass otc = JsonConvert.DeserializeObject<NullTestClass>(@''{\r\n    ''''Value1'''': null,\r\n    ''''Value2'''': null,\r\n    ''''Value3'''': null,\r\n    ''''Value4'''': null,\r\n    ''''Value5'''': null\r\n}'')", span="875-881"];
m1_337 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs", label="Assert.IsNull(otc.Value1)", span="882-882"];
m1_338 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JTokenType.Null, otc.Value2.Type)", span="883-883"];
m1_339 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JTokenType.Raw, otc.Value3.Type)", span="884-884"];
m1_340 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JTokenType.Null, otc.Value4.Type)", span="885-885"];
m1_341 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs", label="Assert.IsNull(otc.Value5)", span="886-886"];
m1_342 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", span="873-873"];
m1_283 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="239-239"];
m1_1715 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="326-326"];
m1_2616 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="5864-5864"];
m1_2617 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="string json = ''{Amount:123456789876543.21}''", span="5866-5866"];
m1_2618 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="5867-5867"];
m1_2619 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="reader.FloatParseHandling = FloatParseHandling.Decimal", span="5868-5868"];
m1_2621 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="Invoice i = serializer.Deserialize<Invoice>(reader)", span="5872-5872"];
m1_2620 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="5870-5870"];
m1_2622 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123456789876543.21m, i.Amount)", span="5873-5873"];
m1_2623 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="5864-5864"];
m1_2550 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="5729-5729"];
m1_2551 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n            {\r\n                Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n            })", span="5731-5734"];
m1_2552 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''{\''Offset\'':\''2000-01-01T00:00:00+06:00\''}'', serializeObject)", span="5736-5736"];
m1_2553 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(serializeObject))", span="5738-5738"];
m1_2554 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="reader.DateParseHandling = DateParseHandling.None", span="5739-5739"];
m1_2556 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="var deserializeObject = serializer.Deserialize<TimeZoneOffsetObject>(reader)", span="5743-5743"];
m1_2555 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="5741-5741"];
m1_2557 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="5745-5745"];
m1_2558 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="5746-5746"];
m1_2559 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="5729-5729"];
m1_2788 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="6289-6289"];
m1_2789 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new EnumerableArrayPropertyClass())", span="6291-6291"];
m1_2790 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<EnumerableArrayPropertyClass>(json)", span="6292-6292"];
m1_2791 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="6289-6289"];
m1_860 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", span="1892-1892"];
m1_861 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="BaseWithContract baseWith = new SubWithoutContractNewProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1894-1900"];
m1_862 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.JustAProperty = ''JustAProperty2!''", span="1902-1902"];
m1_863 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.Virtual = ''Virtual2!''", span="1903-1903"];
m1_864 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1904-1904"];
m1_865 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.WithDataMember = ''WithDataMember2!''", span="1905-1905"];
m1_866 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="string json = AssertSerializeDeserializeEqual(baseWith)", span="1907-1907"];
m1_867 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''WithDataMemberSub'''': ''''WithDataMember!''''\r\n}'', json)", span="1909-1916"];
m1_868 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", span="1892-1892"];
m1_2651 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", span="5897-5897"];
m1_3722 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", span="8555-8555"];
m1_3723 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs", label="string json = @''[999999999999999999999999999999999999999999999999]''", span="8557-8557"];
m1_3724 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs", label="IList<BigInteger> l = JsonConvert.DeserializeObject<IList<BigInteger>>(json)", span="8559-8559"];
m1_3726 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<IList<long>>(json), ''Error converting value 999999999999999999999999999999999999999999999999 to type 'System.Int64'. Path '[0]', line 1, position 49.'')", span="8563-8563"];
m1_3725 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs", label="Assert.AreEqual(BigInteger.Parse(''999999999999999999999999999999999999999999999999''), l[0])", span="8561-8561"];
m1_3727 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", span="8555-8555"];
m1_777 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1.Foo1()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1.Foo1()", span="1648-1648"];
m1_612 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", span="1371-1371"];
m1_613 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="JsonSerializerProxy serializerProxy = new JsonSerializerProxy(new JsonSerializerInternalReader(new JsonSerializer()))", span="1373-1373"];
m1_614 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="1375-1375"];
m1_615 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.Binder = customBinder", span="1376-1376"];
m1_616 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(customBinder, serializerProxy.Binder)", span="1377-1377"];
m1_617 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.CheckAdditionalContent = true", span="1379-1379"];
m1_618 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, serializerProxy.CheckAdditionalContent)", span="1380-1380"];
m1_619 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="1382-1382"];
m1_620 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, serializerProxy.ConstructorHandling)", span="1383-1383"];
m1_621 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.Context = new StreamingContext(StreamingContextStates.Other)", span="1386-1386"];
m1_622 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), serializerProxy.Context)", span="1387-1387"];
m1_624 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.ContractResolver = resolver", span="1391-1391"];
m1_625 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(resolver, serializerProxy.ContractResolver)", span="1392-1392"];
m1_626 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.Converters.Add(new StringEnumConverter())", span="1394-1394"];
m1_627 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, serializerProxy.Converters.Count)", span="1395-1395"];
m1_628 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.Culture = new CultureInfo(''en-nz'')", span="1397-1397"];
m1_629 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''en-NZ'', serializerProxy.Culture.ToString())", span="1398-1398"];
m1_630 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.EqualityComparer = EqualityComparer<object>.Default", span="1400-1400"];
m1_631 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(EqualityComparer<object>.Default, serializerProxy.EqualityComparer)", span="1401-1401"];
m1_632 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="1403-1403"];
m1_633 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, serializerProxy.DateFormatHandling)", span="1404-1404"];
m1_634 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.DateFormatString = ''yyyy''", span="1406-1406"];
m1_635 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''yyyy'', serializerProxy.DateFormatString)", span="1407-1407"];
m1_636 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.DateParseHandling = DateParseHandling.None", span="1409-1409"];
m1_637 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateParseHandling.None, serializerProxy.DateParseHandling)", span="1410-1410"];
m1_638 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="1412-1412"];
m1_639 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateTimeZoneHandling.Utc, serializerProxy.DateTimeZoneHandling)", span="1413-1413"];
m1_640 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="1415-1415"];
m1_641 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, serializerProxy.DefaultValueHandling)", span="1416-1416"];
m1_642 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.FloatFormatHandling = FloatFormatHandling.Symbol", span="1418-1418"];
m1_643 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FloatFormatHandling.Symbol, serializerProxy.FloatFormatHandling)", span="1419-1419"];
m1_644 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.FloatParseHandling = FloatParseHandling.Decimal", span="1421-1421"];
m1_645 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FloatParseHandling.Decimal, serializerProxy.FloatParseHandling)", span="1422-1422"];
m1_646 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.Formatting = Formatting.Indented", span="1424-1424"];
m1_647 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(Formatting.Indented, serializerProxy.Formatting)", span="1425-1425"];
m1_648 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.MaxDepth = 9001", span="1427-1427"];
m1_649 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(9001, serializerProxy.MaxDepth)", span="1428-1428"];
m1_650 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.MissingMemberHandling = MissingMemberHandling.Error", span="1430-1430"];
m1_651 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(MissingMemberHandling.Error, serializerProxy.MissingMemberHandling)", span="1431-1431"];
m1_652 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.NullValueHandling = NullValueHandling.Ignore", span="1433-1433"];
m1_653 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(NullValueHandling.Ignore, serializerProxy.NullValueHandling)", span="1434-1434"];
m1_654 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.ObjectCreationHandling = ObjectCreationHandling.Replace", span="1436-1436"];
m1_655 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ObjectCreationHandling.Replace, serializerProxy.ObjectCreationHandling)", span="1437-1437"];
m1_656 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.PreserveReferencesHandling = PreserveReferencesHandling.All", span="1439-1439"];
m1_657 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(PreserveReferencesHandling.All, serializerProxy.PreserveReferencesHandling)", span="1440-1440"];
m1_658 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="1442-1442"];
m1_659 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ReferenceLoopHandling.Ignore, serializerProxy.ReferenceLoopHandling)", span="1443-1443"];
m1_661 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.ReferenceResolver = referenceResolver", span="1446-1446"];
m1_662 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(referenceResolver, serializerProxy.ReferenceResolver)", span="1447-1447"];
m1_663 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="1449-1449"];
m1_664 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, serializerProxy.StringEscapeHandling)", span="1450-1450"];
m1_666 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.TraceWriter = traceWriter", span="1453-1453"];
m1_667 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(traceWriter, serializerProxy.TraceWriter)", span="1454-1454"];
m1_668 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="1457-1457"];
m1_669 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FormatterAssemblyStyle.Full, serializerProxy.TypeNameAssemblyFormat)", span="1458-1458"];
m1_670 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.TypeNameHandling = TypeNameHandling.All", span="1461-1461"];
m1_671 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TypeNameHandling.All, serializerProxy.TypeNameHandling)", span="1462-1462"];
m1_623 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="1390-1390"];
m1_660 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="1445-1445"];
m1_665 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="1452-1452"];
m1_672 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", span="1371-1371"];
m1_3111 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", span="7121-7121"];
m1_3112 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs", label="ConvertableIntTestClass c = new ConvertableIntTestClass\r\n            {\r\n                Integer = new ConvertibleInt(1),\r\n                NullableInteger1 = new ConvertibleInt(2),\r\n                NullableInteger2 = null\r\n            }", span="7123-7128"];
m1_3113 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="7130-7130"];
m1_3114 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Integer'''': 1,\r\n  ''''NullableInteger1'''': 2,\r\n  ''''NullableInteger2'''': null\r\n}'', json)", span="7132-7136"];
m1_3115 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", span="7121-7121"];
m1_1204 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", span="35-35"];
m1_3131 [cluster="Newtonsoft.Json.Tests.TestObjects.WidgetId.WidgetId()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.WidgetId.WidgetId()", span="27-27"];
m1_2762 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="6187-6187"];
m1_2763 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs", label="MultiIndexSuper e = new MultiIndexSuper()", span="6189-6189"];
m1_2764 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="6191-6191"];
m1_2765 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{}'', json)", span="6193-6193"];
m1_2766 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="6187-6187"];
m1_2089 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4671-4671"];
m1_2090 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="dictionary == null", span="4673-4673"];
m1_2091 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="throw new ArgumentNullException(nameof(dictionary));", span="4675-4675"];
m1_2092 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label=dictionary, span="4678-4678"];
m1_2093 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="_innerDictionary.Add(entry.Key, entry.Value)", span="4680-4680"];
m1_2094 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4671-4671"];
m1_321 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqSection.FaqSection()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqSection.FaqSection()", span="797-797"];
m1_2866 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", span="6536-6536"];
m1_2867 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="6538-6538"];
m1_2868 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", span="6536-6536"];
m1_3735 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", span="8588-8588"];
m1_3736 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs", label="Pair<string, int> p = new Pair<string, int>(''One'', 2)", span="8590-8590"];
m1_3737 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(p)", span="8592-8592"];
m1_3741 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(p, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = r\r\n            })", span="8600-8603"];
m1_3738 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''First'''':''''One'''',''''Second'''':2}'', json)", span="8594-8594"];
m1_3739 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs", label="DefaultContractResolver r = new DefaultContractResolver()", span="8597-8597"];
m1_3740 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs", label="r.IgnoreSerializableAttribute = false", span="8598-8598"];
m1_3742 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''First'''':''''One'''',''''Second'''':2}'', json)", span="8605-8605"];
m1_3743 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", span="8588-8588"];
m1_1443 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="3028-3028"];
m1_1444 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''FirstName'''': ''''I can't be null bro!'''',\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="3030-3035"];
m1_1445 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="RequiredMembersClass c = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="3037-3037"];
m1_1446 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''I can't be null bro!'', c.FirstName)", span="3039-3039"];
m1_1447 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, c.MiddleName)", span="3040-3040"];
m1_1448 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, c.LastName)", span="3041-3041"];
m1_1449 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="3028-3028"];
m1_3418 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", span="7732-7732"];
m1_3419 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="IDictionary<DateTimeOffset, int> dic1 = new Dictionary<DateTimeOffset, int>\r\n            {\r\n                { new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), 1 },\r\n                { new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero), 2 }\r\n            }", span="7734-7738"];
m1_3420 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented)", span="7740-7740"];
m1_3421 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''2000-12-12T12:12:12+00:00'''': 1,\r\n  ''''2013-12-12T12:12:12+00:00'''': 2\r\n}'', json)", span="7742-7745"];
m1_3422 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="IDictionary<DateTimeOffset, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTimeOffset, int>>(json)", span="7747-7747"];
m1_3423 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2.Count)", span="7749-7749"];
m1_3424 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, dic2[new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7750-7750"];
m1_3425 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2[new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7751-7751"];
m1_3426 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", span="7732-7732"];
m1_3318 [cluster="Unk.WriteValue", file="JsonSerializerTest.cs", label="Entry Unk.WriteValue", span=""];
m1_3583 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="8145-8145"];
m1_3584 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonSerializerTest.cs", label="string json =\r\n                JsonConvert.SerializeObject(new KeyValuePair<int, string>(123, ''test value''), Formatting.Indented, new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n                })", span="8147-8151"];
m1_3585 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''key'''': 123,\r\n  ''''value'''': ''''test value''''\r\n}'', json)", span="8153-8156"];
m1_3586 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="8145-8145"];
m1_2406 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="5422-5422"];
m1_2407 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="5424-5424"];
m1_2408 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="5422-5422"];
m1_1927 [cluster="Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", span="27-27"];
m1_3563 [cluster="System.Uri.Uri(string, System.UriKind)", file="JsonSerializerTest.cs", label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0"];
m1_1457 [cluster="string.StartsWith(string)", file="JsonSerializerTest.cs", label="Entry string.StartsWith(string)", span="0-0"];
m1_3500 [cluster="Newtonsoft.Json.Tests.TestObjects.Event1.Event1()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Event1.Event1()", span="31-31"];
m1_1804 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="3880-3880"];
m1_1805 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonSerializerTest.cs", label="string json = @''[]''", span="3882-3882"];
m1_1806 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { JsonConvert.DeserializeObject<DynamicDictionary>(json); },\r\n                @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.Linq.DynamicDictionary' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3884-3888"];
m1_1807 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="3880-3880"];
m1_1295 [cluster="Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", span="27-27"];
m1_880 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualProperties.SubWithoutContractVirtualProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualProperties.SubWithoutContractVirtualProperties()", span="1859-1859"];
m1_2106 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0"];
m1_2154 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", span="4821-4821"];
m1_2155 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs", label="_stringValue = stringValue", span="4823-4823"];
m1_2156 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs", label="_intValue = intValue", span="4824-4824"];
m1_2157 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs", label="_dateTimeOffsetValue = dateTimeOffset", span="4825-4825"];
m1_2158 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs", label="_personValue = personValue", span="4826-4826"];
m1_2159 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs", label="_dateTimeValue = new DateTime(0, DateTimeKind.Utc)", span="4827-4827"];
m1_2160 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", span="4821-4821"];
m1_791 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", span="1697-1697"];
m1_792 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="var json = @''{''''foo'''':{''''bar'''':''''value''''}}''", span="1699-1699"];
m1_793 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="var deserialized = JsonConvert.DeserializeObject<FooBar1>(json)", span="1700-1700"];
m1_794 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(deserialized.foo)", span="1701-1701"];
m1_795 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value'', deserialized.foo.bar)", span="1702-1702"];
m1_796 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", span="1697-1697"];
m1_919 [cluster="Newtonsoft.Json.Linq.JObject.Properties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.Properties()", span="253-253"];
m1_2097 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="4715-4715"];
m1_2098 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="((IDictionary<string, T>)_innerDictionary).Add(item)", span="4717-4717"];
m1_2099 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="4715-4715"];
m1_2467 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", span="5524-5524"];
m1_2468 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs", label="string json = @''{'value':9.9}''", span="5526-5526"];
m1_2469 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs", label="var dic = JsonConvert.DeserializeObject<IDictionary<string, object>>(\r\n                json, new JsonSerializerSettings\r\n                {\r\n                    FloatParseHandling = FloatParseHandling.Decimal\r\n                })", span="5528-5532"];
m1_2470 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(decimal), dic[''value''].GetType())", span="5534-5534"];
m1_2471 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs", label="Assert.AreEqual(9.9m, dic[''value''])", span="5535-5535"];
m1_2472 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", span="5524-5524"];
m1_2608 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="5850-5850"];
m1_2609 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs", label="decimal d = JsonConvert.DeserializeObject<decimal>(''123456789876543.21'')", span="5852-5852"];
m1_2610 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123456789876543.21m, d)", span="5853-5853"];
m1_2611 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="5850-5850"];
m1_2814 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObject.ChildObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObject.ChildObject()", span="6364-6364"];
m1_190 [cluster="string.ToUpper(System.Globalization.CultureInfo)", file="JsonSerializerTest.cs", label="Entry string.ToUpper(System.Globalization.CultureInfo)", span="0-0"];
m1_198 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="621-621"];
m1_2344 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="5297-5297"];
m1_2345 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="XNodeTestObject testObject = new XNodeTestObject()", span="5299-5299"];
m1_2346 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="testObject.Document = XDocument.Parse(''<root>hehe, root</root>'')", span="5300-5300"];
m1_2347 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="testObject.Element = XElement.Parse(@''<fifth xmlns:json=''''http://json.org'''' json:Awesome=''''true''''>element</fifth>'')", span="5301-5301"];
m1_2348 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="5303-5303"];
m1_2352 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testObject.Document.ToString(), newTestObject.Document.ToString())", span="5319-5319"];
m1_2353 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testObject.Element.ToString(), newTestObject.Element.ToString())", span="5320-5320"];
m1_2349 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  },\r\n  ''''Element'''': {\r\n    ''''fifth'''': {\r\n      ''''@xmlns:json'''': ''''http://json.org'''',\r\n      ''''@json:Awesome'''': ''''true'''',\r\n      ''''#text'''': ''''element''''\r\n    }\r\n  }\r\n}''", span="5304-5315"];
m1_2350 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(expected, json)", span="5316-5316"];
m1_2351 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="XNodeTestObject newTestObject = JsonConvert.DeserializeObject<XNodeTestObject>(json)", span="5318-5318"];
m1_2354 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="Assert.IsNull(newTestObject.Element.Parent)", span="5322-5322"];
m1_2355 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="5297-5297"];
m1_999 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", span="2161-2161"];
m1_1000 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="string value = @''{''''Name'''':''''Orange'''', ''''Hash'''':{''''ExpiryDate'''':''''01/24/2010 12:00:00'''',''''UntypedArray'''':[''''01/24/2010 12:00:00'''']}}''", span="2163-2163"];
m1_1001 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="TypedSubHashtable p = JsonConvert.DeserializeObject(value, typeof(TypedSubHashtable)) as TypedSubHashtable", span="2165-2165"];
m1_1002 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''01/24/2010 12:00:00'', p.Hash[''ExpiryDate''].ToString())", span="2167-2167"];
m1_1003 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  ''''01/24/2010 12:00:00''''\r\n]'', p.Hash[''UntypedArray''].ToString())", span="2168-2170"];
m1_1004 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", span="2161-2161"];
m1_2103 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="4725-4725"];
m1_2104 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonSerializerTest.cs", label="_innerDictionary.Clear()", span="4727-4727"];
m1_2105 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="4725-4725"];
m1_804 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1<T>.Foo1()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1<T>.Foo1()", span="1658-1658"];
m1_990 [cluster="Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", span="27-27"];
m1_2767 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", span="6196-6196"];
m1_2807 [cluster="DataContractSerializer.cstr", file="JsonSerializerTest.cs", label="Entry DataContractSerializer.cstr", span=""];
m1_1353 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="2869-2869"];
m1_1354 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="ClassAndMemberConverterClass c1 = new ClassAndMemberConverterClass()", span="2871-2871"];
m1_1355 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="c1.DefaultConverter = new ConverterPrecedenceClass(''DefaultConverterValue'')", span="2872-2872"];
m1_1356 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="c1.MemberConverter = new ConverterPrecedenceClass(''MemberConverterValue'')", span="2873-2873"];
m1_1357 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="2875-2875"];
m1_1358 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':[''''Class'''',''''DefaultConverterValue''''],''''MemberConverter'''':[''''Member'''',''''MemberConverterValue'''']}'', json)", span="2876-2876"];
m1_1359 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="ClassAndMemberConverterClass c2 = JsonConvert.DeserializeObject<ClassAndMemberConverterClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="2878-2878"];
m1_1360 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''DefaultConverterValue'', c2.DefaultConverter.TestValue)", span="2880-2880"];
m1_1361 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''MemberConverterValue'', c2.MemberConverter.TestValue)", span="2881-2881"];
m1_1362 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="2869-2869"];
m1_1866 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="3983-3983"];
m1_1867 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error setting value to 'ReadTimeout' on 'System.IO.MemoryStream'.'')", span="3985-3996"];
m1_1868 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="3983-3983"];
m1_2657 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", span="5952-5952"];
m1_2658 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", span="5952-5952"];
m1_2286 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="5264-5264"];
m1_2333 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_field1 = g", span="5267-5267"];
m1_2334 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_field2 = g", span="5268-5268"];
m1_2335 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property1 = g", span="5269-5269"];
m1_2336 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property2 = g", span="5270-5270"];
m1_2337 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property3 = g", span="5271-5271"];
m1_2338 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property4 = g", span="5272-5272"];
m1_2339 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property5 = g", span="5273-5273"];
m1_2340 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property6 = g", span="5274-5274"];
m1_2341 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property7 = g", span="5275-5275"];
m1_2342 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property8 = g", span="5276-5276"];
m1_2343 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="5264-5264"];
m1_848 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", span="1767-1767"];
m1_849 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonSerializerTest.cs", label="var strings = dictionaryKey.Split(' ')", span="1769-1769"];
m1_850 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonSerializerTest.cs", label="return new DictionaryKeyCast(strings[0], Convert.ToInt32(strings[1]));", span="1770-1770"];
m1_851 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", span="1767-1767"];
m1_3339 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="7590-7590"];
m1_3340 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="7592-7592"];
m1_3341 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="BsonWriter writer = new BsonWriter(ms)", span="7593-7593"];
m1_3345 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="byte[] data = ms.ToArray()", span="7598-7598"];
m1_3342 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="writer.WriteStartArray()", span="7594-7594"];
m1_3343 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="writer.WriteValue(''2000-01-02T03:04:05+06:00'')", span="7595-7595"];
m1_3344 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="writer.WriteEndArray()", span="7596-7596"];
m1_3346 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="BsonReader reader = new BsonReader(new MemoryStream(data))\r\n            {\r\n                ReadRootValueAsArray = true\r\n            }", span="7599-7602"];
m1_3347 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="JArray a = (JArray)JArray.ReadFrom(reader)", span="7604-7604"];
m1_3348 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="JValue v = (JValue)a[0]", span="7605-7605"];
m1_3350 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  ''''2000-01-02T03:04:05+06:00''''\r\n]'', a.ToString())", span="7608-7610"];
m1_3349 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="7607-7607"];
m1_3351 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="7590-7590"];
m1_310 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m1_1377 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="2902-2902"];
m1_1378 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="string json", span="2904-2904"];
m1_1379 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject((int?)null)", span="2906-2906"];
m1_1380 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''null'', json)", span="2907-2907"];
m1_1381 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject((int?)1)", span="2909-2909"];
m1_1382 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''1'', json)", span="2910-2910"];
m1_1383 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="2902-2902"];
m1_1716 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="3708-3708"];
m1_1717 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Content content = new Content\r\n            {\r\n                Text = ''Blah, blah, blah'',\r\n                Children = new List<Content>\r\n                {\r\n                    new Content { Text = ''First'' },\r\n                    new Content { Text = ''Second'' }\r\n                }\r\n            }", span="3710-3718"];
m1_1718 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(content, Formatting.Indented)", span="3720-3720"];
m1_1719 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}'', json)", span="3722-3734"];
m1_1720 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="3708-3708"];
m1_2010 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", span="4318-4318"];
m1_2640 [cluster="string.Format(string, object, object, object)", file="JsonSerializerTest.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m1_2779 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", span="6257-6257"];
m1_2780 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="JsonSerializerTest.cs", label="B = 2", span="6259-6259"];
m1_2781 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", span="6257-6257"];
m1_3087 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", span="7063-7063"];
m1_3088 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+HasByteArray, Newtonsoft.Json.Tests'''',\r\n  ''''EncryptedPassword'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''cGFzc3dvcmQ=''''\r\n  },\r\n  ''''Pie'''': null\r\n}''", span="7065-7072"];
m1_3089 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", file="JsonSerializerTest.cs", label="HasByteArray value = JsonConvert.DeserializeObject<HasByteArray>(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects\r\n            })", span="7073-7076"];
m1_3090 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(value.EncryptedPassword)", span="7078-7078"];
m1_3091 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEquivalent(Convert.FromBase64String(''cGFzc3dvcmQ=''), value.EncryptedPassword)", span="7079-7079"];
m1_3092 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", span="7063-7063"];
m1_2186 [cluster="System.Runtime.Serialization.SerializationInfo.GetInt16(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetInt16(string)", span="0-0"];
m1_3801 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", span="8767-8767"];
m1_3802 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonSerializerTest.cs", label="string json = @''{''''something_else'''':''''my value''''}''", span="8769-8769"];
m1_3803 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonSerializerTest.cs", label="var foo = JsonConvert.DeserializeObject<FooConstructor>(json)", span="8770-8770"];
m1_3804 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''my value'', foo.Bar)", span="8771-8771"];
m1_3805 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", span="8767-8767"];
m1_2225 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="4956-4956"];
m1_2226 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Person person = new Person()", span="4958-4958"];
m1_2227 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="4959-4959"];
m1_2228 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="person.LastModified = person.BirthDate", span="4960-4960"];
m1_2229 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="person.Department = ''Department!''", span="4961-4961"];
m1_2230 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="person.Name = ''Name!''", span="4962-4962"];
m1_2234 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="4972-4972"];
m1_2231 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="4964-4964"];
m1_2232 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="string dateTimeOffsetText", span="4965-4965"];
m1_2240 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="5003-5003"];
m1_2233 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="dateTimeOffsetText = @''2000-12-20T22:59:59+02:00''", span="4967-4967"];
m1_2236 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''2000-01-01T01:01:01Z'''',\r\n    ''''LastModified'''': ''''2000-01-01T01:01:01Z''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''0001-01-01T00:00:00Z'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="4975-4998"];
m1_2235 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="4974-4974"];
m1_2237 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="5000-5000"];
m1_2238 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''String!'', o2._stringValue)", span="5001-5001"];
m1_2239 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MinValue, o2._intValue)", span="5002-5002"];
m1_2241 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="5004-5004"];
m1_2242 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, o2._nullPersonValue)", span="5005-5005"];
m1_2243 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, o2._nullableInt)", span="5006-5006"];
m1_2244 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="4956-4956"];
m1_3093 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="7083-7083"];
m1_3094 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="Bb b = new Bb()", span="7085-7085"];
m1_3095 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="b.no = true", span="7086-7086"];
m1_3096 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="Aa a = b", span="7087-7087"];
m1_3098 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(b)", span="7090-7090"];
m1_3097 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="a.no = int.MaxValue", span="7088-7088"];
m1_3099 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''no'''':true}'', json)", span="7092-7092"];
m1_3100 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="Bb b2 = JsonConvert.DeserializeObject<Bb>(json)", span="7094-7094"];
m1_3101 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, b2.no)", span="7096-7096"];
m1_3102 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="7083-7083"];
m1_1434 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="3002-3002"];
m1_1435 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="RequiredMembersClass c = new RequiredMembersClass()\r\n            {\r\n                BirthDate = new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc),\r\n                FirstName = ''Bob'',\r\n                LastName = ''Smith'',\r\n                MiddleName = ''Cosmo''\r\n            }", span="3004-3010"];
m1_1436 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="3012-3012"];
m1_1437 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''FirstName'''': ''''Bob'''',\r\n  ''''MiddleName'''': ''''Cosmo'''',\r\n  ''''LastName'''': ''''Smith'''',\r\n  ''''BirthDate'''': ''''2000-12-20T10:55:55Z''''\r\n}'', json)", span="3014-3019"];
m1_1438 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="RequiredMembersClass c2 = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="3021-3021"];
m1_1439 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Bob'', c2.FirstName)", span="3023-3023"];
m1_1440 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc), c2.BirthDate)", span="3024-3024"];
m1_1441 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="3002-3002"];
m1_915 [cluster="Unk.WriteObject", file="JsonSerializerTest.cs", label="Entry Unk.WriteObject", span=""];
m1_2827 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="6441-6441"];
m1_2828 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonSerializerTest.cs", label="Title = title", span="6443-6443"];
m1_2829 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonSerializerTest.cs", label="Categories = new List<string>()", span="6444-6444"];
m1_2830 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="6441-6441"];
m1_1376 [cluster="Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", span="27-27"];
m1_2975 [cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="167-167"];
m1_3353 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", span="143-143"];
m1_411 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyVirtual<T>.ResponseWithNewGenericPropertyVirtual()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyVirtual<T>.ResponseWithNewGenericPropertyVirtual()", span="1007-1007"];
m1_2037 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="4489-4489"];
m1_2038 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs", label="B value = new B()", span="4491-4491"];
m1_2039 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(value, Formatting.Indented)", span="4492-4492"];
m1_2040 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''B2'''': null,\r\n  ''''A1'''': null,\r\n  ''''B3'''': null,\r\n  ''''A2'''': null\r\n}'', json)", span="4494-4499"];
m1_2041 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="4489-4489"];
m1_1608 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="3429-3429"];
m1_1609 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs", label="string classRef = typeof(JsonPropertyWithHandlingValues).FullName", span="3431-3431"];
m1_1610 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues();\r\n                o.ReferenceLoopHandlingErrorProperty = o;\r\n\r\n                JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore });\r\n            }, ''Self referencing loop detected for property 'ReferenceLoopHandlingErrorProperty' with type ''' + classRef + '''. Path ''.'')", span="3433-3439"];
m1_1611 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="3429-3429"];
m1_4194 [cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", span="9802-9802"];
m1_4195 [cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonSerializerTest.cs", label="Value = value", span="9804-9804"];
m1_4196 [cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonSerializerTest.cs", label="Constructor = ''Public Parameterized''", span="9805-9805"];
m1_4197 [cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", span="9802-9802"];
m1_4081 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType.BaseConstructorType(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType.BaseConstructorType(string)", span="9486-9486"];
m1_4082 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType.BaseConstructorType(string)", file="JsonSerializerTest.cs", label="BaseProperty = baseProperty", span="9488-9488"];
m1_4083 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType.BaseConstructorType(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType.BaseConstructorType(string)", span="9486-9486"];
m1_1450 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="3045-3045"];
m1_1451 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''FirstName'''': null,\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="3049-3054"];
m1_1452 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="3056-3056"];
m1_1453 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="Assert.Fail()", span="3057-3057"];
m1_1454 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label=JsonSerializationException, span="3059-3059"];
m1_1455 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'FirstName' expects a value but got null. Path ''''))", span="3061-3061"];
m1_1456 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="3045-3045"];
m1_2381 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", span="5379-5379"];
m1_3660 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="8403-8403"];
m1_3661 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs", label="CultureInfo culture = new CultureInfo(''en-NZ'')", span="8405-8405"];
m1_3662 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs", label="culture.DateTimeFormat.AMDesignator = ''a.m.''", span="8406-8406"];
m1_3663 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs", label="culture.DateTimeFormat.PMDesignator = ''p.m.''", span="8407-8407"];
m1_3665 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = ''yyyy tt'',\r\n                Culture = culture\r\n            })", span="8415-8419"];
m1_3664 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs", label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="8409-8413"];
m1_3666 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="8421-8424"];
m1_3667 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="8403-8403"];
m1_42 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="340-340"];
m1_2405 [cluster="string.Format(System.IFormatProvider, string, object, object)", file="JsonSerializerTest.cs", label="Entry string.Format(System.IFormatProvider, string, object, object)", span="0-0"];
m1_171 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", span="456-456"];
m1_172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new Binding_DisallowNull(), new JsonSerializerSettings\r\n            {\r\n                NullValueHandling = NullValueHandling.Ignore\r\n            })", span="458-461"];
m1_173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''{}'', json)", span="462-462"];
m1_174 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", span="456-456"];
m1_56 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime, System.TimeSpan)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime, System.TimeSpan)", span="164-164"];
m1_4089 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9503-9503"];
m1_4090 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="9505-9505"];
m1_4091 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9503-9503"];
m1_2100 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="4720-4720"];
m1_2101 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonSerializerTest.cs", label="_innerDictionary.Add(key, value)", span="4722-4722"];
m1_2102 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="4720-4720"];
m1_608 [cluster="System.Func<TResult>.Invoke()", file="JsonSerializerTest.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m1_835 [cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="JsonSerializerTest.cs", label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0"];
m1_845 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", span="1762-1762"];
m1_846 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="JsonSerializerTest.cs", label="return _name + '' '' + _number;", span="1764-1764"];
m1_847 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", span="1762-1762"];
m1_2140 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m1_1913 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="4089-4089"];
m1_1914 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Foo f = new Foo()", span="4091-4091"];
m1_1915 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="f.Bars.Add(new Bar { Id = 0 })", span="4092-4092"];
m1_1916 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="f.Bars.Add(new Bar { Id = 1 })", span="4093-4093"];
m1_1917 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="f.Bars.Add(new Bar { Id = 2 })", span="4094-4094"];
m1_1918 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(f, Formatting.Indented)", span="4096-4096"];
m1_1919 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Bars'''': [\r\n    0,\r\n    1,\r\n    2\r\n  ]\r\n}'', json)", span="4097-4103"];
m1_1920 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Foo newFoo = JsonConvert.DeserializeObject<Foo>(json)", span="4105-4105"];
m1_1921 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, newFoo.Bars.Count)", span="4106-4106"];
m1_1922 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, newFoo.Bars[0].Id)", span="4107-4107"];
m1_1923 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, newFoo.Bars[1].Id)", span="4108-4108"];
m1_1924 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, newFoo.Bars[2].Id)", span="4109-4109"];
m1_1925 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="4089-4089"];
m1_2193 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4853-4853"];
m1_2194 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''stringValue'', _stringValue)", span="4855-4855"];
m1_2195 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''intValue'', _intValue)", span="4856-4856"];
m1_2196 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''dateTimeOffsetValue'', _dateTimeOffsetValue)", span="4857-4857"];
m1_2197 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''personValue'', _personValue)", span="4858-4858"];
m1_2198 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''nullPersonValue'', _nullPersonValue)", span="4859-4859"];
m1_2199 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''nullableInt'', null)", span="4860-4860"];
m1_2200 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''booleanValue'', _booleanValue)", span="4862-4862"];
m1_2201 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''byteValue'', _byteValue)", span="4863-4863"];
m1_2202 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''charValue'', _charValue)", span="4864-4864"];
m1_2203 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''dateTimeValue'', _dateTimeValue)", span="4865-4865"];
m1_2204 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''decimalValue'', _decimalValue)", span="4866-4866"];
m1_2205 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''shortValue'', _shortValue)", span="4867-4867"];
m1_2206 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''longValue'', _longValue)", span="4868-4868"];
m1_2207 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''sbyteValue'', _sbyteValue)", span="4869-4869"];
m1_2208 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''floatValue'', _floatValue)", span="4870-4870"];
m1_2209 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''ushortValue'', _ushortValue)", span="4871-4871"];
m1_2210 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''uintValue'', _uintValue)", span="4872-4872"];
m1_2211 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''ulongValue'', _ulongValue)", span="4873-4873"];
m1_2212 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4853-4853"];
m1_2921 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", span="6718-6718"];
m1_2922 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonSerializerTest.cs", label="Exceptions = new List<Exception>()", span="6720-6720"];
m1_2923 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", span="6718-6718"];
m1_1419 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="2980-2980"];
m1_1420 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="string boolRef = typeof(bool).AssemblyQualifiedName", span="2982-2982"];
m1_1421 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="TypeClass typeClass = new TypeClass { TypeProperty = typeof(bool) }", span="2983-2983"];
m1_1423 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + boolRef + @''''''}'', json)", span="2986-2986"];
m1_1422 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(typeClass)", span="2985-2985"];
m1_1424 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="TypeClass typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="2988-2988"];
m1_1425 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(bool), typeClass2.TypeProperty)", span="2989-2989"];
m1_1426 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="string jsonSerializerTestRef = typeof(JsonSerializerTest).AssemblyQualifiedName", span="2991-2991"];
m1_1427 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="typeClass = new TypeClass { TypeProperty = typeof(JsonSerializerTest) }", span="2992-2992"];
m1_1429 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + jsonSerializerTestRef + @''''''}'', json)", span="2995-2995"];
m1_1428 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(typeClass)", span="2994-2994"];
m1_1430 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="2997-2997"];
m1_1431 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(JsonSerializerTest), typeClass2.TypeProperty)", span="2998-2998"];
m1_1432 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="2980-2980"];
m1_3356 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="125-125"];
m1_76 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_EmptyString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_EmptyString()", span="281-281"];
m1_77 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_EmptyString()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IList<bool>>(@''['']''),\r\n                @''Error converting value {null} to type 'System.Boolean'. Path '[0]', line 1, position 3.'')", span="283-285"];
m1_78 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_EmptyString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_EmptyString()", span="281-281"];
m1_3934 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", span="9119-9119"];
m1_3935 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="9121-9121"];
m1_3936 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", span="9119-9119"];
m1_3673 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="8448-8448"];
m1_3674 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="CultureInfo culture = new CultureInfo(''en-NZ'')", span="8450-8450"];
m1_3675 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="culture.DateTimeFormat.AMDesignator = ''a.m.''", span="8451-8451"];
m1_3676 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="culture.DateTimeFormat.PMDesignator = ''p.m.''", span="8452-8452"];
m1_3680 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                DateFormatString = ''yyyy tt'',\r\n                Culture = culture,\r\n                Formatting = Formatting.Indented\r\n            })", span="8463-8468"];
m1_3677 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="8454-8458"];
m1_3678 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter()", span="8460-8460"];
m1_3681 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="serializer.Serialize(jsonWriter, dates)", span="8469-8469"];
m1_3679 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="8461-8461"];
m1_3685 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="string json = sw.ToString()", span="8475-8475"];
m1_3682 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="Assert.IsNull(jsonWriter.DateFormatString)", span="8471-8471"];
m1_3683 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(CultureInfo.InvariantCulture, jsonWriter.Culture)", span="8472-8472"];
m1_3684 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(Formatting.None, jsonWriter.Formatting)", span="8473-8473"];
m1_3686 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="8477-8480"];
m1_3687 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="8448-8448"];
m1_1783 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="3847-3847"];
m1_1784 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonSerializerTest.cs", label="string json = @''[]''", span="3849-3849"];
m1_1785 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Dictionary<string, string>>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Collections.Generic.Dictionary`2[System.String,System.String]' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3851-3853"];
m1_1786 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="3847-3847"];
m1_134 [cluster="System.Collections.Generic.List<T>.List()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_536 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.DefaultSerializationBinder()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.DefaultSerializationBinder()", span="36-36"];
m1_2847 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="6484-6484"];
m1_2848 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="NonDefaultConstructorWithReadOnlyDictionaryProperty c1 = new NonDefaultConstructorWithReadOnlyDictionaryProperty(''blah'')", span="6486-6486"];
m1_2849 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="c1.Categories.Add(''one'', 1)", span="6487-6487"];
m1_2850 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="c1.Categories.Add(''two'', 2)", span="6488-6488"];
m1_2851 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6490-6490"];
m1_2854 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Title, c2.Title)", span="6500-6500"];
m1_2855 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="6501-6501"];
m1_2852 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2\r\n  }\r\n}'', json)", span="6491-6497"];
m1_2853 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="NonDefaultConstructorWithReadOnlyDictionaryProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyDictionaryProperty>(json)", span="6499-6499"];
m1_2856 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c2.Categories[''one''])", span="6502-6502"];
m1_2857 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, c2.Categories[''two''])", span="6503-6503"];
m1_2858 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="6484-6484"];
m1_543 [cluster="Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", span="29-29"];
m1_17 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="JsonSerializerTest.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m1_295 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.IgnoredPropertiesContractResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.IgnoredPropertiesContractResolver()", span="665-665"];
m1_2287 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="5127-5127"];
m1_2288 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="AA myA = JsonConvert.DeserializeObject<AA>(\r\n                @''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_field2'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2\r\n}'')", span="5129-5139"];
m1_2289 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5141-5141"];
m1_2290 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5142-5142"];
m1_2291 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5143-5143"];
m1_2292 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5144-5144"];
m1_2293 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5145-5145"];
m1_2294 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5146-5146"];
m1_2295 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5147-5147"];
m1_2296 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5148-5148"];
m1_2297 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="BB myB = JsonConvert.DeserializeObject<BB>(\r\n                @''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''AA_field2'''': 3,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2,\r\n  ''''BB_property1'''': 3,\r\n  ''''BB_property2'''': 3,\r\n  ''''BB_property3'''': 3,\r\n  ''''BB_property4'''': 3,\r\n  ''''BB_property5'''': 3,\r\n  ''''BB_property6'''': 3,\r\n  ''''BB_property7'''': 3,\r\n  ''''BB_property8'''': 3\r\n}'')", span="5150-5170"];
m1_2298 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5172-5172"];
m1_2299 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5173-5173"];
m1_2300 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5174-5174"];
m1_2301 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5175-5175"];
m1_2302 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5176-5176"];
m1_2303 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5177-5177"];
m1_2304 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5178-5178"];
m1_2305 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5179-5179"];
m1_2306 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, myB.BB_field1)", span="5181-5181"];
m1_2307 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, myB.BB_field2)", span="5182-5182"];
m1_2308 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, myB.BB_property1)", span="5183-5183"];
m1_2309 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, myB.BB_property2)", span="5184-5184"];
m1_2310 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property3'', BindingFlags.Instance | BindingFlags.Public), myB))", span="5185-5185"];
m1_2311 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5186-5186"];
m1_2312 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, myB.BB_property5)", span="5187-5187"];
m1_2313 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property6'', BindingFlags.Instance | BindingFlags.Public), myB))", span="5188-5188"];
m1_2314 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property7'', BindingFlags.Instance | BindingFlags.Public), myB))", span="5189-5189"];
m1_2315 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property8'', BindingFlags.Instance | BindingFlags.Public), myB))", span="5190-5190"];
m1_2316 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="5127-5127"];
m1_2652 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", span="5935-5935"];
m1_2653 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", span="5935-5935"];
m1_4198 [cluster="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string)", span="9815-9815"];
m1_4199 [cluster="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string)", file="JsonSerializerTest.cs", label="Value = value", span="9817-9817"];
m1_4200 [cluster="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string)", file="JsonSerializerTest.cs", label="Constructor = ''Public Parameterized 1''", span="9818-9818"];
m1_4201 [cluster="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string)", span="9815-9815"];
m1_741 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", span="1600-1600"];
m1_742 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonSerializerTest.cs", label="object o = JsonConvert.DeserializeObject(''100000000000000000000000000000000000000.0'')", span="1602-1602"];
m1_743 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonSerializerTest.cs", label="CustomAssert.IsInstanceOfType(typeof(double), o)", span="1604-1604"];
m1_744 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonSerializerTest.cs", label="Assert.IsTrue(MathUtils.ApproxEquals(1E+38, (double)o))", span="1606-1606"];
m1_745 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", span="1600-1600"];
m1_41 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="540-540"];
m1_3309 [cluster="Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.MetroStringConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.MetroStringConverter()", span="30-30"];
m1_3922 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", span="9099-9099"];
m1_3923 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="JsonSerializerTest.cs", label="return Value;", span="9101-9101"];
m1_3924 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", span="9099-9099"];
m1_183 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoNull.DictionaryWithNoNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoNull.DictionaryWithNoNull()", span="466-466"];
m1_1344 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="34-34"];
m1_1588 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", span="3388-3388"];
m1_1589 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="3390-3390"];
m1_1590 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="o.DefaultValueHandlingIgnoreProperty = ''Default!''", span="3391-3391"];
m1_1591 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="o.DefaultValueHandlingIncludeProperty = ''Default!''", span="3392-3392"];
m1_1592 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="o.DefaultValueHandlingPopulateProperty = ''Default!''", span="3393-3393"];
m1_1593 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="o.DefaultValueHandlingIgnoreAndPopulateProperty = ''Default!''", span="3394-3394"];
m1_1594 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="3396-3396"];
m1_1596 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { NullValueHandling = NullValueHandling.Ignore })", span="3407-3407"];
m1_1595 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''DefaultValueHandlingPopulateProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null,\r\n  ''''ReferenceLoopHandlingErrorProperty'''': null,\r\n  ''''ReferenceLoopHandlingIgnoreProperty'''': null,\r\n  ''''ReferenceLoopHandlingSerializeProperty'''': null\r\n}'', json)", span="3398-3405"];
m1_1597 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''DefaultValueHandlingPopulateProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null\r\n}'', json)", span="3409-3413"];
m1_1598 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", span="3388-3388"];
m1_1180 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", span="2549-2549"];
m1_1181 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="2551-2551"];
m1_1182 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="JsonSerializer s = new JsonSerializer()", span="2553-2553"];
m1_1184 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="ClassWithArray wibble = (ClassWithArray)s.Deserialize(new StringReader(json), typeof(ClassWithArray))", span="2556-2556"];
m1_1183 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="s.ObjectCreationHandling = ObjectCreationHandling.Replace", span="2554-2554"];
m1_1185 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''hello'', wibble.Foo)", span="2558-2558"];
m1_1186 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, wibble.Bar.Count)", span="2560-2560"];
m1_1187 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", span="2549-2549"];
m1_1538 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="3267-3267"];
m1_1539 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''firstName'''': ''''firstName'''',\r\n  ''''FirstName'''': ''''FirstName'''',\r\n  ''''LastName'''': ''''LastName'''',\r\n  ''''lastName'''': ''''lastName'''',\r\n}''", span="3269-3274"];
m1_1540 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="PropertyCase o = JsonConvert.DeserializeObject<PropertyCase>(json)", span="3276-3276"];
m1_1541 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(o)", span="3277-3277"];
m1_1542 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''firstName'', o.firstName)", span="3279-3279"];
m1_1543 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''FirstName'', o.FirstName)", span="3280-3280"];
m1_1544 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''LastName'', o.LastName)", span="3281-3281"];
m1_1545 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''lastName'', o.lastName)", span="3282-3282"];
m1_1546 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="3267-3267"];
m1_2219 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", span="0-0"];
m1_4166 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.CanConvert(System.Type)", span="9691-9691"];
m1_4167 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="return typeof(Encoding).IsAssignableFrom(objectType);", span="9693-9693"];
m1_4168 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.CanConvert(System.Type)", span="9691-9691"];
m1_153 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", span="414-414"];
m1_154 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<FooRequired>(''{Bars:''}''); }, ''Required property 'Bars' expects a value but got null. Path '', line 1, position 9.'')", span="416-416"];
m1_155 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", span="414-414"];
m1_1296 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="551-551"];
m1_3842 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", span="8932-8932"];
m1_3843 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs", label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]''", span="8934-8949"];
m1_3844 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs", label="IList<PersonReference> people = JsonConvert.DeserializeObject<IList<PersonReference>>(json, new JsonSerializerSettings\r\n            {\r\n                ReferenceResolverProvider = () => new IdReferenceResolver(),\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="8951-8956"];
m1_3845 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, people.Count)", span="8958-8958"];
m1_3846 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs", label="PersonReference john = people[0]", span="8960-8960"];
m1_3847 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs", label="PersonReference jane = people[1]", span="8961-8961"];
m1_3848 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs", label="Assert.AreEqual(john, jane.Spouse)", span="8963-8963"];
m1_3849 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs", label="Assert.AreEqual(jane, john.Spouse)", span="8964-8964"];
m1_3850 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", span="8932-8932"];
m1_839 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="JsonSerializerTest.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m1_740 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonReference.PersonReference()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PersonReference.PersonReference()", span="30-30"];
m1_402 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericProperty<T>.ResponseWithNewGenericProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericProperty<T>.ResponseWithNewGenericProperty()", span="1002-1002"];
m1_1102 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m1_1125 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", span="2457-2457"];
m1_1126 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="var anonymous =\r\n                new\r\n                {\r\n                    StringValue = ''I am a string'',\r\n                    IntValue = int.MaxValue,\r\n                    NestedAnonymous = new { NestedValue = byte.MaxValue },\r\n                    NestedArray = new[] { 1, 2 },\r\n                    Product = new Product() { Name = ''TestProduct'' }\r\n                }", span="2459-2467"];
m1_1127 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(anonymous)", span="2469-2469"];
m1_1129 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous)", span="2472-2472"];
m1_1128 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''StringValue'''':''''I am a string'''',''''IntValue'''':2147483647,''''NestedAnonymous'''':{''''NestedValue'''':255},''''NestedArray'''':[1,2],''''Product'''':{''''Name'''':''''TestProduct'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null}}'', json)", span="2470-2470"];
m1_1130 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''I am a string'', anonymous.StringValue)", span="2473-2473"];
m1_1131 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, anonymous.IntValue)", span="2474-2474"];
m1_1132 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(255, anonymous.NestedAnonymous.NestedValue)", span="2475-2475"];
m1_1133 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, anonymous.NestedArray.Length)", span="2476-2476"];
m1_1134 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, anonymous.NestedArray[0])", span="2477-2477"];
m1_1135 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, anonymous.NestedArray[1])", span="2478-2478"];
m1_1136 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''TestProduct'', anonymous.Product.Name)", span="2479-2479"];
m1_1137 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", span="2457-2457"];
m1_2460 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="5513-5513"];
m1_2461 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="string json = @''{''''First'''':''''First'''',''''Second'''':2,''''Ignored'''':{''''Name'''':''''James''''},''''AdditionalContent'''':{''''LOL'''':true}}''", span="5515-5515"];
m1_2462 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="ConstructorCompexIgnoredProperty cc = JsonConvert.DeserializeObject<ConstructorCompexIgnoredProperty>(json)", span="5517-5517"];
m1_2463 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''First'', cc.First)", span="5518-5518"];
m1_2464 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, cc.Second)", span="5519-5519"];
m1_2465 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, cc.Ignored)", span="5520-5520"];
m1_2466 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="5513-5513"];
m1_3550 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", span="8083-8083"];
m1_3551 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="IList<Uri> uris = JsonConvert.DeserializeObject<IList<Uri>>(@''[''''http://localhost/path?query#hash'''']'')", span="8085-8085"];
m1_3552 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, uris.Count)", span="8086-8086"];
m1_3553 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Uri(''http://localhost/path?query#hash''), uris[0])", span="8087-8087"];
m1_3554 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Uri uri = JsonConvert.DeserializeObject<Uri>(@''''''http://localhost/path?query#hash'''''')", span="8089-8089"];
m1_3555 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(uri)", span="8090-8090"];
m1_3556 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Uri i1 = new Uri(''http://localhost/path?query#hash'', UriKind.RelativeOrAbsolute)", span="8092-8092"];
m1_3557 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Uri i2 = new Uri(''http://localhost/path?query#hash'')", span="8093-8093"];
m1_3558 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Assert.AreEqual(i1, i2)", span="8094-8094"];
m1_3559 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="uri = JsonConvert.DeserializeObject<Uri>(@''''''/path?query#hash'''''')", span="8096-8096"];
m1_3560 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(uri)", span="8097-8097"];
m1_3561 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Uri(''/path?query#hash'', UriKind.RelativeOrAbsolute), uri)", span="8098-8098"];
m1_3562 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", span="8083-8083"];
m1_142 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", span="401-401"];
m1_143 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Binding_DisallowNull>(''{requiredProperty:''}''); }, ''Required property 'RequiredProperty' expects a non-null value. Path '', line 1, position 21.'')", span="403-403"];
m1_144 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", span="401-401"];
m1_199 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", span="524-524"];
m1_200 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                 () => JsonConvert.DeserializeObject<IList<object>>(''[1,''),\r\n                 ''Unexpected end when deserializing array. Path '[0]', line 1, position 3.'')", span="526-528"];
m1_201 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IList<int>>(''[1,''),\r\n                ''Unexpected end when deserializing array. Path '[0]', line 1, position 3.'')", span="530-532"];
m1_202 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IList<int>>(''[1''),\r\n                ''Unexpected end when deserializing array. Path '[0]', line 1, position 2.'')", span="534-536"];
m1_203 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1,''),\r\n                ''Unexpected end when deserializing object. Path 'key', line 1, position 9.'')", span="538-540"];
m1_204 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1''),\r\n                ''Unexpected end when deserializing object. Path 'key', line 1, position 8.'')", span="542-544"];
m1_205 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1,''),\r\n                ''Unexpected end when deserializing object. Path 'key', line 1, position 9.'')", span="546-548"];
m1_206 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1''),\r\n                ''Unexpected end when deserializing object. Path 'key', line 1, position 8.'')", span="550-552"];
m1_207 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", span="524-524"];
m1_2915 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", span="6696-6696"];
m1_2916 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs", label="DerivedType d = new DerivedType()", span="6698-6698"];
m1_2917 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(d, Formatting.Indented)", span="6699-6699"];
m1_2918 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''dinosaur'''': null,\r\n  ''''dog'''': null,\r\n  ''''cat'''': null,\r\n  ''''zebra'''': null,\r\n  ''''bird'''': null,\r\n  ''''parrot'''': null,\r\n  ''''albatross'''': null,\r\n  ''''antelope'''': null\r\n}'', json)", span="6701-6710"];
m1_2919 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", span="6696-6696"];
m1_2924 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", span="6726-6726"];
m1_2925 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="ClassWithException classWithException = new ClassWithException()", span="6728-6728"];
m1_2926 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="throw new Exception(''Test Exception'');", span="6731-6731"];
m1_2928 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="classWithException.Exceptions.Add(ex)", span="6735-6735"];
m1_2929 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="string sex = JsonConvert.SerializeObject(classWithException)", span="6737-6737"];
m1_2932 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="sex = JsonConvert.SerializeObject(classWithException, Formatting.Indented)", span="6741-6741"];
m1_2927 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label=Exception, span="6733-6733"];
m1_2930 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="ClassWithException dex = JsonConvert.DeserializeObject<ClassWithException>(sex)", span="6738-6738"];
m1_2931 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dex.Exceptions[0].ToString(), dex.Exceptions[0].ToString())", span="6739-6739"];
m1_2933 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="dex = JsonConvert.DeserializeObject<ClassWithException>(sex)", span="6743-6743"];
m1_2934 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dex.Exceptions[0].ToString(), dex.Exceptions[0].ToString())", span="6744-6744"];
m1_2935 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", span="6726-6726"];
m1_3696 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="JsonSerializerTest.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m1_3501 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", span="190-190"];
m1_2382 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", span="5406-5406"];
m1_2537 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", span="5655-5655"];
m1_294 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesTestClass.IgnoredPropertiesTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesTestClass.IgnoredPropertiesTestClass()", span="650-650"];
m1_60 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="369-369"];
m1_2359 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="5328-5328"];
m1_2360 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="XmlNodeTestObject testObject = new XmlNodeTestObject()", span="5330-5330"];
m1_2361 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="XmlDocument document = new XmlDocument()", span="5331-5331"];
m1_2363 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="testObject.Document = document", span="5333-5333"];
m1_2364 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="5335-5335"];
m1_2368 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testObject.Document.InnerXml, newTestObject.Document.InnerXml)", span="5344-5344"];
m1_2362 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="document.LoadXml(''<root>hehe, root</root>'')", span="5332-5332"];
m1_2365 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  }\r\n}''", span="5336-5340"];
m1_2366 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(expected, json)", span="5341-5341"];
m1_2367 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="XmlNodeTestObject newTestObject = JsonConvert.DeserializeObject<XmlNodeTestObject>(json)", span="5343-5343"];
m1_2369 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="5328-5328"];
m1_2119 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="4745-4745"];
m1_2120 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonSerializerTest.cs", label="return _innerDictionary.GetEnumerator();", span="4747-4747"];
m1_2121 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="4745-4745"];
m1_3478 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", span="7876-7876"];
m1_3479 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonSerializerTest.cs", label="var json = Serialize(obj)", span="7879-7879"];
m1_3480 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonSerializerTest.cs", label="return Deserialize<T>(json);", span="7880-7880"];
m1_3481 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", span="7876-7876"];
m1_2641 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="5915-5915"];
m1_2642 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="VectorParent obj = new VectorParent()", span="5917-5917"];
m1_2643 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="obj.Position = new Vector { X = 1, Y = 2, Z = 3 }", span="5918-5918"];
m1_2644 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="string str = JsonConvert.SerializeObject(obj)", span="5920-5920"];
m1_2645 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="obj = JsonConvert.DeserializeObject<VectorParent>(str)", span="5922-5922"];
m1_2646 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, obj.Position.X)", span="5924-5924"];
m1_2647 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, obj.Position.Y)", span="5925-5925"];
m1_2648 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, obj.Position.Z)", span="5926-5926"];
m1_2649 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="5915-5915"];
m1_1652 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="3559-3559"];
m1_1653 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="DataContractPrivateMembers c = new DataContractPrivateMembers(''Jeff'', 26, 10, ''Dr'')", span="3561-3561"];
m1_1654 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="c.NotIncluded = ''Hi''", span="3562-3562"];
m1_1655 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="3563-3563"];
m1_1656 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''_name'''': ''''Jeff'''',\r\n  ''''_age'''': 26,\r\n  ''''Rank'''': 10,\r\n  ''''JsonTitle'''': ''''Dr''''\r\n}'', json)", span="3565-3570"];
m1_1657 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="DataContractPrivateMembers cc = JsonConvert.DeserializeObject<DataContractPrivateMembers>(json)", span="3572-3572"];
m1_1658 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''_name: Jeff, _age: 26, Rank: 10, JsonTitle: Dr'', cc.ToString())", span="3573-3573"];
m1_1659 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="3559-3559"];
m1_3220 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", span="7342-7342"];
m1_3221 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<double>(''''); }, ''No JSON content found and type 'System.Double' is not nullable. Path '', line 0, position 0.'')", span="7344-7344"];
m1_3222 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", span="7342-7342"];
m1_1246 [cluster="System.Guid.Guid(string)", file="JsonSerializerTest.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m1_3272 [cluster="System.DateTime.ToLocalTime()", file="JsonSerializerTest.cs", label="Entry System.DateTime.ToLocalTime()", span="0-0"];
m1_2889 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", span="6601-6601"];
m1_2890 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs", label="_privateString = privateString", span="6603-6603"];
m1_2891 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs", label="_readonlyString = readonlyString", span="6604-6604"];
m1_2892 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs", label="_internalString = internalString", span="6605-6605"];
m1_2893 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", span="6601-6601"];
m1_2798 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContract.ChildDataContract()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContract.ChildDataContract()", span="6306-6306"];
m1_2043 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", span="4511-4511"];
m1_2044 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonSerializerTest.cs", label="string jsonIsoText =\r\n                @''{''''DateTimeOffsetValue'''':''''2012-02-25T19:55:50.6095676+00:00'''', ''''DateTimeValue'''':''''2012-02-25T19:55:50.6095676+00:00''''}''", span="4513-4514"];
m1_2045 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonSerializerTest.cs", label="DateTimeOffsetWrapper cISO = JsonConvert.DeserializeObject<DateTimeOffsetWrapper>(jsonIsoText, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.DateTimeOffset,\r\n                Converters =\r\n                {\r\n                    new IsoDateTimeConverter()\r\n                }\r\n            })", span="4516-4523"];
m1_2046 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonSerializerTest.cs", label="DateTimeOffsetWrapper c = JsonConvert.DeserializeObject<DateTimeOffsetWrapper>(jsonIsoText, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.DateTimeOffset\r\n            })", span="4524-4527"];
m1_2047 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c.DateTimeOffsetValue, cISO.DateTimeOffsetValue)", span="4529-4529"];
m1_2048 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", span="4511-4511"];
m1_3644 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", span="8351-8351"];
m1_3645 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="var content = @''{''''startDateTime'''':''''2012-07-19T14:30:00+09:30''''}''", span="8353-8353"];
m1_3646 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="var jsonSerializerSettings = new JsonSerializerSettings() { DateFormatHandling = DateFormatHandling.IsoDateFormat, DateParseHandling = DateParseHandling.DateTimeOffset, DateTimeZoneHandling = DateTimeZoneHandling.RoundtripKind }", span="8355-8355"];
m1_3647 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="var obj = (JObject)JsonConvert.DeserializeObject(content, jsonSerializerSettings)", span="8357-8357"];
m1_3648 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="var dateTimeOffset = (DateTimeOffset)((JValue)obj[''startDateTime'']).Value", span="8359-8359"];
m1_3649 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TimeSpan.FromHours(9.5), dateTimeOffset.Offset)", span="8361-8361"];
m1_3650 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''07/19/2012 14:30:00 +09:30'', dateTimeOffset.ToString(CultureInfo.InvariantCulture))", span="8362-8362"];
m1_3651 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", span="8351-8351"];
m1_4207 [cluster="Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", span="9867-9867"];
m1_3028 [cluster="Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", span="9856-9856"];
m1_4208 [cluster="Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", file="JsonSerializerTest.cs", label="z = 3", span="9869-9869"];
m1_4209 [cluster="Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", span="9867-9867"];
m1_1225 [cluster="System.Collections.Generic.Stack<T>.Push(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0"];
m1_853 [cluster="System.Convert.ToInt32(string)", file="JsonSerializerTest.cs", label="Entry System.Convert.ToInt32(string)", span="0-0"];
m1_1280 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="2737-2737"];
m1_1281 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="2739-2739"];
m1_1282 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1)", span="2741-2741"];
m1_1283 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="2742-2742"];
m1_1284 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json)", span="2744-2744"];
m1_1285 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="2746-2746"];
m1_1286 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="2737-2737"];
m1_277 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", span="667-667"];
m1_278 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonSerializerTest.cs", label="type == typeof(Version)", span="669-669"];
m1_280 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonSerializerTest.cs", label="return base.ResolveContract(type);", span="674-674"];
m1_279 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonSerializerTest.cs", label="throw new Exception(''Error!'');", span="671-671"];
m1_281 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", span="667-667"];
m1_22 [cluster="Unk.IsTrue", file="JsonSerializerTest.cs", label="Entry Unk.IsTrue", span=""];
m1_935 [cluster="Newtonsoft.Json.Tests.TestObjects.Store.Store()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Store.Store()", span="49-49"];
m1_1600 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", span="3417-3417"];
m1_1601 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="string json = ''{}''", span="3419-3419"];
m1_1602 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="JsonPropertyWithHandlingValues o = JsonConvert.DeserializeObject<JsonPropertyWithHandlingValues>(json)", span="3421-3421"];
m1_1603 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Default!'', o.DefaultValueHandlingIgnoreAndPopulateProperty)", span="3422-3422"];
m1_1604 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Default!'', o.DefaultValueHandlingPopulateProperty)", span="3423-3423"];
m1_1605 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, o.DefaultValueHandlingIgnoreProperty)", span="3424-3424"];
m1_1606 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, o.DefaultValueHandlingIncludeProperty)", span="3425-3425"];
m1_1607 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", span="3417-3417"];
m1_57 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_Null()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_Null()", span="257-257"];
m1_58 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_Null()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IList<bool>>(@''[null]''),\r\n                ''Error converting value {null} to type 'System.Boolean'. Path '[0]', line 1, position 5.'')", span="259-261"];
m1_59 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_Null()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_Null()", span="257-257"];
m1_3273 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", file="JsonSerializerTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m1_3294 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonWithPrivateConstructor.CreatePerson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PersonWithPrivateConstructor.CreatePerson()", span="33-33"];
m1_3482 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", span="7883-7883"];
m1_3484 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs", label="var stringWriter = new StringWriter()", span="7886-7886"];
m1_3487 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs", label="serializer.Serialize(stringWriter, obj)", span="7892-7892"];
m1_3485 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs", label="var serializer = new JsonSerializer()", span="7887-7887"];
m1_3488 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs", label="return stringWriter.ToString();", span="7894-7894"];
m1_3486 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs", label="serializer.ContractResolver = new DefaultContractResolver\r\n            {\r\n                IgnoreSerializableAttribute = false\r\n            }", span="7888-7891"];
m1_3489 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", span="7883-7883"];
m1_2704 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Response.Response()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Response.Response()", span="6062-6062"];
m1_3161 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", span="7215-7215"];
m1_3162 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="Item expected = new Item()\r\n            {\r\n                SourceTypeID = new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''),\r\n                BrokerID = new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''),\r\n                Latitude = 33.657145,\r\n                Longitude = -117.766684,\r\n                TimeStamp = new DateTime(2000, 3, 1, 23, 59, 59, DateTimeKind.Utc),\r\n                Payload = new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }\r\n            }", span="7217-7225"];
m1_3163 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="string jsonString = JsonConvert.SerializeObject(expected, Formatting.Indented)", span="7227-7227"];
m1_3164 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", color=red, community=0, file="JsonSerializerTest.cs", label="-1: StringAssert.AreEqual(@''{\r\n  ''''SourceTypeID'''': ''''d8220a4b-75b1-4b7a-8112-b7bdae956a45'''',\r\n  ''''BrokerID'''': ''''951663c4-924e-4c86-a57a-7ed737501dbd'''',\r\n  ''''Latitude'''': 33.657145,\r\n  ''''Longitude'''': -117.766684,\r\n  ''''TimeStamp'''': ''''2000-03-01T23:59:59Z'''',\r\n  ''''Payload'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''AAECAwQFBgcICQ==''''\r\n  }\r\n}'', jsonString)", span="7229-7239"];
m1_3165 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="Item actual = JsonConvert.DeserializeObject<Item>(jsonString)", span="7241-7241"];
m1_3166 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), actual.SourceTypeID)", span="7243-7243"];
m1_3167 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''), actual.BrokerID)", span="7244-7244"];
m1_3168 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="byte[] bytes = (byte[])actual.Payload", span="7245-7245"];
m1_3169 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEquivalent((new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }).ToList(), bytes.ToList())", span="7246-7246"];
m1_3170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", span="7215-7215"];
m1_394 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", span="1034-1034"];
m1_395 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs", label="var input = new ResponseWithNewGenericProperty<int>()\r\n            {\r\n                Message = ''Trying out integer as type parameter'',\r\n                Data = 25,\r\n                Result = ''This should be fine''\r\n            }", span="1036-1041"];
m1_396 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(input)", span="1043-1043"];
m1_398 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Data, deserialized.Data)", span="1046-1046"];
m1_399 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Message, deserialized.Message)", span="1047-1047"];
m1_400 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Result, deserialized.Result)", span="1048-1048"];
m1_397 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs", label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericProperty<int>>(json)", span="1044-1044"];
m1_401 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", span="1034-1034"];
m1_3517 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", span="8010-8010"];
m1_3518 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="string json = ''{one:1}{}''", span="8012-8012"];
m1_3519 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="8014-8014"];
m1_3521 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="IDictionary<string, int> o = s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="8016-8016"];
m1_3526 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json))); }, ''Additional text encountered after finished reading JSON content: {. Path '', line 1, position 7.'')", span="8023-8023"];
m1_3520 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="JsonSerializer s = JsonSerializer.Create(settings)", span="8015-8015"];
m1_3524 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="settings.CheckAdditionalContent = true", span="8021-8021"];
m1_3525 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="s = JsonSerializer.Create(settings)", span="8022-8022"];
m1_3522 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(o)", span="8018-8018"];
m1_3523 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, o[''one''])", span="8019-8019"];
m1_3527 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", span="8010-8010"];
m1_2277 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="5094-5094"];
m1_2278 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="AA myA = new AA(2)", span="5096-5096"];
m1_2279 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(myA, Formatting.Indented)", span="5097-5097"];
m1_2280 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2\r\n}'', json)", span="5098-5104"];
m1_2281 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="BB myB = new BB(3, 4)", span="5106-5106"];
m1_2282 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(myB, Formatting.Indented)", span="5107-5107"];
m1_2283 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''BB_property1'''': 4,\r\n  ''''BB_property2'''': 4,\r\n  ''''BB_property3'''': 4,\r\n  ''''BB_property4'''': 4,\r\n  ''''BB_property5'''': 4,\r\n  ''''BB_property7'''': 4,\r\n  ''''AA_property1'''': 3,\r\n  ''''AA_property2'''': 3,\r\n  ''''AA_property3'''': 3,\r\n  ''''AA_property4'''': 3\r\n}'', json)", span="5108-5122"];
m1_2284 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="5094-5094"];
m1_3790 [cluster="Newtonsoft.Json.Tests.TestObjects.AnswerFilterModel.AnswerFilterModel()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.AnswerFilterModel.AnswerFilterModel()", span="46-46"];
m1_3916 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", span="9089-9089"];
m1_3917 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="9091-9091"];
m1_3918 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", span="9089-9089"];
m1_998 [cluster="object.ToString()", file="JsonSerializerTest.cs", label="Entry object.ToString()", span="0-0"];
m1_4177 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9707-9707"];
m1_4178 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="9709-9709"];
m1_4179 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9707-9707"];
m1_789 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooBar1.FooBar1()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooBar1.FooBar1()", span="1665-1665"];
m1_2859 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m1_2694 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="6050-6050"];
m1_2695 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonSerializerTest.cs", label="return JsonConvert.DeserializeObject<NullableStructPropertyClass>(\r\n                serStr,\r\n                new JsonSerializerSettings\r\n                {\r\n                    NullValueHandling = NullValueHandling.Ignore,\r\n                    MissingMemberHandling = MissingMemberHandling.Ignore\r\n                });", span="6052-6058"];
m1_2696 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="6050-6050"];
m1_3232 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", span="7354-7354"];
m1_3233 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<int>(''''); }, ''No JSON content found and type 'System.Int32' is not nullable. Path '', line 0, position 0.'')", span="7356-7356"];
m1_3234 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", span="7354-7354"];
m1_704 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object, System.Type)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object, System.Type)", span="0-0"];
m1_1493 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="3133-3133"];
m1_1494 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''name'''': ''''1600 Amphitheatre Parkway, Mountain View, CA, USA'''',\r\n  ''''Status'''': {\r\n    ''''code'''': 200,\r\n    ''''request'''': ''''geocode''''\r\n  },\r\n  ''''Placemark'''': [\r\n    {\r\n      ''''address'''': ''''1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA'''',\r\n      ''''AddressDetails'''': {\r\n        ''''Country'''': {\r\n          ''''CountryNameCode'''': ''''US'''',\r\n          ''''AdministrativeArea'''': {\r\n            ''''AdministrativeAreaName'''': ''''CA'''',\r\n            ''''SubAdministrativeArea'''': {\r\n              ''''SubAdministrativeAreaName'''': ''''Santa Clara'''',\r\n              ''''Locality'''': {\r\n                ''''LocalityName'''': ''''Mountain View'''',\r\n                ''''Thoroughfare'''': {\r\n                  ''''ThoroughfareName'''': ''''1600 Amphitheatre Pkwy''''\r\n                },\r\n                ''''PostalCode'''': {\r\n                  ''''PostalCodeNumber'''': ''''94043''''\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        ''''Accuracy'''': 8\r\n      },\r\n      ''''Point'''': {\r\n        ''''coordinates'''': [-122.083739, 37.423021, 0]\r\n      }\r\n    }\r\n  ]\r\n}''", span="3135-3170"];
m1_1495 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs", label="GoogleMapGeocoderStructure jsonGoogleMapGeocoder = JsonConvert.DeserializeObject<GoogleMapGeocoderStructure>(json)", span="3172-3172"];
m1_1496 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="3133-3133"];
m1_2860 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", span="6526-6526"];
m1_2861 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="6528-6528"];
m1_2862 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", span="6526-6526"];
m1_3815 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", span="8826-8826"];
m1_3816 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs", label="PersonReference john = new PersonReference\r\n            {\r\n                Id = new Guid(''0B64FFDF-D155-44AD-9689-58D9ADB137F3''),\r\n                Name = ''John Smith''\r\n            }", span="8828-8832"];
m1_3817 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs", label="PersonReference jane = new PersonReference\r\n            {\r\n                Id = new Guid(''AE3C399C-058D-431D-91B0-A36C266441B9''),\r\n                Name = ''Jane Smith''\r\n            }", span="8834-8838"];
m1_3818 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs", label="john.Spouse = jane", span="8840-8840"];
m1_3819 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs", label="jane.Spouse = john", span="8841-8841"];
m1_3820 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs", label="IList<PersonReference> people = new List<PersonReference>\r\n            {\r\n                john,\r\n                jane\r\n            }", span="8843-8847"];
m1_3821 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(people, new JsonSerializerSettings\r\n            {\r\n#pragma warning disable 618\r\n                ReferenceResolver = null,\r\n#pragma warning restore 618\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="8849-8856"];
m1_3822 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''1''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n]'', json)", span="8858-8873"];
m1_3823 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", span="8826-8826"];
m1_1979 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="4289-4289"];
m1_1980 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="ExistingValueClass d = JsonConvert.DeserializeObject<ExistingValueClass>(@''{'Dictionary':{appended:'appended',existing:'new'}}'')", span="4291-4291"];
m1_1981 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(d)", span="4293-4293"];
m1_1982 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(d.Dictionary)", span="4294-4294"];
m1_1983 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(Dictionary<string, string>), d.Dictionary.GetType())", span="4295-4295"];
m1_1984 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(List<string>), d.List.GetType())", span="4296-4296"];
m1_1985 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, d.Dictionary.Count)", span="4297-4297"];
m1_1986 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''new'', d.Dictionary[''existing''])", span="4298-4298"];
m1_1987 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''appended'', d.Dictionary[''appended''])", span="4299-4299"];
m1_1988 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, d.List.Count)", span="4300-4300"];
m1_1989 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''existing'', d.List[0])", span="4301-4301"];
m1_1990 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="4289-4289"];
m1_2224 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", span="0-0"];
m1_962 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m1_446 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", span="1126-1126"];
m1_447 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="string json = @''/* Test */\r\n            {\r\n                /*Test*/''''A'''':/* Test */true/* Test */,\r\n                /* Test */''''B'''':/* Test */false/* Test */,\r\n                /* Test */''''C'''':/* Test */[\r\n                    /* Test */\r\n                    1/* Test */\r\n                ]/* Test */\r\n            }\r\n            /* Test */''", span="1128-1137"];
m1_448 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="JObject o = (JObject)JsonConvert.DeserializeObject(json)", span="1138-1138"];
m1_454 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(JToken.DeepEquals(o, JObject.Parse(json)))", span="1145-1145"];
m1_449 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, o.Count)", span="1139-1139"];
m1_450 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, (bool)o[''A''])", span="1140-1140"];
m1_451 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(false, (bool)o[''B''])", span="1141-1141"];
m1_452 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, o[''C''].Count())", span="1142-1142"];
m1_453 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, (int)o[''C''][0])", span="1143-1143"];
m1_455 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="json = @''{/* Test */}''", span="1147-1147"];
m1_456 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="o = (JObject)JsonConvert.DeserializeObject(json)", span="1148-1148"];
m1_458 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(JToken.DeepEquals(o, JObject.Parse(json)))", span="1150-1150"];
m1_457 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, o.Count)", span="1149-1149"];
m1_459 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="json = @''{''''A'''': true/* Test */}''", span="1152-1152"];
m1_460 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="o = (JObject)JsonConvert.DeserializeObject(json)", span="1153-1153"];
m1_463 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(JToken.DeepEquals(o, JObject.Parse(json)))", span="1156-1156"];
m1_461 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, o.Count)", span="1154-1154"];
m1_462 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, (bool)o[''A''])", span="1155-1155"];
m1_464 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", span="1126-1126"];
m1_1811 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", span="3893-3893"];
m1_1812 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonSerializerTest.cs", label="string json = @''[]''", span="3895-3895"];
m1_1813 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<InvalidCastException>(\r\n                () => { JsonConvert.DeserializeObject<JObject>(json); },\r\n                new[]\r\n                {\r\n                    ''Unable to cast object of type 'Newtonsoft.Json.Linq.JArray' to type 'Newtonsoft.Json.Linq.JObject'.'',\r\n                    ''Cannot cast from source type to destination type.'' // mono\r\n                })", span="3897-3903"];
m1_1814 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", span="3893-3893"];
m1_2705 [cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="105-105"];
m1_391 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse(string)", span="1027-1027"];
m1_392 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse(string)", file="JsonSerializerTest.cs", label="Message = message", span="1029-1029"];
m1_393 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse(string)", span="1027-1027"];
m1_3352 [cluster="Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", span="65-65"];
m1_938 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", span="2045-2045"];
m1_939 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Product product = new Product()", span="2047-2047"];
m1_940 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="product.Name = ''Apple''", span="2049-2049"];
m1_941 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="product.ExpiryDate = new DateTime(2008, 12, 28)", span="2050-2050"];
m1_942 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="product.Price = 3.99M", span="2051-2051"];
m1_943 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="product.Sizes = new string[] { ''Small'', ''Medium'', ''Large'' }", span="2052-2052"];
m1_944 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="string output = JsonConvert.SerializeObject(product)", span="2054-2054"];
m1_945 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(output, typeof(Product))", span="2066-2066"];
m1_946 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="2068-2068"];
m1_947 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2008, 12, 28), deserializedProduct.ExpiryDate)", span="2069-2069"];
m1_948 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3.99m, deserializedProduct.Price)", span="2070-2070"];
m1_949 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="2071-2071"];
m1_950 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="2072-2072"];
m1_951 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="2073-2073"];
m1_952 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", span="2045-2045"];
m1_3889 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="9043-9043"];
m1_3890 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="conversionType == typeof(object)", span="9045-9045"];
m1_3892 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="conversionType == typeof(int)", span="9049-9049"];
m1_3894 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="conversionType == typeof(long)", span="9053-9053"];
m1_3896 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="conversionType == typeof(string)", span="9057-9057"];
m1_3891 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="return this;", span="9047-9047"];
m1_3893 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="return (int)Value;", span="9051-9051"];
m1_3895 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="return (long)Value;", span="9055-9055"];
m1_3897 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="return Value.ToString(CultureInfo.InvariantCulture);", span="9059-9059"];
m1_3898 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="9061-9061"];
m1_3899 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="9043-9043"];
m1_2585 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="5811-5811"];
m1_2586 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="dynamic expando = new ExpandoObject()", span="5813-5813"];
m1_2587 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="expando.Int = 1", span="5814-5814"];
m1_2588 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="expando.Decimal = 99.9d", span="5815-5815"];
m1_2589 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="expando.Complex = new ExpandoObject()", span="5816-5816"];
m1_2590 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="expando.Complex.String = ''I am a string''", span="5817-5817"];
m1_2591 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="expando.Complex.DateTime = new DateTime(2000, 12, 20, 18, 55, 0, DateTimeKind.Utc)", span="5818-5818"];
m1_2592 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(expando, Formatting.Indented)", span="5820-5820"];
m1_2596 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual((long)expando.Int, newExpando[''Int''])", span="5833-5833"];
m1_2598 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expando.Decimal, newExpando[''Decimal''])", span="5836-5836"];
m1_2602 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expando.Complex.String, o[''String''])", span="5842-5842"];
m1_2604 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expando.Complex.DateTime, o[''DateTime''])", span="5845-5845"];
m1_2593 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Int'''': 1,\r\n  ''''Decimal'''': 99.9,\r\n  ''''Complex'''': {\r\n    ''''String'''': ''''I am a string'''',\r\n    ''''DateTime'''': ''''2000-12-20T18:55:00Z''''\r\n  }\r\n}'', json)", span="5821-5828"];
m1_2594 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="IDictionary<string, object> newExpando = JsonConvert.DeserializeObject<ExpandoObject>(json)", span="5830-5830"];
m1_2595 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="CustomAssert.IsInstanceOfType(typeof(long), newExpando[''Int''])", span="5832-5832"];
m1_2597 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="CustomAssert.IsInstanceOfType(typeof(double), newExpando[''Decimal''])", span="5835-5835"];
m1_2599 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="CustomAssert.IsInstanceOfType(typeof(ExpandoObject), newExpando[''Complex''])", span="5838-5838"];
m1_2600 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="IDictionary<string, object> o = (ExpandoObject)newExpando[''Complex'']", span="5839-5839"];
m1_2601 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="CustomAssert.IsInstanceOfType(typeof(string), o[''String''])", span="5841-5841"];
m1_2603 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="CustomAssert.IsInstanceOfType(typeof(DateTime), o[''DateTime''])", span="5844-5844"];
m1_2605 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="5811-5811"];
m1_691 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1499-1499"];
m1_692 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_serializationInfo = info", span="1501-1501"];
m1_693 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1499-1499"];
m1_3904 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", span="9069-9069"];
m1_3905 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="9071-9071"];
m1_3906 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", span="9069-9069"];
m1_1391 [cluster="Newtonsoft.Json.Linq.JRaw.JRaw(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JRaw.JRaw(object)", span="48-48"];
m1_1854 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="3957-3957"];
m1_1855 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs", label="string json = @''{''''Name'''':''''''''}''", span="3959-3959"];
m1_1856 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs", label="Person p = JsonConvert.DeserializeObject<Person>(json)", span="3961-3961"];
m1_1857 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs", label="Assert.AreEqual('''', p.Name)", span="3962-3962"];
m1_1858 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="3957-3957"];
m1_3516 [cluster="Newtonsoft.Json.Tests.TestObjects.PocoDataContractSerializationAttributesClass.PocoDataContractSerializationAttributesClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PocoDataContractSerializationAttributesClass.PocoDataContractSerializationAttributesClass()", span="30-30"];
m1_3952 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.ConvertibleId()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.ConvertibleId()", span="9034-9034"];
m1_2738 [cluster="Newtonsoft.Json.Tests.Serialization.EnumerableClass.EnumerableClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.EnumerableClass.EnumerableClass()", span="9830-9830"];
m1_191 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", span="495-495"];
m1_192 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonSerializerTest.cs", label="var person = new\r\n            {\r\n                Name = ''James'',\r\n                Age = 1,\r\n                RoleNames = new Dictionary<string, bool>\r\n                {\r\n                    { ''IsAdmin'', true },\r\n                    { ''IsModerator'', false }\r\n                }\r\n            }", span="497-506"];
m1_193 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(person, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new DictionaryKeyContractResolver()\r\n            })", span="508-511"];
m1_194 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''NAME'''': ''''James'''',\r\n  ''''AGE'''': 1,\r\n  ''''ROLENAMES'''': {\r\n    ''''IsAdmin'''': true,\r\n    ''''IsModerator'''': false\r\n  }\r\n}'', json)", span="513-520"];
m1_195 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", span="495-495"];
m1_282 [cluster="System.Exception.Exception(string)", file="JsonSerializerTest.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m1_3538 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", span="8065-8065"];
m1_3539 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonException>(() =>\r\n            {\r\n                string json = ''[{},1]'';\r\n\r\n                JsonSerializer serializer = new JsonSerializer();\r\n                serializer.CheckAdditionalContent = true;\r\n\r\n                var reader = new JsonTextReader(new StringReader(json));\r\n                reader.Read();\r\n                reader.Read();\r\n\r\n                serializer.Deserialize(reader, typeof(MyType));\r\n            }, ''Additional text found in JSON string after finishing deserializing object.'')", span="8067-8079"];
m1_3540 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", span="8065-8065"];
m1_3477 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonSerializable.PersonSerializable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PersonSerializable.PersonSerializable()", span="33-33"];
m1_50 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", span="246-246"];
m1_51 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", file="JsonSerializerTest.cs", label="DateTimeOffset d = JsonConvert.DeserializeObject<DateTimeOffset>(@''''''/Date(1418924498000+0800)/'''''')", span="248-248"];
m1_52 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", file="JsonSerializerTest.cs", label="long initialTicks = DateTimeUtils.ConvertDateTimeToJavaScriptTicks(d.DateTime, d.Offset)", span="249-249"];
m1_53 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1418924498000, initialTicks)", span="251-251"];
m1_54 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(8, d.Offset.Hours)", span="252-252"];
m1_55 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", span="246-246"];
m1_4014 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", span="9291-9291"];
m1_4015 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs", label="DateTime dt = new DateTime(2000, 12, 22)", span="9293-9293"];
m1_4016 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="9294-9294"];
m1_4018 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new Dictionary<DateTime, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="9302-9305"];
m1_4021 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="9313-9313"];
m1_4017 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead,\r\n                Formatting = Formatting.Indented\r\n            }", span="9295-9300"];
m1_4020 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs", label="Dictionary<DateTime, string> d = JsonConvert.DeserializeObject<Dictionary<DateTime, string>>(json, settings)", span="9311-9311"];
m1_4019 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22'''': ''''123''''\r\n}'', json)", span="9307-9309"];
m1_4022 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", span="9291-9291"];
m1_1902 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="4062-4062"];
m1_1903 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="StructTest structTest = new StructTest\r\n            {\r\n                StringProperty = ''StringProperty!'',\r\n                StringField = ''StringField'',\r\n                IntProperty = 5,\r\n                IntField = 10\r\n            }", span="4064-4070"];
m1_1904 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(structTest, Formatting.Indented)", span="4072-4072"];
m1_1907 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(structTest.StringProperty, deserialized.StringProperty)", span="4082-4082"];
m1_1905 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''StringField'''': ''''StringField'''',\r\n  ''''IntField'''': 10,\r\n  ''''StringProperty'''': ''''StringProperty!'''',\r\n  ''''IntProperty'''': 5\r\n}'', json)", span="4074-4079"];
m1_1906 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="StructTest deserialized = JsonConvert.DeserializeObject<StructTest>(json)", span="4081-4081"];
m1_1908 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(structTest.StringField, deserialized.StringField)", span="4083-4083"];
m1_1909 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(structTest.IntProperty, deserialized.IntProperty)", span="4084-4084"];
m1_1910 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(structTest.IntField, deserialized.IntField)", span="4085-4085"];
m1_1911 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="4062-4062"];
m1_305 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomerWithMetadataType.CustomerWithMetadataType()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomerWithMetadataType.CustomerWithMetadataType()", span="740-740"];
m1_3139 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", span="7175-7175"];
m1_3140 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                string json = @''{\r\n  ''''PreProperty'''': true,\r\n  ''''PostProperty'''': ''''-1''''\r\n}'';\r\n\r\n                JsonConvert.DeserializeObject<TestObjects.MyClass>(json);\r\n            }, ''Unexpected character encountered while parsing value: t. Path 'PreProperty', line 2, position 18.'')", span="7177-7185"];
m1_3141 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", span="7175-7175"];
m1_236 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="802-802"];
m1_716 [cluster="System.Runtime.Serialization.SerializationInfo.GetString(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetString(string)", span="0-0"];
m1_2693 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", span="5983-5983"];
m1_3874 [cluster="Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.ConsoleWriter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.ConsoleWriter()", span="89-89"];
m1_2110 [cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0"];
m1_2190 [cluster="System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", span="0-0"];
m1_3079 [cluster="System.Convert.FromBase64String(string)", file="JsonSerializerTest.cs", label="Entry System.Convert.FromBase64String(string)", span="0-0"];
m1_3515 [cluster="Newtonsoft.Json.Tests.TestObjects.DataContractSerializationAttributesClass.DataContractSerializationAttributesClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.DataContractSerializationAttributesClass.DataContractSerializationAttributesClass()", span="31-31"];
m1_1089 [cluster="JavaScriptSerializer.cstr", file="JsonSerializerTest.cs", label="Entry JavaScriptSerializer.cstr", span=""];
m1_4032 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", span="9343-9343"];
m1_4033 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs", label="DateTimeOffset dt = new DateTimeOffset(2000, 12, 22, 0, 0, 0, TimeSpan.Zero)", span="9345-9345"];
m1_4034 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd'!'K''", span="9346-9346"];
m1_4036 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new Dictionary<DateTimeOffset, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="9354-9357"];
m1_4039 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="9365-9365"];
m1_4035 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead,\r\n                Formatting = Formatting.Indented\r\n            }", span="9347-9352"];
m1_4038 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs", label="Dictionary<DateTimeOffset, string> d = JsonConvert.DeserializeObject<Dictionary<DateTimeOffset, string>>(json, settings)", span="9363-9363"];
m1_4037 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22!+00:00'''': ''''123''''\r\n}'', json)", span="9359-9361"];
m1_4040 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", span="9343-9343"];
m1_25 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateSubclass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateSubclass()", span="174-174"];
m1_26 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateSubclass()", file="JsonSerializerTest.cs", label="return new Subclass\r\n                {\r\n                    ID = 123,\r\n                    Name = ''ABC'',\r\n                    P1 = true,\r\n                    P2 = 44\r\n                };", span="176-182"];
m1_27 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateSubclass()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateSubclass()", span="174-174"];
m1_1060 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", span="2340-2340"];
m1_1061 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonSerializerTest.cs", label="string json = @''[''''vvv\jvvv'''']''", span="2342-2342"];
m1_1062 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { JsonConvert.DeserializeObject<List<string>>(json); }, @''Bad JSON escape sequence: \j. Path '', line 1, position 7.'')", span="2344-2344"];
m1_1063 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", span="2340-2340"];
m1_718 [cluster="System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", span="0-0"];
m1_1307 [cluster="Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", span="30-30"];
m1_3195 [cluster="Newtonsoft.Json.Tests.TestObjects.Widget1.Widget1()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Widget1.Widget1()", span="27-27"];
m1_1569 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="3348-3348"];
m1_1570 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="SubKlass i = new SubKlass(''my subprop'')", span="3350-3350"];
m1_1571 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="i.SuperProp = ''overrided superprop''", span="3351-3351"];
m1_1572 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(i)", span="3353-3353"];
m1_1573 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="3354-3354"];
m1_1574 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json)", span="3356-3356"];
m1_1575 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="string newJson = JsonConvert.SerializeObject(ii)", span="3358-3358"];
m1_1576 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="3359-3359"];
m1_1577 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="3348-3348"];
m1_3458 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", span="7833-7833"];
m1_3459 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1 },\r\n                { new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2 }\r\n            }", span="7835-7839"];
m1_3460 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="7841-7844"];
m1_3461 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''\/Date(976623132000)\/'''': 1,\r\n  ''''\/Date(1386850332000)\/'''': 2\r\n}'', json)", span="7846-7849"];
m1_3462 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json)", span="7851-7851"];
m1_3463 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2.Count)", span="7853-7853"];
m1_3464 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7854-7854"];
m1_3465 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7855-7855"];
m1_3466 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", span="7833-7833"];
m1_783 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", span="1688-1688"];
m1_784 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="var original = new FooBar1 { foo = new Bar1 { bar = ''value'' } }", span="1690-1690"];
m1_785 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(original)", span="1691-1691"];
m1_786 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="var expectedJson = @''{''''foo'''':{''''bar'''':''''value''''}}''", span="1692-1692"];
m1_787 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expectedJson, json)", span="1693-1693"];
m1_788 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", span="1688-1688"];
m1_1109 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="JsonSerializerTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0"];
m1_2937 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", span="6749-6749"];
m1_2938 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass()", span="6751-6751"];
m1_2939 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6752-6752"];
m1_2942 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Guid, c2.Guid)", span="6763-6763"];
m1_2943 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="6764-6764"];
m1_2944 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="6765-6765"];
m1_2945 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="6766-6766"];
m1_2946 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Uri, c2.Uri)", span="6767-6767"];
m1_2940 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Guid'''': ''''00000000-0000-0000-0000-000000000000'''',\r\n  ''''NullableGuid'''': null,\r\n  ''''TimeSpan'''': ''''00:00:00'''',\r\n  ''''NullableTimeSpan'''': null,\r\n  ''''Uri'''': null\r\n}'', json)", span="6754-6760"];
m1_2941 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="UriGuidTimeSpanTestClass c2 = JsonConvert.DeserializeObject<UriGuidTimeSpanTestClass>(json)", span="6762-6762"];
m1_2947 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", span="6749-6749"];
m1_3833 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", span="8894-8894"];
m1_3834 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]''", span="8896-8911"];
m1_3835 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="IList<PersonReference> people = JsonConvert.DeserializeObject<IList<PersonReference>>(json, new JsonSerializerSettings\r\n            {\r\n#pragma warning disable 618\r\n                ReferenceResolver = new IdReferenceResolver(),\r\n#pragma warning restore 618\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="8913-8920"];
m1_3836 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, people.Count)", span="8922-8922"];
m1_3837 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="PersonReference john = people[0]", span="8924-8924"];
m1_3838 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="PersonReference jane = people[1]", span="8925-8925"];
m1_3839 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="Assert.AreEqual(john, jane.Spouse)", span="8927-8927"];
m1_3840 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="Assert.AreEqual(jane, john.Spouse)", span="8928-8928"];
m1_3841 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", span="8894-8894"];
m1_1790 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", span="3858-3858"];
m1_1791 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonSerializerTest.cs", label="string json = @''[]''", span="3860-3860"];
m1_1792 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Exception>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Exception' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3862-3864"];
m1_1793 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", span="3858-3858"];
m1_1011 [cluster="Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", span="27-27"];
m1_3614 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", span="8243-8243"];
m1_3615 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs", label="string json = @''[\r\n        1,\r\n        null\r\n      ]''", span="8245-8248"];
m1_3616 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs", label="var l = JsonConvert.DeserializeObject<IReadOnlyList<int?>>(json)", span="8250-8250"];
m1_3617 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, l[0])", span="8252-8252"];
m1_3618 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, l[1])", span="8253-8253"];
m1_3619 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", span="8243-8243"];
m1_4134 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9627-9627"];
m1_4135 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="var messageJObject = serializer.Deserialize<JObject>(reader)", span="9629-9629"];
m1_4136 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="messageJObject == null", span="9630-9630"];
m1_4138 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="var address = messageJObject.GetValue(''Address'', StringComparison.OrdinalIgnoreCase).ToObject<string>()", span="9635-9635"];
m1_4141 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="messageJObject.TryGetValue(''DisplayName'', StringComparison.OrdinalIgnoreCase, out displayNameToken)\r\n                    && !string.IsNullOrEmpty(displayName = displayNameToken.ToObject<string>())", span="9639-9640"];
m1_4137 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="return null;", span="9632-9632"];
m1_4139 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="JToken displayNameToken", span="9637-9637"];
m1_4142 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="return new System.Net.Mail.MailAddress(address, displayName);", span="9642-9642"];
m1_4143 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="return new System.Net.Mail.MailAddress(address);", span="9645-9645"];
m1_4140 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="string displayName", span="9638-9638"];
m1_4144 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9627-9627"];
m1_4187 [cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", span="9759-9759"];
m1_4188 [cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonSerializerTest.cs", label="Value = value", span="9761-9761"];
m1_4189 [cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonSerializerTest.cs", label="Constructor = ''Public Parameterized''", span="9762-9762"];
m1_4190 [cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", span="9759-9759"];
m1_1832 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="3923-3923"];
m1_1833 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs", label="string json = @''{}''", span="3925-3925"];
m1_1834 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<List<Person>>(json)", span="3929-3929"];
m1_1835 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs", label="Assert.Fail()", span="3930-3930"];
m1_1836 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs", label=JsonSerializationException, span="3932-3932"];
m1_1837 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs", label="Assert.IsTrue(ex.Message.StartsWith(@''Cannot deserialize the current JSON object (e.g. {''''name'''':''''value''''}) into type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Person]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.'' + Environment.NewLine +\r\n                                                    @''To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.'' + Environment.NewLine +\r\n                                                    @''Path ''''))", span="3934-3936"];
m1_1838 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="3923-3923"];
m1_544 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", span="1270-1270"];
m1_545 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="1272-1272"];
m1_546 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="1274-1274"];
m1_547 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.Binder = customBinder", span="1275-1275"];
m1_548 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(customBinder, settings.Binder)", span="1276-1276"];
m1_549 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.CheckAdditionalContent = true", span="1278-1278"];
m1_550 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, settings.CheckAdditionalContent)", span="1279-1279"];
m1_551 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="1281-1281"];
m1_552 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, settings.ConstructorHandling)", span="1282-1282"];
m1_553 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.Context = new StreamingContext(StreamingContextStates.Other)", span="1285-1285"];
m1_554 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), settings.Context)", span="1286-1286"];
m1_556 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.ContractResolver = resolver", span="1290-1290"];
m1_557 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(resolver, settings.ContractResolver)", span="1291-1291"];
m1_558 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.Converters.Add(new StringEnumConverter())", span="1293-1293"];
m1_559 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, settings.Converters.Count)", span="1294-1294"];
m1_560 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.Culture = new CultureInfo(''en-nz'')", span="1296-1296"];
m1_561 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''en-NZ'', settings.Culture.ToString())", span="1297-1297"];
m1_562 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.EqualityComparer = EqualityComparer<object>.Default", span="1299-1299"];
m1_563 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(EqualityComparer<object>.Default, settings.EqualityComparer)", span="1300-1300"];
m1_564 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="1302-1302"];
m1_565 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, settings.DateFormatHandling)", span="1303-1303"];
m1_566 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.DateFormatString = ''yyyy''", span="1305-1305"];
m1_567 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''yyyy'', settings.DateFormatString)", span="1306-1306"];
m1_568 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.DateParseHandling = DateParseHandling.None", span="1308-1308"];
m1_569 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateParseHandling.None, settings.DateParseHandling)", span="1309-1309"];
m1_570 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="1311-1311"];
m1_571 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateTimeZoneHandling.Utc, settings.DateTimeZoneHandling)", span="1312-1312"];
m1_572 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="1314-1314"];
m1_573 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, settings.DefaultValueHandling)", span="1315-1315"];
m1_574 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.FloatFormatHandling = FloatFormatHandling.Symbol", span="1317-1317"];
m1_575 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FloatFormatHandling.Symbol, settings.FloatFormatHandling)", span="1318-1318"];
m1_576 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.FloatParseHandling = FloatParseHandling.Decimal", span="1320-1320"];
m1_577 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FloatParseHandling.Decimal, settings.FloatParseHandling)", span="1321-1321"];
m1_578 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.Formatting = Formatting.Indented", span="1323-1323"];
m1_579 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(Formatting.Indented, settings.Formatting)", span="1324-1324"];
m1_580 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.MaxDepth = 9001", span="1326-1326"];
m1_581 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(9001, settings.MaxDepth)", span="1327-1327"];
m1_582 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.MissingMemberHandling = MissingMemberHandling.Error", span="1329-1329"];
m1_583 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(MissingMemberHandling.Error, settings.MissingMemberHandling)", span="1330-1330"];
m1_584 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.NullValueHandling = NullValueHandling.Ignore", span="1332-1332"];
m1_585 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(NullValueHandling.Ignore, settings.NullValueHandling)", span="1333-1333"];
m1_586 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.ObjectCreationHandling = ObjectCreationHandling.Replace", span="1335-1335"];
m1_587 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ObjectCreationHandling.Replace, settings.ObjectCreationHandling)", span="1336-1336"];
m1_588 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.PreserveReferencesHandling = PreserveReferencesHandling.All", span="1338-1338"];
m1_589 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(PreserveReferencesHandling.All, settings.PreserveReferencesHandling)", span="1339-1339"];
m1_590 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="1341-1341"];
m1_591 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ReferenceLoopHandling.Ignore, settings.ReferenceLoopHandling)", span="1342-1342"];
m1_593 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.ReferenceResolver = referenceResolver", span="1346-1346"];
m1_594 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(referenceResolver, settings.ReferenceResolver)", span="1347-1347"];
m1_595 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(referenceResolver, settings.ReferenceResolverProvider())", span="1349-1349"];
m1_596 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.ReferenceResolverProvider = () => referenceResolver", span="1351-1351"];
m1_597 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(referenceResolver, settings.ReferenceResolverProvider())", span="1352-1352"];
m1_598 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="1354-1354"];
m1_599 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, settings.StringEscapeHandling)", span="1355-1355"];
m1_601 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.TraceWriter = traceWriter", span="1358-1358"];
m1_602 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(traceWriter, settings.TraceWriter)", span="1359-1359"];
m1_603 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="1362-1362"];
m1_604 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FormatterAssemblyStyle.Full, settings.TypeNameAssemblyFormat)", span="1363-1363"];
m1_605 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.TypeNameHandling = TypeNameHandling.All", span="1366-1366"];
m1_606 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TypeNameHandling.All, settings.TypeNameHandling)", span="1367-1367"];
m1_555 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="1289-1289"];
m1_592 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="1344-1344"];
m1_600 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="1357-1357"];
m1_607 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", span="1270-1270"];
m1_830 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", span="1756-1756"];
m1_842 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonSerializerTest.cs", label="_name = name", span="1758-1758"];
m1_843 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonSerializerTest.cs", label="_number = number", span="1759-1759"];
m1_844 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", span="1756-1756"];
m1_2662 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="5963-5963"];
m1_2663 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="var derived = new Derived(''meh'', ''woo'')", span="5965-5965"];
m1_2664 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="var settings = new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor\r\n            }", span="5967-5971"];
m1_2665 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(derived, Formatting.Indented, settings)", span="5973-5973"];
m1_2666 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="var meh = JsonConvert.DeserializeObject<Base>(json, settings)", span="5975-5975"];
m1_2667 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(((Derived)meh).IDoWork, ''woo'')", span="5977-5977"];
m1_2668 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(meh.IDontWork, ''meh'')", span="5978-5978"];
m1_2669 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="5963-5963"];
m1_1818 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", span="3907-3907"];
m1_1819 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonSerializerTest.cs", label="string json = @''new Constructor(123)''", span="3909-3909"];
m1_1820 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Person>(json); }, @''Error converting value ''''Constructor'''' to type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '', line 1, position 16.'')", span="3911-3911"];
m1_1821 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", span="3907-3907"];
m1_2191 [cluster="System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", span="0-0"];
m1_403 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", span="1052-1052"];
m1_404 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs", label="var input = new ResponseWithNewGenericPropertyVirtual<int>()\r\n            {\r\n                Message = ''Trying out integer as type parameter'',\r\n                Data = 25,\r\n                Result = ''This should be fine''\r\n            }", span="1054-1059"];
m1_405 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(input)", span="1061-1061"];
m1_407 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Data, deserialized.Data)", span="1064-1064"];
m1_408 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Message, deserialized.Message)", span="1065-1065"];
m1_409 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Result, deserialized.Result)", span="1066-1066"];
m1_406 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs", label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericPropertyVirtual<int>>(json)", span="1062-1062"];
m1_410 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", span="1052-1052"];
m1_1363 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", span="27-27"];
m1_2637 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", span="5903-5903"];
m1_2638 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", file="JsonSerializerTest.cs", label="return string.Format(''({0},{1},{2})'', X, Y, Z);", span="5905-5905"];
m1_2639 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", span="5903-5903"];
m1_4162 [cluster="System.Net.Mail.Attachment.Attachment(System.IO.Stream, string)", file="JsonSerializerTest.cs", label="Entry System.Net.Mail.Attachment.Attachment(System.IO.Stream, string)", span="0-0"];
m1_834 [cluster="System.IO.MemoryStream.MemoryStream()", file="JsonSerializerTest.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m1_3796 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", span="8755-8755"];
m1_3797 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonSerializerTest.cs", label="bar == null", span="8757-8757"];
m1_3798 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonSerializerTest.cs", label="throw new ArgumentNullException(nameof(bar));", span="8759-8759"];
m1_3799 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonSerializerTest.cs", label="Bar = bar", span="8762-8762"];
m1_3800 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", span="8755-8755"];
m1_3456 [cluster="string.Contains(string)", file="JsonSerializerTest.cs", label="Entry string.Contains(string)", span="0-0"];
m1_3910 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", span="9079-9079"];
m1_3911 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="9081-9081"];
m1_3912 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", span="9079-9079"];
m1_3588 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", span="8164-8164"];
m1_3589 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonSerializerTest.cs", label="m_Item1 = item1", span="8166-8166"];
m1_3590 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", span="8164-8164"];
m1_2888 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CollectionClassAttributeDerived()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CollectionClassAttributeDerived()", span="6521-6521"];
m1_28 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Subclass.Subclass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Subclass.Subclass()", span="157-157"];
m1_2843 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", span="6476-6476"];
m1_2844 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonSerializerTest.cs", label="Title = title", span="6478-6478"];
m1_2845 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonSerializerTest.cs", label="Categories = new Dictionary<string, int>()", span="6479-6479"];
m1_2846 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", span="6476-6476"];
m1_3659 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloats.NullableFloats()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloats.NullableFloats()", span="8365-8365"];
m1_2629 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="5885-5885"];
m1_2630 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="string json = ''{'Value':123456789876543.21}''", span="5887-5887"];
m1_2631 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="5888-5888"];
m1_2632 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="reader.FloatParseHandling = FloatParseHandling.Decimal", span="5889-5889"];
m1_2634 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="IDictionary<string, decimal> d = serializer.Deserialize<IDictionary<string, decimal>>(reader)", span="5893-5893"];
m1_2633 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="5891-5891"];
m1_2635 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123456789876543.21m, d[''Value''])", span="5894-5894"];
m1_2636 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="5885-5885"];
m1_2894 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", span="6608-6608"];
m1_2895 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonSerializerTest.cs", label="_readonlyString = ''default!''", span="6610-6610"];
m1_2896 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", span="6608-6608"];
m1_838 [cluster="System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", file="JsonSerializerTest.cs", label="Entry System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", span="0-0"];
m1_2184 [cluster="System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", span="0-0"];
m1_1059 [cluster="Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", span="27-27"];
m1_1254 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="2696-2696"];
m1_1255 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="TimeSpan ts = new TimeSpan(00, 23, 59, 1)", span="2698-2698"];
m1_1256 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new ClassWithTimeSpan { TimeSpanField = ts }, Formatting.Indented)", span="2700-2700"];
m1_1259 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ts, c.TimeSpanField)", span="2706-2706"];
m1_1257 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''TimeSpanField'''': ''''23:59:01''''\r\n}'', json)", span="2701-2703"];
m1_1258 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="ClassWithTimeSpan c = JsonConvert.DeserializeObject<ClassWithTimeSpan>(json)", span="2705-2705"];
m1_1260 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="2696-2696"];
m1_755 [cluster="System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", file="JsonSerializerTest.cs", label="Entry System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", span="0-0"];
m1_3620 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", span="8258-8258"];
m1_3621 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="var tuple = new MyTuple<int>(500)", span="8260-8260"];
m1_3622 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(tuple)", span="8261-8261"];
m1_3623 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''m_Item1'''':500}'', json)", span="8262-8262"];
m1_3625 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Action doStuff = () => { obj = JsonConvert.DeserializeObject<MyTuple<int>>(json); }", span="8266-8266"];
m1_3624 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="MyTuple<int> obj = null", span="8264-8264"];
m1_3626 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="doStuff()", span="8269-8269"];
m1_3627 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Assert.AreEqual(500, obj.Item1)", span="8270-8270"];
m1_3628 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", span="8258-8258"];
m1_2161 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4830-4830"];
m1_2162 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_stringValue = info.GetString(''stringValue'')", span="4832-4832"];
m1_2163 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_intValue = info.GetInt32(''intValue'')", span="4833-4833"];
m1_2164 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_dateTimeOffsetValue = (DateTimeOffset)info.GetValue(''dateTimeOffsetValue'', typeof(DateTimeOffset))", span="4834-4834"];
m1_2165 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_personValue = (Person)info.GetValue(''personValue'', typeof(Person))", span="4835-4835"];
m1_2166 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_nullPersonValue = (Person)info.GetValue(''nullPersonValue'', typeof(Person))", span="4836-4836"];
m1_2167 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_nullableInt = (int?)info.GetValue(''nullableInt'', typeof(int?))", span="4837-4837"];
m1_2168 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_booleanValue = info.GetBoolean(''booleanValue'')", span="4839-4839"];
m1_2169 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_byteValue = info.GetByte(''byteValue'')", span="4840-4840"];
m1_2170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_charValue = info.GetChar(''charValue'')", span="4841-4841"];
m1_2171 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_dateTimeValue = info.GetDateTime(''dateTimeValue'')", span="4842-4842"];
m1_2172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_decimalValue = info.GetDecimal(''decimalValue'')", span="4843-4843"];
m1_2173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_shortValue = info.GetInt16(''shortValue'')", span="4844-4844"];
m1_2174 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_longValue = info.GetInt64(''longValue'')", span="4845-4845"];
m1_2175 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_sbyteValue = info.GetSByte(''sbyteValue'')", span="4846-4846"];
m1_2176 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_floatValue = info.GetSingle(''floatValue'')", span="4847-4847"];
m1_2177 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_ushortValue = info.GetUInt16(''ushortValue'')", span="4848-4848"];
m1_2178 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_uintValue = info.GetUInt32(''uintValue'')", span="4849-4849"];
m1_2179 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_ulongValue = info.GetUInt64(''ulongValue'')", span="4850-4850"];
m1_2180 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4830-4830"];
m1_675 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", span="1467-1467"];
m1_676 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs", label="Ratio ratio = new Ratio(2, 1)", span="1469-1469"];
m1_677 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(ratio)", span="1470-1470"];
m1_680 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ratio.Denominator, ratio2.Denominator)", span="1476-1476"];
m1_678 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''n'''':2,''''d'''':1}'', json)", span="1472-1472"];
m1_679 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs", label="Ratio ratio2 = JsonConvert.DeserializeObject<Ratio>(json)", span="1474-1474"];
m1_681 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ratio.Numerator, ratio2.Numerator)", span="1477-1477"];
m1_682 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", span="1467-1467"];
m1_3172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", span="7250-7250"];
m1_3173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs", label="var serializer = JsonSerializer.Create(new JsonSerializerSettings())", span="7252-7252"];
m1_3174 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs", label="var dict = serializer.Deserialize<Dictionary<string, string>>(new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}'')))", span="7253-7253"];
m1_3175 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual('''', dict[''k1''])", span="7255-7255"];
m1_3176 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''v2'', dict[''k2''])", span="7256-7256"];
m1_3177 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", span="7250-7250"];
m1_2872 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", span="6556-6556"];
m1_2873 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="6558-6558"];
m1_2874 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", span="6556-6556"];
m1_148 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", span="407-407"];
m1_149 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", file="JsonSerializerTest.cs", label="Binding_DisallowNull o = JsonConvert.DeserializeObject<Binding_DisallowNull>(''{}'')", span="409-409"];
m1_150 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", file="JsonSerializerTest.cs", label="Assert.IsNull(o.RequiredProperty)", span="410-410"];
m1_151 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", span="407-407"];
m1_3467 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", span="7859-7859"];
m1_3468 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonSerializerTest.cs", label="string s = (string)new JsonSerializer().Deserialize(new JsonTextReader(new StringReader('''''')))", span="7861-7861"];
m1_3469 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonSerializerTest.cs", label="Assert.AreEqual('''', s)", span="7862-7862"];
m1_3470 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", span="7859-7859"];
m1_1224 [cluster="System.Collections.Generic.Stack<T>.Stack()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Stack<T>.Stack()", span="0-0"];
m1_3578 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", span="8133-8133"];
m1_3579 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs", label="KeyValuePair<int, string> result =\r\n                JsonConvert.DeserializeObject<KeyValuePair<int, string>>(\r\n                    ''{key: 123, \''VALUE\'': \''test value\''}''\r\n                    )", span="8135-8138"];
m1_3580 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123, result.Key)", span="8140-8140"];
m1_3581 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''test value'', result.Value)", span="8141-8141"];
m1_3582 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", span="8133-8133"];
m1_197 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.DictionaryKeyContractResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.DictionaryKeyContractResolver()", span="477-477"];
m1_2087 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="4667-4667"];
m1_2088 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="4667-4667"];
m1_2960 [cluster="System.TimeSpan.FromDays(double)", file="JsonSerializerTest.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m1_955 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", span="2095-2095"];
m1_956 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="2097-2097"];
m1_957 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Product p = JsonConvert.DeserializeObject(value, typeof(Product)) as Product", span="2099-2099"];
m1_958 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Orange'', p.Name)", span="2101-2101"];
m1_959 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2010, 1, 24, 12, 0, 0), p.ExpiryDate)", span="2102-2102"];
m1_960 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3.99m, p.Price)", span="2103-2103"];
m1_961 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", span="2095-2095"];
m1_1508 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="3185-3185"];
m1_1509 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs", label="Person person = new Person\r\n            {\r\n                Name = ''Mike Manager'',\r\n                BirthDate = new DateTime(1983, 8, 3, 0, 0, 0, DateTimeKind.Utc),\r\n                Department = ''IT'',\r\n                LastModified = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc)\r\n            }", span="3187-3193"];
m1_1510 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs", label="return person;", span="3194-3194"];
m1_1511 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="3185-3185"];
m1_770 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="422-422"];
m1_1017 [cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", span="27-27"];
m1_3831 [cluster="Size.cstr", file="JsonSerializerTest.cs", label="Entry Size.cstr", span=""];
m1_1562 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", span="3332-3332"];
m1_1563 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs", label="string json = ''{ 'testProperty1': 'value' }''", span="3336-3336"];
m1_1564 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<ConstructorAndRequiredTestClass>(json)", span="3337-3337"];
m1_1565 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Assert.Fail()", span="3339-3339"];
m1_1566 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs", label=JsonSerializationException, span="3341-3341"];
m1_1567 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'TestProperty2' not found in JSON. Path ''''))", span="3343-3343"];
m1_1568 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", span="3332-3332"];
m1_3008 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="991-991"];
m1_420 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyOverride<T>.ResponseWithNewGenericPropertyOverride()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyOverride<T>.ResponseWithNewGenericPropertyOverride()", span="1012-1012"];
m1_1465 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="3083-3083"];
m1_1466 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''FirstName'''': ''''Bob''''\r\n}''", span="3087-3089"];
m1_1467 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="3091-3091"];
m1_1468 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="Assert.Fail()", span="3092-3092"];
m1_1469 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label=JsonSerializationException, span="3094-3094"];
m1_1470 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'LastName' not found in JSON. Path ''''))", span="3096-3096"];
m1_1471 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="3083-3083"];
m1_4145 [cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", span="493-493"];
m1_1458 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="3066-3066"];
m1_1459 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n                {\r\n                    FirstName = null,\r\n                    BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n                    LastName = null,\r\n                    MiddleName = null\r\n                };\r\n\r\n                string json = JsonConvert.SerializeObject(requiredMembersClass);\r\n            }, ''Cannot write a null value for property 'FirstName'. Property requires a value. Path ''.'')", span="3068-3079"];
m1_1460 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="3066-3066"];
m1_3571 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", span="8113-8113"];
m1_3572 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="return true;", span="8115-8115"];
m1_3573 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", span="8113-8113"];
m1_767 [cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="154-154"];
m1_2673 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5999-5999"];
m1_2674 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''Name'', _name)", span="6001-6001"];
m1_2675 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5999-5999"];
m1_3940 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", span="9129-9129"];
m1_3941 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="9131-9131"];
m1_3942 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", span="9129-9129"];
m1_1892 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m1_2379 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", span="5367-5367"];
m1_937 [cluster="System.Console.WriteLine(string)", file="JsonSerializerTest.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m1_3629 [cluster="System.Action.Invoke()", file="JsonSerializerTest.cs", label="Entry System.Action.Invoke()", span="0-0"];
m1_3900 [cluster="System.InvalidCastException.InvalidCastException()", file="JsonSerializerTest.cs", label="Entry System.InvalidCastException.InvalidCastException()", span="0-0"];
m1_3286 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", span="7458-7458"];
m1_3287 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="var person = PersonWithPrivateConstructor.CreatePerson()", span="7460-7460"];
m1_3288 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="person.Name = ''John Doe''", span="7461-7461"];
m1_3289 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="person.Age = 25", span="7462-7462"];
m1_3290 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="var serializedPerson = JsonConvert.SerializeObject(person)", span="7464-7464"];
m1_3292 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(person.Name, roundtrippedPerson.Name)", span="7467-7467"];
m1_3291 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="var roundtrippedPerson = JsonConvert.DeserializeObject<PersonWithPrivateConstructor>(serializedPerson)", span="7465-7465"];
m1_3293 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", span="7458-7458"];
m1_4191 [cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", span="9796-9796"];
m1_4192 [cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", file="JsonSerializerTest.cs", label="Constructor = ''NonPublic''", span="9798-9798"];
m1_4193 [cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", span="9796-9796"];
m1_1682 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="3634-3634"];
m1_1683 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="string json = @''/*comment1*/ { /*comment2*/\r\n        ''''Name'''': /*comment3*/ ''''Apple'''' /*comment4*/, /*comment5*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment6*/ [ /*comment7*/\r\n          ''''Small'''', /*comment8*/\r\n          ''''Medium'''' /*comment9*/,\r\n          /*comment10*/ ''''Large''''\r\n        /*comment11*/ ] /*comment12*/\r\n      } /*comment13*/''", span="3636-3645"];
m1_1684 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(json, typeof(Product))", span="3647-3647"];
m1_1685 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="3649-3649"];
m1_1686 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2008, 12, 28, 0, 0, 0, DateTimeKind.Utc), deserializedProduct.ExpiryDate)", span="3650-3650"];
m1_1687 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3.99m, deserializedProduct.Price)", span="3651-3651"];
m1_1688 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="3652-3652"];
m1_1689 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="3653-3653"];
m1_1690 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="3654-3654"];
m1_1691 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="3634-3634"];
m1_927 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", span="2030-2030"];
m1_928 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Store store = new Store()", span="2032-2032"];
m1_929 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(store)", span="2034-2034"];
m1_931 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(store.Establised, deserializedStore.Establised)", span="2038-2038"];
m1_932 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(store.product.Count, deserializedStore.product.Count)", span="2039-2039"];
m1_930 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Store deserializedStore = (Store)JsonConvert.DeserializeObject(jsonText, typeof(Store))", span="2036-2036"];
m1_933 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Console.WriteLine(jsonText)", span="2041-2041"];
m1_934 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", span="2030-2030"];
m1_2358 [cluster="Unk.ToString", file="JsonSerializerTest.cs", label="Entry Unk.ToString", span=""];
m1_3714 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionary<TKey, TValue>.NoConstructorReadOnlyDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionary<TKey, TValue>.NoConstructorReadOnlyDictionary()", span="8540-8540"];
m1_3715 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionary<TKey, TValue>.NoConstructorReadOnlyDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionary<TKey, TValue>.NoConstructorReadOnlyDictionary()", span="8540-8540"];
m1_3495 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", span="7912-7912"];
m1_3496 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs", label="Event1 e = new Event1\r\n            {\r\n                EventName = ''Blackadder III'',\r\n                Venue = ''Gryphon Theatre'',\r\n                Performances = new List<DateTime>\r\n                {\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336458600000),\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336545000000),\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336636800000)\r\n                }\r\n            }", span="7914-7924"];
m1_3497 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="7926-7926"];
m1_3498 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''EventName'''': ''''Blackadder III'''',\r\n  ''''Venue'''': ''''Gryphon Theatre'''',\r\n  ''''Performances'''': [\r\n    new Date(\r\n      1336458600000\r\n    ),\r\n    new Date(\r\n      1336545000000\r\n    ),\r\n    new Date(\r\n      1336636800000\r\n    )\r\n  ]\r\n}'', json)", span="7937-7951"];
m1_3499 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", span="7912-7912"];
m1_1188 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="2564-2564"];
m1_1189 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="ClassWithArray wibble = new ClassWithArray()", span="2566-2566"];
m1_1190 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="wibble.Foo = ''hello''", span="2567-2567"];
m1_1191 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="wibble.Bar.Add(1)", span="2568-2568"];
m1_1192 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="wibble.Bar.Add(2)", span="2569-2569"];
m1_1193 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="wibble.Bar.Add(3)", span="2570-2570"];
m1_1194 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(wibble)", span="2571-2571"];
m1_1195 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="ClassWithArray wibbleOut = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="2573-2573"];
m1_1196 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''hello'', wibbleOut.Foo)", span="2574-2574"];
m1_1197 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(5, wibbleOut.Bar.Count)", span="2576-2576"];
m1_1198 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[0])", span="2577-2577"];
m1_1199 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[1])", span="2578-2578"];
m1_1200 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, wibbleOut.Bar[2])", span="2579-2579"];
m1_1201 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, wibbleOut.Bar[3])", span="2580-2580"];
m1_1202 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, wibbleOut.Bar[4])", span="2581-2581"];
m1_1203 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="2564-2564"];
m1_2245 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", span="5010-5010"];
m1_2246 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Person person = new Person()", span="5012-5012"];
m1_2247 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="5013-5013"];
m1_2248 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="person.LastModified = person.BirthDate", span="5014-5014"];
m1_2249 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="person.Department = ''Department!''", span="5015-5015"];
m1_2250 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="person.Name = ''Name!''", span="5016-5016"];
m1_2254 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="5026-5026"];
m1_2251 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="5018-5018"];
m1_2252 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="string dateTimeOffsetText", span="5019-5019"];
m1_2260 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="5060-5060"];
m1_2253 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="dateTimeOffsetText = @''\/Date(977345999000+0200)\/''", span="5021-5021"];
m1_2256 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''\/Date(946688461000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(946688461000)\/''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''\/Date(-62135596800000)\/'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="5032-5055"];
m1_2255 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="5028-5031"];
m1_2257 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="5057-5057"];
m1_2258 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''String!'', o2._stringValue)", span="5058-5058"];
m1_2259 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MinValue, o2._intValue)", span="5059-5059"];
m1_2261 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="5061-5061"];
m1_2262 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, o2._nullPersonValue)", span="5062-5062"];
m1_2263 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, o2._nullableInt)", span="5063-5063"];
m1_2264 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", span="5010-5010"];
m1_3654 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", span="8376-8376"];
m1_3655 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs", label="NullableFloats floats = new NullableFloats\r\n            {\r\n                Object = double.NaN,\r\n                ObjectNull = null,\r\n                Float = float.NaN,\r\n                NullableDouble = double.NaN,\r\n                NullableFloat = null\r\n            }", span="8378-8385"];
m1_3656 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(floats, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                FloatFormatHandling = FloatFormatHandling.DefaultValue\r\n            })", span="8387-8390"];
m1_3657 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Object'''': 0.0,\r\n  ''''Float'''': 0.0,\r\n  ''''Double'''': 0.0,\r\n  ''''NullableFloat'''': null,\r\n  ''''NullableDouble'''': null,\r\n  ''''ObjectNull'''': null\r\n}'', json)", span="8392-8399"];
m1_3658 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", span="8376-8376"];
m1_4184 [cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", span="9754-9754"];
m1_4185 [cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", file="JsonSerializerTest.cs", label="Constructor = ''NonPublic''", span="9756-9756"];
m1_4186 [cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", span="9754-9754"];
m1_1335 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="2835-2835"];
m1_1336 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2837-2837"];
m1_1337 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2838-2838"];
m1_1341 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2845-2845"];
m1_1342 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2846-2846"];
m1_1338 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(m1, new JavaScriptDateTimeConverter())", span="2840-2840"];
m1_1339 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':new Date(0),''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2841-2841"];
m1_1340 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json, new JavaScriptDateTimeConverter())", span="2843-2843"];
m1_1343 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="2835-2835"];
m1_3153 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", span="7201-7201"];
m1_3154 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="string json = @''{''''Id'''':null}''", span="7203-7203"];
m1_3155 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="var c = JsonConvert.DeserializeObject<NullableGuid>(json)", span="7204-7204"];
m1_3156 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, c.Id)", span="7206-7206"];
m1_3157 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="json = @''{''''Id'''':''''d8220a4b-75b1-4b7a-8112-b7bdae956a45''''}''", span="7208-7208"];
m1_3158 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="c = JsonConvert.DeserializeObject<NullableGuid>(json)", span="7209-7209"];
m1_3159 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), c.Id)", span="7211-7211"];
m1_3160 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", span="7201-7201"];
m1_1578 [cluster="Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", span="31-31"];
m1_2972 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="148-148"];
m1_1722 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="3738-3738"];
m1_1723 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}''", span="3740-3752"];
m1_1724 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Content content = JsonConvert.DeserializeObject<Content>(json)", span="3754-3754"];
m1_1725 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Blah, blah, blah'', content.Text)", span="3756-3756"];
m1_1726 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, content.Children.Count)", span="3757-3757"];
m1_1727 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''First'', content.Children[0].Text)", span="3758-3758"];
m1_1728 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Second'', content.Children[1].Text)", span="3759-3759"];
m1_1729 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="3738-3738"];
m1_920 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m1_914 [cluster="DataContractJsonSerializer.cstr", file="JsonSerializerTest.cs", label="Entry DataContractJsonSerializer.cstr", span=""];
m1_4125 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="9609-9616"];
m1_61 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="260-260"];
m1_62 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IList<bool>>(@''[null]'')", span="260-260"];
m1_63 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="260-260"];
m1_67 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="268-268"];
m1_68 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IList<bool>>(@''['2000-12-20T10:55:55Z']'')", span="268-268"];
m1_69 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="268-268"];
m1_73 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="276-276"];
m1_74 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IList<bool>>(@''['pie']'')", span="276-276"];
m1_75 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="276-276"];
m1_79 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="284-284"];
m1_80 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IList<bool>>(@''['']'')", span="284-284"];
m1_81 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="284-284"];
m1_139 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="397-397"];
m1_140 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Binding>(''{requiredProperty:''}'')", span="397-397"];
m1_141 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="397-397"];
m1_145 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="403-403"];
m1_146 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Binding_DisallowNull>(''{requiredProperty:''}'')", span="403-403"];
m1_147 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="403-403"];
m1_156 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="416-416"];
m1_157 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<FooRequired>(''{Bars:''}'')", span="416-416"];
m1_158 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="416-416"];
m1_167 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="452-452"];
m1_168 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(new Binding_DisallowNull())", span="452-452"];
m1_169 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="452-452"];
m1_180 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="474-474"];
m1_181 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(new DictionaryWithNoNull())", span="474-474"];
m1_182 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="474-474"];
m1_208 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="527-527"];
m1_211 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="531-531"];
m1_214 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="535-535"];
m1_217 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="539-539"];
m1_220 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="543-543"];
m1_223 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="547-547"];
m1_226 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="551-551"];
m1_209 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IList<object>>(''[1,'')", span="527-527"];
m1_210 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="527-527"];
m1_212 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IList<int>>(''[1,'')", span="531-531"];
m1_213 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="531-531"];
m1_215 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IList<int>>(''[1'')", span="535-535"];
m1_216 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="535-535"];
m1_218 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1,'')", span="539-539"];
m1_219 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="539-539"];
m1_221 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1'')", span="543-543"];
m1_222 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="543-543"];
m1_224 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1,'')", span="547-547"];
m1_225 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="547-547"];
m1_227 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1'')", span="551-551"];
m1_228 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="551-551"];
m1_250 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(c1)", span="590-590"];
m1_249 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="590-590"];
m1_252 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="603-603"];
m1_255 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="607-607"];
m1_251 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="590-590"];
m1_253 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{}'')", span="603-603"];
m1_254 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="603-603"];
m1_256 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{''''Name'''':null}'')", span="607-607"];
m1_257 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="607-607"];
m1_272 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(c1)", span="632-632"];
m1_271 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="632-632"];
m1_274 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="642-642"];
m1_273 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="632-632"];
m1_275 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<RequiredPropertyConstructorTestClass>(@''{}'')", span="642-642"];
m1_276 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="642-642"];
m1_349 [cluster="lambda expression", file="JsonSerializerTest.cs", label="a.ErrorContext.Handled = true", span="918-918"];
m1_348 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="918-918"];
m1_350 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="918-918"];
m1_444 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<List<Version>>(json)", span="1122-1122"];
m1_443 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1122-1122"];
m1_445 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1122-1122"];
m1_610 [cluster="lambda expression", file="JsonSerializerTest.cs", label=referenceResolver, span="1351-1351"];
m1_609 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1351-1351"];
m1_611 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1351-1351"];
m1_921 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2010-2010"];
m1_924 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2013-2013"];
m1_922 [cluster="lambda expression", file="JsonSerializerTest.cs", label="p.Name", span="2010-2010"];
m1_923 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2010-2010"];
m1_925 [cluster="lambda expression", file="JsonSerializerTest.cs", label="p.Name", span="2013-2013"];
m1_926 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2013-2013"];
m1_1056 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2336-2336"];
m1_1057 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(new BadJsonPropertyClass())", span="2336-2336"];
m1_1058 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2336-2336"];
m1_1065 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<List<string>>(json)", span="2344-2344"];
m1_1064 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2344-2344"];
m1_1066 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2344-2344"];
m1_1367 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2887-2891"];
m1_1368 [cluster="lambda expression", file="JsonSerializerTest.cs", label="IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass()", span="2889-2889"];
m1_1369 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(c)", span="2890-2890"];
m1_1370 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2887-2891"];
m1_1461 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3068-3079"];
m1_1462 [cluster="lambda expression", file="JsonSerializerTest.cs", label="RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n                {\r\n                    FirstName = null,\r\n                    BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n                    LastName = null,\r\n                    MiddleName = null\r\n                }", span="3070-3076"];
m1_1463 [cluster="lambda expression", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(requiredMembersClass)", span="3078-3078"];
m1_1464 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3068-3079"];
m1_1506 [cluster="lambda expression", file="JsonSerializerTest.cs", label="InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass))", span="3182-3182"];
m1_1505 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3182-3182"];
m1_1507 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3182-3182"];
m1_1612 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3433-3439"];
m1_1613 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="3435-3435"];
m1_1614 [cluster="lambda expression", file="JsonSerializerTest.cs", label="o.ReferenceLoopHandlingErrorProperty = o", span="3436-3436"];
m1_1615 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore })", span="3438-3438"];
m1_1616 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3433-3439"];
m1_1754 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<TestObjects.Event>(json)", span="3802-3802"];
m1_1753 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3802-3802"];
m1_1755 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3802-3802"];
m1_1781 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Person>(json)", span="3841-3841"];
m1_1780 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3841-3841"];
m1_1782 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3841-3841"];
m1_1788 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="3851-3851"];
m1_1787 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3851-3851"];
m1_1789 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3851-3851"];
m1_1795 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Exception>(json)", span="3862-3862"];
m1_1794 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3862-3862"];
m1_1796 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3862-3862"];
m1_1802 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<double>(json)", span="3874-3874"];
m1_1801 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3874-3874"];
m1_1803 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3874-3874"];
m1_1809 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<DynamicDictionary>(json)", span="3885-3885"];
m1_1808 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3885-3885"];
m1_1810 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3885-3885"];
m1_1816 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<JObject>(json)", span="3898-3898"];
m1_1815 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3898-3898"];
m1_1817 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3898-3898"];
m1_1823 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Person>(json)", span="3911-3911"];
m1_1822 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3911-3911"];
m1_1824 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3911-3911"];
m1_1830 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<List<Person>>(json)", span="3919-3919"];
m1_1829 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3919-3919"];
m1_1831 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3919-3919"];
m1_1844 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.PopulateObject(json, new Person())", span="3945-3945"];
m1_1843 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3945-3945"];
m1_1845 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3945-3945"];
m1_1852 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.PopulateObject(json, new List<Person>())", span="3953-3953"];
m1_1851 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3953-3953"];
m1_1853 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3953-3953"];
m1_1862 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3968-3979"];
m1_1863 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(new MemoryStream(), new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="3970-3978"];
m1_1864 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3968-3979"];
m1_1869 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3985-3996"];
m1_1870 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="3987-3995"];
m1_1871 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3985-3996"];
m1_1875 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="4002-4013"];
m1_1876 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="4004-4012"];
m1_1877 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="4002-4013"];
m1_1881 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="4019-4030"];
m1_1882 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="4021-4029"];
m1_1883 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="4019-4030"];
m1_1994 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="4337-4337"];
m1_1995 [cluster="lambda expression", file="JsonSerializerTest.cs", label="x.Id == id", span="4337-4337"];
m1_1996 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="4337-4337"];
m1_2031 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Default\r\n            })", span="4436-4440"];
m1_2030 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="4436-4440"];
m1_2032 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="4436-4440"];
m1_2424 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="5449-5449"];
m1_2423 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="5449-5449"];
m1_2425 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="5449-5449"];
m1_2429 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="5455-5470"];
m1_2430 [cluster="lambda expression", file="JsonSerializerTest.cs", label="var reference = new Dictionary<string, object>()", span="5459-5459"];
m1_2431 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reference.Add(''$ref'', 1)", span="5460-5460"];
m1_2432 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reference.Add(''$id'', 1)", span="5461-5461"];
m1_2436 [cluster="lambda expression", file="JsonSerializerTest.cs", label="child.Add(''Father'', reference)", span="5466-5466"];
m1_2433 [cluster="lambda expression", file="JsonSerializerTest.cs", label="var child = new Dictionary<string, object>()", span="5463-5463"];
m1_2434 [cluster="lambda expression", file="JsonSerializerTest.cs", label="child.Add(''_id'', 2)", span="5464-5464"];
m1_2435 [cluster="lambda expression", file="JsonSerializerTest.cs", label="child.Add(''Name'', ''Isabell'')", span="5465-5465"];
m1_2437 [cluster="lambda expression", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="5468-5468"];
m1_2438 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="5469-5469"];
m1_2439 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="5455-5470"];
m1_2540 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<StringDictionaryTestClass>(json)", span="5689-5689"];
m1_2539 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="5689-5689"];
m1_2541 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="5689-5689"];
m1_2755 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="6175-6175"];
m1_2756 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject(''null'', typeof(DateTime))", span="6175-6175"];
m1_2757 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="6175-6175"];
m1_3085 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<HasByteArray>(json, new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Objects\r\n                })", span="7055-7058"];
m1_3084 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7053-7059"];
m1_3086 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7053-7059"];
m1_3109 [cluster="lambda expression", file="JsonSerializerTest.cs", label="List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json)", span="7109-7109"];
m1_3108 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7109-7109"];
m1_3110 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7109-7109"];
m1_3123 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<ConvertableIntTestClass>(json)", span="7148-7148"];
m1_3122 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7148-7148"];
m1_3124 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7148-7148"];
m1_3142 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7177-7185"];
m1_3143 [cluster="lambda expression", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''PreProperty'''': true,\r\n  ''''PostProperty'''': ''''-1''''\r\n}''", span="7179-7182"];
m1_3144 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<TestObjects.MyClass>(json)", span="7184-7184"];
m1_3145 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7177-7185"];
m1_3149 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7191-7197"];
m1_3150 [cluster="lambda expression", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''PreProperty'''': ''", span="7193-7194"];
m1_3151 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<TestObjects.MyClass>(json)", span="7196-7196"];
m1_3152 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7191-7197"];
m1_3223 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7344-7344"];
m1_3224 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<double>('''')", span="7344-7344"];
m1_3225 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7344-7344"];
m1_3229 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7350-7350"];
m1_3230 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<StringComparison>('''')", span="7350-7350"];
m1_3231 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7350-7350"];
m1_3235 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7356-7356"];
m1_3236 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<int>('''')", span="7356-7356"];
m1_3237 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7356-7356"];
m1_3245 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7370-7370"];
m1_3246 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<double>(null)", span="7370-7370"];
m1_3247 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7370-7370"];
m1_3251 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7382-7382"];
m1_3252 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject(null)", span="7382-7382"];
m1_3253 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7382-7382"];
m1_3371 [cluster="lambda expression", file="JsonSerializerTest.cs", label="errors.Add(e.ErrorContext.Error.Message)", span="7621-7621"];
m1_3372 [cluster="lambda expression", file="JsonSerializerTest.cs", label="e.ErrorContext.Handled = true", span="7622-7622"];
m1_3370 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7619-7623"];
m1_3373 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7619-7623"];
m1_3386 [cluster="lambda expression", file="JsonSerializerTest.cs", label="errors.Add(e.ErrorContext.Error.Message)", span="7646-7646"];
m1_3387 [cluster="lambda expression", file="JsonSerializerTest.cs", label="e.ErrorContext.Handled = true", span="7647-7647"];
m1_3385 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7644-7648"];
m1_3388 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7644-7648"];
m1_3401 [cluster="lambda expression", file="JsonSerializerTest.cs", label="errors.Add(e.ErrorContext.Error.Message)", span="7669-7669"];
m1_3402 [cluster="lambda expression", file="JsonSerializerTest.cs", label="e.ErrorContext.Handled = true", span="7670-7670"];
m1_3400 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7667-7671"];
m1_3403 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7667-7671"];
m1_3529 [cluster="lambda expression", file="JsonSerializerTest.cs", label="s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="8023-8023"];
m1_3528 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="8023-8023"];
m1_3530 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="8023-8023"];
m1_3541 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="8067-8079"];
m1_3542 [cluster="lambda expression", file="JsonSerializerTest.cs", label="string json = ''[{},1]''", span="8069-8069"];
m1_3543 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="8071-8071"];
m1_3545 [cluster="lambda expression", file="JsonSerializerTest.cs", label="var reader = new JsonTextReader(new StringReader(json))", span="8074-8074"];
m1_3544 [cluster="lambda expression", file="JsonSerializerTest.cs", label="serializer.CheckAdditionalContent = true", span="8072-8072"];
m1_3548 [cluster="lambda expression", file="JsonSerializerTest.cs", label="serializer.Deserialize(reader, typeof(MyType))", span="8078-8078"];
m1_3546 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="8075-8075"];
m1_3547 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="8076-8076"];
m1_3549 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="8067-8079"];
m1_3631 [cluster="lambda expression", file="JsonSerializerTest.cs", label="obj = JsonConvert.DeserializeObject<MyTuple<int>>(json)", span="8266-8266"];
m1_3630 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="8266-8266"];
m1_3632 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="8266-8266"];
m1_3711 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="8534-8534"];
m1_3712 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<NoConstructorReadOnlyCollection<int>>(''[1]'')", span="8534-8534"];
m1_3713 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="8534-8534"];
m1_3719 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="8549-8549"];
m1_3720 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<NoConstructorReadOnlyDictionary<int, int>>(''{'1':1}'')", span="8549-8549"];
m1_3721 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="8549-8549"];
m1_3729 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IList<long>>(json)", span="8563-8563"];
m1_3728 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="8563-8563"];
m1_3730 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="8563-8563"];
m1_3851 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="8953-8953"];
m1_3852 [cluster="lambda expression", file="JsonSerializerTest.cs", label="new IdReferenceResolver()", span="8953-8953"];
m1_3853 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="8953-8953"];
m1_4098 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="9522-9522"];
m1_4099 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(new ErroringTestClass())", span="9522-9522"];
m1_4100 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="9522-9522"];
m1_4105 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="9528-9528"];
m1_4106 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<string>(''020474068'')", span="9528-9528"];
m1_4107 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="9528-9528"];
m1_4126 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<System.Net.Mail.MailMessage>(\r\n                    JsonMessage,\r\n                    new MailAddressReadConverter(),\r\n                    new AttachmentReadConverter(),\r\n                    new EncodingReadConverter())", span="9611-9615"];
m1_4127 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="9609-9616"];
m1_375 [cluster="object.GetType()", file="JsonSerializerTest.cs", label="Entry object.GetType()", span="0-0"];
m1_3594 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", span="8192-8192"];
m1_3595 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="string json", span="8194-8194"];
m1_3596 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="IList<double> d = new List<double> { 1.1, double.NaN, double.PositiveInfinity }", span="8195-8195"];
m1_3597 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(d)", span="8197-8197"];
m1_3598 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(d, new JsonSerializerSettings { FloatFormatHandling = FloatFormatHandling.Symbol })", span="8200-8200"];
m1_3599 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(d, new JsonSerializerSettings { FloatFormatHandling = FloatFormatHandling.DefaultValue })", span="8203-8203"];
m1_3600 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[1.1,0.0,0.0]'', json)", span="8206-8206"];
m1_3601 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", span="8192-8192"];
m1_3959 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", span="9169-9169"];
m1_3960 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs", label="string originalUri = ''https://test.com?m=a%2bb''", span="9171-9171"];
m1_3961 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs", label="Uri uriWithPlus = new Uri(originalUri)", span="9173-9173"];
m1_3964 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(originalUri, uriWithPlus2.OriginalString)", span="9179-9179"];
m1_3962 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs", label="string jsonWithPlus = JsonConvert.SerializeObject(uriWithPlus)", span="9175-9175"];
m1_3963 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs", label="Uri uriWithPlus2 = JsonConvert.DeserializeObject<Uri>(jsonWithPlus)", span="9177-9177"];
m1_3965 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", span="9169-9169"];
m1_1345 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="2850-2850"];
m1_1346 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="DateTime date = Convert.ToDateTime(''1970-01-01T00:00:00Z'').ToUniversalTime()", span="2852-2852"];
m1_1347 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="MemberConverterClass c = new MemberConverterClass\r\n            {\r\n                DefaultConverter = date,\r\n                MemberConverter = date\r\n            }", span="2854-2858"];
m1_1348 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="2860-2860"];
m1_1349 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''DefaultConverter'''': ''''1970-01-01T00:00:00Z'''',\r\n  ''''MemberConverter'''': ''''1970-01-01T00:00:00Z''''\r\n}'', json)", span="2862-2865"];
m1_1350 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="2850-2850"];
m1_3716 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", span="8547-8547"];
m1_3717 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<NoConstructorReadOnlyDictionary<int, int>>(''{'1':1}''), ''Cannot deserialize readonly or fixed size dictionary: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+NoConstructorReadOnlyDictionary`2[System.Int32,System.Int32]. Path '1', line 1, position 5.'')", span="8549-8549"];
m1_3718 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", span="8547-8547"];
m1_235 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", span="60-60"];
m1_430 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m1_1872 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="4000-4000"];
m1_1873 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error converting value {null} to type 'System.Int32'. Path 'ReadTimeout', line 1, position 15.'')", span="4002-4013"];
m1_1874 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="4000-4000"];
m1_343 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", span="909-909"];
m1_344 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonSerializerTest.cs", label="string json = @''{\r\n    ParentId: 1,\r\n    ChildId: 333333333333333333333333333333333333333\r\n}''", span="911-914"];
m1_345 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonSerializerTest.cs", label="Link l = JsonConvert.DeserializeObject<Link>(json, new JsonSerializerSettings\r\n            {\r\n                Error = (s, a) => a.ErrorContext.Handled = true\r\n            })", span="916-919"];
m1_346 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, l.ChildId)", span="921-921"];
m1_347 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", span="909-909"];
m1_351 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", span="927-927"];
m1_352 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonSerializerTest.cs", label="ObservableCollection<string> s = JsonConvert.DeserializeObject<ObservableCollection<string>>(''['1','2']'')", span="929-929"];
m1_353 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, s.Count)", span="930-930"];
m1_354 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''1'', s[0])", span="931-931"];
m1_355 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''2'', s[1])", span="932-932"];
m1_356 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", span="927-927"];
m1_1949 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="4162-4162"];
m1_1950 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="string googleSearchText = @''{\r\n        ''''responseData'''': {\r\n          ''''results'''': [\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''url'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''visibleUrl'''': ''''en.wikipedia.org'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:TwrPfhd22hYJ:en.wikipedia.org'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton - Wikipedia, the free encyclopedia'''',\r\n              ''''content'''': ''''[1] In 2006, she released her debut album...''''\r\n            },\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''url'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''visibleUrl'''': ''''www.imdb.com'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:1i34KkqnsooJ:www.imdb.com'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b>'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton'''',\r\n              ''''content'''': ''''Self: Zoolander. Socialite <b>Paris Hilton</b>...''''\r\n            }\r\n          ],\r\n          ''''cursor'''': {\r\n            ''''pages'''': [\r\n              {\r\n                ''''start'''': ''''0'''',\r\n                ''''label'''': 1\r\n              },\r\n              {\r\n                ''''start'''': ''''4'''',\r\n                ''''label'''': 2\r\n              },\r\n              {\r\n                ''''start'''': ''''8'''',\r\n                ''''label'''': 3\r\n              },\r\n              {\r\n                ''''start'''': ''''12'''',\r\n                ''''label'''': 4\r\n              }\r\n            ],\r\n            ''''estimatedResultCount'''': ''''59600000'''',\r\n            ''''currentPageIndex'''': 0,\r\n            ''''moreResultsUrl'''': ''''http://www.google.com/search?oe=utf8&ie=utf8...''''\r\n          }\r\n        },\r\n        ''''responseDetails'''': null,\r\n        ''''responseStatus'''': 200\r\n      }''", span="4164-4214"];
m1_1951 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="JObject googleSearch = JObject.Parse(googleSearchText)", span="4216-4216"];
m1_1952 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="IList<JToken> results = googleSearch[''responseData''][''results''].Children().ToList()", span="4219-4219"];
m1_1953 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="IList<SearchResult> searchResults = new List<SearchResult>()", span="4222-4222"];
m1_1954 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label=results, span="4223-4223"];
m1_1956 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="searchResults.Add(searchResult)", span="4226-4226"];
m1_1957 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, searchResults.Count)", span="4237-4237"];
m1_1958 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'', searchResults[0].Title)", span="4238-4238"];
m1_1959 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''<b>Paris Hilton</b>'', searchResults[1].Title)", span="4239-4239"];
m1_1955 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="SearchResult searchResult = JsonConvert.DeserializeObject<SearchResult>(result.ToString())", span="4225-4225"];
m1_1960 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="4162-4162"];
m1_813 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", span="1727-1727"];
m1_814 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="var dictStore = new Dictionary<DictionaryKeyCast, int>()", span="1730-1730"];
m1_815 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="var i = 0", span="1731-1731"];
m1_817 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="dictStore.Add(new DictionaryKeyCast(i.ToString(CultureInfo.InvariantCulture), i), i)", span="1733-1733"];
m1_823 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="jsonSerializer.Serialize(streamWriter, dictStore)", span="1740-1740"];
m1_816 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="i < 800", span="1731-1731"];
m1_818 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="i++", span="1731-1731"];
m1_819 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="var settings = new JsonSerializerSettings { Formatting = Formatting.Indented }", span="1735-1735"];
m1_820 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="var jsonSerializer = JsonSerializer.Create(settings)", span="1736-1736"];
m1_821 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="var ms = new MemoryStream()", span="1737-1737"];
m1_827 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="var deserialize = jsonSerializer.Deserialize(new StreamReader(ms), typeof(Dictionary<DictionaryKeyCast, int>))", span="1746-1746"];
m1_822 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="var streamWriter = new StreamWriter(ms)", span="1739-1739"];
m1_825 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="1743-1743"];
m1_824 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="streamWriter.Flush()", span="1741-1741"];
m1_826 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="var stopWatch = Stopwatch.StartNew()", span="1745-1745"];
m1_828 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="stopWatch.Stop()", span="1747-1747"];
m1_829 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", span="1727-1727"];
m1_2118 [cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0"];
m1_1497 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="3176-3176"];
m1_1498 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="InterfacePropertyTestClass testClass = new InterfacePropertyTestClass()", span="3178-3178"];
m1_1499 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="testClass.co = new Co()", span="3179-3179"];
m1_1500 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="String strFromTest = JsonConvert.SerializeObject(testClass)", span="3180-3180"];
m1_1501 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass)); }, @''Could not create an instance of type Newtonsoft.Json.Tests.TestObjects.ICo. Type is an interface or abstract class and cannot be instantiated. Path 'co.Name', line 1, position 14.'')", span="3182-3182"];
m1_1502 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="3176-3176"];
m1_135 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m1_2269 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="5080-5080"];
m1_2270 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="List<KVPair<string, string>> kvPairs =\r\n                JsonConvert.DeserializeObject<List<KVPair<string, string>>>(\r\n                    ''[{\''Key\'':\''Two\'',\''Value\'':\''2\''},{\''Key\'':\''One\'',\''Value\'':\''1\''}]'')", span="5082-5084"];
m1_2271 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, kvPairs.Count)", span="5086-5086"];
m1_2272 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Two'', kvPairs[0].Key)", span="5087-5087"];
m1_2273 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''2'', kvPairs[0].Value)", span="5088-5088"];
m1_2274 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''One'', kvPairs[1].Key)", span="5089-5089"];
m1_2275 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''1'', kvPairs[1].Value)", span="5090-5090"];
m1_2276 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="5080-5080"];
m1_3574 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", span="8126-8126"];
m1_3575 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonSerializerTest.cs", label="var actual = JsonConvert.DeserializeObject<MyType>(@''{ ''''MyProperty'''':{''''Key'''':''''Y''''}}'')", span="8128-8128"];
m1_3576 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''X'', actual.MyProperty[''Key''])", span="8129-8129"];
m1_3577 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", span="8126-8126"];
m1_3919 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", span="9094-9094"];
m1_3920 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonSerializerTest.cs", label="return (short)Value;", span="9096-9096"];
m1_3921 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", span="9094-9094"];
m1_2063 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", span="4592-4592"];
m1_2066 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", file="JsonSerializerTest.cs", label="C1 = c1", span="4594-4594"];
m1_2067 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", span="4592-4592"];
m1_756 [cluster="System.Text.RegularExpressions.Regex.ToString()", file="JsonSerializerTest.cs", label="Entry System.Text.RegularExpressions.Regex.ToString()", span="0-0"];
m1_3242 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", span="7367-7367"];
m1_3243 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<ArgumentNullException>(\r\n                () => { JsonConvert.DeserializeObject<double>(null); },\r\n                new[]\r\n                {\r\n                    ''Value cannot be null.'' + Environment.NewLine + ''Parameter name: value'',\r\n                    ''Argument cannot be null.'' + Environment.NewLine + ''Parameter name: value'' // mono\r\n                })", span="7369-7375"];
m1_3244 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", span="7367-7367"];
m1_1926 [cluster="Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", span="31-31"];
m1_1935 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="4127-4127"];
m1_1936 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Dictionary<Person, int> dictionary = new Dictionary<Person, int>()", span="4129-4129"];
m1_1937 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="dictionary.Add(new Person { Name = ''p1'' }, 1)", span="4130-4130"];
m1_1938 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="dictionary.Add(new Person { Name = ''p2'' }, 2)", span="4131-4131"];
m1_1939 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="4133-4133"];
m1_1940 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}'', json)", span="4135-4138"];
m1_1941 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="4127-4127"];
m1_674 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", span="60-60"];
m1_2223 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", span="0-0"];
m1_469 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", span="1165-1165"];
m1_470 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonSerializerTest.cs", label="CommentTestObject o = JsonConvert.DeserializeObject<CommentTestObject>(@''{/* Test */}'')", span="1167-1167"];
m1_471 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, o.A)", span="1168-1168"];
m1_472 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonSerializerTest.cs", label="o = JsonConvert.DeserializeObject<CommentTestObject>(@''{''''A'''': true/* Test */}'')", span="1170-1170"];
m1_473 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, o.A)", span="1171-1171"];
m1_474 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", span="1165-1165"];
m1_1248 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="2681-2681"];
m1_1249 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(StringComparison.CurrentCultureIgnoreCase)", span="2683-2683"];
m1_1250 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''1'', json)", span="2684-2684"];
m1_1251 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="StringComparison s = JsonConvert.DeserializeObject<StringComparison>(json)", span="2686-2686"];
m1_1252 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(StringComparison.CurrentCultureIgnoreCase, s)", span="2687-2687"];
m1_1253 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="2681-2681"];
m1_3204 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", span="7312-7312"];
m1_3205 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="object v = JsonConvert.DeserializeObject<double?>('''')", span="7314-7314"];
m1_3206 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Assert.IsNull(v)", span="7315-7315"];
m1_3207 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="v = JsonConvert.DeserializeObject<char?>('''')", span="7317-7317"];
m1_3208 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Assert.IsNull(v)", span="7318-7318"];
m1_3209 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="v = JsonConvert.DeserializeObject<int?>('''')", span="7320-7320"];
m1_3210 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Assert.IsNull(v)", span="7321-7321"];
m1_3211 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="v = JsonConvert.DeserializeObject<decimal?>('''')", span="7323-7323"];
m1_3212 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Assert.IsNull(v)", span="7324-7324"];
m1_3213 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="v = JsonConvert.DeserializeObject<DateTime?>('''')", span="7326-7326"];
m1_3214 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Assert.IsNull(v)", span="7327-7327"];
m1_3215 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="v = JsonConvert.DeserializeObject<DateTimeOffset?>('''')", span="7329-7329"];
m1_3216 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Assert.IsNull(v)", span="7330-7330"];
m1_3217 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="v = JsonConvert.DeserializeObject<byte[]>('''')", span="7332-7332"];
m1_3218 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Assert.IsNull(v)", span="7333-7333"];
m1_3219 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", span="7312-7312"];
m1_1901 [cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", span="32-32"];
m1_3761 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", span="8664-8664"];
m1_3762 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''MyNullableBool'''': '''''''',\r\n  ''''MyNullableInteger'''': '''''''',\r\n  ''''MyNullableDateTime'''': '''''''',\r\n  ''''MyNullableDateTimeOffset'''': '''''''',\r\n  ''''MyNullableDecimal'''': ''''''''\r\n}''", span="8666-8672"];
m1_3763 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="NullableTestClass c2 = JsonConvert.DeserializeObject<NullableTestClass>(json)", span="8674-8674"];
m1_3764 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="Assert.IsNull(c2.MyNullableBool)", span="8675-8675"];
m1_3765 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="Assert.IsNull(c2.MyNullableInteger)", span="8676-8676"];
m1_3766 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="Assert.IsNull(c2.MyNullableDateTime)", span="8677-8677"];
m1_3767 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="Assert.IsNull(c2.MyNullableDateTimeOffset)", span="8678-8678"];
m1_3768 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="Assert.IsNull(c2.MyNullableDecimal)", span="8679-8679"];
m1_3769 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", span="8664-8664"];
m1_3125 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", span="7153-7153"];
m1_3126 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Widget widget = new Widget { Id = new WidgetId { Value = ''id'' } }", span="7155-7155"];
m1_3127 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(widget)", span="7157-7157"];
m1_3128 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Id'''':{''''Value'''':''''id''''}}'', json)", span="7159-7159"];
m1_3129 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", span="7153-7153"];
m1_1216 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", span="2636-2636"];
m1_1217 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="Stack<object> s = new Stack<object>()", span="2638-2638"];
m1_1218 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="s.Push(1)", span="2639-2639"];
m1_1219 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="s.Push(2)", span="2640-2640"];
m1_1220 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="s.Push(3)", span="2641-2641"];
m1_1221 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(s)", span="2643-2643"];
m1_1222 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[3,2,1]'', json)", span="2644-2644"];
m1_1223 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", span="2636-2636"];
m1_1091 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="2385-2385"];
m1_1092 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="List<DateTime> testDates = new List<DateTime>\r\n            {\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n            }", span="2387-2395"];
m1_1093 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="2397-2397"];
m1_1095 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="s.WriteObject(ms, testDates)", span="2399-2399"];
m1_1099 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(testDates, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="2405-2405"];
m1_1094 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<DateTime>))", span="2398-2398"];
m1_1096 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="2400-2400"];
m1_1097 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="StreamReader sr = new StreamReader(ms)", span="2401-2401"];
m1_1098 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="string expected = sr.ReadToEnd()", span="2403-2403"];
m1_1100 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expected, result)", span="2406-2406"];
m1_1101 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="2385-2385"];
m1_1442 [cluster="Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", span="29-29"];
m1_1649 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="3552-3552"];
m1_1650 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonSerializerTest.cs", label="return ''_name: '' + _name + '', _age: '' + Age + '', Rank: '' + Rank + '', JsonTitle: '' + Title;", span="3554-3554"];
m1_1651 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="3552-3552"];
m1_2991 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", span="6841-6841"];
m1_2992 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="TestObject test = new TestObject(''Test'', new byte[] { 72, 63, 62, 71, 92, 55 })", span="6843-6843"];
m1_2993 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="6845-6845"];
m1_2998 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="serializer.Serialize(jsonWriter, test)", span="6852-6852"];
m1_2994 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="serializer.TypeNameHandling = TypeNameHandling.All", span="6846-6846"];
m1_3003 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="TestObject newObject = (TestObject)serializer.Deserialize(jsonReader)", span="6862-6862"];
m1_2995 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="byte[] objectBytes", span="6848-6848"];
m1_2996 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="MemoryStream stream = new MemoryStream()", span="6849-6849"];
m1_2997 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(new StreamWriter(stream))", span="6850-6850"];
m1_3000 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="objectBytes = stream.ToArray()", span="6855-6855"];
m1_2999 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="jsonWriter.Flush()", span="6853-6853"];
m1_3001 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="MemoryStream stream = new MemoryStream(objectBytes)", span="6858-6858"];
m1_3002 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="JsonReader jsonReader = new JsonTextReader(new StreamReader(stream))", span="6859-6859"];
m1_3004 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Test'', newObject.Name)", span="6864-6864"];
m1_3005 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEquivalent(new byte[] { 72, 63, 62, 71, 92, 55 }, newObject.Data)", span="6865-6865"];
m1_3006 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", span="6841-6841"];
m1_1077 [cluster="Unk.ReadObject", file="JsonSerializerTest.cs", label="Entry Unk.ReadObject", span=""];
m1_1504 [cluster="Newtonsoft.Json.Tests.TestObjects.Co.Co()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Co.Co()", span="27-27"];
m1_2356 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", span="5281-5281"];
m1_2107 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="4730-4730"];
m1_2108 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="return ((IDictionary<string, T>)_innerDictionary).Contains(item);", span="4732-4732"];
m1_2109 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="4730-4730"];
m1_1012 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="2186-2186"];
m1_1013 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="string value = JsonConvert.SerializeObject(new SetOnlyPropertyClass())", span="2188-2188"];
m1_1014 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="SetOnlyPropertyClass c = JsonConvert.DeserializeObject<SetOnlyPropertyClass>(value)", span="2190-2190"];
m1_1015 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c.Field, ''Field'')", span="2192-2192"];
m1_1016 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="2186-2186"];
m1_49 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="754-754"];
m1_2011 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", span="4311-4311"];
m1_261 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", span="627-627"];
m1_262 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="RequiredPropertyConstructorTestClass c1 = new RequiredPropertyConstructorTestClass(null)", span="629-629"];
m1_263 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.SerializeObject(c1),\r\n                ''Cannot write a null value for property 'Name'. Property requires a value. Path ''.'')", span="631-633"];
m1_264 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="RequiredPropertyConstructorTestClass c2 = new RequiredPropertyConstructorTestClass(''Name!'')", span="635-635"];
m1_265 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c2)", span="637-637"];
m1_266 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Name'''':''''Name!''''}'', json)", span="639-639"];
m1_267 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<RequiredPropertyConstructorTestClass>(@''{}''),\r\n                ''Required property 'Name' not found in JSON. Path '', line 1, position 2.'')", span="641-643"];
m1_268 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="RequiredPropertyConstructorTestClass c3 = JsonConvert.DeserializeObject<RequiredPropertyConstructorTestClass>(@''{''''Name'''':''''Name!''''}'')", span="645-645"];
m1_269 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', c3.Name)", span="647-647"];
m1_270 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", span="627-627"];
m1_3358 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", span="7614-7614"];
m1_3359 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="string json = ''{}''", span="7616-7616"];
m1_3360 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="IList<string> errors = new List<string>()", span="7617-7617"];
m1_3362 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="var o = JsonConvert.DeserializeObject<RequiredObject>(json, new JsonSerializerSettings\r\n            {\r\n                Error = error\r\n            })", span="7625-7628"];
m1_3361 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="7619-7623"];
m1_3364 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, errors.Count)", span="7631-7631"];
m1_3365 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Assert.IsTrue(errors[0].StartsWith(''Required property 'NonAttributeProperty' not found in JSON. Path ''''))", span="7632-7632"];
m1_3366 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Assert.IsTrue(errors[1].StartsWith(''Required property 'UnsetProperty' not found in JSON. Path ''''))", span="7633-7633"];
m1_3367 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Assert.IsTrue(errors[2].StartsWith(''Required property 'AllowNullProperty' not found in JSON. Path ''''))", span="7634-7634"];
m1_3368 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Assert.IsTrue(errors[3].StartsWith(''Required property 'AlwaysProperty' not found in JSON. Path ''''))", span="7635-7635"];
m1_3363 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(o)", span="7630-7630"];
m1_3369 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", span="7614-7614"];
m1_3876 [cluster="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.TypeConverterJsonConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.TypeConverterJsonConverter()", span="125-125"];
m1_389 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse()", span="1023-1023"];
m1_390 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse()", span="1023-1023"];
m1_3029 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", span="6915-6915"];
m1_3030 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="ReflectionContractResolver contractResolver = new ReflectionContractResolver()", span="6917-6917"];
m1_3031 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="StaticTestClass c = new StaticTestClass\r\n            {\r\n                x = int.MaxValue\r\n            }", span="6919-6922"];
m1_3034 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = contractResolver\r\n            })", span="6925-6928"];
m1_3036 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="StaticTestClass c2 = JsonConvert.DeserializeObject<StaticTestClass>(@''{\r\n  ''''x'''': -1,\r\n  ''''y'''': -2,\r\n  ''''z'''': -3\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = contractResolver\r\n                })", span="6936-6944"];
m1_3032 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="StaticTestClass.y = 2", span="6923-6923"];
m1_3033 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="StaticTestClass.z = 3", span="6924-6924"];
m1_3035 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''x'''': 2147483647,\r\n  ''''y'''': 2,\r\n  ''''z'''': 3\r\n}'', json)", span="6930-6934"];
m1_3037 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="Assert.AreEqual(-1, c2.x)", span="6946-6946"];
m1_3038 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="Assert.AreEqual(-2, StaticTestClass.y)", span="6947-6947"];
m1_3039 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="Assert.AreEqual(-3, StaticTestClass.z)", span="6948-6948"];
m1_3040 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", span="6915-6915"];
m1_2878 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", span="6566-6566"];
m1_2879 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="6568-6568"];
m1_2880 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", span="6566-6566"];
m1_4120 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableLongTestClass.NullableLongTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableLongTestClass.NullableLongTestClass()", span="9559-9559"];
m1_3196 [cluster="Newtonsoft.Json.Tests.TestObjects.WidgetId1.WidgetId1()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.WidgetId1.WidgetId1()", span="28-28"];
m1_3308 [cluster="Newtonsoft.Json.Tests.TestObjects.MetroPropertyNameResolver.MetroPropertyNameResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MetroPropertyNameResolver.MetroPropertyNameResolver()", span="30-30"];
m1_3951 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestClassConvertable.TestClassConvertable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestClassConvertable.TestClassConvertable()", span="9140-9140"];
m1_1399 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString()", span="912-912"];
m1_1522 [cluster="Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", span="29-29"];
m1_869 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewProperties.SubWithoutContractNewProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewProperties.SubWithoutContractNewProperties()", span="1845-1845"];
m1_1317 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", span="2796-2796"];
m1_1318 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2798-2798"];
m1_1319 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2799-2799"];
m1_1320 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat,\r\n            })", span="2801-2804"];
m1_1321 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2805-2805"];
m1_1322 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="var m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.None\r\n            })", span="2807-2810"];
m1_1323 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(1970, 1, 1), m2.DefaultConverter)", span="2812-2812"];
m1_1324 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(1970, 1, 1), m2.MemberConverter)", span="2813-2813"];
m1_1325 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", span="2796-2796"];
m1_3744 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", span="8610-8610"];
m1_3745 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="string json = @''[\r\n  ''''NaN'''',\r\n  ''''Infinity'''',\r\n  ''''-Infinity''''\r\n]''", span="8612-8616"];
m1_3746 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="IList<float> floats = JsonConvert.DeserializeObject<IList<float>>(json)", span="8618-8618"];
m1_3750 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="IList<double> doubles = JsonConvert.DeserializeObject<IList<double>>(json)", span="8623-8623"];
m1_3747 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Assert.AreEqual(float.NaN, floats[0])", span="8619-8619"];
m1_3748 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Assert.AreEqual(float.PositiveInfinity, floats[1])", span="8620-8620"];
m1_3749 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Assert.AreEqual(float.NegativeInfinity, floats[2])", span="8621-8621"];
m1_3751 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Assert.AreEqual(float.NaN, doubles[0])", span="8624-8624"];
m1_3752 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Assert.AreEqual(float.PositiveInfinity, doubles[1])", span="8625-8625"];
m1_3753 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Assert.AreEqual(float.NegativeInfinity, doubles[2])", span="8626-8626"];
m1_3754 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", span="8610-8610"];
m1_2133 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="4768-4768"];
m1_2134 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonSerializerTest.cs", label="return _innerDictionary.Remove(key);", span="4770-4770"];
m1_2135 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="4768-4768"];
m1_468 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="155-155"];
m1_2739 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="6145-6145"];
m1_2740 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs", label="ComplexItem i = new ComplexItem()", span="6147-6147"];
m1_2741 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(i, Formatting.Indented)", span="6149-6149"];
m1_2742 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': null\r\n}'', json)", span="6151-6153"];
m1_2743 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="6145-6145"];
m1_837 [cluster="System.IO.StreamWriter.Flush()", file="JsonSerializerTest.cs", label="Entry System.IO.StreamWriter.Flush()", span="0-0"];
m1_1797 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", span="3869-3869"];
m1_1798 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonSerializerTest.cs", label="string json = @''[]''", span="3871-3871"];
m1_1799 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => { JsonConvert.DeserializeObject<double>(json); },\r\n                @''Unexpected character encountered while parsing value: [. Path '', line 1, position 1.'')", span="3873-3875"];
m1_1800 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", span="3869-3869"];
m1_3274 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", span="7432-7432"];
m1_3275 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="NullableDateTimeTestClass c =\r\n                JsonConvert.DeserializeObject<NullableDateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="7434-7440"];
m1_3276 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="7442-7442"];
m1_3277 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="7443-7443"];
m1_3278 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Pre'', c.PreField)", span="7444-7444"];
m1_3279 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Post'', c.PostField)", span="7445-7445"];
m1_3280 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="NullableDateTimeTestClass c2 =\r\n                JsonConvert.DeserializeObject<NullableDateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':null,''''DateTimeOffsetField'''':null,''''PostField'''':''''Post''''}'')", span="7447-7449"];
m1_3281 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, c2.DateTimeField)", span="7451-7451"];
m1_3282 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, c2.DateTimeOffsetField)", span="7452-7452"];
m1_3283 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Pre'', c2.PreField)", span="7453-7453"];
m1_3284 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Post'', c2.PostField)", span="7454-7454"];
m1_3285 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", span="7432-7432"];
m1_362 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", span="946-946"];
m1_363 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[''''2000-01-01T01:01:01+00:00'''']''))", span="948-948"];
m1_364 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateParseHandling.DateTime, reader.DateParseHandling)", span="949-949"];
m1_368 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="serializer.Populate(reader, l)", span="955-955"];
m1_371 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateParseHandling.DateTime, reader.DateParseHandling)", span="960-960"];
m1_365 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="951-951"];
m1_366 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="serializer.DateParseHandling = DateParseHandling.DateTimeOffset", span="952-952"];
m1_367 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="IList<object> l = new List<object>()", span="954-954"];
m1_369 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), l[0].GetType())", span="957-957"];
m1_370 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero), l[0])", span="958-958"];
m1_372 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", span="946-946"];
m1_1025 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", span="27-27"];
m1_2392 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="5395-5395"];
m1_2393 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="5397-5397"];
m1_2394 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="5395-5395"];
m1_2084 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", span="4629-4629"];
m1_4095 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", span="9520-9520"];
m1_4096 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonException>(() => JsonConvert.SerializeObject(new ErroringTestClass()), ''Error creating 'Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+ErroringJsonConverter'.'')", span="9522-9522"];
m1_4097 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", span="9520-9520"];
m1_152 [cluster="Unk.IsNull", file="JsonSerializerTest.cs", label="Entry Unk.IsNull", span=""];
m1_3171 [cluster="Newtonsoft.Json.Tests.TestObjects.Item.Item()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Item.Item()", span="29-29"];
m1_4151 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9648-9648"];
m1_4152 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="9650-9650"];
m1_4153 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9648-9648"];
m1_1297 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", span="2763-2763"];
m1_1298 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2765-2765"];
m1_1299 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2766-2766"];
m1_1303 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2773-2773"];
m1_1304 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2774-2774"];
m1_1300 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(m1)", span="2768-2768"];
m1_1301 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':''''1970-01-01T00:00:00Z'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2769-2769"];
m1_1302 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="2771-2771"];
m1_1305 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", span="2763-2763"];
m1_3943 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", span="9134-9134"];
m1_3944 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="9136-9136"];
m1_3945 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", span="9134-9134"];
m1_2111 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="4735-4735"];
m1_2112 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonSerializerTest.cs", label="return _innerDictionary.ContainsKey(key);", span="4737-4737"];
m1_2113 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="4735-4735"];
m1_540 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JsonSerializerTest.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m1_2383 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="5381-5381"];
m1_2384 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Pos p = (Pos)value", span="5383-5383"];
m1_2386 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="writer.WriteRawValue(String.Format(''new Pos({0},{1})'', p.X, p.Y))", span="5387-5387"];
m1_2387 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="writer.WriteNull()", span="5391-5391"];
m1_2385 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="p != null", span="5385-5385"];
m1_2388 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="5381-5381"];
m1_683 [cluster="Newtonsoft.Json.Tests.TestObjects.Ratio.Ratio(int, int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Ratio.Ratio(int, int)", span="37-37"];
m1_3116 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertableIntTestClass.ConvertableIntTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertableIntTestClass.ConvertableIntTestClass()", span="7113-7113"];
m1_3322 [cluster="System.Enum.Parse(System.Type, string)", file="JsonSerializerTest.cs", label="Entry System.Enum.Parse(System.Type, string)", span="0-0"];
m1_538 [cluster="Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", span="38-38"];
m1_3117 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", span="1722-1722"];
m1_1776 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="3837-3837"];
m1_1777 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs", label="string json = @''[]''", span="3839-3839"];
m1_1778 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Person>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.TestObjects.Person' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3841-3843"];
m1_1779 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="3837-3837"];
m1_2538 [cluster="System.Collections.Specialized.StringDictionary.StringDictionary()", file="JsonSerializerTest.cs", label="Entry System.Collections.Specialized.StringDictionary.StringDictionary()", span="0-0"];
m1_377 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", span="975-975"];
m1_378 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''IsTransient'''':true}'', JsonConvert.SerializeObject(new ChildClass { IsTransient = true }))", span="977-977"];
m1_379 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonSerializerTest.cs", label="var childClass = JsonConvert.DeserializeObject<ChildClass>(@''{''''IsTransient'''':true}'')", span="979-979"];
m1_380 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, childClass.IsTransient)", span="980-980"];
m1_381 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", span="975-975"];
m1_3374 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", span="7639-7639"];
m1_3375 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="string json = ''{'NonAttributeProperty':null,'UnsetProperty':null,'AllowNullProperty':null,'AlwaysProperty':null}''", span="7641-7641"];
m1_3376 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="IList<string> errors = new List<string>()", span="7642-7642"];
m1_3378 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="var o = JsonConvert.DeserializeObject<RequiredObject>(json, new JsonSerializerSettings\r\n            {\r\n                Error = error\r\n            })", span="7650-7653"];
m1_3377 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="7644-7648"];
m1_3380 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, errors.Count)", span="7656-7656"];
m1_3381 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="Assert.IsTrue(errors[0].StartsWith(''Required property 'NonAttributeProperty' expects a value but got null. Path ''''))", span="7657-7657"];
m1_3382 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="Assert.IsTrue(errors[1].StartsWith(''Required property 'UnsetProperty' expects a value but got null. Path ''''))", span="7658-7658"];
m1_3383 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="Assert.IsTrue(errors[2].StartsWith(''Required property 'AlwaysProperty' expects a value but got null. Path ''''))", span="7659-7659"];
m1_3379 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(o)", span="7655-7655"];
m1_3384 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", span="7639-7639"];
m1_1103 [cluster="System.IO.StreamReader.ReadToEnd()", file="JsonSerializerTest.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m1_703 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", span="0-0"];
m1_3471 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", span="7867-7867"];
m1_3472 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs", label="var testObj = new PersonSerializable() { Name = ''John Doe'', Age = 28 }", span="7869-7869"];
m1_3473 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs", label="var objDeserialized = SerializeAndDeserialize<PersonSerializable>(testObj)", span="7870-7870"];
m1_3474 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testObj.Name, objDeserialized.Name)", span="7872-7872"];
m1_3475 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, objDeserialized.Age)", span="7873-7873"];
m1_3476 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", span="7867-7867"];
m1_1764 [cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", span="36-36"];
m1_1975 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="4275-4275"];
m1_1976 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonSerializerTest.cs", label="Dictionary = new Dictionary<string, string>\r\n                {\r\n                    { ''existing'', ''yup'' }\r\n                }", span="4277-4280"];
m1_1977 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonSerializerTest.cs", label="List = new List<string>\r\n                {\r\n                    ''existing''\r\n                }", span="4281-4284"];
m1_1978 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="4275-4275"];
m1_2729 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="6120-6120"];
m1_2730 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="EnumerableClass c = new EnumerableClass\r\n            {\r\n                Enumerable = new List<string> { ''One'', ''Two'', ''Three'' }\r\n            }", span="6122-6125"];
m1_2731 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="6127-6127"];
m1_2732 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Enumerable'''': [\r\n    ''''One'''',\r\n    ''''Two'''',\r\n    ''''Three''''\r\n  ]\r\n}'', json)", span="6129-6135"];
m1_2733 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="EnumerableClass c2 = JsonConvert.DeserializeObject<EnumerableClass>(json)", span="6137-6137"];
m1_2734 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''One'', c2.Enumerable.ElementAt(0))", span="6139-6139"];
m1_2735 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Two'', c2.Enumerable.ElementAt(1))", span="6140-6140"];
m1_2736 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Three'', c2.Enumerable.ElementAt(2))", span="6141-6141"];
m1_2737 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="6120-6120"];
m1_2265 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", span="5072-5072"];
m1_2266 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonSerializerTest.cs", label="Key = k", span="5074-5074"];
m1_2267 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonSerializerTest.cs", label="Value = v", span="5075-5075"];
m1_2268 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", span="5072-5072"];
m1_3132 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", span="7163-7163"];
m1_3133 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="string json = @''{''''Id'''':{''''Value'''':''''id''''}}''", span="7165-7165"];
m1_3134 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Widget w = JsonConvert.DeserializeObject<Widget>(json)", span="7167-7167"];
m1_3135 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new WidgetId { Value = ''id'' }, w.Id)", span="7169-7169"];
m1_3136 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new WidgetId { Value = ''id'' }, w.Id.Value)", span="7170-7170"];
m1_3137 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''id'', w.Id.Value.Value)", span="7171-7171"];
m1_3138 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", span="7163-7163"];
m1_3103 [cluster="Newtonsoft.Json.Tests.TestObjects.Bb.Bb()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Bb.Bb()", span="27-27"];
m1_2976 [cluster="System.IO.StringWriter.ToString()", file="JsonSerializerTest.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m1_1308 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", span="2778-2778"];
m1_1309 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2780-2780"];
m1_1310 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2781-2781"];
m1_1314 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2791-2791"];
m1_1315 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2792-2792"];
m1_1311 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="2783-2786"];
m1_1312 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2787-2787"];
m1_1313 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="2789-2789"];
m1_1316 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", span="2778-2778"];
m1_3197 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", span="7300-7300"];
m1_3198 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs", label="var serializer = JsonSerializer.Create(new JsonSerializerSettings())", span="7302-7302"];
m1_3199 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs", label="var dict = serializer.Deserialize<Dictionary<string, string>>(new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}'')))", span="7303-7303"];
m1_3201 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs", label="var dict2 = serializer.Deserialize<Dictionary<string, object>>(reader)", span="7306-7306"];
m1_3200 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs", label="var reader = new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}''))", span="7305-7305"];
m1_3202 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dict[''k1''], dict2[''k1''])", span="7308-7308"];
m1_3203 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", span="7300-7300"];
m1_2479 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", span="5538-5538"];
m1_159 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", span="430-430"];
m1_160 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", file="JsonSerializerTest.cs", label="IgnoredProperty p = JsonConvert.DeserializeObject<IgnoredProperty>(''{'StringProp1':[1,2,3],'StringProp2':{}}'')", span="432-432"];
m1_161 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", file="JsonSerializerTest.cs", label="Assert.IsNull(p.StringProp1)", span="433-433"];
m1_162 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", file="JsonSerializerTest.cs", label="Assert.IsNull(p.StringProp2)", span="434-434"];
m1_163 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", span="430-430"];
m1_918 [cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="114-114"];
m1_870 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", span="2002-2002"];
m1_901 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="2004-2004"];
m1_902 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(o.GetType())", span="2005-2005"];
m1_903 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="s.WriteObject(ms, o)", span="2006-2006"];
m1_907 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="JObject jsonNetJson = JObject.Parse(JsonConvert.SerializeObject(o))", span="2012-2012"];
m1_904 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="var data = ms.ToArray()", span="2008-2008"];
m1_905 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="JObject dataContractJson = JObject.Parse(Encoding.UTF8.GetString(data, 0, data.Length))", span="2009-2009"];
m1_906 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="dataContractJson = new JObject(dataContractJson.Properties().OrderBy(p => p.Name))", span="2010-2010"];
m1_909 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="Assert.AreEqual(dataContractJson.Count, jsonNetJson.Count)", span="2019-2019"];
m1_910 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label=dataContractJson, span="2020-2020"];
m1_908 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="jsonNetJson = new JObject(jsonNetJson.Properties().OrderBy(p => p.Name))", span="2013-2013"];
m1_911 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="Assert.IsTrue(JToken.DeepEquals(jsonNetJson[property.Key], property.Value), ''Property not equal: '' + property.Key)", span="2022-2022"];
m1_912 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="return jsonNetJson.ToString();", span="2025-2025"];
m1_913 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", span="2002-2002"];
m1_4023 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", span="9318-9318"];
m1_4024 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs", label="DateTimeOffset dt = new DateTimeOffset(2000, 12, 22, 0, 0, 0, TimeSpan.Zero)", span="9320-9320"];
m1_4025 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd'!'K''", span="9321-9321"];
m1_4027 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new Dictionary<DateTimeOffset, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="9328-9331"];
m1_4030 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="9339-9339"];
m1_4026 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Formatting = Formatting.Indented\r\n            }", span="9322-9326"];
m1_4029 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs", label="Dictionary<DateTimeOffset, string> d = JsonConvert.DeserializeObject<Dictionary<DateTimeOffset, string>>(json, settings)", span="9337-9337"];
m1_4028 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22!+00:00'''': ''''123''''\r\n}'', json)", span="9333-9335"];
m1_4031 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", span="9318-9318"];
m1_3389 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", span="7663-7663"];
m1_3390 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="IList<string> errors = new List<string>()", span="7665-7665"];
m1_3391 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="7667-7671"];
m1_3394 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, errors.Count)", span="7684-7684"];
m1_3395 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Cannot write a null value for property 'NonAttributeProperty'. Property requires a value. Path ''.'', errors[0])", span="7685-7685"];
m1_3396 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Cannot write a null value for property 'UnsetProperty'. Property requires a value. Path ''.'', errors[1])", span="7686-7686"];
m1_3397 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Cannot write a null value for property 'AlwaysProperty'. Property requires a value. Path ''.'', errors[2])", span="7687-7687"];
m1_3392 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new RequiredObject(), new JsonSerializerSettings\r\n            {\r\n                Error = error,\r\n                Formatting = Formatting.Indented\r\n            })", span="7673-7677"];
m1_3393 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''DefaultProperty'''': null,\r\n  ''''AllowNullProperty'''': null\r\n}'', json)", span="7679-7682"];
m1_3398 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", span="7663-7663"];
m1_1160 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="2521-2521"];
m1_1161 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="string json = ''{foo:'hello',bar:[1,2,3]}''", span="2523-2523"];
m1_1162 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="2524-2524"];
m1_1163 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''hello'', wibble.Foo)", span="2525-2525"];
m1_1164 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, wibble.Bar.Count)", span="2527-2527"];
m1_1165 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="2528-2528"];
m1_1166 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, wibble.Bar[1])", span="2529-2529"];
m1_1167 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, wibble.Bar[2])", span="2530-2530"];
m1_1168 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, wibble.Bar[3])", span="2531-2531"];
m1_1169 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="2521-2521"];
m1_307 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", span="769-769"];
m1_308 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", file="JsonSerializerTest.cs", label="this.Sections = new HashSet<FaqSection>()", span="771-771"];
m1_309 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", span="769-769"];
m1_2524 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="799-799"];
m1_841 [cluster="System.Diagnostics.Stopwatch.Stop()", file="JsonSerializerTest.cs", label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0"];
m1_1371 [cluster="Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", span="30-30"];
m1_2221 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", span="0-0"];
m1_3640 [cluster="System.Tuple.Create<T1>(T1)", file="JsonSerializerTest.cs", label="Entry System.Tuple.Create<T1>(T1)", span="0-0"];
m1_382 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClass.ChildClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClass.ChildClass()", span="969-969"];
m1_175 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="397-397"];
m1_2183 [cluster="System.Runtime.Serialization.SerializationInfo.GetChar(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetChar(string)", span="0-0"];
m1_1116 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="2441-2441"];
m1_1117 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Dictionary<int, int> values = new Dictionary<int, int>()", span="2443-2443"];
m1_1118 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="values.Add(-5, 6)", span="2444-2444"];
m1_1119 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="values.Add(int.MinValue, int.MaxValue)", span="2445-2445"];
m1_1120 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(values)", span="2447-2447"];
m1_1123 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(values, newValues)", span="2453-2453"];
m1_1121 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''-5'''':6,''''-2147483648'''':2147483647}'', json)", span="2449-2449"];
m1_1122 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Dictionary<int, int> newValues = JsonConvert.DeserializeObject<Dictionary<int, int>>(json)", span="2451-2451"];
m1_1124 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="2441-2441"];
m1_2409 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", span="5427-5427"];
m1_2410 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="return objectType == typeof(PosDouble);", span="5429-5429"];
m1_2411 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", span="5427-5427"];
m1_2509 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m1_3506 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTestClass.IgnoreDataMemberTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTestClass.IgnoreDataMemberTestClass()", span="7955-7955"];
m1_164 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", span="450-450"];
m1_165 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.SerializeObject(new Binding_DisallowNull()); }, ''Cannot write a null value for property 'RequiredProperty'. Property requires a non-null value. Path ''.'')", span="452-452"];
m1_166 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", span="450-450"];
m1_3854 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", span="8969-8969"];
m1_3855 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var consoleWriter = new ConsoleWriter()", span="8971-8971"];
m1_3856 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var options = new JsonSerializerSettings\r\n            {\r\n                Converters = new JsonConverterCollection { new TypeConverterJsonConverter() },\r\n                //TypeNameHandling = TypeNameHandling.All\r\n            }", span="8974-8978"];
m1_3857 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var text1 = JsonConvert.SerializeObject(consoleWriter, Formatting.Indented, options)", span="8984-8984"];
m1_3862 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="dict2.Add(consoleWriter, ''Console'')", span="8995-8995"];
m1_3868 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="dict3.Add(''Console'', consoleWriter)", span="9010-9010"];
m1_3859 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var restoredWriter = JsonConvert.DeserializeObject<IMyInterface>(text1, options)", span="8987-8987"];
m1_3863 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var text2 = JsonConvert.SerializeObject(dict2, Formatting.Indented, options)", span="8997-8997"];
m1_3865 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var restoredObject = JsonConvert.DeserializeObject<Dictionary<IMyInterface, string>>(text2, options)", span="9002-9002"];
m1_3869 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var text3 = JsonConvert.SerializeObject(dict3, Formatting.Indented, options)", span="9012-9012"];
m1_3871 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var restoredDict2 = JsonConvert.DeserializeObject<Dictionary<string, IMyInterface>>(text3, options)", span="9017-9017"];
m1_3858 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''''''Console Writer'''''', text1)", span="8985-8985"];
m1_3860 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ConsoleWriter'', restoredWriter.PrintTest())", span="8988-8988"];
m1_3861 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var dict2 = new Dictionary<IMyInterface, string>()", span="8994-8994"];
m1_3864 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Console Writer'''': ''''Console''''\r\n}'', text2)", span="8998-9000"];
m1_3866 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ConsoleWriter'', restoredObject.First().Key.PrintTest())", span="9003-9003"];
m1_3867 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var dict3 = new Dictionary<string, IMyInterface>()", span="9009-9009"];
m1_3870 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Console'''': ''''Console Writer''''\r\n}'', text3)", span="9013-9015"];
m1_3872 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ConsoleWriter'', restoredDict2.First().Value.PrintTest())", span="9018-9018"];
m1_3873 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", span="8969-8969"];
m1_1961 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="4243-4243"];
m1_1962 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="PersonPropertyClass personPropertyClass = new PersonPropertyClass()", span="4245-4245"];
m1_1963 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="WagePerson wagePerson = (WagePerson)personPropertyClass.Person", span="4246-4246"];
m1_1969 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(personPropertyClass, Formatting.Indented)", span="4254-4254"];
m1_1964 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="wagePerson.BirthDate = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="4248-4248"];
m1_1965 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="wagePerson.Department = ''McDees''", span="4249-4249"];
m1_1966 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="wagePerson.HourlyWage = 12.50m", span="4250-4250"];
m1_1967 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="wagePerson.LastModified = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="4251-4251"];
m1_1968 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="wagePerson.Name = ''Jim Bob''", span="4252-4252"];
m1_1972 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="Assert.AreEqual(wagePerson.HourlyWage, ((WagePerson)newPersonPropertyClass.Person).HourlyWage)", span="4267-4267"];
m1_1970 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(\r\n                @''{\r\n  ''''Person'''': {\r\n    ''''HourlyWage'''': 12.50,\r\n    ''''Name'''': ''''Jim Bob'''',\r\n    ''''BirthDate'''': ''''2000-11-29T23:59:59Z'''',\r\n    ''''LastModified'''': ''''2000-11-29T23:59:59Z''''\r\n  }\r\n}'',\r\n                json)", span="4255-4264"];
m1_1971 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="PersonPropertyClass newPersonPropertyClass = JsonConvert.DeserializeObject<PersonPropertyClass>(json)", span="4266-4266"];
m1_1973 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="4243-4243"];
m1_1536 [cluster="Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", span="29-29"];
m1_1364 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="2885-2885"];
m1_1365 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass();\r\n                JsonConvert.SerializeObject(c);\r\n            }, ''Unexpected value when converting date. Expected DateTime or DateTimeOffset, got Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.'')", span="2887-2891"];
m1_1366 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="2885-2885"];
m1_2026 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", span="4432-4432"];
m1_2027 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonSerializerTest.cs", label="string json = ''{'$id':'1',key1:'value1',key2:'value2',key3:'value3'}''", span="4434-4434"];
m1_2028 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Default\r\n            }), ''Cannot preserve reference to readonly dictionary, or dictionary created from a non-default constructor: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+DictionaryWithNoDefaultConstructor. Path 'key1', line 1, position 16.'')", span="4436-4440"];
m1_2029 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", span="4432-4432"];
m1_4092 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.CanConvert(System.Type)", span="9508-9508"];
m1_4093 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="9510-9510"];
m1_4094 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.CanConvert(System.Type)", span="9508-9508"];
m1_1032 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="2295-2295"];
m1_1033 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="string jsonText = @''{\r\n'''''''':'''''''',\r\n''''label'''': [\r\n       [''''SomeName'''',6]\r\n],\r\n''''torrents'''': [\r\n       [''''192D99A5C943555CB7F00A852821CF6D6DB3008A'''',201,''''filename.avi'''',178311826,1000,178311826,72815250,408,1603,7,121430,''''NameOfLabelPrevioslyDefined'''',3,6,0,8,128954,-1,0],\r\n],\r\n''''torrentc'''': ''''1816000723''''\r\n}''", span="2297-2306"];
m1_1034 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="JObject o = (JObject)JsonConvert.DeserializeObject(jsonText)", span="2308-2308"];
m1_1035 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, o.Children().Count())", span="2309-2309"];
m1_1036 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="JToken torrentsArray = (JToken)o[''torrents'']", span="2311-2311"];
m1_1037 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="JToken nestedTorrentsArray = (JToken)torrentsArray[0]", span="2312-2312"];
m1_1038 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(nestedTorrentsArray.Children().Count(), 19)", span="2313-2313"];
m1_1039 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="2295-2295"];
m1_3652 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="732-732"];
m1_421 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", span="1088-1088"];
m1_422 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs", label="var input = new ResponseWithNewGenericProperty<List<int>>()\r\n            {\r\n                Message = ''More complex case - generic list of int'',\r\n                Data = Enumerable.Range(50, 70).ToList(),\r\n                Result = ''This should be fine too''\r\n            }", span="1090-1095"];
m1_423 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(input)", span="1097-1097"];
m1_425 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(input.Data, deserialized.Data)", span="1100-1100"];
m1_426 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Message, deserialized.Message)", span="1101-1101"];
m1_427 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Result, deserialized.Result)", span="1102-1102"];
m1_424 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs", label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericProperty<List<int>>>(json)", span="1098-1098"];
m1_428 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", span="1088-1088"];
m1_2136 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m1_2713 [cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", span="9739-9739"];
m1_4182 [cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", file="JsonSerializerTest.cs", label="Value = val", span="9741-9741"];
m1_4183 [cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", span="9739-9739"];
m1_1579 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", span="3363-3363"];
m1_1580 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="SubKlass i = new SubKlass(''my subprop'')", span="3365-3365"];
m1_1581 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="i.SuperProp = ''overrided superprop''", span="3366-3366"];
m1_1582 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(i, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="3368-3371"];
m1_1583 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''$id'''':''''1'''',''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="3373-3373"];
m1_1584 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="3375-3378"];
m1_1585 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="string newJson = JsonConvert.SerializeObject(ii, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="3380-3383"];
m1_1586 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''$id'''':''''1'''',''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="3384-3384"];
m1_1587 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", span="3363-3363"];
m1_2187 [cluster="System.Runtime.Serialization.SerializationInfo.GetInt64(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetInt64(string)", span="0-0"];
m1_3602 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", span="8212-8212"];
m1_3603 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs", label="string json = @''[\r\n        9000000000000000000000000000000000000000000000000\r\n      ]''", span="8214-8216"];
m1_3604 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs", label="var l = JsonConvert.DeserializeObject<IReadOnlyList<BigInteger>>(json)", span="8218-8218"];
m1_3605 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs", label="BigInteger nineQuindecillion = l[0]", span="8220-8220"];
m1_3606 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs", label="Assert.AreEqual(BigInteger.Parse(''9000000000000000000000000000000000000000000000000''), nineQuindecillion)", span="8223-8223"];
m1_3607 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", span="8212-8212"];
m1_3254 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", span="7391-7391"];
m1_3255 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs", label="string jsonIsoText =\r\n                @''{''''Value'''':''''2012-02-25T19:55:50.6095676+13:00''''}''", span="7393-7394"];
m1_3256 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs", label="DateTimeWrapper c = JsonConvert.DeserializeObject<DateTimeWrapper>(jsonIsoText, new IsoDateTimeConverter())", span="7396-7396"];
m1_3257 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateTimeKind.Local, c.Value.Kind)", span="7397-7397"];
m1_3258 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", span="7391-7391"];
m1_70 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_BadString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_BadString()", span="273-273"];
m1_71 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_BadString()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => JsonConvert.DeserializeObject<IList<bool>>(@''['pie']''),\r\n                @''Could not convert string to boolean: pie. Path '[0]', line 1, position 6.'')", span="275-277"];
m1_72 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_BadString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_BadString()", span="273-273"];
m1_3399 [cluster="Newtonsoft.Json.Tests.TestObjects.RequiredObject.RequiredObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredObject.RequiredObject()", span="28-28"];
m1_475 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", span="1175-1175"];
m1_476 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="1177-1177"];
m1_477 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="1179-1179"];
m1_478 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.Binder = customBinder", span="1180-1180"];
m1_479 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(customBinder, serializer.Binder)", span="1181-1181"];
m1_480 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.CheckAdditionalContent = true", span="1183-1183"];
m1_481 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, serializer.CheckAdditionalContent)", span="1184-1184"];
m1_482 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="1186-1186"];
m1_483 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, serializer.ConstructorHandling)", span="1187-1187"];
m1_484 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.Context = new StreamingContext(StreamingContextStates.Other)", span="1190-1190"];
m1_485 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), serializer.Context)", span="1191-1191"];
m1_487 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.ContractResolver = resolver", span="1195-1195"];
m1_488 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(resolver, serializer.ContractResolver)", span="1196-1196"];
m1_489 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.Converters.Add(new StringEnumConverter())", span="1198-1198"];
m1_490 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, serializer.Converters.Count)", span="1199-1199"];
m1_491 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.Culture = new CultureInfo(''en-nz'')", span="1201-1201"];
m1_492 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''en-NZ'', serializer.Culture.ToString())", span="1202-1202"];
m1_493 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.EqualityComparer = EqualityComparer<object>.Default", span="1204-1204"];
m1_494 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(EqualityComparer<object>.Default, serializer.EqualityComparer)", span="1205-1205"];
m1_495 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="1207-1207"];
m1_496 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, serializer.DateFormatHandling)", span="1208-1208"];
m1_497 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.DateFormatString = ''yyyy''", span="1210-1210"];
m1_498 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''yyyy'', serializer.DateFormatString)", span="1211-1211"];
m1_499 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.DateParseHandling = DateParseHandling.None", span="1213-1213"];
m1_500 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateParseHandling.None, serializer.DateParseHandling)", span="1214-1214"];
m1_501 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="1216-1216"];
m1_502 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateTimeZoneHandling.Utc, serializer.DateTimeZoneHandling)", span="1217-1217"];
m1_503 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="1219-1219"];
m1_504 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, serializer.DefaultValueHandling)", span="1220-1220"];
m1_505 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.FloatFormatHandling = FloatFormatHandling.Symbol", span="1222-1222"];
m1_506 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FloatFormatHandling.Symbol, serializer.FloatFormatHandling)", span="1223-1223"];
m1_507 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.FloatParseHandling = FloatParseHandling.Decimal", span="1225-1225"];
m1_508 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FloatParseHandling.Decimal, serializer.FloatParseHandling)", span="1226-1226"];
m1_509 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.Formatting = Formatting.Indented", span="1228-1228"];
m1_510 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(Formatting.Indented, serializer.Formatting)", span="1229-1229"];
m1_511 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.MaxDepth = 9001", span="1231-1231"];
m1_512 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(9001, serializer.MaxDepth)", span="1232-1232"];
m1_513 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.MissingMemberHandling = MissingMemberHandling.Error", span="1234-1234"];
m1_514 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(MissingMemberHandling.Error, serializer.MissingMemberHandling)", span="1235-1235"];
m1_515 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.NullValueHandling = NullValueHandling.Ignore", span="1237-1237"];
m1_516 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(NullValueHandling.Ignore, serializer.NullValueHandling)", span="1238-1238"];
m1_517 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.ObjectCreationHandling = ObjectCreationHandling.Replace", span="1240-1240"];
m1_518 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ObjectCreationHandling.Replace, serializer.ObjectCreationHandling)", span="1241-1241"];
m1_519 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.PreserveReferencesHandling = PreserveReferencesHandling.All", span="1243-1243"];
m1_520 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(PreserveReferencesHandling.All, serializer.PreserveReferencesHandling)", span="1244-1244"];
m1_521 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="1246-1246"];
m1_522 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ReferenceLoopHandling.Ignore, serializer.ReferenceLoopHandling)", span="1247-1247"];
m1_524 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.ReferenceResolver = referenceResolver", span="1250-1250"];
m1_525 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(referenceResolver, serializer.ReferenceResolver)", span="1251-1251"];
m1_526 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="1253-1253"];
m1_527 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, serializer.StringEscapeHandling)", span="1254-1254"];
m1_529 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.TraceWriter = traceWriter", span="1257-1257"];
m1_530 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(traceWriter, serializer.TraceWriter)", span="1258-1258"];
m1_531 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="1261-1261"];
m1_532 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FormatterAssemblyStyle.Full, serializer.TypeNameAssemblyFormat)", span="1262-1262"];
m1_533 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.TypeNameHandling = TypeNameHandling.All", span="1265-1265"];
m1_534 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TypeNameHandling.All, serializer.TypeNameHandling)", span="1266-1266"];
m1_486 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="1194-1194"];
m1_523 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="1249-1249"];
m1_528 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="1256-1256"];
m1_535 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", span="1175-1175"];
m1_702 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0"];
m1_2697 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="6069-6069"];
m1_2698 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="Response response = new Response\r\n            {\r\n                Name = ''Success'',\r\n                Data = new JObject(new JProperty(''First'', ''Value1''), new JProperty(''Second'', ''Value2''))\r\n            }", span="6071-6075"];
m1_2699 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(response, Formatting.Indented)", span="6077-6077"];
m1_2702 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="Assert.IsTrue(deserializedResponse.Data.DeepEquals(response.Data))", span="6082-6082"];
m1_2700 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="Response deserializedResponse = JsonConvert.DeserializeObject<Response>(json)", span="6079-6079"];
m1_2701 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Success'', deserializedResponse.Name)", span="6081-6081"];
m1_2703 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="6069-6069"];
m1_2744 [cluster="Newtonsoft.Json.Tests.Serialization.ComplexItem.ComplexItem()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ComplexItem.ComplexItem()", span="9842-9842"];
m1_2670 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5987-5987"];
m1_2671 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_name = info.GetString(''Name'')", span="5989-5989"];
m1_2672 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5987-5987"];
m1_1942 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="4142-4142"];
m1_1943 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="string json =\r\n                    @''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}''", span="4146-4150"];
m1_1944 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Dictionary<Person, int>>(json)", span="4152-4152"];
m1_1945 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Assert.Fail()", span="4153-4153"];
m1_1946 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label=JsonSerializationException, span="4155-4155"];
m1_1947 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Assert.IsTrue(ex.Message.StartsWith(''Could not convert string 'Newtonsoft.Json.Tests.TestObjects.Person' to dictionary key type 'Newtonsoft.Json.Tests.TestObjects.Person'. Create a TypeConverter to convert from the string to the key type object. Path '['Newtonsoft.Json.Tests.TestObjects.Person']'''))", span="4157-4157"];
m1_1948 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="4142-4142"];
m1_3668 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", span="8428-8428"];
m1_3669 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs", label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="8430-8434"];
m1_3670 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = @''yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffK''\r\n            })", span="8436-8439"];
m1_3671 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  ''''2000-12-12T12:12:12.000Z'''',\r\n  ''''2000-12-12T12:12:12.000+01:00''''\r\n]'', json)", span="8441-8444"];
m1_3672 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", span="8428-8428"];
m1_2718 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="6103-6103"];
m1_2719 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs", label="PublicConstructorOverridenByJsonConstructor c = JsonConvert.DeserializeObject<PublicConstructorOverridenByJsonConstructor>(''{Value:'value!'}'')", span="6105-6105"];
m1_2720 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Public Parameterized'', c.Constructor)", span="6106-6106"];
m1_2721 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value!'', c.Value)", span="6107-6107"];
m1_2722 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="6103-6103"];
m1_3913 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", span="9084-9084"];
m1_3914 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="9086-9086"];
m1_3915 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", span="9084-9084"];
m1_4102 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", span="9526-9526"];
m1_4103 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => JsonConvert.DeserializeObject<string>(''020474068''), ''Input string '020474068' is not a valid number. Path '', line 1, position 9.'')", span="9528-9528"];
m1_4104 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", span="9526-9526"];
m1_1067 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="2349-2349"];
m1_1068 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="string json = @''[''''PRE\u003cPOST'''']''", span="2351-2351"];
m1_1069 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="2353-2353"];
m1_1070 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="2354-2354"];
m1_1071 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="2356-2356"];
m1_1073 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="2359-2359"];
m1_1072 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, jsonNetResult.Count)", span="2358-2358"];
m1_1074 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="2349-2349"];
m1_1155 [cluster="object.Object()", file="JsonSerializerTest.cs", label="Entry object.Object()", span="0-0"];
m1_3886 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", span="9038-9038"];
m1_3887 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", file="JsonSerializerTest.cs", label="return TypeCode.Object;", span="9040-9040"];
m1_3888 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", span="9038-9038"];
m1_2189 [cluster="System.Runtime.Serialization.SerializationInfo.GetSingle(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetSingle(string)", span="0-0"];
m1_2391 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="869-869"];
m1_2821 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", span="6420-6420"];
m1_2822 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs", label="ImplementInterfaceObject cc = new ImplementInterfaceObject\r\n            {\r\n                InterfaceMember = new DateTime(2010, 12, 31, 0, 0, 0, DateTimeKind.Utc),\r\n                NewMember = ''NewMember!''\r\n            }", span="6422-6426"];
m1_2823 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(cc, Formatting.Indented)", span="6428-6428"];
m1_2824 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''virtualMember'''': ''''2010-12-31T00:00:00Z'''',\r\n  ''''newMemberWithProperty'''': null\r\n}'', result)", span="6430-6433"];
m1_2825 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", span="6420-6420"];
m1_3564 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="8103-8103"];
m1_3565 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="writer.WriteValue(''X'')", span="8105-8105"];
m1_3566 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="8103-8103"];
m1_3016 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", span="6878-6878"];
m1_3017 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="DefaultContractResolver contractResolver = new DefaultContractResolver()", span="6880-6880"];
m1_3018 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="StaticTestClass c = new StaticTestClass\r\n            {\r\n                x = int.MaxValue\r\n            }", span="6882-6885"];
m1_3021 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = contractResolver\r\n            })", span="6888-6891"];
m1_3023 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="StaticTestClass c2 = JsonConvert.DeserializeObject<StaticTestClass>(@''{\r\n  ''''x'''': -1,\r\n  ''''y'''': -2,\r\n  ''''z'''': -3\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = contractResolver\r\n                })", span="6899-6907"];
m1_3019 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="StaticTestClass.y = 2", span="6886-6886"];
m1_3020 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="StaticTestClass.z = 3", span="6887-6887"];
m1_3022 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''x'''': 2147483647,\r\n  ''''y'''': 2,\r\n  ''''z'''': 3\r\n}'', json)", span="6893-6897"];
m1_3024 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="Assert.AreEqual(-1, c2.x)", span="6909-6909"];
m1_3025 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="Assert.AreEqual(-2, StaticTestClass.y)", span="6910-6910"];
m1_3026 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="Assert.AreEqual(-3, StaticTestClass.z)", span="6911-6911"];
m1_3027 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", span="6878-6878"];
m1_16 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="78-78"];
m1_128 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", span="384-384"];
m1_130 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonSerializerTest.cs", label="Bars = new List<string>()", span="386-386"];
m1_131 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonSerializerTest.cs", label="bars != null", span="387-387"];
m1_132 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonSerializerTest.cs", label="Bars.AddRange(bars)", span="389-389"];
m1_133 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", span="384-384"];
m1_854 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", span="1797-1797"];
m1_855 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs", label="var cc = new ChildDataContractWithHidden\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!'',\r\n                NewMember = ''NewMember!''\r\n            }", span="1799-1804"];
m1_856 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(cc)", span="1806-1806"];
m1_857 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''NewMember'''':''''NewMember!'''',''''virtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="1807-1807"];
m1_858 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", span="1797-1797"];
m1_963 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="2107-2107"];
m1_964 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="DateTime dateValue = new DateTime(2010, 3, 30)", span="2109-2109"];
m1_965 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Dictionary<string, object> testDictionary = new Dictionary<string, object>()", span="2110-2110"];
m1_966 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="testDictionary[''date''] = dateValue", span="2111-2111"];
m1_975 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dateValue, deserializedDate)", span="2127-2127"];
m1_967 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(testDictionary)", span="2113-2113"];
m1_970 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="serializer.WriteObject(ms, testDictionary)", span="2118-2118"];
m1_968 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="2116-2116"];
m1_973 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Dictionary<string, object> deserializedDictionary = (Dictionary<string, object>)JsonConvert.DeserializeObject(jsonText, typeof(Dictionary<string, object>))", span="2124-2124"];
m1_969 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(typeof(Dictionary<string, object>))", span="2117-2117"];
m1_971 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="byte[] data = ms.ToArray()", span="2120-2120"];
m1_972 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="string output = Encoding.UTF8.GetString(data, 0, data.Length)", span="2121-2121"];
m1_974 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="DateTime deserializedDate = (DateTime)deserializedDictionary[''date'']", span="2125-2125"];
m1_976 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="2107-2107"];
m1_4069 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyObservableObject.MyObservableObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyObservableObject.MyObservableObject()", span="9438-9438"];
m1_2122 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", span="0-0"];
m1_2869 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", span="6541-6541"];
m1_2870 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="6543-6543"];
m1_2871 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", span="6541-6541"];
m1_992 [cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", span="320-320"];
m1_991 [cluster="Unk.AreNotSame", file="JsonSerializerTest.cs", label="Entry Unk.AreNotSame", span=""];
m1_2141 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="4778-4778"];
m1_2142 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="return ((IEnumerable)_innerDictionary).GetEnumerator();", span="4780-4780"];
m1_2143 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="4778-4778"];
m1_176 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="585-585"];
m1_717 [cluster="System.Runtime.Serialization.SerializationInfo.GetInt32(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetInt32(string)", span="0-0"];
m1_1667 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="3597-3597"];
m1_1668 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''Random'''': {\r\n    ''''blah'''': 1\r\n  },\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11,\r\n    ''''Item1'''': 12\r\n  },\r\n  ''''Collection'''': [\r\n    999\r\n  ],\r\n  ''''Employee'''': {\r\n    ''''Manager'''': {\r\n      ''''Name'''': ''''ManagerName!''''\r\n    }\r\n  }\r\n}''", span="3599-3616"];
m1_1669 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(json,\r\n                new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Reuse })", span="3618-3619"];
m1_1670 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', c.Name)", span="3621-3621"];
m1_1671 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, c.Dictionary.Count)", span="3622-3622"];
m1_1672 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="3623-3623"];
m1_1673 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Dictionary[''existing''])", span="3624-3624"];
m1_1674 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, c.Collection.Count)", span="3625-3625"];
m1_1675 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Collection.ElementAt(0))", span="3626-3626"];
m1_1676 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(999, c.Collection.ElementAt(3))", span="3627-3627"];
m1_1677 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''EmployeeName!'', c.Employee.Name)", span="3628-3628"];
m1_1678 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ManagerName!'', c.Employee.Manager.Name)", span="3629-3629"];
m1_1679 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(c.Random)", span="3630-3630"];
m1_1680 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="3597-3597"];
m1_2213 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", span="0-0"];
m1_4070 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", span="9456-9456"];
m1_4071 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs", label="var original = new DerivedConstructorType(''Base'', ''Derived'')", span="9458-9458"];
m1_4072 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs", label="var serializerSettings = new JsonSerializerSettings()", span="9460-9460"];
m1_4073 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs", label="var jsonCopy = JsonConvert.SerializeObject(original, serializerSettings)", span="9461-9461"];
m1_4074 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs", label="var clonedObject = JsonConvert.DeserializeObject<DerivedConstructorType>(jsonCopy, serializerSettings)", span="9463-9463"];
m1_4075 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Base'', clonedObject.BaseProperty)", span="9465-9465"];
m1_4076 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Derived'', clonedObject.DerivedProperty)", span="9466-9466"];
m1_4077 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", span="9456-9456"];
m1_1384 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="2914-2914"];
m1_1385 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="PersonRaw personRaw = new PersonRaw\r\n            {\r\n                FirstName = ''FirstNameValue'',\r\n                RawContent = new JRaw(''[1,2,3,4,5]''),\r\n                LastName = ''LastNameValue''\r\n            }", span="2916-2921"];
m1_1386 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="string json", span="2923-2923"];
m1_1387 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(personRaw)", span="2925-2925"];
m1_1388 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}'', json)", span="2926-2926"];
m1_1389 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="2914-2914"];
m1_1090 [cluster="Unk.>", file="JsonSerializerTest.cs", label="Entry Unk.>", span=""];
m1_3591 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", span="8180-8180"];
m1_3592 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", file="JsonSerializerTest.cs", label="m_Item1 = item1", span="8182-8182"];
m1_3593 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", span="8180-8180"];
m1_891 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", span="1976-1976"];
m1_892 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="BaseWithContract baseWith = new SubWithContractVirtualProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1978-1984"];
m1_893 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.JustAProperty = ''JustAProperty2!''", span="1986-1986"];
m1_894 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.Virtual = ''Virtual2!''", span="1987-1987"];
m1_895 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1988-1988"];
m1_896 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.WithDataMember = ''WithDataMember2!''", span="1989-1989"];
m1_897 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="string json = AssertSerializeDeserializeEqual(baseWith)", span="1991-1991"];
m1_898 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!''''\r\n}'', json)", span="1993-1999"];
m1_899 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", span="1976-1976"];
m1_2399 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="5408-5408"];
m1_2400 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="PosDouble p = (PosDouble)value", span="5410-5410"];
m1_2402 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="writer.WriteRawValue(String.Format(CultureInfo.InvariantCulture, ''new PosD({0},{1})'', p.X, p.Y))", span="5414-5414"];
m1_2403 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="writer.WriteNull()", span="5418-5418"];
m1_2401 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="p != null", span="5412-5412"];
m1_2404 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="5408-5408"];
m1_2115 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="4740-4740"];
m1_2116 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonSerializerTest.cs", label="((IDictionary<string, T>)_innerDictionary).CopyTo(array, arrayIndex)", span="4742-4742"];
m1_2117 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="4740-4740"];
m1_4084 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ErroringJsonConverter(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ErroringJsonConverter(string)", span="9494-9494"];
m1_4085 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ErroringJsonConverter(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ErroringJsonConverter(string)", span="9494-9494"];
m1_4146 [cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToObject<T>()", span="1921-1921"];
m1_1599 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", span="29-29"];
m1_3507 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", span="7971-7971"];
m1_3508 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="DataContractSerializationAttributesClass dataContract = new DataContractSerializationAttributesClass\r\n            {\r\n                NoAttribute = ''Value!'',\r\n                IgnoreDataMemberAttribute = ''Value!'',\r\n                DataMemberAttribute = ''Value!'',\r\n                IgnoreDataMemberAndDataMemberAttribute = ''Value!''\r\n            }", span="7973-7979"];
m1_3509 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dataContract, Formatting.Indented)", span="7987-7987"];
m1_3510 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''DataMemberAttribute'''': ''''Value!'''',\r\n  ''''IgnoreDataMemberAndDataMemberAttribute'''': ''''Value!''''\r\n}'', json)", span="7988-7991"];
m1_3511 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="PocoDataContractSerializationAttributesClass poco = new PocoDataContractSerializationAttributesClass\r\n            {\r\n                NoAttribute = ''Value!'',\r\n                IgnoreDataMemberAttribute = ''Value!'',\r\n                DataMemberAttribute = ''Value!'',\r\n                IgnoreDataMemberAndDataMemberAttribute = ''Value!''\r\n            }", span="7993-7999"];
m1_3512 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(poco, Formatting.Indented)", span="8001-8001"];
m1_3513 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''NoAttribute'''': ''''Value!'''',\r\n  ''''DataMemberAttribute'''': ''''Value!''''\r\n}'', json)", span="8002-8005"];
m1_3514 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", span="7971-7971"];
m1_4170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9696-9696"];
m1_4171 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="var encodingName = serializer.Deserialize<string>(reader)", span="9698-9698"];
m1_4172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="encodingName == null", span="9699-9699"];
m1_4174 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="return Encoding.GetEncoding(encodingName);", span="9704-9704"];
m1_4173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="return null;", span="9701-9701"];
m1_4175 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9696-9696"];
m1_881 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", span="1946-1946"];
m1_882 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="BaseWithContract baseWith = new SubWithContractNewProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1948-1954"];
m1_883 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.JustAProperty = ''JustAProperty2!''", span="1956-1956"];
m1_884 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.Virtual = ''Virtual2!''", span="1957-1957"];
m1_885 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1958-1958"];
m1_886 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.WithDataMember = ''WithDataMember2!''", span="1959-1959"];
m1_887 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="string json = AssertSerializeDeserializeEqual(baseWith)", span="1961-1961"];
m1_888 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''JustAProperty2'''': ''''JustAProperty!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''Virtual2'''': ''''Virtual!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''WithDataMemberSub'''': ''''WithDataMember!''''\r\n}'', json)", span="1963-1972"];
m1_889 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", span="1946-1946"];
m1_2473 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", span="5542-5542"];
m1_2474 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", file="JsonSerializerTest.cs", label="return Value;", span="5544-5544"];
m1_2475 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", span="5542-5542"];
m1_2562 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", span="5750-5750"];
m1_2563 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonSerializerTest.cs", label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''2000-01-01T00:00:00+06:00\''}'')", span="5752-5752"];
m1_2564 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="5753-5753"];
m1_2565 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", span="5750-5750"];
m1_2768 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="6223-6223"];
m1_2769 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="string json = @''{''''indexed'''':true, ''''startYear'''':1939, ''''values'''':\r\n                            [  3000,  /* 1940-1949 */\r\n                               3000,   3600,   3600,   3600,   3600,   4200,   4200,   4200,   4200,   4800,  /* 1950-1959 */\r\n                               4800,   4800,   4800,   4800,   4800,   4800,   6600,   6600,   7800,   7800,  /* 1960-1969 */\r\n                               7800,   7800,   9000,  10800,  13200,  14100,  15300,  16500,  17700,  22900,  /* 1970-1979 */\r\n                              25900,  29700,  32400,  35700,  37800,  39600,  42000,  43800,  45000,  48000,  /* 1980-1989 */\r\n                              51300,  53400,  55500,  57600,  60600,  61200,  62700,  65400,  68400,  72600,  /* 1990-1999 */\r\n                              76200,  80400,  84900,  87000,  87900,  90000,  94200,  97500, 102000, 106800,  /* 2000-2009 */\r\n                             106800, 106800]  /* 2010-2011 */\r\n                                }''", span="6225-6234"];
m1_2770 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="CommentTestClass commentTestClass = JsonConvert.DeserializeObject<CommentTestClass>(json)", span="6236-6236"];
m1_2771 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, commentTestClass.Indexed)", span="6238-6238"];
m1_2772 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1939, commentTestClass.StartYear)", span="6239-6239"];
m1_2773 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(63, commentTestClass.Values.Count)", span="6240-6240"];
m1_2774 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="6223-6223"];
m1_2320 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", span="5216-5216"];
m1_2321 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", span="5216-5216"];
m1_1744 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="3788-3788"];
m1_1745 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs", label="string json = @''{''''DateTimeField'''':''''''''}''", span="3790-3790"];
m1_1746 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs", label="NullableDateTimeTestClass c = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(json)", span="3792-3792"];
m1_1747 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, c.DateTimeField)", span="3793-3793"];
m1_1748 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="3788-3788"];
m1_768 [cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="435-435"];
m1_2973 [cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1875-1875"];
m1_3706 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollection<T>.NoConstructorReadOnlyCollection()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollection<T>.NoConstructorReadOnlyCollection()", span="8526-8526"];
m1_3707 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollection<T>.NoConstructorReadOnlyCollection()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollection<T>.NoConstructorReadOnlyCollection()", span="8526-8526"];
m1_539 [cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0"];
m1_3567 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="907-907"];
m1_1104 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", span="2410-2410"];
m1_1105 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs", label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n            {\r\n                new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n            }", span="2412-2418"];
m1_1106 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(testDates)", span="2420-2420"];
m1_1107 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[''''0100-01-01T01:01:01+00:00'''',''''2000-01-01T01:01:01+00:00'''',''''2000-01-01T01:01:01+13:00'''',''''2000-01-01T01:01:01-03:30'''']'', result)", span="2421-2421"];
m1_1108 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", span="2410-2410"];
m1_196 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m1_2723 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", span="6111-6111"];
m1_2724 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs", label="MultipleParametrizedConstructorsJsonConstructor c = JsonConvert.DeserializeObject<MultipleParametrizedConstructorsJsonConstructor>(''{Value:'value!', Age:1}'')", span="6113-6113"];
m1_2725 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Public Parameterized 2'', c.Constructor)", span="6114-6114"];
m1_2726 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value!'', c.Value)", span="6115-6115"];
m1_2727 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Age)", span="6116-6116"];
m1_2728 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", span="6111-6111"];
m1_3226 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", span="7348-7348"];
m1_3227 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<StringComparison>(''''); }, ''No JSON content found and type 'System.StringComparison' is not nullable. Path '', line 0, position 0.'')", span="7350-7350"];
m1_3228 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", span="7348-7348"];
m1_3483 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", span="7897-7897"];
m1_3490 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs", label="var jsonReader = new JsonTextReader(new StringReader(json))", span="7900-7900"];
m1_3491 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs", label="var serializer = new JsonSerializer()", span="7901-7901"];
m1_3493 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs", label="return serializer.Deserialize(jsonReader, typeof(T)) as T;", span="7907-7907"];
m1_3492 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs", label="serializer.ContractResolver = new DefaultContractResolver\r\n            {\r\n                IgnoreSerializableAttribute = false\r\n            }", span="7902-7905"];
m1_3494 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", span="7897-7897"];
m1_24 [cluster="Unk.AreEqual", file="JsonSerializerTest.cs", label="Entry Unk.AreEqual", span=""];
m1_3178 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", span="7260-7260"];
m1_3179 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new WithEnums\r\n            {\r\n                Id = 7,\r\n                NullableEnum = null\r\n            })", span="7262-7266"];
m1_3180 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Id'''':7,''''NullableEnum'''':null}'', json)", span="7268-7268"];
m1_3181 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="WithEnums e = JsonConvert.DeserializeObject<WithEnums>(json)", span="7270-7270"];
m1_3182 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, e.NullableEnum)", span="7272-7272"];
m1_3183 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(new WithEnums\r\n            {\r\n                Id = 7,\r\n                NullableEnum = MyEnum.Value2\r\n            })", span="7274-7278"];
m1_3184 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Id'''':7,''''NullableEnum'''':1}'', json)", span="7280-7280"];
m1_3185 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="e = JsonConvert.DeserializeObject<WithEnums>(json)", span="7282-7282"];
m1_3186 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="Assert.AreEqual(MyEnum.Value2, e.NullableEnum)", span="7284-7284"];
m1_3187 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", span="7260-7260"];
m1_3012 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="6871-6871"];
m1_3013 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="JsonSerializerTest.cs", label="return new ReflectionValueProvider(member);", span="6873-6873"];
m1_3014 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="6871-6871"];
m1_1111 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", span="2425-2425"];
m1_1112 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs", label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n            {\r\n                new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n            }", span="2427-2433"];
m1_1113 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(testDates, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="2435-2435"];
m1_1114 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[''''\/Date(-59011455539000+0000)\/'''',''''\/Date(946688461000+0000)\/'''',''''\/Date(946641661000+1300)\/'''',''''\/Date(946701061000-0330)\/'''']'', result)", span="2436-2436"];
m1_1115 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", span="2425-2425"];
m1_3011 [cluster="Unk.AreEquivalent", file="JsonSerializerTest.cs", label="Entry Unk.AreEquivalent", span=""];
m1_3878 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", span="9023-9023"];
m1_3879 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs", label="ParticipantEntity product = new ParticipantEntity()", span="9025-9025"];
m1_3880 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs", label="product.Properties = new Dictionary<string, string> { { ''s'', ''d'' } }", span="9026-9026"];
m1_3881 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(product)", span="9027-9027"];
m1_3882 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''pa_info'''':{''''s'''':''''d''''}}'', json)", span="9029-9029"];
m1_3883 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs", label="ParticipantEntity deserializedProduct = JsonConvert.DeserializeObject<ParticipantEntity>(json)", span="9030-9030"];
m1_3884 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", span="9023-9023"];
m1_2319 [cluster="System.Type.GetProperty(string, System.Reflection.BindingFlags)", file="JsonSerializerTest.cs", label="Entry System.Type.GetProperty(string, System.Reflection.BindingFlags)", span="0-0"];
m1_797 [cluster="Unk.IsNotNull", file="JsonSerializerTest.cs", label="Entry Unk.IsNotNull", span=""];
m1_1226 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", span="2648-2648"];
m1_1227 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs", label="var obj = new { Formatting = ''test'' }", span="2650-2650"];
m1_1228 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings { Formatting = Formatting.Indented }", span="2652-2652"];
m1_1229 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs", label="string indented = JsonConvert.SerializeObject(obj, settings)", span="2653-2653"];
m1_1230 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs", label="string none = JsonConvert.SerializeObject(obj, Formatting.None, settings)", span="2655-2655"];
m1_1231 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs", label="Assert.AreNotEqual(indented, none)", span="2656-2656"];
m1_1232 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", span="2648-2648"];
m1_3355 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="430-430"];
m1_3786 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", span="8714-8714"];
m1_3787 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonSerializerTest.cs", label="string json =\r\n                JsonConvert.SerializeObject(new AnswerFilterModel(), Formatting.Indented, new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n                        IgnoreSerializableAttribute = false\r\n                    }\r\n                })", span="8716-8723"];
m1_3788 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''<Active>k__BackingField'''': false,\r\n  ''''<Ja>k__BackingField'''': false,\r\n  ''''<Handlungsbedarf>k__BackingField'''': false,\r\n  ''''<Beratungsbedarf>k__BackingField'''': false,\r\n  ''''<Unzutreffend>k__BackingField'''': false,\r\n  ''''<Unbeantwortet>k__BackingField'''': false\r\n}'', json)", span="8725-8732"];
m1_3789 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", span="8714-8714"];
m1_322 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m1_1052 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", span="27-27"];
m1_3146 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", span="7189-7189"];
m1_3147 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonException>(() =>\r\n            {\r\n                string json = @''{\r\n  ''''PreProperty'''': '';\r\n\r\n                JsonConvert.DeserializeObject<TestObjects.MyClass>(json);\r\n            })", span="7191-7197"];
m1_3148 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", span="7189-7189"];
m1_2752 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="6173-6173"];
m1_2753 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject(''null'', typeof(DateTime)); }, ''Error converting value {null} to type 'System.DateTime'. Path '', line 1, position 4.'')", span="6175-6175"];
m1_2754 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="6173-6173"];
m1_2145 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="4785-4785"];
m1_2146 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="ModelStateDictionary<string> modelStateDictionary = new ModelStateDictionary<string>()", span="4787-4787"];
m1_2147 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="modelStateDictionary.Add(''key'', ''value'')", span="4788-4788"];
m1_2148 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(modelStateDictionary)", span="4790-4790"];
m1_2149 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''key'''':''''value''''}'', json)", span="4792-4792"];
m1_2150 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="ModelStateDictionary<string> newModelStateDictionary = JsonConvert.DeserializeObject<ModelStateDictionary<string>>(json)", span="4794-4794"];
m1_2151 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, newModelStateDictionary.Count)", span="4795-4795"];
m1_2152 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value'', newModelStateDictionary[''key''])", span="4796-4796"];
m1_2153 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="4785-4785"];
m1_4169 [cluster="System.Type.IsAssignableFrom(System.Type)", file="JsonSerializerTest.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m1_4078 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", span="9471-9471"];
m1_4079 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", file="JsonSerializerTest.cs", label="DerivedProperty = derivedProperty", span="9474-9474"];
m1_4080 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", span="9471-9471"];
m1_2318 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="507-507"];
m1_3357 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="2085-2085"];
m1_3568 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8108-8108"];
m1_3569 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="return ''X'';", span="8110-8110"];
m1_3570 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8108-8108"];
m1_1262 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", span="2690-2690"];
m1_2799 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", span="6335-6335"];
m1_2800 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="ChildDataContract cc = new ChildDataContract\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="6337-6341"];
m1_2801 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="DataContractSerializer serializer = new DataContractSerializer(typeof(ChildDataContract))", span="6343-6343"];
m1_2803 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="serializer.WriteObject(ms, cc)", span="6346-6346"];
m1_2802 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="6345-6345"];
m1_2804 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="string xml = Encoding.UTF8.GetString(ms.ToArray(), 0, Convert.ToInt32(ms.Length))", span="6348-6348"];
m1_2805 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''<JsonSerializerTest.ChildDataContract xmlns=''''http://schemas.datacontract.org/2004/07/Newtonsoft.Json.Tests.Serialization'''' xmlns:i=''''http://www.w3.org/2001/XMLSchema-instance''''><nonVirtualMember>NonVirtualMember!</nonVirtualMember><virtualMember>VirtualMember!</virtualMember><NewMember i:nil=''''true''''/></JsonSerializerTest.ChildDataContract>'', xml)", span="6350-6350"];
m1_2806 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", span="6335-6335"];
m1_2808 [cluster="System.Convert.ToInt32(long)", file="JsonSerializerTest.cs", label="Entry System.Convert.ToInt32(long)", span="0-0"];
m1_1261 [cluster="System.TimeSpan.TimeSpan(int, int, int, int)", file="JsonSerializerTest.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0"];
m1_2809 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", span="6377-6377"];
m1_2810 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs", label="ChildObject cc = new ChildObject\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="6379-6383"];
m1_2811 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(cc)", span="6385-6385"];
m1_2812 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''virtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="6386-6386"];
m1_2813 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", span="6377-6377"];
m1_3985 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", span="9222-9222"];
m1_3986 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="CultureInfo culture = new CultureInfo(''tr-TR'')", span="9224-9224"];
m1_3987 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="DateTime dt = new DateTime(2000, 12, 22)", span="9226-9226"];
m1_3989 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="9228-9232"];
m1_3994 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="9242-9246"];
m1_3999 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(@''''''2000-pie-Dec-Friday-22''''''))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="9253-9257"];
m1_3988 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="9227-9227"];
m1_3990 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dt, settings)", span="9234-9234"];
m1_3993 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, dt1)", span="9240-9240"];
m1_3998 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, (DateTime)v.Value)", span="9251-9251"];
m1_3992 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="DateTime dt1 = JsonConvert.DeserializeObject<DateTime>(json, settings)", span="9238-9238"];
m1_3991 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''''''2000-pie-Ara-Cuma-22'''''', json)", span="9236-9236"];
m1_3995 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="JValue v = (JValue)JToken.ReadFrom(reader)", span="9247-9247"];
m1_3996 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JTokenType.Date, v.Type)", span="9249-9249"];
m1_3997 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(DateTime), v.Value.GetType())", span="9250-9250"];
m1_4000 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="v = (JValue)JToken.ReadFrom(reader)", span="9258-9258"];
m1_4001 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JTokenType.String, v.Type)", span="9260-9260"];
m1_4002 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="9261-9261"];
m1_4003 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''2000-pie-Dec-Friday-22'', v.Value)", span="9262-9262"];
m1_4004 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", span="9222-9222"];
m1_4121 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", span="9567-9567"];
m1_4122 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonSerializerTest.cs", label="string JsonMessage = @''{\r\n  ''''From'''': {\r\n    ''''Address'''': ''''askywalker@theEmpire.gov'''',\r\n    ''''DisplayName'''': ''''Darth Vader''''\r\n  },\r\n  ''''Sender'''': null,\r\n  ''''ReplyTo'''': null,\r\n  ''''ReplyToList'''': [],\r\n  ''''To'''': [\r\n    {\r\n      ''''Address'''': ''''lskywalker@theRebellion.org'''',\r\n      ''''DisplayName'''': ''''Luke Skywalker''''\r\n    }\r\n  ],\r\n  ''''Bcc'''': [],\r\n  ''''CC'''': [\r\n    {\r\n      ''''Address'''': ''''lorgana@alderaan.gov'''',\r\n      ''''DisplayName'''': ''''Princess Leia''''\r\n    }\r\n  ],\r\n  ''''Priority'''': 0,\r\n  ''''DeliveryNotificationOptions'''': 0,\r\n  ''''Subject'''': ''''Family tree'''',\r\n  ''''SubjectEncoding'''': null,\r\n  ''''Headers'''': [],\r\n  ''''HeadersEncoding'''': null,\r\n  ''''Body'''': ''''<strong>I am your father!</strong>'''',\r\n  ''''BodyEncoding'''': ''''US-ASCII'''',\r\n  ''''BodyTransferEncoding'''': -1,\r\n  ''''IsBodyHtml'''': true,\r\n  ''''Attachments'''': [\r\n    {\r\n      ''''FileName'''': ''''skywalker family tree.jpg'''',\r\n      ''''ContentBase64'''': ''''AQIDBAU=''''\r\n    }\r\n  ],\r\n  ''''AlternateViews'''': []\r\n}''", span="9569-9607"];
m1_4123 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<System.Net.Mail.MailMessage>(\r\n                    JsonMessage,\r\n                    new MailAddressReadConverter(),\r\n                    new AttachmentReadConverter(),\r\n                    new EncodingReadConverter());\r\n            },\r\n                ''Cannot populate list type System.Net.Mime.HeaderCollection. Path 'Headers', line 26, position 14.'')", span="9609-9617"];
m1_4124 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", span="9567-9567"];
m1_746 [cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="310-310"];
m1_1884 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="4034-4034"];
m1_1885 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="List<String> strings = new List<String>()", span="4036-4036"];
m1_1886 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="strings.Add(''str_1'')", span="4038-4038"];
m1_1887 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="strings.Add(''str_2'')", span="4039-4039"];
m1_1888 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="strings.Add(''str_3'')", span="4040-4040"];
m1_1889 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(strings)", span="4042-4042"];
m1_1890 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[''''str_1'''',''''str_2'''',''''str_3'''']'', json)", span="4043-4043"];
m1_1891 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="4034-4034"];
m1_1893 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="4047-4047"];
m1_1894 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="ConstructorReadonlyFields c1 = new ConstructorReadonlyFields(''String!'', int.MaxValue)", span="4049-4049"];
m1_1895 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="4050-4050"];
m1_1896 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''A'''': ''''String!'''',\r\n  ''''B'''': 2147483647\r\n}'', json)", span="4051-4054"];
m1_1897 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="ConstructorReadonlyFields c2 = JsonConvert.DeserializeObject<ConstructorReadonlyFields>(json)", span="4056-4056"];
m1_1898 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''String!'', c2.A)", span="4057-4057"];
m1_1899 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, c2.B)", span="4058-4058"];
m1_1900 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="4047-4047"];
m1_33 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", span="197-197"];
m1_34 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs", label="var mySubclass = MyFactory.InstantiateSubclass()", span="199-199"];
m1_35 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs", label="var myMainClass = MyFactory.InstantiateManiClass()", span="200-200"];
m1_36 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs", label="var strJsonSubclass = JsonConvert.SerializeObject(mySubclass, Formatting.Indented)", span="203-203"];
m1_38 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs", label="var strJsonMainClass = JsonConvert.SerializeObject(myMainClass, Formatting.Indented)", span="213-213"];
m1_37 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''ID'''': 123,\r\n  ''''Name'''': ''''ABC'''',\r\n  ''''P1'''': true,\r\n  ''''P2'''': 44\r\n}'', strJsonSubclass)", span="205-210"];
m1_39 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''ID'''': 567,\r\n  ''''Name'''': ''''XYZ'''',\r\n  ''''Subclass'''': {\r\n    ''''ID'''': 123,\r\n    ''''Name'''': ''''ABC'''',\r\n    ''''P1'''': true,\r\n    ''''P2'''': 44\r\n  }\r\n}'', strJsonMainClass)", span="215-224"];
m1_40 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", span="197-197"];
m1_373 [cluster="System.IO.StringReader.StringReader(string)", file="JsonSerializerTest.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m1_334 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItemProxy.FaqItemProxy()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItemProxy.FaqItemProxy()", span="801-801"];
m1_32 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MainClass.MainClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MainClass.MainClass()", span="165-165"];
m1_3189 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", span="7288-7288"];
m1_3190 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new Widget1 { Id = new WidgetId1 { Value = 1234 } })", span="7290-7290"];
m1_3191 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Id'''':''''1234''''}'', json)", span="7292-7292"];
m1_3192 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs", label="Widget1 w = JsonConvert.DeserializeObject<Widget1>(@''{''''Id'''':''''1234''''}'')", span="7294-7294"];
m1_3193 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new WidgetId1 { Value = 1234 }, w.Id)", span="7296-7296"];
m1_3194 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", span="7288-7288"];
m1_3404 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", span="7691-7691"];
m1_3405 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="PropertyItemConverter c = new PropertyItemConverter\r\n            {\r\n                Data =\r\n                    new[]\r\n                    {\r\n                        ''one'',\r\n                        ''two'',\r\n                        ''three''\r\n                    }\r\n            }", span="7693-7702"];
m1_3406 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="var c2 = JsonConvert.DeserializeObject<PropertyItemConverter>(''{'Data':['::ONE::','::TWO::']}'')", span="7704-7704"];
m1_3407 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(c2)", span="7706-7706"];
m1_3408 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, c2.Data.Count)", span="7707-7707"];
m1_3409 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''one'', c2.Data[0])", span="7708-7708"];
m1_3410 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''two'', c2.Data[1])", span="7709-7709"];
m1_3411 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", span="7691-7691"];
m1_3259 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", span="7402-7402"];
m1_3260 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="DateTimeTestClass c =\r\n                JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="7404-7410"];
m1_3261 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="7412-7412"];
m1_3262 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="7413-7413"];
m1_3263 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Pre'', c.PreField)", span="7414-7414"];
m1_3264 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Post'', c.PostField)", span="7415-7415"];
m1_3265 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="DateTimeTestClass c2 =\r\n                JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-01-01T01:01:01Z'''',''''DateTimeOffsetField'''':''''2008-01-01T01:01:01Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="7417-7423"];
m1_3266 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2008, 1, 1, 1, 1, 1, 0, DateTimeKind.Utc).ToLocalTime(), c2.DateTimeField)", span="7425-7425"];
m1_3267 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(2008, 1, 1, 1, 1, 1, 0, TimeSpan.Zero), c2.DateTimeOffsetField)", span="7426-7426"];
m1_3268 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Pre'', c2.PreField)", span="7427-7427"];
m1_3269 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Post'', c2.PostField)", span="7428-7428"];
m1_3270 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", span="7402-7402"];
m1_293 [cluster="System.Version.Version(int, int, int, int)", file="JsonSerializerTest.cs", label="Entry System.Version.Version(int, int, int, int)", span="0-0"];
m1_1263 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="2710-2710"];
m1_1264 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeOnClassTestClass())", span="2712-2712"];
m1_1265 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''TheField'''':0,''''Property'''':21}'', json)", span="2714-2714"];
m1_1266 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="JsonIgnoreAttributeOnClassTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeOnClassTestClass>(@''{''''TheField'''':99,''''Property'''':-1,''''IgnoredField'''':-1}'')", span="2716-2716"];
m1_1267 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, c.IgnoredField)", span="2718-2718"];
m1_1268 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(99, c.Field)", span="2719-2719"];
m1_1269 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="2710-2710"];
m1_2561 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="JsonSerializerTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0"];
m1_2881 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", span="6573-6573"];
m1_2882 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new ClassAttributeDerived\r\n            {\r\n                BaseClassValue = ''BaseClassValue!'',\r\n                DerivedClassValue = ''DerivedClassValue!'',\r\n                NonSerialized = ''NonSerialized!''\r\n            }, Formatting.Indented)", span="6575-6580"];
m1_2883 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''DerivedClassValue'''': ''''DerivedClassValue!'''',\r\n  ''''BaseClassValue'''': ''''BaseClassValue!''''\r\n}'', json)", span="6582-6585"];
m1_2884 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(new CollectionClassAttributeDerived\r\n            {\r\n                BaseClassValue = ''BaseClassValue!'',\r\n                CollectionDerivedClassValue = ''CollectionDerivedClassValue!''\r\n            }, Formatting.Indented)", span="6587-6591"];
m1_2885 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''CollectionDerivedClassValue'''': ''''CollectionDerivedClassValue!'''',\r\n  ''''BaseClassValue'''': ''''BaseClassValue!''''\r\n}'', json)", span="6593-6596"];
m1_2886 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", span="6573-6573"];
m1_23 [cluster="System.IO.FileStream.Seek(long, System.IO.SeekOrigin)", file="JsonSerializerTest.cs", label="Entry System.IO.FileStream.Seek(long, System.IO.SeekOrigin)", span="0-0"];
m1_4202 [cluster="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string, int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string, int)", span="9822-9822"];
m1_4203 [cluster="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string, int)", file="JsonSerializerTest.cs", label="Value = value", span="9824-9824"];
m1_4204 [cluster="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string, int)", file="JsonSerializerTest.cs", label="Age = age", span="9825-9825"];
m1_4205 [cluster="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string, int)", file="JsonSerializerTest.cs", label="Constructor = ''Public Parameterized 2''", span="9826-9826"];
m1_4206 [cluster="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string, int)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string, int)", span="9822-9822"];
m1_2775 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", span="6245-6245"];
m1_2776 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonSerializerTest.cs", label="this.A = A", span="6247-6247"];
m1_2777 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonSerializerTest.cs", label="B = 2", span="6248-6248"];
m1_2778 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", span="6245-6245"];
m1_118 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", span="365-365"];
m1_119 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="FooRequired foo1 = new FooRequired(new[] { ''A'', ''B'', ''C'' })", span="367-367"];
m1_120 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(foo1)", span="368-368"];
m1_123 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(foo1.Bars.Count, foo2.Bars.Count)", span="373-373"];
m1_124 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(foo1.Bars[0], foo2.Bars[0])", span="374-374"];
m1_125 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(foo1.Bars[1], foo2.Bars[1])", span="375-375"];
m1_126 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(foo1.Bars[2], foo2.Bars[2])", span="376-376"];
m1_121 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{''''Bars'''':[''''A'''',''''B'''',''''C'''']}'', json)", span="370-370"];
m1_122 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="FooRequired foo2 = JsonConvert.DeserializeObject<FooRequired>(json)", span="372-372"];
m1_127 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", span="365-365"];
m1_1839 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="3941-3941"];
m1_1840 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs", label="string json = @''[]''", span="3943-3943"];
m1_1841 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.PopulateObject(json, new Person()); }, @''Cannot populate JSON array onto type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '', line 1, position 1.'')", span="3945-3945"];
m1_1842 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="3941-3941"];
m1_297 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", span="752-752"];
m1_298 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs", label="CustomerWithMetadataType c = new CustomerWithMetadataType()", span="754-754"];
m1_299 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs", label="c.UpdatedBy_Id = Guid.NewGuid()", span="755-755"];
m1_300 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c)", span="757-757"];
m1_301 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''{}'', json)", span="759-759"];
m1_302 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs", label="CustomerWithMetadataType c2 = JsonConvert.DeserializeObject<CustomerWithMetadataType>(''{'UpdatedBy_Id':'F6E0666D-13C7-4745-B486-800812C8F6DE'}'')", span="761-761"];
m1_303 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs", label="Assert.AreEqual(Guid.Empty, c2.UpdatedBy_Id)", span="763-763"];
m1_304 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", span="752-752"];
m1_2215 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", span="0-0"];
m1_3436 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", span="7782-7782"];
m1_3437 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1 },\r\n                { new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2 }\r\n            }", span="7784-7788"];
m1_3438 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented)", span="7790-7790"];
m1_3439 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''2000-12-12T12:12:12Z'''': 1,\r\n  ''''2013-12-12T12:12:12Z'''': 2\r\n}'', json)", span="7792-7795"];
m1_3440 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json)", span="7797-7797"];
m1_3441 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2.Count)", span="7799-7799"];
m1_3442 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7800-7800"];
m1_3443 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7801-7801"];
m1_3444 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", span="7782-7782"];
m1_1737 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="3775-3775"];
m1_1738 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="string json = @''{''''key1'''':''''value1'''',''''key2'''':''''value2''''}''", span="3777-3777"];
m1_1739 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Dictionary<string, string> values = JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="3779-3779"];
m1_1740 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, values.Count)", span="3781-3781"];
m1_1741 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value1'', values[''key1''])", span="3782-3782"];
m1_1742 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value2'', values[''key2''])", span="3783-3783"];
m1_1743 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="3775-3775"];
m1_1997 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="4353-4353"];
m1_1998 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonSerializerTest.cs", label="return JsonConvert.SerializeObject(this, Formatting.Indented);", span="4355-4355"];
m1_1999 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="4353-4353"];
m1_2971 [cluster="System.IO.StringWriter.StringWriter()", file="JsonSerializerTest.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m1_3966 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", span="9183-9183"];
m1_3967 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="DateTime dt = new DateTime(2000, 12, 22)", span="9185-9185"];
m1_3968 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="9186-9186"];
m1_3970 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dt, settings)", span="9192-9192"];
m1_3973 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, dt1)", span="9198-9198"];
m1_3978 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, (DateTime)v.Value)", span="9208-9208"];
m1_3969 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="9187-9190"];
m1_3974 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="9200-9203"];
m1_3979 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(@''''''abc''''''))\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="9210-9213"];
m1_3972 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="DateTime dt1 = JsonConvert.DeserializeObject<DateTime>(json, settings)", span="9196-9196"];
m1_3971 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''''''2000-pie-Dec-Friday-22'''''', json)", span="9194-9194"];
m1_3975 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="JValue v = (JValue)JToken.ReadFrom(reader)", span="9204-9204"];
m1_3976 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JTokenType.Date, v.Type)", span="9206-9206"];
m1_3977 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(DateTime), v.Value.GetType())", span="9207-9207"];
m1_3980 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="v = (JValue)JToken.ReadFrom(reader)", span="9214-9214"];
m1_3981 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JTokenType.String, v.Type)", span="9216-9216"];
m1_3982 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="9217-9217"];
m1_3983 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''abc'', v.Value)", span="9218-9218"];
m1_3984 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", span="9183-9183"];
m1_2624 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="5877-5877"];
m1_2625 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs", label="string json = ''[123456789876543.21]''", span="5879-5879"];
m1_2626 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs", label="IList<decimal> a = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="5880-5880"];
m1_2627 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123456789876543.21m, a[0])", span="5881-5881"];
m1_2628 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="5877-5877"];
m1_4086 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9498-9498"];
m1_4087 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="9500-9500"];
m1_4088 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9498-9498"];
m1_1765 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="3818-3818"];
m1_1766 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs", label="string json = @''{id: ''''12'''', name: ''''test'''', items: [{id: ''''112'''', name: ''''testing''''}]}''", span="3820-3820"];
m1_1767 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs", label="ListTestClass l = JsonConvert.DeserializeObject<ListTestClass>(json)", span="3822-3822"];
m1_1768 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="3818-3818"];
m1_1974 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", span="31-31"];
m1_1288 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="2750-2750"];
m1_1289 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="2752-2752"];
m1_1290 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="2754-2754"];
m1_1291 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="2755-2755"];
m1_1292 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="2757-2757"];
m1_1293 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="2759-2759"];
m1_1294 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="2750-2750"];
m1_3633 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", span="8301-8301"];
m1_3634 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="var tuple = Tuple.Create(500)", span="8303-8303"];
m1_3635 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(tuple, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new SerializableContractResolver()\r\n            })", span="8304-8307"];
m1_3636 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''m_Item1'''':500}'', json)", span="8308-8308"];
m1_3637 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="var obj = JsonConvert.DeserializeObject<Tuple<int>>(json, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new SerializableContractResolver()\r\n            })", span="8310-8313"];
m1_3638 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Assert.AreEqual(500, obj.Item1)", span="8314-8314"];
m1_3639 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", span="8301-8301"];
m1_2222 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", span="0-0"];
m1_1400 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="2942-2942"];
m1_1401 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="UserNullable userNullablle = new UserNullable\r\n            {\r\n                Id = new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''),\r\n                FName = ''FirstValue'',\r\n                LName = ''LastValue'',\r\n                RoleId = 5,\r\n                NullableRoleId = 6,\r\n                NullRoleId = null,\r\n                Active = true\r\n            }", span="2944-2953"];
m1_1402 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(userNullablle)", span="2955-2955"];
m1_1403 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Id'''':''''ad6205e8-0df4-465d-aea6-8ba18e93a7e7'''',''''FName'''':''''FirstValue'''',''''LName'''':''''LastValue'''',''''RoleId'''':5,''''NullableRoleId'''':6,''''NullRoleId'''':null,''''Active'''':true}'', json)", span="2957-2957"];
m1_1404 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="UserNullable userNullablleDeserialized = JsonConvert.DeserializeObject<UserNullable>(json)", span="2959-2959"];
m1_1405 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''), userNullablleDeserialized.Id)", span="2961-2961"];
m1_1406 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''FirstValue'', userNullablleDeserialized.FName)", span="2962-2962"];
m1_1407 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''LastValue'', userNullablleDeserialized.LName)", span="2963-2963"];
m1_1408 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(5, userNullablleDeserialized.RoleId)", span="2964-2964"];
m1_1409 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(6, userNullablleDeserialized.NullableRoleId)", span="2965-2965"];
m1_1410 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, userNullablleDeserialized.NullRoleId)", span="2966-2966"];
m1_1411 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, userNullablleDeserialized.Active)", span="2967-2967"];
m1_1412 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="2942-2942"];
m1_1270 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", span="28-28"];
m1_1878 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="4017-4017"];
m1_1879 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error converting value {null} to type 'System.Int32'. Path 'ReadTimeout', line 1, position 17.'')", span="4019-4030"];
m1_1880 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="4017-4017"];
m1_2900 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", span="6629-6629"];
m1_2901 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs", label="PrivateMembersClassWithAttributes c1 = new PrivateMembersClassWithAttributes(''privateString!'', ''internalString!'', ''readonlyString!'')", span="6631-6631"];
m1_2902 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6633-6633"];
m1_2903 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''_privateString'''': ''''privateString!'''',\r\n  ''''_readonlyString'''': ''''readonlyString!'''',\r\n  ''''_internalString'''': ''''internalString!''''\r\n}'', json)", span="6634-6638"];
m1_2904 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs", label="PrivateMembersClassWithAttributes c2 = JsonConvert.DeserializeObject<PrivateMembersClassWithAttributes>(json)", span="6640-6640"];
m1_2905 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''readonlyString!'', c2.UseValue())", span="6641-6641"];
m1_2906 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", span="6629-6629"];
m1_3697 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", span="8503-8503"];
m1_3698 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter()", span="8505-8505"];
m1_3699 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="8506-8506"];
m1_3703 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="string json = sw.ToString()", span="8517-8517"];
m1_3700 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                StringEscapeHandling = StringEscapeHandling.EscapeHtml,\r\n                Formatting = Formatting.Indented\r\n            })", span="8508-8512"];
m1_3701 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="serializer.Serialize(jsonWriter, new { html = ''<html></html>'' })", span="8513-8513"];
m1_3702 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(StringEscapeHandling.Default, jsonWriter.StringEscapeHandling)", span="8515-8515"];
m1_3704 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''html'''': ''''\u003chtml\u003e\u003c/html\u003e''''\r\n}'', json)", span="8519-8521"];
m1_3705 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", span="8503-8503"];
m1_177 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", span="472-472"];
m1_178 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.SerializeObject(new DictionaryWithNoNull()); }, ''Cannot write a null value for property 'Name'. Property requires a non-null value. Path ''.'')", span="474-474"];
m1_179 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", span="472-472"];
m1_2218 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", span="0-0"];
m1_2584 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", span="5791-5791"];
m1_1825 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", span="3915-3915"];
m1_1826 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonSerializerTest.cs", label="string json = @''[new Constructor(123)]''", span="3917-3917"];
m1_1827 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<List<Person>>(json); }, @''Error converting value ''''Constructor'''' to type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '[0]', line 1, position 17.'')", span="3919-3919"];
m1_1828 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", span="3915-3915"];
m1_1912 [cluster="Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", span="27-27"];
m1_3271 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m1_748 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", span="1610-1610"];
m1_749 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs", label="Regex regex = new Regex(''(hi)'', RegexOptions.CultureInvariant)", span="1612-1612"];
m1_750 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(regex, Formatting.Indented)", span="1614-1614"];
m1_751 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs", label="Regex r2 = JsonConvert.DeserializeObject<Regex>(json)", span="1616-1616"];
m1_752 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''(hi)'', r2.ToString())", span="1618-1618"];
m1_753 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs", label="Assert.AreEqual(RegexOptions.CultureInvariant, r2.Options)", span="1619-1619"];
m1_754 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", span="1610-1610"];
m1_1628 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="3496-3496"];
m1_1629 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="OptInClass optInClass = new OptInClass()", span="3498-3498"];
m1_1630 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="optInClass.Age = 26", span="3499-3499"];
m1_1631 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="optInClass.Name = ''James NK''", span="3500-3500"];
m1_1632 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="optInClass.NotIncluded = ''Poor me :(''", span="3501-3501"];
m1_1633 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(optInClass, Formatting.Indented)", span="3503-3503"];
m1_1634 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''Age'''': 26\r\n}'', json)", span="3505-3508"];
m1_1635 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="OptInClass newOptInClass = JsonConvert.DeserializeObject<OptInClass>(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''NotIncluded'''': ''''Ignore me!'''',\r\n  ''''Age'''': 26\r\n}'')", span="3510-3514"];
m1_1636 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(26, newOptInClass.Age)", span="3515-3515"];
m1_1637 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''James NK'', newOptInClass.Name)", span="3516-3516"];
m1_1638 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, newOptInClass.NotIncluded)", span="3517-3517"];
m1_1639 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="3496-3496"];
m1_187 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolvePropertyName(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolvePropertyName(string)", span="484-484"];
m1_188 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolvePropertyName(string)", file="JsonSerializerTest.cs", label="return propertyName.ToUpper(CultureInfo.InvariantCulture);", span="489-489"];
m1_189 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolvePropertyName(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolvePropertyName(string)", span="484-484"];
m1_1076 [cluster="System.Text.Encoding.GetBytes(string)", file="JsonSerializerTest.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m1_1514 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="LogEntry entry = new LogEntry\r\n            {\r\n                LogDate = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc),\r\n                Details = ''Application started.''\r\n            }", span="3200-3204"];
m1_1513 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="3198-3198"];
m1_1515 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="string defaultJson = JsonConvert.SerializeObject(entry)", span="3206-3206"];
m1_1516 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="string isoJson = JsonConvert.SerializeObject(entry, new IsoDateTimeConverter())", span="3209-3209"];
m1_1517 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="string javascriptJson = JsonConvert.SerializeObject(entry, new JavaScriptDateTimeConverter())", span="3212-3212"];
m1_1518 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Details'''':''''Application started.'''',''''LogDate'''':''''2009-02-15T00:00:00Z''''}'', defaultJson)", span="3215-3215"];
m1_1519 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Details'''':''''Application started.'''',''''LogDate'''':''''2009-02-15T00:00:00Z''''}'', isoJson)", span="3216-3216"];
m1_1520 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Details'''':''''Application started.'''',''''LogDate'''':new Date(1234656000000)}'', javascriptJson)", span="3217-3217"];
m1_1521 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="3198-3198"];
m1_1215 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", span="30-30"];
m1_977 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="2131-2131"];
m1_978 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="MethodExecutorObject executorObject = new MethodExecutorObject()", span="2133-2133"];
m1_979 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="executorObject.serverClassName = ''BanSubs''", span="2134-2134"];
m1_980 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="executorObject.serverMethodParams = new object[] { ''21321546'', ''101'', ''1236'', ''D:\\1.txt'' }", span="2135-2135"];
m1_981 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="executorObject.clientGetResultFunction = ''ClientBanSubsCB''", span="2136-2136"];
m1_982 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="string output = JsonConvert.SerializeObject(executorObject)", span="2138-2138"];
m1_984 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Assert.AreNotSame(executorObject, executorObject2)", span="2142-2142"];
m1_983 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="MethodExecutorObject executorObject2 = JsonConvert.DeserializeObject(output, typeof(MethodExecutorObject)) as MethodExecutorObject", span="2140-2140"];
m1_985 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(executorObject2.serverClassName, ''BanSubs'')", span="2143-2143"];
m1_986 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(executorObject2.serverMethodParams.Length, 4)", span="2144-2144"];
m1_987 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="CustomAssert.Contains(executorObject2.serverMethodParams, ''101'')", span="2145-2145"];
m1_988 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(executorObject2.clientGetResultFunction, ''ClientBanSubsCB'')", span="2146-2146"];
m1_989 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="2131-2131"];
m1_136 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", span="395-395"];
m1_137 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Binding>(''{requiredProperty:''}''); }, ''Required property 'RequiredProperty' expects a value but got null. Path '', line 1, position 21.'')", span="397-397"];
m1_138 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", span="395-395"];
m1_2185 [cluster="System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", span="0-0"];
m1_2887 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributeDerived.ClassAttributeDerived()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributeDerived.ClassAttributeDerived()", span="6513-6513"];
m1_778 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", span="1680-1680"];
m1_779 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonSerializerTest.cs", label="var json = @''{''''foo'''':''''value''''}''", span="1682-1682"];
m1_780 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonSerializerTest.cs", label="var deserialized = JsonConvert.DeserializeObject<Foo1>(json)", span="1683-1683"];
m1_781 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value'', deserialized.foo)", span="1684-1684"];
m1_782 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", span="1680-1680"];
m1_916 [cluster="System.IO.MemoryStream.ToArray()", file="JsonSerializerTest.cs", label="Entry System.IO.MemoryStream.ToArray()", span="0-0"];
m1_2948 [cluster="Newtonsoft.Json.Tests.TestObjects.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", span="29-29"];
m1_3311 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="7533-7533"];
m1_3312 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Color color = (Color)value", span="7535-7535"];
m1_3314 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="writer.WriteValue('':::'' + fixedColor.ToKnownColor().ToString().ToUpper() + '':::'')", span="7538-7538"];
m1_3313 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Color fixedColor = (color == Color.White || color == Color.Black) ? color : Color.Gray", span="7536-7536"];
m1_3315 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="7533-7533"];
m1_3937 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", span="9124-9124"];
m1_3938 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="9126-9126"];
m1_3939 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", span="9124-9124"];
m1_2192 [cluster="System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", span="0-0"];
m1_306 [cluster="System.Guid.NewGuid()", file="JsonSerializerTest.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m1_2542 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="5704-5704"];
m1_2543 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="StructWithAttribute testStruct = new StructWithAttribute\r\n            {\r\n                MyInt = int.MaxValue\r\n            }", span="5706-5709"];
m1_2544 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(testStruct, Formatting.Indented)", span="5711-5711"];
m1_2545 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''MyInt'''': 2147483647\r\n}'', json)", span="5713-5715"];
m1_2546 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="StructWithAttribute newStruct = JsonConvert.DeserializeObject<StructWithAttribute>(json)", span="5717-5717"];
m1_2547 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, newStruct.MyInt)", span="5719-5719"];
m1_2548 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="5704-5704"];
m1_99 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", span="325-325"];
m1_100 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="IList<bool?> l = JsonConvert.DeserializeObject<IList<bool?>>(@''[\r\n  1,\r\n  0,\r\n  1.1,\r\n  0.0,\r\n  0.000000000001,\r\n  9999999999,\r\n  -9999999999,\r\n  9999999999999999999999999999999999999999999999999999999999999999999999,\r\n  -9999999999999999999999999999999999999999999999999999999999999999999999,\r\n  'true',\r\n  'TRUE',\r\n  'false',\r\n  'FALSE',\r\n  '',\r\n  null\r\n]'')", span="327-343"];
m1_101 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="int i = 0", span="345-345"];
m1_102 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="346-346"];
m1_103 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(false, l[i++])", span="347-347"];
m1_104 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="348-348"];
m1_105 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(false, l[i++])", span="349-349"];
m1_106 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="350-350"];
m1_107 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="351-351"];
m1_108 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="352-352"];
m1_109 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="353-353"];
m1_110 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="354-354"];
m1_111 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="355-355"];
m1_112 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="356-356"];
m1_113 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(false, l[i++])", span="357-357"];
m1_114 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(false, l[i++])", span="358-358"];
m1_115 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, l[i++])", span="359-359"];
m1_116 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, l[i++])", span="360-360"];
m1_117 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", span="325-325"];
m1_936 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", span="743-743"];
m1_1550 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", span="3299-3299"];
m1_1551 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs", label="string json = ''{ 'testProperty1': 'value' }''", span="3301-3301"];
m1_1552 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs", label="ConstructorAndDefaultValueAttributeTestClass c = JsonConvert.DeserializeObject<ConstructorAndDefaultValueAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.Populate\r\n            })", span="3303-3306"];
m1_1555 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs", label="c = JsonConvert.DeserializeObject<ConstructorAndDefaultValueAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate\r\n            })", span="3310-3313"];
m1_1553 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value'', c.TestProperty1)", span="3307-3307"];
m1_1554 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(21, c.TestProperty2)", span="3308-3308"];
m1_1556 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value'', c.TestProperty1)", span="3314-3314"];
m1_1557 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(21, c.TestProperty2)", span="3315-3315"];
m1_1558 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", span="3299-3299"];
m1_1512 [cluster="Newtonsoft.Json.Tests.TestObjects.Person.Person()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Person.Person()", span="36-36"];
m1_2370 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", span="5289-5289"];
m1_3832 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m1_2706 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="133-133"];
m1_2758 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="6179-6179"];
m1_2759 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs", label="object dateTime = JsonConvert.DeserializeObject(''null'', typeof(DateTime?))", span="6181-6181"];
m1_2760 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs", label="Assert.IsNull(dateTime)", span="6183-6183"];
m1_2761 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="6179-6179"];
m1_3502 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", span="7962-7962"];
m1_3503 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new IgnoreDataMemberTestClass() { Ignored = int.MaxValue }, Formatting.Indented)", span="7964-7964"];
m1_3504 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{}'', json)", span="7965-7965"];
m1_3505 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", span="7962-7962"];
m1_3060 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", span="6993-6993"];
m1_3061 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs", label="IList<DateTimeOffset?> d1 = new List<DateTimeOffset?> { null }", span="6995-6995"];
m1_3062 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(d1)", span="6997-6997"];
m1_3064 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(d1.Count, d2.Count)", span="7001-7001"];
m1_3065 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(d1[0], d2[0])", span="7002-7002"];
m1_3063 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs", label="IList<DateTimeOffset?> d2 = JsonConvert.DeserializeObject<IList<DateTimeOffset?>>(json)", span="6999-6999"];
m1_3066 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", span="6993-6993"];
m1_3708 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", span="8532-8532"];
m1_3709 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<NoConstructorReadOnlyCollection<int>>(''[1]''), ''Cannot deserialize readonly or fixed size list: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+NoConstructorReadOnlyCollection`1[System.Int32]. Path '', line 1, position 1.'')", span="8534-8534"];
m1_3710 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", span="8532-8532"];
m1_673 [cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", span="225-225"];
m1_2188 [cluster="System.Runtime.Serialization.SerializationInfo.GetSByte(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetSByte(string)", span="0-0"];
m1_3608 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", span="8228-8228"];
m1_3609 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs", label="string json = @''[\r\n        900\r\n      ]''", span="8230-8232"];
m1_3610 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs", label="var l = JsonConvert.DeserializeObject<IReadOnlyList<int>>(json)", span="8234-8234"];
m1_3611 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs", label="int i = l[0]", span="8236-8236"];
m1_3612 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs", label="Assert.AreEqual(900, i)", span="8239-8239"];
m1_3613 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", span="8228-8228"];
m1_771 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", span="1671-1671"];
m1_772 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs", label="var original = new Foo1 { foo = ''value'' }", span="1673-1673"];
m1_773 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(original)", span="1674-1674"];
m1_774 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs", label="var expectedJson = @''{''''foo'''':''''value''''}''", span="1675-1675"];
m1_775 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expectedJson, json)", span="1676-1676"];
m1_776 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", span="1671-1671"];
m1_2566 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", span="5757-5757"];
m1_2567 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n            {\r\n                Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n            }, Formatting.None, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="5759-5762"];
m1_2568 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}'', serializeObject)", span="5764-5764"];
m1_2569 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(serializeObject))", span="5766-5766"];
m1_2570 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="5768-5768"];
m1_2572 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="var deserializeObject = serializer.Deserialize<TimeZoneOffsetObject>(reader)", span="5771-5771"];
m1_2571 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="serializer.DateParseHandling = DateParseHandling.None", span="5769-5769"];
m1_2573 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="5773-5773"];
m1_2574 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="5774-5774"];
m1_2575 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", span="5757-5757"];
m1_537 [cluster="System.Runtime.Serialization.StreamingContext.StreamingContext(System.Runtime.Serialization.StreamingContextStates)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.StreamingContext.StreamingContext(System.Runtime.Serialization.StreamingContextStates)", span="0-0"];
m1_705 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", span="1515-1515"];
m1_706 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_serializationInfo == null", span="1517-1517"];
m1_707 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="return;", span="1519-1519"];
m1_708 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_stringValue = _serializationInfo.GetString(''stringValue'')", span="1522-1522"];
m1_709 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_intValue = _serializationInfo.GetInt32(''intValue'')", span="1523-1523"];
m1_710 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_person1 = (PersonReference)_serializationInfo.GetValue(''person1'', typeof(PersonReference))", span="1524-1524"];
m1_711 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_person2 = (PersonReference)_serializationInfo.GetValue(''person2'', typeof(PersonReference))", span="1525-1525"];
m1_712 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_person3 = (PersonReference)_serializationInfo.GetValue(''person3'', typeof(PersonReference))", span="1526-1526"];
m1_713 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_parent = (PreserveReferencesCallbackTestObject)_serializationInfo.GetValue(''parent'', typeof(PreserveReferencesCallbackTestObject))", span="1527-1527"];
m1_714 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_serializationInfo = null", span="1529-1529"];
m1_715 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", span="1515-1515"];
m1_1392 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="2930-2930"];
m1_1393 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="string json = @''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}''", span="2932-2932"];
m1_1394 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="PersonRaw personRaw = JsonConvert.DeserializeObject<PersonRaw>(json)", span="2934-2934"];
m1_1395 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''FirstNameValue'', personRaw.FirstName)", span="2936-2936"];
m1_1396 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[1,2,3,4,5]'', personRaw.RawContent.ToString())", span="2937-2937"];
m1_1397 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''LastNameValue'', personRaw.LastName)", span="2938-2938"];
m1_1398 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="2930-2930"];
m1_2114 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m1_2285 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="5220-5220"];
m1_2322 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_field1 = f", span="5222-5222"];
m1_2323 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_field2 = f", span="5223-5223"];
m1_2324 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_property1 = f", span="5224-5224"];
m1_2325 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_property2 = f", span="5225-5225"];
m1_2326 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_property3 = f", span="5226-5226"];
m1_2327 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_property4 = f", span="5227-5227"];
m1_2328 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_property5 = f", span="5228-5228"];
m1_2329 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_property6 = f", span="5229-5229"];
m1_2330 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="5220-5220"];
m1_2489 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="5575-5575"];
m1_2490 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(new double?[] { 2.4, 4.3, null }, Formatting.Indented)", span="5577-5577"];
m1_2491 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', jsonText)", span="5579-5583"];
m1_2492 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="5575-5575"];
m1_2607 [cluster="Unk.SerializeObject", file="JsonSerializerTest.cs", label="Entry Unk.SerializeObject", span=""];
m1_3412 [cluster="Newtonsoft.Json.Tests.TestObjects.PropertyItemConverter.PropertyItemConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PropertyItemConverter.PropertyItemConverter()", span="29-29"];
m1_4163 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9674-9674"];
m1_4164 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="9676-9676"];
m1_4165 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9674-9674"];
m1_1271 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="2723-2723"];
m1_1272 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="ConstructorCaseSensitivityClass c = new ConstructorCaseSensitivityClass(''param1'', ''Param1'', ''Param2'')", span="2725-2725"];
m1_1273 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c)", span="2727-2727"];
m1_1274 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="ConstructorCaseSensitivityClass deserialized = JsonConvert.DeserializeObject<ConstructorCaseSensitivityClass>(json)", span="2729-2729"];
m1_1275 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''param1'', deserialized.param1)", span="2731-2731"];
m1_1276 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Param1'', deserialized.Param1)", span="2732-2732"];
m1_1277 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Param2'', deserialized.Param2)", span="2733-2733"];
m1_1278 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="2723-2723"];
m1_82 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", span="290-290"];
m1_83 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="IList<bool> l = JsonConvert.DeserializeObject<IList<bool>>(@''[\r\n  1,\r\n  0,\r\n  1.1,\r\n  0.0,\r\n  0.000000000001,\r\n  9999999999,\r\n  -9999999999,\r\n  9999999999999999999999999999999999999999999999999999999999999999999999,\r\n  -9999999999999999999999999999999999999999999999999999999999999999999999,\r\n  'true',\r\n  'TRUE',\r\n  'false',\r\n  'FALSE'\r\n]'')", span="292-306"];
m1_84 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="int i = 0", span="308-308"];
m1_85 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="309-309"];
m1_86 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(false, l[i++])", span="310-310"];
m1_87 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="311-311"];
m1_88 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(false, l[i++])", span="312-312"];
m1_89 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="313-313"];
m1_90 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="314-314"];
m1_91 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="315-315"];
m1_92 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="316-316"];
m1_93 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="317-317"];
m1_94 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="318-318"];
m1_95 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="319-319"];
m1_96 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(false, l[i++])", span="320-320"];
m1_97 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(false, l[i++])", span="321-321"];
m1_98 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", span="290-290"];
m1_439 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", span="1118-1118"];
m1_440 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", file="JsonSerializerTest.cs", label="string json = ''['1.2.3.4444444444444444444444']''", span="1120-1120"];
m1_441 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<List<Version>>(json); }, @''Error converting value ''''1.2.3.4444444444444444444444'''' to type 'System.Version'. Path '[0]', line 1, position 31.'')", span="1122-1122"];
m1_442 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", span="1118-1118"];
m1_2525 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="5661-5661"];
m1_2526 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="string classRef = typeof(StringDictionary).FullName", span="5663-5663"];
m1_2527 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="StringDictionaryTestClass s1 = new StringDictionaryTestClass()\r\n            {\r\n                StringDictionaryProperty = new StringDictionary()\r\n                {\r\n                    { ''1'', ''One'' },\r\n                    { ''2'', ''II'' },\r\n                    { ''3'', ''3'' }\r\n                }\r\n            }", span="5665-5673"];
m1_2535 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<StringDictionaryTestClass>(json); }, ''Cannot create and populate list type '' + classRef + ''. Path 'StringDictionaryProperty', line 2, position 31.'')", span="5689-5689"];
m1_2528 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(s1, Formatting.Indented)", span="5675-5675"];
m1_2529 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="s1.StringDictionaryProperty is IDictionary<string, string>", span="5678-5678"];
m1_2530 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="StringDictionaryTestClass d = JsonConvert.DeserializeObject<StringDictionaryTestClass>(json)", span="5680-5680"];
m1_2531 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, d.StringDictionaryProperty.Count)", span="5682-5682"];
m1_2532 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''One'', d.StringDictionaryProperty[''1''])", span="5683-5683"];
m1_2533 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''II'', d.StringDictionaryProperty[''2''])", span="5684-5684"];
m1_2534 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''3'', d.StringDictionaryProperty[''3''])", span="5685-5685"];
m1_2536 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="5661-5661"];
m1_2049 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", span="4534-4534"];
m1_2050 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="CircularConstructor1 c1 = new CircularConstructor1(null)\r\n            {\r\n                StringProperty = ''Value!''\r\n            }", span="4536-4539"];
m1_2051 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="CircularConstructor2 c2 = new CircularConstructor2(null)\r\n            {\r\n                IntProperty = 1\r\n            }", span="4541-4544"];
m1_2052 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="c1.C2 = c2", span="4546-4546"];
m1_2053 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="c2.C1 = c1", span="4547-4547"];
m1_2054 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, new JsonSerializerSettings\r\n            {\r\n                ReferenceLoopHandling = ReferenceLoopHandling.Ignore,\r\n                Formatting = Formatting.Indented\r\n            })", span="4549-4553"];
m1_2055 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''C2'''': {\r\n    ''''IntProperty'''': 1\r\n  },\r\n  ''''StringProperty'''': ''''Value!''''\r\n}'', json)", span="4555-4560"];
m1_2056 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="CircularConstructor1 newC1 = JsonConvert.DeserializeObject<CircularConstructor1>(@''{\r\n  ''''C2'''': {\r\n    ''''IntProperty'''': 1,\r\n    ''''C1'''': {}\r\n  },\r\n  ''''StringProperty'''': ''''Value!''''\r\n}'')", span="4562-4568"];
m1_2057 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Value!'', newC1.StringProperty)", span="4570-4570"];
m1_2058 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, newC1.C2.IntProperty)", span="4571-4571"];
m1_2059 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, newC1.C2.C1.StringProperty)", span="4572-4572"];
m1_2060 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, newC1.C2.C1.C2)", span="4573-4573"];
m1_2061 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", span="4534-4534"];
m1_3074 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", span="7024-7024"];
m1_3075 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+HasByteArray, Newtonsoft.Json.Tests'''',\r\n  ''''EncryptedPassword'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''cGFzc3dvcmQ=''''\r\n  }\r\n}''", span="7026-7032"];
m1_3076 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", file="JsonSerializerTest.cs", label="HasByteArray value = JsonConvert.DeserializeObject<HasByteArray>(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects\r\n            })", span="7033-7036"];
m1_3077 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEquivalent(Convert.FromBase64String(''cGFzc3dvcmQ=''), value.EncryptedPassword)", span="7038-7038"];
m1_3078 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", span="7024-7024"];
m1_1239 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="2669-2669"];
m1_1240 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Guid guid = new Guid(''BED7F4EA-1A96-11d2-8F08-00A0C9A6186D'')", span="2671-2671"];
m1_1241 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new ClassWithGuid { GuidField = guid })", span="2673-2673"];
m1_1244 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(guid, c.GuidField)", span="2677-2677"];
m1_1242 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''GuidField'''':''''bed7f4ea-1a96-11d2-8f08-00a0c9a6186d''''}'', json)", span="2674-2674"];
m1_1243 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="ClassWithGuid c = JsonConvert.DeserializeObject<ClassWithGuid>(json)", span="2676-2676"];
m1_1245 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="2669-2669"];
m1_4130 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.EncodingReadConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.EncodingReadConverter()", span="9689-9689"];
m1_2654 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="5939-5939"];
m1_2655 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonSerializerTest.cs", label="IDoWork = doWork", span="5942-5942"];
m1_2656 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="5939-5939"];
m1_3130 [cluster="Newtonsoft.Json.Tests.TestObjects.Widget.Widget()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Widget.Widget()", span="27-27"];
m1_2820 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObject.ChildWithDifferentOverrideObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObject.ChildWithDifferentOverrideObject()", span="6370-6370"];
m1_3248 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", span="7379-7379"];
m1_3249 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<ArgumentNullException>(\r\n                () => { JsonConvert.DeserializeObject(null); },\r\n                new[]\r\n                {\r\n                    ''Value cannot be null.'' + Environment.NewLine + ''Parameter name: value'',\r\n                    ''Argument cannot be null.'' + Environment.NewLine + ''Parameter name: value'' // mono\r\n                })", span="7381-7387"];
m1_3250 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", span="7379-7379"];
m1_1151 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="2507-2507"];
m1_1152 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new object())", span="2509-2509"];
m1_1153 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''{}'', json)", span="2510-2510"];
m1_1154 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="2507-2507"];
m1_1640 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", span="3476-3476"];
m1_2357 [cluster="Unk.Parse", file="JsonSerializerTest.cs", label="Entry Unk.Parse", span=""];
m1_1306 [cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0"];
m1_2476 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="5547-5547"];
m1_2477 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonSerializerTest.cs", label="return new DictionaryKey() { Value = value };", span="5549-5549"];
m1_2478 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="5547-5547"];
m1_2793 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", span="6313-6313"];
m1_2794 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs", label="ChildDataContract cc = new ChildDataContract\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="6315-6319"];
m1_2795 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(cc, Formatting.Indented)", span="6321-6321"];
m1_2796 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''virtualMember'''': ''''VirtualMember!'''',\r\n  ''''nonVirtualMember'''': ''''NonVirtualMember!''''\r\n}'', result)", span="6328-6331"];
m1_2797 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", span="6313-6313"];
m1_2792 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableArrayPropertyClass.EnumerableArrayPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableArrayPropertyClass.EnumerableArrayPropertyClass()", span="6276-6276"];
m1_1547 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass.ConstructorAndDefaultValueAttributeTestClass(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass.ConstructorAndDefaultValueAttributeTestClass(string)", span="3287-3287"];
m1_1548 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass.ConstructorAndDefaultValueAttributeTestClass(string)", file="JsonSerializerTest.cs", label="TestProperty1 = testProperty1", span="3289-3289"];
m1_1549 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass.ConstructorAndDefaultValueAttributeTestClass(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass.ConstructorAndDefaultValueAttributeTestClass(string)", span="3287-3287"];
m1_3009 [cluster="Newtonsoft.Json.JsonWriter.Flush()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.Flush()", span="393-393"];
m1_1721 [cluster="Newtonsoft.Json.Tests.TestObjects.Content.Content()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Content.Content()", span="31-31"];
m1_29 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", span="185-185"];
m1_30 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", file="JsonSerializerTest.cs", label="return new MainClass\r\n                {\r\n                    ID = 567,\r\n                    Name = ''XYZ'',\r\n                    Subclass = InstantiateSubclass()\r\n                };", span="187-192"];
m1_31 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", span="185-185"];
m1_2085 [cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="JsonSerializerTest.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0"];
m1_2317 [cluster="System.Type.GetField(string, System.Reflection.BindingFlags)", file="JsonSerializerTest.cs", label="Entry System.Type.GetField(string, System.Reflection.BindingFlags)", span="0-0"];
m1_3015 [cluster="Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", span="43-43"];
m1_3354 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", span="269-269"];
m1_1205 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="2585-2585"];
m1_1206 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new ConverableMembers(), Formatting.Indented)", span="2587-2587"];
m1_1207 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="string expected = null", span="2589-2589"];
m1_1209 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(expected, json)", span="2625-2625"];
m1_1210 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="ConverableMembers c = JsonConvert.DeserializeObject<ConverableMembers>(json)", span="2627-2627"];
m1_1208 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="expected = @''{\r\n  ''''String'''': ''''string'''',\r\n  ''''Int32'''': 2147483647,\r\n  ''''UInt32'''': 4294967295,\r\n  ''''Byte'''': 255,\r\n  ''''SByte'''': 127,\r\n  ''''Short'''': 32767,\r\n  ''''UShort'''': 65535,\r\n  ''''Long'''': 9223372036854775807,\r\n  ''''ULong'''': 9223372036854775807,\r\n  ''''Double'''': 1.7976931348623157E+308,\r\n  ''''Float'''': 3.40282347E+38,\r\n  ''''DBNull'''': null,\r\n  ''''Bool'''': true,\r\n  ''''Char'''': ''''\u0000''''\r\n}''", span="2591-2606"];
m1_1211 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''string'', c.String)", span="2628-2628"];
m1_1212 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Assert.AreEqual(double.MaxValue, c.Double)", span="2629-2629"];
m1_1213 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DBNull.Value, c.DBNull)", span="2631-2631"];
m1_1214 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="2585-2585"];
m1_2513 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="5638-5638"];
m1_2514 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="JsonSerializer serializer1 = new JsonSerializer()", span="5640-5640"];
m1_2515 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="serializer1.Converters.Add(new IsoDateTimeConverter())", span="5641-5641"];
m1_2516 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="serializer1.NullValueHandling = NullValueHandling.Ignore", span="5642-5642"];
m1_2519 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="MyClass[] z = (MyClass[])serializer1.Deserialize(reader, typeof(MyClass[]))", span="5648-5648"];
m1_2517 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="string json = @''[{''''Prop1'''':''''''''},{''''Prop1'''':''''''''}]''", span="5644-5644"];
m1_2518 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="5646-5646"];
m1_2520 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, z.Length)", span="5649-5649"];
m1_2521 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, z[0].Prop1.Length)", span="5650-5650"];
m1_2522 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, z[1].Prop1.Length)", span="5651-5651"];
m1_2523 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="5638-5638"];
m1_1692 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="3658-3658"];
m1_1693 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''short'''': {\r\n    ''''original'''': ''''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'''',\r\n    ''''short'''': ''''m2sqc6'''',\r\n    ''''shortened'''': ''''http://short.ie/m2sqc6'''',\r\n    ''''error'''': {\r\n      ''''code'''': 0,\r\n      ''''msg'''': ''''No action taken''''\r\n    }\r\n  }\r\n}''", span="3660-3670"];
m1_1694 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="JObject o = JObject.Parse(json)", span="3672-3672"];
m1_1695 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Shortie s = JsonConvert.DeserializeObject<Shortie>(o[''short''].ToString())", span="3674-3674"];
m1_1696 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(s)", span="3675-3675"];
m1_1697 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(s.Original, ''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'')", span="3677-3677"];
m1_1698 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(s.Short, ''m2sqc6'')", span="3678-3678"];
m1_1699 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(s.Shortened, ''http://short.ie/m2sqc6'')", span="3679-3679"];
m1_1700 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="3658-3658"];
m1_323 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", span="837-837"];
m1_324 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="FaqItemProxy c = new FaqItemProxy()", span="839-839"];
m1_325 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="c.FaqId = 1", span="840-840"];
m1_326 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="c.Sections.Add(new FaqSection())", span="841-841"];
m1_327 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="c.IsProxy = true", span="842-842"];
m1_328 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="844-844"];
m1_329 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''IsProxy'''': true,\r\n  ''''FaqId'''': 1,\r\n  ''''Name'''': null,\r\n  ''''IsDeleted'''': false,\r\n  ''''FullSectionsProp'''': [\r\n    {}\r\n  ]\r\n}'', json)", span="846-854"];
m1_330 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="FaqItemProxy c2 = JsonConvert.DeserializeObject<FaqItemProxy>(json)", span="856-856"];
m1_331 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c2.FaqId)", span="858-858"];
m1_332 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c2.Sections.Count)", span="859-859"];
m1_333 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", span="837-837"];
m1_3042 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", span="6953-6953"];
m1_3043 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="CultureInfo initialCulture = Thread.CurrentThread.CurrentCulture", span="6955-6955"];
m1_3044 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="CultureInfo testCulture = CultureInfo.CreateSpecificCulture(''nb-NO'')", span="6959-6959"];
m1_3045 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="Thread.CurrentThread.CurrentCulture = testCulture", span="6961-6961"];
m1_3046 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="Thread.CurrentThread.CurrentUICulture = testCulture", span="6962-6962"];
m1_3047 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="string json = @''{ 'Quantity': '1.5', 'OptionalQuantity': '2.2' }''", span="6964-6964"];
m1_3048 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="DecimalTestClass c = JsonConvert.DeserializeObject<DecimalTestClass>(json)", span="6966-6966"];
m1_3049 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1.5m, c.Quantity)", span="6968-6968"];
m1_3050 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2.2d, c.OptionalQuantity)", span="6969-6969"];
m1_3051 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", span="6953-6953"];
m1_1523 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="3220-3220"];
m1_1524 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="GenericListAndDictionaryInterfaceProperties o = new GenericListAndDictionaryInterfaceProperties()", span="3222-3222"];
m1_1525 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="o.IDictionaryProperty = new Dictionary<string, int>\r\n            {\r\n                { ''one'', 1 },\r\n                { ''two'', 2 },\r\n                { ''three'', 3 }\r\n            }", span="3223-3228"];
m1_1526 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="o.IListProperty = new List<int>\r\n            {\r\n                1, 2, 3\r\n            }", span="3229-3232"];
m1_1527 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="o.IEnumerableProperty = new List<int>\r\n            {\r\n                4, 5, 6\r\n            }", span="3233-3236"];
m1_1528 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="3238-3238"];
m1_1532 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(o.IListProperty.ToArray(), deserializedObject.IListProperty.ToArray())", span="3261-3261"];
m1_1533 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(o.IEnumerableProperty.ToArray(), deserializedObject.IEnumerableProperty.ToArray())", span="3262-3262"];
m1_1534 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(o.IDictionaryProperty.ToArray(), deserializedObject.IDictionaryProperty.ToArray())", span="3263-3263"];
m1_1529 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''IEnumerableProperty'''': [\r\n    4,\r\n    5,\r\n    6\r\n  ],\r\n  ''''IListProperty'''': [\r\n    1,\r\n    2,\r\n    3\r\n  ],\r\n  ''''IDictionaryProperty'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2,\r\n    ''''three'''': 3\r\n  }\r\n}'', json)", span="3240-3256"];
m1_1530 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="GenericListAndDictionaryInterfaceProperties deserializedObject = JsonConvert.DeserializeObject<GenericListAndDictionaryInterfaceProperties>(json)", span="3258-3258"];
m1_1531 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(deserializedObject)", span="3259-3259"];
m1_1535 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="3220-3220"];
m1_2977 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", span="6819-6819"];
m1_2978 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs", label="string input = ''http://test.com/%22foo+bar%22''", span="6821-6821"];
m1_2979 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs", label="Uri uri = new Uri(input)", span="6822-6822"];
m1_2980 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(uri)", span="6823-6823"];
m1_2982 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(uri, output)", span="6826-6826"];
m1_2981 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs", label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="6824-6824"];
m1_2983 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", span="6819-6819"];
m1_4129 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.AttachmentReadConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.AttachmentReadConverter()", span="9654-9654"];
m1_3925 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", span="9104-9104"];
m1_3926 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonSerializerTest.cs", label="return (long)Value;", span="9106-9106"];
m1_3927 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", span="9104-9104"];
m1_2380 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", span="5373-5373"];
m1_1617 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="3443-3443"];
m1_1618 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="string json = @''{\r\n    ''''request'''': ''''ux.settings.update'''',\r\n    ''''sid'''': ''''14c561bd-32a8-457e-b4e5-4bba0832897f'''',\r\n    ''''uid'''': ''''30c39065-0f31-de11-9442-001e3786a8ec'''',\r\n    ''''fidOrder'''': [\r\n        ''''id'''',\r\n        ''''andytest_name'''',\r\n        ''''andytest_age'''',\r\n        ''''andytest_address'''',\r\n        ''''andytest_phone'''',\r\n        ''''date'''',\r\n        ''''title'''',\r\n        ''''titleId''''\r\n    ],\r\n    ''''entityName'''': ''''Andy Test'''',\r\n    ''''setting'''': ''''entity.field.order''''\r\n}''", span="3445-3461"];
m1_1619 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="RequestOnly r = JsonConvert.DeserializeObject<RequestOnly>(json)", span="3463-3463"];
m1_1621 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="NonRequest n = JsonConvert.DeserializeObject<NonRequest>(json)", span="3466-3466"];
m1_1620 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ux.settings.update'', r.Request)", span="3464-3464"];
m1_1622 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''14c561bd-32a8-457e-b4e5-4bba0832897f''), n.Sid)", span="3467-3467"];
m1_1623 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''30c39065-0f31-de11-9442-001e3786a8ec''), n.Uid)", span="3468-3468"];
m1_1624 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(8, n.FidOrder.Count)", span="3469-3469"];
m1_1625 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''id'', n.FidOrder[0])", span="3470-3470"];
m1_1626 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''titleId'', n.FidOrder[n.FidOrder.Count - 1])", span="3471-3471"];
m1_1627 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="3443-3443"];
m1_2676 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="6027-6027"];
m1_2677 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="NullableStructPropertyClass nullableStructPropertyClass = new NullableStructPropertyClass()", span="6029-6029"];
m1_2678 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="nullableStructPropertyClass.Foo1 = new StructISerializable() { Name = ''foo 1'' }", span="6030-6030"];
m1_2679 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="nullableStructPropertyClass.Foo2 = new StructISerializable() { Name = ''foo 2'' }", span="6031-6031"];
m1_2683 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="string s = JsonConvert.SerializeObject(nullableStructPropertyClass)", span="6038-6038"];
m1_2680 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="NullableStructPropertyClass barWithNull = new NullableStructPropertyClass()", span="6033-6033"];
m1_2681 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="barWithNull.Foo1 = new StructISerializable() { Name = ''foo 1'' }", span="6034-6034"];
m1_2682 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="barWithNull.Foo2 = null", span="6035-6035"];
m1_2687 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="s = JsonConvert.SerializeObject(barWithNull)", span="6044-6044"];
m1_2684 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="NullableStructPropertyClass deserialized = deserialize(s)", span="6039-6039"];
m1_2685 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="6040-6040"];
m1_2686 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(deserialized.Foo2.Value.Name, ''foo 2'')", span="6041-6041"];
m1_2688 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="deserialized = deserialize(s)", span="6045-6045"];
m1_2689 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="6046-6046"];
m1_2690 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(deserialized.Foo2, null)", span="6047-6047"];
m1_2691 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="6027-6027"];
m1_1433 [cluster="Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", span="29-29"];
m1_3824 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", span="8878-8878"];
m1_3825 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(\r\n                new Dictionary<Size, Size> { { new Size(1, 2), new Size(3, 4) } }\r\n                )", span="8880-8882"];
m1_3826 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''1, 2'''':''''3, 4''''}'', json)", span="8884-8884"];
m1_3827 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs", label="Dictionary<Size, Size> d = JsonConvert.DeserializeObject<Dictionary<Size, Size>>(json)", span="8886-8886"];
m1_3828 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Size(1, 2), d.Keys.First())", span="8888-8888"];
m1_3829 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Size(3, 4), d.Values.First())", span="8889-8889"];
m1_3830 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", span="8878-8878"];
m1_1414 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="2971-2971"];
m1_1415 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="string json = @''{''''Height'''':1}''", span="2973-2973"];
m1_1416 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="DoubleClass c = JsonConvert.DeserializeObject<DoubleClass>(json)", span="2975-2975"];
m1_1417 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Height)", span="2976-2976"];
m1_1418 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="2971-2971"];
m1_465 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="718-718"];
m1_466 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m1_3445 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", span="7805-7805"];
m1_3446 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs", label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1 },\r\n                { new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2 }\r\n            }", span="7807-7811"];
m1_3447 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n            })", span="7813-7816"];
m1_3448 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs", label="JObject o = JObject.Parse(json)", span="7818-7818"];
m1_3451 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs", label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json, new JsonSerializerSettings\r\n            {\r\n                DateTimeZoneHandling = DateTimeZoneHandling.Utc\r\n            })", span="7822-7825"];
m1_3449 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs", label="Assert.IsFalse(o.Properties().ElementAt(0).Name.Contains(''Z''))", span="7819-7819"];
m1_3450 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs", label="Assert.IsFalse(o.Properties().ElementAt(1).Name.Contains(''Z''))", span="7820-7820"];
m1_3452 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2.Count)", span="7827-7827"];
m1_3453 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7828-7828"];
m1_3454 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7829-7829"];
m1_3455 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", span="7805-7805"];
m1_4108 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", span="9532-9532"];
m1_4109 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''DerivedProperty'''': ''''derived'''',\r\n  ''''BaseProperty'''': ''''base''''\r\n}''", span="9534-9537"];
m1_4110 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonSerializerTest.cs", label="var d = JsonConvert.DeserializeObject<DerivedWithPrivate>(json)", span="9539-9539"];
m1_4111 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''base'', d.BaseProperty)", span="9541-9541"];
m1_4112 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''derived'', d.DerivedProperty)", span="9542-9542"];
m1_4113 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", span="9532-9532"];
m1_2707 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", span="6086-6086"];
m1_2708 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs", label="var data = new DecimalTest(decimal.MinValue)", span="6088-6088"];
m1_2709 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(data)", span="6089-6089"];
m1_2710 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs", label="var obj = JsonConvert.DeserializeObject<DecimalTest>(json, new JsonSerializerSettings { MetadataPropertyHandling = MetadataPropertyHandling.Default })", span="6090-6090"];
m1_2711 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs", label="Assert.AreEqual(decimal.MinValue, obj.Value)", span="6092-6092"];
m1_2712 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", span="6086-6086"];
m1_0 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", span="104-104"];
m1_1 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="var s = System.IO.File.OpenRead(''large.json'')", span="106-106"];
m1_2 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(s))", span="110-110"];
m1_11 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="Assert.IsTrue(s.Position > 0)", span="128-128"];
m1_12 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="s.Seek(0, SeekOrigin.Begin)", span="130-130"];
m1_13 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, s.Position)", span="132-132"];
m1_3 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="reader.SupportMultipleContent = true", span="112-112"];
m1_4 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="reader.CloseInput = false", span="113-113"];
m1_5 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="reader.Read()", span="116-116"];
m1_8 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="ser.Deserialize<IList<ErroringClass>>(reader)", span="121-121"];
m1_6 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="var ser = new JsonSerializer()", span="118-118"];
m1_7 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="ser.CheckAdditionalContent = false", span="119-119"];
m1_9 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="Assert.Fail()", span="124-124"];
m1_10 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label=Exception, span="126-126"];
m1_14 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", span="104-104"];
m1_2373 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="5349-5349"];
m1_2374 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs", label="ClientMap source = new ClientMap()\r\n            {\r\n                position = new Pos() { X = 100, Y = 200 },\r\n                center = new PosDouble() { X = 251.6, Y = 361.3 }\r\n            }", span="5351-5355"];
m1_2375 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(source, new PosConverter(), new PosDoubleConverter())", span="5357-5357"];
m1_2376 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''{\''position\'':new Pos(100,200),\''center\'':new PosD(251.6,361.3)}'', json)", span="5358-5358"];
m1_2377 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="5349-5349"];
m1_2875 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", span="6561-6561"];
m1_2876 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="6563-6563"];
m1_2877 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", span="6561-6561"];
m1_2095 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonSerializerTest.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m1_2961 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", span="6800-6800"];
m1_2962 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="object o = new { p = 1 }", span="6803-6803"];
m1_2963 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="var json = JObject.FromObject(o)", span="6805-6805"];
m1_2964 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="var sw = new StringWriter()", span="6807-6807"];
m1_2966 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="jw.WriteToken(json.CreateReader())", span="6810-6810"];
m1_2965 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="var jw = new JsonTextWriter(sw)", span="6808-6808"];
m1_2968 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="string result = sw.ToString()", span="6813-6813"];
m1_2967 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="jw.Flush()", span="6811-6811"];
m1_2969 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''p'''':1}'', result)", span="6814-6814"];
m1_2970 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", span="6800-6800"];
m1_3316 [cluster="Unk.ToKnownColor", file="JsonSerializerTest.cs", label="Entry Unk.ToKnownColor", span=""];
m1_4180 [cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest()", span="9735-9735"];
m1_4181 [cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest()", span="9735-9735"];
m1_2378 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", span="5361-5361"];
m1_1537 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m1_2510 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", span="5631-5631"];
m1_2511 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", file="JsonSerializerTest.cs", label="Prop1 = new byte[0]", span="5633-5633"];
m1_2512 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", span="5631-5631"];
m1_4128 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.MailAddressReadConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.MailAddressReadConverter()", span="9620-9620"];
m1_4061 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstantTestClass.ConstantTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstantTestClass.ConstantTestClass()", span="9399-9399"];
m1_1641 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", span="3525-3525"];
m1_1642 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", span="3525-3525"];
m1_2181 [cluster="System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", span="0-0"];
m1_859 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractWithHidden.ChildDataContractWithHidden()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractWithHidden.ChildDataContractWithHidden()", span="1787-1787"];
m1_3080 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_BadAdditionalContent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_BadAdditionalContent()", span="7042-7042"];
m1_3081 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_BadAdditionalContent()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+HasByteArray, Newtonsoft.Json.Tests'''',\r\n  ''''EncryptedPassword'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''cGFzc3dvcmQ='''',\r\n    ''''$value'''': ''''cGFzc3dvcmQ=''''\r\n  }\r\n}''", span="7044-7051"];
m1_3082 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_BadAdditionalContent()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<HasByteArray>(json, new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Objects\r\n                });\r\n            }, ''Error reading bytes. Unexpected token: PropertyName. Path 'EncryptedPassword.$value', line 6, position 13.'')", span="7053-7059"];
m1_3083 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_BadAdditionalContent()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_BadAdditionalContent()", span="7042-7042"];
m1_4150 [cluster="System.Net.Mail.MailAddress.MailAddress(string)", file="JsonSerializerTest.cs", label="Entry System.Net.Mail.MailAddress.MailAddress(string)", span="0-0"];
m1_2132 [cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0"];
m1_2123 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4750-4750"];
m1_2124 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="dictionary == null", span="4752-4752"];
m1_2126 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label=dictionary, span="4757-4757"];
m1_2125 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="return;", span="4754-4754"];
m1_2127 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="this[entry.Key] = entry.Value", span="4759-4759"];
m1_2128 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4750-4750"];
m1_248 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTestClass.RequiredPropertyTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTestClass.RequiredPropertyTestClass()", span="578-578"];
m1_2580 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="5800-5800"];
m1_2581 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new DerivedEvent(), Formatting.Indented)", span="5802-5802"];
m1_2582 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''event'''': ''''derived''''\r\n}'', json)", span="5804-5806"];
m1_2583 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="5800-5800"];
m1_1846 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", span="942-942"];
m1_4147 [cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", span="531-531"];
m1_1170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="2535-2535"];
m1_1171 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="2537-2537"];
m1_1172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="2538-2538"];
m1_1173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''hello'', wibble.Foo)", span="2539-2539"];
m1_1174 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, wibble.Bar.Count)", span="2541-2541"];
m1_1175 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="2542-2542"];
m1_1176 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, wibble.Bar[1])", span="2543-2543"];
m1_1177 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, wibble.Bar[2])", span="2544-2544"];
m1_1178 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, wibble.Bar[3])", span="2545-2545"];
m1_1179 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="2535-2535"];
m1_1018 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="2196-2196"];
m1_1019 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeTestClass())", span="2198-2198"];
m1_1020 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Field'''':0,''''Property'''':21}'', json)", span="2200-2200"];
m1_1021 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="JsonIgnoreAttributeTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeTestClass>(@''{''''Field'''':99,''''Property'''':-1,''''IgnoredField'''':-1,''''IgnoredObject'''':[1,2,3,4,5]}'')", span="2202-2202"];
m1_1022 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, c.IgnoredField)", span="2204-2204"];
m1_1023 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(99, c.Field)", span="2205-2205"];
m1_1024 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="2196-2196"];
m1_284 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", span="679-679"];
m1_285 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs", label="Version v = new Version(1, 2, 3, 4)", span="681-681"];
m1_286 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs", label="IgnoredPropertiesTestClass c1 = new IgnoredPropertiesTestClass\r\n            {\r\n                IgnoredProperty = v,\r\n                IgnoredList = new List<Version>\r\n                {\r\n                    v\r\n                },\r\n                IgnoredDictionary = new Dictionary<string, Version>\r\n                {\r\n                    { ''Value'', v }\r\n                },\r\n                Name = ''Name!''\r\n            }", span="683-695"];
m1_287 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new IgnoredPropertiesContractResolver()\r\n            })", span="697-700"];
m1_288 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!''''\r\n}'', json)", span="702-704"];
m1_289 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs", label="string deserializeJson = @''{\r\n  ''''IgnoredList'''': [\r\n    {\r\n      ''''Major'''': 1,\r\n      ''''Minor'''': 2,\r\n      ''''Build'''': 3,\r\n      ''''Revision'''': 4,\r\n      ''''MajorRevision'''': 0,\r\n      ''''MinorRevision'''': 4\r\n    }\r\n  ],\r\n  ''''IgnoredDictionary'''': {\r\n    ''''Value'''': {\r\n      ''''Major'''': 1,\r\n      ''''Minor'''': 2,\r\n      ''''Build'''': 3,\r\n      ''''Revision'''': 4,\r\n      ''''MajorRevision'''': 0,\r\n      ''''MinorRevision'''': 4\r\n    }\r\n  },\r\n  ''''Name'''': ''''Name!''''\r\n}''", span="706-728"];
m1_290 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs", label="IgnoredPropertiesTestClass c2 = JsonConvert.DeserializeObject<IgnoredPropertiesTestClass>(deserializeJson, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new IgnoredPropertiesContractResolver()\r\n            })", span="730-733"];
m1_291 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', c2.Name)", span="735-735"];
m1_292 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", span="679-679"];
m1_1709 [cluster="System.Uri.ToString()", file="JsonSerializerTest.cs", label="Entry System.Uri.ToString()", span="0-0"];
m1_2493 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", span="5587-5587"];
m1_2494 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs", label="double?[] d = (double?[])JsonConvert.DeserializeObject(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', typeof(double?[]))", span="5589-5593"];
m1_2495 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, d.Length)", span="5595-5595"];
m1_2496 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2.4, d[0])", span="5596-5596"];
m1_2497 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4.3, d[1])", span="5597-5597"];
m1_2498 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, d[2])", span="5598-5598"];
m1_2499 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", span="5587-5587"];
m1_805 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", span="1715-1715"];
m1_806 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="var json = @''{''''foo'''':{''''bar'''':''''value''''},''''foo2'''':{''''bar'''':''''value2''''}}''", span="1717-1717"];
m1_807 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="var deserialized = JsonConvert.DeserializeObject<Foo1<Bar1>>(json)", span="1718-1718"];
m1_808 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(deserialized.foo2)", span="1719-1719"];
m1_809 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value2'', deserialized.foo2.bar)", span="1720-1720"];
m1_810 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(deserialized.foo)", span="1721-1721"];
m1_811 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value'', deserialized.foo.bar)", span="1722-1722"];
m1_812 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", span="1715-1715"];
m1_1078 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="2363-2363"];
m1_1079 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="string json = @''[''''vvv\/vvv\tvvv\''''vvv\bvvv\nvvv\rvvv\\vvv\fvvv'''']''", span="2365-2365"];
m1_1080 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="JavaScriptSerializer javaScriptSerializer = new JavaScriptSerializer()", span="2368-2368"];
m1_1081 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="List<string> javaScriptSerializerResult = javaScriptSerializer.Deserialize<List<string>>(json)", span="2369-2369"];
m1_1083 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="2373-2373"];
m1_1084 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="2375-2375"];
m1_1082 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="2372-2372"];
m1_1087 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="Assert.AreEqual(javaScriptSerializerResult[0], jsonNetResult[0])", span="2380-2380"];
m1_1086 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="2378-2378"];
m1_1085 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, jsonNetResult.Count)", span="2377-2377"];
m1_1088 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="2363-2363"];
m1_2549 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", span="5695-5695"];
m1_1681 [cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0"];
m1_20 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="787-787"];
m1_2692 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", span="6006-6006"];
m1_3931 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", span="9114-9114"];
m1_3932 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="9116-9116"];
m1_3933 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", span="9114-9114"];
m1_21 [cluster="Unk.Fail", file="JsonSerializerTest.cs", label="Entry Unk.Fail", span=""];
m1_1053 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="2334-2334"];
m1_1054 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.SerializeObject(new BadJsonPropertyClass()); }, @''A member with the name 'pie' already exists on 'Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass'. Use the JsonPropertyAttribute to specify another name.'')", span="2336-2336"];
m1_1055 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="2334-2334"];
m1_1279 [cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", span="33-33"];
m1_836 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="948-948"];
m1_1247 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", span="29-29"];
m1_3319 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="7541-7541"];
m1_3320 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="return Enum.Parse(typeof(Color), reader.Value.ToString());", span="7543-7543"];
m1_3321 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="7541-7541"];
m1_296 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="817-817"];
m1_871 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", span="1920-1920"];
m1_872 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="BaseWithContract baseWith = new SubWithoutContractVirtualProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1922-1928"];
m1_873 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.JustAProperty = ''JustAProperty2!''", span="1930-1930"];
m1_874 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.Virtual = ''Virtual2!''", span="1931-1931"];
m1_875 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1932-1932"];
m1_876 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.WithDataMember = ''WithDataMember2!''", span="1933-1933"];
m1_877 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(baseWith, Formatting.Indented)", span="1935-1935"];
m1_878 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualSub'''': ''''Virtual2!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''JustAProperty'''': ''''JustAProperty2!''''\r\n}'', json)", span="1937-1942"];
m1_879 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", span="1920-1920"];
m1_4062 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", span="9421-9421"];
m1_4063 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonSerializerTest.cs", label="MyObservableObject o = new MyObservableObject\r\n            {\r\n                TestString = ''Test string''\r\n            }", span="9423-9426"];
m1_4064 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="9428-9428"];
m1_4065 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''PropertyChanged'''': null,\r\n  ''''TestString'''': ''''Test string''''\r\n}'', json)", span="9429-9432"];
m1_4066 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonSerializerTest.cs", label="MyObservableObject o2 = JsonConvert.DeserializeObject<MyObservableObject>(json)", span="9434-9434"];
m1_4067 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Test string'', o2.TestString)", span="9435-9435"];
m1_4068 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", span="9421-9421"];
m1_431 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", span="1106-1106"];
m1_432 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs", label="string json = ''['1.2.3.4']''", span="1108-1108"];
m1_433 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs", label="List<Version> deserialized = JsonConvert.DeserializeObject<List<Version>>(json)", span="1109-1109"];
m1_434 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, deserialized[0].Major)", span="1111-1111"];
m1_435 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, deserialized[0].Minor)", span="1112-1112"];
m1_436 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, deserialized[0].Build)", span="1113-1113"];
m1_437 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, deserialized[0].Revision)", span="1114-1114"];
m1_438 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", span="1106-1106"];
m1_3007 [cluster="Newtonsoft.Json.Tests.TestObjects.TestObject.TestObject(string, byte[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.TestObject.TestObject(string, byte[])", span="33-33"];
m1_4041 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", span="9369-9369"];
m1_4042 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="DateTimeOffset dt = new DateTimeOffset(new DateTime(2000, 12, 22))", span="9371-9371"];
m1_4043 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="9372-9372"];
m1_4045 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dt, settings)", span="9378-9378"];
m1_4048 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, dt1)", span="9384-9384"];
m1_4053 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, (DateTimeOffset)v.Value)", span="9395-9395"];
m1_4044 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="9373-9376"];
m1_4049 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                DateParseHandling = DateParseHandling.DateTimeOffset\r\n            }", span="9386-9390"];
m1_4047 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="DateTimeOffset dt1 = JsonConvert.DeserializeObject<DateTimeOffset>(json, settings)", span="9382-9382"];
m1_4046 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''''''2000-pie-Dec-Friday-22'''''', json)", span="9380-9380"];
m1_4050 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="JValue v = (JValue)JToken.ReadFrom(reader)", span="9391-9391"];
m1_4051 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JTokenType.Date, v.Type)", span="9393-9393"];
m1_4052 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), v.Value.GetType())", span="9394-9394"];
m1_4054 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", span="9369-9369"];
m1_2659 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", span="5956-5956"];
m1_2660 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", file="JsonSerializerTest.cs", label="IDontWork = dontWork", span="5958-5958"];
m1_2661 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", span="5956-5956"];
m1_3731 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", span="8573-8573"];
m1_3732 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonSerializerTest.cs", label="this.First = first", span="8576-8576"];
m1_3733 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonSerializerTest.cs", label="this.Second = second", span="8577-8577"];
m1_3734 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", span="8573-8573"];
m1_4157 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9661-9661"];
m1_4158 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="var info = serializer.Deserialize<AttachmentInfo>(reader)", span="9663-9663"];
m1_4159 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="var attachment = info != null\r\n                    ? new System.Net.Mail.Attachment(new MemoryStream(Convert.FromBase64String(info.ContentBase64)), ''application/octet-stream'')\r\n                    {\r\n                        ContentDisposition = { FileName = info.FileName }\r\n                    }\r\n                    : null", span="9665-9670"];
m1_4160 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="return attachment;", span="9671-9671"];
m1_4161 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9661-9661"];
m1_2949 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", span="6771-6771"];
m1_2950 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass\r\n            {\r\n                Guid = new Guid(''1924129C-F7E0-40F3-9607-9939C531395A''),\r\n                NullableGuid = new Guid(''9E9F3ADF-E017-4F72-91E0-617EBE85967D''),\r\n                TimeSpan = TimeSpan.FromDays(1),\r\n                NullableTimeSpan = TimeSpan.FromHours(1),\r\n                Uri = new Uri(''http://testuri.com'')\r\n            }", span="6773-6780"];
m1_2951 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6781-6781"];
m1_2954 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Guid, c2.Guid)", span="6792-6792"];
m1_2955 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="6793-6793"];
m1_2956 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="6794-6794"];
m1_2957 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="6795-6795"];
m1_2958 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Uri, c2.Uri)", span="6796-6796"];
m1_2952 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Guid'''': ''''1924129c-f7e0-40f3-9607-9939c531395a'''',\r\n  ''''NullableGuid'''': ''''9e9f3adf-e017-4f72-91e0-617ebe85967d'''',\r\n  ''''TimeSpan'''': ''''1.00:00:00'''',\r\n  ''''NullableTimeSpan'''': ''''01:00:00'''',\r\n  ''''Uri'''': ''''http://testuri.com''''\r\n}'', json)", span="6783-6789"];
m1_2953 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="UriGuidTimeSpanTestClass c2 = JsonConvert.DeserializeObject<UriGuidTimeSpanTestClass>(json)", span="6791-6791"];
m1_2959 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", span="6771-6771"];
m1_2331 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", span="5260-5260"];
m1_2332 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", span="5260-5260"];
m1_2456 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", span="5505-5505"];
m1_2457 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonSerializerTest.cs", label="First = first", span="5507-5507"];
m1_2458 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonSerializerTest.cs", label="Second = second", span="5508-5508"];
m1_2459 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", span="5505-5505"];
m1_229 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", span="568-568"];
m1_230 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonSerializerTest.cs", label="var e1 = JsonConvert.DeserializeObject<EnumA>('''ValueA''')", span="570-570"];
m1_231 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonSerializerTest.cs", label="Assert.AreEqual(EnumA.ValueA, e1)", span="571-571"];
m1_232 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonSerializerTest.cs", label="var e2 = JsonConvert.DeserializeObject<EnumA>('''value_a''', new StringEnumConverter())", span="573-573"];
m1_233 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonSerializerTest.cs", label="Assert.AreEqual(EnumA.ValueA, e2)", span="574-574"];
m1_234 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", span="568-568"];
m1_2182 [cluster="System.Runtime.Serialization.SerializationInfo.GetByte(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetByte(string)", span="0-0"];
m1_831 [cluster="int.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m1_2863 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", span="6531-6531"];
m1_2864 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="6533-6533"];
m1_2865 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", span="6531-6531"];
m1_2831 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", span="6449-6449"];
m1_2832 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="NonDefaultConstructorWithReadOnlyCollectionProperty c1 = new NonDefaultConstructorWithReadOnlyCollectionProperty(''blah'')", span="6451-6451"];
m1_2833 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="c1.Categories.Add(''one'')", span="6452-6452"];
m1_2834 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="c1.Categories.Add(''two'')", span="6453-6453"];
m1_2835 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6455-6455"];
m1_2838 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Title, c2.Title)", span="6465-6465"];
m1_2839 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="6466-6466"];
m1_2836 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': [\r\n    ''''one'''',\r\n    ''''two''''\r\n  ]\r\n}'', json)", span="6456-6462"];
m1_2837 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="NonDefaultConstructorWithReadOnlyCollectionProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyCollectionProperty>(json)", span="6464-6464"];
m1_2840 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''one'', c2.Categories[0])", span="6467-6467"];
m1_2841 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''two'', c2.Categories[1])", span="6468-6468"];
m1_2842 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", span="6449-6449"];
m1_19 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="478-478"];
m1_2936 [cluster="System.Exception.ToString()", file="JsonSerializerTest.cs", label="Entry System.Exception.ToString()", span="0-0"];
m1_1660 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="3578-3578"];
m1_1661 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11\r\n  }\r\n}''", span="3580-3585"];
m1_1662 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(\r\n                json,\r\n                new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Replace })", span="3587-3589"];
m1_1663 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', c.Name)", span="3591-3591"];
m1_1664 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Dictionary.Count)", span="3592-3592"];
m1_1665 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="3593-3593"];
m1_1666 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="3578-3578"];
m1_1756 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="3806-3806"];
m1_1757 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="string json = @''{'SetOnlyProperty':[1,2,3,4,5]}''", span="3808-3808"];
m1_1758 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="SetOnlyPropertyClass2 setOnly = JsonConvert.DeserializeObject<SetOnlyPropertyClass2>(json)", span="3810-3810"];
m1_1759 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="JArray a = (JArray)setOnly.GetValue()", span="3811-3811"];
m1_1760 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(5, a.Count)", span="3812-3812"];
m1_1761 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, (int)a[0])", span="3813-3813"];
m1_1762 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(5, (int)a[a.Count - 1])", span="3814-3814"];
m1_1763 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="3806-3806"];
m1_2389 [cluster="string.Format(string, object, object)", file="JsonSerializerTest.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m1_3806 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", span="8775-8775"];
m1_3807 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="PersonReference john = new PersonReference\r\n            {\r\n                Id = new Guid(''0B64FFDF-D155-44AD-9689-58D9ADB137F3''),\r\n                Name = ''John Smith''\r\n            }", span="8777-8781"];
m1_3808 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="PersonReference jane = new PersonReference\r\n            {\r\n                Id = new Guid(''AE3C399C-058D-431D-91B0-A36C266441B9''),\r\n                Name = ''Jane Smith''\r\n            }", span="8783-8787"];
m1_3809 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="john.Spouse = jane", span="8789-8789"];
m1_3810 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="jane.Spouse = john", span="8790-8790"];
m1_3811 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="IList<PersonReference> people = new List<PersonReference>\r\n            {\r\n                john,\r\n                jane\r\n            }", span="8792-8796"];
m1_3812 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(people, new JsonSerializerSettings\r\n            {\r\n#pragma warning disable 618\r\n                ReferenceResolver = new IdReferenceResolver(),\r\n#pragma warning restore 618\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="8798-8805"];
m1_3813 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]'', json)", span="8807-8822"];
m1_3814 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", span="8775-8775"];
m1_2068 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="4605-4605"];
m1_2069 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs", label="var json = ''{ Key: 'abc', Value: 123 }''", span="4607-4607"];
m1_2070 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs", label="var item = JsonConvert.DeserializeObject<TestClass>(json)", span="4608-4608"];
m1_2071 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123L, item.Value)", span="4610-4610"];
m1_2072 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="4605-4605"];
m1_3778 [cluster="System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m1_1847 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="3949-3949"];
m1_1848 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs", label="string json = @''{}''", span="3951-3951"];
m1_1849 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.PopulateObject(json, new List<Person>()); }, @''Cannot populate JSON object onto type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Person]'. Path '', line 1, position 2.'')", span="3953-3953"];
m1_1850 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="3949-3949"];
m1_4114 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", span="9547-9547"];
m1_4115 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonSerializerTest.cs", label="NullableLongTestClass instance = new NullableLongTestClass\r\n            {\r\n                Value = ulong.MaxValue\r\n            }", span="9549-9552"];
m1_4116 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonSerializerTest.cs", label="string output = JsonConvert.SerializeObject(instance)", span="9553-9553"];
m1_4117 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonSerializerTest.cs", label="NullableLongTestClass result = JsonConvert.DeserializeObject<NullableLongTestClass>(output)", span="9554-9554"];
m1_4118 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ulong.MaxValue, result.Value)", span="9556-9556"];
m1_4119 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", span="9547-9547"];
m1_3052 [cluster="System.Globalization.CultureInfo.CreateSpecificCulture(string)", file="JsonSerializerTest.cs", label="Entry System.Globalization.CultureInfo.CreateSpecificCulture(string)", span="0-0"];
m1_43 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", span="229-229"];
m1_44 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonSerializerTest.cs", label="var largeBrokenNumber = JsonConvert.DeserializeObject<Foo64>(''{\''Blah\'': 43443333222211111117 }'')", span="231-231"];
m1_45 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''43443333222211111117'', largeBrokenNumber.Blah)", span="232-232"];
m1_46 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonSerializerTest.cs", label="var largeOddWorkingNumber = JsonConvert.DeserializeObject<Foo64>(''{\''Blah\'': 53443333222211111117 }'')", span="234-234"];
m1_47 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''53443333222211111117'', largeOddWorkingNumber.Blah)", span="235-235"];
m1_48 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", span="229-229"];
m1_852 [cluster="string.Split(params char[])", file="JsonSerializerTest.cs", label="Entry string.Split(params char[])", span="0-0"];
m1_3653 [cluster="System.DateTimeOffset.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry System.DateTimeOffset.ToString(System.IFormatProvider)", span="0-0"];
m1_3901 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", span="9064-9064"];
m1_3902 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="9066-9066"];
m1_3903 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", span="9064-9064"];
m1_2073 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="4637-4637"];
m1_2074 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="DataContractJsonSerializerTestClass c = new DataContractJsonSerializerTestClass()", span="4639-4639"];
m1_2075 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="c.TimeSpanProperty = new TimeSpan(200, 20, 59, 30, 900)", span="4640-4640"];
m1_2076 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="c.GuidProperty = new Guid(''66143115-BE2A-4a59-AF0A-348E1EA15B1E'')", span="4641-4641"];
m1_2077 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="c.AnimalProperty = new Human() { Ethnicity = ''European'' }", span="4642-4642"];
m1_2080 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="serializer.WriteObject(ms, c)", span="4648-4648"];
m1_2078 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="4644-4644"];
m1_2079 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(\r\n                typeof(DataContractJsonSerializerTestClass),\r\n                new Type[] { typeof(Human) })", span="4645-4647"];
m1_2081 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="byte[] jsonBytes = ms.ToArray()", span="4650-4650"];
m1_2082 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="string json = Encoding.UTF8.GetString(jsonBytes, 0, jsonBytes.Length)", span="4651-4651"];
m1_2083 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="4637-4637"];
m1_3779 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", span="8702-8702"];
m1_3780 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''1234567890.123456''))", span="8704-8704"];
m1_3781 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs", label="var settings = new JsonSerializerSettings()", span="8705-8705"];
m1_3783 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs", label="decimal? d = serialiser.Deserialize<decimal?>(reader)", span="8707-8707"];
m1_3782 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs", label="var serialiser = JsonSerializer.Create(settings)", span="8706-8706"];
m1_3784 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1234567890.123456m, d)", span="8709-8709"];
m1_3785 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", span="8702-8702"];
m1_954 [cluster="System.DateTime.DateTime(int, int, int)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m1_2920 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedType.DerivedType()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedType.DerivedType()", span="6671-6671"];
m1_993 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="2151-2151"];
m1_994 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="2153-2153"];
m1_995 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="Hashtable p = JsonConvert.DeserializeObject(value, typeof(Hashtable)) as Hashtable", span="2155-2155"];
m1_996 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Orange'', p[''Name''].ToString())", span="2157-2157"];
m1_997 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="2151-2151"];
m1_1928 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="4113-4113"];
m1_1929 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="Dictionary<Guid, int> dictionary = new Dictionary<Guid, int>()", span="4115-4115"];
m1_1930 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="dictionary.Add(new Guid(''F60EAEE0-AE47-488E-B330-59527B742D77''), 1)", span="4116-4116"];
m1_1931 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="dictionary.Add(new Guid(''C2594C02-EBA1-426A-AA87-8DD8871350B0''), 2)", span="4117-4117"];
m1_1932 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="4119-4119"];
m1_1933 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''f60eaee0-ae47-488e-b330-59527b742d77'''': 1,\r\n  ''''c2594c02-eba1-426a-aa87-8dd8871350b0'''': 2\r\n}'', json)", span="4120-4123"];
m1_1934 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="4113-4113"];
m1_2612 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="5857-5857"];
m1_2613 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs", label="decimal? d = JsonConvert.DeserializeObject<decimal?>(''123456789876543.21'')", span="5859-5859"];
m1_2614 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123456789876543.21m, d)", span="5860-5860"];
m1_2615 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="5857-5857"];
m1_2395 [cluster="System.NotImplementedException.NotImplementedException()", file="JsonSerializerTest.cs", label="Entry System.NotImplementedException.NotImplementedException()", span="0-0"];
m1_4005 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", span="9266-9266"];
m1_4006 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs", label="DateTime dt = new DateTime(2000, 12, 22)", span="9268-9268"];
m1_4007 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="9269-9269"];
m1_4009 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new Dictionary<DateTime, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="9276-9279"];
m1_4012 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="9287-9287"];
m1_4008 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Formatting = Formatting.Indented\r\n            }", span="9270-9274"];
m1_4011 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs", label="Dictionary<DateTime, string> d = JsonConvert.DeserializeObject<Dictionary<DateTime, string>>(json, settings)", span="9285-9285"];
m1_4010 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22'''': ''''123''''\r\n}'', json)", span="9281-9283"];
m1_4013 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", span="9266-9266"];
m1_1559 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass.ConstructorAndRequiredTestClass(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass.ConstructorAndRequiredTestClass(string)", span="3320-3320"];
m1_1560 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass.ConstructorAndRequiredTestClass(string)", file="JsonSerializerTest.cs", label="TestProperty1 = testProperty1", span="3322-3322"];
m1_1561 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass.ConstructorAndRequiredTestClass(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass.ConstructorAndRequiredTestClass(string)", span="3320-3320"];
m1_2214 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", span="0-0"];
m1_376 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JsonSerializerTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m1_2500 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="5603-5603"];
m1_2501 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(new HashSet<string>()\r\n            {\r\n                ''One'',\r\n                ''2'',\r\n                ''III''\r\n            }, Formatting.Indented)", span="5605-5610"];
m1_2502 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  ''''One'''',\r\n  ''''2'''',\r\n  ''''III''''\r\n]'', jsonText)", span="5612-5616"];
m1_2503 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="HashSet<string> d = JsonConvert.DeserializeObject<HashSet<string>>(jsonText)", span="5618-5618"];
m1_2504 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, d.Count)", span="5620-5620"];
m1_2505 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="Assert.IsTrue(d.Contains(''One''))", span="5621-5621"];
m1_2506 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="Assert.IsTrue(d.Contains(''2''))", span="5622-5622"];
m1_2507 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="Assert.IsTrue(d.Contains(''III''))", span="5623-5623"];
m1_2508 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="5603-5603"];
m1_1150 [cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", span="790-790"];
m1_1040 [cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="268-268"];
m1_1701 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="3683-3683"];
m1_1702 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Uri uri = new Uri(''http://codeplex.com'')", span="3685-3685"];
m1_1703 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(uri)", span="3686-3686"];
m1_1704 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''http://codeplex.com/'', uri.ToString())", span="3688-3688"];
m1_1706 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(uri, newUri)", span="3691-3691"];
m1_1705 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Uri newUri = JsonConvert.DeserializeObject<Uri>(json)", span="3690-3690"];
m1_1707 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="3683-3683"];
m1_2412 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="5434-5434"];
m1_2413 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="var reference = new Dictionary<string, object>()", span="5438-5438"];
m1_2414 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="reference.Add(''$ref'', ''Persons'')", span="5439-5439"];
m1_2415 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="reference.Add(''$id'', 1)", span="5440-5440"];
m1_2419 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="child.Add(''Father'', reference)", span="5445-5445"];
m1_2416 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="var child = new Dictionary<string, object>()", span="5442-5442"];
m1_2417 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="child.Add(''_id'', 2)", span="5443-5443"];
m1_2418 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="child.Add(''Name'', ''Isabell'')", span="5444-5444"];
m1_2420 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="5447-5447"];
m1_2421 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Dictionary<string, object>>(json); }, ''Additional content found in JSON reference object. A JSON reference object should only have a $ref property. Path 'Father.$id', line 6, position 10.'')", span="5449-5449"];
m1_2422 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="5434-5434"];
m1_184 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolveDictionaryKey(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolveDictionaryKey(string)", span="479-479"];
m1_185 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolveDictionaryKey(string)", file="JsonSerializerTest.cs", label="return dictionaryKey;", span="481-481"];
m1_186 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolveDictionaryKey(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolveDictionaryKey(string)", span="479-479"];
m1_4148 [cluster="string.IsNullOrEmpty(string)", file="JsonSerializerTest.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m1_3413 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", span="7713-7713"];
m1_3414 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="PropertyItemConverter c = new PropertyItemConverter\r\n            {\r\n                Data = new[]\r\n                {\r\n                    ''one'',\r\n                    ''two'',\r\n                    ''three''\r\n                }\r\n            }", span="7715-7723"];
m1_3415 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c)", span="7725-7725"];
m1_3416 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Data'''':['''':::ONE:::'''','''':::TWO:::'''','''':::THREE:::'''']}'', json)", span="7727-7727"];
m1_3417 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", span="7713-7713"];
m1_388 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassVirtual.ChildClassVirtual()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassVirtual.ChildClassVirtual()", span="988-988"];
m1_3104 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", span="7100-7100"];
m1_3105 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonSerializerTest.cs", label="string json = @''[\r\n  1,\r\n  2,\r\n  3,\r\n  null\r\n]''", span="7102-7107"];
m1_3106 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json); }, ''Error converting value {null} to type 'System.Int32'. Path '[3]', line 5, position 6.'')", span="7109-7109"];
m1_3107 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", span="7100-7100"];
m1_3907 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", span="9074-9074"];
m1_3908 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="9076-9076"];
m1_3909 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", span="9074-9074"];
m1_1503 [cluster="Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", span="46-46"];
m1_747 [cluster="Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", span="171-171"];
m1_1413 [cluster="Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", span="29-29"];
m1_3770 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", span="8685-8685"];
m1_3771 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label="ISet<string> s1 = new HashSet<string>(new[] { ''1'', ''two'', ''III'' })", span="8687-8687"];
m1_3772 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(s1)", span="8689-8689"];
m1_3774 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(s1.Count, s2.Count)", span="8693-8693"];
m1_3775 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label=s1, span="8694-8694"];
m1_3773 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label="ISet<string> s2 = JsonConvert.DeserializeObject<ISet<string>>(json)", span="8691-8691"];
m1_3776 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label="Assert.IsTrue(s2.Contains(s))", span="8696-8696"];
m1_3777 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", span="8685-8685"];
m1_2042 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", span="4471-4471"];
m1_1110 [cluster="System.TimeSpan.FromHours(double)", file="JsonSerializerTest.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m1_1026 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="2209-2209"];
m1_1027 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="string json = @''{\r\n    results:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://www.google.com/'''',\r\n                url : ''''http://www.google.com/'''',\r\n                visibleUrl : ''''www.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:zhool8dxBV4J:www.google.com'''',\r\n                title : ''''Google'''',\r\n                titleNoFormatting : ''''Google'''',\r\n                content : ''''Enables users to search the Web, Usenet, and \r\nimages. Features include PageRank,   caching and translation of \r\nresults, and an option to find similar pages.''''\r\n            },\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://news.google.com/'''',\r\n                url : ''''http://news.google.com/'''',\r\n                visibleUrl : ''''news.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:Va_XShOz_twJ:news.google.com'''',\r\n                title : ''''Google News'''',\r\n                titleNoFormatting : ''''Google News'''',\r\n                content : ''''Aggregated headlines and a search engine of many of the world's news sources.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://groups.google.com/'''',\r\n                url : ''''http://groups.google.com/'''',\r\n                visibleUrl : ''''groups.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:x2uPD3hfkn0J:groups.google.com'''',\r\n                title : ''''Google Groups'''',\r\n                titleNoFormatting : ''''Google Groups'''',\r\n                content : ''''Enables users to search and browse the Usenet \r\narchives which consist of over 700   million messages, and post new \r\ncomments.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://maps.google.com/'''',\r\n                url : ''''http://maps.google.com/'''',\r\n                visibleUrl : ''''maps.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:dkf5u2twBXIJ:maps.google.com'''',\r\n                title : ''''Google Maps'''',\r\n                titleNoFormatting : ''''Google Maps'''',\r\n                content : ''''Provides directions, interactive maps, and \r\nsatellite/aerial imagery of the United   States. Can also search by \r\nkeyword such as type of business.''''\r\n            }\r\n        ],\r\n        \r\n    adResults:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch.ad'''',\r\n                title : ''''Gartner Symposium/ITxpo'''',\r\n                content1 : ''''Meet brilliant Gartner IT analysts'''',\r\n                content2 : ''''20-23 May 2007- Barcelona, Spain'''',\r\n                url : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                impressionUrl : \r\n''''http://www.google.com/uds/css/ad-indicator-on.gif?ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB'''', \r\n\r\n                unescapedUrl : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                visibleUrl : ''''www.gartner.com''''\r\n            }\r\n        ]\r\n}\r\n''", span="2211-2288"];
m1_1028 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="object o = JsonConvert.DeserializeObject(json)", span="2289-2289"];
m1_1029 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="string s = string.Empty", span="2290-2290"];
m1_1030 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="s += s", span="2291-2291"];
m1_1031 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="2209-2209"];
m1_2396 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", span="5400-5400"];
m1_2397 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="return objectType == typeof(Pos);", span="5402-5402"];
m1_2398 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", span="5400-5400"];
m1_3928 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", span="9109-9109"];
m1_3929 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="9111-9111"];
m1_3930 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", span="9109-9109"];
m1_2560 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", span="5722-5722"];
m1_3317 [cluster="Unk.ToUpper", file="JsonSerializerTest.cs", label="Entry Unk.ToUpper", span=""];
m1_3041 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.ReflectionContractResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.ReflectionContractResolver()", span="6869-6869"];
m1_2012 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="4409-4409"];
m1_2013 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs", label="JRawValueTestObject deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:3}'')", span="4411-4411"];
m1_2014 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''3'', deserialized.Value.ToString())", span="4412-4412"];
m1_2015 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs", label="deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:'3'}'')", span="4414-4414"];
m1_2016 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''''''3'''''', deserialized.Value.ToString())", span="4415-4415"];
m1_2017 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="4409-4409"];
m1_3755 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", span="8630-8630"];
m1_3756 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs", label="IDictionary<string, object> dates = new Dictionary<string, object>\r\n            {\r\n                { ''DateTime-Unspecified'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Unspecified) },\r\n                { ''DateTime-Utc'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc) },\r\n                { ''DateTime-Local'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Local) },\r\n                { ''DateTimeOffset-Zero'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero) },\r\n                { ''DateTimeOffset-Plus1'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1)) },\r\n                { ''DateTimeOffset-Plus15'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1.5)) }\r\n            }", span="8632-8640"];
m1_3757 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs", label="string expected = JsonConvert.SerializeObject(dates, Formatting.Indented)", span="8642-8642"];
m1_3758 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs", label="string actual = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = JsonSerializerSettings.DefaultDateFormatString\r\n            })", span="8644-8647"];
m1_3759 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expected, actual)", span="8649-8649"];
m1_3760 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", span="8630-8630"];
m1_3427 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", span="7755-7755"];
m1_3428 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="IDictionary<DateTimeOffset?, int> dic1 = new Dictionary<DateTimeOffset?, int>\r\n            {\r\n                { new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), 1 },\r\n                { new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero), 2 }\r\n            }", span="7757-7761"];
m1_3429 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="7763-7766"];
m1_3430 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''\/Date(976623132000+0000)\/'''': 1,\r\n  ''''\/Date(1386850332000+0000)\/'''': 2\r\n}'', json)", span="7768-7771"];
m1_3431 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="IDictionary<DateTimeOffset?, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTimeOffset?, int>>(json)", span="7773-7773"];
m1_3432 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2.Count)", span="7775-7775"];
m1_3433 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, dic2[new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7776-7776"];
m1_3434 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2[new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7777-7777"];
m1_3435 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", span="7755-7755"];
m1_2826 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObject.ImplementInterfaceObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObject.ImplementInterfaceObject()", span="6410-6410"];
m1_3010 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="763-763"];
m1_64 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_DateTime()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_DateTime()", span="265-265"];
m1_65 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_DateTime()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => JsonConvert.DeserializeObject<IList<bool>>(@''['2000-12-20T10:55:55Z']''),\r\n                ''Could not convert string to boolean: 2000-12-20T10:55:55Z. Path '[0]', line 1, position 23.'')", span="267-269"];
m1_66 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_DateTime()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_DateTime()", span="265-265"];
m1_1005 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="2175-2175"];
m1_1006 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="string value = JsonConvert.SerializeObject(new GetOnlyPropertyClass())", span="2177-2177"];
m1_1007 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="GetOnlyPropertyClass c = JsonConvert.DeserializeObject<GetOnlyPropertyClass>(value)", span="2179-2179"];
m1_1008 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c.Field, ''Field'')", span="2181-2181"];
m1_1009 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c.GetOnlyProperty, ''GetOnlyProperty'')", span="2182-2182"];
m1_1010 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="2175-2175"];
m1_1139 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", span="2483-2483"];
m1_1140 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="DateTime d = new DateTime(2000, 1, 1)", span="2485-2485"];
m1_1141 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="var anonymous =\r\n                new\r\n                {\r\n                    DateValue = d\r\n                }", span="2487-2491"];
m1_1147 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="Assert.AreEqual(d, anonymous.DateValue)", span="2503-2503"];
m1_1142 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="2493-2493"];
m1_1144 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(anonymous, settings)", span="2499-2499"];
m1_1146 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous, settings)", span="2502-2502"];
m1_1143 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="settings.Converters.Add(new IsoDateTimeConverter\r\n            {\r\n                DateTimeFormat = ''yyyy''\r\n            })", span="2494-2497"];
m1_1145 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DateValue'''':''''2000''''}'', json)", span="2500-2500"];
m1_1148 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", span="2483-2483"];
m1_2782 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="6267-6267"];
m1_2783 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs", label="string json = @''{A:''''Test''''}''", span="6269-6269"];
m1_2784 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs", label="var withoutParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithoutParameterisedConstructor>(json)", span="6271-6271"];
m1_2785 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs", label="var withParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithParameterisedConstructor>(json)", span="6272-6272"];
m1_2786 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(withoutParameterisedConstructor.B, withParameterisedConstructor.B)", span="6273-6273"];
m1_2787 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="6267-6267"];
m1_3326 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", span="7559-7559"];
m1_3327 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="IList<MultipleItemsClass> values = new List<MultipleItemsClass>()", span="7561-7561"];
m1_3328 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{ ''''name'''': ''''bar'''' }{ ''''name'''': ''''baz'''' }''))", span="7563-7563"];
m1_3334 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="values.Add(foo)", span="7576-7576"];
m1_3335 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, values.Count)", span="7579-7579"];
m1_3336 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''bar'', values[0].Name)", span="7580-7580"];
m1_3337 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''baz'', values[1].Name)", span="7581-7581"];
m1_3329 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="reader.SupportMultipleContent = true", span="7564-7564"];
m1_3331 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="!reader.Read()", span="7568-7568"];
m1_3333 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="MultipleItemsClass foo = serializer.Deserialize<MultipleItemsClass>(reader)", span="7574-7574"];
m1_3330 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label=true, span="7566-7566"];
m1_3332 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="7573-7573"];
m1_3338 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", span="7559-7559"];
m1_900 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualProperties.SubWithContractVirtualProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualProperties.SubWithContractVirtualProperties()", span="1884-1884"];
m1_311 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", span="813-813"];
m1_312 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs", label="FaqItem c = new FaqItem()", span="815-815"];
m1_313 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs", label="c.FaqId = 1", span="816-816"];
m1_314 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs", label="c.Sections.Add(new FaqSection())", span="817-817"];
m1_315 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="819-819"];
m1_316 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''FaqId'''': 1,\r\n  ''''Name'''': null,\r\n  ''''IsDeleted'''': false,\r\n  ''''FullSectionsProp'''': [\r\n    {}\r\n  ]\r\n}'', json)", span="821-828"];
m1_317 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs", label="FaqItem c2 = JsonConvert.DeserializeObject<FaqItem>(json)", span="830-830"];
m1_318 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c2.FaqId)", span="832-832"];
m1_319 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c2.Sections.Count)", span="833-833"];
m1_320 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", span="813-813"];
m1_3531 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", span="8028-8028"];
m1_3532 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs", label="string json = @''{ ''''ClassName'''' : ''''System.InvalidOperationException'''',\r\n  ''''Data'''' : null,\r\n  ''''ExceptionMethod'''' : ''''8\nLogin\nAppBiz, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null\nMyApp.LoginBiz\nMyApp.User Login()'''',\r\n  ''''HResult'''' : -2146233079,\r\n  ''''HelpURL'''' : null,\r\n  ''''InnerException'''' : { ''''ClassName'''' : ''''System.Exception'''',\r\n      ''''Data'''' : null,\r\n      ''''ExceptionMethod'''' : null,\r\n      ''''HResult'''' : -2146233088,\r\n      ''''HelpURL'''' : null,\r\n      ''''InnerException'''' : null,\r\n      ''''Message'''' : ''''Inner exception...'''',\r\n      ''''RemoteStackIndex'''' : 0,\r\n      ''''RemoteStackTraceString'''' : null,\r\n      ''''Source'''' : null,\r\n      ''''StackTraceString'''' : null,\r\n      ''''WatsonBuckets'''' : null\r\n    },\r\n  ''''Message'''' : ''''Outter exception...'''',\r\n  ''''RemoteStackIndex'''' : 0,\r\n  ''''RemoteStackTraceString'''' : null,\r\n  ''''Source'''' : ''''AppBiz'''',\r\n  ''''StackTraceString'''' : '''' at MyApp.LoginBiz.Login() in C:\\MyApp\\LoginBiz.cs:line 44\r\n at MyApp.LoginSvc.Login() in C:\\MyApp\\LoginSvc.cs:line 71\r\n at SyncInvokeLogin(Object , Object[] , Object[] )\r\n at System.ServiceModel.Dispatcher.SyncMethodInvoker.Invoke(Object instance, Object[] inputs, Object[]& outputs)\r\n at System.ServiceModel.Dispatcher.DispatchOperationRuntime.InvokeBegin(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage5(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage41(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage4(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage31(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage3(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage2(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage11(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage1(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.MessageRpc.Process(Boolean isOperationContextSet)'''',\r\n  ''''WatsonBuckets'''' : null\r\n}''", span="8030-8054"];
m1_3533 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs", label="InvalidOperationException exception = JsonConvert.DeserializeObject<InvalidOperationException>(json)", span="8056-8056"];
m1_3534 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(exception)", span="8057-8057"];
m1_3535 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs", label="CustomAssert.IsInstanceOfType(typeof(InvalidOperationException), exception)", span="8058-8058"];
m1_3536 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Outter exception...'', exception.Message)", span="8060-8060"];
m1_3537 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", span="8028-8028"];
m1_3587 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m1_412 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", span="1070-1070"];
m1_413 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs", label="var input = new ResponseWithNewGenericPropertyOverride<int>()\r\n            {\r\n                Message = ''Trying out integer as type parameter'',\r\n                Data = 25,\r\n                Result = ''This should be fine''\r\n            }", span="1072-1077"];
m1_414 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(input)", span="1079-1079"];
m1_416 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Data, deserialized.Data)", span="1082-1082"];
m1_417 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Message, deserialized.Message)", span="1083-1083"];
m1_418 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Result, deserialized.Result)", span="1084-1084"];
m1_415 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs", label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericPropertyOverride<int>>(json)", span="1080-1080"];
m1_419 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", span="1070-1070"];
m1_1390 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", span="30-30"];
m1_2000 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="4372-4372"];
m1_2001 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="ThisGenericTest<KeyValueId> g = new ThisGenericTest<KeyValueId>()", span="4374-4374"];
m1_2002 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="g.Add(new KeyValueId { Id = 1, Key = ''key1'', Value = ''value1'' })", span="4376-4376"];
m1_2003 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="g.Add(new KeyValueId { Id = 2, Key = ''key2'', Value = ''value2'' })", span="4377-4377"];
m1_2004 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="g.MyProperty = ''some value''", span="4379-4379"];
m1_2005 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="string json = g.ToJson()", span="4381-4381"];
m1_2006 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''MyProperty'''': ''''some value'''',\r\n  ''''TheItems'''': [\r\n    {\r\n      ''''Id'''': 1,\r\n      ''''Key'''': ''''key1'''',\r\n      ''''Value'''': ''''value1''''\r\n    },\r\n    {\r\n      ''''Id'''': 2,\r\n      ''''Key'''': ''''key2'''',\r\n      ''''Value'''': ''''value2''''\r\n    }\r\n  ]\r\n}'', json)", span="4383-4397"];
m1_2007 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="ThisGenericTest<KeyValueId> gen = JsonConvert.DeserializeObject<ThisGenericTest<KeyValueId>>(json)", span="4399-4399"];
m1_2008 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''some value'', gen.MyProperty)", span="4400-4400"];
m1_2009 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="4372-4372"];
m1_129 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="527-527"];
m1_4149 [cluster="System.Net.Mail.MailAddress.MailAddress(string, string)", file="JsonSerializerTest.cs", label="Entry System.Net.Mail.MailAddress.MailAddress(string, string)", span="0-0"];
m1_694 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1504-1504"];
m1_695 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''stringValue'', _stringValue)", span="1506-1506"];
m1_696 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''intValue'', _intValue)", span="1507-1507"];
m1_697 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''person1'', _person1, typeof(PersonReference))", span="1508-1508"];
m1_698 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''person2'', _person2, typeof(PersonReference))", span="1509-1509"];
m1_699 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''person3'', _person3, typeof(PersonReference))", span="1510-1510"];
m1_700 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''parent'', _parent, typeof(PreserveReferencesCallbackTestObject))", span="1511-1511"];
m1_701 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1504-1504"];
m1_170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Binding_DisallowNull.Binding_DisallowNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Binding_DisallowNull.Binding_DisallowNull()", span="443-443"];
m1_1372 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="2895-2895"];
m1_1373 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new GenericImpl())", span="2897-2897"];
m1_1374 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Id'''':0}'', json)", span="2898-2898"];
m1_1375 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="2895-2895"];
m1_3791 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", span="8738-8738"];
m1_3792 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs", label="BigInteger i = BigInteger.Parse(''123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990'')", span="8740-8740"];
m1_3793 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new[] { i }, Formatting.Indented)", span="8742-8742"];
m1_3794 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990\r\n]'', json)", span="8744-8746"];
m1_3795 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", span="8738-8738"];
m1_383 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", span="994-994"];
m1_384 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''IsTransient'''':true}'', JsonConvert.SerializeObject(new ChildClassVirtual { IsTransient = true }))", span="996-996"];
m1_385 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonSerializerTest.cs", label="var childClass = JsonConvert.DeserializeObject<ChildClassVirtual>(@''{''''IsTransient'''':true}'')", span="998-998"];
m1_386 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, childClass.IsTransient)", span="999-999"];
m1_387 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", span="994-994"];
m1_1859 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="3966-3966"];
m1_1860 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.SerializeObject(new MemoryStream(), new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error getting value from 'ReadTimeout' on 'System.IO.MemoryStream'.'')", span="3968-3979"];
m1_1861 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="3966-3966"];
m1_2144 [cluster="System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0"];
m1_1042 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="2317-2317"];
m1_1043 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="JsonPropertyClass test = new JsonPropertyClass()", span="2319-2319"];
m1_1044 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="test.Pie = ''Delicious''", span="2320-2320"];
m1_1045 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="test.SweetCakesCount = int.MaxValue", span="2321-2321"];
m1_1046 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(test)", span="2323-2323"];
m1_1049 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(test.Pie, test2.Pie)", span="2329-2329"];
m1_1050 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(test.SweetCakesCount, test2.SweetCakesCount)", span="2330-2330"];
m1_1047 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''pie'''':''''Delicious'''',''''pie1'''':''''PieChart!'''',''''sweet_cakes_count'''':2147483647}'', jsonText)", span="2325-2325"];
m1_1048 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="JsonPropertyClass test2 = JsonConvert.DeserializeObject<JsonPropertyClass>(jsonText)", span="2327-2327"];
m1_1051 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="2317-2317"];
m1_3238 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", span="7360-7360"];
m1_3239 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonSerializerTest.cs", label="byte[] b = JsonConvert.DeserializeObject<byte[]>('''')", span="7362-7362"];
m1_3240 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonSerializerTest.cs", label="Assert.IsNull(b)", span="7363-7363"];
m1_3241 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", span="7360-7360"];
m1_2815 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", span="6390-6390"];
m1_2816 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs", label="ChildWithDifferentOverrideObject cc = new ChildWithDifferentOverrideObject\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="6392-6396"];
m1_2817 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(cc)", span="6398-6398"];
m1_2818 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''differentVirtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="6399-6399"];
m1_2819 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", span="6390-6390"];
m1_3118 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", span="7140-7140"];
m1_3119 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''Integer'''': 1,\r\n  ''''NullableInteger1'''': 2,\r\n  ''''NullableInteger2'''': null\r\n}''", span="7142-7146"];
m1_3120 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<ConvertableIntTestClass>(json), ''Error converting value 1 to type 'Newtonsoft.Json.Tests.ConvertibleInt'. Path 'Integer', line 2, position 14.'')", span="7148-7148"];
m1_3121 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", span="7140-7140"];
m1_1075 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="JsonSerializerTest.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m1_3877 [cluster="Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", span="46-46"];
m1_2907 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", span="6651-6651"];
m1_2908 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="BusRun r = JsonConvert.DeserializeObject<BusRun>(''{\''Departures\'':[\''\\/Date(1309874148734-0400)\\/\'',\''\\/Date(1309874148739-0400)\\/\'',null],\''WheelchairAccessible\'':true}'')", span="6653-6653"];
m1_2909 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(List<DateTime?>), r.Departures.GetType())", span="6655-6655"];
m1_2910 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, r.Departures.Count())", span="6656-6656"];
m1_2911 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(r.Departures.ElementAt(0))", span="6657-6657"];
m1_2912 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(r.Departures.ElementAt(1))", span="6658-6658"];
m1_2913 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="Assert.IsNull(r.Departures.ElementAt(2))", span="6659-6659"];
m1_2914 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", span="6651-6651"];
m1_4210 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired", span=""];
m1_4211 [file="JsonSerializerTest.cs", label=c1, span=""];
m1_4212 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass", span=""];
m1_4213 [file="JsonSerializerTest.cs", label=c1, span=""];
m1_4214 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver", span=""];
m1_4215 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem", span=""];
m1_4216 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse", span=""];
m1_4217 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4218 [file="JsonSerializerTest.cs", label=referenceResolver, span=""];
m1_4219 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", span=""];
m1_4220 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast", span=""];
m1_4221 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", span=""];
m1_4222 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4223 [file="JsonSerializerTest.cs", label=strFromTest, span=""];
m1_4224 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass", span=""];
m1_4225 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass", span=""];
m1_4226 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", span=""];
m1_4227 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4228 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4229 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4230 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4231 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4232 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4233 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4234 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4235 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4236 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4237 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4238 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass", span=""];
m1_4239 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", span=""];
m1_4240 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4241 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor", span=""];
m1_4242 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1", span=""];
m1_4243 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2", span=""];
m1_4244 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", span=""];
m1_4245 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", span=""];
m1_4246 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>", span=""];
m1_4247 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", span=""];
m1_4248 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", span=""];
m1_4249 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4250 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty", span=""];
m1_4251 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey", span=""];
m1_4252 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass", span=""];
m1_4253 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4254 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector", span=""];
m1_4255 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived", span=""];
m1_4256 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base", span=""];
m1_4257 [file="JsonSerializerTest.cs", label="out Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span=""];
m1_4258 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span=""];
m1_4259 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor", span=""];
m1_4260 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor", span=""];
m1_4261 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty", span=""];
m1_4262 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty", span=""];
m1_4263 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes", span=""];
m1_4264 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException", span=""];
m1_4265 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4266 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4267 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4268 [file="JsonSerializerTest.cs", label=errors, span=""];
m1_4269 [file="JsonSerializerTest.cs", label=errors, span=""];
m1_4270 [file="JsonSerializerTest.cs", label=errors, span=""];
m1_4271 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4272 [file="JsonSerializerTest.cs", label=s, span=""];
m1_4273 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>", span=""];
m1_4274 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>", span=""];
m1_4275 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4276 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver", span=""];
m1_4277 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4278 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor", span=""];
m1_4279 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", span=""];
m1_4280 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType", span=""];
m1_4281 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType", span=""];
m1_4282 [file="JsonSerializerTest.cs", label=JsonMessage, span=""];
m1_4283 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.DecimalTest", span=""];
m1_4284 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor", span=""];
m1_4285 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor", span=""];
m1_4286 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor", span=""];
m2_60 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromBson()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(RegexOptions.IgnoreCase, c.Regex.Options)", span="146-146"];
m2_61 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromBson()", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromBson()", span="136-136"];
m2_62 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="MetadataPropertyHandlingTests.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m2_63 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", span="236-236"];
m2_14 [cluster="lambda expression", file="MetadataPropertyHandlingTests.cs", label="Entry lambda expression", span="105-113"];
m2_6 [cluster="Newtonsoft.Json.Converters.RegexConverter.RegexConverter()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Converters.RegexConverter.RegexConverter()", span="36-36"];
m2_143 [cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="310-310"];
m2_51 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(3, circularList.Count)", span="219-219"];
m2_29 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeISerializeRegexJson()", file="MetadataPropertyHandlingTests.cs", label="RegexTestClass r = JsonConvert.DeserializeObject<RegexTestClass>(json)", span="110-110"];
m2_105 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="522-522"];
m2_64 [cluster="lambda expression", file="MetadataPropertyHandlingTests.cs", label="Entry lambda expression", span="237-244"];
m2_198 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", span="635-635"];
m2_199 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", file="MetadataPropertyHandlingTests.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': ''''CircularReferenceClass''''\r\n}''", span="637-640"];
m2_200 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", file="MetadataPropertyHandlingTests.cs", label="MetadataPropertyDisabledTestClass c = new MetadataPropertyDisabledTestClass()", span="642-642"];
m2_201 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", file="MetadataPropertyHandlingTests.cs", label="JsonConvert.PopulateObject(json, c, new JsonSerializerSettings\r\n            {\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Ignore\r\n            })", span="644-647"];
m2_202 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(''1'', c.Id)", span="649-649"];
m2_203 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(''CircularReferenceClass'', c.Type)", span="650-650"];
m2_204 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", span="635-635"];
m2_80 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(3, result.Count)", span="277-277"];
m2_205 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", span="956-956"];
m2_17 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="817-817"];
m2_34 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", span="146-146"];
m2_43 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", span="146-146"];
m2_42 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="MetadataPropertyHandlingTests.cs", label="CollectionAssert.AreEquivalent(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }, bytes)", span="180-180"];
m2_41 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="MetadataPropertyHandlingTests.cs", label="byte[] bytes = (byte[])actual.Payload", span="179-179"];
m2_38 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="MetadataPropertyHandlingTests.cs", label="Item actual = JsonConvert.DeserializeObject<Item>(jsonString, new JsonSerializerSettings\r\n            {\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n            })", span="172-175"];
m2_39 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), actual.SourceTypeID)", span="177-177"];
m2_36 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="MetadataPropertyHandlingTests.cs", label="string jsonString = JsonConvert.SerializeObject(expected, Formatting.Indented)", span="158-158"];
m2_40 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''), actual.BrokerID)", span="178-178"];
m2_37 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", color=red, community=0, file="MetadataPropertyHandlingTests.cs", label="-1: StringAssert.AreEqual(@''{\r\n  ''''SourceTypeID'''': ''''d8220a4b-75b1-4b7a-8112-b7bdae956a45'''',\r\n  ''''BrokerID'''': ''''951663c4-924e-4c86-a57a-7ed737501dbd'''',\r\n  ''''Latitude'''': 33.657145,\r\n  ''''Longitude'''': -117.766684,\r\n  ''''TimeStamp'''': ''''2000-03-01T23:59:59Z'''',\r\n  ''''Payload'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''AAECAwQFBgcICQ==''''\r\n  }\r\n}'', jsonString)", span="160-170"];
m2_35 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="MetadataPropertyHandlingTests.cs", label="Item expected = new Item()\r\n            {\r\n                SourceTypeID = new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''),\r\n                BrokerID = new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''),\r\n                Latitude = 33.657145,\r\n                Longitude = -117.766684,\r\n                TimeStamp = new DateTime(2000, 3, 1, 23, 59, 59, DateTimeKind.Utc),\r\n                Payload = new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }\r\n            }", span="148-156"];
m2_44 [cluster="Newtonsoft.Json.Tests.TestObjects.Item.Item()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Item.Item()", span="29-29"];
m2_92 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="MetadataPropertyHandlingTests.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="190-190"];
m2_93 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="MetadataPropertyHandlingTests.cs", label="BsonReader reader = new BsonReader(ms)", span="191-191"];
m2_94 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="MetadataPropertyHandlingTests.cs", label="serializer.Converters.Add(new RegexConverter())", span="192-192"];
m2_95 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="MetadataPropertyHandlingTests.cs", label="RegexTestClass c = serializer.Deserialize<RegexTestClass>(reader)", span="194-194"];
m2_96 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(''/'', c.Regex.ToString())", span="196-196"];
m2_101 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromText()", file="MetadataPropertyHandlingTests.cs", label="Regex newRegex = JsonConvert.DeserializeObject<Regex>(json, new RegexConverter())", span="209-209"];
m2_97 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(RegexOptions.IgnoreCase | RegexOptions.Singleline | RegexOptions.Multiline | RegexOptions.ExplicitCapture, c.Regex.Options)", span="197-197"];
m2_98 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", span="172-172"];
m2_99 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromText()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromText()", span="202-202"];
m2_100 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromText()", file="MetadataPropertyHandlingTests.cs", label="string json = @''{\r\n  ''''Pattern'''': ''''abc'''',\r\n  ''''Options'''': 513\r\n}''", span="204-207"];
m2_102 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromText()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(''abc'', newRegex.ToString())", span="210-210"];
m2_103 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromText()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(RegexOptions.IgnoreCase | RegexOptions.CultureInvariant, newRegex.Options)", span="211-211"];
m2_155 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyDisabledTestClass.MetadataPropertyDisabledTestClass()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyDisabledTestClass.MetadataPropertyDisabledTestClass()", span="441-441"];
m2_48 [cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="MetadataPropertyHandlingTests.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0"];
m2_49 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.RegexTestClass.RegexTestClass()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.RegexConverterTests.RegexTestClass.RegexTestClass()", span="47-47"];
m2_50 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="1042-1042"];
m2_52 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[])", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[])", span="220-220"];
m2_53 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromBson()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromBson()", span="136-136"];
m2_54 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromBson()", file="MetadataPropertyHandlingTests.cs", label="MemoryStream ms = new MemoryStream(HexToBytes(''13-00-00-00-0B-52-65-67-65-78-00-61-62-63-00-69-75-00-00''))", span="138-138"];
m2_55 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromBson()", file="MetadataPropertyHandlingTests.cs", label="BsonReader reader = new BsonReader(ms)", span="139-139"];
m2_56 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromBson()", file="MetadataPropertyHandlingTests.cs", label="JsonSerializer serializer = new JsonSerializer()", span="140-140"];
m2_57 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromBson()", file="MetadataPropertyHandlingTests.cs", label="serializer.Converters.Add(new RegexConverter())", span="141-141"];
m2_7 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="564-564"];
m2_25 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", color=red, community=0, file="MetadataPropertyHandlingTests.cs", label="-1: StringAssert.AreEqual(@''{\r\n  ''''$type'''': ''''System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Guid, mscorlib]], mscorlib'''',\r\n  ''''k1'''': ''''5dd2dba0-20c0-49f8-a054-1fa3b0a8d774''''\r\n}'', serializedString)", span="134-137"];
m2_67 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="MetadataPropertyHandlingTests.cs", label="Regex regex = new Regex(string.Empty)", span="152-152"];
m2_141 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameProperty.TypeNameProperty()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameProperty.TypeNameProperty()", span="639-639"];
m2_59 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromBson()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(''abc'', c.Regex.ToString())", span="145-145"];
m2_84 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="MetadataPropertyHandlingTests.cs", label="MemoryStream ms = new MemoryStream()", span="178-178"];
m2_85 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="MetadataPropertyHandlingTests.cs", label="BsonWriter writer = new BsonWriter(ms)", span="179-179"];
m2_86 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="MetadataPropertyHandlingTests.cs", label="JsonSerializer serializer = new JsonSerializer()", span="180-180"];
m2_87 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="MetadataPropertyHandlingTests.cs", label="serializer.Converters.Add(new RegexConverter())", span="181-181"];
m2_88 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="MetadataPropertyHandlingTests.cs", label="serializer.Serialize(writer, new RegexTestClass { Regex = regex })", span="183-183"];
m2_89 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="MetadataPropertyHandlingTests.cs", label="string expected = ''14-00-00-00-0B-52-65-67-65-78-00-2F-00-69-6D-73-75-78-00-00''", span="185-185"];
m2_90 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="MetadataPropertyHandlingTests.cs", label="string bson = BytesToHex(ms.ToArray())", span="186-186"];
m2_91 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(expected, bson)", span="188-188"];
m2_106 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexJson()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexJson()", span="215-215"];
m2_82 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(''blah!'', (string)((JObject)result[''Father''])[''blah''])", span="279-279"];
m2_83 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", span="248-248"];
m2_47 [cluster="Unk.AreEquivalent", file="MetadataPropertyHandlingTests.cs", label="Entry Unk.AreEquivalent", span=""];
m2_156 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore_EmptyObject()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore_EmptyObject()", span="494-494"];
m2_157 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore_EmptyObject()", file="MetadataPropertyHandlingTests.cs", label="string json = @''{}''", span="496-496"];
m2_158 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore_EmptyObject()", file="MetadataPropertyHandlingTests.cs", label="MetadataPropertyDisabledTestClass c = JsonConvert.DeserializeObject<MetadataPropertyDisabledTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Ignore\r\n            })", span="498-501"];
m2_159 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore_EmptyObject()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(null, c.Id)", span="503-503"];
m2_160 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore_EmptyObject()", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore_EmptyObject()", span="494-494"];
m2_31 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeISerializeRegexJson()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(RegexOptions.IgnoreCase | RegexOptions.ExplicitCapture, r.Regex.Options)", span="113-113"];
m2_161 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", span="507-507"];
m2_162 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", file="MetadataPropertyHandlingTests.cs", label="Item actual = JsonConvert.DeserializeObject<Item>(@''{\r\n  ''''SourceTypeID'''': ''''d8220a4b-75b1-4b7a-8112-b7bdae956a45'''',\r\n  ''''BrokerID'''': ''''951663c4-924e-4c86-a57a-7ed737501dbd'''',\r\n  ''''Latitude'''': 33.657145,\r\n  ''''Longitude'''': -117.766684,\r\n  ''''TimeStamp'''': ''''2000-03-01T23:59:59Z'''',\r\n  ''''Payload'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''AAECAwQFBgcICQ==''''\r\n  }\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.Ignore\r\n                })", span="509-523"];
m2_163 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), actual.SourceTypeID)", span="525-525"];
m2_164 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''), actual.BrokerID)", span="526-526"];
m2_165 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", file="MetadataPropertyHandlingTests.cs", label="JObject o = (JObject)actual.Payload", span="527-527"];
m2_166 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(''System.Byte[], mscorlib'', (string)o[''$type''])", span="528-528"];
m2_167 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(''AAECAwQFBgcICQ=='', (string)o[''$value''])", span="529-529"];
m2_168 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(null, o.Parent)", span="530-530"];
m2_169 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", span="507-507"];
m2_170 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", span="534-534"];
m2_171 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", file="MetadataPropertyHandlingTests.cs", label="ItemWithUntypedPayload actual = JsonConvert.DeserializeObject<ItemWithUntypedPayload>(@''{\r\n  ''''Payload'''': {}\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n                })", span="536-542"];
m2_172 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", file="MetadataPropertyHandlingTests.cs", label="JObject o = (JObject)actual.Payload", span="544-544"];
m2_173 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(null, o.Parent)", span="545-545"];
m2_174 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", span="534-534"];
m2_0 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToText()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToText()", span="53-53"];
m2_1 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToText()", file="MetadataPropertyHandlingTests.cs", label="Regex regex = new Regex(''abc'', RegexOptions.IgnoreCase | RegexOptions.CultureInvariant)", span="55-55"];
m2_2 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToText()", file="MetadataPropertyHandlingTests.cs", label="string json = JsonConvert.SerializeObject(regex, Formatting.Indented, new RegexConverter())", span="57-57"];
m2_3 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToText()", file="MetadataPropertyHandlingTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Pattern'''': ''''abc'''',\r\n  ''''Options'''': 513\r\n}'', json)", span="59-62"];
m2_4 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToText()", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToText()", span="53-53"];
m2_5 [cluster="System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", file="MetadataPropertyHandlingTests.cs", label="Entry System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", span="0-0"];
m2_18 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeCamelCaseAndStringEnums()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeCamelCaseAndStringEnums()", span="83-83"];
m2_19 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeCamelCaseAndStringEnums()", file="MetadataPropertyHandlingTests.cs", label="string json = @''{\r\n  ''''pattern'''': ''''abc'''',\r\n  ''''options'''': ''''ignoreCase''''\r\n}''", span="85-88"];
m2_20 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeCamelCaseAndStringEnums()", file="MetadataPropertyHandlingTests.cs", label="Regex regex = JsonConvert.DeserializeObject<Regex>(json, new JsonSerializerSettings\r\n            {\r\n                Converters = { new RegexConverter() }\r\n            })", span="90-93"];
m2_22 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeCamelCaseAndStringEnums()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(RegexOptions.IgnoreCase, regex.Options)", span="96-96"];
m2_27 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeISerializeRegexJson()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeISerializeRegexJson()", span="100-100"];
m2_21 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeCamelCaseAndStringEnums()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(''abc'', regex.ToString())", span="95-95"];
m2_24 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="766-766"];
m2_23 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeCamelCaseAndStringEnums()", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeCamelCaseAndStringEnums()", span="83-83"];
m2_26 [cluster="Unk.AreEqual", file="MetadataPropertyHandlingTests.cs", label="Entry Unk.AreEqual", span=""];
m2_28 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeISerializeRegexJson()", file="MetadataPropertyHandlingTests.cs", label="string json = @''{\r\n                        ''''Regex'''': {\r\n                          ''''pattern'''': ''''(hi)'''',\r\n                          ''''options'''': 5,\r\n                          ''''matchTimeout'''': -10000\r\n                        }\r\n                      }''", span="102-108"];
m2_140 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", span="153-153"];
m2_30 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="MetadataPropertyHandlingTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m2_32 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="585-585"];
m2_16 [cluster="lambda expression", file="MetadataPropertyHandlingTests.cs", label="Exit lambda expression", span="105-113"];
m2_58 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromBson()", file="MetadataPropertyHandlingTests.cs", label="RegexTestClass c = serializer.Deserialize<RegexTestClass>(reader)", span="143-143"];
m2_8 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="329-329"];
m2_144 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", span="460-460"];
m2_145 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="MetadataPropertyHandlingTests.cs", label="MetadataPropertyDisabledTestClass c1 = new MetadataPropertyDisabledTestClass\r\n            {\r\n                Id = ''Id!'',\r\n                Ref = ''Ref!'',\r\n                Type = ''Type!'',\r\n                Value = ''Value!'',\r\n                Values = ''Values!''\r\n            }", span="462-469"];
m2_146 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="MetadataPropertyHandlingTests.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="471-471"];
m2_147 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="MetadataPropertyHandlingTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''$id'''': ''''Id!'''',\r\n  ''''$ref'''': ''''Ref!'''',\r\n  ''''$value'''': ''''Value!'''',\r\n  ''''$values'''': ''''Values!'''',\r\n  ''''$type'''': ''''Type!''''\r\n}'', json)", span="473-479"];
m2_148 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="MetadataPropertyHandlingTests.cs", label="MetadataPropertyDisabledTestClass c2 = JsonConvert.DeserializeObject<MetadataPropertyDisabledTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Ignore\r\n            })", span="481-484"];
m2_149 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(''Id!'', c2.Id)", span="486-486"];
m2_150 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(''Ref!'', c2.Ref)", span="487-487"];
m2_151 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(''Type!'', c2.Type)", span="488-488"];
m2_152 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(''Value!'', c2.Value)", span="489-489"];
m2_153 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(''Values!'', c2.Values)", span="490-490"];
m2_154 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", span="460-460"];
m2_45 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="MetadataPropertyHandlingTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m2_111 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs", label="string json = @''[\r\n  {\r\n    ''''Name'''': ''''Bob'''',\r\n    ''''$id'''': ''''1'''',\r\n    ''''$type'''': '''''' + employeeRef + @'''''',\r\n    ''''Manager'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$type'''': '''''' + employeeRef + @'''''',\r\n      ''''Name'''': ''''Frank'''',\r\n      ''''Manager'''': null\r\n    }\r\n  },\r\n  {\r\n    ''''Name'''': null,\r\n    ''''$type'''': '''''' + personRef + @'''''',\r\n    ''''BirthDate'''': ''''\/Date(978134400000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978134400000)\/''''\r\n  },\r\n  ''''String!'''',\r\n  -2147483648\r\n]''", span="352-372"];
m2_112 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs", label="List<object> values = (List<object>)JsonConvert.DeserializeObject(json, typeof(List<object>), new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Full,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n            })", span="374-379"];
m2_110 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs", label="string personRef = typeof(Person).AssemblyQualifiedName", span="350-350"];
m2_108 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", span="347-347"];
m2_109 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs", label="string employeeRef = typeof(EmployeeReference).AssemblyQualifiedName", span="349-349"];
m2_107 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="155-155"];
m2_113 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(4, values.Count)", span="381-381"];
m2_46 [cluster="Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", span="66-66"];
m2_121 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(''String!'', values[2])", span="393-393"];
m2_33 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="340-340"];
m2_104 [cluster="Newtonsoft.Json.Linq.JToken.CloneToken()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.CloneToken()", span="132-132"];
m2_65 [cluster="lambda expression", file="MetadataPropertyHandlingTests.cs", label="JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Objects,\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n                })", span="239-243"];
m2_9 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeCamelCaseAndStringEnums()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeCamelCaseAndStringEnums()", span="66-66"];
m2_10 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeCamelCaseAndStringEnums()", file="MetadataPropertyHandlingTests.cs", label="Regex regex = new Regex(''abc'', RegexOptions.IgnoreCase)", span="68-68"];
m2_11 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeCamelCaseAndStringEnums()", file="MetadataPropertyHandlingTests.cs", label="string json = JsonConvert.SerializeObject(regex, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                Converters = { new RegexConverter(), new StringEnumConverter() { CamelCaseText = true } },\r\n                ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n            })", span="70-74"];
m2_12 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeCamelCaseAndStringEnums()", file="MetadataPropertyHandlingTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''pattern'''': ''''abc'''',\r\n  ''''options'''': ''''ignoreCase''''\r\n}'', json)", span="76-79"];
m2_114 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs", label="EmployeeReference e = (EmployeeReference)values[0]", span="383-383"];
m2_116 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(''Bob'', e.Name)", span="386-386"];
m2_118 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(null, p.Name)", span="389-389"];
m2_115 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs", label="Person p = (Person)values[1]", span="384-384"];
m2_117 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(''Frank'', e.Manager.Name)", span="387-387"];
m2_119 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(new DateTime(2000, 12, 30, 0, 0, 0, DateTimeKind.Utc), p.BirthDate)", span="390-390"];
m2_81 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(1, ((JObject)result[''Father'']).Count)", span="278-278"];
m2_13 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="369-369"];
m2_124 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", span="398-398"];
m2_125 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs", label="string listRef = ReflectionUtils.GetTypeName(typeof(List<int>), FormatterAssemblyStyle.Simple, null)", span="400-400"];
m2_126 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs", label="TypeNameHandlingTests.TypeNameProperty typeNameProperty = new TypeNameHandlingTests.TypeNameProperty\r\n            {\r\n                Name = ''Name!'',\r\n                Value = new List<int> { 1, 2, 3, 4, 5 }\r\n            }", span="402-406"];
m2_128 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Value'''': {\r\n    ''''$type'''': '''''' + listRef + @'''''',\r\n    ''''$values'''': [\r\n      1,\r\n      2,\r\n      3,\r\n      4,\r\n      5\r\n    ]\r\n  }\r\n}'', json)", span="410-422"];
m2_127 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs", label="string json = JsonConvert.SerializeObject(typeNameProperty, Formatting.Indented)", span="408-408"];
m2_129 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs", label="TypeNameHandlingTests.TypeNameProperty deserialized = JsonConvert.DeserializeObject<TypeNameHandlingTests.TypeNameProperty>(json, new JsonSerializerSettings\r\n            {\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n            })", span="424-427"];
m2_130 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(''Name!'', deserialized.Name)", span="428-428"];
m2_131 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(List<int>), deserialized.Value)", span="429-429"];
m2_132 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs", label="List<int> nested = (List<int>)deserialized.Value", span="431-431"];
m2_133 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(5, nested.Count)", span="432-432"];
m2_134 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(1, nested[0])", span="433-433"];
m2_135 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(2, nested[1])", span="434-434"];
m2_136 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(3, nested[2])", span="435-435"];
m2_137 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(4, nested[3])", span="436-436"];
m2_138 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(5, nested[4])", span="437-437"];
m2_139 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", span="398-398"];
m2_68 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="MetadataPropertyHandlingTests.cs", label="MemoryStream ms = new MemoryStream()", span="154-154"];
m2_69 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="MetadataPropertyHandlingTests.cs", label="BsonWriter writer = new BsonWriter(ms)", span="155-155"];
m2_70 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="MetadataPropertyHandlingTests.cs", label="JsonSerializer serializer = new JsonSerializer()", span="156-156"];
m2_71 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="MetadataPropertyHandlingTests.cs", label="serializer.Converters.Add(new RegexConverter())", span="157-157"];
m2_72 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="MetadataPropertyHandlingTests.cs", label="serializer.Serialize(writer, new RegexTestClass { Regex = regex })", span="159-159"];
m2_76 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="MetadataPropertyHandlingTests.cs", label="RegexTestClass c = serializer.Deserialize<RegexTestClass>(reader)", span="165-165"];
m2_73 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="MetadataPropertyHandlingTests.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="161-161"];
m2_74 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="MetadataPropertyHandlingTests.cs", label="BsonReader reader = new BsonReader(ms)", span="162-162"];
m2_75 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="MetadataPropertyHandlingTests.cs", label="serializer.Converters.Add(new RegexConverter())", span="163-163"];
m2_77 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual('''', c.Regex.ToString())", span="167-167"];
m2_78 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", color=green, community=0, file="MetadataPropertyHandlingTests.cs", label="-1: Assert.AreEqual(RegexOptions.None, c.Regex.Options)", span="168-168"];
m2_79 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", span="150-150"];
m2_15 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", span="62-62"];
m2_66 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", span="150-150"];
m2_187 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JArray_NoParent()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JArray_NoParent()", span="584-584"];
m2_188 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JArray_NoParent()", file="MetadataPropertyHandlingTests.cs", label="ItemWithUntypedPayload actual = JsonConvert.DeserializeObject<ItemWithUntypedPayload>(@''{\r\n  ''''Payload'''': [1]\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n                })", span="586-592"];
m2_189 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JArray_NoParent()", file="MetadataPropertyHandlingTests.cs", label="JArray o = (JArray)actual.Payload", span="594-594"];
m2_190 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JArray_NoParent()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(null, o.Parent)", span="595-595"];
m2_191 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JArray_NoParent()", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JArray_NoParent()", span="584-584"];
m2_175 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", span="556-556"];
m2_176 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="MetadataPropertyHandlingTests.cs", label="ItemWithJTokens actual = (ItemWithJTokens)JsonConvert.DeserializeObject(@''{\r\n  ''''Payload1'''': 1,\r\n  ''''Payload2'''': {'prop1':1,'prop2':[2]},\r\n  ''''Payload3'''': [1],\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests+ItemWithJTokens, Newtonsoft.Json.Tests''''\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead,\r\n                    TypeNameHandling = TypeNameHandling.All\r\n                })", span="558-568"];
m2_177 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(JTokenType.Integer, actual.Payload1.Type)", span="570-570"];
m2_178 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(1, (int)actual.Payload1)", span="571-571"];
m2_179 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(null, actual.Payload1.Parent)", span="572-572"];
m2_180 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(JTokenType.Object, actual.Payload2.Type)", span="574-574"];
m2_181 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(1, (int)actual.Payload2[''prop1''])", span="575-575"];
m2_182 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(2, (int)actual.Payload2[''prop2''][0])", span="576-576"];
m2_183 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(null, actual.Payload2.Parent)", span="577-577"];
m2_184 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(1, (int)actual.Payload3[0])", span="579-579"];
m2_185 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(null, actual.Payload3.Parent)", span="580-580"];
m2_186 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", span="556-556"];
m2_122 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs", label="Newtonsoft.Json.Tests.Converters.RegexConverterTests", span=""];
m2_120 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SimpleClassWithRegex.SimpleClassWithRegex()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.RegexConverterTests.SimpleClassWithRegex.SimpleClassWithRegex()", span="233-233"];
m2_123 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", span="347-347"];
m2_192 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", span="604-604"];
m2_193 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", file="MetadataPropertyHandlingTests.cs", label="ItemWithUntypedPayload actual = JsonConvert.DeserializeObject<ItemWithUntypedPayload>(@''{\r\n  ''''Payload'''': {\r\n    ''''$type'''': ''''System.Single, mscorlib'''',\r\n    ''''$value'''': ''''5''''\r\n  }\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Auto\r\n                })", span="606-615"];
m2_194 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(5f, actual.Payload)", span="617-617"];
m2_195 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", file="MetadataPropertyHandlingTests.cs", label="actual = JsonConvert.DeserializeObject<ItemWithUntypedPayload>(@''{\r\n  ''''Payload'''': {\r\n    ''''$type'''': ''''System.Single, mscorlib'''',\r\n    ''''$value'''': ''''5''''\r\n  }\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Auto,\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.Ignore\r\n                })", span="619-629"];
m2_196 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", file="MetadataPropertyHandlingTests.cs", label="Assert.IsTrue(actual.Payload is JObject)", span="631-631"];
m2_197 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", span="604-604"];
m2_206 [file="MetadataPropertyHandlingTests.cs", label=json, span=""];
m2_207 [file="MetadataPropertyHandlingTests.cs", label=json, span=""];
m3_15 [cluster="Unk.AreEqual", file="PreserveReferencesHandlingTests.cs", label="Entry Unk.AreEqual", span=""];
m3_0 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ReadJTokenFromBson.Example()", file="PreserveReferencesHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.ReadJTokenFromBson.Example()", span="46-46"];
m3_1 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ReadJTokenFromBson.Example()", file="PreserveReferencesHandlingTests.cs", label="byte[] data = Convert.FromBase64String(''KQAAAAJuYW1lMQAHAAAAdmFsdWUxAAJuYW1lMgAHAAAAdmFsdWUyAAA='')", span="49-49"];
m3_2 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ReadJTokenFromBson.Example()", file="PreserveReferencesHandlingTests.cs", label="MemoryStream ms = new MemoryStream(data)", span="50-50"];
m3_3 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ReadJTokenFromBson.Example()", file="PreserveReferencesHandlingTests.cs", label="JObject o", span="52-52"];
m3_4 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ReadJTokenFromBson.Example()", file="PreserveReferencesHandlingTests.cs", label="BsonReader reader = new BsonReader(ms)", span="53-53"];
m3_5 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ReadJTokenFromBson.Example()", file="PreserveReferencesHandlingTests.cs", label="o = (JObject)JToken.ReadFrom(reader)", span="55-55"];
m3_6 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ReadJTokenFromBson.Example()", file="PreserveReferencesHandlingTests.cs", label="string value = (string)o[''name1'']", span="58-58"];
m3_7 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ReadJTokenFromBson.Example()", file="PreserveReferencesHandlingTests.cs", label="Console.WriteLine(value)", span="60-60"];
m3_8 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ReadJTokenFromBson.Example()", file="PreserveReferencesHandlingTests.cs", label="Assert.AreEqual(''value1'', value)", span="64-64"];
m3_9 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ReadJTokenFromBson.Example()", file="PreserveReferencesHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.ReadJTokenFromBson.Example()", span="46-46"];
m3_12 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", file="PreserveReferencesHandlingTests.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="125-125"];
m3_11 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="PreserveReferencesHandlingTests.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m3_13 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="PreserveReferencesHandlingTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="2096-2096"];
m3_10 [cluster="System.Convert.FromBase64String(string)", file="PreserveReferencesHandlingTests.cs", label="Entry System.Convert.FromBase64String(string)", span="0-0"];
m3_14 [cluster="System.Console.WriteLine(string)", file="PreserveReferencesHandlingTests.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m4_185 [cluster="Unk.>", file="StringEnumConverterTests.cs", label="Entry Unk.>", span=""];
m4_22 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNameEnumTest()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNameEnumTest()", span="144-144"];
m4_23 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNameEnumTest()", file="StringEnumConverterTests.cs", label="EnumContainer<NamedEnum> c = new EnumContainer<NamedEnum>\r\n            {\r\n                Enum = NamedEnum.First\r\n            }", span="146-149"];
m4_24 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNameEnumTest()", file="StringEnumConverterTests.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new StringEnumConverter())", span="151-151"];
m4_25 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNameEnumTest()", file="StringEnumConverterTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Enum'''': ''''@first''''\r\n}'', json)", span="152-154"];
m4_26 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNameEnumTest()", file="StringEnumConverterTests.cs", label="c = new EnumContainer<NamedEnum>\r\n            {\r\n                Enum = NamedEnum.Third\r\n            }", span="156-159"];
m4_27 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNameEnumTest()", file="StringEnumConverterTests.cs", label="json = JsonConvert.SerializeObject(c, Formatting.Indented, new StringEnumConverter())", span="161-161"];
m4_28 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNameEnumTest()", file="StringEnumConverterTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Enum'''': ''''Third''''\r\n}'', json)", span="162-164"];
m4_29 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNameEnumTest()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNameEnumTest()", span="144-144"];
m4_136 [cluster="System.IO.StringReader.StringReader(string)", file="StringEnumConverterTests.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m4_39 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="802-802"];
m4_138 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeIntegerButNotAllowed()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeIntegerButNotAllowed()", span="394-394"];
m4_139 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeIntegerButNotAllowed()", file="StringEnumConverterTests.cs", label="string json = ''{ \''Value\'' : 123 }''", span="396-396"];
m4_140 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeIntegerButNotAllowed()", file="StringEnumConverterTests.cs", label="var serializer = new JsonSerializer()", span="400-400"];
m4_142 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeIntegerButNotAllowed()", file="StringEnumConverterTests.cs", label="serializer.Deserialize<Bucket>(new JsonTextReader(new StringReader(json)))", span="402-402"];
m4_141 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeIntegerButNotAllowed()", file="StringEnumConverterTests.cs", label="serializer.Converters.Add(new StringEnumConverter { AllowIntegerValues = false })", span="401-401"];
m4_143 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeIntegerButNotAllowed()", file="StringEnumConverterTests.cs", label=JsonSerializationException, span="404-404"];
m4_147 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeIntegerButNotAllowed()", file="StringEnumConverterTests.cs", label="Assert.Fail()", span="412-412"];
m4_144 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeIntegerButNotAllowed()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''Error converting value 123 to type 'Newtonsoft.Json.Tests.Converters.StringEnumConverterTests+MyEnum'. Path 'Value', line 1, position 15.'', ex.Message)", span="406-406"];
m4_145 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeIntegerButNotAllowed()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(@''Integer value 123 is not allowed. Path 'Value', line 1, position 15.'', ex.InnerException.Message)", span="407-407"];
m4_146 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeIntegerButNotAllowed()", file="StringEnumConverterTests.cs", label="return;", span="409-409"];
m4_148 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeIntegerButNotAllowed()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeIntegerButNotAllowed()", span="394-394"];
m4_6 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.Deserialize_CamelCaseFromAttribute()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.Deserialize_CamelCaseFromAttribute()", span="122-122"];
m4_7 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.Deserialize_CamelCaseFromAttribute()", file="StringEnumConverterTests.cs", label="CamelCaseEnum e = JsonConvert.DeserializeObject<CamelCaseEnum>(@''''''camelCase'''''')", span="124-124"];
m4_8 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.Deserialize_CamelCaseFromAttribute()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(CamelCaseEnum.CamelCase, e)", span="125-125"];
m4_9 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.Deserialize_CamelCaseFromAttribute()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.Deserialize_CamelCaseFromAttribute()", span="122-122"];
m4_73 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNegativeEnum()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNegativeEnum()", span="255-255"];
m4_74 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNegativeEnum()", file="StringEnumConverterTests.cs", label="NegativeEnumClass negativeEnumClass = new NegativeEnumClass()", span="257-257"];
m4_75 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNegativeEnum()", file="StringEnumConverterTests.cs", label="negativeEnumClass.Value1 = NegativeEnum.Negative", span="258-258"];
m4_76 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNegativeEnum()", file="StringEnumConverterTests.cs", label="negativeEnumClass.Value2 = (NegativeEnum)int.MinValue", span="259-259"];
m4_77 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNegativeEnum()", file="StringEnumConverterTests.cs", label="string json = JsonConvert.SerializeObject(negativeEnumClass, Formatting.Indented, new StringEnumConverter())", span="261-261"];
m4_78 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNegativeEnum()", file="StringEnumConverterTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Value1'''': ''''Negative'''',\r\n  ''''Value2'''': -2147483648\r\n}'', json)", span="263-266"];
m4_79 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNegativeEnum()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNegativeEnum()", span="255-255"];
m4_113 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumDeserialization()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumDeserialization()", span="346-346"];
m4_114 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumDeserialization()", file="StringEnumConverterTests.cs", label="string json = @''{\r\n  ''''Enum'''': ''''first, second''''\r\n}''", span="348-350"];
m4_115 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumDeserialization()", file="StringEnumConverterTests.cs", label="EnumContainer<FlagsTestEnum> c = JsonConvert.DeserializeObject<EnumContainer<FlagsTestEnum>>(json, new StringEnumConverter { CamelCaseText = true })", span="352-352"];
m4_116 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumDeserialization()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(FlagsTestEnum.First | FlagsTestEnum.Second, c.Enum)", span="353-353"];
m4_117 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumDeserialization()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumDeserialization()", span="346-346"];
m4_123 [cluster="Unk.IsNull", file="StringEnumConverterTests.cs", label="Entry Unk.IsNull", span=""];
m4_40 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClass()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClass()", span="187-187"];
m4_41 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClass()", file="StringEnumConverterTests.cs", label="EnumClass enumClass = new EnumClass()", span="189-189"];
m4_42 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClass()", file="StringEnumConverterTests.cs", label="enumClass.StoreColor = StoreColor.Red", span="190-190"];
m4_43 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClass()", file="StringEnumConverterTests.cs", label="enumClass.NullableStoreColor1 = StoreColor.White", span="191-191"];
m4_44 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClass()", file="StringEnumConverterTests.cs", label="enumClass.NullableStoreColor2 = null", span="192-192"];
m4_45 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClass()", file="StringEnumConverterTests.cs", label="string json = JsonConvert.SerializeObject(enumClass, Formatting.Indented, new StringEnumConverter())", span="194-194"];
m4_46 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClass()", file="StringEnumConverterTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''StoreColor'''': ''''Red'''',\r\n  ''''NullableStoreColor1'''': ''''White'''',\r\n  ''''NullableStoreColor2'''': null\r\n}'', json)", span="196-200"];
m4_47 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClass()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClass()", span="187-187"];
m4_19 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumContainer<T>.EnumContainer()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumContainer<T>.EnumContainer()", span="58-58"];
m4_193 [cluster="Newtonsoft.Json.Tests.Converters.DuplicateEnumNameTestClass.DuplicateEnumNameTestClass()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.DuplicateEnumNameTestClass.DuplicateEnumNameTestClass()", span="531-531"];
m4_81 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNegativeEnum()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNegativeEnum()", span="270-270"];
m4_82 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNegativeEnum()", file="StringEnumConverterTests.cs", label="string json = @''{\r\n  ''''Value1'''': ''''Negative'''',\r\n  ''''Value2'''': -2147483648\r\n}''", span="272-275"];
m4_83 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNegativeEnum()", file="StringEnumConverterTests.cs", label="NegativeEnumClass negativeEnumClass = JsonConvert.DeserializeObject<NegativeEnumClass>(json, new StringEnumConverter())", span="277-277"];
m4_84 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNegativeEnum()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(NegativeEnum.Negative, negativeEnumClass.Value1)", span="279-279"];
m4_85 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNegativeEnum()", file="StringEnumConverterTests.cs", label="Assert.AreEqual((NegativeEnum)int.MinValue, negativeEnumClass.Value2)", span="280-280"];
m4_86 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNegativeEnum()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNegativeEnum()", span="270-270"];
m4_184 [cluster="DataContractSerializer.cstr", file="StringEnumConverterTests.cs", label="Entry DataContractSerializer.cstr", span=""];
m4_94 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClass()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClass()", span="300-300"];
m4_95 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClass()", file="StringEnumConverterTests.cs", label="string json = @''{\r\n  ''''StoreColor'''': ''''Red'''',\r\n  ''''NullableStoreColor1'''': ''''White'''',\r\n  ''''NullableStoreColor2'''': null\r\n}''", span="302-306"];
m4_96 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClass()", file="StringEnumConverterTests.cs", label="EnumClass enumClass = JsonConvert.DeserializeObject<EnumClass>(json, new StringEnumConverter())", span="308-308"];
m4_97 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClass()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(StoreColor.Red, enumClass.StoreColor)", span="310-310"];
m4_98 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClass()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(StoreColor.White, enumClass.NullableStoreColor1)", span="311-311"];
m4_99 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClass()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(null, enumClass.NullableStoreColor2)", span="312-312"];
m4_100 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClass()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClass()", span="300-300"];
m4_133 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="478-478"];
m4_118 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEmptyStringIntoNullable()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEmptyStringIntoNullable()", span="357-357"];
m4_119 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEmptyStringIntoNullable()", file="StringEnumConverterTests.cs", label="string json = @''{\r\n  ''''StoreColor'''': ''''Red'''',\r\n  ''''NullableStoreColor1'''': ''''White'''',\r\n  ''''NullableStoreColor2'''': ''''''''\r\n}''", span="359-363"];
m4_120 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEmptyStringIntoNullable()", file="StringEnumConverterTests.cs", label="EnumClass c = JsonConvert.DeserializeObject<EnumClass>(json, new StringEnumConverter())", span="365-365"];
m4_121 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEmptyStringIntoNullable()", file="StringEnumConverterTests.cs", label="Assert.IsNull(c.NullableStoreColor2)", span="366-366"];
m4_122 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEmptyStringIntoNullable()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEmptyStringIntoNullable()", span="357-357"];
m4_172 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DuplicateNameEnumTest()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DuplicateNameEnumTest()", span="470-470"];
m4_173 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DuplicateNameEnumTest()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<DuplicateNameEnum>('''foo_bar''', new StringEnumConverter()),\r\n                @''Error converting value ''''foo_bar'''' to type 'Newtonsoft.Json.Tests.Converters.DuplicateNameEnum'. Path '', line 1, position 9.'')", span="472-474"];
m4_174 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DuplicateNameEnumTest()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DuplicateNameEnumTest()", span="470-470"];
m4_21 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="567-567"];
m4_134 [cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="StringEnumConverterTests.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0"];
m4_57 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassUndefined()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassUndefined()", span="221-221"];
m4_58 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassUndefined()", file="StringEnumConverterTests.cs", label="EnumClass enumClass = new EnumClass()", span="223-223"];
m4_59 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassUndefined()", file="StringEnumConverterTests.cs", label="enumClass.StoreColor = (StoreColor)1000", span="224-224"];
m4_60 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassUndefined()", file="StringEnumConverterTests.cs", label="enumClass.NullableStoreColor1 = (StoreColor)1000", span="225-225"];
m4_61 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassUndefined()", file="StringEnumConverterTests.cs", label="enumClass.NullableStoreColor2 = null", span="226-226"];
m4_62 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassUndefined()", file="StringEnumConverterTests.cs", label="string json = JsonConvert.SerializeObject(enumClass, Formatting.Indented, new StringEnumConverter())", span="228-228"];
m4_63 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassUndefined()", file="StringEnumConverterTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''StoreColor'''': 1000,\r\n  ''''NullableStoreColor1'''': 1000,\r\n  ''''NullableStoreColor2'''': null\r\n}'', json)", span="230-234"];
m4_64 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassUndefined()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassUndefined()", span="221-221"];
m4_11 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.NamedEnumDuplicateTest()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.NamedEnumDuplicateTest()", span="130-130"];
m4_12 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.NamedEnumDuplicateTest()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<Exception>(() =>\r\n            {\r\n                EnumContainer<NamedEnumDuplicate> c = new EnumContainer<NamedEnumDuplicate>\r\n                {\r\n                    Enum = NamedEnumDuplicate.First\r\n                };\r\n\r\n                JsonConvert.SerializeObject(c, Formatting.Indented, new StringEnumConverter());\r\n            }, ''Enum name 'Third' already exists on enum 'NamedEnumDuplicate'.'')", span="132-140"];
m4_13 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.NamedEnumDuplicateTest()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.NamedEnumDuplicateTest()", span="130-130"];
m4_5 [cluster="Unk.AreEqual", file="StringEnumConverterTests.cs", label="Entry Unk.AreEqual", span=""];
m4_183 [cluster="System.IO.MemoryStream.MemoryStream()", file="StringEnumConverterTests.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m4_197 [cluster="Unk.ReadObject", file="StringEnumConverterTests.cs", label="Entry Unk.ReadObject", span=""];
m4_49 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", span="204-204"];
m4_50 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", file="StringEnumConverterTests.cs", label="EnumClass enumClass = new EnumClass()", span="206-206"];
m4_51 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", file="StringEnumConverterTests.cs", label="enumClass.StoreColor = StoreColor.Red", span="207-207"];
m4_52 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", file="StringEnumConverterTests.cs", label="enumClass.NullableStoreColor1 = StoreColor.DarkGoldenrod", span="208-208"];
m4_53 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", file="StringEnumConverterTests.cs", label="enumClass.NullableStoreColor2 = null", span="209-209"];
m4_54 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", file="StringEnumConverterTests.cs", label="string json = JsonConvert.SerializeObject(enumClass, Formatting.Indented, new StringEnumConverter { CamelCaseText = true })", span="211-211"];
m4_55 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", file="StringEnumConverterTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''StoreColor'''': ''''red'''',\r\n  ''''NullableStoreColor1'''': ''''darkGoldenrod'''',\r\n  ''''NullableStoreColor2'''': null\r\n}'', json)", span="213-217"];
m4_56 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", span="204-204"];
m4_4 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="527-527"];
m4_194 [cluster="Unk.WriteObject", file="StringEnumConverterTests.cs", label="Entry Unk.WriteObject", span=""];
m4_65 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeFlagEnum()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeFlagEnum()", span="238-238"];
m4_66 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeFlagEnum()", file="StringEnumConverterTests.cs", label="EnumClass enumClass = new EnumClass()", span="240-240"];
m4_67 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeFlagEnum()", file="StringEnumConverterTests.cs", label="enumClass.StoreColor = StoreColor.Red | StoreColor.White", span="241-241"];
m4_68 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeFlagEnum()", file="StringEnumConverterTests.cs", label="enumClass.NullableStoreColor1 = StoreColor.White & StoreColor.Yellow", span="242-242"];
m4_69 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeFlagEnum()", file="StringEnumConverterTests.cs", label="enumClass.NullableStoreColor2 = StoreColor.Red | StoreColor.White | StoreColor.Black", span="243-243"];
m4_70 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeFlagEnum()", file="StringEnumConverterTests.cs", label="string json = JsonConvert.SerializeObject(enumClass, Formatting.Indented, new StringEnumConverter())", span="245-245"];
m4_71 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeFlagEnum()", file="StringEnumConverterTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''StoreColor'''': ''''Red, White'''',\r\n  ''''NullableStoreColor1'''': 0,\r\n  ''''NullableStoreColor2'''': ''''Black, Red, White''''\r\n}'', json)", span="247-251"];
m4_72 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeFlagEnum()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeFlagEnum()", span="238-238"];
m4_178 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DataContractSerializerDuplicateNameEnumTest()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DataContractSerializerDuplicateNameEnumTest()", span="502-502"];
m4_179 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DataContractSerializerDuplicateNameEnumTest()", file="StringEnumConverterTests.cs", label="MemoryStream ms = new MemoryStream()", span="504-504"];
m4_180 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DataContractSerializerDuplicateNameEnumTest()", file="StringEnumConverterTests.cs", label="var s = new DataContractSerializer(typeof(DuplicateEnumNameTestClass))", span="505-505"];
m4_181 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DataContractSerializerDuplicateNameEnumTest()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<InvalidDataContractException>(() =>\r\n            {\r\n                s.WriteObject(ms, new DuplicateEnumNameTestClass\r\n                {\r\n                    Value = DuplicateNameEnum.foo_bar,\r\n                    Value2 = DuplicateNameEnum2.foo_bar_NOT_USED\r\n                });\r\n\r\n                string xml = @''<DuplicateEnumNameTestClass xmlns=''''http://schemas.datacontract.org/2004/07/Newtonsoft.Json.Tests.Converters'''' xmlns:i=''''http://www.w3.org/2001/XMLSchema-instance''''>\r\n    <Value>foo_bar</Value>\r\n    <Value2>foo_bar</Value2>\r\n</DuplicateEnumNameTestClass>'';\r\n\r\n                var o = (DuplicateEnumNameTestClass)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(xml)));\r\n\r\n                Assert.AreEqual(DuplicateNameEnum.foo_bar, o.Value);\r\n                Assert.AreEqual(DuplicateNameEnum2.FooBar, o.Value2);\r\n            }, ''Type 'Newtonsoft.Json.Tests.Converters.DuplicateNameEnum' contains two members 'foo_bar' 'and 'FooBar' with the same name 'foo_bar'. Multiple members with the same name in one type are not supported. Consider changing one of the member names using EnumMemberAttribute attribute.'')", span="507-524"];
m4_182 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DataContractSerializerDuplicateNameEnumTest()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DataContractSerializerDuplicateNameEnumTest()", span="502-502"];
m4_10 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="754-754"];
m4_101 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClassUndefined()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClassUndefined()", span="316-316"];
m4_102 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClassUndefined()", file="StringEnumConverterTests.cs", label="string json = @''{\r\n  ''''StoreColor'''': 1000,\r\n  ''''NullableStoreColor1'''': 1000,\r\n  ''''NullableStoreColor2'''': null\r\n}''", span="318-322"];
m4_103 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClassUndefined()", file="StringEnumConverterTests.cs", label="EnumClass enumClass = JsonConvert.DeserializeObject<EnumClass>(json, new StringEnumConverter())", span="324-324"];
m4_104 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClassUndefined()", file="StringEnumConverterTests.cs", label="Assert.AreEqual((StoreColor)1000, enumClass.StoreColor)", span="326-326"];
m4_105 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClassUndefined()", file="StringEnumConverterTests.cs", label="Assert.AreEqual((StoreColor)1000, enumClass.NullableStoreColor1)", span="327-327"];
m4_106 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClassUndefined()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(null, enumClass.NullableStoreColor2)", span="328-328"];
m4_107 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClassUndefined()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClassUndefined()", span="316-316"];
m4_150 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", span="417-417"];
m4_151 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="List<Foo> lfoo =\r\n                new List<Foo>\r\n                {\r\n                    Foo.Bat | Foo.SerializeAsBaz,\r\n                    Foo.FooBar,\r\n                    Foo.Bat,\r\n                    Foo.SerializeAsBaz,\r\n                    Foo.FooBar | Foo.SerializeAsBaz,\r\n                    (Foo)int.MaxValue\r\n                }", span="419-428"];
m4_152 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="string json1 = JsonConvert.SerializeObject(lfoo, Formatting.Indented, new StringEnumConverter { CamelCaseText = true })", span="430-430"];
m4_153 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="StringAssert.AreEqual(@''[\r\n  ''''Bat, baz'''',\r\n  ''''foo_bar'''',\r\n  ''''Bat'''',\r\n  ''''baz'''',\r\n  ''''foo_bar, baz'''',\r\n  2147483647\r\n]'', json1)", span="432-439"];
m4_154 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="IList<Foo> foos = JsonConvert.DeserializeObject<List<Foo>>(json1)", span="441-441"];
m4_155 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(6, foos.Count)", span="443-443"];
m4_156 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(Foo.Bat | Foo.SerializeAsBaz, foos[0])", span="444-444"];
m4_157 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(Foo.FooBar, foos[1])", span="445-445"];
m4_158 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(Foo.Bat, foos[2])", span="446-446"];
m4_159 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(Foo.SerializeAsBaz, foos[3])", span="447-447"];
m4_160 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(Foo.FooBar | Foo.SerializeAsBaz, foos[4])", span="448-448"];
m4_161 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="Assert.AreEqual((Foo)int.MaxValue, foos[5])", span="449-449"];
m4_162 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="List<Bar> lbar = new List<Bar>() { Bar.FooBar, Bar.Bat, Bar.SerializeAsBaz }", span="451-451"];
m4_163 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="string json2 = JsonConvert.SerializeObject(lbar, Formatting.Indented, new StringEnumConverter { CamelCaseText = true })", span="453-453"];
m4_164 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="StringAssert.AreEqual(@''[\r\n  ''''foo_bar'''',\r\n  ''''Bat'''',\r\n  ''''baz''''\r\n]'', json2)", span="455-459"];
m4_165 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="IList<Bar> bars = JsonConvert.DeserializeObject<List<Bar>>(json2)", span="461-461"];
m4_166 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(3, bars.Count)", span="463-463"];
m4_167 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(Bar.FooBar, bars[0])", span="464-464"];
m4_168 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(Bar.Bat, bars[1])", span="465-465"];
m4_169 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(Bar.SerializeAsBaz, bars[2])", span="466-466"];
m4_170 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", span="417-417"];
m4_87 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeFlagEnum()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeFlagEnum()", span="284-284"];
m4_88 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeFlagEnum()", file="StringEnumConverterTests.cs", label="string json = @''{\r\n  ''''StoreColor'''': ''''Red, White'''',\r\n  ''''NullableStoreColor1'''': 0,\r\n  ''''NullableStoreColor2'''': ''''black, Red, White''''\r\n}''", span="286-290"];
m4_89 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeFlagEnum()", file="StringEnumConverterTests.cs", label="EnumClass enumClass = JsonConvert.DeserializeObject<EnumClass>(json, new StringEnumConverter())", span="292-292"];
m4_90 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeFlagEnum()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(StoreColor.Red | StoreColor.White, enumClass.StoreColor)", span="294-294"];
m4_91 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeFlagEnum()", file="StringEnumConverterTests.cs", label="Assert.AreEqual((StoreColor)0, enumClass.NullableStoreColor1)", span="295-295"];
m4_92 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeFlagEnum()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(StoreColor.Red | StoreColor.White | StoreColor.Black, enumClass.NullableStoreColor2)", span="296-296"];
m4_93 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeFlagEnum()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeFlagEnum()", span="284-284"];
m4_137 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="787-787"];
m4_48 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumClass.EnumClass()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumClass.EnumClass()", span="51-51"];
m4_31 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNameEnumTest()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNameEnumTest()", span="168-168"];
m4_32 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNameEnumTest()", file="StringEnumConverterTests.cs", label="string json = @''{\r\n  ''''Enum'''': ''''@first''''\r\n}''", span="170-172"];
m4_33 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNameEnumTest()", file="StringEnumConverterTests.cs", label="EnumContainer<NamedEnum> c = JsonConvert.DeserializeObject<EnumContainer<NamedEnum>>(json, new StringEnumConverter())", span="174-174"];
m4_34 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNameEnumTest()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(NamedEnum.First, c.Enum)", span="175-175"];
m4_35 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNameEnumTest()", file="StringEnumConverterTests.cs", label="json = @''{\r\n  ''''Enum'''': ''''Third''''\r\n}''", span="177-179"];
m4_36 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNameEnumTest()", file="StringEnumConverterTests.cs", label="c = JsonConvert.DeserializeObject<EnumContainer<NamedEnum>>(json, new StringEnumConverter())", span="181-181"];
m4_37 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNameEnumTest()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(NamedEnum.Third, c.Enum)", span="182-182"];
m4_38 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNameEnumTest()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNameEnumTest()", span="168-168"];
m4_149 [cluster="Unk.Fail", file="StringEnumConverterTests.cs", label="Entry Unk.Fail", span=""];
m4_108 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumSerialization()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumSerialization()", span="332-332"];
m4_109 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumSerialization()", file="StringEnumConverterTests.cs", label="EnumContainer<FlagsTestEnum> c = new EnumContainer<FlagsTestEnum>\r\n            {\r\n                Enum = FlagsTestEnum.First | FlagsTestEnum.Second\r\n            }", span="334-337"];
m4_110 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumSerialization()", file="StringEnumConverterTests.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new StringEnumConverter { CamelCaseText = true })", span="339-339"];
m4_111 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumSerialization()", file="StringEnumConverterTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Enum'''': ''''first, second''''\r\n}'', json)", span="340-342"];
m4_112 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumSerialization()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumSerialization()", span="332-332"];
m4_135 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="78-78"];
m4_30 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="340-340"];
m4_186 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="507-524"];
m4_15 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="132-140"];
m4_16 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="EnumContainer<NamedEnumDuplicate> c = new EnumContainer<NamedEnumDuplicate>\r\n                {\r\n                    Enum = NamedEnumDuplicate.First\r\n                }", span="134-137"];
m4_17 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="JsonConvert.SerializeObject(c, Formatting.Indented, new StringEnumConverter())", span="139-139"];
m4_18 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="132-140"];
m4_131 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="serializer.Deserialize<Bucket>(new JsonTextReader(new StringReader(json)))", span="378-378"];
m4_128 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="374-379"];
m4_129 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="var serializer = new JsonSerializer()", span="376-376"];
m4_130 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="serializer.Converters.Add(new StringEnumConverter())", span="377-377"];
m4_132 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="374-379"];
m4_175 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="473-473"];
m4_176 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="JsonConvert.DeserializeObject<DuplicateNameEnum>('''foo_bar''', new StringEnumConverter())", span="473-473"];
m4_177 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="473-473"];
m4_187 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="s.WriteObject(ms, new DuplicateEnumNameTestClass\r\n                {\r\n                    Value = DuplicateNameEnum.foo_bar,\r\n                    Value2 = DuplicateNameEnum2.foo_bar_NOT_USED\r\n                })", span="509-513"];
m4_189 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="var o = (DuplicateEnumNameTestClass)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(xml)))", span="520-520"];
m4_188 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="string xml = @''<DuplicateEnumNameTestClass xmlns=''''http://schemas.datacontract.org/2004/07/Newtonsoft.Json.Tests.Converters'''' xmlns:i=''''http://www.w3.org/2001/XMLSchema-instance''''>\r\n    <Value>foo_bar</Value>\r\n    <Value2>foo_bar</Value2>\r\n</DuplicateEnumNameTestClass>''", span="515-518"];
m4_190 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Assert.AreEqual(DuplicateNameEnum.foo_bar, o.Value)", span="522-522"];
m4_191 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Assert.AreEqual(DuplicateNameEnum2.FooBar, o.Value2)", span="523-523"];
m4_192 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="507-524"];
m4_0 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.Serialize_CamelCaseFromAttribute()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.Serialize_CamelCaseFromAttribute()", span="115-115"];
m4_1 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.Serialize_CamelCaseFromAttribute()", file="StringEnumConverterTests.cs", label="string json = JsonConvert.SerializeObject(CamelCaseEnum.CamelCase)", span="117-117"];
m4_2 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.Serialize_CamelCaseFromAttribute()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(@''''''camelCase'''''', json)", span="118-118"];
m4_3 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.Serialize_CamelCaseFromAttribute()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.Serialize_CamelCaseFromAttribute()", span="115-115"];
m4_195 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="StringEnumConverterTests.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m4_196 [cluster="System.Text.Encoding.GetBytes(string)", file="StringEnumConverterTests.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m4_124 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeInvalidString()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeInvalidString()", span="370-370"];
m4_125 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeInvalidString()", file="StringEnumConverterTests.cs", label="string json = ''{ \''Value\'' : \''Three\'' }''", span="372-372"];
m4_126 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeInvalidString()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                var serializer = new JsonSerializer();\r\n                serializer.Converters.Add(new StringEnumConverter());\r\n                serializer.Deserialize<Bucket>(new JsonTextReader(new StringReader(json)));\r\n            }, @''Error converting value ''''Three'''' to type 'Newtonsoft.Json.Tests.Converters.StringEnumConverterTests+MyEnum'. Path 'Value', line 1, position 19.'')", span="374-379"];
m4_127 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeInvalidString()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeInvalidString()", span="370-370"];
m4_14 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="369-369"];
m4_20 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", span="60-60"];
m4_80 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.NegativeEnumClass.NegativeEnumClass()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.NegativeEnumClass.NegativeEnumClass()", span="100-100"];
m4_198 [file="StringEnumConverterTests.cs", label=json, span=""];
m4_199 [file="StringEnumConverterTests.cs", label=ms, span=""];
m4_200 [file="StringEnumConverterTests.cs", label=s, span=""];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n0 -> n8  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n1 -> n2  [key=0, style=solid];
n1 -> n12  [key=2, style=dotted];
n1 -> n7  [color=darkseagreen4, key=1, label=map, style=dashed];
n1 -> n9  [color=darkseagreen4, key=1, label=map, style=dashed];
n1 -> n10  [color=darkseagreen4, key=1, label=map, style=dashed];
n2 -> n3  [key=0, style=solid];
n2 -> n10  [key=0, style=solid];
n2 -> n13  [key=2, style=dotted];
n2 -> n5  [color=darkseagreen4, key=1, label=f, style=dashed];
n8 -> n11  [key=0, style=solid];
n8 -> n19  [key=2, style=dotted];
n8 -> n20  [key=2, style=dotted];
n7 -> n8  [key=0, style=solid];
n7 -> n9  [key=0, style=solid];
n7 -> n18  [key=2, style=dotted];
n9 -> n2  [key=0, style=solid];
n9 -> n21  [key=2, style=dotted];
n10 -> n11  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n3 -> n9  [color=darkseagreen4, key=1, label=n1, style=dashed];
n5 -> n6  [key=0, style=solid];
n5 -> n14  [key=2, style=dotted];
n5 -> n15  [key=2, style=dotted];
n5 -> n16  [key=2, style=dotted];
n5 -> n17  [key=2, style=dotted];
n5 -> n22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n5 -> n7  [color=darkseagreen4, key=1, label=n2, style=dashed];
n5 -> n8  [color=darkseagreen4, key=1, label=n2, style=dashed];
n5 -> n9  [color=darkseagreen4, key=1, label=n2, style=dashed];
n4 -> n5  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n22 -> n23  [key=0, style=solid];
n11 -> n0  [color=blue, key=0, style=bold];
n23 -> n24  [key=0, style=solid];
n24 -> n22  [color=blue, key=0, style=bold];
n25 -> n26  [key=0, style=solid];
n25 -> n29  [color=darkseagreen4, key=1, label=T, style=dashed];
n25 -> n30  [color=darkseagreen4, key=1, label=T, style=dashed];
n25 -> n32  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IList<T> GetFlagsValues", style=bold];
n26 -> n27  [key=0, style=solid];
n26 -> n28  [color=darkseagreen4, key=1, label=enumType, style=dashed];
n29 -> n30  [key=0, style=solid];
n29 -> n43  [key=2, style=dotted];
n29 -> n44  [key=2, style=dotted];
n29 -> n35  [color=darkseagreen4, key=1, label=underlyingType, style=dashed];
n30 -> n31  [key=0, style=solid];
n30 -> n45  [key=2, style=dotted];
n30 -> n34  [color=darkseagreen4, key=1, label=num, style=dashed];
n27 -> n28  [key=0, style=solid];
n27 -> n29  [key=0, style=solid];
n27 -> n40  [key=2, style=dotted];
n28 -> n39  [key=0, style=solid];
n28 -> n41  [key=2, style=dotted];
n28 -> n42  [key=2, style=dotted];
n35 -> n33  [key=0, style=solid];
n35 -> n48  [key=2, style=dotted];
n35 -> n49  [key=2, style=dotted];
n31 -> n32  [key=0, style=solid];
n31 -> n46  [key=2, style=dotted];
n31 -> n33  [color=darkseagreen4, key=1, label=enumNameValues, style=dashed];
n31 -> n36  [color=darkseagreen4, key=1, label=enumNameValues, style=dashed];
n34 -> n35  [key=0, style=solid];
n34 -> n33  [key=0, style=solid];
n32 -> n33  [key=0, style=solid];
n32 -> n47  [key=2, style=dotted];
n32 -> n35  [color=darkseagreen4, key=1, label=selectedFlagsValues, style=dashed];
n32 -> n36  [color=darkseagreen4, key=1, label=selectedFlagsValues, style=dashed];
n32 -> n37  [color=darkseagreen4, key=1, label=selectedFlagsValues, style=dashed];
n32 -> n38  [color=darkseagreen4, key=1, label=selectedFlagsValues, style=dashed];
n46 -> n53  [key=0, style=solid];
n46 -> n55  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IList<Newtonsoft.Json.Utilities.EnumValue<ulong>> GetNamesAndValues", style=bold];
n33 -> n34  [key=0, style=solid];
n33 -> n36  [key=0, style=solid];
n33 -> n35  [color=darkseagreen4, key=1, label=enumNameValue, style=dashed];
n36 -> n37  [key=0, style=solid];
n36 -> n38  [key=0, style=solid];
n36 -> n17  [key=2, style=dotted];
n36 -> n50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n37 -> n38  [key=0, style=solid];
n37 -> n49  [key=2, style=dotted];
n38 -> n39  [key=0, style=solid];
n50 -> n51  [key=0, style=solid];
n39 -> n25  [color=blue, key=0, style=bold];
n51 -> n52  [key=0, style=solid];
n52 -> n50  [color=blue, key=0, style=bold];
n53 -> n54  [key=0, style=solid];
n53 -> n55  [key=2, style=dotted];
n54 -> n46  [color=blue, key=0, style=bold];
n55 -> n56  [key=0, style=solid];
n55 -> n57  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n55 -> n58  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n55 -> n59  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n55 -> n60  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n55 -> n61  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n55 -> n67  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n55 -> n62  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IList<Newtonsoft.Json.Utilities.EnumValue<TUnderlyingType>> GetNamesAndValues", style=bold];
n56 -> n57  [key=0, style=solid];
n56 -> n58  [key=0, style=solid];
n57 -> n70  [key=0, style=solid];
n57 -> n71  [key=2, style=dotted];
n57 -> n72  [key=2, style=dotted];
n58 -> n59  [key=0, style=solid];
n58 -> n60  [key=0, style=solid];
n58 -> n73  [key=2, style=dotted];
n59 -> n70  [key=0, style=solid];
n59 -> n74  [key=2, style=dotted];
n59 -> n42  [key=2, style=dotted];
n59 -> n72  [key=2, style=dotted];
n60 -> n61  [key=0, style=solid];
n60 -> n75  [key=2, style=dotted];
n60 -> n64  [color=darkseagreen4, key=1, label=enumValues, style=dashed];
n60 -> n65  [color=darkseagreen4, key=1, label=enumValues, style=dashed];
n60 -> n67  [color=darkseagreen4, key=1, label=enumValues, style=dashed];
n61 -> n62  [key=0, style=solid];
n61 -> n76  [key=2, style=dotted];
n61 -> n65  [color=darkseagreen4, key=1, label=enumNames, style=dashed];
n67 -> n70  [key=0, style=solid];
n67 -> n78  [key=2, style=dotted];
n67 -> n44  [key=2, style=dotted];
n67 -> n45  [key=2, style=dotted];
n67 -> n79  [key=2, style=dotted];
n75 -> n80  [key=0, style=solid];
n75 -> n81  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n75 -> n83  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n75 -> n85  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n75 -> n55  [color=darkorchid, key=3, label="Parameter variable System.Type enumType", style=bold];
n75 -> n82  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IList<object> GetValues", style=bold];
n64 -> n65  [key=0, style=solid];
n64 -> n69  [key=0, style=solid];
n64 -> n64  [color=darkorchid, key=3, label="Local variable int i", style=bold];
n65 -> n66  [key=0, style=solid];
n65 -> n68  [key=0, style=solid];
n65 -> n77  [key=2, style=dotted];
n65 -> n48  [key=2, style=dotted];
n65 -> n49  [key=2, style=dotted];
n62 -> n63  [key=0, style=solid];
n62 -> n47  [key=2, style=dotted];
n62 -> n65  [color=darkseagreen4, key=1, label=nameValues, style=dashed];
n62 -> n69  [color=darkseagreen4, key=1, label=nameValues, style=dashed];
n76 -> n95  [key=0, style=solid];
n76 -> n96  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n76 -> n98  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n76 -> n55  [color=darkorchid, key=3, label="Parameter variable System.Type enumType", style=bold];
n76 -> n97  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IList<string> GetNames", style=bold];
n63 -> n64  [key=0, style=solid];
n63 -> n65  [color=darkseagreen4, key=1, label=i, style=dashed];
n63 -> n67  [color=darkseagreen4, key=1, label=i, style=dashed];
n63 -> n68  [color=darkseagreen4, key=1, label=i, style=dashed];
n69 -> n70  [key=0, style=solid];
n68 -> n64  [key=0, style=solid];
n68 -> n68  [color=darkseagreen4, key=1, label=i, style=dashed];
n66 -> n67  [key=0, style=solid];
n70 -> n55  [color=blue, key=0, style=bold];
n80 -> n81  [key=0, style=solid];
n80 -> n82  [key=0, style=solid];
n80 -> n73  [key=2, style=dotted];
n81 -> n88  [key=0, style=solid];
n81 -> n41  [key=2, style=dotted];
n83 -> n84  [key=0, style=solid];
n83 -> n13  [key=2, style=dotted];
n83 -> n89  [key=2, style=dotted];
n83 -> n92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n85 -> n86  [key=0, style=solid];
n85 -> n90  [key=2, style=dotted];
n82 -> n83  [key=0, style=solid];
n82 -> n47  [key=2, style=dotted];
n82 -> n86  [color=darkseagreen4, key=1, label=values, style=dashed];
n82 -> n87  [color=darkseagreen4, key=1, label=values, style=dashed];
n86 -> n84  [key=0, style=solid];
n86 -> n91  [key=2, style=dotted];
n87 -> n88  [key=0, style=solid];
n84 -> n85  [key=0, style=solid];
n84 -> n87  [key=0, style=solid];
n92 -> n93  [key=0, style=solid];
n88 -> n75  [color=blue, key=0, style=bold];
n93 -> n94  [key=0, style=solid];
n94 -> n92  [color=blue, key=0, style=bold];
n95 -> n96  [key=0, style=solid];
n95 -> n97  [key=0, style=solid];
n95 -> n73  [key=2, style=dotted];
n96 -> n102  [key=0, style=solid];
n96 -> n41  [key=2, style=dotted];
n98 -> n99  [key=0, style=solid];
n98 -> n13  [key=2, style=dotted];
n98 -> n89  [key=2, style=dotted];
n98 -> n103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n97 -> n98  [key=0, style=solid];
n97 -> n47  [key=2, style=dotted];
n97 -> n100  [color=darkseagreen4, key=1, label=values, style=dashed];
n97 -> n101  [color=darkseagreen4, key=1, label=values, style=dashed];
n100 -> n99  [key=0, style=solid];
n100 -> n91  [key=2, style=dotted];
n101 -> n102  [key=0, style=solid];
n99 -> n100  [key=0, style=solid];
n99 -> n101  [key=0, style=solid];
n103 -> n104  [key=0, style=solid];
n102 -> n76  [color=blue, key=0, style=bold];
n104 -> n105  [key=0, style=solid];
n105 -> n103  [color=blue, key=0, style=bold];
n106 -> n107  [key=0, style=solid];
n106 -> n110  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n106 -> n111  [color=red, key=1, label=string, style=dashed];
n106 -> n112  [color=darkseagreen4, key=1, label=string, style=dashed];
n106 -> n119  [color=red, key=1, label=string, style=dashed];
n106 -> n120  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n106 -> n108  [color=darkorchid, key=3, label="method methodReturn object ParseEnumName", style=bold];
n107 -> n108  [key=0, style=solid];
n107 -> n109  [key=0, style=solid];
n110 -> n111  [color=red, key=0, style=solid];
n110 -> n122  [key=2, style=dotted];
n110 -> n116  [color=red, key=1, label=map, style=dashed];
n110 -> n119  [color=red, key=1, label=map, style=dashed];
n111 -> n112  [color=red, key=0, style=solid];
n111 -> n119  [color=red, key=0, style=solid];
n111 -> n123  [color=red, key=2, style=dotted];
n112 -> n113  [key=0, style=solid];
n112 -> n124  [key=2, style=dotted];
n112 -> n114  [color=darkseagreen4, key=1, label=names, style=dashed];
n112 -> n115  [color=darkseagreen4, key=1, label=names, style=dashed];
n112 -> n116  [color=red, key=1, label=names, style=dashed];
n112 -> n118  [color=darkseagreen4, key=1, label=names, style=dashed];
n119 -> n120  [color=red, key=0, style=solid];
n119 -> n126  [color=red, key=2, style=dotted];
n120 -> n121  [key=0, style=solid];
n120 -> n128  [key=2, style=dotted];
n108 -> n121  [key=0, style=solid];
n109 -> n110  [key=0, style=solid];
n109 -> n126  [color=darkorchid, key=3, label="Local variable string finalEnumText", style=bold];
n116 -> n117  [color=red, key=0, style=solid];
n116 -> n126  [color=red, key=2, style=dotted];
n113 -> n114  [key=0, style=solid];
n113 -> n115  [color=darkseagreen4, key=1, label=i, style=dashed];
n113 -> n116  [color=red, key=1, label=i, style=dashed];
n113 -> n117  [color=darkseagreen4, key=1, label=i, style=dashed];
n113 -> n64  [color=darkorchid, key=3, label="Local variable int i", style=bold];
n114 -> n115  [key=0, style=solid];
n114 -> n118  [key=0, style=solid];
n115 -> n116  [color=red, key=0, style=solid];
n115 -> n125  [key=2, style=dotted];
n118 -> n120  [key=0, style=solid];
n118 -> n127  [key=2, style=dotted];
n117 -> n114  [key=0, style=solid];
n117 -> n117  [color=darkseagreen4, key=1, label=i, style=dashed];
n126 -> n147  [color=red, key=0, style=solid];
n126 -> n148  [color=red, key=1, label="Newtonsoft.Json.Utilities.BidirectionalDictionary<string, string>", style=dashed];
n126 -> n149  [color=red, key=1, label=string, style=dashed];
n126 -> n110  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Utilities.BidirectionalDictionary<string, string> map", style=bold];
n126 -> n115  [color=darkorchid, key=3, label="Parameter variable string enumText", style=bold];
n126 -> n106  [color=darkorchid, key=3, label="Parameter variable string enumText", style=bold];
n121 -> n106  [color=blue, key=0, style=bold];
n129 -> n130  [key=0, style=solid];
n129 -> n131  [color=darkseagreen4, key=1, label=string, style=dashed];
n129 -> n138  [color=darkseagreen4, key=1, label=bool, style=dashed];
n129 -> n142  [color=darkorchid, key=3, label="method methodReturn string ToEnumName", style=bold];
n130 -> n131  [key=0, style=solid];
n130 -> n122  [key=2, style=dotted];
n130 -> n136  [color=darkseagreen4, key=1, label=map, style=dashed];
n131 -> n132  [key=0, style=solid];
n131 -> n124  [key=2, style=dotted];
n131 -> n133  [color=darkseagreen4, key=1, label=names, style=dashed];
n131 -> n134  [color=darkseagreen4, key=1, label=names, style=dashed];
n131 -> n140  [color=darkseagreen4, key=1, label=names, style=dashed];
n131 -> n142  [color=darkseagreen4, key=1, label=names, style=dashed];
n138 -> n139  [key=0, style=solid];
n138 -> n140  [key=0, style=solid];
n136 -> n137  [key=0, style=solid];
n136 -> n145  [key=2, style=dotted];
n132 -> n133  [key=0, style=solid];
n132 -> n134  [color=darkseagreen4, key=1, label=i, style=dashed];
n132 -> n140  [color=darkseagreen4, key=1, label=i, style=dashed];
n132 -> n141  [color=darkseagreen4, key=1, label=i, style=dashed];
n132 -> n64  [color=darkorchid, key=3, label="Local variable int i", style=bold];
n133 -> n134  [key=0, style=solid];
n133 -> n142  [key=0, style=solid];
n134 -> n135  [key=0, style=solid];
n134 -> n125  [key=2, style=dotted];
n134 -> n136  [color=darkseagreen4, key=1, label=name, style=dashed];
n134 -> n137  [color=darkseagreen4, key=1, label=name, style=dashed];
n140 -> n141  [key=0, style=solid];
n142 -> n143  [key=0, style=solid];
n142 -> n127  [key=2, style=dotted];
n141 -> n133  [key=0, style=solid];
n141 -> n141  [color=darkseagreen4, key=1, label=i, style=dashed];
n135 -> n136  [key=0, style=solid];
n137 -> n138  [key=0, style=solid];
n137 -> n137  [color=darkseagreen4, key=1, label=resolvedEnumName, style=dashed];
n137 -> n139  [color=darkseagreen4, key=1, label=resolvedEnumName, style=dashed];
n137 -> n140  [color=darkseagreen4, key=1, label=resolvedEnumName, style=dashed];
n139 -> n140  [key=0, style=solid];
n139 -> n146  [key=2, style=dotted];
n139 -> n139  [color=darkseagreen4, key=1, label=resolvedEnumName, style=dashed];
n143 -> n144  [key=0, style=solid];
n144 -> n129  [color=blue, key=0, style=bold];
n147 -> n148  [color=red, key=0, style=solid];
n148 -> n149  [color=red, key=0, style=solid];
n148 -> n18  [color=red, key=2, style=dotted];
n149 -> n150  [color=red, key=0, style=solid];
n149 -> n149  [color=red, key=1, label=resolvedEnumName, style=dashed];
n150 -> n151  [color=red, key=0, style=solid];
n151 -> n126  [color=blue, key=0, style=bold];
d40 -> d41  [color=green, key=0, style=solid];
d40 -> d42  [color=green, key=2, style=dotted];
d424 -> d40  [color=green, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d61  [color=green, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d63  [color=green, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d67  [color=green, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d32  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d36  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d48  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d56  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d57  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d73  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d76  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d80  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d91  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d92  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d96  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d98  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d99  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d102  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d103  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d104  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d107  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d110  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d111  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d113  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d114  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d117  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d118  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d119  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d122  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d123  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d132  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d134  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d135  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d138  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d139  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d141  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d142  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d144  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d146  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d147  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d148  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d150  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d151  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d152  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d154  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d155  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d158  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d160  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d161  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d162  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d164  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d165  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d171  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d176  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d182  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d183  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d185  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d188  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d189  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d190  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d191  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d192  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d194  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d196  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d208  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d209  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d210  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d211  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d214  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d218  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d224  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d225  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d226  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d232  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d239  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d244  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d247  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d249  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d250  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d252  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d255  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d261  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d263  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d265  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d268  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d270  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d271  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d273  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d275  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d276  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d278  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d281  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d293  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d294  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d295  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d296  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d297  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d305  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d306  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d310  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d311  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d312  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d313  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d314  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d317  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d320  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d322  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d337  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d344  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d349  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d356  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d357  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d360  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d361  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d394  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d395  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d396  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d398  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d401  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d402  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d405  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d406  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d409  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d410  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d413  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d414  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d417  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d419  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d424 -> d420  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
d39 -> d40  [color=green, key=0, style=solid];
d61 -> d40  [color=green, key=3, label="Parameter variable string resolvedEnumName", style=bold];
d61 -> d62  [color=green, key=0, style=solid];
d61 -> d64  [color=green, key=0, style=solid];
d61 -> d68  [color=green, key=0, style=solid];
d61 -> d74  [color=green, key=0, style=solid];
d61 -> d67  [color=green, key=3, label="method methodReturn bool TryResolvedEnumName", style=bold];
d41 -> d39  [color=blue, key=0, style=bold];
d60 -> d61  [color=green, key=0, style=solid];
d62 -> d63  [color=green, key=0, style=solid];
d64 -> d65  [color=green, key=0, style=solid];
d68 -> d69  [key=0, style=solid];
d74 -> d82  [key=0, style=solid];
d74 -> d86  [key=2, style=dotted];
d74 -> d87  [key=2, style=dotted];
d67 -> d75  [color=green, key=0, style=solid];
d67 -> d84  [color=green, key=2, style=dotted];
d63 -> d75  [color=green, key=0, style=solid];
d63 -> d83  [color=green, key=2, style=dotted];
d65 -> d66  [color=green, key=0, style=solid];
d75 -> d76  [key=0, style=solid];
d75 -> d78  [key=0, style=solid];
d83 -> d158  [key=0, style=solid];
d66 -> d67  [color=green, key=0, style=solid];
d84 -> d132  [key=0, style=solid];
d9 -> d10  [key=0, style=solid];
d9 -> d15  [key=2, style=dotted];
d10 -> d11  [key=0, style=solid];
d10 -> d16  [key=2, style=dotted];
d11 -> d12  [key=0, style=solid];
d12 -> d13  [key=0, style=solid];
d19 -> d20  [key=0, style=solid];
d20 -> d21  [key=0, style=solid];
d20 -> d16  [key=2, style=dotted];
d21 -> d22  [key=0, style=solid];
d22 -> d23  [key=0, style=solid];
d25 -> d26  [key=0, style=solid];
d25 -> d29  [key=2, style=dotted];
d26 -> d27  [key=0, style=solid];
d26 -> d30  [key=2, style=dotted];
d32 -> d33  [key=0, style=solid];
d32 -> d34  [key=2, style=dotted];
d36 -> d37  [key=0, style=solid];
d36 -> d38  [key=2, style=dotted];
d44 -> d45  [key=0, style=solid];
d44 -> d46  [key=2, style=dotted];
d48 -> d49  [key=0, style=solid];
d48 -> d50  [key=2, style=dotted];
d52 -> d53  [key=0, style=solid];
d52 -> d54  [key=2, style=dotted];
d56 -> d57  [key=0, style=solid];
d57 -> d58  [key=0, style=solid];
d57 -> d59  [key=2, style=dotted];
d73 -> d75  [key=0, style=solid];
d73 -> d85  [key=2, style=dotted];
d76 -> d77  [key=0, style=solid];
d76 -> d88  [key=2, style=dotted];
d80 -> d81  [key=0, style=solid];
d80 -> d88  [key=2, style=dotted];
d90 -> d91  [key=0, style=solid];
d90 -> d94  [key=2, style=dotted];
d91 -> d92  [key=0, style=solid];
d91 -> d93  [key=0, style=solid];
d92 -> d93  [key=0, style=solid];
d92 -> d95  [key=2, style=dotted];
d96 -> d97  [key=0, style=solid];
d96 -> d101  [key=0, style=solid];
d96 -> d106  [key=0, style=solid];
d96 -> d116  [key=0, style=solid];
d96 -> d121  [key=0, style=solid];
d96 -> d125  [key=0, style=solid];
d98 -> d99  [key=0, style=solid];
d98 -> d127  [key=2, style=dotted];
d99 -> d100  [key=0, style=solid];
d102 -> d103  [key=0, style=solid];
d102 -> d128  [key=2, style=dotted];
d103 -> d104  [key=0, style=solid];
d103 -> d129  [key=2, style=dotted];
d103 -> d127  [key=2, style=dotted];
d104 -> d105  [key=0, style=solid];
d107 -> d108  [key=0, style=solid];
d107 -> d110  [key=0, style=solid];
d108 -> d109  [key=0, style=solid];
d108 -> d127  [key=2, style=dotted];
d110 -> d111  [key=0, style=solid];
d110 -> d88  [key=2, style=dotted];
d111 -> d112  [key=0, style=solid];
d113 -> d114  [key=0, style=solid];
d113 -> d130  [key=2, style=dotted];
d114 -> d115  [key=0, style=solid];
d114 -> d128  [key=2, style=dotted];
d117 -> d83  [key=2, style=dotted];
d117 -> d118  [key=0, style=solid];
d117 -> d120  [color=darkseagreen4, key=1, label=result, style=dashed];
d118 -> d119  [key=0, style=solid];
d118 -> d120  [key=0, style=solid];
d119 -> d120  [key=0, style=solid];
d122 -> d123  [key=0, style=solid];
d122 -> d88  [key=2, style=dotted];
d123 -> d124  [key=0, style=solid];
d132 -> d133  [key=0, style=solid];
d132 -> d137  [key=0, style=solid];
d132 -> d145  [key=0, style=solid];
d132 -> d155  [key=0, style=solid];
d134 -> d135  [key=0, style=solid];
d134 -> d127  [key=2, style=dotted];
d135 -> d136  [key=0, style=solid];
d138 -> d139  [key=0, style=solid];
d138 -> d141  [key=0, style=solid];
d139 -> d140  [key=0, style=solid];
d139 -> d129  [key=2, style=dotted];
d139 -> d127  [key=2, style=dotted];
d141 -> d142  [key=0, style=solid];
d141 -> d144  [key=0, style=solid];
d142 -> d143  [key=0, style=solid];
d142 -> d157  [key=2, style=dotted];
d142 -> d127  [key=2, style=dotted];
d144 -> d156  [key=0, style=solid];
d144 -> d87  [key=2, style=dotted];
d146 -> d147  [key=0, style=solid];
d146 -> d150  [key=0, style=solid];
d147 -> d148  [key=0, style=solid];
d147 -> d127  [key=2, style=dotted];
d148 -> d149  [key=0, style=solid];
d150 -> d151  [key=0, style=solid];
d150 -> d154  [key=0, style=solid];
d151 -> d152  [key=0, style=solid];
d151 -> d88  [key=2, style=dotted];
d152 -> d153  [key=0, style=solid];
d154 -> d156  [key=0, style=solid];
d154 -> d87  [key=2, style=dotted];
d155 -> d156  [key=0, style=solid];
d155 -> d87  [key=2, style=dotted];
d158 -> d159  [key=0, style=solid];
d158 -> d167  [key=0, style=solid];
d158 -> d170  [key=0, style=solid];
d158 -> d173  [key=0, style=solid];
d158 -> d197  [key=0, style=solid];
d158 -> d198  [key=0, style=solid];
d158 -> d199  [key=0, style=solid];
d158 -> d200  [key=0, style=solid];
d158 -> d201  [key=0, style=solid];
d160 -> d161  [key=0, style=solid];
d160 -> d162  [color=darkseagreen4, key=1, label=token, style=dashed];
d161 -> d162  [key=0, style=solid];
d161 -> d163  [color=darkseagreen4, key=1, label=type, style=dashed];
d162 -> d163  [key=0, style=solid];
d162 -> d88  [key=2, style=dotted];
d164 -> d165  [key=0, style=solid];
d164 -> d130  [key=2, style=dotted];
d165 -> d166  [key=0, style=solid];
d165 -> d128  [key=2, style=dotted];
d171 -> d172  [key=0, style=solid];
d171 -> d204  [key=2, style=dotted];
d176 -> d177  [key=0, style=solid];
d176 -> d179  [color=darkseagreen4, key=1, label=context, style=dashed];
d176 -> d180  [color=darkseagreen4, key=1, label=context, style=dashed];
d176 -> d181  [color=darkseagreen4, key=1, label=context, style=dashed];
d176 -> d187  [color=darkseagreen4, key=1, label=context, style=dashed];
d176 -> d192  [color=darkseagreen4, key=1, label=context, style=dashed];
d176 -> d193  [color=darkseagreen4, key=1, label=context, style=dashed];
d182 -> d183  [key=0, style=solid];
d182 -> d24  [key=2, style=dotted];
d183 -> d184  [key=0, style=solid];
d183 -> d204  [key=2, style=dotted];
d185 -> d186  [key=0, style=solid];
d185 -> d24  [key=2, style=dotted];
d185 -> d127  [key=2, style=dotted];
d188 -> d189  [key=0, style=solid];
d188 -> d190  [key=0, style=solid];
d188 -> d205  [key=2, style=dotted];
d189 -> d203  [key=0, style=solid];
d189 -> d87  [key=2, style=dotted];
d190 -> d191  [key=0, style=solid];
d190 -> d206  [key=2, style=dotted];
d191 -> d192  [key=0, style=solid];
d191 -> d193  [key=0, style=solid];
d192 -> d193  [key=0, style=solid];
d192 -> d207  [key=2, style=dotted];
d194 -> d195  [key=0, style=solid];
d194 -> d88  [key=2, style=dotted];
d196 -> d203  [key=0, style=solid];
d196 -> d87  [key=2, style=dotted];
d208 -> d209  [key=0, style=solid];
d208 -> d213  [key=2, style=dotted];
d209 -> d210  [key=0, style=solid];
d209 -> d211  [key=0, style=solid];
d210 -> d212  [key=0, style=solid];
d211 -> d212  [key=0, style=solid];
d214 -> d215  [key=0, style=solid];
d214 -> d217  [key=2, style=dotted];
d215 -> d216  [key=0, style=solid];
d218 -> d219  [key=0, style=solid];
d218 -> d207  [key=2, style=dotted];
d219 -> d220  [key=0, style=solid];
d219 -> d221  [key=2, style=dotted];
d224 -> d225  [key=0, style=solid];
d224 -> d284  [key=2, style=dotted];
d224 -> d226  [color=darkseagreen4, key=1, label=d, style=dashed];
d224 -> d227  [color=darkseagreen4, key=1, label=d, style=dashed];
d225 -> d226  [key=0, style=solid];
d225 -> d227  [key=0, style=solid];
d226 -> d283  [key=0, style=solid];
d226 -> d285  [key=2, style=dotted];
d226 -> d127  [key=2, style=dotted];
d227 -> d283  [key=0, style=solid];
d227 -> d127  [key=2, style=dotted];
d230 -> d283  [key=0, style=solid];
d230 -> d129  [key=2, style=dotted];
d230 -> d127  [key=2, style=dotted];
d232 -> d233  [key=0, style=solid];
d232 -> d88  [key=2, style=dotted];
d234 -> d235  [key=0, style=solid];
d234 -> d130  [key=2, style=dotted];
d235 -> d283  [key=0, style=solid];
d235 -> d128  [key=2, style=dotted];
d237 -> d238  [key=0, style=solid];
d237 -> d88  [key=2, style=dotted];
d239 -> d240  [key=0, style=solid];
d239 -> d130  [key=2, style=dotted];
d240 -> d283  [key=0, style=solid];
d240 -> d128  [key=2, style=dotted];
d242 -> d283  [key=0, style=solid];
d242 -> d286  [key=2, style=dotted];
d242 -> d127  [key=2, style=dotted];
d244 -> d283  [key=0, style=solid];
d244 -> d88  [key=2, style=dotted];
d246 -> d247  [key=0, style=solid];
d246 -> d157  [key=2, style=dotted];
d247 -> d283  [key=0, style=solid];
d247 -> d127  [key=2, style=dotted];
d249 -> d250  [key=0, style=solid];
d249 -> d205  [key=2, style=dotted];
d249 -> d287  [key=2, style=dotted];
d250 -> d283  [key=0, style=solid];
d250 -> d127  [key=2, style=dotted];
d252 -> d253  [key=0, style=solid];
d252 -> d288  [key=2, style=dotted];
d255 -> d256  [key=0, style=solid];
d255 -> d258  [key=0, style=solid];
d255 -> d260  [key=0, style=solid];
d261 -> d283  [key=0, style=solid];
d261 -> d127  [key=2, style=dotted];
d263 -> d283  [key=0, style=solid];
d263 -> d88  [key=2, style=dotted];
d265 -> d266  [key=0, style=solid];
d265 -> d30  [key=2, style=dotted];
d265 -> d267  [color=darkseagreen4, key=1, label=expression, style=dashed];
d266 -> d267  [key=0, style=solid];
d266 -> d30  [key=2, style=dotted];
d268 -> d283  [key=0, style=solid];
d268 -> d127  [key=2, style=dotted];
d270 -> d271  [key=0, style=solid];
d270 -> d88  [key=2, style=dotted];
d271 -> d283  [key=0, style=solid];
d273 -> d283  [key=0, style=solid];
d273 -> d129  [key=2, style=dotted];
d273 -> d127  [key=2, style=dotted];
d275 -> d276  [key=0, style=solid];
d275 -> d88  [key=2, style=dotted];
d276 -> d283  [key=0, style=solid];
d278 -> d283  [key=0, style=solid];
d278 -> d128  [key=2, style=dotted];
d278 -> d127  [key=2, style=dotted];
d281 -> d283  [key=0, style=solid];
d281 -> d288  [key=2, style=dotted];
d281 -> d127  [key=2, style=dotted];
d293 -> d294  [key=0, style=solid];
d293 -> d128  [key=2, style=dotted];
d293 -> d297  [color=darkseagreen4, key=1, label=dataLength, style=dashed];
d294 -> d295  [key=0, style=solid];
d294 -> d205  [key=2, style=dotted];
d295 -> d296  [key=0, style=solid];
d295 -> d297  [key=0, style=solid];
d296 -> d297  [key=0, style=solid];
d296 -> d128  [key=2, style=dotted];
d297 -> d298  [key=0, style=solid];
d297 -> d157  [key=2, style=dotted];
d299 -> d300  [key=0, style=solid];
d299 -> d327  [key=2, style=dotted];
d305 -> d306  [key=0, style=solid];
d305 -> d307  [key=0, style=solid];
d305 -> d221  [key=2, style=dotted];
d306 -> d305  [key=0, style=solid];
d306 -> d306  [color=darkseagreen4, key=1, label=count, style=dashed];
d306 -> d307  [color=darkseagreen4, key=1, label=count, style=dashed];
d306 -> d309  [color=darkseagreen4, key=1, label=count, style=dashed];
d306 -> d313  [color=darkseagreen4, key=1, label=count, style=dashed];
d306 -> d321  [color=darkseagreen4, key=1, label=count, style=dashed];
d310 -> d311  [key=0, style=solid];
d310 -> d328  [key=2, style=dotted];
d310 -> d312  [color=darkseagreen4, key=1, label=length, style=dashed];
d311 -> d312  [key=0, style=solid];
d311 -> d207  [key=2, style=dotted];
d312 -> d326  [key=0, style=solid];
d312 -> d329  [key=2, style=dotted];
d313 -> d314  [key=0, style=solid];
d313 -> d330  [key=2, style=dotted];
d313 -> d318  [color=darkseagreen4, key=1, label=lastFullCharStop, style=dashed];
d313 -> d319  [color=darkseagreen4, key=1, label=lastFullCharStop, style=dashed];
d313 -> d320  [color=darkseagreen4, key=1, label=lastFullCharStop, style=dashed];
d314 -> d315  [key=0, style=solid];
d314 -> d328  [key=2, style=dotted];
d314 -> d317  [color=darkseagreen4, key=1, label=charCount, style=dashed];
d317 -> d318  [key=0, style=solid];
d317 -> d332  [key=2, style=dotted];
d320 -> d325  [key=0, style=solid];
d320 -> d333  [key=2, style=dotted];
d322 -> d323  [key=0, style=solid];
d322 -> d207  [key=2, style=dotted];
d335 -> d336  [key=0, style=solid];
d335 -> d128  [key=2, style=dotted];
d335 -> d337  [color=darkseagreen4, key=1, label=length, style=dashed];
d336 -> d337  [key=0, style=solid];
d336 -> d207  [key=2, style=dotted];
d337 -> d338  [key=0, style=solid];
d337 -> d341  [key=2, style=dotted];
d337 -> d339  [color=darkseagreen4, key=1, label=s, style=dashed];
d338 -> d339  [key=0, style=solid];
d338 -> d221  [key=2, style=dotted];
d344 -> d345  [key=0, style=solid];
d344 -> d327  [key=2, style=dotted];
d349 -> d350  [key=0, style=solid];
d349 -> d369  [key=2, style=dotted];
d349 -> d352  [color=darkseagreen4, key=1, label=byteCount, style=dashed];
d349 -> d353  [color=darkseagreen4, key=1, label=byteCount, style=dashed];
d355 -> d356  [key=0, style=solid];
d355 -> d328  [key=2, style=dotted];
d356 -> d368  [key=0, style=solid];
d356 -> d329  [key=2, style=dotted];
d357 -> d358  [key=0, style=solid];
d357 -> d330  [key=2, style=dotted];
d357 -> d360  [color=darkseagreen4, key=1, label=lastFullCharStop, style=dashed];
d357 -> d362  [color=darkseagreen4, key=1, label=lastFullCharStop, style=dashed];
d357 -> d363  [color=darkseagreen4, key=1, label=lastFullCharStop, style=dashed];
d357 -> d364  [color=darkseagreen4, key=1, label=lastFullCharStop, style=dashed];
d360 -> d361  [key=0, style=solid];
d360 -> d328  [key=2, style=dotted];
d361 -> d362  [key=0, style=solid];
d361 -> d332  [key=2, style=dotted];
d364 -> d366  [key=0, style=solid];
d364 -> d333  [key=2, style=dotted];
d374 -> d375  [key=0, style=solid];
d374 -> d383  [key=2, style=dotted];
d374 -> d377  [color=darkseagreen4, key=1, label=bis, style=dashed];
d374 -> d379  [color=darkseagreen4, key=1, label=bis, style=dashed];
d394 -> d395  [key=0, style=solid];
d394 -> d396  [key=0, style=solid];
d395 -> d396  [key=0, style=solid];
d396 -> d397  [key=0, style=solid];
d396 -> d399  [key=0, style=solid];
d398 -> d399  [key=0, style=solid];
d401 -> d402  [key=0, style=solid];
d401 -> d207  [key=2, style=dotted];
d402 -> d403  [key=0, style=solid];
d402 -> d404  [key=2, style=dotted];
d405 -> d406  [key=0, style=solid];
d405 -> d207  [key=2, style=dotted];
d406 -> d407  [key=0, style=solid];
d406 -> d408  [key=2, style=dotted];
d409 -> d410  [key=0, style=solid];
d409 -> d207  [key=2, style=dotted];
d410 -> d411  [key=0, style=solid];
d410 -> d412  [key=2, style=dotted];
d413 -> d414  [key=0, style=solid];
d413 -> d207  [key=2, style=dotted];
d414 -> d415  [key=0, style=solid];
d414 -> d416  [key=2, style=dotted];
d417 -> d418  [key=0, style=solid];
d419 -> d420  [key=0, style=solid];
d419 -> d207  [key=2, style=dotted];
d420 -> d421  [key=0, style=solid];
d420 -> d422  [key=2, style=dotted];
d59 -> d60  [key=0, style=solid];
d69 -> d70  [key=0, style=solid];
d82 -> d59  [color=blue, key=0, style=bold];
d78 -> d82  [key=0, style=solid];
d203 -> d83  [color=blue, key=0, style=bold];
d156 -> d84  [color=blue, key=0, style=bold];
d7 -> d9  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
d7 -> d11  [color=darkseagreen4, key=1, label=bool, style=dashed];
d7 -> d12  [color=darkseagreen4, key=1, label="System.DateTimeKind", style=dashed];
d7 -> d8  [key=0, style=solid];
d8 -> d9  [key=0, style=solid];
d8 -> d14  [key=2, style=dotted];
d13 -> d7  [color=blue, key=0, style=bold];
d17 -> d19  [color=darkseagreen4, key=1, label="System.IO.BinaryReader", style=dashed];
d17 -> d21  [color=darkseagreen4, key=1, label=bool, style=dashed];
d17 -> d22  [color=darkseagreen4, key=1, label="System.DateTimeKind", style=dashed];
d17 -> d18  [key=0, style=solid];
d18 -> d19  [key=0, style=solid];
d18 -> d14  [key=2, style=dotted];
d23 -> d17  [color=blue, key=0, style=bold];
d24 -> d25  [key=0, style=solid];
d29 -> d413  [key=0, style=solid];
d27 -> d28  [key=0, style=solid];
d30 -> d299  [key=0, style=solid];
d31 -> d32  [key=0, style=solid];
d33 -> d31  [color=blue, key=0, style=bold];
d35 -> d36  [key=0, style=solid];
d37 -> d35  [color=blue, key=0, style=bold];
d43 -> d44  [key=0, style=solid];
d45 -> d43  [color=blue, key=0, style=bold];
d47 -> d48  [key=0, style=solid];
d49 -> d47  [color=blue, key=0, style=bold];
d51 -> d52  [key=0, style=solid];
d53 -> d51  [color=blue, key=0, style=bold];
d55 -> d56  [key=0, style=solid];
d58 -> d55  [color=blue, key=0, style=bold];
d72 -> d73  [key=0, style=solid];
d85 -> d96  [key=0, style=solid];
d77 -> d82  [key=0, style=solid];
d79 -> d80  [key=0, style=solid];
d81 -> d82  [key=0, style=solid];
d89 -> d90  [key=0, style=solid];
d93 -> d89  [color=blue, key=0, style=bold];
d97 -> d98  [key=0, style=solid];
d101 -> d102  [key=0, style=solid];
d106 -> d107  [key=0, style=solid];
d116 -> d117  [key=0, style=solid];
d121 -> d122  [key=0, style=solid];
d125 -> d126  [key=0, style=solid];
d125 -> d131  [key=2, style=dotted];
d100 -> d126  [key=0, style=solid];
d128 -> d405  [key=0, style=solid];
d129 -> d335  [key=0, style=solid];
d105 -> d126  [key=0, style=solid];
d109 -> d126  [key=0, style=solid];
d112 -> d113  [key=0, style=solid];
d112 -> d114  [color=darkseagreen4, key=1, label=newContext, style=dashed];
d112 -> d0  [key=2, style=dotted];
d130 -> d214  [key=0, style=solid];
d130 -> d215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader.ContainerContext", style=dashed];
d115 -> d126  [key=0, style=solid];
d120 -> d126  [key=0, style=solid];
d124 -> d126  [key=0, style=solid];
d133 -> d134  [key=0, style=solid];
d137 -> d138  [key=0, style=solid];
d145 -> d146  [key=0, style=solid];
d136 -> d156  [key=0, style=solid];
d140 -> d156  [key=0, style=solid];
d143 -> d156  [key=0, style=solid];
d157 -> d419  [key=0, style=solid];
d157 -> d420  [color=darkseagreen4, key=1, label=int, style=dashed];
d149 -> d156  [key=0, style=solid];
d153 -> d156  [key=0, style=solid];
d159 -> d160  [key=0, style=solid];
d167 -> d168  [key=0, style=solid];
d170 -> d171  [key=0, style=solid];
d173 -> d174  [key=0, style=solid];
d197 -> d202  [key=0, style=solid];
d198 -> d202  [key=0, style=solid];
d199 -> d202  [key=0, style=solid];
d200 -> d202  [key=0, style=solid];
d201 -> d203  [key=0, style=solid];
d201 -> d131  [key=2, style=dotted];
d163 -> d164  [key=0, style=solid];
d163 -> d165  [color=darkseagreen4, key=1, label=newContext, style=dashed];
d163 -> d0  [key=2, style=dotted];
d166 -> d203  [key=0, style=solid];
d172 -> d203  [key=0, style=solid];
d204 -> d222  [key=0, style=solid];
d204 -> d282  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonType", style=dashed];
d175 -> d176  [key=0, style=solid];
d177 -> d178  [key=0, style=solid];
d177 -> d179  [key=0, style=solid];
d179 -> d180  [key=0, style=solid];
d179 -> d187  [color=darkseagreen4, key=1, label=lengthMinusEnd, style=dashed];
d180 -> d181  [key=0, style=solid];
d180 -> d187  [key=0, style=solid];
d181 -> d182  [key=0, style=solid];
d181 -> d185  [key=0, style=solid];
d187 -> d188  [key=0, style=solid];
d187 -> d196  [key=0, style=solid];
d193 -> d194  [key=0, style=solid];
d184 -> d203  [key=0, style=solid];
d186 -> d203  [key=0, style=solid];
d205 -> d218  [key=0, style=solid];
d206 -> d208  [key=0, style=solid];
d207 -> d417  [key=0, style=solid];
d195 -> d203  [key=0, style=solid];
d212 -> d206  [color=blue, key=0, style=bold];
d216 -> d130  [color=blue, key=0, style=bold];
d220 -> d205  [color=blue, key=0, style=bold];
d223 -> d224  [key=0, style=solid];
d284 -> d401  [key=0, style=solid];
d283 -> d204  [color=blue, key=0, style=bold];
d229 -> d230  [key=0, style=solid];
d231 -> d232  [key=0, style=solid];
d233 -> d234  [key=0, style=solid];
d233 -> d235  [color=darkseagreen4, key=1, label=newContext, style=dashed];
d233 -> d0  [key=2, style=dotted];
d236 -> d237  [key=0, style=solid];
d238 -> d239  [key=0, style=solid];
d238 -> d240  [color=darkseagreen4, key=1, label=newContext, style=dashed];
d238 -> d0  [key=2, style=dotted];
d241 -> d242  [key=0, style=solid];
d286 -> d293  [key=0, style=solid];
d243 -> d244  [key=0, style=solid];
d245 -> d246  [key=0, style=solid];
d248 -> d249  [key=0, style=solid];
d251 -> d252  [key=0, style=solid];
d253 -> d254  [key=0, style=solid];
d253 -> d289  [key=2, style=dotted];
d253 -> d257  [color=darkseagreen4, key=1, label=utcDateTime, style=dashed];
d253 -> d259  [color=darkseagreen4, key=1, label=utcDateTime, style=dashed];
d253 -> d260  [color=darkseagreen4, key=1, label=utcDateTime, style=dashed];
d288 -> d409  [key=0, style=solid];
d254 -> d255  [key=0, style=solid];
d256 -> d257  [key=0, style=solid];
d258 -> d259  [key=0, style=solid];
d260 -> d261  [key=0, style=solid];
d257 -> d261  [key=0, style=solid];
d257 -> d290  [key=2, style=dotted];
d259 -> d261  [key=0, style=solid];
d259 -> d291  [key=2, style=dotted];
d262 -> d263  [key=0, style=solid];
d264 -> d265  [key=0, style=solid];
d267 -> d268  [key=0, style=solid];
d269 -> d270  [key=0, style=solid];
d272 -> d273  [key=0, style=solid];
d274 -> d275  [key=0, style=solid];
d277 -> d278  [key=0, style=solid];
d280 -> d281  [key=0, style=solid];
d298 -> d286  [color=blue, key=0, style=bold];
d300 -> d317  [color=darkseagreen4, key=1, label=builder, style=dashed];
d300 -> d301  [key=0, style=solid];
d300 -> d309  [color=darkseagreen4, key=1, label=builder, style=dashed];
d300 -> d315  [color=darkseagreen4, key=1, label=builder, style=dashed];
d300 -> d323  [color=darkseagreen4, key=1, label=builder, style=dashed];
d327 -> d394  [key=0, style=solid];
d303 -> d305  [color=darkseagreen4, key=1, label=count, style=dashed];
d303 -> d306  [color=darkseagreen4, key=1, label=count, style=dashed];
d303 -> d313  [color=darkseagreen4, key=1, label=count, style=dashed];
d303 -> d304  [key=0, style=solid];
d303 -> d307  [color=darkseagreen4, key=1, label=count, style=dashed];
d303 -> d309  [color=darkseagreen4, key=1, label=count, style=dashed];
d303 -> d321  [color=darkseagreen4, key=1, label=count, style=dashed];
d304 -> d305  [key=0, style=solid];
d307 -> d310  [color=darkseagreen4, key=1, label=byteCount, style=dashed];
d307 -> d308  [key=0, style=solid];
d307 -> d318  [color=darkseagreen4, key=1, label=byteCount, style=dashed];
d307 -> d319  [color=darkseagreen4, key=1, label=byteCount, style=dashed];
d309 -> d310  [key=0, style=solid];
d309 -> d313  [key=0, style=solid];
d321 -> d322  [key=0, style=solid];
d321 -> d324  [key=0, style=solid];
d308 -> d311  [color=darkseagreen4, key=1, label=totalBytesRead, style=dashed];
d308 -> d322  [color=darkseagreen4, key=1, label=totalBytesRead, style=dashed];
d308 -> d309  [key=0, style=solid];
d308 -> d308  [color=darkseagreen4, key=1, label=totalBytesRead, style=dashed];
d326 -> d30  [color=blue, key=0, style=bold];
d330 -> d371  [key=0, style=solid];
d330 -> d379  [color=darkseagreen4, key=1, label=int, style=dashed];
d330 -> d380  [color=darkseagreen4, key=1, label=int, style=dashed];
d318 -> d321  [key=0, style=solid];
d318 -> d319  [key=0, style=solid];
d319 -> d320  [key=0, style=solid];
d315 -> d317  [key=0, style=solid];
d315 -> d316  [key=0, style=solid];
d316 -> d317  [key=0, style=solid];
d316 -> d331  [key=2, style=dotted];
d316 -> d323  [color=darkseagreen4, key=1, label=builder, style=dashed];
d325 -> d326  [key=0, style=solid];
d325 -> d302  [key=0, style=solid];
d323 -> d326  [key=0, style=solid];
d323 -> d334  [key=2, style=dotted];
d341 -> d342  [key=0, style=solid];
d341 -> d348  [color=darkseagreen4, key=1, label=int, style=dashed];
d341 -> d354  [color=darkseagreen4, key=1, label=int, style=dashed];
d341 -> d359  [color=darkseagreen4, key=1, label=int, style=dashed];
d341 -> d366  [color=darkseagreen4, key=1, label=int, style=dashed];
d339 -> d340  [key=0, style=solid];
d342 -> d344  [key=0, style=solid];
d342 -> d343  [key=0, style=solid];
d345 -> d361  [color=darkseagreen4, key=1, label=builder, style=dashed];
d345 -> d346  [key=0, style=solid];
d345 -> d358  [color=darkseagreen4, key=1, label=builder, style=dashed];
d345 -> d367  [color=darkseagreen4, key=1, label=builder, style=dashed];
d348 -> d349  [key=0, style=solid];
d347 -> d349  [color=darkseagreen4, key=1, label=offset, style=dashed];
d347 -> d348  [key=0, style=solid];
d347 -> d353  [color=darkseagreen4, key=1, label=offset, style=dashed];
d350 -> d351  [key=0, style=solid];
d350 -> d352  [key=0, style=solid];
d352 -> d352  [color=darkseagreen4, key=1, label=totalBytesRead, style=dashed];
d352 -> d353  [key=0, style=solid];
d352 -> d366  [color=darkseagreen4, key=1, label=totalBytesRead, style=dashed];
d353 -> d355  [color=darkseagreen4, key=1, label=byteCount, style=dashed];
d353 -> d357  [color=darkseagreen4, key=1, label=byteCount, style=dashed];
d353 -> d353  [color=darkseagreen4, key=1, label=byteCount, style=dashed];
d353 -> d354  [key=0, style=solid];
d353 -> d362  [color=darkseagreen4, key=1, label=byteCount, style=dashed];
d353 -> d363  [color=darkseagreen4, key=1, label=byteCount, style=dashed];
d354 -> d355  [key=0, style=solid];
d354 -> d357  [key=0, style=solid];
d368 -> d341  [color=blue, key=0, style=bold];
d358 -> d360  [key=0, style=solid];
d358 -> d359  [key=0, style=solid];
d362 -> d363  [key=0, style=solid];
d362 -> d365  [key=0, style=solid];
d363 -> d364  [key=0, style=solid];
d359 -> d360  [key=0, style=solid];
d359 -> d361  [color=darkseagreen4, key=1, label=builder, style=dashed];
d359 -> d331  [key=2, style=dotted];
d359 -> d367  [color=darkseagreen4, key=1, label=builder, style=dashed];
d366 -> d347  [key=0, style=solid];
d366 -> d367  [key=0, style=solid];
d371 -> d374  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
d371 -> d372  [key=0, style=solid];
d371 -> d373  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
d371 -> d376  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
d371 -> d378  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
d371 -> d379  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
d371 -> d381  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
d373 -> d374  [key=0, style=solid];
d373 -> d379  [key=0, style=solid];
d375 -> d376  [key=0, style=solid];
d375 -> d377  [key=0, style=solid];
d383 -> d384  [key=0, style=solid];
d383 -> d386  [color=darkseagreen4, key=1, label=byte, style=dashed];
d383 -> d388  [color=darkseagreen4, key=1, label=byte, style=dashed];
d383 -> d390  [color=darkseagreen4, key=1, label=byte, style=dashed];
d377 -> d378  [key=0, style=solid];
d377 -> d379  [key=0, style=solid];
d379 -> d380  [key=0, style=solid];
d379 -> d381  [key=0, style=solid];
d397 -> d398  [key=0, style=solid];
d397 -> d400  [key=2, style=dotted];
d399 -> d327  [color=blue, key=0, style=bold];
d403 -> d284  [color=blue, key=0, style=bold];
d407 -> d128  [color=blue, key=0, style=bold];
d411 -> d288  [color=blue, key=0, style=bold];
d415 -> d29  [color=blue, key=0, style=bold];
d418 -> d207  [color=blue, key=0, style=bold];
d421 -> d157  [color=blue, key=0, style=bold];
d70 -> d71  [key=0, style=solid];
d169 -> d203  [key=0, style=solid];
d178 -> d203  [key=0, style=solid];
d202 -> d203  [key=0, style=solid];
d28 -> d24  [color=blue, key=0, style=bold];
d71 -> d72  [key=0, style=solid];
d126 -> d85  [color=blue, key=0, style=bold];
d340 -> d129  [color=blue, key=0, style=bold];
d0 -> d1  [key=0, style=solid];
d168 -> d169  [key=0, style=solid];
d174 -> d175  [key=0, style=solid];
d222 -> d223  [key=0, style=solid];
d222 -> d231  [key=0, style=solid];
d222 -> d236  [key=0, style=solid];
d222 -> d241  [key=0, style=solid];
d222 -> d243  [key=0, style=solid];
d222 -> d245  [key=0, style=solid];
d222 -> d248  [key=0, style=solid];
d222 -> d251  [key=0, style=solid];
d222 -> d262  [key=0, style=solid];
d222 -> d264  [key=0, style=solid];
d222 -> d269  [key=0, style=solid];
d222 -> d272  [key=0, style=solid];
d222 -> d274  [key=0, style=solid];
d222 -> d277  [key=0, style=solid];
d222 -> d228  [key=0, style=solid];
d222 -> d279  [key=0, style=solid];
d222 -> d282  [key=0, style=solid];
d282 -> d283  [key=0, style=solid];
d282 -> d292  [key=2, style=dotted];
d228 -> d229  [key=0, style=solid];
d279 -> d280  [key=0, style=solid];
d301 -> d308  [color=darkseagreen4, key=1, label=totalBytesRead, style=dashed];
d301 -> d302  [key=0, style=solid];
d302 -> d303  [key=0, style=solid];
d302 -> d307  [color=darkseagreen4, key=1, label=offset, style=dashed];
d324 -> d325  [key=0, style=solid];
d382 -> d330  [color=blue, key=0, style=bold];
d380 -> d382  [key=0, style=solid];
d343 -> d368  [key=0, style=solid];
d346 -> d348  [color=darkseagreen4, key=1, label=totalBytesRead, style=dashed];
d346 -> d347  [key=0, style=solid];
d346 -> d352  [color=darkseagreen4, key=1, label=totalBytesRead, style=dashed];
d367 -> d368  [key=0, style=solid];
d367 -> d334  [key=2, style=dotted];
d351 -> d368  [key=0, style=solid];
d351 -> d370  [key=2, style=dotted];
d365 -> d366  [key=0, style=solid];
d372 -> d373  [key=0, style=solid];
d372 -> d379  [color=darkseagreen4, key=1, label=bis, style=dashed];
d376 -> d373  [key=0, style=solid];
d376 -> d379  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
d376 -> d376  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
d376 -> d381  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
d378 -> d379  [key=0, style=solid];
d378 -> d378  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
d378 -> d381  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
d381 -> d382  [key=0, style=solid];
d393 -> d383  [color=blue, key=0, style=bold];
d384 -> d385  [key=0, style=solid];
d384 -> d386  [key=0, style=solid];
d386 -> d387  [key=0, style=solid];
d386 -> d388  [key=0, style=solid];
d388 -> d389  [key=0, style=solid];
d388 -> d390  [key=0, style=solid];
d390 -> d391  [key=0, style=solid];
d390 -> d392  [key=0, style=solid];
d2 -> d0  [color=blue, key=0, style=bold];
d1 -> d2  [key=0, style=solid];
d385 -> d393  [key=0, style=solid];
d387 -> d393  [key=0, style=solid];
d389 -> d393  [key=0, style=solid];
d391 -> d393  [key=0, style=solid];
d392 -> d393  [key=0, style=solid];
d423 -> d1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader.ContainerContext", style=dashed];
m0_420 -> m0_421  [key=0, style=solid];
m0_420 -> m0_422  [key=2, style=dotted];
m0_285 -> m0_286  [key=0, style=solid];
m0_408 -> m0_395  [color=blue, key=0, style=bold];
m0_291 -> m0_285  [color=blue, key=0, style=bold];
m0_331 -> m0_332  [key=0, style=solid];
m0_332 -> m0_217  [key=2, style=dotted];
m0_332 -> m0_333  [key=0, style=solid];
m0_333 -> m0_331  [color=blue, key=0, style=bold];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_26  [color=darkorchid, key=3, label="method methodReturn string ReadElement", style=bold];
m0_24 -> m0_32  [key=2, style=dotted];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_29  [key=2, style=dotted];
m0_25 -> m0_32  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_30  [key=2, style=dotted];
m0_26 -> m0_32  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_32  [key=2, style=dotted];
m0_28 -> m0_24  [color=blue, key=0, style=bold];
m0_28 -> m0_16  [color=blue, key=0, style=bold];
m0_29 -> m0_413  [key=0, style=solid];
m0_413 -> m0_414  [key=0, style=solid];
m0_413 -> m0_207  [key=2, style=dotted];
m0_413 -> m0_3  [key=2, style=dotted];
m0_414 -> m0_415  [key=0, style=solid];
m0_414 -> m0_416  [key=2, style=dotted];
m0_414 -> m0_254  [key=2, style=dotted];
m0_414 -> m0_3  [key=2, style=dotted];
m0_414 -> m0_420  [key=2, style=dotted];
m0_414 -> m0_421  [key=2, style=dotted];
m0_415 -> m0_29  [color=blue, key=0, style=bold];
m0_415 -> m0_32  [key=2, style=dotted];
m0_415 -> m0_416  [key=0, style=solid];
m0_127 -> m0_126  [color=blue, key=0, style=bold];
m0_891 -> m0_892  [key=0, style=solid];
m0_891 -> m0_885  [color=darkorchid, key=3, label="method methodReturn System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator", style=bold];
m0_892 -> m0_893  [key=0, style=solid];
m0_892 -> m0_885  [key=2, style=dotted];
m0_893 -> m0_891  [color=blue, key=0, style=bold];
m0_129 -> m0_335  [key=0, style=solid];
m0_129 -> m0_337  [color=darkorchid, key=3, label="method methodReturn string ReadLengthString", style=bold];
m0_129 -> m0_56  [key=2, style=dotted];
m0_129 -> m0_130  [key=0, style=solid];
m0_129 -> m0_131  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_335 -> m0_336  [key=0, style=solid];
m0_335 -> m0_128  [key=2, style=dotted];
m0_335 -> m0_337  [color=darkseagreen4, key=1, label=length, style=dashed];
m0_335 -> m0_217  [key=2, style=dotted];
m0_336 -> m0_337  [key=0, style=solid];
m0_336 -> m0_207  [key=2, style=dotted];
m0_336 -> m0_334  [color=blue, key=0, style=bold];
m0_337 -> m0_338  [key=0, style=solid];
m0_337 -> m0_341  [key=2, style=dotted];
m0_337 -> m0_339  [color=darkseagreen4, key=1, label=s, style=dashed];
m0_338 -> m0_339  [key=0, style=solid];
m0_338 -> m0_221  [key=2, style=dotted];
m0_338 -> m0_343  [key=2, style=dotted];
m0_339 -> m0_340  [key=0, style=solid];
m0_339 -> m0_320  [key=2, style=dotted];
m0_340 -> m0_129  [color=blue, key=0, style=bold];
m0_340 -> m0_341  [key=0, style=solid];
m0_340 -> m0_166  [key=2, style=dotted];
m0_51 -> m0_52  [key=0, style=solid];
m0_52 -> m0_51  [color=blue, key=0, style=bold];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_54  [key=2, style=dotted];
m0_271 -> m0_272  [key=0, style=solid];
m0_271 -> m0_283  [key=0, style=solid];
m0_273 -> m0_32  [key=2, style=dotted];
m0_273 -> m0_274  [key=0, style=solid];
m0_273 -> m0_283  [key=0, style=solid];
m0_273 -> m0_129  [key=2, style=dotted];
m0_273 -> m0_127  [key=2, style=dotted];
m0_275 -> m0_32  [key=2, style=dotted];
m0_275 -> m0_276  [key=0, style=solid];
m0_275 -> m0_88  [key=2, style=dotted];
m0_272 -> m0_273  [key=0, style=solid];
m0_272 -> m0_275  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_272 -> m0_30  [key=2, style=dotted];
m0_274 -> m0_275  [key=0, style=solid];
m0_274 -> m0_277  [key=2, style=dotted];
m0_276 -> m0_271  [color=blue, key=0, style=bold];
m0_276 -> m0_283  [key=0, style=solid];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_96  [color=darkseagreen4, key=1, label=c2, style=dashed];
m0_94 -> m0_97  [color=darkseagreen4, key=1, label=c2, style=dashed];
m0_94 -> m0_98  [color=darkseagreen4, key=1, label=c2, style=dashed];
m0_94 -> m0_30  [key=2, style=dotted];
m0_306 -> m0_307  [key=0, style=solid];
m0_306 -> m0_305  [key=0, style=solid];
m0_306 -> m0_306  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_306 -> m0_309  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_306 -> m0_313  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_306 -> m0_321  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_308 -> m0_32  [key=2, style=dotted];
m0_308 -> m0_309  [key=0, style=solid];
m0_308 -> m0_308  [color=darkseagreen4, key=1, label=totalBytesRead, style=dashed];
m0_308 -> m0_311  [color=darkseagreen4, key=1, label=totalBytesRead, style=dashed];
m0_308 -> m0_322  [color=darkseagreen4, key=1, label=totalBytesRead, style=dashed];
m0_309 -> m0_32  [key=2, style=dotted];
m0_309 -> m0_310  [key=0, style=solid];
m0_309 -> m0_313  [key=0, style=solid];
m0_310 -> m0_32  [key=2, style=dotted];
m0_310 -> m0_311  [key=0, style=solid];
m0_310 -> m0_328  [key=2, style=dotted];
m0_310 -> m0_312  [color=darkseagreen4, key=1, label=length, style=dashed];
m0_307 -> m0_308  [key=0, style=solid];
m0_307 -> m0_309  [color=darkseagreen4, key=1, label=dic, style=dashed];
m0_307 -> m0_310  [color=darkseagreen4, key=1, label=byteCount, style=dashed];
m0_307 -> m0_30  [key=2, style=dotted];
m0_307 -> m0_311  [color=darkseagreen4, key=1, label=dic, style=dashed];
m0_307 -> m0_318  [color=darkseagreen4, key=1, label=byteCount, style=dashed];
m0_307 -> m0_319  [color=darkseagreen4, key=1, label=byteCount, style=dashed];
m0_311 -> m0_312  [key=0, style=solid];
m0_311 -> m0_313  [key=2, style=dotted];
m0_311 -> m0_207  [key=2, style=dotted];
m0_312 -> m0_306  [color=blue, key=0, style=bold];
m0_312 -> m0_326  [key=0, style=solid];
m0_312 -> m0_329  [key=2, style=dotted];
m0_210 -> m0_212  [key=0, style=solid];
m0_208 -> m0_209  [key=0, style=solid];
m0_208 -> m0_213  [key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_19  [color=darkseagreen4, key=1, label=c1, style=dashed];
m0_17 -> m0_21  [color=darkseagreen4, key=1, label=c1, style=dashed];
m0_17 -> m0_22  [color=darkseagreen4, key=1, label="System.DateTimeKind", style=dashed];
m0_17 -> m0_0  [key=2, style=dotted];
m0_17 -> m0_20  [color=darkseagreen4, key=1, label=c1, style=dashed];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_14  [key=2, style=dotted];
m0_18 -> m0_8  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_8  [key=2, style=dotted];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_29  [key=2, style=dotted];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_30  [key=2, style=dotted];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_16  [key=2, style=dotted];
m0_20 -> m0_8  [key=2, style=dotted];
m0_23 -> m0_17  [color=blue, key=0, style=bold];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_25  [color=darkseagreen4, key=1, label=values, style=dashed];
m0_23 -> m0_26  [color=darkseagreen4, key=1, label=values, style=dashed];
m0_23 -> m0_27  [color=darkseagreen4, key=1, label=values, style=dashed];
m0_23 -> m0_31  [key=2, style=dotted];
m0_234 -> m0_235  [key=0, style=solid];
m0_234 -> m0_130  [key=2, style=dotted];
m0_235 -> m0_236  [key=0, style=solid];
m0_235 -> m0_217  [key=2, style=dotted];
m0_235 -> m0_283  [key=0, style=solid];
m0_235 -> m0_128  [key=2, style=dotted];
m0_236 -> m0_234  [color=blue, key=0, style=bold];
m0_236 -> m0_237  [key=0, style=solid];
m0_261 -> m0_262  [key=0, style=solid];
m0_261 -> m0_283  [key=0, style=solid];
m0_261 -> m0_127  [key=2, style=dotted];
m0_262 -> m0_11  [key=2, style=dotted];
m0_262 -> m0_263  [key=0, style=solid];
m0_263 -> m0_261  [color=blue, key=0, style=bold];
m0_263 -> m0_283  [key=0, style=solid];
m0_263 -> m0_88  [key=2, style=dotted];
m0_214 -> m0_215  [key=0, style=solid];
m0_214 -> m0_217  [key=2, style=dotted];
m0_215 -> m0_217  [key=2, style=dotted];
m0_215 -> m0_216  [key=0, style=solid];
m0_216 -> m0_214  [color=blue, key=0, style=bold];
m0_216 -> m0_130  [color=blue, key=0, style=bold];
m0_410 -> m0_411  [key=0, style=solid];
m0_410 -> m0_412  [key=2, style=dotted];
m0_373 -> m0_374  [key=0, style=solid];
m0_373 -> m0_379  [key=0, style=solid];
m0_379 -> m0_32  [key=2, style=dotted];
m0_379 -> m0_380  [key=0, style=solid];
m0_379 -> m0_381  [key=0, style=solid];
m0_380 -> m0_32  [key=2, style=dotted];
m0_380 -> m0_381  [key=0, style=solid];
m0_380 -> m0_284  [key=2, style=dotted];
m0_380 -> m0_382  [key=0, style=solid];
m0_380 -> m0_380  [color=darkorchid, key=3, label="Local variable string s", style=bold];
m0_378 -> m0_379  [key=0, style=solid];
m0_378 -> m0_380  [color=darkseagreen4, key=1, label=newValue, style=dashed];
m0_378 -> m0_30  [key=2, style=dotted];
m0_378 -> m0_378  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m0_378 -> m0_381  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m0_377 -> m0_166  [key=2, style=dotted];
m0_377 -> m0_378  [key=0, style=solid];
m0_377 -> m0_379  [key=0, style=solid];
m0_374 -> m0_370  [key=2, style=dotted];
m0_374 -> m0_377  [color=darkseagreen4, key=1, label=bis, style=dashed];
m0_374 -> m0_375  [key=0, style=solid];
m0_374 -> m0_376  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_374 -> m0_383  [key=2, style=dotted];
m0_374 -> m0_379  [color=darkseagreen4, key=1, label=bis, style=dashed];
m0_376 -> m0_377  [key=0, style=solid];
m0_376 -> m0_11  [key=2, style=dotted];
m0_376 -> m0_373  [key=0, style=solid];
m0_376 -> m0_376  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m0_376 -> m0_379  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m0_376 -> m0_381  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m0_375 -> m0_11  [key=2, style=dotted];
m0_375 -> m0_376  [key=0, style=solid];
m0_375 -> m0_377  [key=0, style=solid];
m0_381 -> m0_373  [color=blue, key=0, style=bold];
m0_381 -> m0_382  [key=0, style=solid];
m0_237 -> m0_238  [key=0, style=solid];
m0_237 -> m0_234  [color=darkorchid, key=3, label="method methodReturn System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator", style=bold];
m0_237 -> m0_88  [key=2, style=dotted];
m0_238 -> m0_239  [key=0, style=solid];
m0_238 -> m0_234  [key=2, style=dotted];
m0_238 -> m0_0  [key=2, style=dotted];
m0_238 -> m0_240  [color=darkseagreen4, key=1, label=newContext, style=dashed];
m0_238 -> m0_238  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m0_239 -> m0_237  [color=blue, key=0, style=bold];
m0_239 -> m0_240  [key=0, style=solid];
m0_239 -> m0_130  [key=2, style=dotted];
m0_155 -> m0_156  [key=0, style=solid];
m0_155 -> m0_87  [key=2, style=dotted];
m0_157 -> m0_3  [key=2, style=dotted];
m0_157 -> m0_158  [key=0, style=solid];
m0_157 -> m0_153  [key=2, style=dotted];
m0_157 -> m0_154  [key=2, style=dotted];
m0_157 -> m0_419  [key=0, style=solid];
m0_157 -> m0_420  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_157 -> m0_244  [color=darkorchid, key=3, label="Parameter variable int count", style=bold];
m0_157 -> m0_293  [color=darkorchid, key=3, label="Parameter variable int count", style=bold];
m0_159 -> m0_32  [key=2, style=dotted];
m0_159 -> m0_160  [key=0, style=solid];
m0_161 -> m0_32  [key=2, style=dotted];
m0_161 -> m0_162  [key=0, style=solid];
m0_161 -> m0_163  [color=darkseagreen4, key=1, label=type, style=dashed];
m0_162 -> m0_32  [key=2, style=dotted];
m0_162 -> m0_163  [key=0, style=solid];
m0_162 -> m0_88  [key=2, style=dotted];
m0_163 -> m0_32  [key=2, style=dotted];
m0_163 -> m0_164  [key=0, style=solid];
m0_163 -> m0_0  [key=2, style=dotted];
m0_163 -> m0_165  [color=darkseagreen4, key=1, label=newContext, style=dashed];
m0_156 -> m0_157  [key=0, style=solid];
m0_156 -> m0_165  [key=2, style=dotted];
m0_156 -> m0_158  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_156 -> m0_84  [color=blue, key=0, style=bold];
m0_158 -> m0_159  [key=0, style=solid];
m0_158 -> m0_166  [key=2, style=dotted];
m0_158 -> m0_160  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_158 -> m0_167  [key=0, style=solid];
m0_158 -> m0_170  [key=0, style=solid];
m0_158 -> m0_173  [key=0, style=solid];
m0_158 -> m0_197  [key=0, style=solid];
m0_158 -> m0_198  [key=0, style=solid];
m0_158 -> m0_199  [key=0, style=solid];
m0_158 -> m0_200  [key=0, style=solid];
m0_158 -> m0_201  [key=0, style=solid];
m0_160 -> m0_161  [key=0, style=solid];
m0_160 -> m0_162  [color=darkseagreen4, key=1, label=token, style=dashed];
m0_160 -> m0_163  [color=darkseagreen4, key=1, label=d2, style=dashed];
m0_160 -> m0_30  [key=2, style=dotted];
m0_164 -> m0_155  [color=blue, key=0, style=bold];
m0_164 -> m0_165  [key=0, style=solid];
m0_164 -> m0_130  [key=2, style=dotted];
m0_344 -> m0_345  [key=0, style=solid];
m0_344 -> m0_327  [key=2, style=dotted];
m0_345 -> m0_346  [key=0, style=solid];
m0_345 -> m0_358  [color=darkseagreen4, key=1, label=builder, style=dashed];
m0_345 -> m0_361  [color=darkseagreen4, key=1, label=builder, style=dashed];
m0_345 -> m0_367  [color=darkseagreen4, key=1, label=builder, style=dashed];
m0_345 -> m0_300  [color=darkorchid, key=3, label="Local variable System.Text.StringBuilder builder", style=bold];
m0_346 -> m0_344  [color=blue, key=0, style=bold];
m0_346 -> m0_347  [key=0, style=solid];
m0_346 -> m0_348  [color=darkseagreen4, key=1, label=totalBytesRead, style=dashed];
m0_346 -> m0_352  [color=darkseagreen4, key=1, label=totalBytesRead, style=dashed];
m0_346 -> m0_76  [color=darkorchid, key=3, label="Local variable int totalBytesRead", style=bold];
m0_346 -> m0_349  [color=darkorchid, key=3, label="Local variable int totalBytesRead", style=bold];
m0_643 -> m0_644  [key=0, style=solid];
m0_645 -> m0_56  [key=2, style=dotted];
m0_645 -> m0_646  [key=0, style=solid];
m0_645 -> m0_647  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_644 -> m0_648  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_644 -> m0_645  [key=0, style=solid];
m0_644 -> m0_644  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m0_646 -> m0_643  [color=blue, key=0, style=bold];
m0_474 -> m0_475  [key=0, style=solid];
m0_477 -> m0_32  [key=2, style=dotted];
m0_477 -> m0_478  [key=0, style=solid];
m0_478 -> m0_32  [key=2, style=dotted];
m0_478 -> m0_479  [key=0, style=solid];
m0_479 -> m0_32  [key=2, style=dotted];
m0_479 -> m0_480  [key=0, style=solid];
m0_480 -> m0_32  [key=2, style=dotted];
m0_480 -> m0_481  [key=0, style=solid];
m0_481 -> m0_32  [key=2, style=dotted];
m0_481 -> m0_482  [key=0, style=solid];
m0_482 -> m0_32  [key=2, style=dotted];
m0_482 -> m0_483  [key=0, style=solid];
m0_483 -> m0_32  [key=2, style=dotted];
m0_483 -> m0_484  [key=0, style=solid];
m0_484 -> m0_32  [key=2, style=dotted];
m0_484 -> m0_485  [key=0, style=solid];
m0_485 -> m0_32  [key=2, style=dotted];
m0_485 -> m0_486  [key=0, style=solid];
m0_486 -> m0_32  [key=2, style=dotted];
m0_486 -> m0_487  [key=0, style=solid];
m0_476 -> m0_477  [key=0, style=solid];
m0_476 -> m0_478  [color=darkseagreen4, key=1, label=values, style=dashed];
m0_476 -> m0_479  [color=darkseagreen4, key=1, label=values, style=dashed];
m0_476 -> m0_480  [color=darkseagreen4, key=1, label=values, style=dashed];
m0_476 -> m0_481  [color=darkseagreen4, key=1, label=values, style=dashed];
m0_476 -> m0_482  [color=darkseagreen4, key=1, label=values, style=dashed];
m0_476 -> m0_483  [color=darkseagreen4, key=1, label=values, style=dashed];
m0_476 -> m0_484  [color=darkseagreen4, key=1, label=values, style=dashed];
m0_476 -> m0_485  [color=darkseagreen4, key=1, label=values, style=dashed];
m0_476 -> m0_486  [color=darkseagreen4, key=1, label=values, style=dashed];
m0_476 -> m0_30  [key=2, style=dotted];
m0_475 -> m0_476  [key=0, style=solid];
m0_475 -> m0_475  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m0_487 -> m0_474  [color=blue, key=0, style=bold];
m0_288 -> m0_409  [key=0, style=solid];
m0_288 -> m0_32  [key=2, style=dotted];
m0_288 -> m0_289  [key=0, style=solid];
m0_409 -> m0_410  [key=0, style=solid];
m0_409 -> m0_207  [key=2, style=dotted];
m0_411 -> m0_288  [color=blue, key=0, style=bold];
m0_411 -> m0_412  [key=0, style=solid];
m0_278 -> m0_279  [key=0, style=solid];
m0_278 -> m0_283  [key=0, style=solid];
m0_278 -> m0_128  [key=2, style=dotted];
m0_278 -> m0_127  [key=2, style=dotted];
m0_280 -> m0_32  [key=2, style=dotted];
m0_280 -> m0_281  [key=0, style=solid];
m0_280 -> m0_284  [key=2, style=dotted];
m0_281 -> m0_32  [key=2, style=dotted];
m0_281 -> m0_282  [key=0, style=solid];
m0_281 -> m0_283  [key=0, style=solid];
m0_281 -> m0_288  [key=2, style=dotted];
m0_281 -> m0_127  [key=2, style=dotted];
m0_282 -> m0_32  [key=2, style=dotted];
m0_282 -> m0_283  [key=0, style=solid];
m0_282 -> m0_292  [key=2, style=dotted];
m0_279 -> m0_280  [key=0, style=solid];
m0_279 -> m0_281  [color=darkseagreen4, key=1, label=l, style=dashed];
m0_279 -> m0_282  [color=darkseagreen4, key=1, label=l, style=dashed];
m0_279 -> m0_30  [key=2, style=dotted];
m0_283 -> m0_278  [color=blue, key=0, style=bold];
m0_283 -> m0_204  [color=blue, key=0, style=bold];
m0_165 -> m0_166  [key=0, style=solid];
m0_165 -> m0_128  [key=2, style=dotted];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_29  [key=2, style=dotted];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_46  [key=2, style=dotted];
m0_44 -> m0_30  [key=2, style=dotted];
m0_45 -> m0_43  [color=blue, key=0, style=bold];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_47  [color=darkseagreen4, key=1, label=values, style=dashed];
m0_45 -> m0_48  [color=darkseagreen4, key=1, label=values, style=dashed];
m0_45 -> m0_49  [color=darkseagreen4, key=1, label=values, style=dashed];
m0_45 -> m0_31  [key=2, style=dotted];
m0_509 -> m0_510  [key=0, style=solid];
m0_512 -> m0_181  [key=2, style=dotted];
m0_512 -> m0_513  [key=0, style=solid];
m0_511 -> m0_512  [key=0, style=solid];
m0_511 -> m0_166  [key=2, style=dotted];
m0_510 -> m0_511  [key=0, style=solid];
m0_510 -> m0_495  [key=2, style=dotted];
m0_513 -> m0_509  [color=blue, key=0, style=bold];
m0_543 -> m0_544  [key=0, style=solid];
m0_549 -> m0_181  [key=2, style=dotted];
m0_549 -> m0_550  [key=0, style=solid];
m0_548 -> m0_549  [key=0, style=solid];
m0_548 -> m0_166  [key=2, style=dotted];
m0_544 -> m0_548  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_544 -> m0_545  [key=0, style=solid];
m0_544 -> m0_551  [key=2, style=dotted];
m0_544 -> m0_546  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_544 -> m0_547  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_547 -> m0_548  [key=0, style=solid];
m0_545 -> m0_546  [key=0, style=solid];
m0_546 -> m0_547  [key=0, style=solid];
m0_550 -> m0_543  [color=blue, key=0, style=bold];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_51  [color=blue, key=0, style=bold];
m0_54 -> m0_56  [key=2, style=dotted];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_55 -> m0_53  [color=blue, key=0, style=bold];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_59  [color=darkorchid, key=3, label="method methodReturn bool Read", style=bold];
m0_677 -> m0_678  [key=0, style=solid];
m0_682 -> m0_181  [key=2, style=dotted];
m0_682 -> m0_683  [key=0, style=solid];
m0_681 -> m0_254  [key=2, style=dotted];
m0_681 -> m0_685  [key=2, style=dotted];
m0_681 -> m0_682  [key=0, style=solid];
m0_680 -> m0_3  [key=2, style=dotted];
m0_680 -> m0_681  [key=0, style=solid];
m0_679 -> m0_680  [key=0, style=solid];
m0_678 -> m0_684  [key=2, style=dotted];
m0_678 -> m0_679  [key=0, style=solid];
m0_683 -> m0_677  [color=blue, key=0, style=bold];
m0_330 -> m0_371  [key=0, style=solid];
m0_330 -> m0_379  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_330 -> m0_380  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_330 -> m0_330  [color=darkorchid, key=3, label="method methodReturn int GetLastFullCharStop", style=bold];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_9  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m0_7 -> m0_11  [color=darkseagreen4, key=1, label=bool, style=dashed];
m0_7 -> m0_12  [color=darkseagreen4, key=1, label="System.DateTimeKind", style=dashed];
m0_287 -> m0_32  [key=2, style=dotted];
m0_287 -> m0_288  [key=0, style=solid];
m0_289 -> m0_32  [key=2, style=dotted];
m0_289 -> m0_290  [key=0, style=solid];
m0_290 -> m0_32  [key=2, style=dotted];
m0_290 -> m0_291  [key=0, style=solid];
m0_286 -> m0_287  [key=0, style=solid];
m0_286 -> m0_288  [color=darkseagreen4, key=1, label=list, style=dashed];
m0_286 -> m0_289  [color=darkseagreen4, key=1, label=list, style=dashed];
m0_286 -> m0_290  [color=darkseagreen4, key=1, label=list, style=dashed];
m0_286 -> m0_30  [key=2, style=dotted];
m0_286 -> m0_293  [key=0, style=solid];
m0_286 -> m0_157  [color=darkorchid, key=3, label="method methodReturn byte[] ReadBinary", style=bold];
m0_293 -> m0_294  [key=0, style=solid];
m0_293 -> m0_128  [key=2, style=dotted];
m0_293 -> m0_297  [color=darkseagreen4, key=1, label=list, style=dashed];
m0_293 -> m0_295  [color=darkseagreen4, key=1, label=list, style=dashed];
m0_293 -> m0_296  [color=darkseagreen4, key=1, label=list, style=dashed];
m0_293 -> m0_30  [key=2, style=dotted];
m0_294 -> m0_295  [key=0, style=solid];
m0_294 -> m0_205  [key=2, style=dotted];
m0_294 -> m0_32  [key=2, style=dotted];
m0_297 -> m0_298  [key=0, style=solid];
m0_297 -> m0_157  [key=2, style=dotted];
m0_297 -> m0_32  [key=2, style=dotted];
m0_297 -> m0_230  [key=2, style=dotted];
m0_295 -> m0_296  [key=0, style=solid];
m0_295 -> m0_297  [key=0, style=solid];
m0_295 -> m0_32  [key=2, style=dotted];
m0_295 -> m0_230  [key=2, style=dotted];
m0_296 -> m0_297  [key=0, style=solid];
m0_296 -> m0_128  [key=2, style=dotted];
m0_296 -> m0_32  [key=2, style=dotted];
m0_296 -> m0_230  [key=2, style=dotted];
m0_298 -> m0_286  [color=blue, key=0, style=bold];
m0_298 -> m0_292  [color=blue, key=0, style=bold];
m0_46 -> m0_32  [key=2, style=dotted];
m0_46 -> m0_47  [key=0, style=solid];
m0_726 -> m0_727  [key=0, style=solid];
m0_733 -> m0_181  [key=2, style=dotted];
m0_733 -> m0_734  [key=0, style=solid];
m0_732 -> m0_733  [key=0, style=solid];
m0_732 -> m0_166  [key=2, style=dotted];
m0_732 -> m0_734  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_734 -> m0_735  [key=0, style=solid];
m0_734 -> m0_30  [key=2, style=dotted];
m0_734 -> m0_736  [color=darkseagreen4, key=1, label=newName, style=dashed];
m0_734 -> m0_737  [color=darkseagreen4, key=1, label=newName, style=dashed];
m0_734 -> m0_738  [color=darkseagreen4, key=1, label=newName, style=dashed];
m0_735 -> m0_32  [key=2, style=dotted];
m0_735 -> m0_736  [key=0, style=solid];
m0_736 -> m0_32  [key=2, style=dotted];
m0_736 -> m0_737  [key=0, style=solid];
m0_737 -> m0_32  [key=2, style=dotted];
m0_737 -> m0_738  [key=0, style=solid];
m0_738 -> m0_32  [key=2, style=dotted];
m0_738 -> m0_739  [key=0, style=solid];
m0_727 -> m0_732  [color=darkseagreen4, key=1, label=name, style=dashed];
m0_727 -> m0_728  [key=0, style=solid];
m0_727 -> m0_740  [key=2, style=dotted];
m0_727 -> m0_730  [color=darkseagreen4, key=1, label=name, style=dashed];
m0_727 -> m0_731  [color=darkseagreen4, key=1, label=name, style=dashed];
m0_731 -> m0_732  [key=0, style=solid];
m0_731 -> m0_11  [key=2, style=dotted];
m0_728 -> m0_729  [key=0, style=solid];
m0_728 -> m0_741  [key=2, style=dotted];
m0_728 -> m0_730  [color=darkseagreen4, key=1, label=p1, style=dashed];
m0_730 -> m0_731  [key=0, style=solid];
m0_730 -> m0_11  [key=2, style=dotted];
m0_729 -> m0_731  [color=darkseagreen4, key=1, label=p2, style=dashed];
m0_729 -> m0_730  [key=0, style=solid];
m0_729 -> m0_741  [key=2, style=dotted];
m0_739 -> m0_726  [color=blue, key=0, style=bold];
m0_666 -> m0_667  [key=0, style=solid];
m0_675 -> m0_32  [key=2, style=dotted];
m0_675 -> m0_676  [key=0, style=solid];
m0_669 -> m0_32  [key=2, style=dotted];
m0_669 -> m0_670  [key=0, style=solid];
m0_670 -> m0_32  [key=2, style=dotted];
m0_670 -> m0_671  [key=0, style=solid];
m0_671 -> m0_32  [key=2, style=dotted];
m0_671 -> m0_672  [key=0, style=solid];
m0_671 -> m0_563  [key=2, style=dotted];
m0_672 -> m0_32  [key=2, style=dotted];
m0_672 -> m0_673  [key=0, style=solid];
m0_672 -> m0_563  [key=2, style=dotted];
m0_673 -> m0_32  [key=2, style=dotted];
m0_673 -> m0_674  [key=0, style=solid];
m0_673 -> m0_563  [key=2, style=dotted];
m0_667 -> m0_675  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_667 -> m0_667  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m0_667 -> m0_668  [key=0, style=solid];
m0_674 -> m0_675  [key=0, style=solid];
m0_674 -> m0_29  [key=2, style=dotted];
m0_668 -> m0_669  [key=0, style=solid];
m0_668 -> m0_670  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_668 -> m0_671  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_668 -> m0_672  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_668 -> m0_673  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_668 -> m0_30  [key=2, style=dotted];
m0_668 -> m0_674  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_676 -> m0_666  [color=blue, key=0, style=bold];
m0_254 -> m0_255  [key=0, style=solid];
m0_254 -> m0_253  [color=darkorchid, key=3, label="Local variable System.DateTime dateTime", style=bold];
m0_150 -> m0_151  [key=0, style=solid];
m0_150 -> m0_154  [key=0, style=solid];
m0_151 -> m0_3  [key=2, style=dotted];
m0_151 -> m0_152  [key=0, style=solid];
m0_151 -> m0_153  [key=2, style=dotted];
m0_151 -> m0_154  [key=2, style=dotted];
m0_151 -> m0_88  [key=2, style=dotted];
m0_152 -> m0_150  [color=blue, key=0, style=bold];
m0_152 -> m0_153  [key=0, style=solid];
m0_719 -> m0_720  [key=0, style=solid];
m0_722 -> m0_32  [key=2, style=dotted];
m0_722 -> m0_723  [key=0, style=solid];
m0_723 -> m0_32  [key=2, style=dotted];
m0_723 -> m0_724  [key=0, style=solid];
m0_724 -> m0_32  [key=2, style=dotted];
m0_724 -> m0_725  [key=0, style=solid];
m0_721 -> m0_722  [key=0, style=solid];
m0_721 -> m0_723  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_721 -> m0_724  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_721 -> m0_30  [key=2, style=dotted];
m0_720 -> m0_721  [key=0, style=solid];
m0_720 -> m0_720  [color=darkorchid, key=3, label="Local variable string jsonText", style=bold];
m0_725 -> m0_719  [color=blue, key=0, style=bold];
m0_359 -> m0_360  [key=0, style=solid];
m0_359 -> m0_331  [key=2, style=dotted];
m0_359 -> m0_361  [color=darkseagreen4, key=1, label=builder, style=dashed];
m0_359 -> m0_367  [color=darkseagreen4, key=1, label=builder, style=dashed];
m0_362 -> m0_32  [key=2, style=dotted];
m0_362 -> m0_363  [key=0, style=solid];
m0_362 -> m0_365  [key=0, style=solid];
m0_365 -> m0_32  [key=2, style=dotted];
m0_365 -> m0_366  [key=0, style=solid];
m0_365 -> m0_29  [key=2, style=dotted];
m0_368 -> m0_32  [key=2, style=dotted];
m0_368 -> m0_369  [key=0, style=solid];
m0_368 -> m0_29  [key=2, style=dotted];
m0_368 -> m0_341  [color=blue, key=0, style=bold];
m0_361 -> m0_362  [key=0, style=solid];
m0_361 -> m0_29  [key=2, style=dotted];
m0_361 -> m0_332  [key=2, style=dotted];
m0_363 -> m0_365  [color=darkseagreen4, key=1, label=d1, style=dashed];
m0_363 -> m0_364  [key=0, style=solid];
m0_363 -> m0_343  [key=2, style=dotted];
m0_364 -> m0_365  [key=0, style=solid];
m0_364 -> m0_100  [key=2, style=dotted];
m0_364 -> m0_366  [key=0, style=solid];
m0_364 -> m0_333  [key=2, style=dotted];
m0_366 -> m0_368  [color=darkseagreen4, key=1, label=d2, style=dashed];
m0_366 -> m0_367  [key=0, style=solid];
m0_366 -> m0_343  [key=2, style=dotted];
m0_366 -> m0_347  [key=0, style=solid];
m0_367 -> m0_368  [key=0, style=solid];
m0_367 -> m0_100  [key=2, style=dotted];
m0_367 -> m0_334  [key=2, style=dotted];
m0_360 -> m0_361  [key=0, style=solid];
m0_360 -> m0_364  [color=darkseagreen4, key=1, label=s, style=dashed];
m0_360 -> m0_367  [color=darkseagreen4, key=1, label=s, style=dashed];
m0_360 -> m0_360  [color=darkorchid, key=3, label="Local variable string s", style=bold];
m0_360 -> m0_328  [key=2, style=dotted];
m0_369 -> m0_359  [color=blue, key=0, style=bold];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_82  [key=0, style=solid];
m0_79 -> m0_78  [color=blue, key=0, style=bold];
m0_79 -> m0_80  [key=0, style=solid];
m0_590 -> m0_591  [key=0, style=solid];
m0_601 -> m0_32  [key=2, style=dotted];
m0_601 -> m0_602  [key=0, style=solid];
m0_593 -> m0_32  [key=2, style=dotted];
m0_593 -> m0_594  [key=0, style=solid];
m0_594 -> m0_32  [key=2, style=dotted];
m0_594 -> m0_595  [key=0, style=solid];
m0_595 -> m0_32  [key=2, style=dotted];
m0_595 -> m0_596  [key=0, style=solid];
m0_595 -> m0_563  [key=2, style=dotted];
m0_596 -> m0_32  [key=2, style=dotted];
m0_596 -> m0_597  [key=0, style=solid];
m0_596 -> m0_563  [key=2, style=dotted];
m0_597 -> m0_32  [key=2, style=dotted];
m0_597 -> m0_598  [key=0, style=solid];
m0_597 -> m0_563  [key=2, style=dotted];
m0_598 -> m0_32  [key=2, style=dotted];
m0_598 -> m0_599  [key=0, style=solid];
m0_599 -> m0_32  [key=2, style=dotted];
m0_599 -> m0_600  [key=0, style=solid];
m0_591 -> m0_601  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_591 -> m0_591  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m0_591 -> m0_592  [key=0, style=solid];
m0_600 -> m0_601  [key=0, style=solid];
m0_600 -> m0_29  [key=2, style=dotted];
m0_592 -> m0_593  [key=0, style=solid];
m0_592 -> m0_594  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_592 -> m0_595  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_592 -> m0_596  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_592 -> m0_597  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_592 -> m0_598  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_592 -> m0_599  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_592 -> m0_30  [key=2, style=dotted];
m0_592 -> m0_600  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_602 -> m0_590  [color=blue, key=0, style=bold];
m0_229 -> m0_230  [key=0, style=solid];
m0_382 -> m0_383  [key=0, style=solid];
m0_382 -> m0_330  [color=blue, key=0, style=bold];
m0_383 -> m0_3  [key=2, style=dotted];
m0_383 -> m0_384  [key=0, style=solid];
m0_383 -> m0_385  [color=darkseagreen4, key=1, label=list, style=dashed];
m0_383 -> m0_386  [color=darkseagreen4, key=1, label=byte, style=dashed];
m0_383 -> m0_388  [color=darkseagreen4, key=1, label=byte, style=dashed];
m0_383 -> m0_390  [color=darkseagreen4, key=1, label=byte, style=dashed];
m0_383 -> m0_110  [color=darkorchid, key=3, label="method methodReturn int BytesInSequence", style=bold];
m0_383 -> m0_237  [color=darkorchid, key=3, label="method methodReturn int BytesInSequence", style=bold];
m0_383 -> m0_98  [color=darkorchid, key=3, label="method methodReturn int BytesInSequence", style=bold];
m0_383 -> m0_76  [color=darkorchid, key=3, label="method methodReturn int BytesInSequence", style=bold];
m0_387 -> m0_32  [key=2, style=dotted];
m0_387 -> m0_388  [key=0, style=solid];
m0_387 -> m0_393  [key=0, style=solid];
m0_389 -> m0_32  [key=2, style=dotted];
m0_389 -> m0_390  [key=0, style=solid];
m0_389 -> m0_393  [key=0, style=solid];
m0_390 -> m0_32  [key=2, style=dotted];
m0_390 -> m0_391  [key=0, style=solid];
m0_390 -> m0_392  [key=0, style=solid];
m0_391 -> m0_32  [key=2, style=dotted];
m0_391 -> m0_392  [key=0, style=solid];
m0_391 -> m0_393  [key=0, style=solid];
m0_392 -> m0_32  [key=2, style=dotted];
m0_392 -> m0_393  [key=0, style=solid];
m0_393 -> m0_32  [key=2, style=dotted];
m0_393 -> m0_394  [key=0, style=solid];
m0_393 -> m0_383  [color=blue, key=0, style=bold];
m0_384 -> m0_385  [key=0, style=solid];
m0_384 -> m0_207  [key=2, style=dotted];
m0_384 -> m0_11  [key=2, style=dotted];
m0_384 -> m0_386  [key=0, style=solid];
m0_385 -> m0_386  [key=0, style=solid];
m0_385 -> m0_207  [key=2, style=dotted];
m0_385 -> m0_11  [key=2, style=dotted];
m0_385 -> m0_393  [key=0, style=solid];
m0_386 -> m0_387  [key=0, style=solid];
m0_386 -> m0_29  [key=2, style=dotted];
m0_386 -> m0_388  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_388 -> m0_389  [key=0, style=solid];
m0_388 -> m0_390  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_388 -> m0_391  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_388 -> m0_392  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_388 -> m0_393  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_388 -> m0_30  [key=2, style=dotted];
m0_394 -> m0_382  [color=blue, key=0, style=bold];
m0_394 -> m0_395  [key=0, style=solid];
m0_394 -> m0_396  [key=0, style=solid];
m0_782 -> m0_783  [key=0, style=solid];
m0_790 -> m0_32  [key=2, style=dotted];
m0_790 -> m0_791  [key=0, style=solid];
m0_791 -> m0_32  [key=2, style=dotted];
m0_791 -> m0_792  [key=0, style=solid];
m0_785 -> m0_790  [color=darkseagreen4, key=1, label=articles1, style=dashed];
m0_785 -> m0_791  [color=darkseagreen4, key=1, label=articles1, style=dashed];
m0_785 -> m0_786  [key=0, style=solid];
m0_785 -> m0_794  [key=2, style=dotted];
m0_785 -> m0_787  [color=darkseagreen4, key=1, label=articles1, style=dashed];
m0_785 -> m0_788  [color=darkseagreen4, key=1, label=articles1, style=dashed];
m0_789 -> m0_790  [key=0, style=solid];
m0_789 -> m0_791  [color=darkseagreen4, key=1, label=articles2, style=dashed];
m0_789 -> m0_30  [key=2, style=dotted];
m0_788 -> m0_29  [key=2, style=dotted];
m0_788 -> m0_789  [key=0, style=solid];
m0_784 -> m0_785  [key=0, style=solid];
m0_784 -> m0_793  [key=2, style=dotted];
m0_784 -> m0_787  [color=darkseagreen4, key=1, label=a2, style=dashed];
m0_786 -> m0_11  [key=2, style=dotted];
m0_786 -> m0_787  [key=0, style=solid];
m0_787 -> m0_11  [key=2, style=dotted];
m0_787 -> m0_788  [key=0, style=solid];
m0_783 -> m0_784  [key=0, style=solid];
m0_783 -> m0_786  [color=darkseagreen4, key=1, label=a1, style=dashed];
m0_783 -> m0_793  [key=2, style=dotted];
m0_792 -> m0_782  [color=blue, key=0, style=bold];
m0_416 -> m0_32  [key=2, style=dotted];
m0_416 -> m0_417  [key=0, style=solid];
m0_438 -> m0_439  [key=0, style=solid];
m0_441 -> m0_181  [key=2, style=dotted];
m0_441 -> m0_442  [key=0, style=solid];
m0_440 -> m0_441  [key=0, style=solid];
m0_440 -> m0_166  [key=2, style=dotted];
m0_440 -> m0_442  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_442 -> m0_443  [key=0, style=solid];
m0_442 -> m0_30  [key=2, style=dotted];
m0_442 -> m0_444  [color=darkseagreen4, key=1, label=v2, style=dashed];
m0_442 -> m0_445  [color=darkseagreen4, key=1, label=v2, style=dashed];
m0_442 -> m0_446  [color=darkseagreen4, key=1, label=v2, style=dashed];
m0_443 -> m0_32  [key=2, style=dotted];
m0_443 -> m0_444  [key=0, style=solid];
m0_444 -> m0_32  [key=2, style=dotted];
m0_444 -> m0_445  [key=0, style=solid];
m0_445 -> m0_32  [key=2, style=dotted];
m0_445 -> m0_446  [key=0, style=solid];
m0_446 -> m0_32  [key=2, style=dotted];
m0_446 -> m0_447  [key=0, style=solid];
m0_439 -> m0_440  [key=0, style=solid];
m0_439 -> m0_343  [key=2, style=dotted];
m0_447 -> m0_438  [color=blue, key=0, style=bold];
m0_35 -> m0_36  [key=0, style=solid];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_33  [key=2, style=dotted];
m0_36 -> m0_38  [key=2, style=dotted];
m0_37 -> m0_35  [color=blue, key=0, style=bold];
m0_421 -> m0_157  [color=blue, key=0, style=bold];
m0_610 -> m0_611  [key=0, style=solid];
m0_612 -> m0_56  [key=2, style=dotted];
m0_612 -> m0_613  [key=0, style=solid];
m0_612 -> m0_614  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_611 -> m0_615  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_611 -> m0_612  [key=0, style=solid];
m0_611 -> m0_611  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m0_613 -> m0_610  [color=blue, key=0, style=bold];
m0_802 -> m0_803  [key=0, style=solid];
m0_809 -> m0_181  [key=2, style=dotted];
m0_809 -> m0_810  [key=0, style=solid];
m0_808 -> m0_809  [key=0, style=solid];
m0_808 -> m0_166  [key=2, style=dotted];
m0_805 -> m0_3  [key=2, style=dotted];
m0_805 -> m0_808  [color=darkseagreen4, key=1, label=products, style=dashed];
m0_805 -> m0_806  [key=0, style=solid];
m0_805 -> m0_807  [color=darkseagreen4, key=1, label=products, style=dashed];
m0_807 -> m0_808  [key=0, style=solid];
m0_807 -> m0_11  [key=2, style=dotted];
m0_804 -> m0_805  [key=0, style=solid];
m0_804 -> m0_807  [color=darkseagreen4, key=1, label=p2, style=dashed];
m0_804 -> m0_753  [key=2, style=dotted];
m0_804 -> m0_409  [key=2, style=dotted];
m0_806 -> m0_807  [key=0, style=solid];
m0_806 -> m0_11  [key=2, style=dotted];
m0_803 -> m0_804  [key=0, style=solid];
m0_803 -> m0_806  [color=darkseagreen4, key=1, label=p1, style=dashed];
m0_803 -> m0_753  [key=2, style=dotted];
m0_803 -> m0_409  [key=2, style=dotted];
m0_810 -> m0_802  [color=blue, key=0, style=bold];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_31  [color=blue, key=0, style=bold];
m0_34 -> m0_33  [color=blue, key=0, style=bold];
m0_213 -> m0_211  [color=blue, key=0, style=bold];
m0_88 -> m0_89  [key=0, style=solid];
m0_50 -> m0_38  [color=blue, key=0, style=bold];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_77  [color=darkorchid, key=3, label="method methodReturn bool ReadInternal", style=bold];
m0_59 -> m0_78  [color=darkorchid, key=3, label="method methodReturn bool ReadInternal", style=bold];
m0_59 -> m0_57  [color=blue, key=0, style=bold];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_83  [color=darkorchid, key=3, label="Local variable bool success", style=bold];
m0_60 -> m0_84  [color=darkorchid, key=3, label="Local variable bool success", style=bold];
m0_60 -> m0_85  [color=darkorchid, key=3, label="Local variable bool success", style=bold];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_64  [key=0, style=solid];
m0_61 -> m0_68  [key=0, style=solid];
m0_61 -> m0_74  [key=0, style=solid];
m0_61 -> m0_40  [color=darkorchid, key=3, label="Parameter variable string resolvedEnumName", style=bold];
m0_61 -> m0_67  [color=darkorchid, key=3, label="method methodReturn bool TryResolvedEnumName", style=bold];
m0_61 -> m0_60  [color=blue, key=0, style=bold];
m0_62 -> m0_63  [key=0, style=solid];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_62  [color=blue, key=0, style=bold];
m0_68 -> m0_69  [key=0, style=solid];
m0_74 -> m0_82  [key=0, style=solid];
m0_74 -> m0_86  [key=2, style=dotted];
m0_74 -> m0_87  [key=2, style=dotted];
m0_74 -> m0_32  [key=2, style=dotted];
m0_74 -> m0_75  [key=0, style=solid];
m0_63 -> m0_75  [key=0, style=solid];
m0_63 -> m0_83  [key=2, style=dotted];
m0_63 -> m0_56  [key=2, style=dotted];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_65 -> m0_66  [key=0, style=solid];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_29  [key=2, style=dotted];
m0_66 -> m0_60  [key=2, style=dotted];
m0_67 -> m0_75  [key=0, style=solid];
m0_67 -> m0_84  [key=2, style=dotted];
m0_67 -> m0_65  [color=blue, key=0, style=bold];
m0_69 -> m0_70  [key=0, style=solid];
m0_70 -> m0_71  [key=0, style=solid];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_286  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_74  [color=darkseagreen4, key=1, label=l, style=dashed];
m0_72 -> m0_75  [color=darkseagreen4, key=1, label=l, style=dashed];
m0_72 -> m0_76  [color=darkseagreen4, key=1, label=l, style=dashed];
m0_72 -> m0_30  [key=2, style=dotted];
m0_73 -> m0_75  [key=0, style=solid];
m0_73 -> m0_85  [key=2, style=dotted];
m0_73 -> m0_32  [key=2, style=dotted];
m0_73 -> m0_74  [key=0, style=solid];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_78  [key=0, style=solid];
m0_75 -> m0_32  [key=2, style=dotted];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_88  [key=2, style=dotted];
m0_76 -> m0_32  [key=2, style=dotted];
m0_77 -> m0_82  [key=0, style=solid];
m0_77 -> m0_70  [color=blue, key=0, style=bold];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_88  [key=2, style=dotted];
m0_81 -> m0_82  [key=0, style=solid];
m0_82 -> m0_59  [color=blue, key=0, style=bold];
m0_100 -> m0_126  [key=0, style=solid];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_3  [color=blue, key=0, style=bold];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_7  [key=2, style=dotted];
m0_6 -> m0_4  [color=blue, key=0, style=bold];
m0_6 -> m0_5  [color=blue, key=0, style=bold];
m0_617 -> m0_618  [key=0, style=solid];
m0_619 -> m0_56  [key=2, style=dotted];
m0_619 -> m0_620  [key=0, style=solid];
m0_619 -> m0_621  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_618 -> m0_622  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_618 -> m0_619  [key=0, style=solid];
m0_618 -> m0_618  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m0_620 -> m0_617  [color=blue, key=0, style=bold];
m0_120 -> m0_121  [key=0, style=solid];
m0_120 -> m0_126  [key=0, style=solid];
m0_121 -> m0_56  [key=2, style=dotted];
m0_121 -> m0_122  [key=0, style=solid];
m0_121 -> m0_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_122 -> m0_120  [color=blue, key=0, style=bold];
m0_122 -> m0_123  [key=0, style=solid];
m0_122 -> m0_88  [key=2, style=dotted];
m0_218 -> m0_214  [color=darkorchid, key=3, label="method methodReturn System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator", style=bold];
m0_218 -> m0_219  [key=0, style=solid];
m0_218 -> m0_207  [key=2, style=dotted];
m0_219 -> m0_214  [key=2, style=dotted];
m0_219 -> m0_220  [key=0, style=solid];
m0_219 -> m0_221  [key=2, style=dotted];
m0_220 -> m0_218  [color=blue, key=0, style=bold];
m0_220 -> m0_205  [color=blue, key=0, style=bold];
m0_434 -> m0_435  [key=0, style=solid];
m0_436 -> m0_32  [key=2, style=dotted];
m0_436 -> m0_437  [key=0, style=solid];
m0_435 -> m0_436  [key=0, style=solid];
m0_435 -> m0_30  [key=2, style=dotted];
m0_437 -> m0_434  [color=blue, key=0, style=bold];
m0_249 -> m0_250  [key=0, style=solid];
m0_249 -> m0_205  [key=2, style=dotted];
m0_249 -> m0_287  [key=2, style=dotted];
m0_251 -> m0_254  [key=2, style=dotted];
m0_251 -> m0_252  [key=0, style=solid];
m0_251 -> m0_255  [key=2, style=dotted];
m0_250 -> m0_251  [key=0, style=solid];
m0_250 -> m0_56  [key=2, style=dotted];
m0_250 -> m0_256  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_250 -> m0_283  [key=0, style=solid];
m0_250 -> m0_127  [key=2, style=dotted];
m0_252 -> m0_32  [key=2, style=dotted];
m0_252 -> m0_253  [key=0, style=solid];
m0_252 -> m0_288  [key=2, style=dotted];
m0_253 -> m0_249  [color=blue, key=0, style=bold];
m0_253 -> m0_254  [key=0, style=solid];
m0_253 -> m0_289  [key=2, style=dotted];
m0_253 -> m0_257  [color=darkseagreen4, key=1, label=utcDateTime, style=dashed];
m0_253 -> m0_259  [color=darkseagreen4, key=1, label=utcDateTime, style=dashed];
m0_253 -> m0_260  [color=darkseagreen4, key=1, label=utcDateTime, style=dashed];
m0_154 -> m0_156  [key=0, style=solid];
m0_154 -> m0_87  [key=2, style=dotted];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_89  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m0_89 -> m0_93  [color=darkseagreen4, key=1, label=c1, style=dashed];
m0_89 -> m0_78  [key=2, style=dotted];
m0_89 -> m0_91  [color=darkseagreen4, key=1, label=c1, style=dashed];
m0_89 -> m0_92  [color=darkseagreen4, key=1, label=c1, style=dashed];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_94  [key=2, style=dotted];
m0_90 -> m0_100  [key=2, style=dotted];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_93  [key=0, style=solid];
m0_91 -> m0_100  [key=2, style=dotted];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_95  [key=2, style=dotted];
m0_92 -> m0_100  [key=2, style=dotted];
m0_93 -> m0_89  [color=blue, key=0, style=bold];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_29  [key=2, style=dotted];
m0_240 -> m0_241  [key=0, style=solid];
m0_240 -> m0_283  [key=0, style=solid];
m0_240 -> m0_128  [key=2, style=dotted];
m0_242 -> m0_56  [key=2, style=dotted];
m0_242 -> m0_243  [key=0, style=solid];
m0_242 -> m0_244  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_242 -> m0_283  [key=0, style=solid];
m0_242 -> m0_286  [key=2, style=dotted];
m0_242 -> m0_127  [key=2, style=dotted];
m0_241 -> m0_245  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_241 -> m0_242  [key=0, style=solid];
m0_241 -> m0_241  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m0_243 -> m0_240  [color=blue, key=0, style=bold];
m0_243 -> m0_244  [key=0, style=solid];
m0_525 -> m0_526  [key=0, style=solid];
m0_531 -> m0_32  [key=2, style=dotted];
m0_531 -> m0_532  [key=0, style=solid];
m0_530 -> m0_531  [key=0, style=solid];
m0_530 -> m0_29  [key=2, style=dotted];
m0_526 -> m0_530  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_526 -> m0_527  [key=0, style=solid];
m0_526 -> m0_533  [key=2, style=dotted];
m0_526 -> m0_528  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_526 -> m0_529  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_529 -> m0_530  [key=0, style=solid];
m0_527 -> m0_528  [key=0, style=solid];
m0_528 -> m0_529  [key=0, style=solid];
m0_532 -> m0_525  [color=blue, key=0, style=bold];
m0_341 -> m0_181  [key=2, style=dotted];
m0_341 -> m0_342  [key=0, style=solid];
m0_341 -> m0_348  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_341 -> m0_354  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_341 -> m0_359  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_341 -> m0_366  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_342 -> m0_337  [color=blue, key=0, style=bold];
m0_342 -> m0_343  [key=0, style=solid];
m0_342 -> m0_344  [key=0, style=solid];
m0_323 -> m0_324  [key=0, style=solid];
m0_323 -> m0_326  [key=0, style=solid];
m0_323 -> m0_334  [key=2, style=dotted];
m0_324 -> m0_325  [key=0, style=solid];
m0_324 -> m0_326  [key=2, style=dotted];
m0_325 -> m0_323  [color=blue, key=0, style=bold];
m0_325 -> m0_302  [key=0, style=solid];
m0_325 -> m0_326  [key=0, style=solid];
m0_106 -> m0_107  [key=0, style=solid];
m0_113 -> m0_32  [key=2, style=dotted];
m0_113 -> m0_114  [key=0, style=solid];
m0_113 -> m0_130  [key=2, style=dotted];
m0_114 -> m0_32  [key=2, style=dotted];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> m0_128  [key=2, style=dotted];
m0_115 -> m0_32  [key=2, style=dotted];
m0_115 -> m0_116  [key=0, style=solid];
m0_115 -> m0_126  [key=0, style=solid];
m0_116 -> m0_32  [key=2, style=dotted];
m0_116 -> m0_117  [key=0, style=solid];
m0_112 -> m0_113  [key=0, style=solid];
m0_112 -> m0_114  [color=darkseagreen4, key=1, label=newContext, style=dashed];
m0_112 -> m0_115  [color=darkseagreen4, key=1, label=c2, style=dashed];
m0_112 -> m0_116  [color=darkseagreen4, key=1, label=c2, style=dashed];
m0_112 -> m0_30  [key=2, style=dotted];
m0_112 -> m0_0  [key=2, style=dotted];
m0_111 -> m0_112  [key=0, style=solid];
m0_111 -> m0_29  [key=2, style=dotted];
m0_107 -> m0_111  [color=darkseagreen4, key=1, label=c1, style=dashed];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_103  [key=2, style=dotted];
m0_107 -> m0_109  [color=darkseagreen4, key=1, label=c1, style=dashed];
m0_107 -> m0_110  [color=darkseagreen4, key=1, label=c1, style=dashed];
m0_110 -> m0_111  [key=0, style=solid];
m0_110 -> m0_100  [key=2, style=dotted];
m0_110 -> m0_88  [key=2, style=dotted];
m0_108 -> m0_100  [key=2, style=dotted];
m0_108 -> m0_109  [key=0, style=solid];
m0_108 -> m0_127  [key=2, style=dotted];
m0_109 -> m0_100  [key=2, style=dotted];
m0_109 -> m0_110  [key=0, style=solid];
m0_109 -> m0_126  [key=0, style=solid];
m0_117 -> m0_106  [color=blue, key=0, style=bold];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_83  [key=2, style=dotted];
m0_117 -> m0_120  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_534 -> m0_535  [key=0, style=solid];
m0_540 -> m0_32  [key=2, style=dotted];
m0_540 -> m0_541  [key=0, style=solid];
m0_539 -> m0_540  [key=0, style=solid];
m0_539 -> m0_29  [key=2, style=dotted];
m0_535 -> m0_539  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_535 -> m0_536  [key=0, style=solid];
m0_535 -> m0_542  [key=2, style=dotted];
m0_535 -> m0_537  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_535 -> m0_538  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_538 -> m0_539  [key=0, style=solid];
m0_536 -> m0_537  [key=0, style=solid];
m0_537 -> m0_538  [key=0, style=solid];
m0_541 -> m0_534  [color=blue, key=0, style=bold];
m0_144 -> m0_145  [key=0, style=solid];
m0_144 -> m0_156  [key=0, style=solid];
m0_144 -> m0_87  [key=2, style=dotted];
m0_145 -> m0_56  [key=2, style=dotted];
m0_145 -> m0_146  [key=0, style=solid];
m0_145 -> m0_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_146 -> m0_144  [color=blue, key=0, style=bold];
m0_146 -> m0_147  [key=0, style=solid];
m0_146 -> m0_150  [key=0, style=solid];
m0_404 -> m0_32  [key=2, style=dotted];
m0_404 -> m0_405  [key=0, style=solid];
m0_230 -> m0_283  [key=0, style=solid];
m0_230 -> m0_129  [key=2, style=dotted];
m0_230 -> m0_127  [key=2, style=dotted];
m0_130 -> m0_214  [key=0, style=solid];
m0_130 -> m0_215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader.ContainerContext", style=dashed];
m0_130 -> m0_112  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Bson.BsonReader.ContainerContext newContext", style=bold];
m0_130 -> m0_163  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Bson.BsonReader.ContainerContext newContext", style=bold];
m0_130 -> m0_233  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Bson.BsonReader.ContainerContext newContext", style=bold];
m0_130 -> m0_238  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Bson.BsonReader.ContainerContext newContext", style=bold];
m0_130 -> m0_128  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=2, style=dotted];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_42 -> m0_11  [key=2, style=dotted];
m0_42 -> m0_43  [key=0, style=solid];
m0_176 -> m0_177  [key=0, style=solid];
m0_176 -> m0_179  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_176 -> m0_180  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_176 -> m0_181  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_176 -> m0_187  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_176 -> m0_192  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_176 -> m0_193  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_299 -> m0_300  [key=0, style=solid];
m0_299 -> m0_327  [key=2, style=dotted];
m0_301 -> m0_32  [key=2, style=dotted];
m0_301 -> m0_302  [key=0, style=solid];
m0_301 -> m0_308  [color=darkseagreen4, key=1, label=totalBytesRead, style=dashed];
m0_301 -> m0_76  [color=darkorchid, key=3, label="Local variable int totalBytesRead", style=bold];
m0_301 -> m0_307  [color=darkorchid, key=3, label="Local variable int totalBytesRead", style=bold];
m0_302 -> m0_32  [key=2, style=dotted];
m0_302 -> m0_303  [key=0, style=solid];
m0_302 -> m0_307  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_302 -> m0_76  [color=darkorchid, key=3, label="Local variable int offset", style=bold];
m0_303 -> m0_32  [key=2, style=dotted];
m0_303 -> m0_304  [key=0, style=solid];
m0_303 -> m0_305  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_303 -> m0_306  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_303 -> m0_307  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_303 -> m0_309  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_303 -> m0_313  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_303 -> m0_321  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_303 -> m0_302  [color=darkorchid, key=3, label="Local variable int count", style=bold];
m0_304 -> m0_32  [key=2, style=dotted];
m0_304 -> m0_305  [key=0, style=solid];
m0_300 -> m0_301  [key=0, style=solid];
m0_300 -> m0_302  [color=darkseagreen4, key=1, label=list, style=dashed];
m0_300 -> m0_303  [color=darkseagreen4, key=1, label=list, style=dashed];
m0_300 -> m0_304  [color=darkseagreen4, key=1, label=list, style=dashed];
m0_300 -> m0_30  [key=2, style=dotted];
m0_300 -> m0_309  [color=darkseagreen4, key=1, label=builder, style=dashed];
m0_300 -> m0_315  [color=darkseagreen4, key=1, label=builder, style=dashed];
m0_300 -> m0_317  [color=darkseagreen4, key=1, label=builder, style=dashed];
m0_300 -> m0_323  [color=darkseagreen4, key=1, label=builder, style=dashed];
m0_300 -> m0_300  [color=darkorchid, key=3, label="Local variable System.Text.StringBuilder builder", style=bold];
m0_305 -> m0_299  [color=blue, key=0, style=bold];
m0_305 -> m0_306  [key=0, style=solid];
m0_305 -> m0_307  [key=0, style=solid];
m0_305 -> m0_221  [key=2, style=dotted];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_43  [color=darkseagreen4, key=1, label=c1, style=dashed];
m0_39 -> m0_41  [color=darkseagreen4, key=1, label=c1, style=dashed];
m0_39 -> m0_42  [color=darkseagreen4, key=1, label=c1, style=dashed];
m0_39 -> m0_35  [key=2, style=dotted];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_42  [key=2, style=dotted];
m0_40 -> m0_11  [key=2, style=dotted];
m0_41 -> m0_39  [color=blue, key=0, style=bold];
m0_41 -> m0_11  [key=2, style=dotted];
m0_41 -> m0_42  [key=0, style=solid];
m0_832 -> m0_833  [key=0, style=solid];
m0_833 -> m0_837  [key=2, style=dotted];
m0_833 -> m0_834  [key=0, style=solid];
m0_835 -> m0_56  [key=2, style=dotted];
m0_835 -> m0_836  [key=0, style=solid];
m0_835 -> m0_838  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_834 -> m0_29  [key=2, style=dotted];
m0_834 -> m0_839  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_834 -> m0_835  [key=0, style=solid];
m0_836 -> m0_832  [color=blue, key=0, style=bold];
m0_347 -> m0_348  [key=0, style=solid];
m0_347 -> m0_349  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_347 -> m0_353  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_347 -> m0_76  [color=darkorchid, key=3, label="Local variable int offset", style=bold];
m0_348 -> m0_217  [key=2, style=dotted];
m0_348 -> m0_349  [key=0, style=solid];
m0_349 -> m0_347  [color=blue, key=0, style=bold];
m0_349 -> m0_350  [key=0, style=solid];
m0_349 -> m0_369  [key=2, style=dotted];
m0_349 -> m0_352  [color=darkseagreen4, key=1, label=byteCount, style=dashed];
m0_349 -> m0_353  [color=darkseagreen4, key=1, label=byteCount, style=dashed];
m0_211 -> m0_212  [key=0, style=solid];
m0_212 -> m0_7  [key=2, style=dotted];
m0_212 -> m0_213  [key=0, style=solid];
m0_212 -> m0_206  [color=blue, key=0, style=bold];
m0_128 -> m0_129  [key=0, style=solid];
m0_128 -> m0_405  [key=0, style=solid];
m0_400 -> m0_401  [key=0, style=solid];
m0_400 -> m0_166  [key=2, style=dotted];
m0_400 -> m0_402  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_178 -> m0_203  [key=0, style=solid];
m0_429 -> m0_430  [key=0, style=solid];
m0_431 -> m0_32  [key=2, style=dotted];
m0_431 -> m0_432  [key=0, style=solid];
m0_432 -> m0_32  [key=2, style=dotted];
m0_432 -> m0_433  [key=0, style=solid];
m0_430 -> m0_431  [key=0, style=solid];
m0_430 -> m0_432  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m0_430 -> m0_30  [key=2, style=dotted];
m0_433 -> m0_429  [color=blue, key=0, style=bold];
m0_277 -> m0_278  [key=0, style=solid];
m0_16 -> m0_17  [key=0, style=solid];
m0_255 -> m0_256  [key=0, style=solid];
m0_255 -> m0_258  [key=0, style=solid];
m0_255 -> m0_260  [key=0, style=solid];
m0_762 -> m0_763  [key=0, style=solid];
m0_767 -> m0_32  [key=2, style=dotted];
m0_767 -> m0_768  [key=0, style=solid];
m0_771 -> m0_32  [key=2, style=dotted];
m0_771 -> m0_772  [key=0, style=solid];
m0_775 -> m0_32  [key=2, style=dotted];
m0_775 -> m0_776  [key=0, style=solid];
m0_766 -> m0_767  [key=0, style=solid];
m0_766 -> m0_29  [key=2, style=dotted];
m0_768 -> m0_777  [key=2, style=dotted];
m0_768 -> m0_769  [key=0, style=solid];
m0_768 -> m0_770  [color=darkseagreen4, key=1, label=foo2, style=dashed];
m0_770 -> m0_771  [key=0, style=solid];
m0_770 -> m0_29  [key=2, style=dotted];
m0_772 -> m0_773  [key=0, style=solid];
m0_772 -> m0_781  [key=2, style=dotted];
m0_772 -> m0_774  [color=darkseagreen4, key=1, label=foo3, style=dashed];
m0_774 -> m0_775  [key=0, style=solid];
m0_774 -> m0_29  [key=2, style=dotted];
m0_764 -> m0_777  [key=2, style=dotted];
m0_764 -> m0_766  [color=darkseagreen4, key=1, label=foo1, style=dashed];
m0_764 -> m0_765  [key=0, style=solid];
m0_765 -> m0_766  [key=0, style=solid];
m0_765 -> m0_778  [key=2, style=dotted];
m0_765 -> m0_779  [key=2, style=dotted];
m0_769 -> m0_770  [key=0, style=solid];
m0_769 -> m0_780  [key=2, style=dotted];
m0_769 -> m0_779  [key=2, style=dotted];
m0_773 -> m0_774  [key=0, style=solid];
m0_773 -> m0_780  [key=2, style=dotted];
m0_773 -> m0_779  [key=2, style=dotted];
m0_763 -> m0_764  [key=0, style=solid];
m0_776 -> m0_762  [color=blue, key=0, style=bold];
m0_706 -> m0_707  [key=0, style=solid];
m0_709 -> m0_32  [key=2, style=dotted];
m0_709 -> m0_710  [key=0, style=solid];
m0_710 -> m0_32  [key=2, style=dotted];
m0_710 -> m0_711  [key=0, style=solid];
m0_711 -> m0_32  [key=2, style=dotted];
m0_711 -> m0_712  [key=0, style=solid];
m0_712 -> m0_32  [key=2, style=dotted];
m0_712 -> m0_713  [key=0, style=solid];
m0_714 -> m0_32  [key=2, style=dotted];
m0_714 -> m0_715  [key=0, style=solid];
m0_716 -> m0_32  [key=2, style=dotted];
m0_716 -> m0_717  [key=0, style=solid];
m0_717 -> m0_32  [key=2, style=dotted];
m0_717 -> m0_718  [key=0, style=solid];
m0_708 -> m0_709  [key=0, style=solid];
m0_708 -> m0_710  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_708 -> m0_711  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_708 -> m0_712  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_708 -> m0_714  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_708 -> m0_716  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_708 -> m0_717  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_708 -> m0_30  [key=2, style=dotted];
m0_708 -> m0_713  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_708 -> m0_715  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_713 -> m0_714  [key=0, style=solid];
m0_713 -> m0_313  [key=2, style=dotted];
m0_715 -> m0_716  [key=0, style=solid];
m0_715 -> m0_313  [key=2, style=dotted];
m0_707 -> m0_708  [key=0, style=solid];
m0_707 -> m0_707  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m0_718 -> m0_706  [color=blue, key=0, style=bold];
m0_419 -> m0_420  [key=0, style=solid];
m0_419 -> m0_207  [key=2, style=dotted];
m0_846 -> m0_847  [key=0, style=solid];
m0_847 -> m0_848  [key=0, style=solid];
m0_847 -> m0_217  [key=2, style=dotted];
m0_848 -> m0_846  [color=blue, key=0, style=bold];
m0_206 -> m0_208  [key=0, style=solid];
m0_206 -> m0_194  [color=blue, key=0, style=bold];
m0_209 -> m0_210  [key=0, style=solid];
m0_209 -> m0_211  [key=0, style=solid];
m0_354 -> m0_355  [key=0, style=solid];
m0_354 -> m0_357  [key=0, style=solid];
m0_354 -> m0_3  [key=2, style=dotted];
m0_343 -> m0_368  [key=0, style=solid];
m0_358 -> m0_359  [key=0, style=solid];
m0_358 -> m0_360  [key=0, style=solid];
m0_358 -> m0_353  [color=blue, key=0, style=bold];
m0_352 -> m0_353  [key=0, style=solid];
m0_352 -> m0_352  [color=darkseagreen4, key=1, label=totalBytesRead, style=dashed];
m0_352 -> m0_366  [color=darkseagreen4, key=1, label=totalBytesRead, style=dashed];
m0_352 -> m0_350  [color=blue, key=0, style=bold];
m0_353 -> m0_354  [key=0, style=solid];
m0_353 -> m0_353  [color=darkseagreen4, key=1, label=byteCount, style=dashed];
m0_353 -> m0_355  [color=darkseagreen4, key=1, label=byteCount, style=dashed];
m0_353 -> m0_357  [color=darkseagreen4, key=1, label=byteCount, style=dashed];
m0_353 -> m0_362  [color=darkseagreen4, key=1, label=byteCount, style=dashed];
m0_353 -> m0_363  [color=darkseagreen4, key=1, label=byteCount, style=dashed];
m0_350 -> m0_351  [key=0, style=solid];
m0_350 -> m0_352  [key=0, style=solid];
m0_351 -> m0_368  [key=0, style=solid];
m0_351 -> d370  [key=2, style=dotted];
m0_351 -> m0_217  [key=2, style=dotted];
m0_351 -> m0_352  [key=0, style=solid];
m0_355 -> m0_356  [key=0, style=solid];
m0_355 -> m0_328  [key=2, style=dotted];
m0_355 -> m0_344  [key=2, style=dotted];
m0_357 -> m0_358  [key=0, style=solid];
m0_357 -> m0_330  [key=2, style=dotted];
m0_357 -> m0_360  [color=darkseagreen4, key=1, label=lastFullCharStop, style=dashed];
m0_357 -> m0_362  [color=darkseagreen4, key=1, label=lastFullCharStop, style=dashed];
m0_357 -> m0_363  [color=darkseagreen4, key=1, label=lastFullCharStop, style=dashed];
m0_357 -> m0_364  [color=darkseagreen4, key=1, label=lastFullCharStop, style=dashed];
m0_357 -> m0_181  [key=2, style=dotted];
m0_356 -> m0_368  [key=0, style=solid];
m0_356 -> m0_329  [key=2, style=dotted];
m0_356 -> m0_357  [key=0, style=solid];
m0_356 -> m0_166  [key=2, style=dotted];
m0_86 -> m0_17  [color=darkorchid, key=3, label="Field variable System.IO.BinaryReader _reader", style=bold];
m0_177 -> m0_178  [key=0, style=solid];
m0_177 -> m0_179  [key=0, style=solid];
m0_95 -> m0_32  [key=2, style=dotted];
m0_95 -> m0_96  [key=0, style=solid];
m0_96 -> m0_32  [key=2, style=dotted];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_101  [key=0, style=solid];
m0_96 -> m0_106  [key=0, style=solid];
m0_96 -> m0_116  [key=0, style=solid];
m0_96 -> m0_121  [key=0, style=solid];
m0_96 -> m0_125  [key=0, style=solid];
m0_97 -> m0_32  [key=2, style=dotted];
m0_97 -> m0_98  [key=0, style=solid];
m0_98 -> m0_32  [key=2, style=dotted];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_127  [key=2, style=dotted];
m0_99 -> m0_88  [color=blue, key=0, style=bold];
m0_99 -> m0_100  [key=0, style=solid];
m0_221 -> m0_222  [key=0, style=solid];
m0_224 -> m0_32  [key=2, style=dotted];
m0_224 -> m0_225  [key=0, style=solid];
m0_224 -> m0_229  [key=2, style=dotted];
m0_224 -> m0_284  [key=2, style=dotted];
m0_224 -> m0_226  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_224 -> m0_227  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_225 -> m0_32  [key=2, style=dotted];
m0_225 -> m0_226  [key=0, style=solid];
m0_225 -> m0_230  [key=2, style=dotted];
m0_225 -> m0_227  [key=0, style=solid];
m0_226 -> m0_32  [key=2, style=dotted];
m0_226 -> m0_227  [key=0, style=solid];
m0_226 -> m0_230  [key=2, style=dotted];
m0_226 -> m0_283  [key=0, style=solid];
m0_226 -> m0_285  [key=2, style=dotted];
m0_226 -> m0_127  [key=2, style=dotted];
m0_227 -> m0_32  [key=2, style=dotted];
m0_227 -> m0_228  [key=0, style=solid];
m0_227 -> m0_230  [key=2, style=dotted];
m0_227 -> m0_283  [key=0, style=solid];
m0_227 -> m0_127  [key=2, style=dotted];
m0_223 -> m0_224  [key=0, style=solid];
m0_223 -> m0_225  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_223 -> m0_226  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_223 -> m0_227  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_223 -> m0_30  [key=2, style=dotted];
m0_222 -> m0_223  [key=0, style=solid];
m0_222 -> m0_222  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m0_222 -> m0_228  [key=0, style=solid];
m0_222 -> m0_231  [key=0, style=solid];
m0_222 -> m0_236  [key=0, style=solid];
m0_222 -> m0_241  [key=0, style=solid];
m0_222 -> m0_243  [key=0, style=solid];
m0_222 -> m0_245  [key=0, style=solid];
m0_222 -> m0_248  [key=0, style=solid];
m0_222 -> m0_251  [key=0, style=solid];
m0_222 -> m0_262  [key=0, style=solid];
m0_222 -> m0_264  [key=0, style=solid];
m0_222 -> m0_269  [key=0, style=solid];
m0_222 -> m0_272  [key=0, style=solid];
m0_222 -> m0_274  [key=0, style=solid];
m0_222 -> m0_277  [key=0, style=solid];
m0_222 -> m0_279  [key=0, style=solid];
m0_222 -> m0_282  [key=0, style=solid];
m0_228 -> m0_221  [color=blue, key=0, style=bold];
m0_228 -> m0_229  [key=0, style=solid];
m0_564 -> m0_565  [key=0, style=solid];
m0_574 -> m0_32  [key=2, style=dotted];
m0_574 -> m0_575  [key=0, style=solid];
m0_567 -> m0_32  [key=2, style=dotted];
m0_567 -> m0_568  [key=0, style=solid];
m0_568 -> m0_32  [key=2, style=dotted];
m0_568 -> m0_569  [key=0, style=solid];
m0_569 -> m0_32  [key=2, style=dotted];
m0_569 -> m0_570  [key=0, style=solid];
m0_569 -> m0_563  [key=2, style=dotted];
m0_570 -> m0_32  [key=2, style=dotted];
m0_570 -> m0_571  [key=0, style=solid];
m0_570 -> m0_563  [key=2, style=dotted];
m0_571 -> m0_32  [key=2, style=dotted];
m0_571 -> m0_572  [key=0, style=solid];
m0_572 -> m0_32  [key=2, style=dotted];
m0_572 -> m0_573  [key=0, style=solid];
m0_565 -> m0_574  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_565 -> m0_565  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m0_565 -> m0_566  [key=0, style=solid];
m0_573 -> m0_574  [key=0, style=solid];
m0_573 -> m0_29  [key=2, style=dotted];
m0_566 -> m0_567  [key=0, style=solid];
m0_566 -> m0_568  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_566 -> m0_569  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_566 -> m0_570  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_566 -> m0_571  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_566 -> m0_572  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_566 -> m0_30  [key=2, style=dotted];
m0_566 -> m0_573  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_575 -> m0_564  [color=blue, key=0, style=bold];
m0_31 -> m0_32  [key=0, style=solid];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_34  [key=2, style=dotted];
m0_777 -> m0_883  [key=0, style=solid];
m0_883 -> m0_3  [key=2, style=dotted];
m0_883 -> m0_884  [key=0, style=solid];
m0_884 -> m0_777  [color=blue, key=0, style=bold];
m0_412 -> m0_414  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_412 -> m0_413  [key=0, style=solid];
m0_412 -> m0_419  [key=2, style=dotted];
m0_412 -> m0_415  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_412 -> m0_416  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_412 -> m0_417  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_292 -> m0_293  [key=0, style=solid];
m0_328 -> m0_329  [key=0, style=solid];
m0_328 -> m0_330  [key=2, style=dotted];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_85  [color=blue, key=0, style=bold];
m0_417 -> m0_32  [key=2, style=dotted];
m0_417 -> m0_418  [key=0, style=solid];
m0_418 -> m0_411  [color=blue, key=0, style=bold];
m0_418 -> m0_207  [color=blue, key=0, style=bold];
m0_686 -> m0_687  [key=0, style=solid];
m0_691 -> m0_692  [color=green, key=0, style=solid];
m0_691 -> m0_181  [color=green, key=2, style=dotted];
m0_690 -> m0_691  [color=green, key=0, style=solid];
m0_690 -> m0_254  [key=2, style=dotted];
m0_690 -> m0_685  [key=2, style=dotted];
m0_690 -> m0_692  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_692 -> m0_693  [key=0, style=solid];
m0_692 -> m0_254  [key=2, style=dotted];
m0_692 -> m0_696  [key=2, style=dotted];
m0_692 -> m0_694  [color=darkseagreen4, key=1, label=values2, style=dashed];
m0_689 -> m0_690  [key=0, style=solid];
m0_689 -> m0_3  [key=2, style=dotted];
m0_693 -> m0_694  [key=0, style=solid];
m0_693 -> m0_32  [key=2, style=dotted];
m0_694 -> m0_695  [key=0, style=solid];
m0_694 -> m0_32  [key=2, style=dotted];
m0_688 -> m0_689  [key=0, style=solid];
m0_687 -> m0_688  [key=0, style=solid];
m0_687 -> m0_684  [key=2, style=dotted];
m0_695 -> m0_686  [color=blue, key=0, style=bold];
m0_422 -> m0_423  [key=0, style=solid];
m0_425 -> m0_254  [key=2, style=dotted];
m0_425 -> m0_3  [key=2, style=dotted];
m0_425 -> m0_426  [key=0, style=solid];
m0_425 -> m0_428  [key=2, style=dotted];
m0_425 -> m0_421  [key=2, style=dotted];
m0_423 -> m0_425  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_423 -> m0_424  [key=0, style=solid];
m0_423 -> m0_419  [key=2, style=dotted];
m0_423 -> m0_426  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_423 -> m0_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader.ContainerContext", style=dashed];
m0_424 -> m0_425  [key=0, style=solid];
m0_424 -> m0_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_32  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_36  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_40  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_48  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_56  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_57  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_63  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_73  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_76  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_80  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_91  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_92  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_96  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_98  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_99  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_102  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_103  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_104  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_107  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_110  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_111  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_113  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_114  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_117  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_118  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_119  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_122  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_123  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_132  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_134  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_135  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_138  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_139  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_141  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_142  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_144  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_146  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_147  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_148  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_150  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_151  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_152  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_154  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_155  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_158  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_160  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_161  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_162  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_164  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_165  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_171  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_176  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_182  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_183  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_185  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_188  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_189  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_190  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_191  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_192  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_194  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_196  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_208  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_209  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_210  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_211  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_214  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_218  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_224  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_225  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_226  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_232  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_239  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_244  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_247  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_249  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_250  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_252  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_255  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_261  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_263  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_265  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_268  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_270  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_271  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_273  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_275  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_276  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_278  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_281  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_293  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_294  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_295  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_296  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_297  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_305  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_306  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_310  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_311  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_312  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_313  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_314  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_317  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_320  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_322  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_337  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_344  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_349  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_356  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_357  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_360  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_361  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_394  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_395  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_396  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_398  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_401  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_402  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_405  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_406  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_409  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_410  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_413  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_414  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_417  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_419  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_420  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_426 -> m0_32  [key=2, style=dotted];
m0_426 -> m0_427  [key=0, style=solid];
m0_427 -> m0_422  [color=blue, key=0, style=bold];
m0_179 -> m0_180  [key=0, style=solid];
m0_179 -> m0_187  [color=darkseagreen4, key=1, label=lengthMinusEnd, style=dashed];
m0_136 -> m0_137  [key=0, style=solid];
m0_136 -> m0_156  [key=0, style=solid];
m0_139 -> m0_32  [key=2, style=dotted];
m0_139 -> m0_140  [key=0, style=solid];
m0_139 -> m0_129  [key=2, style=dotted];
m0_139 -> m0_127  [key=2, style=dotted];
m0_140 -> m0_32  [key=2, style=dotted];
m0_140 -> m0_141  [key=0, style=solid];
m0_140 -> m0_156  [key=0, style=solid];
m0_141 -> m0_32  [key=2, style=dotted];
m0_141 -> m0_142  [key=0, style=solid];
m0_141 -> m0_144  [key=0, style=solid];
m0_142 -> m0_32  [key=2, style=dotted];
m0_142 -> m0_143  [key=0, style=solid];
m0_142 -> m0_157  [key=2, style=dotted];
m0_142 -> m0_127  [key=2, style=dotted];
m0_138 -> m0_139  [key=0, style=solid];
m0_138 -> m0_140  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_138 -> m0_141  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_138 -> m0_142  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_138 -> m0_30  [key=2, style=dotted];
m0_137 -> m0_138  [key=0, style=solid];
m0_137 -> m0_137  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m0_143 -> m0_136  [color=blue, key=0, style=bold];
m0_143 -> m0_156  [key=0, style=solid];
m0_38 -> m0_39  [key=0, style=solid];
m0_47 -> m0_32  [key=2, style=dotted];
m0_47 -> m0_48  [key=0, style=solid];
m0_48 -> m0_32  [key=2, style=dotted];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_50  [key=2, style=dotted];
m0_49 -> m0_32  [key=2, style=dotted];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_47  [color=blue, key=0, style=bold];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_14  [key=2, style=dotted];
m0_8 -> m0_18  [color=darkorchid, key=3, label="Parameter variable int bar", style=bold];
m0_8 -> m0_19  [color=darkorchid, key=3, label="Parameter variable int bar", style=bold];
m0_8 -> m0_20  [color=darkorchid, key=3, label="Parameter variable int bar", style=bold];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_15  [key=2, style=dotted];
m0_9 -> m0_11  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_12 -> m0_13  [key=0, style=solid];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_16  [key=2, style=dotted];
m0_10 -> m0_8  [color=blue, key=0, style=bold];
m0_13 -> m0_7  [color=blue, key=0, style=bold];
m0_742 -> m0_743  [key=0, style=solid];
m0_750 -> m0_32  [key=2, style=dotted];
m0_750 -> m0_751  [key=0, style=solid];
m0_748 -> m0_32  [key=2, style=dotted];
m0_748 -> m0_749  [key=0, style=solid];
m0_748 -> m0_757  [key=2, style=dotted];
m0_748 -> m0_758  [key=2, style=dotted];
m0_743 -> m0_750  [color=darkseagreen4, key=1, label=collection, style=dashed];
m0_743 -> m0_744  [key=0, style=solid];
m0_743 -> m0_752  [key=2, style=dotted];
m0_743 -> m0_753  [key=2, style=dotted];
m0_743 -> m0_747  [color=darkseagreen4, key=1, label=collection, style=dashed];
m0_749 -> m0_750  [key=0, style=solid];
m0_749 -> m0_759  [key=2, style=dotted];
m0_749 -> m0_760  [key=2, style=dotted];
m0_749 -> m0_757  [key=2, style=dotted];
m0_749 -> m0_758  [key=2, style=dotted];
m0_749 -> m0_761  [key=2, style=dotted];
m0_747 -> m0_748  [key=0, style=solid];
m0_747 -> m0_756  [key=2, style=dotted];
m0_746 -> m0_748  [color=darkseagreen4, key=1, label=sw, style=dashed];
m0_746 -> m0_749  [color=darkseagreen4, key=1, label=sw, style=dashed];
m0_746 -> m0_747  [key=0, style=solid];
m0_746 -> m0_755  [key=2, style=dotted];
m0_744 -> m0_749  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m0_744 -> m0_747  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m0_744 -> m0_745  [key=0, style=solid];
m0_744 -> m0_754  [key=2, style=dotted];
m0_745 -> m0_746  [key=0, style=solid];
m0_751 -> m0_742  [color=blue, key=0, style=bold];
m0_334 -> m0_335  [key=0, style=solid];
m0_207 -> m0_417  [key=0, style=solid];
m0_207 -> m0_110  [color=darkorchid, key=3, label="Parameter variable int count", style=bold];
m0_207 -> m0_335  [color=darkorchid, key=3, label="Parameter variable int count", style=bold];
m0_207 -> m0_226  [color=darkorchid, key=3, label="Parameter variable int count", style=bold];
m0_207 -> m0_98  [color=darkorchid, key=3, label="Parameter variable int count", style=bold];
m0_207 -> m0_157  [color=darkorchid, key=3, label="Parameter variable int count", style=bold];
m0_56 -> m0_57  [key=0, style=solid];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_59  [key=2, style=dotted];
m0_58 -> m0_55  [color=blue, key=0, style=bold];
m0_58 -> m0_29  [key=2, style=dotted];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_51  [key=2, style=dotted];
m0_624 -> m0_625  [key=0, style=solid];
m0_630 -> m0_32  [key=2, style=dotted];
m0_630 -> m0_631  [key=0, style=solid];
m0_629 -> m0_630  [key=0, style=solid];
m0_629 -> m0_29  [key=2, style=dotted];
m0_625 -> m0_629  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_625 -> m0_626  [key=0, style=solid];
m0_625 -> m0_542  [key=2, style=dotted];
m0_625 -> m0_627  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_625 -> m0_628  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_628 -> m0_629  [key=0, style=solid];
m0_626 -> m0_627  [key=0, style=solid];
m0_627 -> m0_628  [key=0, style=solid];
m0_631 -> m0_624  [color=blue, key=0, style=bold];
m0_552 -> m0_553  [key=0, style=solid];
m0_553 -> m0_549  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m0_553 -> m0_554  [key=0, style=solid];
m0_555 -> m0_32  [key=2, style=dotted];
m0_555 -> m0_556  [key=0, style=solid];
m0_556 -> m0_32  [key=2, style=dotted];
m0_556 -> m0_557  [key=0, style=solid];
m0_557 -> m0_32  [key=2, style=dotted];
m0_557 -> m0_558  [key=0, style=solid];
m0_557 -> m0_563  [key=2, style=dotted];
m0_558 -> m0_32  [key=2, style=dotted];
m0_558 -> m0_559  [key=0, style=solid];
m0_558 -> m0_563  [key=2, style=dotted];
m0_559 -> m0_32  [key=2, style=dotted];
m0_559 -> m0_560  [key=0, style=solid];
m0_559 -> m0_563  [key=2, style=dotted];
m0_560 -> m0_32  [key=2, style=dotted];
m0_560 -> m0_561  [key=0, style=solid];
m0_561 -> m0_32  [key=2, style=dotted];
m0_561 -> m0_562  [key=0, style=solid];
m0_554 -> m0_555  [key=0, style=solid];
m0_554 -> m0_556  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_554 -> m0_557  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_554 -> m0_558  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_554 -> m0_559  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_554 -> m0_560  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_554 -> m0_561  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_554 -> m0_30  [key=2, style=dotted];
m0_562 -> m0_552  [color=blue, key=0, style=bold];
m0_448 -> m0_449  [key=0, style=solid];
m0_452 -> m0_181  [key=2, style=dotted];
m0_452 -> m0_453  [key=0, style=solid];
m0_451 -> m0_452  [key=0, style=solid];
m0_451 -> m0_166  [key=2, style=dotted];
m0_451 -> m0_453  [color=darkseagreen4, key=1, label=originalJson, style=dashed];
m0_453 -> m0_454  [key=0, style=solid];
m0_453 -> m0_30  [key=2, style=dotted];
m0_453 -> m0_455  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m0_453 -> m0_456  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m0_454 -> m0_32  [key=2, style=dotted];
m0_454 -> m0_455  [key=0, style=solid];
m0_455 -> m0_32  [key=2, style=dotted];
m0_455 -> m0_456  [key=0, style=solid];
m0_456 -> m0_32  [key=2, style=dotted];
m0_456 -> m0_457  [key=0, style=solid];
m0_450 -> m0_451  [key=0, style=solid];
m0_450 -> m0_459  [key=2, style=dotted];
m0_450 -> m0_460  [key=2, style=dotted];
m0_449 -> m0_450  [key=0, style=solid];
m0_449 -> m0_343  [key=2, style=dotted];
m0_449 -> m0_458  [key=2, style=dotted];
m0_457 -> m0_448  [color=blue, key=0, style=bold];
m0_83 -> m0_158  [key=0, style=solid];
m0_83 -> m0_78  [color=darkorchid, key=3, label="method methodReturn bool ReadNormal", style=bold];
m0_83 -> m0_77  [color=darkorchid, key=3, label="method methodReturn bool ReadNormal", style=bold];
m0_167 -> m0_168  [key=0, style=solid];
m0_170 -> m0_171  [key=0, style=solid];
m0_170 -> m0_173  [key=0, style=solid];
m0_170 -> m0_178  [key=2, style=dotted];
m0_173 -> m0_174  [key=0, style=solid];
m0_173 -> m0_166  [key=2, style=dotted];
m0_197 -> m0_202  [key=0, style=solid];
m0_197 -> m0_181  [key=2, style=dotted];
m0_197 -> m0_198  [key=0, style=solid];
m0_198 -> m0_202  [key=0, style=solid];
m0_198 -> m0_199  [key=0, style=solid];
m0_198 -> m0_208  [key=2, style=dotted];
m0_198 -> m0_200  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_199 -> m0_202  [key=0, style=solid];
m0_199 -> m0_201  [color=darkseagreen4, key=1, label=myOtherResult, style=dashed];
m0_199 -> m0_203  [color=darkseagreen4, key=1, label=myOtherResult, style=dashed];
m0_199 -> m0_204  [color=darkseagreen4, key=1, label=myOtherResult, style=dashed];
m0_199 -> m0_205  [color=darkseagreen4, key=1, label=myOtherResult, style=dashed];
m0_199 -> m0_200  [key=0, style=solid];
m0_199 -> m0_30  [key=2, style=dotted];
m0_200 -> m0_202  [key=0, style=solid];
m0_200 -> m0_201  [key=0, style=solid];
m0_200 -> m0_209  [key=2, style=dotted];
m0_200 -> m0_210  [key=2, style=dotted];
m0_201 -> m0_203  [key=0, style=solid];
m0_201 -> m0_131  [key=2, style=dotted];
m0_201 -> m0_32  [key=2, style=dotted];
m0_201 -> m0_202  [key=0, style=solid];
m0_166 -> m0_203  [key=0, style=solid];
m0_168 -> m0_169  [key=0, style=solid];
m0_168 -> m0_173  [color=darkseagreen4, key=1, label=onebasedArray, style=dashed];
m0_168 -> m0_176  [key=2, style=dotted];
m0_168 -> m0_170  [color=darkseagreen4, key=1, label=onebasedArray, style=dashed];
m0_168 -> m0_171  [color=darkseagreen4, key=1, label=onebasedArray, style=dashed];
m0_169 -> m0_203  [key=0, style=solid];
m0_169 -> m0_170  [key=0, style=solid];
m0_169 -> m0_177  [key=2, style=dotted];
m0_169 -> m0_171  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_169 -> m0_172  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_171 -> m0_172  [key=0, style=solid];
m0_171 -> m0_204  [key=2, style=dotted];
m0_171 -> m0_179  [key=2, style=dotted];
m0_171 -> m0_180  [key=2, style=dotted];
m0_172 -> m0_203  [key=0, style=solid];
m0_172 -> m0_170  [key=0, style=solid];
m0_172 -> m0_172  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_174 -> m0_175  [key=0, style=solid];
m0_174 -> m0_181  [key=2, style=dotted];
m0_175 -> m0_176  [key=0, style=solid];
m0_175 -> m0_167  [color=blue, key=0, style=bold];
m0_180 -> m0_181  [key=0, style=solid];
m0_180 -> m0_187  [key=0, style=solid];
m0_181 -> m0_182  [key=0, style=solid];
m0_181 -> m0_185  [key=0, style=solid];
m0_187 -> m0_188  [key=0, style=solid];
m0_187 -> m0_196  [key=0, style=solid];
m0_187 -> m0_178  [key=2, style=dotted];
m0_187 -> m0_190  [key=0, style=solid];
m0_192 -> m0_193  [key=0, style=solid];
m0_192 -> m0_207  [key=2, style=dotted];
m0_192 -> m0_181  [key=2, style=dotted];
m0_193 -> m0_194  [key=0, style=solid];
m0_193 -> m0_182  [color=blue, key=0, style=bold];
m0_182 -> m0_183  [key=0, style=solid];
m0_182 -> m0_24  [key=2, style=dotted];
m0_185 -> m0_186  [key=0, style=solid];
m0_185 -> m0_24  [key=2, style=dotted];
m0_185 -> m0_127  [key=2, style=dotted];
m0_185 -> m0_191  [key=0, style=solid];
m0_185 -> m0_178  [key=2, style=dotted];
m0_183 -> m0_184  [key=0, style=solid];
m0_183 -> m0_204  [key=2, style=dotted];
m0_183 -> m0_191  [color=darkseagreen4, key=1, label=onebasedArray, style=dashed];
m0_183 -> m0_176  [key=2, style=dotted];
m0_183 -> m0_185  [color=darkseagreen4, key=1, label=onebasedArray, style=dashed];
m0_183 -> m0_186  [color=darkseagreen4, key=1, label=onebasedArray, style=dashed];
m0_183 -> m0_187  [color=darkseagreen4, key=1, label=onebasedArray, style=dashed];
m0_183 -> m0_188  [color=darkseagreen4, key=1, label=onebasedArray, style=dashed];
m0_184 -> m0_203  [key=0, style=solid];
m0_184 -> m0_185  [key=0, style=solid];
m0_184 -> m0_177  [key=2, style=dotted];
m0_184 -> m0_188  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_184 -> m0_190  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_186 -> m0_203  [key=0, style=solid];
m0_186 -> m0_187  [key=0, style=solid];
m0_186 -> m0_177  [key=2, style=dotted];
m0_186 -> m0_188  [color=darkseagreen4, key=1, label=j, style=dashed];
m0_186 -> m0_189  [color=darkseagreen4, key=1, label=j, style=dashed];
m0_188 -> m0_189  [key=0, style=solid];
m0_188 -> m0_190  [key=0, style=solid];
m0_188 -> m0_205  [key=2, style=dotted];
m0_188 -> m0_180  [key=2, style=dotted];
m0_196 -> m0_203  [key=0, style=solid];
m0_196 -> m0_87  [key=2, style=dotted];
m0_196 -> m0_197  [key=0, style=solid];
m0_196 -> m0_166  [key=2, style=dotted];
m0_196 -> m0_199  [color=darkseagreen4, key=1, label=myOtherArrayAsString, style=dashed];
m0_189 -> m0_203  [key=0, style=solid];
m0_189 -> m0_87  [key=2, style=dotted];
m0_189 -> m0_187  [key=0, style=solid];
m0_189 -> m0_189  [color=darkseagreen4, key=1, label=j, style=dashed];
m0_190 -> m0_191  [key=0, style=solid];
m0_190 -> m0_206  [key=2, style=dotted];
m0_190 -> m0_185  [key=0, style=solid];
m0_190 -> m0_190  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_191 -> m0_192  [key=0, style=solid];
m0_191 -> m0_193  [key=0, style=solid];
m0_191 -> m0_166  [key=2, style=dotted];
m0_194 -> m0_195  [key=0, style=solid];
m0_194 -> m0_88  [key=2, style=dotted];
m0_195 -> m0_203  [key=0, style=solid];
m0_195 -> m0_196  [key=0, style=solid];
m0_195 -> m0_207  [key=2, style=dotted];
m0_202 -> m0_203  [key=0, style=solid];
m0_202 -> m0_32  [key=2, style=dotted];
m0_203 -> m0_83  [color=blue, key=0, style=bold];
m0_203 -> m0_32  [key=2, style=dotted];
m0_203 -> m0_204  [key=0, style=solid];
m0_153 -> m0_156  [key=0, style=solid];
m0_320 -> m0_321  [key=0, style=solid];
m0_320 -> m0_325  [key=0, style=solid];
m0_320 -> m0_333  [key=2, style=dotted];
m0_321 -> m0_322  [key=0, style=solid];
m0_321 -> m0_324  [key=0, style=solid];
m0_322 -> m0_320  [color=blue, key=0, style=bold];
m0_322 -> m0_323  [key=0, style=solid];
m0_322 -> m0_207  [key=2, style=dotted];
m0_495 -> m0_496  [key=0, style=solid];
m0_496 -> m0_3  [key=2, style=dotted];
m0_496 -> m0_497  [key=0, style=solid];
m0_497 -> m0_498  [key=0, style=solid];
m0_497 -> m0_343  [key=2, style=dotted];
m0_498 -> m0_499  [key=0, style=solid];
m0_499 -> m0_500  [key=0, style=solid];
m0_499 -> m0_507  [key=2, style=dotted];
m0_500 -> m0_343  [key=2, style=dotted];
m0_500 -> m0_501  [key=0, style=solid];
m0_500 -> m0_508  [key=2, style=dotted];
m0_501 -> m0_502  [key=0, style=solid];
m0_501 -> m0_507  [key=2, style=dotted];
m0_502 -> m0_503  [key=0, style=solid];
m0_502 -> m0_507  [key=2, style=dotted];
m0_503 -> m0_504  [key=0, style=solid];
m0_503 -> m0_507  [key=2, style=dotted];
m0_504 -> m0_343  [key=2, style=dotted];
m0_504 -> m0_505  [key=0, style=solid];
m0_504 -> m0_508  [key=2, style=dotted];
m0_505 -> m0_343  [key=2, style=dotted];
m0_505 -> m0_506  [key=0, style=solid];
m0_505 -> m0_508  [key=2, style=dotted];
m0_506 -> m0_495  [color=blue, key=0, style=bold];
m0_583 -> m0_584  [key=0, style=solid];
m0_585 -> m0_56  [key=2, style=dotted];
m0_585 -> m0_586  [key=0, style=solid];
m0_585 -> m0_587  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_584 -> m0_588  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_584 -> m0_585  [key=0, style=solid];
m0_584 -> m0_584  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m0_586 -> m0_583  [color=blue, key=0, style=bold];
m0_395 -> m0_396  [key=0, style=solid];
m0_401 -> m0_181  [key=2, style=dotted];
m0_401 -> m0_402  [key=0, style=solid];
m0_401 -> m0_207  [key=2, style=dotted];
m0_402 -> m0_403  [key=0, style=solid];
m0_402 -> m0_30  [key=2, style=dotted];
m0_402 -> m0_404  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_402 -> m0_405  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_402 -> m0_406  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_402 -> m0_407  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_397 -> m0_3  [key=2, style=dotted];
m0_397 -> m0_400  [color=darkseagreen4, key=1, label=list, style=dashed];
m0_397 -> m0_398  [key=0, style=solid];
m0_397 -> m0_399  [color=darkseagreen4, key=1, label=list, style=dashed];
m0_403 -> m0_32  [key=2, style=dotted];
m0_403 -> m0_404  [key=0, style=solid];
m0_403 -> m0_284  [color=blue, key=0, style=bold];
m0_405 -> m0_32  [key=2, style=dotted];
m0_405 -> m0_406  [key=0, style=solid];
m0_405 -> m0_207  [key=2, style=dotted];
m0_406 -> m0_32  [key=2, style=dotted];
m0_406 -> m0_407  [key=0, style=solid];
m0_406 -> m0_408  [key=2, style=dotted];
m0_407 -> m0_32  [key=2, style=dotted];
m0_407 -> m0_408  [key=0, style=solid];
m0_407 -> m0_128  [color=blue, key=0, style=bold];
m0_399 -> m0_400  [key=0, style=solid];
m0_399 -> m0_207  [key=2, style=dotted];
m0_399 -> m0_410  [key=2, style=dotted];
m0_399 -> m0_11  [key=2, style=dotted];
m0_399 -> m0_327  [color=blue, key=0, style=bold];
m0_396 -> m0_397  [key=0, style=solid];
m0_396 -> m0_399  [color=darkseagreen4, key=1, label=dateTime, style=dashed];
m0_396 -> m0_409  [key=2, style=dotted];
m0_396 -> m0_398  [color=darkseagreen4, key=1, label=dateTime, style=dashed];
m0_398 -> m0_399  [key=0, style=solid];
m0_398 -> m0_207  [key=2, style=dotted];
m0_398 -> m0_410  [key=2, style=dotted];
m0_398 -> m0_11  [key=2, style=dotted];
m0_264 -> m0_265  [key=0, style=solid];
m0_266 -> m0_32  [key=2, style=dotted];
m0_266 -> m0_267  [key=0, style=solid];
m0_266 -> m0_30  [key=2, style=dotted];
m0_267 -> m0_32  [key=2, style=dotted];
m0_267 -> m0_268  [key=0, style=solid];
m0_268 -> m0_32  [key=2, style=dotted];
m0_268 -> m0_269  [key=0, style=solid];
m0_268 -> m0_283  [key=0, style=solid];
m0_268 -> m0_127  [key=2, style=dotted];
m0_269 -> m0_32  [key=2, style=dotted];
m0_269 -> m0_270  [key=0, style=solid];
m0_265 -> m0_266  [key=0, style=solid];
m0_265 -> m0_267  [color=darkseagreen4, key=1, label=expression, style=dashed];
m0_265 -> m0_268  [color=darkseagreen4, key=1, label=list, style=dashed];
m0_265 -> m0_269  [color=darkseagreen4, key=1, label=list, style=dashed];
m0_265 -> m0_30  [key=2, style=dotted];
m0_270 -> m0_264  [color=blue, key=0, style=bold];
m0_270 -> m0_271  [key=0, style=solid];
m0_270 -> m0_88  [key=2, style=dotted];
m0_329 -> m0_327  [color=blue, key=0, style=bold];
m0_811 -> m0_812  [key=0, style=solid];
m0_815 -> m0_32  [key=2, style=dotted];
m0_815 -> m0_816  [key=0, style=solid];
m0_816 -> m0_32  [key=2, style=dotted];
m0_816 -> m0_817  [key=0, style=solid];
m0_813 -> m0_815  [color=darkseagreen4, key=1, label=products, style=dashed];
m0_813 -> m0_30  [key=2, style=dotted];
m0_813 -> m0_814  [key=0, style=solid];
m0_814 -> m0_815  [key=0, style=solid];
m0_814 -> m0_816  [color=darkseagreen4, key=1, label=p1, style=dashed];
m0_812 -> m0_813  [key=0, style=solid];
m0_812 -> m0_812  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m0_817 -> m0_811  [color=blue, key=0, style=bold];
m0_326 -> m0_30  [color=blue, key=0, style=bold];
m0_818 -> m0_819  [key=0, style=solid];
m0_821 -> m0_181  [key=2, style=dotted];
m0_821 -> m0_822  [key=0, style=solid];
m0_820 -> m0_821  [key=0, style=solid];
m0_820 -> m0_166  [key=2, style=dotted];
m0_819 -> m0_3  [key=2, style=dotted];
m0_819 -> m0_820  [key=0, style=solid];
m0_819 -> m0_823  [key=2, style=dotted];
m0_822 -> m0_818  [color=blue, key=0, style=bold];
m0_84 -> m0_132  [key=0, style=solid];
m0_84 -> m0_78  [color=darkorchid, key=3, label="method methodReturn bool ReadReference", style=bold];
m0_132 -> m0_133  [key=0, style=solid];
m0_132 -> m0_137  [key=0, style=solid];
m0_132 -> m0_145  [key=0, style=solid];
m0_132 -> m0_155  [key=0, style=solid];
m0_132 -> m0_29  [key=2, style=dotted];
m0_132 -> m0_126  [key=2, style=dotted];
m0_133 -> m0_134  [key=0, style=solid];
m0_133 -> m0_131  [color=blue, key=0, style=bold];
m0_134 -> m0_135  [key=0, style=solid];
m0_134 -> m0_127  [key=2, style=dotted];
m0_135 -> m0_136  [key=0, style=solid];
m0_147 -> m0_148  [key=0, style=solid];
m0_147 -> m0_127  [key=2, style=dotted];
m0_148 -> m0_149  [key=0, style=solid];
m0_148 -> m0_30  [key=2, style=dotted];
m0_149 -> m0_156  [key=0, style=solid];
m0_149 -> m0_147  [color=blue, key=0, style=bold];
m0_632 -> m0_633  [key=0, style=solid];
m0_641 -> m0_32  [key=2, style=dotted];
m0_641 -> m0_642  [key=0, style=solid];
m0_635 -> m0_32  [key=2, style=dotted];
m0_635 -> m0_636  [key=0, style=solid];
m0_636 -> m0_32  [key=2, style=dotted];
m0_636 -> m0_637  [key=0, style=solid];
m0_637 -> m0_32  [key=2, style=dotted];
m0_637 -> m0_638  [key=0, style=solid];
m0_637 -> m0_563  [key=2, style=dotted];
m0_638 -> m0_32  [key=2, style=dotted];
m0_638 -> m0_639  [key=0, style=solid];
m0_638 -> m0_563  [key=2, style=dotted];
m0_639 -> m0_32  [key=2, style=dotted];
m0_639 -> m0_640  [key=0, style=solid];
m0_639 -> m0_563  [key=2, style=dotted];
m0_633 -> m0_641  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_633 -> m0_633  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m0_633 -> m0_634  [key=0, style=solid];
m0_640 -> m0_641  [key=0, style=solid];
m0_640 -> m0_29  [key=2, style=dotted];
m0_634 -> m0_635  [key=0, style=solid];
m0_634 -> m0_636  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_634 -> m0_637  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_634 -> m0_638  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_634 -> m0_639  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_634 -> m0_30  [key=2, style=dotted];
m0_634 -> m0_640  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_642 -> m0_632  [color=blue, key=0, style=bold];
m0_327 -> m0_328  [key=0, style=solid];
m0_327 -> m0_394  [key=0, style=solid];
m0_30 -> m0_299  [key=0, style=solid];
m0_315 -> m0_316  [key=0, style=solid];
m0_315 -> m0_317  [key=0, style=solid];
m0_315 -> m0_318  [color=darkseagreen4, key=1, label=dic, style=dashed];
m0_315 -> m0_30  [key=2, style=dotted];
m0_317 -> m0_318  [key=0, style=solid];
m0_317 -> m0_332  [key=2, style=dotted];
m0_317 -> m0_32  [key=2, style=dotted];
m0_313 -> m0_314  [key=0, style=solid];
m0_313 -> m0_330  [key=2, style=dotted];
m0_313 -> m0_318  [color=darkseagreen4, key=1, label=lastFullCharStop, style=dashed];
m0_313 -> m0_319  [color=darkseagreen4, key=1, label=lastFullCharStop, style=dashed];
m0_313 -> m0_320  [color=darkseagreen4, key=1, label=lastFullCharStop, style=dashed];
m0_318 -> m0_319  [key=0, style=solid];
m0_318 -> m0_321  [key=0, style=solid];
m0_318 -> m0_32  [key=2, style=dotted];
m0_319 -> m0_320  [key=0, style=solid];
m0_319 -> m0_314  [color=blue, key=0, style=bold];
m0_314 -> m0_315  [key=0, style=solid];
m0_314 -> m0_328  [key=2, style=dotted];
m0_314 -> m0_317  [color=darkseagreen4, key=1, label=charCount, style=dashed];
m0_316 -> m0_317  [key=0, style=solid];
m0_316 -> m0_331  [key=2, style=dotted];
m0_316 -> m0_323  [color=darkseagreen4, key=1, label=builder, style=dashed];
m0_316 -> m0_32  [key=2, style=dotted];
m0_603 -> m0_604  [key=0, style=solid];
m0_605 -> m0_56  [key=2, style=dotted];
m0_605 -> m0_606  [key=0, style=solid];
m0_605 -> m0_607  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_604 -> m0_608  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_604 -> m0_605  [key=0, style=solid];
m0_604 -> m0_604  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m0_606 -> m0_603  [color=blue, key=0, style=bold];
m0_514 -> m0_515  [key=0, style=solid];
m0_517 -> m0_32  [key=2, style=dotted];
m0_517 -> m0_518  [key=0, style=solid];
m0_518 -> m0_32  [key=2, style=dotted];
m0_518 -> m0_519  [key=0, style=solid];
m0_519 -> m0_32  [key=2, style=dotted];
m0_519 -> m0_520  [key=0, style=solid];
m0_520 -> m0_32  [key=2, style=dotted];
m0_520 -> m0_521  [key=0, style=solid];
m0_521 -> m0_32  [key=2, style=dotted];
m0_521 -> m0_522  [key=0, style=solid];
m0_522 -> m0_32  [key=2, style=dotted];
m0_522 -> m0_523  [key=0, style=solid];
m0_523 -> m0_32  [key=2, style=dotted];
m0_523 -> m0_524  [key=0, style=solid];
m0_516 -> m0_517  [key=0, style=solid];
m0_516 -> m0_518  [color=darkseagreen4, key=1, label=c2, style=dashed];
m0_516 -> m0_519  [color=darkseagreen4, key=1, label=c2, style=dashed];
m0_516 -> m0_520  [color=darkseagreen4, key=1, label=c2, style=dashed];
m0_516 -> m0_521  [color=darkseagreen4, key=1, label=c2, style=dashed];
m0_516 -> m0_522  [color=darkseagreen4, key=1, label=c2, style=dashed];
m0_516 -> m0_523  [color=darkseagreen4, key=1, label=c2, style=dashed];
m0_516 -> m0_30  [key=2, style=dotted];
m0_515 -> m0_516  [key=0, style=solid];
m0_515 -> m0_515  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m0_524 -> m0_514  [color=blue, key=0, style=bold];
m0_131 -> m0_132  [key=0, style=solid];
m0_256 -> m0_257  [key=0, style=solid];
m0_245 -> m0_30  [key=2, style=dotted];
m0_245 -> m0_246  [key=0, style=solid];
m0_257 -> m0_30  [key=2, style=dotted];
m0_257 -> m0_258  [key=0, style=solid];
m0_257 -> m0_261  [key=0, style=solid];
m0_257 -> m0_290  [key=2, style=dotted];
m0_493 -> m0_30  [key=2, style=dotted];
m0_493 -> m0_494  [key=0, style=solid];
m0_581 -> m0_30  [key=2, style=dotted];
m0_581 -> m0_582  [key=0, style=solid];
m0_588 -> m0_30  [key=2, style=dotted];
m0_588 -> m0_589  [key=0, style=solid];
m0_608 -> m0_30  [key=2, style=dotted];
m0_608 -> m0_609  [key=0, style=solid];
m0_615 -> m0_30  [key=2, style=dotted];
m0_615 -> m0_616  [key=0, style=solid];
m0_622 -> m0_30  [key=2, style=dotted];
m0_622 -> m0_623  [key=0, style=solid];
m0_648 -> m0_30  [key=2, style=dotted];
m0_648 -> m0_649  [key=0, style=solid];
m0_655 -> m0_30  [key=2, style=dotted];
m0_655 -> m0_656  [key=0, style=solid];
m0_839 -> m0_30  [key=2, style=dotted];
m0_839 -> m0_840  [key=0, style=solid];
m0_258 -> m0_256  [color=blue, key=0, style=bold];
m0_258 -> m0_259  [key=0, style=solid];
m0_124 -> m0_29  [key=2, style=dotted];
m0_124 -> m0_125  [key=0, style=solid];
m0_124 -> m0_118  [key=2, style=dotted];
m0_124 -> m0_126  [key=0, style=solid];
m0_244 -> m0_245  [key=0, style=solid];
m0_244 -> m0_283  [key=0, style=solid];
m0_244 -> m0_88  [key=2, style=dotted];
m0_246 -> m0_244  [color=blue, key=0, style=bold];
m0_246 -> m0_247  [key=0, style=solid];
m0_246 -> m0_157  [key=2, style=dotted];
m0_492 -> m0_493  [key=0, style=solid];
m0_494 -> m0_492  [color=blue, key=0, style=bold];
m0_580 -> m0_581  [key=0, style=solid];
m0_582 -> m0_580  [color=blue, key=0, style=bold];
m0_587 -> m0_588  [key=0, style=solid];
m0_589 -> m0_587  [color=blue, key=0, style=bold];
m0_607 -> m0_608  [key=0, style=solid];
m0_609 -> m0_607  [color=blue, key=0, style=bold];
m0_614 -> m0_615  [key=0, style=solid];
m0_616 -> m0_614  [color=blue, key=0, style=bold];
m0_621 -> m0_622  [key=0, style=solid];
m0_623 -> m0_621  [color=blue, key=0, style=bold];
m0_647 -> m0_648  [key=0, style=solid];
m0_649 -> m0_647  [color=blue, key=0, style=bold];
m0_654 -> m0_655  [key=0, style=solid];
m0_656 -> m0_654  [color=blue, key=0, style=bold];
m0_838 -> m0_839  [key=0, style=solid];
m0_840 -> m0_838  [color=blue, key=0, style=bold];
m0_123 -> m0_124  [key=0, style=solid];
m0_125 -> m0_123  [color=blue, key=0, style=bold];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_131  [key=2, style=dotted];
m0_284 -> m0_401  [key=0, style=solid];
m0_823 -> m0_874  [key=0, style=solid];
m0_874 -> m0_875  [key=0, style=solid];
m0_875 -> m0_823  [color=blue, key=0, style=bold];
m0_371 -> m0_372  [key=0, style=solid];
m0_371 -> m0_373  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m0_371 -> m0_374  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m0_371 -> m0_376  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m0_371 -> m0_378  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m0_371 -> m0_379  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m0_371 -> m0_381  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m0_371 -> m0_330  [color=darkorchid, key=3, label="Local variable int lookbackPos", style=bold];
m0_371 -> m0_3  [key=2, style=dotted];
m0_372 -> m0_373  [key=0, style=solid];
m0_372 -> m0_379  [color=darkseagreen4, key=1, label=bis, style=dashed];
m0_372 -> m0_76  [color=darkorchid, key=3, label="Local variable int bis", style=bold];
m0_372 -> m0_383  [color=darkorchid, key=3, label="Local variable int bis", style=bold];
m0_372 -> m0_370  [color=blue, key=0, style=bold];
m0_576 -> m0_577  [key=0, style=solid];
m0_578 -> m0_56  [key=2, style=dotted];
m0_578 -> m0_579  [key=0, style=solid];
m0_578 -> m0_580  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_577 -> m0_581  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_577 -> m0_578  [key=0, style=solid];
m0_577 -> m0_577  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m0_579 -> m0_576  [color=blue, key=0, style=bold];
m0_101 -> m0_102  [key=0, style=solid];
m0_102 -> m0_101  [color=blue, key=0, style=bold];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_128  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_204 -> m0_222  [key=0, style=solid];
m0_204 -> m0_282  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonType", style=dashed];
m0_204 -> m0_32  [key=2, style=dotted];
m0_204 -> m0_205  [key=0, style=solid];
m0_231 -> m0_232  [key=0, style=solid];
m0_248 -> m0_249  [key=0, style=solid];
m0_232 -> m0_233  [key=0, style=solid];
m0_232 -> m0_88  [key=2, style=dotted];
m0_232 -> m0_3  [key=2, style=dotted];
m0_233 -> m0_234  [key=0, style=solid];
m0_233 -> m0_0  [key=2, style=dotted];
m0_233 -> m0_235  [color=darkseagreen4, key=1, label=newContext, style=dashed];
m0_233 -> m0_231  [color=blue, key=0, style=bold];
m0_247 -> m0_283  [key=0, style=solid];
m0_247 -> m0_127  [key=2, style=dotted];
m0_259 -> m0_261  [key=0, style=solid];
m0_259 -> m0_291  [key=2, style=dotted];
m0_260 -> m0_261  [key=0, style=solid];
m0_370 -> m0_371  [key=0, style=solid];
m0_837 -> m0_841  [key=0, style=solid];
m0_841 -> m0_3  [key=2, style=dotted];
m0_841 -> m0_842  [key=0, style=solid];
m0_842 -> m0_837  [color=blue, key=0, style=bold];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_129  [key=2, style=dotted];
m0_103 -> m0_127  [key=2, style=dotted];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_101  [key=2, style=dotted];
m0_105 -> m0_103  [color=blue, key=0, style=bold];
m0_105 -> m0_126  [key=0, style=solid];
m0_461 -> m0_462  [key=0, style=solid];
m0_464 -> m0_32  [key=2, style=dotted];
m0_464 -> m0_465  [key=0, style=solid];
m0_465 -> m0_32  [key=2, style=dotted];
m0_465 -> m0_466  [key=0, style=solid];
m0_466 -> m0_32  [key=2, style=dotted];
m0_466 -> m0_467  [key=0, style=solid];
m0_467 -> m0_32  [key=2, style=dotted];
m0_467 -> m0_468  [key=0, style=solid];
m0_468 -> m0_32  [key=2, style=dotted];
m0_468 -> m0_469  [key=0, style=solid];
m0_469 -> m0_32  [key=2, style=dotted];
m0_469 -> m0_470  [key=0, style=solid];
m0_470 -> m0_32  [key=2, style=dotted];
m0_470 -> m0_471  [key=0, style=solid];
m0_471 -> m0_32  [key=2, style=dotted];
m0_471 -> m0_472  [key=0, style=solid];
m0_472 -> m0_32  [key=2, style=dotted];
m0_472 -> m0_473  [key=0, style=solid];
m0_463 -> m0_464  [key=0, style=solid];
m0_463 -> m0_465  [color=darkseagreen4, key=1, label=values, style=dashed];
m0_463 -> m0_466  [color=darkseagreen4, key=1, label=values, style=dashed];
m0_463 -> m0_467  [color=darkseagreen4, key=1, label=values, style=dashed];
m0_463 -> m0_468  [color=darkseagreen4, key=1, label=values, style=dashed];
m0_463 -> m0_469  [color=darkseagreen4, key=1, label=values, style=dashed];
m0_463 -> m0_470  [color=darkseagreen4, key=1, label=values, style=dashed];
m0_463 -> m0_471  [color=darkseagreen4, key=1, label=values, style=dashed];
m0_463 -> m0_472  [color=darkseagreen4, key=1, label=values, style=dashed];
m0_463 -> m0_30  [key=2, style=dotted];
m0_462 -> m0_463  [key=0, style=solid];
m0_462 -> m0_462  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m0_473 -> m0_461  [color=blue, key=0, style=bold];
m0_118 -> m0_119  [key=0, style=solid];
m0_118 -> m0_120  [key=0, style=solid];
m0_119 -> m0_118  [color=blue, key=0, style=bold];
m0_119 -> m0_120  [key=0, style=solid];
m0_205 -> m0_32  [key=2, style=dotted];
m0_205 -> m0_206  [key=0, style=solid];
m0_205 -> m0_218  [key=0, style=solid];
m0_843 -> m0_844  [key=0, style=solid];
m0_844 -> m0_845  [key=0, style=solid];
m0_844 -> m0_217  [key=2, style=dotted];
m0_845 -> m0_843  [color=blue, key=0, style=bold];
m0_488 -> m0_489  [key=0, style=solid];
m0_490 -> m0_56  [key=2, style=dotted];
m0_490 -> m0_491  [key=0, style=solid];
m0_490 -> m0_492  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_489 -> m0_493  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_489 -> m0_490  [key=0, style=solid];
m0_489 -> m0_489  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m0_491 -> m0_488  [color=blue, key=0, style=bold];
m0_697 -> m0_698  [key=0, style=solid];
m0_700 -> m0_32  [key=2, style=dotted];
m0_700 -> m0_701  [key=0, style=solid];
m0_701 -> m0_32  [key=2, style=dotted];
m0_701 -> m0_702  [key=0, style=solid];
m0_702 -> m0_32  [key=2, style=dotted];
m0_702 -> m0_703  [key=0, style=solid];
m0_703 -> m0_32  [key=2, style=dotted];
m0_703 -> m0_704  [key=0, style=solid];
m0_704 -> m0_32  [key=2, style=dotted];
m0_704 -> m0_705  [key=0, style=solid];
m0_699 -> m0_700  [key=0, style=solid];
m0_699 -> m0_701  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_699 -> m0_702  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_699 -> m0_703  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_699 -> m0_704  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_699 -> m0_30  [key=2, style=dotted];
m0_698 -> m0_699  [key=0, style=solid];
m0_698 -> m0_698  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m0_705 -> m0_697  [color=blue, key=0, style=bold];
m0_657 -> m0_658  [key=0, style=solid];
m0_664 -> m0_32  [key=2, style=dotted];
m0_664 -> m0_665  [key=0, style=solid];
m0_660 -> m0_32  [key=2, style=dotted];
m0_660 -> m0_661  [key=0, style=solid];
m0_661 -> m0_32  [key=2, style=dotted];
m0_661 -> m0_662  [key=0, style=solid];
m0_662 -> m0_32  [key=2, style=dotted];
m0_662 -> m0_663  [key=0, style=solid];
m0_658 -> m0_664  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_658 -> m0_658  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m0_658 -> m0_659  [key=0, style=solid];
m0_663 -> m0_664  [key=0, style=solid];
m0_663 -> m0_29  [key=2, style=dotted];
m0_659 -> m0_660  [key=0, style=solid];
m0_659 -> m0_661  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_659 -> m0_662  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_659 -> m0_30  [key=2, style=dotted];
m0_659 -> m0_663  [color=darkseagreen4, key=1, label=aa, style=dashed];
m0_665 -> m0_657  [color=blue, key=0, style=bold];
m0_898 -> m0_903  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_898 -> m0_900  [color=darkorchid, key=3, label="method methodReturn object ReadJson", style=bold];
m0_898 -> m0_905  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_898 -> m0_899  [key=0, style=solid];
m0_898 -> m0_901  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_898 -> m0_902  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_904 -> m0_11  [key=2, style=dotted];
m0_904 -> m0_905  [key=0, style=solid];
m0_903 -> m0_904  [key=0, style=solid];
m0_900 -> m0_904  [color=darkseagreen4, key=1, label=newStrings, style=dashed];
m0_900 -> m0_7  [key=2, style=dotted];
m0_900 -> m0_901  [key=0, style=solid];
m0_900 -> m0_906  [color=darkseagreen4, key=1, label=newStrings, style=dashed];
m0_905 -> m0_902  [key=0, style=solid];
m0_905 -> m0_908  [key=2, style=dotted];
m0_902 -> m0_903  [key=0, style=solid];
m0_902 -> m0_906  [key=0, style=solid];
m0_899 -> m0_900  [key=0, style=solid];
m0_901 -> m0_902  [key=0, style=solid];
m0_901 -> m0_908  [key=2, style=dotted];
m0_906 -> m0_907  [key=0, style=solid];
m0_907 -> m0_898  [color=blue, key=0, style=bold];
m0_85 -> m0_96  [key=0, style=solid];
m0_85 -> m0_78  [color=darkorchid, key=3, label="method methodReturn bool ReadCodeWScope", style=bold];
m0_85 -> m0_117  [color=darkorchid, key=3, label="method methodReturn bool ReadCodeWScope", style=bold];
m0_885 -> m0_886  [key=0, style=solid];
m0_885 -> m0_888  [color=crimson, key=0, style=bold];
m0_885 -> m0_889  [color=crimson, key=0, style=bold];
m0_886 -> m0_887  [key=0, style=solid];
m0_886 -> m0_889  [key=0, style=solid];
m0_887 -> m0_888  [key=0, style=solid];
m0_887 -> m0_890  [key=0, style=solid];
m0_889 -> m0_890  [key=0, style=solid];
m0_888 -> m0_887  [key=0, style=solid];
m0_890 -> m0_885  [color=blue, key=0, style=bold];
m0_650 -> m0_651  [key=0, style=solid];
m0_652 -> m0_56  [key=2, style=dotted];
m0_652 -> m0_653  [key=0, style=solid];
m0_652 -> m0_654  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_651 -> m0_655  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_651 -> m0_652  [key=0, style=solid];
m0_651 -> m0_651  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m0_653 -> m0_650  [color=blue, key=0, style=bold];
m0_880 -> m0_881  [key=0, style=solid];
m0_880 -> m0_876  [color=darkorchid, key=3, label="method methodReturn System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator", style=bold];
m0_881 -> m0_882  [key=0, style=solid];
m0_881 -> m0_876  [key=2, style=dotted];
m0_882 -> m0_880  [color=blue, key=0, style=bold];
m0_824 -> m0_825  [key=0, style=solid];
m0_826 -> m0_254  [key=2, style=dotted];
m0_826 -> m0_827  [key=0, style=solid];
m0_826 -> m0_828  [color=darkseagreen4, key=1, label=settings, style=dashed];
m0_827 -> m0_685  [key=2, style=dotted];
m0_827 -> m0_828  [key=0, style=solid];
m0_827 -> m0_831  [key=2, style=dotted];
m0_825 -> m0_826  [key=0, style=solid];
m0_825 -> m0_825  [color=darkorchid, key=3, label="Local variable string externalJson", style=bold];
m0_825 -> m0_828  [color=darkseagreen4, key=1, label=externalJson, style=dashed];
m0_828 -> m0_255  [key=2, style=dotted];
m0_828 -> m0_829  [key=0, style=solid];
m0_829 -> m0_32  [key=2, style=dotted];
m0_829 -> m0_830  [key=0, style=solid];
m0_830 -> m0_824  [color=blue, key=0, style=bold];
m0_795 -> m0_796  [key=0, style=solid];
m0_800 -> m0_32  [key=2, style=dotted];
m0_800 -> m0_801  [key=0, style=solid];
m0_798 -> m0_32  [key=2, style=dotted];
m0_798 -> m0_799  [key=0, style=solid];
m0_796 -> m0_800  [color=darkseagreen4, key=1, label=r1, style=dashed];
m0_796 -> m0_797  [key=0, style=solid];
m0_796 -> m0_507  [key=2, style=dotted];
m0_799 -> m0_800  [key=0, style=solid];
m0_799 -> m0_30  [key=2, style=dotted];
m0_797 -> m0_798  [key=0, style=solid];
m0_797 -> m0_29  [key=2, style=dotted];
m0_797 -> m0_799  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m0_801 -> m0_795  [color=blue, key=0, style=bold];
m0_876 -> m0_877  [key=0, style=solid];
m0_877 -> m0_878  [key=0, style=solid];
m0_877 -> m0_879  [key=2, style=dotted];
m0_878 -> m0_876  [color=blue, key=0, style=bold];
m0_923 -> m0_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized", style=dashed];
m0_923 -> m0_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized", style=dashed];
m0_923 -> m0_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized", style=dashed];
m0_924 -> m0_151  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomConcurrentDictionary", style=dashed];
m0_926 -> m0_232  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>", style=dashed];
m0_926 -> m0_235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>", style=dashed];
m0_926 -> m0_238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>", style=dashed];
m0_931 -> m0_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass", style=dashed];
m0_933 -> m0_496  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass", style=dashed];
m0_933 -> m0_497  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass", style=dashed];
m0_933 -> m0_498  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass", style=dashed];
m0_933 -> m0_499  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass", style=dashed];
m0_933 -> m0_500  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass", style=dashed];
m0_933 -> m0_501  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass", style=dashed];
m0_933 -> m0_502  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass", style=dashed];
m0_933 -> m0_503  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass", style=dashed];
m0_933 -> m0_504  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass", style=dashed];
m0_933 -> m0_505  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass", style=dashed];
m0_942 -> m0_841  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>", style=dashed];
m0_942 -> m0_844  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>", style=dashed];
m0_942 -> m0_847  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>", style=dashed];
m0_944 -> m0_883  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>", style=dashed];
m0_944 -> m0_886  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>", style=dashed];
m0_944 -> m0_887  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>", style=dashed];
m0_944 -> m0_892  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>", style=dashed];
m0_927 -> m0_245  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_932 -> m0_493  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_934 -> m0_581  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_935 -> m0_588  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_936 -> m0_608  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_937 -> m0_615  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_938 -> m0_622  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_939 -> m0_648  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_940 -> m0_655  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_941 -> m0_839  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_943 -> m0_874  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList", style=dashed];
m0_943 -> m0_877  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList", style=dashed];
m0_943 -> m0_881  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList", style=dashed];
m0_929 -> m0_321  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>", style=dashed];
m0_929 -> m0_324  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>", style=dashed];
m0_929 -> m0_328  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>", style=dashed];
m0_929 -> m0_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>", style=dashed];
m0_929 -> m0_335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>", style=dashed];
m0_930 -> m0_345  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>", style=dashed];
m0_930 -> m0_348  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>", style=dashed];
m0_930 -> m0_351  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>", style=dashed];
m0_928 -> m0_262  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>", style=dashed];
m0_925 -> m0_212  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>", style=dashed];
m0_925 -> m0_215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>", style=dashed];
m0_925 -> m0_219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>", style=dashed];
m1_2129 -> m1_2130  [key=0, style=solid];
m1_2130 -> m1_2131  [key=0, style=solid];
m1_2130 -> m1_2132  [key=2, style=dotted];
m1_2131 -> m1_2129  [color=blue, key=0, style=bold];
m1_684 -> m1_685  [key=0, style=solid];
m1_684 -> m1_686  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_684 -> m1_687  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.PersonReference", style=dashed];
m1_684 -> m1_688  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.PersonReference", style=dashed];
m1_684 -> m1_689  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.PersonReference", style=dashed];
m1_685 -> m1_686  [key=0, style=solid];
m1_686 -> m1_687  [key=0, style=solid];
m1_687 -> m1_688  [key=0, style=solid];
m1_688 -> m1_689  [key=0, style=solid];
m1_689 -> m1_690  [key=0, style=solid];
m1_690 -> m1_684  [color=blue, key=0, style=bold];
m1_757 -> m1_758  [key=0, style=solid];
m1_758 -> m1_759  [key=0, style=solid];
m1_758 -> m1_3243  [color=darkorchid, key=3, label="Local variable string s", style=bold];
m1_759 -> m1_760  [key=0, style=solid];
m1_759 -> m1_767  [key=2, style=dotted];
m1_759 -> m1_761  [color=darkseagreen4, key=1, label=v, style=dashed];
m1_759 -> m1_763  [color=darkseagreen4, key=1, label=v, style=dashed];
m1_759 -> m1_764  [color=darkseagreen4, key=1, label=v, style=dashed];
m1_760 -> m1_761  [key=0, style=solid];
m1_760 -> m1_768  [key=2, style=dotted];
m1_760 -> m1_762  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_761 -> m1_762  [key=0, style=solid];
m1_761 -> m1_769  [key=2, style=dotted];
m1_763 -> m1_764  [key=0, style=solid];
m1_763 -> m1_24  [key=2, style=dotted];
m1_764 -> m1_765  [key=0, style=solid];
m1_764 -> m1_24  [key=2, style=dotted];
m1_762 -> m1_763  [key=0, style=solid];
m1_762 -> m1_770  [key=2, style=dotted];
m1_762 -> m1_765  [color=darkseagreen4, key=1, label=output, style=dashed];
m1_765 -> m1_766  [key=0, style=solid];
m1_765 -> m1_42  [key=2, style=dotted];
m1_766 -> m1_757  [color=blue, key=0, style=bold];
m1_237 -> m1_238  [key=0, style=solid];
m1_238 -> m1_239  [key=0, style=solid];
m1_238 -> m1_248  [key=2, style=dotted];
m1_238 -> m1_250  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_239 -> m1_240  [key=0, style=solid];
m1_239 -> m1_60  [key=2, style=dotted];
m1_239 -> m1_249  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_240 -> m1_241  [key=0, style=solid];
m1_240 -> m1_248  [key=2, style=dotted];
m1_241 -> m1_242  [key=0, style=solid];
m1_241 -> m1_129  [key=2, style=dotted];
m1_242 -> m1_243  [key=0, style=solid];
m1_242 -> m1_24  [key=2, style=dotted];
m1_243 -> m1_244  [key=0, style=solid];
m1_243 -> m1_60  [key=2, style=dotted];
m1_243 -> m1_252  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_244 -> m1_245  [key=0, style=solid];
m1_244 -> m1_60  [key=2, style=dotted];
m1_244 -> m1_255  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_245 -> m1_246  [key=0, style=solid];
m1_245 -> m1_49  [key=2, style=dotted];
m1_246 -> m1_247  [key=0, style=solid];
m1_246 -> m1_24  [key=2, style=dotted];
m1_247 -> m1_237  [color=blue, key=0, style=bold];
m1_1643 -> m1_1644  [key=0, style=solid];
m1_1643 -> m1_1645  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_1643 -> m1_1646  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_1643 -> m1_1647  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_1644 -> m1_1645  [key=0, style=solid];
m1_1645 -> m1_1646  [key=0, style=solid];
m1_1646 -> m1_1647  [key=0, style=solid];
m1_1647 -> m1_1648  [key=0, style=solid];
m1_1648 -> m1_1643  [color=blue, key=0, style=bold];
m1_4154 -> m1_4155  [key=0, style=solid];
m1_4155 -> m1_4156  [key=0, style=solid];
m1_4156 -> m1_4154  [color=blue, key=0, style=bold];
m1_798 -> m1_799  [key=0, style=solid];
m1_799 -> m1_800  [key=0, style=solid];
m1_799 -> m1_804  [key=2, style=dotted];
m1_799 -> m1_790  [key=2, style=dotted];
m1_800 -> m1_801  [key=0, style=solid];
m1_800 -> m1_129  [key=2, style=dotted];
m1_800 -> m1_802  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_801 -> m1_802  [key=0, style=solid];
m1_801 -> m1_801  [color=darkorchid, key=3, label="Local variable string expectedJson", style=bold];
m1_802 -> m1_803  [key=0, style=solid];
m1_802 -> m1_24  [key=2, style=dotted];
m1_803 -> m1_798  [color=blue, key=0, style=bold];
m1_1730 -> m1_1731  [key=0, style=solid];
m1_1731 -> m1_1732  [key=0, style=solid];
m1_1731 -> m1_1731  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1732 -> m1_1733  [key=0, style=solid];
m1_1732 -> m1_49  [key=2, style=dotted];
m1_1732 -> m1_1734  [color=darkseagreen4, key=1, label=r, style=dashed];
m1_1732 -> m1_1735  [color=darkseagreen4, key=1, label=r, style=dashed];
m1_1733 -> m1_1734  [key=0, style=solid];
m1_1733 -> m1_24  [key=2, style=dotted];
m1_1734 -> m1_1735  [key=0, style=solid];
m1_1734 -> m1_24  [key=2, style=dotted];
m1_1735 -> m1_1736  [key=0, style=solid];
m1_1735 -> m1_24  [key=2, style=dotted];
m1_1736 -> m1_1730  [color=blue, key=0, style=bold];
m1_1234 -> m1_1235  [key=0, style=solid];
m1_1235 -> m1_1236  [key=0, style=solid];
m1_1235 -> m1_1102  [key=2, style=dotted];
m1_1236 -> m1_1237  [key=0, style=solid];
m1_1236 -> m1_129  [key=2, style=dotted];
m1_1237 -> m1_1238  [key=0, style=solid];
m1_1237 -> m1_24  [key=2, style=dotted];
m1_1238 -> m1_1234  [color=blue, key=0, style=bold];
m1_2033 -> m1_2034  [key=0, style=solid];
m1_2034 -> m1_2035  [key=0, style=solid];
m1_2034 -> m1_2036  [key=0, style=solid];
m1_2035 -> m1_2034  [key=0, style=solid];
m1_2035 -> m1_832  [key=2, style=dotted];
m1_2035 -> m1_2035  [color=darkseagreen4, key=1, label=pair, style=dashed];
m1_2036 -> m1_2033  [color=blue, key=0, style=bold];
m1_2426 -> m1_2427  [key=0, style=solid];
m1_2427 -> m1_2428  [key=0, style=solid];
m1_2427 -> m1_60  [key=2, style=dotted];
m1_2427 -> m1_2429  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_2428 -> m1_2426  [color=blue, key=0, style=bold];
m1_719 -> m1_720  [key=0, style=solid];
m1_720 -> m1_721  [key=0, style=solid];
m1_720 -> m1_740  [key=2, style=dotted];
m1_720 -> m1_722  [color=darkseagreen4, key=1, label=p1, style=dashed];
m1_720 -> m1_723  [color=darkseagreen4, key=1, label=p1, style=dashed];
m1_720 -> m1_724  [color=darkseagreen4, key=1, label=p1, style=dashed];
m1_721 -> m1_722  [key=0, style=solid];
m1_721 -> m1_740  [key=2, style=dotted];
m1_721 -> m1_723  [color=darkseagreen4, key=1, label=p2, style=dashed];
m1_721 -> m1_724  [color=darkseagreen4, key=1, label=p2, style=dashed];
m1_722 -> m1_723  [key=0, style=solid];
m1_723 -> m1_724  [key=0, style=solid];
m1_724 -> m1_725  [key=0, style=solid];
m1_724 -> m1_684  [key=2, style=dotted];
m1_724 -> m1_727  [color=darkseagreen4, key=1, label=obj, style=dashed];
m1_724 -> m1_730  [color=darkseagreen4, key=1, label=obj, style=dashed];
m1_724 -> m1_731  [color=darkseagreen4, key=1, label=obj, style=dashed];
m1_724 -> m1_732  [color=darkseagreen4, key=1, label=obj, style=dashed];
m1_724 -> m1_733  [color=darkseagreen4, key=1, label=obj, style=dashed];
m1_724 -> m1_734  [color=darkseagreen4, key=1, label=obj, style=dashed];
m1_725 -> m1_726  [key=0, style=solid];
m1_727 -> m1_728  [key=0, style=solid];
m1_727 -> m1_176  [key=2, style=dotted];
m1_727 -> m1_729  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_730 -> m1_731  [key=0, style=solid];
m1_730 -> m1_24  [key=2, style=dotted];
m1_731 -> m1_732  [key=0, style=solid];
m1_731 -> m1_24  [key=2, style=dotted];
m1_732 -> m1_733  [key=0, style=solid];
m1_732 -> m1_24  [key=2, style=dotted];
m1_733 -> m1_734  [key=0, style=solid];
m1_733 -> m1_24  [key=2, style=dotted];
m1_734 -> m1_735  [key=0, style=solid];
m1_734 -> m1_24  [key=2, style=dotted];
m1_726 -> m1_727  [key=0, style=solid];
m1_726 -> m1_175  [key=2, style=dotted];
m1_728 -> m1_729  [key=0, style=solid];
m1_728 -> m1_42  [key=2, style=dotted];
m1_729 -> m1_730  [key=0, style=solid];
m1_729 -> m1_49  [key=2, style=dotted];
m1_729 -> m1_731  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m1_729 -> m1_732  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m1_729 -> m1_733  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m1_729 -> m1_734  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m1_729 -> m1_735  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m1_729 -> m1_736  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m1_729 -> m1_737  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m1_729 -> m1_738  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m1_735 -> m1_736  [key=0, style=solid];
m1_735 -> m1_24  [key=2, style=dotted];
m1_736 -> m1_737  [key=0, style=solid];
m1_736 -> m1_24  [key=2, style=dotted];
m1_737 -> m1_738  [key=0, style=solid];
m1_737 -> m1_24  [key=2, style=dotted];
m1_738 -> m1_739  [key=0, style=solid];
m1_738 -> m1_24  [key=2, style=dotted];
m1_739 -> m1_719  [color=blue, key=0, style=bold];
m1_1326 -> m1_1327  [key=0, style=solid];
m1_1327 -> m1_1328  [key=0, style=solid];
m1_1327 -> m1_1306  [key=2, style=dotted];
m1_1327 -> m1_1332  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m1_1327 -> m1_1333  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m1_1328 -> m1_1329  [key=0, style=solid];
m1_1328 -> m1_1307  [key=2, style=dotted];
m1_1332 -> m1_1333  [key=0, style=solid];
m1_1332 -> m1_24  [key=2, style=dotted];
m1_1333 -> m1_1334  [key=0, style=solid];
m1_1333 -> m1_24  [key=2, style=dotted];
m1_1329 -> m1_1330  [key=0, style=solid];
m1_1329 -> m1_175  [key=2, style=dotted];
m1_1329 -> m1_176  [key=2, style=dotted];
m1_1329 -> m1_1331  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1330 -> m1_1331  [key=0, style=solid];
m1_1330 -> m1_24  [key=2, style=dotted];
m1_1331 -> m1_1332  [key=0, style=solid];
m1_1331 -> m1_49  [key=2, style=dotted];
m1_1331 -> m1_1333  [color=darkseagreen4, key=1, label=m2, style=dashed];
m1_1334 -> m1_1326  [color=blue, key=0, style=bold];
m1_1769 -> m1_1770  [key=0, style=solid];
m1_1770 -> m1_1771  [key=0, style=solid];
m1_1770 -> m1_49  [key=2, style=dotted];
m1_1770 -> m1_1772  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_1770 -> m1_1773  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_1770 -> m1_1774  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_1771 -> m1_1772  [key=0, style=solid];
m1_1771 -> m1_24  [key=2, style=dotted];
m1_1772 -> m1_1773  [key=0, style=solid];
m1_1772 -> m1_24  [key=2, style=dotted];
m1_1773 -> m1_1774  [key=0, style=solid];
m1_1773 -> m1_24  [key=2, style=dotted];
m1_1774 -> m1_1775  [key=0, style=solid];
m1_1774 -> m1_24  [key=2, style=dotted];
m1_1775 -> m1_1769  [color=blue, key=0, style=bold];
m1_3053 -> m1_3054  [key=0, style=solid];
m1_3054 -> m1_3055  [key=0, style=solid];
m1_3054 -> m1_134  [key=2, style=dotted];
m1_3054 -> m1_3057  [color=darkseagreen4, key=1, label=d1, style=dashed];
m1_3054 -> m1_3058  [color=darkseagreen4, key=1, label=d1, style=dashed];
m1_3055 -> m1_3056  [key=0, style=solid];
m1_3055 -> m1_129  [key=2, style=dotted];
m1_3057 -> m1_3058  [key=0, style=solid];
m1_3057 -> m1_24  [key=2, style=dotted];
m1_3058 -> m1_3059  [key=0, style=solid];
m1_3058 -> m1_24  [key=2, style=dotted];
m1_3056 -> m1_3057  [key=0, style=solid];
m1_3056 -> m1_49  [key=2, style=dotted];
m1_3056 -> m1_3058  [color=darkseagreen4, key=1, label=d2, style=dashed];
m1_3059 -> m1_3053  [color=blue, key=0, style=bold];
m1_1710 -> m1_1711  [key=0, style=solid];
m1_1711 -> m1_1712  [key=0, style=solid];
m1_1711 -> m1_918  [key=2, style=dotted];
m1_1711 -> m1_1715  [key=2, style=dotted];
m1_1712 -> m1_1713  [key=0, style=solid];
m1_1712 -> m1_129  [key=2, style=dotted];
m1_1713 -> m1_1714  [key=0, style=solid];
m1_1713 -> m1_24  [key=2, style=dotted];
m1_1714 -> m1_1710  [color=blue, key=0, style=bold];
m1_2576 -> m1_2577  [key=0, style=solid];
m1_2577 -> m1_2578  [key=0, style=solid];
m1_2577 -> m1_49  [key=2, style=dotted];
m1_2578 -> m1_2579  [key=0, style=solid];
m1_2578 -> m1_2561  [key=2, style=dotted];
m1_2578 -> m1_954  [key=2, style=dotted];
m1_2578 -> m1_1110  [key=2, style=dotted];
m1_2578 -> m1_24  [key=2, style=dotted];
m1_2579 -> m1_2576  [color=blue, key=0, style=bold];
m1_1481 -> m1_1482  [key=0, style=solid];
m1_1482 -> m1_1483  [key=0, style=solid];
m1_1482 -> m1_1491  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1482 -> m1_1482  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1483 -> m1_1484  [key=0, style=solid];
m1_1483 -> m1_49  [key=2, style=dotted];
m1_1483 -> m1_1485  [color=darkseagreen4, key=1, label=aa, style=dashed];
m1_1483 -> m1_1486  [color=darkseagreen4, key=1, label=aa, style=dashed];
m1_1483 -> m1_1487  [color=darkseagreen4, key=1, label=aa, style=dashed];
m1_1483 -> m1_1488  [color=darkseagreen4, key=1, label=aa, style=dashed];
m1_1483 -> m1_1489  [color=darkseagreen4, key=1, label=aa, style=dashed];
m1_1483 -> m1_1490  [color=darkseagreen4, key=1, label=aa, style=dashed];
m1_1491 -> m1_1492  [key=0, style=solid];
m1_1491 -> m1_24  [key=2, style=dotted];
m1_1484 -> m1_1485  [key=0, style=solid];
m1_1484 -> m1_24  [key=2, style=dotted];
m1_1485 -> m1_1486  [key=0, style=solid];
m1_1485 -> m1_24  [key=2, style=dotted];
m1_1486 -> m1_1487  [key=0, style=solid];
m1_1486 -> m1_24  [key=2, style=dotted];
m1_1487 -> m1_1488  [key=0, style=solid];
m1_1487 -> m1_24  [key=2, style=dotted];
m1_1488 -> m1_1489  [key=0, style=solid];
m1_1488 -> m1_24  [key=2, style=dotted];
m1_1489 -> m1_1490  [key=0, style=solid];
m1_1489 -> m1_24  [key=2, style=dotted];
m1_1490 -> m1_1491  [key=0, style=solid];
m1_1490 -> m1_129  [key=2, style=dotted];
m1_1492 -> m1_1481  [color=blue, key=0, style=bold];
m1_1749 -> m1_1750  [key=0, style=solid];
m1_1750 -> m1_1751  [key=0, style=solid];
m1_1750 -> m1_1754  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1750 -> m1_1750  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1751 -> m1_1752  [key=0, style=solid];
m1_1751 -> m1_60  [key=2, style=dotted];
m1_1751 -> m1_1753  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1752 -> m1_1749  [color=blue, key=0, style=bold];
m1_2745 -> m1_2746  [key=0, style=solid];
m1_2746 -> m1_2747  [key=0, style=solid];
m1_2746 -> m1_2746  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_2747 -> m1_2748  [key=0, style=solid];
m1_2747 -> m1_49  [key=2, style=dotted];
m1_2747 -> m1_2749  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_2747 -> m1_2750  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_2748 -> m1_2749  [key=0, style=solid];
m1_2748 -> m1_24  [key=2, style=dotted];
m1_2749 -> m1_2750  [key=0, style=solid];
m1_2749 -> m1_24  [key=2, style=dotted];
m1_2750 -> m1_2751  [key=0, style=solid];
m1_2750 -> m1_24  [key=2, style=dotted];
m1_2751 -> m1_2745  [color=blue, key=0, style=bold];
m1_2440 -> m1_2441  [key=0, style=solid];
m1_2441 -> m1_2442  [key=0, style=solid];
m1_2441 -> m1_196  [key=2, style=dotted];
m1_2441 -> m1_2443  [color=darkseagreen4, key=1, label=reference, style=dashed];
m1_2441 -> m1_2444  [color=darkseagreen4, key=1, label=reference, style=dashed];
m1_2441 -> m1_2448  [color=darkseagreen4, key=1, label=reference, style=dashed];
m1_2442 -> m1_2443  [key=0, style=solid];
m1_2442 -> m1_832  [key=2, style=dotted];
m1_2443 -> m1_2444  [key=0, style=solid];
m1_2443 -> m1_832  [key=2, style=dotted];
m1_2444 -> m1_2445  [key=0, style=solid];
m1_2444 -> m1_832  [key=2, style=dotted];
m1_2448 -> m1_2449  [key=0, style=solid];
m1_2448 -> m1_832  [key=2, style=dotted];
m1_2445 -> m1_2446  [key=0, style=solid];
m1_2445 -> m1_196  [key=2, style=dotted];
m1_2445 -> m1_2447  [color=darkseagreen4, key=1, label=child, style=dashed];
m1_2445 -> m1_2448  [color=darkseagreen4, key=1, label=child, style=dashed];
m1_2445 -> m1_2449  [color=darkseagreen4, key=1, label=child, style=dashed];
m1_2446 -> m1_2447  [key=0, style=solid];
m1_2446 -> m1_832  [key=2, style=dotted];
m1_2447 -> m1_2448  [key=0, style=solid];
m1_2447 -> m1_832  [key=2, style=dotted];
m1_2449 -> m1_2450  [key=0, style=solid];
m1_2449 -> m1_129  [key=2, style=dotted];
m1_2449 -> m1_2451  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_2450 -> m1_2451  [key=0, style=solid];
m1_2450 -> m1_24  [key=2, style=dotted];
m1_2451 -> m1_2452  [key=0, style=solid];
m1_2451 -> m1_49  [key=2, style=dotted];
m1_2451 -> m1_2453  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_2451 -> m1_2454  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_2452 -> m1_2453  [key=0, style=solid];
m1_2452 -> m1_24  [key=2, style=dotted];
m1_2453 -> m1_2454  [key=0, style=solid];
m1_2453 -> m1_24  [key=2, style=dotted];
m1_2454 -> m1_2455  [key=0, style=solid];
m1_2454 -> m1_24  [key=2, style=dotted];
m1_2455 -> m1_2440  [color=blue, key=0, style=bold];
m1_4131 -> m1_4132  [key=0, style=solid];
m1_4132 -> m1_4133  [key=0, style=solid];
m1_4133 -> m1_4131  [color=blue, key=0, style=bold];
m1_1156 -> m1_1157  [key=0, style=solid];
m1_1157 -> m1_1158  [key=0, style=solid];
m1_1157 -> m1_129  [key=2, style=dotted];
m1_1158 -> m1_1159  [key=0, style=solid];
m1_1158 -> m1_24  [key=2, style=dotted];
m1_1159 -> m1_1156  [color=blue, key=0, style=bold];
m1_3946 -> m1_3947  [key=0, style=solid];
m1_3947 -> m1_3948  [key=0, style=solid];
m1_3947 -> m1_3951  [key=2, style=dotted];
m1_3947 -> m1_3952  [key=2, style=dotted];
m1_3948 -> m1_3949  [key=0, style=solid];
m1_3948 -> m1_41  [key=2, style=dotted];
m1_3949 -> m1_3950  [key=0, style=solid];
m1_3949 -> m1_42  [key=2, style=dotted];
m1_3950 -> m1_3946  [color=blue, key=0, style=bold];
m1_3295 -> m1_3296  [key=0, style=solid];
m1_3296 -> m1_3297  [key=0, style=solid];
m1_3296 -> m1_953  [key=2, style=dotted];
m1_3296 -> m1_3298  [color=darkseagreen4, key=1, label=product, style=dashed];
m1_3296 -> m1_3299  [color=darkseagreen4, key=1, label=product, style=dashed];
m1_3296 -> m1_3300  [color=darkseagreen4, key=1, label=product, style=dashed];
m1_3296 -> m1_3301  [color=darkseagreen4, key=1, label=product, style=dashed];
m1_3296 -> m1_3302  [color=darkseagreen4, key=1, label=product, style=dashed];
m1_3297 -> m1_3298  [key=0, style=solid];
m1_3298 -> m1_3299  [key=0, style=solid];
m1_3298 -> m1_954  [key=2, style=dotted];
m1_3299 -> m1_3300  [key=0, style=solid];
m1_3300 -> m1_3301  [key=0, style=solid];
m1_3301 -> m1_3302  [key=0, style=solid];
m1_3301 -> m1_129  [key=2, style=dotted];
m1_3302 -> m1_3303  [key=0, style=solid];
m1_3302 -> m1_175  [key=2, style=dotted];
m1_3302 -> m1_3308  [key=2, style=dotted];
m1_3302 -> m1_3309  [key=2, style=dotted];
m1_3302 -> m1_176  [key=2, style=dotted];
m1_3303 -> m1_3304  [key=0, style=solid];
m1_3303 -> m1_42  [key=2, style=dotted];
m1_3304 -> m1_3305  [key=0, style=solid];
m1_3305 -> m1_3306  [key=0, style=solid];
m1_3305 -> m1_175  [key=2, style=dotted];
m1_3305 -> m1_3308  [key=2, style=dotted];
m1_3305 -> m1_3309  [key=2, style=dotted];
m1_3305 -> m1_3310  [key=2, style=dotted];
m1_3305 -> m1_176  [key=2, style=dotted];
m1_3306 -> m1_3307  [key=0, style=solid];
m1_3306 -> m1_42  [key=2, style=dotted];
m1_3307 -> m1_3295  [color=blue, key=0, style=bold];
m1_357 -> m1_358  [key=0, style=solid];
m1_358 -> m1_359  [key=0, style=solid];
m1_358 -> m1_49  [key=2, style=dotted];
m1_358 -> m1_360  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_359 -> m1_360  [key=0, style=solid];
m1_359 -> m1_24  [key=2, style=dotted];
m1_360 -> m1_361  [key=0, style=solid];
m1_360 -> m1_24  [key=2, style=dotted];
m1_361 -> m1_357  [color=blue, key=0, style=bold];
m1_1472 -> m1_1473  [key=0, style=solid];
m1_1473 -> m1_1474  [key=0, style=solid];
m1_1473 -> m1_1480  [key=2, style=dotted];
m1_1473 -> m1_1475  [color=darkseagreen4, key=1, label=aa, style=dashed];
m1_1473 -> m1_1476  [color=darkseagreen4, key=1, label=aa, style=dashed];
m1_1473 -> m1_1477  [color=darkseagreen4, key=1, label=aa, style=dashed];
m1_1474 -> m1_1475  [key=0, style=solid];
m1_1475 -> m1_1476  [key=0, style=solid];
m1_1476 -> m1_1477  [key=0, style=solid];
m1_1477 -> m1_1478  [key=0, style=solid];
m1_1477 -> m1_129  [key=2, style=dotted];
m1_1478 -> m1_1479  [key=0, style=solid];
m1_1478 -> m1_24  [key=2, style=dotted];
m1_1479 -> m1_1472  [color=blue, key=0, style=bold];
m1_3953 -> m1_3954  [key=0, style=solid];
m1_3954 -> m1_3955  [key=0, style=solid];
m1_3954 -> m1_3954  [color=darkorchid, key=3, label="Local variable string content", style=bold];
m1_3955 -> m1_3956  [key=0, style=solid];
m1_3955 -> m1_49  [key=2, style=dotted];
m1_3956 -> m1_3957  [key=0, style=solid];
m1_3957 -> m1_3958  [key=0, style=solid];
m1_3957 -> m1_24  [key=2, style=dotted];
m1_3958 -> m1_3953  [color=blue, key=0, style=bold];
m1_2480 -> m1_2481  [key=0, style=solid];
m1_2481 -> m1_2482  [key=0, style=solid];
m1_2481 -> m1_196  [key=2, style=dotted];
m1_2481 -> m1_2483  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m1_2481 -> m1_2484  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m1_2482 -> m1_2483  [key=0, style=solid];
m1_2482 -> m1_2479  [key=2, style=dotted];
m1_2482 -> m1_832  [key=2, style=dotted];
m1_2483 -> m1_2484  [key=0, style=solid];
m1_2483 -> m1_2479  [key=2, style=dotted];
m1_2483 -> m1_832  [key=2, style=dotted];
m1_2484 -> m1_2485  [key=0, style=solid];
m1_2484 -> m1_41  [key=2, style=dotted];
m1_2484 -> m1_2486  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_2485 -> m1_2486  [key=0, style=solid];
m1_2485 -> m1_42  [key=2, style=dotted];
m1_2486 -> m1_2487  [key=0, style=solid];
m1_2486 -> m1_49  [key=2, style=dotted];
m1_2487 -> m1_2488  [key=0, style=solid];
m1_2487 -> m1_24  [key=2, style=dotted];
m1_2488 -> m1_2480  [color=blue, key=0, style=bold];
m1_2018 -> m1_2019  [key=0, style=solid];
m1_2019 -> m1_2020  [key=0, style=solid];
m1_2019 -> m1_2019  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_2020 -> m1_2021  [key=0, style=solid];
m1_2020 -> m1_49  [key=2, style=dotted];
m1_2020 -> m1_2022  [color=darkseagreen4, key=1, label=dic, style=dashed];
m1_2020 -> m1_2023  [color=darkseagreen4, key=1, label=dic, style=dashed];
m1_2020 -> m1_2024  [color=darkseagreen4, key=1, label=dic, style=dashed];
m1_2021 -> m1_2022  [key=0, style=solid];
m1_2021 -> m1_24  [key=2, style=dotted];
m1_2022 -> m1_2023  [key=0, style=solid];
m1_2022 -> m1_24  [key=2, style=dotted];
m1_2023 -> m1_2024  [key=0, style=solid];
m1_2023 -> m1_24  [key=2, style=dotted];
m1_2024 -> m1_2025  [key=0, style=solid];
m1_2024 -> m1_24  [key=2, style=dotted];
m1_2025 -> m1_2018  [color=blue, key=0, style=bold];
m1_2984 -> m1_2985  [key=0, style=solid];
m1_2985 -> m1_2986  [key=0, style=solid];
m1_2985 -> m1_2985  [color=darkorchid, key=3, label="Local variable string input", style=bold];
m1_2986 -> m1_2987  [key=0, style=solid];
m1_2986 -> m1_1708  [key=2, style=dotted];
m1_2986 -> m1_2989  [color=darkseagreen4, key=1, label=uri, style=dashed];
m1_2987 -> m1_2988  [key=0, style=solid];
m1_2987 -> m1_129  [key=2, style=dotted];
m1_2989 -> m1_2990  [key=0, style=solid];
m1_2989 -> m1_24  [key=2, style=dotted];
m1_2988 -> m1_2989  [key=0, style=solid];
m1_2988 -> m1_49  [key=2, style=dotted];
m1_2990 -> m1_2984  [color=blue, key=0, style=bold];
m1_2137 -> m1_2138  [key=0, style=solid];
m1_2138 -> m1_2139  [key=0, style=solid];
m1_2138 -> m1_2140  [key=2, style=dotted];
m1_2139 -> m1_2137  [color=blue, key=0, style=bold];
m1_2897 -> m1_2898  [key=0, style=solid];
m1_2898 -> m1_2899  [key=0, style=solid];
m1_2899 -> m1_2897  [color=blue, key=0, style=bold];
m1_258 -> m1_259  [key=0, style=solid];
m1_259 -> m1_260  [key=0, style=solid];
m1_260 -> m1_258  [color=blue, key=0, style=bold];
m1_3067 -> m1_3068  [key=0, style=solid];
m1_3068 -> m1_3069  [key=0, style=solid];
m1_3068 -> m1_134  [key=2, style=dotted];
m1_3068 -> m1_3071  [color=darkseagreen4, key=1, label=d1, style=dashed];
m1_3068 -> m1_3072  [color=darkseagreen4, key=1, label=d1, style=dashed];
m1_3069 -> m1_3070  [key=0, style=solid];
m1_3069 -> m1_129  [key=2, style=dotted];
m1_3071 -> m1_3072  [key=0, style=solid];
m1_3071 -> m1_24  [key=2, style=dotted];
m1_3072 -> m1_3073  [key=0, style=solid];
m1_3072 -> m1_24  [key=2, style=dotted];
m1_3070 -> m1_3071  [key=0, style=solid];
m1_3070 -> m1_49  [key=2, style=dotted];
m1_3070 -> m1_3072  [color=darkseagreen4, key=1, label=d2, style=dashed];
m1_3073 -> m1_3067  [color=blue, key=0, style=bold];
m1_4055 -> m1_4056  [key=0, style=solid];
m1_4056 -> m1_4057  [key=0, style=solid];
m1_4056 -> m1_4061  [key=2, style=dotted];
m1_4057 -> m1_4058  [key=0, style=solid];
m1_4057 -> m1_41  [key=2, style=dotted];
m1_4057 -> m1_4059  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4058 -> m1_4059  [key=0, style=solid];
m1_4058 -> m1_42  [key=2, style=dotted];
m1_4059 -> m1_4060  [key=0, style=solid];
m1_4059 -> m1_49  [key=2, style=dotted];
m1_4060 -> m1_4055  [color=blue, key=0, style=bold];
m1_1991 -> m1_1992  [key=0, style=solid];
m1_1992 -> m1_1993  [key=0, style=solid];
m1_1992 -> m1_832  [key=2, style=dotted];
m1_1993 -> m1_1991  [color=blue, key=0, style=bold];
m1_3688 -> m1_3689  [key=0, style=solid];
m1_3689 -> m1_3690  [key=0, style=solid];
m1_3689 -> m1_3696  [key=2, style=dotted];
m1_3690 -> m1_3691  [key=0, style=solid];
m1_3690 -> m1_129  [key=2, style=dotted];
m1_3690 -> m1_3692  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3691 -> m1_3692  [key=0, style=solid];
m1_3691 -> m1_24  [key=2, style=dotted];
m1_3692 -> m1_3693  [key=0, style=solid];
m1_3692 -> m1_49  [key=2, style=dotted];
m1_3692 -> m1_3694  [color=darkseagreen4, key=1, label=tuple2, style=dashed];
m1_3693 -> m1_3694  [key=0, style=solid];
m1_3693 -> m1_24  [key=2, style=dotted];
m1_3694 -> m1_3695  [key=0, style=solid];
m1_3694 -> m1_24  [key=2, style=dotted];
m1_3695 -> m1_3688  [color=blue, key=0, style=bold];
m1_3323 -> m1_3324  [key=0, style=solid];
m1_3324 -> m1_3325  [key=0, style=solid];
m1_3325 -> m1_3323  [color=blue, key=0, style=bold];
m1_2062 -> m1_2064  [key=0, style=solid];
m1_2064 -> m1_2065  [key=0, style=solid];
m1_2065 -> m1_2062  [color=blue, key=0, style=bold];
m1_2714 -> m1_2715  [key=0, style=solid];
m1_2715 -> m1_2716  [key=0, style=solid];
m1_2715 -> m1_49  [key=2, style=dotted];
m1_2716 -> m1_2717  [key=0, style=solid];
m1_2716 -> m1_24  [key=2, style=dotted];
m1_2717 -> m1_2714  [color=blue, key=0, style=bold];
m1_3641 -> m1_3642  [key=0, style=solid];
m1_3642 -> m1_3643  [key=0, style=solid];
m1_3643 -> m1_3641  [color=blue, key=0, style=bold];
m1_335 -> m1_336  [key=0, style=solid];
m1_336 -> m1_337  [key=0, style=solid];
m1_336 -> m1_49  [key=2, style=dotted];
m1_336 -> m1_338  [color=darkseagreen4, key=1, label=otc, style=dashed];
m1_336 -> m1_339  [color=darkseagreen4, key=1, label=otc, style=dashed];
m1_336 -> m1_340  [color=darkseagreen4, key=1, label=otc, style=dashed];
m1_336 -> m1_341  [color=darkseagreen4, key=1, label=otc, style=dashed];
m1_337 -> m1_338  [key=0, style=solid];
m1_337 -> m1_152  [key=2, style=dotted];
m1_338 -> m1_339  [key=0, style=solid];
m1_338 -> m1_24  [key=2, style=dotted];
m1_339 -> m1_340  [key=0, style=solid];
m1_339 -> m1_24  [key=2, style=dotted];
m1_340 -> m1_341  [key=0, style=solid];
m1_340 -> m1_24  [key=2, style=dotted];
m1_341 -> m1_342  [key=0, style=solid];
m1_341 -> m1_152  [key=2, style=dotted];
m1_342 -> m1_335  [color=blue, key=0, style=bold];
m1_2616 -> m1_2617  [key=0, style=solid];
m1_2617 -> m1_2618  [key=0, style=solid];
m1_2617 -> m1_2617  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_2618 -> m1_2619  [key=0, style=solid];
m1_2618 -> m1_16  [key=2, style=dotted];
m1_2618 -> m1_373  [key=2, style=dotted];
m1_2618 -> m1_2621  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_2619 -> m1_2620  [key=0, style=solid];
m1_2621 -> m1_2622  [key=0, style=solid];
m1_2621 -> m1_20  [key=2, style=dotted];
m1_2620 -> m1_2621  [key=0, style=solid];
m1_2620 -> m1_19  [key=2, style=dotted];
m1_2622 -> m1_2623  [key=0, style=solid];
m1_2622 -> m1_24  [key=2, style=dotted];
m1_2623 -> m1_2616  [color=blue, key=0, style=bold];
m1_2550 -> m1_2551  [key=0, style=solid];
m1_2551 -> m1_2552  [key=0, style=solid];
m1_2551 -> m1_2560  [key=2, style=dotted];
m1_2551 -> m1_2561  [key=2, style=dotted];
m1_2551 -> m1_954  [key=2, style=dotted];
m1_2551 -> m1_1110  [key=2, style=dotted];
m1_2551 -> m1_129  [key=2, style=dotted];
m1_2551 -> m1_2553  [color=darkseagreen4, key=1, label=serializeObject, style=dashed];
m1_2552 -> m1_2553  [key=0, style=solid];
m1_2552 -> m1_24  [key=2, style=dotted];
m1_2553 -> m1_2554  [key=0, style=solid];
m1_2553 -> m1_16  [key=2, style=dotted];
m1_2553 -> m1_373  [key=2, style=dotted];
m1_2553 -> m1_2556  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_2554 -> m1_2555  [key=0, style=solid];
m1_2556 -> m1_2557  [key=0, style=solid];
m1_2556 -> m1_20  [key=2, style=dotted];
m1_2556 -> m1_2558  [color=darkseagreen4, key=1, label=deserializeObject, style=dashed];
m1_2555 -> m1_2556  [key=0, style=solid];
m1_2555 -> m1_19  [key=2, style=dotted];
m1_2557 -> m1_2558  [key=0, style=solid];
m1_2557 -> m1_1110  [key=2, style=dotted];
m1_2557 -> m1_24  [key=2, style=dotted];
m1_2558 -> m1_2559  [key=0, style=solid];
m1_2558 -> m1_954  [key=2, style=dotted];
m1_2558 -> m1_24  [key=2, style=dotted];
m1_2559 -> m1_2550  [color=blue, key=0, style=bold];
m1_2788 -> m1_2789  [key=0, style=solid];
m1_2789 -> m1_2790  [key=0, style=solid];
m1_2789 -> m1_2792  [key=2, style=dotted];
m1_2789 -> m1_129  [key=2, style=dotted];
m1_2790 -> m1_2791  [key=0, style=solid];
m1_2790 -> m1_49  [key=2, style=dotted];
m1_2791 -> m1_2788  [color=blue, key=0, style=bold];
m1_860 -> m1_861  [key=0, style=solid];
m1_861 -> m1_862  [key=0, style=solid];
m1_861 -> m1_869  [key=2, style=dotted];
m1_861 -> m1_863  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m1_861 -> m1_864  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m1_861 -> m1_865  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m1_861 -> m1_866  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m1_862 -> m1_863  [key=0, style=solid];
m1_863 -> m1_864  [key=0, style=solid];
m1_864 -> m1_865  [key=0, style=solid];
m1_865 -> m1_866  [key=0, style=solid];
m1_866 -> m1_867  [key=0, style=solid];
m1_866 -> m1_870  [key=2, style=dotted];
m1_867 -> m1_868  [key=0, style=solid];
m1_867 -> m1_42  [key=2, style=dotted];
m1_868 -> m1_860  [color=blue, key=0, style=bold];
m1_3722 -> m1_3723  [key=0, style=solid];
m1_3723 -> m1_3724  [key=0, style=solid];
m1_3723 -> m1_3726  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3723 -> m1_3729  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3723 -> m1_3723  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_3724 -> m1_3725  [key=0, style=solid];
m1_3724 -> m1_49  [key=2, style=dotted];
m1_3726 -> m1_3727  [key=0, style=solid];
m1_3726 -> m1_60  [key=2, style=dotted];
m1_3726 -> m1_3728  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_3725 -> m1_3726  [key=0, style=solid];
m1_3725 -> m1_2357  [key=2, style=dotted];
m1_3725 -> m1_24  [key=2, style=dotted];
m1_3727 -> m1_3722  [color=blue, key=0, style=bold];
m1_612 -> m1_613  [key=0, style=solid];
m1_613 -> m1_614  [key=0, style=solid];
m1_613 -> m1_673  [key=2, style=dotted];
m1_613 -> m1_674  [key=2, style=dotted];
m1_613 -> m1_19  [key=2, style=dotted];
m1_613 -> m1_615  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_616  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_617  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_618  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_619  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_620  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_621  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_622  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_624  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_625  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_626  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_627  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_628  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_629  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_630  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_631  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_632  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_633  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_634  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_635  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_636  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_637  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_638  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_639  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_640  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_641  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_642  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_643  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_644  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_645  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_646  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_647  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_648  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_649  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_650  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_651  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_652  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_653  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_654  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_655  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_656  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_657  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_658  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_659  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_661  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_662  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_663  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_664  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_666  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_667  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_668  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_669  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_670  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_613 -> m1_671  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_614 -> m1_615  [key=0, style=solid];
m1_614 -> m1_536  [key=2, style=dotted];
m1_614 -> m1_616  [color=darkseagreen4, key=1, label=customBinder, style=dashed];
m1_615 -> m1_616  [key=0, style=solid];
m1_616 -> m1_617  [key=0, style=solid];
m1_616 -> m1_24  [key=2, style=dotted];
m1_617 -> m1_618  [key=0, style=solid];
m1_618 -> m1_619  [key=0, style=solid];
m1_618 -> m1_24  [key=2, style=dotted];
m1_619 -> m1_620  [key=0, style=solid];
m1_620 -> m1_621  [key=0, style=solid];
m1_620 -> m1_24  [key=2, style=dotted];
m1_621 -> m1_622  [key=0, style=solid];
m1_621 -> m1_537  [key=2, style=dotted];
m1_622 -> m1_623  [key=0, style=solid];
m1_622 -> m1_537  [key=2, style=dotted];
m1_622 -> m1_24  [key=2, style=dotted];
m1_624 -> m1_625  [key=0, style=solid];
m1_625 -> m1_626  [key=0, style=solid];
m1_625 -> m1_24  [key=2, style=dotted];
m1_626 -> m1_627  [key=0, style=solid];
m1_626 -> m1_235  [key=2, style=dotted];
m1_626 -> m1_539  [key=2, style=dotted];
m1_627 -> m1_628  [key=0, style=solid];
m1_627 -> m1_24  [key=2, style=dotted];
m1_628 -> m1_629  [key=0, style=solid];
m1_628 -> m1_540  [key=2, style=dotted];
m1_629 -> m1_630  [key=0, style=solid];
m1_629 -> m1_541  [key=2, style=dotted];
m1_629 -> m1_24  [key=2, style=dotted];
m1_630 -> m1_631  [key=0, style=solid];
m1_631 -> m1_632  [key=0, style=solid];
m1_631 -> m1_24  [key=2, style=dotted];
m1_632 -> m1_633  [key=0, style=solid];
m1_633 -> m1_634  [key=0, style=solid];
m1_633 -> m1_24  [key=2, style=dotted];
m1_634 -> m1_635  [key=0, style=solid];
m1_635 -> m1_636  [key=0, style=solid];
m1_635 -> m1_24  [key=2, style=dotted];
m1_636 -> m1_637  [key=0, style=solid];
m1_637 -> m1_638  [key=0, style=solid];
m1_637 -> m1_24  [key=2, style=dotted];
m1_638 -> m1_639  [key=0, style=solid];
m1_639 -> m1_640  [key=0, style=solid];
m1_639 -> m1_24  [key=2, style=dotted];
m1_640 -> m1_641  [key=0, style=solid];
m1_641 -> m1_642  [key=0, style=solid];
m1_641 -> m1_24  [key=2, style=dotted];
m1_642 -> m1_643  [key=0, style=solid];
m1_643 -> m1_644  [key=0, style=solid];
m1_643 -> m1_24  [key=2, style=dotted];
m1_644 -> m1_645  [key=0, style=solid];
m1_645 -> m1_646  [key=0, style=solid];
m1_645 -> m1_24  [key=2, style=dotted];
m1_646 -> m1_647  [key=0, style=solid];
m1_647 -> m1_648  [key=0, style=solid];
m1_647 -> m1_24  [key=2, style=dotted];
m1_648 -> m1_649  [key=0, style=solid];
m1_649 -> m1_650  [key=0, style=solid];
m1_649 -> m1_24  [key=2, style=dotted];
m1_650 -> m1_651  [key=0, style=solid];
m1_651 -> m1_652  [key=0, style=solid];
m1_651 -> m1_24  [key=2, style=dotted];
m1_652 -> m1_653  [key=0, style=solid];
m1_653 -> m1_654  [key=0, style=solid];
m1_653 -> m1_24  [key=2, style=dotted];
m1_654 -> m1_655  [key=0, style=solid];
m1_655 -> m1_656  [key=0, style=solid];
m1_655 -> m1_24  [key=2, style=dotted];
m1_656 -> m1_657  [key=0, style=solid];
m1_657 -> m1_658  [key=0, style=solid];
m1_657 -> m1_24  [key=2, style=dotted];
m1_658 -> m1_659  [key=0, style=solid];
m1_659 -> m1_660  [key=0, style=solid];
m1_659 -> m1_24  [key=2, style=dotted];
m1_661 -> m1_662  [key=0, style=solid];
m1_662 -> m1_663  [key=0, style=solid];
m1_662 -> m1_24  [key=2, style=dotted];
m1_663 -> m1_664  [key=0, style=solid];
m1_664 -> m1_665  [key=0, style=solid];
m1_664 -> m1_24  [key=2, style=dotted];
m1_666 -> m1_667  [key=0, style=solid];
m1_667 -> m1_668  [key=0, style=solid];
m1_667 -> m1_24  [key=2, style=dotted];
m1_668 -> m1_669  [key=0, style=solid];
m1_669 -> m1_670  [key=0, style=solid];
m1_669 -> m1_24  [key=2, style=dotted];
m1_670 -> m1_671  [key=0, style=solid];
m1_671 -> m1_672  [key=0, style=solid];
m1_671 -> m1_24  [key=2, style=dotted];
m1_623 -> m1_624  [key=0, style=solid];
m1_623 -> m1_538  [key=2, style=dotted];
m1_623 -> m1_625  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m1_660 -> m1_661  [key=0, style=solid];
m1_660 -> m1_542  [key=2, style=dotted];
m1_660 -> m1_662  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m1_665 -> m1_666  [key=0, style=solid];
m1_665 -> m1_543  [key=2, style=dotted];
m1_665 -> m1_667  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m1_672 -> m1_612  [color=blue, key=0, style=bold];
m1_3111 -> m1_3112  [key=0, style=solid];
m1_3112 -> m1_3113  [key=0, style=solid];
m1_3112 -> m1_3116  [key=2, style=dotted];
m1_3112 -> m1_3117  [key=2, style=dotted];
m1_3113 -> m1_3114  [key=0, style=solid];
m1_3113 -> m1_41  [key=2, style=dotted];
m1_3114 -> m1_3115  [key=0, style=solid];
m1_3114 -> m1_42  [key=2, style=dotted];
m1_3115 -> m1_3111  [color=blue, key=0, style=bold];
m1_2762 -> m1_2763  [key=0, style=solid];
m1_2763 -> m1_2764  [key=0, style=solid];
m1_2763 -> m1_2767  [key=2, style=dotted];
m1_2764 -> m1_2765  [key=0, style=solid];
m1_2764 -> m1_41  [key=2, style=dotted];
m1_2765 -> m1_2766  [key=0, style=solid];
m1_2765 -> m1_24  [key=2, style=dotted];
m1_2766 -> m1_2762  [color=blue, key=0, style=bold];
m1_2089 -> m1_2090  [key=0, style=solid];
m1_2089 -> m1_2091  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m1_2089 -> m1_2092  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m1_2090 -> m1_2091  [key=0, style=solid];
m1_2090 -> m1_2092  [key=0, style=solid];
m1_2091 -> m1_2094  [key=0, style=solid];
m1_2091 -> m1_2095  [key=2, style=dotted];
m1_2091 -> n72  [key=2, style=dotted];
m1_2092 -> m1_2093  [key=0, style=solid];
m1_2092 -> m1_2094  [key=0, style=solid];
m1_2093 -> m1_2092  [key=0, style=solid];
m1_2093 -> m1_832  [key=2, style=dotted];
m1_2093 -> m1_2093  [color=darkseagreen4, key=1, label=entry, style=dashed];
m1_2094 -> m1_2089  [color=blue, key=0, style=bold];
m1_2866 -> m1_2867  [key=0, style=solid];
m1_2867 -> m1_2868  [key=0, style=solid];
m1_2867 -> m1_2395  [key=2, style=dotted];
m1_2868 -> m1_2866  [color=blue, key=0, style=bold];
m1_3735 -> m1_3736  [key=0, style=solid];
m1_3736 -> m1_3737  [key=0, style=solid];
m1_3736 -> m1_3731  [key=2, style=dotted];
m1_3736 -> m1_3741  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_3737 -> m1_3738  [key=0, style=solid];
m1_3737 -> m1_129  [key=2, style=dotted];
m1_3741 -> m1_3742  [key=0, style=solid];
m1_3741 -> m1_175  [key=2, style=dotted];
m1_3741 -> m1_176  [key=2, style=dotted];
m1_3738 -> m1_3739  [key=0, style=solid];
m1_3738 -> m1_24  [key=2, style=dotted];
m1_3739 -> m1_3740  [key=0, style=solid];
m1_3739 -> m1_1865  [key=2, style=dotted];
m1_3739 -> m1_3741  [color=darkseagreen4, key=1, label=r, style=dashed];
m1_3740 -> m1_3741  [key=0, style=solid];
m1_3742 -> m1_3743  [key=0, style=solid];
m1_3742 -> m1_24  [key=2, style=dotted];
m1_3743 -> m1_3735  [color=blue, key=0, style=bold];
m1_1443 -> m1_1444  [key=0, style=solid];
m1_1444 -> m1_1445  [key=0, style=solid];
m1_1444 -> m1_1444  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1445 -> m1_1446  [key=0, style=solid];
m1_1445 -> m1_49  [key=2, style=dotted];
m1_1445 -> m1_1447  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_1445 -> m1_1448  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_1446 -> m1_1447  [key=0, style=solid];
m1_1446 -> m1_24  [key=2, style=dotted];
m1_1447 -> m1_1448  [key=0, style=solid];
m1_1447 -> m1_24  [key=2, style=dotted];
m1_1448 -> m1_1449  [key=0, style=solid];
m1_1448 -> m1_24  [key=2, style=dotted];
m1_1449 -> m1_1443  [color=blue, key=0, style=bold];
m1_3418 -> m1_3419  [key=0, style=solid];
m1_3419 -> m1_3420  [key=0, style=solid];
m1_3419 -> m1_196  [key=2, style=dotted];
m1_3419 -> m1_376  [key=2, style=dotted];
m1_3420 -> m1_3421  [key=0, style=solid];
m1_3420 -> m1_41  [key=2, style=dotted];
m1_3420 -> m1_3422  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3421 -> m1_3422  [key=0, style=solid];
m1_3421 -> m1_42  [key=2, style=dotted];
m1_3422 -> m1_3423  [key=0, style=solid];
m1_3422 -> m1_49  [key=2, style=dotted];
m1_3422 -> m1_3424  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m1_3422 -> m1_3425  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m1_3423 -> m1_3424  [key=0, style=solid];
m1_3423 -> m1_24  [key=2, style=dotted];
m1_3424 -> m1_3425  [key=0, style=solid];
m1_3424 -> m1_376  [key=2, style=dotted];
m1_3424 -> m1_24  [key=2, style=dotted];
m1_3425 -> m1_3426  [key=0, style=solid];
m1_3425 -> m1_376  [key=2, style=dotted];
m1_3425 -> m1_24  [key=2, style=dotted];
m1_3426 -> m1_3418  [color=blue, key=0, style=bold];
m1_3583 -> m1_3584  [key=0, style=solid];
m1_3584 -> m1_3585  [key=0, style=solid];
m1_3584 -> m1_3587  [key=2, style=dotted];
m1_3584 -> m1_175  [key=2, style=dotted];
m1_3584 -> m1_538  [key=2, style=dotted];
m1_3584 -> m1_198  [key=2, style=dotted];
m1_3585 -> m1_3586  [key=0, style=solid];
m1_3585 -> m1_42  [key=2, style=dotted];
m1_3586 -> m1_3583  [color=blue, key=0, style=bold];
m1_2406 -> m1_2407  [key=0, style=solid];
m1_2407 -> m1_2408  [key=0, style=solid];
m1_2407 -> m1_2395  [key=2, style=dotted];
m1_2408 -> m1_2406  [color=blue, key=0, style=bold];
m1_1804 -> m1_1805  [key=0, style=solid];
m1_1805 -> m1_1806  [key=0, style=solid];
m1_1805 -> m1_1809  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1805 -> m1_1777  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1806 -> m1_1807  [key=0, style=solid];
m1_1806 -> m1_60  [key=2, style=dotted];
m1_1806 -> m1_1808  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1807 -> m1_1804  [color=blue, key=0, style=bold];
m1_2154 -> m1_2155  [key=0, style=solid];
m1_2154 -> m1_2156  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_2154 -> m1_2157  [color=darkseagreen4, key=1, label="System.DateTimeOffset", style=dashed];
m1_2154 -> m1_2158  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.Person", style=dashed];
m1_2155 -> m1_2156  [key=0, style=solid];
m1_2156 -> m1_2157  [key=0, style=solid];
m1_2157 -> m1_2158  [key=0, style=solid];
m1_2158 -> m1_2159  [key=0, style=solid];
m1_2159 -> m1_2160  [key=0, style=solid];
m1_2159 -> m1_1306  [key=2, style=dotted];
m1_2160 -> m1_2154  [color=blue, key=0, style=bold];
m1_791 -> m1_792  [key=0, style=solid];
m1_792 -> m1_793  [key=0, style=solid];
m1_792 -> m1_786  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_793 -> m1_794  [key=0, style=solid];
m1_793 -> m1_49  [key=2, style=dotted];
m1_793 -> m1_795  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m1_794 -> m1_795  [key=0, style=solid];
m1_794 -> m1_797  [key=2, style=dotted];
m1_795 -> m1_796  [key=0, style=solid];
m1_795 -> m1_24  [key=2, style=dotted];
m1_796 -> m1_791  [color=blue, key=0, style=bold];
m1_2097 -> m1_2098  [key=0, style=solid];
m1_2098 -> m1_2099  [key=0, style=solid];
m1_2098 -> m1_322  [key=2, style=dotted];
m1_2099 -> m1_2097  [color=blue, key=0, style=bold];
m1_2467 -> m1_2468  [key=0, style=solid];
m1_2468 -> m1_2469  [key=0, style=solid];
m1_2468 -> m1_2468  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_2469 -> m1_2470  [key=0, style=solid];
m1_2469 -> m1_175  [key=2, style=dotted];
m1_2469 -> m1_296  [key=2, style=dotted];
m1_2469 -> m1_2471  [color=darkseagreen4, key=1, label=dic, style=dashed];
m1_2470 -> m1_2471  [key=0, style=solid];
m1_2470 -> m1_375  [key=2, style=dotted];
m1_2470 -> m1_24  [key=2, style=dotted];
m1_2471 -> m1_2472  [key=0, style=solid];
m1_2471 -> m1_24  [key=2, style=dotted];
m1_2472 -> m1_2467  [color=blue, key=0, style=bold];
m1_2608 -> m1_2609  [key=0, style=solid];
m1_2609 -> m1_2610  [key=0, style=solid];
m1_2609 -> m1_49  [key=2, style=dotted];
m1_2610 -> m1_2611  [key=0, style=solid];
m1_2610 -> m1_24  [key=2, style=dotted];
m1_2611 -> m1_2608  [color=blue, key=0, style=bold];
m1_2344 -> m1_2345  [key=0, style=solid];
m1_2345 -> m1_2346  [key=0, style=solid];
m1_2345 -> m1_2356  [key=2, style=dotted];
m1_2345 -> m1_2347  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m1_2345 -> m1_2348  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m1_2345 -> m1_2352  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m1_2345 -> m1_2353  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m1_2346 -> m1_2347  [key=0, style=solid];
m1_2346 -> m1_2357  [key=2, style=dotted];
m1_2347 -> m1_2348  [key=0, style=solid];
m1_2347 -> m1_2357  [key=2, style=dotted];
m1_2348 -> m1_2349  [key=0, style=solid];
m1_2348 -> m1_41  [key=2, style=dotted];
m1_2348 -> m1_2350  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_2348 -> m1_2351  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_2352 -> m1_2353  [key=0, style=solid];
m1_2352 -> m1_2358  [key=2, style=dotted];
m1_2352 -> m1_24  [key=2, style=dotted];
m1_2353 -> m1_2354  [key=0, style=solid];
m1_2353 -> m1_2358  [key=2, style=dotted];
m1_2353 -> m1_24  [key=2, style=dotted];
m1_2349 -> m1_2350  [key=0, style=solid];
m1_2349 -> m1_2349  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m1_2350 -> m1_2351  [key=0, style=solid];
m1_2350 -> m1_42  [key=2, style=dotted];
m1_2351 -> m1_2352  [key=0, style=solid];
m1_2351 -> m1_49  [key=2, style=dotted];
m1_2351 -> m1_2353  [color=darkseagreen4, key=1, label=newTestObject, style=dashed];
m1_2351 -> m1_2354  [color=darkseagreen4, key=1, label=newTestObject, style=dashed];
m1_2354 -> m1_2355  [key=0, style=solid];
m1_2354 -> m1_152  [key=2, style=dotted];
m1_2355 -> m1_2344  [color=blue, key=0, style=bold];
m1_999 -> m1_1000  [key=0, style=solid];
m1_1000 -> m1_1001  [key=0, style=solid];
m1_1000 -> m1_1000  [color=darkorchid, key=3, label="Local variable string value", style=bold];
m1_1001 -> m1_1002  [key=0, style=solid];
m1_1001 -> m1_936  [key=2, style=dotted];
m1_1001 -> m1_1003  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_1002 -> m1_1003  [key=0, style=solid];
m1_1002 -> m1_998  [key=2, style=dotted];
m1_1002 -> m1_24  [key=2, style=dotted];
m1_1003 -> m1_1004  [key=0, style=solid];
m1_1003 -> m1_998  [key=2, style=dotted];
m1_1003 -> m1_42  [key=2, style=dotted];
m1_1004 -> m1_999  [color=blue, key=0, style=bold];
m1_2103 -> m1_2104  [key=0, style=solid];
m1_2104 -> m1_2105  [key=0, style=solid];
m1_2104 -> m1_2106  [key=2, style=dotted];
m1_2105 -> m1_2103  [color=blue, key=0, style=bold];
m1_1353 -> m1_1354  [key=0, style=solid];
m1_1354 -> m1_1355  [key=0, style=solid];
m1_1354 -> m1_1363  [key=2, style=dotted];
m1_1354 -> m1_1356  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_1354 -> m1_1357  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_1355 -> m1_1356  [key=0, style=solid];
m1_1355 -> m1_1287  [key=2, style=dotted];
m1_1356 -> m1_1357  [key=0, style=solid];
m1_1356 -> m1_1287  [key=2, style=dotted];
m1_1357 -> m1_1358  [key=0, style=solid];
m1_1357 -> m1_1295  [key=2, style=dotted];
m1_1357 -> m1_1296  [key=2, style=dotted];
m1_1357 -> m1_1359  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1358 -> m1_1359  [key=0, style=solid];
m1_1358 -> m1_24  [key=2, style=dotted];
m1_1359 -> m1_1360  [key=0, style=solid];
m1_1359 -> m1_1295  [key=2, style=dotted];
m1_1359 -> m1_236  [key=2, style=dotted];
m1_1359 -> m1_1361  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_1360 -> m1_1361  [key=0, style=solid];
m1_1360 -> m1_24  [key=2, style=dotted];
m1_1361 -> m1_1362  [key=0, style=solid];
m1_1361 -> m1_24  [key=2, style=dotted];
m1_1362 -> m1_1353  [color=blue, key=0, style=bold];
m1_1866 -> m1_1867  [key=0, style=solid];
m1_1867 -> m1_1868  [key=0, style=solid];
m1_1867 -> m1_60  [key=2, style=dotted];
m1_1867 -> m1_1869  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1868 -> m1_1866  [color=blue, key=0, style=bold];
m1_2657 -> m1_2658  [key=0, style=solid];
m1_2658 -> m1_2657  [color=blue, key=0, style=bold];
m1_2286 -> m1_2333  [key=0, style=solid];
m1_2286 -> m1_2334  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_2286 -> m1_2335  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_2286 -> m1_2336  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_2286 -> m1_2337  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_2286 -> m1_2338  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_2286 -> m1_2339  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_2286 -> m1_2340  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_2286 -> m1_2341  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_2286 -> m1_2342  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_2333 -> m1_2334  [key=0, style=solid];
m1_2334 -> m1_2335  [key=0, style=solid];
m1_2335 -> m1_2336  [key=0, style=solid];
m1_2336 -> m1_2337  [key=0, style=solid];
m1_2337 -> m1_2338  [key=0, style=solid];
m1_2338 -> m1_2339  [key=0, style=solid];
m1_2339 -> m1_2340  [key=0, style=solid];
m1_2340 -> m1_2341  [key=0, style=solid];
m1_2341 -> m1_2342  [key=0, style=solid];
m1_2342 -> m1_2343  [key=0, style=solid];
m1_2343 -> m1_2286  [color=blue, key=0, style=bold];
m1_848 -> m1_849  [key=0, style=solid];
m1_849 -> m1_850  [key=0, style=solid];
m1_849 -> m1_852  [key=2, style=dotted];
m1_850 -> m1_851  [key=0, style=solid];
m1_850 -> m1_830  [key=2, style=dotted];
m1_850 -> m1_853  [key=2, style=dotted];
m1_851 -> m1_848  [color=blue, key=0, style=bold];
m1_3339 -> m1_3340  [key=0, style=solid];
m1_3340 -> m1_3341  [key=0, style=solid];
m1_3340 -> m1_834  [key=2, style=dotted];
m1_3340 -> m1_3345  [color=darkseagreen4, key=1, label=ms, style=dashed];
m1_3341 -> m1_3342  [key=0, style=solid];
m1_3341 -> m1_3352  [key=2, style=dotted];
m1_3341 -> m1_3343  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_3341 -> m1_3344  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_3345 -> m1_3346  [key=0, style=solid];
m1_3345 -> m1_916  [key=2, style=dotted];
m1_3342 -> m1_3343  [key=0, style=solid];
m1_3342 -> m1_3353  [key=2, style=dotted];
m1_3343 -> m1_3344  [key=0, style=solid];
m1_3343 -> m1_3354  [key=2, style=dotted];
m1_3344 -> m1_3345  [key=0, style=solid];
m1_3344 -> m1_3355  [key=2, style=dotted];
m1_3346 -> m1_3347  [key=0, style=solid];
m1_3346 -> m1_3356  [key=2, style=dotted];
m1_3346 -> m1_1075  [key=2, style=dotted];
m1_3347 -> m1_3348  [key=0, style=solid];
m1_3347 -> m1_3357  [key=2, style=dotted];
m1_3347 -> m1_3350  [color=darkseagreen4, key=1, label=a, style=dashed];
m1_3348 -> m1_3349  [key=0, style=solid];
m1_3350 -> m1_3351  [key=0, style=solid];
m1_3350 -> m1_770  [key=2, style=dotted];
m1_3350 -> m1_42  [key=2, style=dotted];
m1_3349 -> m1_3350  [key=0, style=solid];
m1_3349 -> m1_375  [key=2, style=dotted];
m1_3349 -> m1_24  [key=2, style=dotted];
m1_3351 -> m1_3339  [color=blue, key=0, style=bold];
m1_1377 -> m1_1378  [key=0, style=solid];
m1_1378 -> m1_1379  [key=0, style=solid];
m1_1379 -> m1_1380  [key=0, style=solid];
m1_1379 -> m1_129  [key=2, style=dotted];
m1_1380 -> m1_1381  [key=0, style=solid];
m1_1380 -> m1_24  [key=2, style=dotted];
m1_1381 -> m1_1382  [key=0, style=solid];
m1_1381 -> m1_129  [key=2, style=dotted];
m1_1382 -> m1_1383  [key=0, style=solid];
m1_1382 -> m1_24  [key=2, style=dotted];
m1_1383 -> m1_1377  [color=blue, key=0, style=bold];
m1_1716 -> m1_1717  [key=0, style=solid];
m1_1717 -> m1_1718  [key=0, style=solid];
m1_1717 -> m1_1721  [key=2, style=dotted];
m1_1717 -> m1_134  [key=2, style=dotted];
m1_1718 -> m1_1719  [key=0, style=solid];
m1_1718 -> m1_41  [key=2, style=dotted];
m1_1719 -> m1_1720  [key=0, style=solid];
m1_1719 -> m1_42  [key=2, style=dotted];
m1_1720 -> m1_1716  [color=blue, key=0, style=bold];
m1_2779 -> m1_2780  [key=0, style=solid];
m1_2780 -> m1_2781  [key=0, style=solid];
m1_2781 -> m1_2779  [color=blue, key=0, style=bold];
m1_3087 -> m1_3088  [key=0, style=solid];
m1_3088 -> m1_3089  [key=0, style=solid];
m1_3088 -> m1_3088  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_3089 -> m1_3090  [key=0, style=solid];
m1_3089 -> m1_175  [key=2, style=dotted];
m1_3089 -> m1_296  [key=2, style=dotted];
m1_3089 -> m1_3091  [color=darkseagreen4, key=1, label=value, style=dashed];
m1_3090 -> m1_3091  [key=0, style=solid];
m1_3090 -> m1_797  [key=2, style=dotted];
m1_3091 -> m1_3092  [key=0, style=solid];
m1_3091 -> m1_3079  [key=2, style=dotted];
m1_3091 -> m1_3011  [key=2, style=dotted];
m1_3092 -> m1_3087  [color=blue, key=0, style=bold];
m1_3801 -> m1_3802  [key=0, style=solid];
m1_3802 -> m1_3803  [key=0, style=solid];
m1_3802 -> m1_3802  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_3803 -> m1_3804  [key=0, style=solid];
m1_3803 -> m1_49  [key=2, style=dotted];
m1_3804 -> m1_3805  [key=0, style=solid];
m1_3804 -> m1_24  [key=2, style=dotted];
m1_3805 -> m1_3801  [color=blue, key=0, style=bold];
m1_2225 -> m1_2226  [key=0, style=solid];
m1_2226 -> m1_2227  [key=0, style=solid];
m1_2226 -> m1_1512  [key=2, style=dotted];
m1_2226 -> m1_2228  [color=darkseagreen4, key=1, label=person, style=dashed];
m1_2226 -> m1_2229  [color=darkseagreen4, key=1, label=person, style=dashed];
m1_2226 -> m1_2230  [color=darkseagreen4, key=1, label=person, style=dashed];
m1_2226 -> m1_2234  [color=darkseagreen4, key=1, label=person, style=dashed];
m1_2227 -> m1_2228  [key=0, style=solid];
m1_2227 -> m1_1102  [key=2, style=dotted];
m1_2228 -> m1_2229  [key=0, style=solid];
m1_2229 -> m1_2230  [key=0, style=solid];
m1_2230 -> m1_2231  [key=0, style=solid];
m1_2234 -> m1_2235  [key=0, style=solid];
m1_2234 -> m1_2154  [key=2, style=dotted];
m1_2231 -> m1_2232  [key=0, style=solid];
m1_2231 -> m1_376  [key=2, style=dotted];
m1_2231 -> m1_1110  [key=2, style=dotted];
m1_2231 -> m1_2234  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m1_2231 -> m1_2240  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m1_2232 -> m1_2233  [key=0, style=solid];
m1_2240 -> m1_2241  [key=0, style=solid];
m1_2240 -> m1_24  [key=2, style=dotted];
m1_2233 -> m1_2234  [key=0, style=solid];
m1_2233 -> m1_2236  [color=darkseagreen4, key=1, label=dateTimeOffsetText, style=dashed];
m1_2236 -> m1_2237  [key=0, style=solid];
m1_2236 -> m1_42  [key=2, style=dotted];
m1_2235 -> m1_2236  [key=0, style=solid];
m1_2235 -> m1_41  [key=2, style=dotted];
m1_2235 -> m1_2237  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_2237 -> m1_2238  [key=0, style=solid];
m1_2237 -> m1_49  [key=2, style=dotted];
m1_2237 -> m1_2239  [color=darkseagreen4, key=1, label=o2, style=dashed];
m1_2237 -> m1_2240  [color=darkseagreen4, key=1, label=o2, style=dashed];
m1_2237 -> m1_2241  [color=darkseagreen4, key=1, label=o2, style=dashed];
m1_2237 -> m1_2242  [color=darkseagreen4, key=1, label=o2, style=dashed];
m1_2237 -> m1_2243  [color=darkseagreen4, key=1, label=o2, style=dashed];
m1_2238 -> m1_2239  [key=0, style=solid];
m1_2238 -> m1_24  [key=2, style=dotted];
m1_2239 -> m1_2240  [key=0, style=solid];
m1_2239 -> m1_24  [key=2, style=dotted];
m1_2241 -> m1_2242  [key=0, style=solid];
m1_2241 -> m1_24  [key=2, style=dotted];
m1_2242 -> m1_2243  [key=0, style=solid];
m1_2242 -> m1_24  [key=2, style=dotted];
m1_2243 -> m1_2244  [key=0, style=solid];
m1_2243 -> m1_24  [key=2, style=dotted];
m1_2244 -> m1_2225  [color=blue, key=0, style=bold];
m1_3093 -> m1_3094  [key=0, style=solid];
m1_3094 -> m1_3095  [key=0, style=solid];
m1_3094 -> m1_3103  [key=2, style=dotted];
m1_3094 -> m1_3096  [color=darkseagreen4, key=1, label=b, style=dashed];
m1_3094 -> m1_3098  [color=darkseagreen4, key=1, label=b, style=dashed];
m1_3095 -> m1_3096  [key=0, style=solid];
m1_3096 -> m1_3097  [key=0, style=solid];
m1_3096 -> m1_3094  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.Tests.TestObjects.Aa a", style=bold];
m1_3098 -> m1_3099  [key=0, style=solid];
m1_3098 -> m1_129  [key=2, style=dotted];
m1_3098 -> m1_3100  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3097 -> m1_3098  [key=0, style=solid];
m1_3099 -> m1_3100  [key=0, style=solid];
m1_3099 -> m1_24  [key=2, style=dotted];
m1_3100 -> m1_3101  [key=0, style=solid];
m1_3100 -> m1_49  [key=2, style=dotted];
m1_3101 -> m1_3102  [key=0, style=solid];
m1_3101 -> m1_24  [key=2, style=dotted];
m1_3102 -> m1_3093  [color=blue, key=0, style=bold];
m1_1434 -> m1_1435  [key=0, style=solid];
m1_1435 -> m1_1436  [key=0, style=solid];
m1_1435 -> m1_1442  [key=2, style=dotted];
m1_1435 -> m1_1102  [key=2, style=dotted];
m1_1436 -> m1_1437  [key=0, style=solid];
m1_1436 -> m1_41  [key=2, style=dotted];
m1_1436 -> m1_1438  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1437 -> m1_1438  [key=0, style=solid];
m1_1437 -> m1_42  [key=2, style=dotted];
m1_1438 -> m1_1439  [key=0, style=solid];
m1_1438 -> m1_49  [key=2, style=dotted];
m1_1438 -> m1_1440  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_1439 -> m1_1440  [key=0, style=solid];
m1_1439 -> m1_24  [key=2, style=dotted];
m1_1440 -> m1_1441  [key=0, style=solid];
m1_1440 -> m1_1102  [key=2, style=dotted];
m1_1440 -> m1_24  [key=2, style=dotted];
m1_1441 -> m1_1434  [color=blue, key=0, style=bold];
m1_2827 -> m1_2828  [key=0, style=solid];
m1_2828 -> m1_2829  [key=0, style=solid];
m1_2829 -> m1_2830  [key=0, style=solid];
m1_2829 -> m1_134  [key=2, style=dotted];
m1_2830 -> m1_2827  [color=blue, key=0, style=bold];
m1_2037 -> m1_2038  [key=0, style=solid];
m1_2038 -> m1_2039  [key=0, style=solid];
m1_2038 -> m1_2042  [key=2, style=dotted];
m1_2039 -> m1_2040  [key=0, style=solid];
m1_2039 -> m1_41  [key=2, style=dotted];
m1_2040 -> m1_2041  [key=0, style=solid];
m1_2040 -> m1_42  [key=2, style=dotted];
m1_2041 -> m1_2037  [color=blue, key=0, style=bold];
m1_1608 -> m1_1609  [key=0, style=solid];
m1_1609 -> m1_1610  [key=0, style=solid];
m1_1610 -> m1_1611  [key=0, style=solid];
m1_1610 -> m1_60  [key=2, style=dotted];
m1_1610 -> m1_1612  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1611 -> m1_1608  [color=blue, key=0, style=bold];
m1_4194 -> m1_4195  [key=0, style=solid];
m1_4195 -> m1_4196  [key=0, style=solid];
m1_4196 -> m1_4197  [key=0, style=solid];
m1_4197 -> m1_4194  [color=blue, key=0, style=bold];
m1_4081 -> m1_4082  [key=0, style=solid];
m1_4082 -> m1_4083  [key=0, style=solid];
m1_4083 -> m1_4081  [color=blue, key=0, style=bold];
m1_1450 -> m1_1451  [key=0, style=solid];
m1_1451 -> m1_1452  [key=0, style=solid];
m1_1451 -> m1_1451  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1452 -> m1_1453  [key=0, style=solid];
m1_1452 -> m1_49  [key=2, style=dotted];
m1_1453 -> m1_1454  [key=0, style=solid];
m1_1453 -> m1_1456  [key=0, style=solid];
m1_1453 -> m1_21  [key=2, style=dotted];
m1_1454 -> m1_1455  [key=0, style=solid];
m1_1455 -> m1_1456  [key=0, style=solid];
m1_1455 -> m1_1457  [key=2, style=dotted];
m1_1455 -> m1_22  [key=2, style=dotted];
m1_1456 -> m1_1450  [color=blue, key=0, style=bold];
m1_3660 -> m1_3661  [key=0, style=solid];
m1_3661 -> m1_3662  [key=0, style=solid];
m1_3661 -> m1_540  [key=2, style=dotted];
m1_3661 -> m1_3663  [color=darkseagreen4, key=1, label=culture, style=dashed];
m1_3661 -> m1_3665  [color=darkseagreen4, key=1, label=culture, style=dashed];
m1_3662 -> m1_3663  [key=0, style=solid];
m1_3663 -> m1_3664  [key=0, style=solid];
m1_3665 -> m1_3666  [key=0, style=solid];
m1_3665 -> m1_175  [key=2, style=dotted];
m1_3665 -> m1_198  [key=2, style=dotted];
m1_3664 -> m1_3665  [key=0, style=solid];
m1_3664 -> m1_134  [key=2, style=dotted];
m1_3664 -> m1_1102  [key=2, style=dotted];
m1_3664 -> m1_376  [key=2, style=dotted];
m1_3664 -> m1_1110  [key=2, style=dotted];
m1_3666 -> m1_3667  [key=0, style=solid];
m1_3666 -> m1_42  [key=2, style=dotted];
m1_3667 -> m1_3660  [color=blue, key=0, style=bold];
m1_171 -> m1_172  [key=0, style=solid];
m1_172 -> m1_173  [key=0, style=solid];
m1_172 -> m1_170  [key=2, style=dotted];
m1_172 -> m1_175  [key=2, style=dotted];
m1_172 -> m1_176  [key=2, style=dotted];
m1_173 -> m1_174  [key=0, style=solid];
m1_173 -> m1_24  [key=2, style=dotted];
m1_174 -> m1_171  [color=blue, key=0, style=bold];
m1_4089 -> m1_4090  [key=0, style=solid];
m1_4090 -> m1_4091  [key=0, style=solid];
m1_4090 -> m1_2395  [key=2, style=dotted];
m1_4091 -> m1_4089  [color=blue, key=0, style=bold];
m1_2100 -> m1_2101  [key=0, style=solid];
m1_2100 -> m1_2147  [color=darkorchid, key=3, label="Parameter variable T value", style=bold];
m1_2101 -> m1_2102  [key=0, style=solid];
m1_2101 -> m1_832  [key=2, style=dotted];
m1_2102 -> m1_2100  [color=blue, key=0, style=bold];
m1_845 -> m1_846  [key=0, style=solid];
m1_846 -> m1_847  [key=0, style=solid];
m1_847 -> m1_845  [color=blue, key=0, style=bold];
m1_1913 -> m1_1914  [key=0, style=solid];
m1_1914 -> m1_1915  [key=0, style=solid];
m1_1914 -> m1_1926  [key=2, style=dotted];
m1_1914 -> m1_1916  [color=darkseagreen4, key=1, label=f, style=dashed];
m1_1914 -> m1_1917  [color=darkseagreen4, key=1, label=f, style=dashed];
m1_1914 -> m1_1918  [color=darkseagreen4, key=1, label=f, style=dashed];
m1_1915 -> m1_1916  [key=0, style=solid];
m1_1915 -> m1_1927  [key=2, style=dotted];
m1_1915 -> m1_1892  [key=2, style=dotted];
m1_1916 -> m1_1917  [key=0, style=solid];
m1_1916 -> m1_1927  [key=2, style=dotted];
m1_1916 -> m1_1892  [key=2, style=dotted];
m1_1917 -> m1_1918  [key=0, style=solid];
m1_1917 -> m1_1927  [key=2, style=dotted];
m1_1917 -> m1_1892  [key=2, style=dotted];
m1_1918 -> m1_1919  [key=0, style=solid];
m1_1918 -> m1_41  [key=2, style=dotted];
m1_1918 -> m1_1920  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1919 -> m1_1920  [key=0, style=solid];
m1_1919 -> m1_42  [key=2, style=dotted];
m1_1920 -> m1_1921  [key=0, style=solid];
m1_1920 -> m1_49  [key=2, style=dotted];
m1_1920 -> m1_1922  [color=darkseagreen4, key=1, label=newFoo, style=dashed];
m1_1920 -> m1_1923  [color=darkseagreen4, key=1, label=newFoo, style=dashed];
m1_1920 -> m1_1924  [color=darkseagreen4, key=1, label=newFoo, style=dashed];
m1_1921 -> m1_1922  [key=0, style=solid];
m1_1921 -> m1_24  [key=2, style=dotted];
m1_1922 -> m1_1923  [key=0, style=solid];
m1_1922 -> m1_24  [key=2, style=dotted];
m1_1923 -> m1_1924  [key=0, style=solid];
m1_1923 -> m1_24  [key=2, style=dotted];
m1_1924 -> m1_1925  [key=0, style=solid];
m1_1924 -> m1_24  [key=2, style=dotted];
m1_1925 -> m1_1913  [color=blue, key=0, style=bold];
m1_2193 -> m1_2194  [key=0, style=solid];
m1_2193 -> m1_2195  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_2193 -> m1_2196  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_2193 -> m1_2197  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_2193 -> m1_2198  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_2193 -> m1_2199  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_2193 -> m1_2200  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_2193 -> m1_2201  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_2193 -> m1_2202  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_2193 -> m1_2203  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_2193 -> m1_2204  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_2193 -> m1_2205  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_2193 -> m1_2206  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_2193 -> m1_2207  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_2193 -> m1_2208  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_2193 -> m1_2209  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_2193 -> m1_2210  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_2193 -> m1_2211  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_2194 -> m1_2195  [key=0, style=solid];
m1_2194 -> m1_702  [key=2, style=dotted];
m1_2195 -> m1_2196  [key=0, style=solid];
m1_2195 -> m1_703  [key=2, style=dotted];
m1_2196 -> m1_2197  [key=0, style=solid];
m1_2196 -> m1_702  [key=2, style=dotted];
m1_2197 -> m1_2198  [key=0, style=solid];
m1_2197 -> m1_702  [key=2, style=dotted];
m1_2198 -> m1_2199  [key=0, style=solid];
m1_2198 -> m1_702  [key=2, style=dotted];
m1_2199 -> m1_2200  [key=0, style=solid];
m1_2199 -> m1_702  [key=2, style=dotted];
m1_2200 -> m1_2201  [key=0, style=solid];
m1_2200 -> m1_2213  [key=2, style=dotted];
m1_2201 -> m1_2202  [key=0, style=solid];
m1_2201 -> m1_2214  [key=2, style=dotted];
m1_2202 -> m1_2203  [key=0, style=solid];
m1_2202 -> m1_2215  [key=2, style=dotted];
m1_2203 -> m1_2204  [key=0, style=solid];
m1_2203 -> m1_2216  [key=2, style=dotted];
m1_2204 -> m1_2205  [key=0, style=solid];
m1_2204 -> m1_2217  [key=2, style=dotted];
m1_2205 -> m1_2206  [key=0, style=solid];
m1_2205 -> m1_2218  [key=2, style=dotted];
m1_2206 -> m1_2207  [key=0, style=solid];
m1_2206 -> m1_2219  [key=2, style=dotted];
m1_2207 -> m1_2208  [key=0, style=solid];
m1_2207 -> m1_2220  [key=2, style=dotted];
m1_2208 -> m1_2209  [key=0, style=solid];
m1_2208 -> m1_2221  [key=2, style=dotted];
m1_2209 -> m1_2210  [key=0, style=solid];
m1_2209 -> m1_2222  [key=2, style=dotted];
m1_2210 -> m1_2211  [key=0, style=solid];
m1_2210 -> m1_2223  [key=2, style=dotted];
m1_2211 -> m1_2212  [key=0, style=solid];
m1_2211 -> m1_2224  [key=2, style=dotted];
m1_2212 -> m1_2193  [color=blue, key=0, style=bold];
m1_2921 -> m1_2922  [key=0, style=solid];
m1_2922 -> m1_2923  [key=0, style=solid];
m1_2922 -> m1_134  [key=2, style=dotted];
m1_2923 -> m1_2921  [color=blue, key=0, style=bold];
m1_1419 -> m1_1420  [key=0, style=solid];
m1_1420 -> m1_1421  [key=0, style=solid];
m1_1420 -> m1_1423  [color=darkseagreen4, key=1, label=boolRef, style=dashed];
m1_1421 -> m1_1422  [key=0, style=solid];
m1_1421 -> m1_1433  [key=2, style=dotted];
m1_1423 -> m1_1424  [key=0, style=solid];
m1_1423 -> m1_24  [key=2, style=dotted];
m1_1422 -> m1_1423  [key=0, style=solid];
m1_1422 -> m1_129  [key=2, style=dotted];
m1_1422 -> m1_1424  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1424 -> m1_1425  [key=0, style=solid];
m1_1424 -> m1_49  [key=2, style=dotted];
m1_1425 -> m1_1426  [key=0, style=solid];
m1_1425 -> m1_24  [key=2, style=dotted];
m1_1426 -> m1_1427  [key=0, style=solid];
m1_1426 -> m1_1429  [color=darkseagreen4, key=1, label=jsonSerializerTestRef, style=dashed];
m1_1427 -> m1_1428  [key=0, style=solid];
m1_1427 -> m1_1433  [key=2, style=dotted];
m1_1429 -> m1_1430  [key=0, style=solid];
m1_1429 -> m1_24  [key=2, style=dotted];
m1_1428 -> m1_1429  [key=0, style=solid];
m1_1428 -> m1_129  [key=2, style=dotted];
m1_1428 -> m1_1430  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1430 -> m1_1431  [key=0, style=solid];
m1_1430 -> m1_49  [key=2, style=dotted];
m1_1431 -> m1_1432  [key=0, style=solid];
m1_1431 -> m1_24  [key=2, style=dotted];
m1_1432 -> m1_1419  [color=blue, key=0, style=bold];
m1_76 -> m1_77  [key=0, style=solid];
m1_77 -> m1_78  [key=0, style=solid];
m1_77 -> m1_60  [key=2, style=dotted];
m1_77 -> m1_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_78 -> m1_76  [color=blue, key=0, style=bold];
m1_3934 -> m1_3935  [key=0, style=solid];
m1_3935 -> m1_3936  [key=0, style=solid];
m1_3935 -> m1_3900  [key=2, style=dotted];
m1_3936 -> m1_3934  [color=blue, key=0, style=bold];
m1_3673 -> m1_3674  [key=0, style=solid];
m1_3674 -> m1_3675  [key=0, style=solid];
m1_3674 -> m1_540  [key=2, style=dotted];
m1_3674 -> m1_3676  [color=darkseagreen4, key=1, label=culture, style=dashed];
m1_3674 -> m1_3680  [color=darkseagreen4, key=1, label=culture, style=dashed];
m1_3675 -> m1_3676  [key=0, style=solid];
m1_3676 -> m1_3677  [key=0, style=solid];
m1_3680 -> m1_3681  [key=0, style=solid];
m1_3680 -> m1_175  [key=2, style=dotted];
m1_3680 -> m1_833  [key=2, style=dotted];
m1_3677 -> m1_3678  [key=0, style=solid];
m1_3677 -> m1_134  [key=2, style=dotted];
m1_3677 -> m1_1102  [key=2, style=dotted];
m1_3677 -> m1_376  [key=2, style=dotted];
m1_3677 -> m1_1110  [key=2, style=dotted];
m1_3677 -> m1_3681  [color=darkseagreen4, key=1, label=dates, style=dashed];
m1_3678 -> m1_3679  [key=0, style=solid];
m1_3678 -> m1_2971  [key=2, style=dotted];
m1_3678 -> m1_3685  [color=darkseagreen4, key=1, label=sw, style=dashed];
m1_3681 -> m1_3682  [key=0, style=solid];
m1_3681 -> m1_3008  [key=2, style=dotted];
m1_3679 -> m1_3680  [key=0, style=solid];
m1_3679 -> m1_2972  [key=2, style=dotted];
m1_3679 -> m1_3681  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_3679 -> m1_3682  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_3679 -> m1_3683  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_3679 -> m1_3684  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_3685 -> m1_3686  [key=0, style=solid];
m1_3685 -> m1_2976  [key=2, style=dotted];
m1_3682 -> m1_3683  [key=0, style=solid];
m1_3682 -> m1_152  [key=2, style=dotted];
m1_3683 -> m1_3684  [key=0, style=solid];
m1_3683 -> m1_24  [key=2, style=dotted];
m1_3684 -> m1_3685  [key=0, style=solid];
m1_3684 -> m1_24  [key=2, style=dotted];
m1_3686 -> m1_3687  [key=0, style=solid];
m1_3686 -> m1_42  [key=2, style=dotted];
m1_3687 -> m1_3673  [color=blue, key=0, style=bold];
m1_1783 -> m1_1784  [key=0, style=solid];
m1_1784 -> m1_1785  [key=0, style=solid];
m1_1784 -> m1_1788  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1784 -> m1_1777  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1785 -> m1_1786  [key=0, style=solid];
m1_1785 -> m1_60  [key=2, style=dotted];
m1_1785 -> m1_1787  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1786 -> m1_1783  [color=blue, key=0, style=bold];
m1_2847 -> m1_2848  [key=0, style=solid];
m1_2848 -> m1_2849  [key=0, style=solid];
m1_2848 -> m1_2843  [key=2, style=dotted];
m1_2848 -> m1_2850  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_2848 -> m1_2851  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_2848 -> m1_2854  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_2848 -> m1_2855  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_2849 -> m1_2850  [key=0, style=solid];
m1_2849 -> m1_2859  [key=2, style=dotted];
m1_2850 -> m1_2851  [key=0, style=solid];
m1_2850 -> m1_2859  [key=2, style=dotted];
m1_2851 -> m1_2852  [key=0, style=solid];
m1_2851 -> m1_41  [key=2, style=dotted];
m1_2851 -> m1_2853  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_2854 -> m1_2855  [key=0, style=solid];
m1_2854 -> m1_24  [key=2, style=dotted];
m1_2855 -> m1_2856  [key=0, style=solid];
m1_2855 -> m1_24  [key=2, style=dotted];
m1_2852 -> m1_2853  [key=0, style=solid];
m1_2852 -> m1_42  [key=2, style=dotted];
m1_2853 -> m1_2854  [key=0, style=solid];
m1_2853 -> m1_49  [key=2, style=dotted];
m1_2853 -> m1_2855  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_2853 -> m1_2856  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_2853 -> m1_2857  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_2856 -> m1_2857  [key=0, style=solid];
m1_2856 -> m1_24  [key=2, style=dotted];
m1_2857 -> m1_2858  [key=0, style=solid];
m1_2857 -> m1_24  [key=2, style=dotted];
m1_2858 -> m1_2847  [color=blue, key=0, style=bold];
m1_2287 -> m1_2288  [key=0, style=solid];
m1_2288 -> m1_2289  [key=0, style=solid];
m1_2288 -> m1_49  [key=2, style=dotted];
m1_2288 -> m1_2290  [color=darkseagreen4, key=1, label=myA, style=dashed];
m1_2288 -> m1_2291  [color=darkseagreen4, key=1, label=myA, style=dashed];
m1_2288 -> m1_2292  [color=darkseagreen4, key=1, label=myA, style=dashed];
m1_2288 -> m1_2293  [color=darkseagreen4, key=1, label=myA, style=dashed];
m1_2288 -> m1_2294  [color=darkseagreen4, key=1, label=myA, style=dashed];
m1_2288 -> m1_2295  [color=darkseagreen4, key=1, label=myA, style=dashed];
m1_2288 -> m1_2296  [color=darkseagreen4, key=1, label=myA, style=dashed];
m1_2289 -> m1_2290  [key=0, style=solid];
m1_2289 -> m1_2317  [key=2, style=dotted];
m1_2289 -> m1_2318  [key=2, style=dotted];
m1_2289 -> m1_24  [key=2, style=dotted];
m1_2290 -> m1_2291  [key=0, style=solid];
m1_2290 -> m1_2317  [key=2, style=dotted];
m1_2290 -> m1_2318  [key=2, style=dotted];
m1_2290 -> m1_24  [key=2, style=dotted];
m1_2291 -> m1_2292  [key=0, style=solid];
m1_2291 -> m1_2319  [key=2, style=dotted];
m1_2291 -> m1_2318  [key=2, style=dotted];
m1_2291 -> m1_24  [key=2, style=dotted];
m1_2292 -> m1_2293  [key=0, style=solid];
m1_2292 -> m1_2319  [key=2, style=dotted];
m1_2292 -> m1_2318  [key=2, style=dotted];
m1_2292 -> m1_24  [key=2, style=dotted];
m1_2293 -> m1_2294  [key=0, style=solid];
m1_2293 -> m1_2319  [key=2, style=dotted];
m1_2293 -> m1_2318  [key=2, style=dotted];
m1_2293 -> m1_24  [key=2, style=dotted];
m1_2294 -> m1_2295  [key=0, style=solid];
m1_2294 -> m1_2319  [key=2, style=dotted];
m1_2294 -> m1_2318  [key=2, style=dotted];
m1_2294 -> m1_24  [key=2, style=dotted];
m1_2295 -> m1_2296  [key=0, style=solid];
m1_2295 -> m1_2319  [key=2, style=dotted];
m1_2295 -> m1_2318  [key=2, style=dotted];
m1_2295 -> m1_24  [key=2, style=dotted];
m1_2296 -> m1_2297  [key=0, style=solid];
m1_2296 -> m1_2319  [key=2, style=dotted];
m1_2296 -> m1_2318  [key=2, style=dotted];
m1_2296 -> m1_24  [key=2, style=dotted];
m1_2297 -> m1_2298  [key=0, style=solid];
m1_2297 -> m1_49  [key=2, style=dotted];
m1_2297 -> m1_2299  [color=darkseagreen4, key=1, label=myB, style=dashed];
m1_2297 -> m1_2300  [color=darkseagreen4, key=1, label=myB, style=dashed];
m1_2297 -> m1_2301  [color=darkseagreen4, key=1, label=myB, style=dashed];
m1_2297 -> m1_2302  [color=darkseagreen4, key=1, label=myB, style=dashed];
m1_2297 -> m1_2303  [color=darkseagreen4, key=1, label=myB, style=dashed];
m1_2297 -> m1_2304  [color=darkseagreen4, key=1, label=myB, style=dashed];
m1_2297 -> m1_2305  [color=darkseagreen4, key=1, label=myB, style=dashed];
m1_2297 -> m1_2306  [color=darkseagreen4, key=1, label=myB, style=dashed];
m1_2297 -> m1_2307  [color=darkseagreen4, key=1, label=myB, style=dashed];
m1_2297 -> m1_2308  [color=darkseagreen4, key=1, label=myB, style=dashed];
m1_2297 -> m1_2309  [color=darkseagreen4, key=1, label=myB, style=dashed];
m1_2297 -> m1_2310  [color=darkseagreen4, key=1, label=myB, style=dashed];
m1_2297 -> m1_2311  [color=darkseagreen4, key=1, label=myB, style=dashed];
m1_2297 -> m1_2312  [color=darkseagreen4, key=1, label=myB, style=dashed];
m1_2297 -> m1_2313  [color=darkseagreen4, key=1, label=myB, style=dashed];
m1_2297 -> m1_2314  [color=darkseagreen4, key=1, label=myB, style=dashed];
m1_2297 -> m1_2315  [color=darkseagreen4, key=1, label=myB, style=dashed];
m1_2298 -> m1_2299  [key=0, style=solid];
m1_2298 -> m1_2317  [key=2, style=dotted];
m1_2298 -> m1_2318  [key=2, style=dotted];
m1_2298 -> m1_24  [key=2, style=dotted];
m1_2299 -> m1_2300  [key=0, style=solid];
m1_2299 -> m1_2317  [key=2, style=dotted];
m1_2299 -> m1_2318  [key=2, style=dotted];
m1_2299 -> m1_24  [key=2, style=dotted];
m1_2300 -> m1_2301  [key=0, style=solid];
m1_2300 -> m1_2319  [key=2, style=dotted];
m1_2300 -> m1_2318  [key=2, style=dotted];
m1_2300 -> m1_24  [key=2, style=dotted];
m1_2301 -> m1_2302  [key=0, style=solid];
m1_2301 -> m1_2319  [key=2, style=dotted];
m1_2301 -> m1_2318  [key=2, style=dotted];
m1_2301 -> m1_24  [key=2, style=dotted];
m1_2302 -> m1_2303  [key=0, style=solid];
m1_2302 -> m1_2319  [key=2, style=dotted];
m1_2302 -> m1_2318  [key=2, style=dotted];
m1_2302 -> m1_24  [key=2, style=dotted];
m1_2303 -> m1_2304  [key=0, style=solid];
m1_2303 -> m1_2319  [key=2, style=dotted];
m1_2303 -> m1_2318  [key=2, style=dotted];
m1_2303 -> m1_24  [key=2, style=dotted];
m1_2304 -> m1_2305  [key=0, style=solid];
m1_2304 -> m1_2319  [key=2, style=dotted];
m1_2304 -> m1_2318  [key=2, style=dotted];
m1_2304 -> m1_24  [key=2, style=dotted];
m1_2305 -> m1_2306  [key=0, style=solid];
m1_2305 -> m1_2319  [key=2, style=dotted];
m1_2305 -> m1_2318  [key=2, style=dotted];
m1_2305 -> m1_24  [key=2, style=dotted];
m1_2306 -> m1_2307  [key=0, style=solid];
m1_2306 -> m1_24  [key=2, style=dotted];
m1_2307 -> m1_2308  [key=0, style=solid];
m1_2307 -> m1_24  [key=2, style=dotted];
m1_2308 -> m1_2309  [key=0, style=solid];
m1_2308 -> m1_24  [key=2, style=dotted];
m1_2309 -> m1_2310  [key=0, style=solid];
m1_2309 -> m1_24  [key=2, style=dotted];
m1_2310 -> m1_2311  [key=0, style=solid];
m1_2310 -> m1_2319  [key=2, style=dotted];
m1_2310 -> m1_2318  [key=2, style=dotted];
m1_2310 -> m1_24  [key=2, style=dotted];
m1_2311 -> m1_2312  [key=0, style=solid];
m1_2311 -> m1_2319  [key=2, style=dotted];
m1_2311 -> m1_2318  [key=2, style=dotted];
m1_2311 -> m1_24  [key=2, style=dotted];
m1_2312 -> m1_2313  [key=0, style=solid];
m1_2312 -> m1_24  [key=2, style=dotted];
m1_2313 -> m1_2314  [key=0, style=solid];
m1_2313 -> m1_2319  [key=2, style=dotted];
m1_2313 -> m1_2318  [key=2, style=dotted];
m1_2313 -> m1_24  [key=2, style=dotted];
m1_2314 -> m1_2315  [key=0, style=solid];
m1_2314 -> m1_2319  [key=2, style=dotted];
m1_2314 -> m1_2318  [key=2, style=dotted];
m1_2314 -> m1_24  [key=2, style=dotted];
m1_2315 -> m1_2316  [key=0, style=solid];
m1_2315 -> m1_2319  [key=2, style=dotted];
m1_2315 -> m1_2318  [key=2, style=dotted];
m1_2315 -> m1_24  [key=2, style=dotted];
m1_2316 -> m1_2287  [color=blue, key=0, style=bold];
m1_2652 -> m1_2653  [key=0, style=solid];
m1_2653 -> m1_2652  [color=blue, key=0, style=bold];
m1_4198 -> m1_4199  [key=0, style=solid];
m1_4199 -> m1_4200  [key=0, style=solid];
m1_4200 -> m1_4201  [key=0, style=solid];
m1_4201 -> m1_4198  [color=blue, key=0, style=bold];
m1_741 -> m1_742  [key=0, style=solid];
m1_742 -> m1_743  [key=0, style=solid];
m1_742 -> m1_465  [key=2, style=dotted];
m1_742 -> m1_744  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_743 -> m1_744  [key=0, style=solid];
m1_743 -> m1_746  [key=2, style=dotted];
m1_744 -> m1_745  [key=0, style=solid];
m1_744 -> m1_747  [key=2, style=dotted];
m1_744 -> m1_22  [key=2, style=dotted];
m1_745 -> m1_741  [color=blue, key=0, style=bold];
m1_3922 -> m1_3923  [key=0, style=solid];
m1_3923 -> m1_3924  [key=0, style=solid];
m1_3924 -> m1_3922  [color=blue, key=0, style=bold];
m1_1588 -> m1_1589  [key=0, style=solid];
m1_1589 -> m1_1590  [key=0, style=solid];
m1_1589 -> m1_1599  [key=2, style=dotted];
m1_1589 -> m1_1591  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_1589 -> m1_1592  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_1589 -> m1_1593  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_1589 -> m1_1594  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_1589 -> m1_1596  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_1590 -> m1_1591  [key=0, style=solid];
m1_1591 -> m1_1592  [key=0, style=solid];
m1_1592 -> m1_1593  [key=0, style=solid];
m1_1593 -> m1_1594  [key=0, style=solid];
m1_1594 -> m1_1595  [key=0, style=solid];
m1_1594 -> m1_41  [key=2, style=dotted];
m1_1596 -> m1_1597  [key=0, style=solid];
m1_1596 -> m1_175  [key=2, style=dotted];
m1_1596 -> m1_198  [key=2, style=dotted];
m1_1595 -> m1_1596  [key=0, style=solid];
m1_1595 -> m1_42  [key=2, style=dotted];
m1_1597 -> m1_1598  [key=0, style=solid];
m1_1597 -> m1_42  [key=2, style=dotted];
m1_1598 -> m1_1588  [color=blue, key=0, style=bold];
m1_1180 -> m1_1181  [key=0, style=solid];
m1_1181 -> m1_1182  [key=0, style=solid];
m1_1181 -> m1_1184  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1181 -> m1_1171  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1182 -> m1_1183  [key=0, style=solid];
m1_1182 -> m1_19  [key=2, style=dotted];
m1_1182 -> m1_1184  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_1184 -> m1_1185  [key=0, style=solid];
m1_1184 -> m1_373  [key=2, style=dotted];
m1_1184 -> m1_840  [key=2, style=dotted];
m1_1184 -> m1_1186  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m1_1183 -> m1_1184  [key=0, style=solid];
m1_1185 -> m1_1186  [key=0, style=solid];
m1_1185 -> m1_24  [key=2, style=dotted];
m1_1186 -> m1_1187  [key=0, style=solid];
m1_1186 -> m1_24  [key=2, style=dotted];
m1_1187 -> m1_1180  [color=blue, key=0, style=bold];
m1_1538 -> m1_1539  [key=0, style=solid];
m1_1539 -> m1_1540  [key=0, style=solid];
m1_1539 -> m1_1539  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1540 -> m1_1541  [key=0, style=solid];
m1_1540 -> m1_49  [key=2, style=dotted];
m1_1540 -> m1_1542  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_1540 -> m1_1543  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_1540 -> m1_1544  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_1540 -> m1_1545  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_1541 -> m1_1542  [key=0, style=solid];
m1_1541 -> m1_797  [key=2, style=dotted];
m1_1542 -> m1_1543  [key=0, style=solid];
m1_1542 -> m1_24  [key=2, style=dotted];
m1_1543 -> m1_1544  [key=0, style=solid];
m1_1543 -> m1_24  [key=2, style=dotted];
m1_1544 -> m1_1545  [key=0, style=solid];
m1_1544 -> m1_24  [key=2, style=dotted];
m1_1545 -> m1_1546  [key=0, style=solid];
m1_1545 -> m1_24  [key=2, style=dotted];
m1_1546 -> m1_1538  [color=blue, key=0, style=bold];
m1_4166 -> m1_4167  [key=0, style=solid];
m1_4167 -> m1_4168  [key=0, style=solid];
m1_4167 -> m1_4169  [key=2, style=dotted];
m1_4168 -> m1_4166  [color=blue, key=0, style=bold];
m1_153 -> m1_154  [key=0, style=solid];
m1_154 -> m1_155  [key=0, style=solid];
m1_154 -> m1_60  [key=2, style=dotted];
m1_154 -> m1_156  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_155 -> m1_153  [color=blue, key=0, style=bold];
m1_3842 -> m1_3843  [key=0, style=solid];
m1_3843 -> m1_3844  [key=0, style=solid];
m1_3843 -> m1_3813  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_3844 -> m1_3845  [key=0, style=solid];
m1_3844 -> m1_175  [key=2, style=dotted];
m1_3844 -> m1_296  [key=2, style=dotted];
m1_3844 -> m1_3846  [color=darkseagreen4, key=1, label=people, style=dashed];
m1_3844 -> m1_3847  [color=darkseagreen4, key=1, label=people, style=dashed];
m1_3845 -> m1_3846  [key=0, style=solid];
m1_3845 -> m1_24  [key=2, style=dotted];
m1_3846 -> m1_3847  [key=0, style=solid];
m1_3846 -> m1_3848  [color=darkseagreen4, key=1, label=john, style=dashed];
m1_3846 -> m1_3849  [color=darkseagreen4, key=1, label=john, style=dashed];
m1_3847 -> m1_3848  [key=0, style=solid];
m1_3847 -> m1_3849  [color=darkseagreen4, key=1, label=jane, style=dashed];
m1_3848 -> m1_3849  [key=0, style=solid];
m1_3848 -> m1_24  [key=2, style=dotted];
m1_3849 -> m1_3850  [key=0, style=solid];
m1_3849 -> m1_24  [key=2, style=dotted];
m1_3850 -> m1_3842  [color=blue, key=0, style=bold];
m1_1125 -> m1_1126  [key=0, style=solid];
m1_1126 -> m1_1127  [key=0, style=solid];
m1_1126 -> m1_953  [key=2, style=dotted];
m1_1126 -> m1_1129  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m1_1127 -> m1_1128  [key=0, style=solid];
m1_1127 -> m1_129  [key=2, style=dotted];
m1_1127 -> m1_1129  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1129 -> m1_1130  [key=0, style=solid];
m1_1129 -> m1_1138  [key=2, style=dotted];
m1_1129 -> m1_1129  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m1_1129 -> m1_1131  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m1_1129 -> m1_1132  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m1_1129 -> m1_1133  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m1_1129 -> m1_1134  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m1_1129 -> m1_1135  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m1_1129 -> m1_1136  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m1_1128 -> m1_1129  [key=0, style=solid];
m1_1128 -> m1_24  [key=2, style=dotted];
m1_1130 -> m1_1131  [key=0, style=solid];
m1_1130 -> m1_24  [key=2, style=dotted];
m1_1131 -> m1_1132  [key=0, style=solid];
m1_1131 -> m1_24  [key=2, style=dotted];
m1_1132 -> m1_1133  [key=0, style=solid];
m1_1132 -> m1_24  [key=2, style=dotted];
m1_1133 -> m1_1134  [key=0, style=solid];
m1_1133 -> m1_24  [key=2, style=dotted];
m1_1134 -> m1_1135  [key=0, style=solid];
m1_1134 -> m1_24  [key=2, style=dotted];
m1_1135 -> m1_1136  [key=0, style=solid];
m1_1135 -> m1_24  [key=2, style=dotted];
m1_1136 -> m1_1137  [key=0, style=solid];
m1_1136 -> m1_24  [key=2, style=dotted];
m1_1137 -> m1_1125  [color=blue, key=0, style=bold];
m1_2460 -> m1_2461  [key=0, style=solid];
m1_2461 -> m1_2462  [key=0, style=solid];
m1_2461 -> m1_2461  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_2462 -> m1_2463  [key=0, style=solid];
m1_2462 -> m1_49  [key=2, style=dotted];
m1_2462 -> m1_2464  [color=darkseagreen4, key=1, label=cc, style=dashed];
m1_2462 -> m1_2465  [color=darkseagreen4, key=1, label=cc, style=dashed];
m1_2463 -> m1_2464  [key=0, style=solid];
m1_2463 -> m1_24  [key=2, style=dotted];
m1_2464 -> m1_2465  [key=0, style=solid];
m1_2464 -> m1_24  [key=2, style=dotted];
m1_2465 -> m1_2466  [key=0, style=solid];
m1_2465 -> m1_24  [key=2, style=dotted];
m1_2466 -> m1_2460  [color=blue, key=0, style=bold];
m1_3550 -> m1_3551  [key=0, style=solid];
m1_3551 -> m1_3552  [key=0, style=solid];
m1_3551 -> m1_49  [key=2, style=dotted];
m1_3551 -> m1_3553  [color=darkseagreen4, key=1, label=uris, style=dashed];
m1_3552 -> m1_3553  [key=0, style=solid];
m1_3552 -> m1_24  [key=2, style=dotted];
m1_3553 -> m1_3554  [key=0, style=solid];
m1_3553 -> m1_1708  [key=2, style=dotted];
m1_3553 -> m1_24  [key=2, style=dotted];
m1_3554 -> m1_3555  [key=0, style=solid];
m1_3554 -> m1_49  [key=2, style=dotted];
m1_3555 -> m1_3556  [key=0, style=solid];
m1_3555 -> m1_797  [key=2, style=dotted];
m1_3556 -> m1_3557  [key=0, style=solid];
m1_3556 -> m1_3563  [key=2, style=dotted];
m1_3556 -> m1_3558  [color=darkseagreen4, key=1, label=i1, style=dashed];
m1_3557 -> m1_3558  [key=0, style=solid];
m1_3557 -> m1_1708  [key=2, style=dotted];
m1_3558 -> m1_3559  [key=0, style=solid];
m1_3558 -> m1_24  [key=2, style=dotted];
m1_3559 -> m1_3560  [key=0, style=solid];
m1_3559 -> m1_49  [key=2, style=dotted];
m1_3559 -> m1_3561  [color=darkseagreen4, key=1, label=uri, style=dashed];
m1_3560 -> m1_3561  [key=0, style=solid];
m1_3560 -> m1_797  [key=2, style=dotted];
m1_3561 -> m1_3562  [key=0, style=solid];
m1_3561 -> m1_3563  [key=2, style=dotted];
m1_3561 -> m1_24  [key=2, style=dotted];
m1_3562 -> m1_3550  [color=blue, key=0, style=bold];
m1_142 -> m1_143  [key=0, style=solid];
m1_143 -> m1_144  [key=0, style=solid];
m1_143 -> m1_60  [key=2, style=dotted];
m1_143 -> m1_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_144 -> m1_142  [color=blue, key=0, style=bold];
m1_199 -> m1_200  [key=0, style=solid];
m1_200 -> m1_201  [key=0, style=solid];
m1_200 -> m1_60  [key=2, style=dotted];
m1_200 -> m1_208  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_201 -> m1_202  [key=0, style=solid];
m1_201 -> m1_60  [key=2, style=dotted];
m1_201 -> m1_211  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_202 -> m1_203  [key=0, style=solid];
m1_202 -> m1_60  [key=2, style=dotted];
m1_202 -> m1_214  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_203 -> m1_204  [key=0, style=solid];
m1_203 -> m1_60  [key=2, style=dotted];
m1_203 -> m1_217  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_204 -> m1_205  [key=0, style=solid];
m1_204 -> m1_60  [key=2, style=dotted];
m1_204 -> m1_220  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_205 -> m1_206  [key=0, style=solid];
m1_205 -> m1_60  [key=2, style=dotted];
m1_205 -> m1_223  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_206 -> m1_207  [key=0, style=solid];
m1_206 -> m1_60  [key=2, style=dotted];
m1_206 -> m1_226  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_207 -> m1_199  [color=blue, key=0, style=bold];
m1_2915 -> m1_2916  [key=0, style=solid];
m1_2916 -> m1_2917  [key=0, style=solid];
m1_2916 -> m1_2920  [key=2, style=dotted];
m1_2917 -> m1_2918  [key=0, style=solid];
m1_2917 -> m1_41  [key=2, style=dotted];
m1_2918 -> m1_2919  [key=0, style=solid];
m1_2918 -> m1_42  [key=2, style=dotted];
m1_2919 -> m1_2915  [color=blue, key=0, style=bold];
m1_2924 -> m1_2925  [key=0, style=solid];
m1_2925 -> m1_2926  [key=0, style=solid];
m1_2925 -> m1_2921  [key=2, style=dotted];
m1_2925 -> m1_2928  [color=darkseagreen4, key=1, label=classWithException, style=dashed];
m1_2925 -> m1_2929  [color=darkseagreen4, key=1, label=classWithException, style=dashed];
m1_2925 -> m1_2932  [color=darkseagreen4, key=1, label=classWithException, style=dashed];
m1_2926 -> m1_2929  [key=0, style=solid];
m1_2926 -> m1_282  [key=2, style=dotted];
m1_2928 -> m1_2929  [key=0, style=solid];
m1_2928 -> m1_322  [key=2, style=dotted];
m1_2929 -> m1_2930  [key=0, style=solid];
m1_2929 -> m1_129  [key=2, style=dotted];
m1_2932 -> m1_2933  [key=0, style=solid];
m1_2932 -> m1_41  [key=2, style=dotted];
m1_2927 -> m1_2928  [key=0, style=solid];
m1_2930 -> m1_2931  [key=0, style=solid];
m1_2930 -> m1_49  [key=2, style=dotted];
m1_2931 -> m1_2932  [key=0, style=solid];
m1_2931 -> m1_2936  [key=2, style=dotted];
m1_2931 -> m1_24  [key=2, style=dotted];
m1_2933 -> m1_2934  [key=0, style=solid];
m1_2933 -> m1_49  [key=2, style=dotted];
m1_2934 -> m1_2935  [key=0, style=solid];
m1_2934 -> m1_2936  [key=2, style=dotted];
m1_2934 -> m1_24  [key=2, style=dotted];
m1_2935 -> m1_2924  [color=blue, key=0, style=bold];
m1_2359 -> m1_2360  [key=0, style=solid];
m1_2360 -> m1_2361  [key=0, style=solid];
m1_2360 -> m1_2370  [key=2, style=dotted];
m1_2360 -> m1_2363  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m1_2360 -> m1_2364  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m1_2360 -> m1_2368  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m1_2361 -> m1_2362  [key=0, style=solid];
m1_2361 -> m1_2371  [key=2, style=dotted];
m1_2361 -> m1_2363  [color=darkseagreen4, key=1, label=document, style=dashed];
m1_2363 -> m1_2364  [key=0, style=solid];
m1_2364 -> m1_2365  [key=0, style=solid];
m1_2364 -> m1_41  [key=2, style=dotted];
m1_2364 -> m1_2366  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_2364 -> m1_2367  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_2368 -> m1_2369  [key=0, style=solid];
m1_2368 -> m1_24  [key=2, style=dotted];
m1_2362 -> m1_2363  [key=0, style=solid];
m1_2362 -> m1_2372  [key=2, style=dotted];
m1_2365 -> m1_2366  [key=0, style=solid];
m1_2365 -> m1_2365  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m1_2366 -> m1_2367  [key=0, style=solid];
m1_2366 -> m1_42  [key=2, style=dotted];
m1_2367 -> m1_2368  [key=0, style=solid];
m1_2367 -> m1_49  [key=2, style=dotted];
m1_2369 -> m1_2359  [color=blue, key=0, style=bold];
m1_2119 -> m1_2120  [key=0, style=solid];
m1_2120 -> m1_2121  [key=0, style=solid];
m1_2120 -> m1_2122  [key=2, style=dotted];
m1_2121 -> m1_2119  [color=blue, key=0, style=bold];
m1_3478 -> m1_3479  [key=0, style=solid];
m1_3478 -> m1_3472  [color=darkorchid, key=3, label="Parameter variable T obj", style=bold];
m1_3478 -> m1_3483  [color=darkorchid, key=3, label="method methodReturn T SerializeAndDeserialize", style=bold];
m1_3479 -> m1_3480  [key=0, style=solid];
m1_3479 -> m1_3482  [key=2, style=dotted];
m1_3480 -> m1_3481  [key=0, style=solid];
m1_3480 -> m1_3483  [key=2, style=dotted];
m1_3481 -> m1_3478  [color=blue, key=0, style=bold];
m1_2641 -> m1_2642  [key=0, style=solid];
m1_2642 -> m1_2643  [key=0, style=solid];
m1_2642 -> m1_2650  [key=2, style=dotted];
m1_2642 -> m1_2644  [color=darkseagreen4, key=1, label=obj, style=dashed];
m1_2643 -> m1_2644  [key=0, style=solid];
m1_2643 -> m1_2651  [key=2, style=dotted];
m1_2644 -> m1_2645  [key=0, style=solid];
m1_2644 -> m1_129  [key=2, style=dotted];
m1_2645 -> m1_2646  [key=0, style=solid];
m1_2645 -> m1_49  [key=2, style=dotted];
m1_2645 -> m1_2647  [color=darkseagreen4, key=1, label=obj, style=dashed];
m1_2645 -> m1_2648  [color=darkseagreen4, key=1, label=obj, style=dashed];
m1_2646 -> m1_2647  [key=0, style=solid];
m1_2646 -> m1_24  [key=2, style=dotted];
m1_2647 -> m1_2648  [key=0, style=solid];
m1_2647 -> m1_24  [key=2, style=dotted];
m1_2648 -> m1_2649  [key=0, style=solid];
m1_2648 -> m1_24  [key=2, style=dotted];
m1_2649 -> m1_2641  [color=blue, key=0, style=bold];
m1_1652 -> m1_1653  [key=0, style=solid];
m1_1653 -> m1_1654  [key=0, style=solid];
m1_1653 -> m1_1643  [key=2, style=dotted];
m1_1653 -> m1_1655  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_1654 -> m1_1655  [key=0, style=solid];
m1_1655 -> m1_1656  [key=0, style=solid];
m1_1655 -> m1_41  [key=2, style=dotted];
m1_1655 -> m1_1657  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1656 -> m1_1657  [key=0, style=solid];
m1_1656 -> m1_42  [key=2, style=dotted];
m1_1657 -> m1_1658  [key=0, style=solid];
m1_1657 -> m1_49  [key=2, style=dotted];
m1_1658 -> m1_1659  [key=0, style=solid];
m1_1658 -> m1_1649  [key=2, style=dotted];
m1_1658 -> m1_24  [key=2, style=dotted];
m1_1659 -> m1_1652  [color=blue, key=0, style=bold];
m1_3220 -> m1_3221  [key=0, style=solid];
m1_3221 -> m1_3222  [key=0, style=solid];
m1_3221 -> m1_60  [key=2, style=dotted];
m1_3221 -> m1_3223  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_3222 -> m1_3220  [color=blue, key=0, style=bold];
m1_2889 -> m1_2890  [key=0, style=solid];
m1_2889 -> m1_2891  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_2889 -> m1_2892  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_2890 -> m1_2891  [key=0, style=solid];
m1_2891 -> m1_2892  [key=0, style=solid];
m1_2892 -> m1_2893  [key=0, style=solid];
m1_2893 -> m1_2889  [color=blue, key=0, style=bold];
m1_2043 -> m1_2044  [key=0, style=solid];
m1_2044 -> m1_2045  [key=0, style=solid];
m1_2044 -> m1_2046  [color=darkseagreen4, key=1, label=jsonIsoText, style=dashed];
m1_2044 -> m1_2044  [color=darkorchid, key=3, label="Local variable string jsonIsoText", style=bold];
m1_2045 -> m1_2046  [key=0, style=solid];
m1_2045 -> m1_175  [key=2, style=dotted];
m1_2045 -> m1_1149  [key=2, style=dotted];
m1_2045 -> m1_296  [key=2, style=dotted];
m1_2045 -> m1_2047  [color=darkseagreen4, key=1, label=cISO, style=dashed];
m1_2046 -> m1_2047  [key=0, style=solid];
m1_2046 -> m1_175  [key=2, style=dotted];
m1_2046 -> m1_296  [key=2, style=dotted];
m1_2047 -> m1_2048  [key=0, style=solid];
m1_2047 -> m1_24  [key=2, style=dotted];
m1_2048 -> m1_2043  [color=blue, key=0, style=bold];
m1_3644 -> m1_3645  [key=0, style=solid];
m1_3645 -> m1_3646  [key=0, style=solid];
m1_3645 -> m1_3647  [color=darkseagreen4, key=1, label=content, style=dashed];
m1_3645 -> m1_3645  [color=darkorchid, key=3, label="Local variable string content", style=bold];
m1_3646 -> m1_3647  [key=0, style=solid];
m1_3646 -> m1_175  [key=2, style=dotted];
m1_3647 -> m1_3648  [key=0, style=solid];
m1_3647 -> m1_3652  [key=2, style=dotted];
m1_3648 -> m1_3649  [key=0, style=solid];
m1_3649 -> m1_3650  [key=0, style=solid];
m1_3649 -> m1_1110  [key=2, style=dotted];
m1_3649 -> m1_24  [key=2, style=dotted];
m1_3649 -> m1_3649  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m1_3650 -> m1_3651  [key=0, style=solid];
m1_3650 -> m1_3653  [key=2, style=dotted];
m1_3650 -> m1_24  [key=2, style=dotted];
m1_3650 -> m1_3650  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m1_3651 -> m1_3644  [color=blue, key=0, style=bold];
m1_4207 -> m1_4208  [key=0, style=solid];
m1_4208 -> m1_4209  [key=0, style=solid];
m1_4209 -> m1_4207  [color=blue, key=0, style=bold];
m1_1280 -> m1_1281  [key=0, style=solid];
m1_1281 -> m1_1282  [key=0, style=solid];
m1_1281 -> m1_1287  [key=2, style=dotted];
m1_1282 -> m1_1283  [key=0, style=solid];
m1_1282 -> m1_129  [key=2, style=dotted];
m1_1282 -> m1_1284  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1283 -> m1_1284  [key=0, style=solid];
m1_1283 -> m1_24  [key=2, style=dotted];
m1_1284 -> m1_1285  [key=0, style=solid];
m1_1284 -> m1_49  [key=2, style=dotted];
m1_1285 -> m1_1286  [key=0, style=solid];
m1_1285 -> m1_24  [key=2, style=dotted];
m1_1286 -> m1_1280  [color=blue, key=0, style=bold];
m1_277 -> m1_278  [key=0, style=solid];
m1_277 -> m1_280  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_278 -> m1_279  [key=0, style=solid];
m1_278 -> m1_280  [key=0, style=solid];
m1_280 -> m1_281  [key=0, style=solid];
m1_280 -> m1_283  [key=2, style=dotted];
m1_279 -> m1_281  [key=0, style=solid];
m1_279 -> m1_282  [key=2, style=dotted];
m1_281 -> m1_277  [color=blue, key=0, style=bold];
m1_1600 -> m1_1601  [key=0, style=solid];
m1_1601 -> m1_1602  [key=0, style=solid];
m1_1601 -> m1_149  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1602 -> m1_1603  [key=0, style=solid];
m1_1602 -> m1_49  [key=2, style=dotted];
m1_1602 -> m1_1604  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_1602 -> m1_1605  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_1602 -> m1_1606  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_1603 -> m1_1604  [key=0, style=solid];
m1_1603 -> m1_24  [key=2, style=dotted];
m1_1604 -> m1_1605  [key=0, style=solid];
m1_1604 -> m1_24  [key=2, style=dotted];
m1_1605 -> m1_1606  [key=0, style=solid];
m1_1605 -> m1_24  [key=2, style=dotted];
m1_1606 -> m1_1607  [key=0, style=solid];
m1_1606 -> m1_24  [key=2, style=dotted];
m1_1607 -> m1_1600  [color=blue, key=0, style=bold];
m1_57 -> m1_58  [key=0, style=solid];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_60  [key=2, style=dotted];
m1_58 -> m1_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_59 -> m1_57  [color=blue, key=0, style=bold];
m1_3482 -> m1_3484  [key=0, style=solid];
m1_3482 -> m1_3487  [color=darkseagreen4, key=1, label=T, style=dashed];
m1_3482 -> m1_3478  [color=darkorchid, key=3, label="Parameter variable T obj", style=bold];
m1_3484 -> m1_3485  [key=0, style=solid];
m1_3484 -> m1_2971  [key=2, style=dotted];
m1_3484 -> m1_3487  [color=darkseagreen4, key=1, label=stringWriter, style=dashed];
m1_3484 -> m1_3488  [color=darkseagreen4, key=1, label=stringWriter, style=dashed];
m1_3487 -> m1_3488  [key=0, style=solid];
m1_3487 -> m1_836  [key=2, style=dotted];
m1_3485 -> m1_3486  [key=0, style=solid];
m1_3485 -> m1_19  [key=2, style=dotted];
m1_3485 -> m1_3487  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_3488 -> m1_3489  [key=0, style=solid];
m1_3488 -> m1_2976  [key=2, style=dotted];
m1_3486 -> m1_3487  [key=0, style=solid];
m1_3486 -> m1_1865  [key=2, style=dotted];
m1_3489 -> m1_3482  [color=blue, key=0, style=bold];
m1_3161 -> m1_3162  [key=0, style=solid];
m1_3162 -> m1_3163  [key=0, style=solid];
m1_3162 -> m1_3171  [key=2, style=dotted];
m1_3162 -> m1_1246  [key=2, style=dotted];
m1_3162 -> m1_1102  [key=2, style=dotted];
m1_3163 -> m1_3164  [color=red, key=0, style=solid];
m1_3163 -> m1_41  [key=2, style=dotted];
m1_3163 -> m1_3165  [color=darkseagreen4, key=1, label=jsonString, style=dashed];
m1_3164 -> m1_3165  [color=red, key=0, style=solid];
m1_3164 -> m1_42  [color=red, key=2, style=dotted];
m1_3165 -> m1_3166  [key=0, style=solid];
m1_3165 -> m1_49  [key=2, style=dotted];
m1_3165 -> m1_3167  [color=darkseagreen4, key=1, label=actual, style=dashed];
m1_3165 -> m1_3168  [color=darkseagreen4, key=1, label=actual, style=dashed];
m1_3166 -> m1_3167  [key=0, style=solid];
m1_3166 -> m1_1246  [key=2, style=dotted];
m1_3166 -> m1_24  [key=2, style=dotted];
m1_3167 -> m1_3168  [key=0, style=solid];
m1_3167 -> m1_1246  [key=2, style=dotted];
m1_3167 -> m1_24  [key=2, style=dotted];
m1_3168 -> m1_3169  [key=0, style=solid];
m1_3169 -> m1_3170  [key=0, style=solid];
m1_3169 -> m1_430  [key=2, style=dotted];
m1_3169 -> m1_3011  [key=2, style=dotted];
m1_3170 -> m1_3161  [color=blue, key=0, style=bold];
m1_394 -> m1_395  [key=0, style=solid];
m1_395 -> m1_396  [key=0, style=solid];
m1_395 -> m1_402  [key=2, style=dotted];
m1_395 -> m1_398  [color=darkseagreen4, key=1, label=input, style=dashed];
m1_395 -> m1_399  [color=darkseagreen4, key=1, label=input, style=dashed];
m1_395 -> m1_400  [color=darkseagreen4, key=1, label=input, style=dashed];
m1_396 -> m1_397  [key=0, style=solid];
m1_396 -> m1_129  [key=2, style=dotted];
m1_398 -> m1_399  [key=0, style=solid];
m1_398 -> m1_24  [key=2, style=dotted];
m1_399 -> m1_400  [key=0, style=solid];
m1_399 -> m1_24  [key=2, style=dotted];
m1_400 -> m1_401  [key=0, style=solid];
m1_400 -> m1_24  [key=2, style=dotted];
m1_397 -> m1_398  [key=0, style=solid];
m1_397 -> m1_49  [key=2, style=dotted];
m1_397 -> m1_399  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m1_397 -> m1_400  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m1_401 -> m1_394  [color=blue, key=0, style=bold];
m1_3517 -> m1_3518  [key=0, style=solid];
m1_3518 -> m1_3519  [key=0, style=solid];
m1_3518 -> m1_3521  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3518 -> m1_3526  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3518 -> m1_3529  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3518 -> m1_3518  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_3519 -> m1_3520  [key=0, style=solid];
m1_3519 -> m1_175  [key=2, style=dotted];
m1_3519 -> m1_3524  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_3519 -> m1_3525  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_3521 -> m1_3522  [key=0, style=solid];
m1_3521 -> m1_16  [key=2, style=dotted];
m1_3521 -> m1_373  [key=2, style=dotted];
m1_3521 -> m1_20  [key=2, style=dotted];
m1_3521 -> m1_3523  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_3526 -> m1_3527  [key=0, style=solid];
m1_3526 -> m1_60  [key=2, style=dotted];
m1_3526 -> m1_3528  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_3520 -> m1_3521  [key=0, style=solid];
m1_3520 -> m1_833  [key=2, style=dotted];
m1_3524 -> m1_3525  [key=0, style=solid];
m1_3525 -> m1_3526  [key=0, style=solid];
m1_3525 -> m1_833  [key=2, style=dotted];
m1_3525 -> m1_3529  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_3522 -> m1_3523  [key=0, style=solid];
m1_3522 -> m1_797  [key=2, style=dotted];
m1_3523 -> m1_3524  [key=0, style=solid];
m1_3523 -> m1_24  [key=2, style=dotted];
m1_3527 -> m1_3517  [color=blue, key=0, style=bold];
m1_2277 -> m1_2278  [key=0, style=solid];
m1_2278 -> m1_2279  [key=0, style=solid];
m1_2278 -> m1_2285  [key=2, style=dotted];
m1_2279 -> m1_2280  [key=0, style=solid];
m1_2279 -> m1_41  [key=2, style=dotted];
m1_2280 -> m1_2281  [key=0, style=solid];
m1_2280 -> m1_42  [key=2, style=dotted];
m1_2281 -> m1_2282  [key=0, style=solid];
m1_2281 -> m1_2286  [key=2, style=dotted];
m1_2282 -> m1_2283  [key=0, style=solid];
m1_2282 -> m1_41  [key=2, style=dotted];
m1_2283 -> m1_2284  [key=0, style=solid];
m1_2283 -> m1_42  [key=2, style=dotted];
m1_2284 -> m1_2277  [color=blue, key=0, style=bold];
m1_3916 -> m1_3917  [key=0, style=solid];
m1_3917 -> m1_3918  [key=0, style=solid];
m1_3917 -> m1_3900  [key=2, style=dotted];
m1_3918 -> m1_3916  [color=blue, key=0, style=bold];
m1_4177 -> m1_4178  [key=0, style=solid];
m1_4178 -> m1_4179  [key=0, style=solid];
m1_4178 -> m1_2395  [key=2, style=dotted];
m1_4179 -> m1_4177  [color=blue, key=0, style=bold];
m1_2694 -> m1_2695  [key=0, style=solid];
m1_2694 -> m1_2683  [color=darkorchid, key=3, label="Parameter variable string serStr", style=bold];
m1_2695 -> m1_2696  [key=0, style=solid];
m1_2695 -> m1_175  [key=2, style=dotted];
m1_2695 -> m1_296  [key=2, style=dotted];
m1_2696 -> m1_2694  [color=blue, key=0, style=bold];
m1_3232 -> m1_3233  [key=0, style=solid];
m1_3233 -> m1_3234  [key=0, style=solid];
m1_3233 -> m1_60  [key=2, style=dotted];
m1_3233 -> m1_3235  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_3234 -> m1_3232  [color=blue, key=0, style=bold];
m1_1493 -> m1_1494  [key=0, style=solid];
m1_1494 -> m1_1495  [key=0, style=solid];
m1_1494 -> m1_1494  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1495 -> m1_1496  [key=0, style=solid];
m1_1495 -> m1_49  [key=2, style=dotted];
m1_1496 -> m1_1493  [color=blue, key=0, style=bold];
m1_2860 -> m1_2861  [key=0, style=solid];
m1_2861 -> m1_2862  [key=0, style=solid];
m1_2861 -> m1_2395  [key=2, style=dotted];
m1_2862 -> m1_2860  [color=blue, key=0, style=bold];
m1_3815 -> m1_3816  [key=0, style=solid];
m1_3816 -> m1_3817  [key=0, style=solid];
m1_3816 -> m1_740  [key=2, style=dotted];
m1_3816 -> m1_1246  [key=2, style=dotted];
m1_3816 -> m1_3818  [color=darkseagreen4, key=1, label=john, style=dashed];
m1_3816 -> m1_3819  [color=darkseagreen4, key=1, label=john, style=dashed];
m1_3816 -> m1_3820  [color=darkseagreen4, key=1, label=john, style=dashed];
m1_3817 -> m1_3818  [key=0, style=solid];
m1_3817 -> m1_740  [key=2, style=dotted];
m1_3817 -> m1_1246  [key=2, style=dotted];
m1_3817 -> m1_3819  [color=darkseagreen4, key=1, label=jane, style=dashed];
m1_3817 -> m1_3820  [color=darkseagreen4, key=1, label=jane, style=dashed];
m1_3818 -> m1_3819  [key=0, style=solid];
m1_3819 -> m1_3820  [key=0, style=solid];
m1_3820 -> m1_3821  [key=0, style=solid];
m1_3820 -> m1_134  [key=2, style=dotted];
m1_3821 -> m1_3822  [key=0, style=solid];
m1_3821 -> m1_175  [key=2, style=dotted];
m1_3821 -> m1_176  [key=2, style=dotted];
m1_3822 -> m1_3823  [key=0, style=solid];
m1_3822 -> m1_42  [key=2, style=dotted];
m1_3823 -> m1_3815  [color=blue, key=0, style=bold];
m1_1979 -> m1_1980  [key=0, style=solid];
m1_1980 -> m1_1981  [key=0, style=solid];
m1_1980 -> m1_49  [key=2, style=dotted];
m1_1980 -> m1_1982  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_1980 -> m1_1983  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_1980 -> m1_1984  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_1980 -> m1_1985  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_1980 -> m1_1986  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_1980 -> m1_1987  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_1980 -> m1_1988  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_1980 -> m1_1989  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_1981 -> m1_1982  [key=0, style=solid];
m1_1981 -> m1_797  [key=2, style=dotted];
m1_1982 -> m1_1983  [key=0, style=solid];
m1_1982 -> m1_797  [key=2, style=dotted];
m1_1983 -> m1_1984  [key=0, style=solid];
m1_1983 -> m1_375  [key=2, style=dotted];
m1_1983 -> m1_24  [key=2, style=dotted];
m1_1984 -> m1_1985  [key=0, style=solid];
m1_1984 -> m1_375  [key=2, style=dotted];
m1_1984 -> m1_24  [key=2, style=dotted];
m1_1985 -> m1_1986  [key=0, style=solid];
m1_1985 -> m1_24  [key=2, style=dotted];
m1_1986 -> m1_1987  [key=0, style=solid];
m1_1986 -> m1_24  [key=2, style=dotted];
m1_1987 -> m1_1988  [key=0, style=solid];
m1_1987 -> m1_24  [key=2, style=dotted];
m1_1988 -> m1_1989  [key=0, style=solid];
m1_1988 -> m1_24  [key=2, style=dotted];
m1_1989 -> m1_1990  [key=0, style=solid];
m1_1989 -> m1_24  [key=2, style=dotted];
m1_1990 -> m1_1979  [color=blue, key=0, style=bold];
m1_446 -> m1_447  [key=0, style=solid];
m1_447 -> m1_448  [key=0, style=solid];
m1_447 -> m1_454  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_447 -> m1_447  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_448 -> m1_449  [key=0, style=solid];
m1_448 -> m1_465  [key=2, style=dotted];
m1_448 -> m1_450  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_448 -> m1_451  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_448 -> m1_452  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_448 -> m1_453  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_448 -> m1_454  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_454 -> m1_455  [key=0, style=solid];
m1_454 -> m1_467  [key=2, style=dotted];
m1_454 -> m1_468  [key=2, style=dotted];
m1_454 -> m1_22  [key=2, style=dotted];
m1_449 -> m1_450  [key=0, style=solid];
m1_449 -> m1_24  [key=2, style=dotted];
m1_450 -> m1_451  [key=0, style=solid];
m1_450 -> m1_24  [key=2, style=dotted];
m1_451 -> m1_452  [key=0, style=solid];
m1_451 -> m1_24  [key=2, style=dotted];
m1_452 -> m1_453  [key=0, style=solid];
m1_452 -> m1_466  [key=2, style=dotted];
m1_452 -> m1_24  [key=2, style=dotted];
m1_453 -> m1_454  [key=0, style=solid];
m1_453 -> m1_24  [key=2, style=dotted];
m1_455 -> m1_456  [key=0, style=solid];
m1_455 -> m1_458  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_456 -> m1_457  [key=0, style=solid];
m1_456 -> m1_465  [key=2, style=dotted];
m1_456 -> m1_458  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_458 -> m1_459  [key=0, style=solid];
m1_458 -> m1_467  [key=2, style=dotted];
m1_458 -> m1_468  [key=2, style=dotted];
m1_458 -> m1_22  [key=2, style=dotted];
m1_457 -> m1_458  [key=0, style=solid];
m1_457 -> m1_24  [key=2, style=dotted];
m1_459 -> m1_460  [key=0, style=solid];
m1_459 -> m1_463  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_460 -> m1_461  [key=0, style=solid];
m1_460 -> m1_465  [key=2, style=dotted];
m1_460 -> m1_462  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_460 -> m1_463  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_463 -> m1_464  [key=0, style=solid];
m1_463 -> m1_467  [key=2, style=dotted];
m1_463 -> m1_468  [key=2, style=dotted];
m1_463 -> m1_22  [key=2, style=dotted];
m1_461 -> m1_462  [key=0, style=solid];
m1_461 -> m1_24  [key=2, style=dotted];
m1_462 -> m1_463  [key=0, style=solid];
m1_462 -> m1_24  [key=2, style=dotted];
m1_464 -> m1_446  [color=blue, key=0, style=bold];
m1_1811 -> m1_1812  [key=0, style=solid];
m1_1812 -> m1_1813  [key=0, style=solid];
m1_1812 -> m1_1816  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1812 -> m1_1777  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1813 -> m1_1814  [key=0, style=solid];
m1_1813 -> m1_60  [key=2, style=dotted];
m1_1813 -> m1_1815  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1814 -> m1_1811  [color=blue, key=0, style=bold];
m1_391 -> m1_392  [key=0, style=solid];
m1_392 -> m1_393  [key=0, style=solid];
m1_393 -> m1_391  [color=blue, key=0, style=bold];
m1_938 -> m1_939  [key=0, style=solid];
m1_939 -> m1_940  [key=0, style=solid];
m1_939 -> m1_953  [key=2, style=dotted];
m1_939 -> m1_941  [color=darkseagreen4, key=1, label=product, style=dashed];
m1_939 -> m1_942  [color=darkseagreen4, key=1, label=product, style=dashed];
m1_939 -> m1_943  [color=darkseagreen4, key=1, label=product, style=dashed];
m1_939 -> m1_944  [color=darkseagreen4, key=1, label=product, style=dashed];
m1_940 -> m1_941  [key=0, style=solid];
m1_941 -> m1_942  [key=0, style=solid];
m1_941 -> m1_954  [key=2, style=dotted];
m1_942 -> m1_943  [key=0, style=solid];
m1_943 -> m1_944  [key=0, style=solid];
m1_944 -> m1_945  [key=0, style=solid];
m1_944 -> m1_129  [key=2, style=dotted];
m1_945 -> m1_946  [key=0, style=solid];
m1_945 -> m1_936  [key=2, style=dotted];
m1_945 -> m1_947  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m1_945 -> m1_948  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m1_945 -> m1_949  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m1_945 -> m1_950  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m1_945 -> m1_951  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m1_946 -> m1_947  [key=0, style=solid];
m1_946 -> m1_24  [key=2, style=dotted];
m1_947 -> m1_948  [key=0, style=solid];
m1_947 -> m1_954  [key=2, style=dotted];
m1_947 -> m1_24  [key=2, style=dotted];
m1_948 -> m1_949  [key=0, style=solid];
m1_948 -> m1_24  [key=2, style=dotted];
m1_949 -> m1_950  [key=0, style=solid];
m1_949 -> m1_24  [key=2, style=dotted];
m1_950 -> m1_951  [key=0, style=solid];
m1_950 -> m1_24  [key=2, style=dotted];
m1_951 -> m1_952  [key=0, style=solid];
m1_951 -> m1_24  [key=2, style=dotted];
m1_952 -> m1_938  [color=blue, key=0, style=bold];
m1_3889 -> m1_3890  [key=0, style=solid];
m1_3889 -> m1_3892  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_3889 -> m1_3894  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_3889 -> m1_3896  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_3890 -> m1_3891  [key=0, style=solid];
m1_3890 -> m1_3892  [key=0, style=solid];
m1_3892 -> m1_3893  [key=0, style=solid];
m1_3892 -> m1_3894  [key=0, style=solid];
m1_3894 -> m1_3895  [key=0, style=solid];
m1_3894 -> m1_3896  [key=0, style=solid];
m1_3896 -> m1_3897  [key=0, style=solid];
m1_3896 -> m1_3898  [key=0, style=solid];
m1_3891 -> m1_3899  [key=0, style=solid];
m1_3893 -> m1_3899  [key=0, style=solid];
m1_3895 -> m1_3899  [key=0, style=solid];
m1_3897 -> m1_3899  [key=0, style=solid];
m1_3897 -> m1_831  [key=2, style=dotted];
m1_3898 -> m1_3899  [key=0, style=solid];
m1_3898 -> m1_3900  [key=2, style=dotted];
m1_3899 -> m1_3889  [color=blue, key=0, style=bold];
m1_2585 -> m1_2586  [key=0, style=solid];
m1_2586 -> m1_2587  [key=0, style=solid];
m1_2586 -> m1_2606  [key=2, style=dotted];
m1_2586 -> m1_2588  [color=darkseagreen4, key=1, label=expando, style=dashed];
m1_2586 -> m1_2589  [color=darkseagreen4, key=1, label=expando, style=dashed];
m1_2586 -> m1_2590  [color=darkseagreen4, key=1, label=expando, style=dashed];
m1_2586 -> m1_2591  [color=darkseagreen4, key=1, label=expando, style=dashed];
m1_2586 -> m1_2592  [color=darkseagreen4, key=1, label=expando, style=dashed];
m1_2586 -> m1_2596  [color=darkseagreen4, key=1, label=expando, style=dashed];
m1_2586 -> m1_2598  [color=darkseagreen4, key=1, label=expando, style=dashed];
m1_2586 -> m1_2602  [color=darkseagreen4, key=1, label=expando, style=dashed];
m1_2586 -> m1_2604  [color=darkseagreen4, key=1, label=expando, style=dashed];
m1_2587 -> m1_2588  [key=0, style=solid];
m1_2588 -> m1_2589  [key=0, style=solid];
m1_2589 -> m1_2590  [key=0, style=solid];
m1_2589 -> m1_2606  [key=2, style=dotted];
m1_2590 -> m1_2591  [key=0, style=solid];
m1_2591 -> m1_2592  [key=0, style=solid];
m1_2591 -> m1_1102  [key=2, style=dotted];
m1_2592 -> m1_2593  [key=0, style=solid];
m1_2592 -> m1_2607  [key=2, style=dotted];
m1_2592 -> m1_2594  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_2596 -> m1_2597  [key=0, style=solid];
m1_2596 -> m1_24  [key=2, style=dotted];
m1_2598 -> m1_2599  [key=0, style=solid];
m1_2598 -> m1_24  [key=2, style=dotted];
m1_2602 -> m1_2603  [key=0, style=solid];
m1_2602 -> m1_24  [key=2, style=dotted];
m1_2604 -> m1_2605  [key=0, style=solid];
m1_2604 -> m1_24  [key=2, style=dotted];
m1_2593 -> m1_2594  [key=0, style=solid];
m1_2593 -> m1_42  [key=2, style=dotted];
m1_2594 -> m1_2595  [key=0, style=solid];
m1_2594 -> m1_49  [key=2, style=dotted];
m1_2594 -> m1_2596  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m1_2594 -> m1_2597  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m1_2594 -> m1_2598  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m1_2594 -> m1_2599  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m1_2594 -> m1_2600  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m1_2595 -> m1_2596  [key=0, style=solid];
m1_2595 -> m1_746  [key=2, style=dotted];
m1_2597 -> m1_2598  [key=0, style=solid];
m1_2597 -> m1_746  [key=2, style=dotted];
m1_2599 -> m1_2600  [key=0, style=solid];
m1_2599 -> m1_746  [key=2, style=dotted];
m1_2600 -> m1_2601  [key=0, style=solid];
m1_2600 -> m1_2602  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_2600 -> m1_2603  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_2600 -> m1_2604  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_2601 -> m1_2602  [key=0, style=solid];
m1_2601 -> m1_746  [key=2, style=dotted];
m1_2603 -> m1_2604  [key=0, style=solid];
m1_2603 -> m1_746  [key=2, style=dotted];
m1_2605 -> m1_2585  [color=blue, key=0, style=bold];
m1_691 -> m1_692  [key=0, style=solid];
m1_692 -> m1_693  [key=0, style=solid];
m1_693 -> m1_691  [color=blue, key=0, style=bold];
m1_3904 -> m1_3905  [key=0, style=solid];
m1_3905 -> m1_3906  [key=0, style=solid];
m1_3905 -> m1_3900  [key=2, style=dotted];
m1_3906 -> m1_3904  [color=blue, key=0, style=bold];
m1_1854 -> m1_1855  [key=0, style=solid];
m1_1855 -> m1_1856  [key=0, style=solid];
m1_1855 -> m1_1855  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1856 -> m1_1857  [key=0, style=solid];
m1_1856 -> m1_49  [key=2, style=dotted];
m1_1857 -> m1_1858  [key=0, style=solid];
m1_1857 -> m1_24  [key=2, style=dotted];
m1_1858 -> m1_1854  [color=blue, key=0, style=bold];
m1_191 -> m1_192  [key=0, style=solid];
m1_192 -> m1_193  [key=0, style=solid];
m1_192 -> m1_196  [key=2, style=dotted];
m1_193 -> m1_194  [key=0, style=solid];
m1_193 -> m1_175  [key=2, style=dotted];
m1_193 -> m1_197  [key=2, style=dotted];
m1_193 -> m1_198  [key=2, style=dotted];
m1_194 -> m1_195  [key=0, style=solid];
m1_194 -> m1_24  [key=2, style=dotted];
m1_195 -> m1_191  [color=blue, key=0, style=bold];
m1_3538 -> m1_3539  [key=0, style=solid];
m1_3539 -> m1_3540  [key=0, style=solid];
m1_3539 -> m1_60  [key=2, style=dotted];
m1_3539 -> m1_3541  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_3539 -> m1_3539  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_3540 -> m1_3538  [color=blue, key=0, style=bold];
m1_50 -> m1_51  [key=0, style=solid];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_49  [key=2, style=dotted];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_56  [key=2, style=dotted];
m1_52 -> m1_52  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_52 -> m1_54  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_24  [key=2, style=dotted];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_24  [key=2, style=dotted];
m1_54 -> m1_54  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_55 -> m1_50  [color=blue, key=0, style=bold];
m1_4014 -> m1_4015  [key=0, style=solid];
m1_4015 -> m1_4016  [key=0, style=solid];
m1_4015 -> m1_954  [key=2, style=dotted];
m1_4015 -> m1_4018  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_4015 -> m1_4021  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_4016 -> m1_4017  [key=0, style=solid];
m1_4016 -> m1_3968  [color=darkorchid, key=3, label="Local variable string dateFormatString", style=bold];
m1_4018 -> m1_4019  [key=0, style=solid];
m1_4018 -> m1_196  [key=2, style=dotted];
m1_4018 -> m1_176  [key=2, style=dotted];
m1_4018 -> m1_4020  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4021 -> m1_4022  [key=0, style=solid];
m1_4021 -> m1_1681  [key=2, style=dotted];
m1_4021 -> m1_24  [key=2, style=dotted];
m1_4017 -> m1_4018  [key=0, style=solid];
m1_4017 -> m1_175  [key=2, style=dotted];
m1_4017 -> m1_4020  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_4020 -> m1_4021  [key=0, style=solid];
m1_4020 -> m1_296  [key=2, style=dotted];
m1_4019 -> m1_4020  [key=0, style=solid];
m1_4019 -> m1_42  [key=2, style=dotted];
m1_4022 -> m1_4014  [color=blue, key=0, style=bold];
m1_1902 -> m1_1903  [key=0, style=solid];
m1_1903 -> m1_1904  [key=0, style=solid];
m1_1903 -> m1_1912  [key=2, style=dotted];
m1_1903 -> m1_1907  [color=darkseagreen4, key=1, label=structTest, style=dashed];
m1_1904 -> m1_1905  [key=0, style=solid];
m1_1904 -> m1_41  [key=2, style=dotted];
m1_1904 -> m1_1906  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1907 -> m1_1908  [key=0, style=solid];
m1_1907 -> m1_24  [key=2, style=dotted];
m1_1907 -> m1_1907  [color=darkseagreen4, key=1, label=structTest, style=dashed];
m1_1907 -> m1_1909  [color=darkseagreen4, key=1, label=structTest, style=dashed];
m1_1905 -> m1_1906  [key=0, style=solid];
m1_1905 -> m1_42  [key=2, style=dotted];
m1_1906 -> m1_1907  [key=0, style=solid];
m1_1906 -> m1_49  [key=2, style=dotted];
m1_1908 -> m1_1909  [key=0, style=solid];
m1_1908 -> m1_24  [key=2, style=dotted];
m1_1909 -> m1_1910  [key=0, style=solid];
m1_1909 -> m1_24  [key=2, style=dotted];
m1_1909 -> m1_1909  [color=darkseagreen4, key=1, label=structTest, style=dashed];
m1_1910 -> m1_1911  [key=0, style=solid];
m1_1910 -> m1_24  [key=2, style=dotted];
m1_1911 -> m1_1902  [color=blue, key=0, style=bold];
m1_3139 -> m1_3140  [key=0, style=solid];
m1_3140 -> m1_3141  [key=0, style=solid];
m1_3140 -> m1_60  [key=2, style=dotted];
m1_3140 -> m1_3142  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_3140 -> m1_3140  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_3141 -> m1_3139  [color=blue, key=0, style=bold];
m1_4032 -> m1_4033  [key=0, style=solid];
m1_4033 -> m1_4034  [key=0, style=solid];
m1_4033 -> m1_376  [key=2, style=dotted];
m1_4033 -> m1_4036  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_4033 -> m1_4039  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_4034 -> m1_4035  [key=0, style=solid];
m1_4034 -> m1_4025  [color=darkorchid, key=3, label="Local variable string dateFormatString", style=bold];
m1_4036 -> m1_4037  [key=0, style=solid];
m1_4036 -> m1_196  [key=2, style=dotted];
m1_4036 -> m1_176  [key=2, style=dotted];
m1_4036 -> m1_4038  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4039 -> m1_4040  [key=0, style=solid];
m1_4039 -> m1_1681  [key=2, style=dotted];
m1_4039 -> m1_24  [key=2, style=dotted];
m1_4035 -> m1_4036  [key=0, style=solid];
m1_4035 -> m1_175  [key=2, style=dotted];
m1_4035 -> m1_4038  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_4038 -> m1_4039  [key=0, style=solid];
m1_4038 -> m1_296  [key=2, style=dotted];
m1_4037 -> m1_4038  [key=0, style=solid];
m1_4037 -> m1_42  [key=2, style=dotted];
m1_4040 -> m1_4032  [color=blue, key=0, style=bold];
m1_25 -> m1_26  [key=0, style=solid];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_28  [key=2, style=dotted];
m1_27 -> m1_25  [color=blue, key=0, style=bold];
m1_1060 -> m1_1061  [key=0, style=solid];
m1_1061 -> m1_1062  [key=0, style=solid];
m1_1061 -> m1_1065  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1061 -> m1_1061  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1062 -> m1_1063  [key=0, style=solid];
m1_1062 -> m1_60  [key=2, style=dotted];
m1_1062 -> m1_1064  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1063 -> m1_1060  [color=blue, key=0, style=bold];
m1_1569 -> m1_1570  [key=0, style=solid];
m1_1570 -> m1_1571  [key=0, style=solid];
m1_1570 -> m1_1578  [key=2, style=dotted];
m1_1570 -> m1_1572  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_1571 -> m1_1572  [key=0, style=solid];
m1_1572 -> m1_1573  [key=0, style=solid];
m1_1572 -> m1_129  [key=2, style=dotted];
m1_1572 -> m1_1574  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1573 -> m1_1574  [key=0, style=solid];
m1_1573 -> m1_24  [key=2, style=dotted];
m1_1574 -> m1_1575  [key=0, style=solid];
m1_1574 -> m1_49  [key=2, style=dotted];
m1_1575 -> m1_1576  [key=0, style=solid];
m1_1575 -> m1_129  [key=2, style=dotted];
m1_1576 -> m1_1577  [key=0, style=solid];
m1_1576 -> m1_24  [key=2, style=dotted];
m1_1577 -> m1_1569  [color=blue, key=0, style=bold];
m1_3458 -> m1_3459  [key=0, style=solid];
m1_3459 -> m1_3460  [key=0, style=solid];
m1_3459 -> m1_196  [key=2, style=dotted];
m1_3459 -> m1_1102  [key=2, style=dotted];
m1_3460 -> m1_3461  [key=0, style=solid];
m1_3460 -> m1_175  [key=2, style=dotted];
m1_3460 -> m1_198  [key=2, style=dotted];
m1_3460 -> m1_3462  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3461 -> m1_3462  [key=0, style=solid];
m1_3461 -> m1_42  [key=2, style=dotted];
m1_3462 -> m1_3463  [key=0, style=solid];
m1_3462 -> m1_49  [key=2, style=dotted];
m1_3462 -> m1_3464  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m1_3462 -> m1_3465  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m1_3463 -> m1_3464  [key=0, style=solid];
m1_3463 -> m1_24  [key=2, style=dotted];
m1_3464 -> m1_3465  [key=0, style=solid];
m1_3464 -> m1_1102  [key=2, style=dotted];
m1_3464 -> m1_24  [key=2, style=dotted];
m1_3465 -> m1_3466  [key=0, style=solid];
m1_3465 -> m1_1102  [key=2, style=dotted];
m1_3465 -> m1_24  [key=2, style=dotted];
m1_3466 -> m1_3458  [color=blue, key=0, style=bold];
m1_783 -> m1_784  [key=0, style=solid];
m1_784 -> m1_785  [key=0, style=solid];
m1_784 -> m1_789  [key=2, style=dotted];
m1_784 -> m1_790  [key=2, style=dotted];
m1_785 -> m1_786  [key=0, style=solid];
m1_785 -> m1_129  [key=2, style=dotted];
m1_785 -> m1_787  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_786 -> m1_787  [key=0, style=solid];
m1_786 -> m1_786  [color=darkorchid, key=3, label="Local variable string expectedJson", style=bold];
m1_787 -> m1_788  [key=0, style=solid];
m1_787 -> m1_24  [key=2, style=dotted];
m1_788 -> m1_783  [color=blue, key=0, style=bold];
m1_2937 -> m1_2938  [key=0, style=solid];
m1_2938 -> m1_2939  [key=0, style=solid];
m1_2938 -> m1_2948  [key=2, style=dotted];
m1_2938 -> m1_2942  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_2938 -> m1_2943  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_2938 -> m1_2944  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_2938 -> m1_2945  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_2938 -> m1_2946  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_2939 -> m1_2940  [key=0, style=solid];
m1_2939 -> m1_41  [key=2, style=dotted];
m1_2939 -> m1_2941  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_2942 -> m1_2943  [key=0, style=solid];
m1_2942 -> m1_24  [key=2, style=dotted];
m1_2943 -> m1_2944  [key=0, style=solid];
m1_2943 -> m1_24  [key=2, style=dotted];
m1_2944 -> m1_2945  [key=0, style=solid];
m1_2944 -> m1_24  [key=2, style=dotted];
m1_2945 -> m1_2946  [key=0, style=solid];
m1_2945 -> m1_24  [key=2, style=dotted];
m1_2946 -> m1_2947  [key=0, style=solid];
m1_2946 -> m1_24  [key=2, style=dotted];
m1_2940 -> m1_2941  [key=0, style=solid];
m1_2940 -> m1_42  [key=2, style=dotted];
m1_2941 -> m1_2942  [key=0, style=solid];
m1_2941 -> m1_49  [key=2, style=dotted];
m1_2941 -> m1_2943  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_2941 -> m1_2944  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_2941 -> m1_2945  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_2941 -> m1_2946  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_2947 -> m1_2937  [color=blue, key=0, style=bold];
m1_3833 -> m1_3834  [key=0, style=solid];
m1_3834 -> m1_3835  [key=0, style=solid];
m1_3834 -> m1_3813  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_3835 -> m1_3836  [key=0, style=solid];
m1_3835 -> m1_175  [key=2, style=dotted];
m1_3835 -> m1_542  [key=2, style=dotted];
m1_3835 -> m1_296  [key=2, style=dotted];
m1_3835 -> m1_3837  [color=darkseagreen4, key=1, label=people, style=dashed];
m1_3835 -> m1_3838  [color=darkseagreen4, key=1, label=people, style=dashed];
m1_3836 -> m1_3837  [key=0, style=solid];
m1_3836 -> m1_24  [key=2, style=dotted];
m1_3837 -> m1_3838  [key=0, style=solid];
m1_3837 -> m1_3839  [color=darkseagreen4, key=1, label=john, style=dashed];
m1_3837 -> m1_3840  [color=darkseagreen4, key=1, label=john, style=dashed];
m1_3838 -> m1_3839  [key=0, style=solid];
m1_3838 -> m1_3840  [color=darkseagreen4, key=1, label=jane, style=dashed];
m1_3839 -> m1_3840  [key=0, style=solid];
m1_3839 -> m1_24  [key=2, style=dotted];
m1_3840 -> m1_3841  [key=0, style=solid];
m1_3840 -> m1_24  [key=2, style=dotted];
m1_3841 -> m1_3833  [color=blue, key=0, style=bold];
m1_1790 -> m1_1791  [key=0, style=solid];
m1_1791 -> m1_1792  [key=0, style=solid];
m1_1791 -> m1_1795  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1791 -> m1_1777  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1792 -> m1_1793  [key=0, style=solid];
m1_1792 -> m1_60  [key=2, style=dotted];
m1_1792 -> m1_1794  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1793 -> m1_1790  [color=blue, key=0, style=bold];
m1_3614 -> m1_3615  [key=0, style=solid];
m1_3615 -> m1_3616  [key=0, style=solid];
m1_3615 -> m1_3615  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_3616 -> m1_3617  [key=0, style=solid];
m1_3616 -> m1_49  [key=2, style=dotted];
m1_3616 -> m1_3618  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_3617 -> m1_3618  [key=0, style=solid];
m1_3617 -> m1_24  [key=2, style=dotted];
m1_3618 -> m1_3619  [key=0, style=solid];
m1_3618 -> m1_24  [key=2, style=dotted];
m1_3619 -> m1_3614  [color=blue, key=0, style=bold];
m1_4134 -> m1_4135  [key=0, style=solid];
m1_4134 -> m1_3243  [color=darkorchid, key=3, label="method methodReturn object ReadJson", style=bold];
m1_4135 -> m1_4136  [key=0, style=solid];
m1_4135 -> m1_20  [key=2, style=dotted];
m1_4135 -> m1_4138  [color=darkseagreen4, key=1, label=messageJObject, style=dashed];
m1_4135 -> m1_4141  [color=darkseagreen4, key=1, label=messageJObject, style=dashed];
m1_4136 -> m1_4137  [key=0, style=solid];
m1_4136 -> m1_4138  [key=0, style=solid];
m1_4138 -> m1_4139  [key=0, style=solid];
m1_4138 -> m1_4145  [key=2, style=dotted];
m1_4138 -> m1_4146  [key=2, style=dotted];
m1_4138 -> m1_4142  [color=darkseagreen4, key=1, label=address, style=dashed];
m1_4138 -> m1_4143  [color=darkseagreen4, key=1, label=address, style=dashed];
m1_4141 -> m1_4142  [key=0, style=solid];
m1_4141 -> m1_4143  [key=0, style=solid];
m1_4141 -> m1_4147  [key=2, style=dotted];
m1_4141 -> m1_4146  [key=2, style=dotted];
m1_4141 -> m1_4148  [key=2, style=dotted];
m1_4141 -> m1_4141  [color=darkseagreen4, key=1, label=displayNameToken, style=dashed];
m1_4137 -> m1_4144  [key=0, style=solid];
m1_4139 -> m1_4140  [key=0, style=solid];
m1_4139 -> m1_4141  [color=darkseagreen4, key=1, label=displayNameToken, style=dashed];
m1_4142 -> m1_4144  [key=0, style=solid];
m1_4142 -> m1_4149  [key=2, style=dotted];
m1_4143 -> m1_4144  [key=0, style=solid];
m1_4143 -> m1_4150  [key=2, style=dotted];
m1_4140 -> m1_4141  [key=0, style=solid];
m1_4144 -> m1_4134  [color=blue, key=0, style=bold];
m1_4187 -> m1_4188  [key=0, style=solid];
m1_4188 -> m1_4189  [key=0, style=solid];
m1_4189 -> m1_4190  [key=0, style=solid];
m1_4190 -> m1_4187  [color=blue, key=0, style=bold];
m1_1832 -> m1_1833  [key=0, style=solid];
m1_1833 -> m1_1834  [key=0, style=solid];
m1_1833 -> m1_149  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1834 -> m1_1835  [key=0, style=solid];
m1_1834 -> m1_49  [key=2, style=dotted];
m1_1835 -> m1_1836  [key=0, style=solid];
m1_1835 -> m1_1838  [key=0, style=solid];
m1_1835 -> m1_21  [key=2, style=dotted];
m1_1836 -> m1_1837  [key=0, style=solid];
m1_1837 -> m1_1838  [key=0, style=solid];
m1_1837 -> m1_1457  [key=2, style=dotted];
m1_1837 -> m1_22  [key=2, style=dotted];
m1_1838 -> m1_1832  [color=blue, key=0, style=bold];
m1_544 -> m1_545  [key=0, style=solid];
m1_545 -> m1_546  [key=0, style=solid];
m1_545 -> m1_175  [key=2, style=dotted];
m1_545 -> m1_547  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_548  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_549  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_550  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_551  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_552  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_553  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_554  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_556  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_557  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_558  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_559  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_560  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_561  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_562  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_563  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_564  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_565  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_566  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_567  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_568  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_569  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_570  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_571  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_572  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_573  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_574  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_575  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_576  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_577  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_578  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_579  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_580  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_581  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_582  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_583  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_584  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_585  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_586  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_587  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_588  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_589  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_590  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_591  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_593  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_594  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_595  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_596  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_597  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_598  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_599  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_601  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_602  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_603  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_604  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_605  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_545 -> m1_606  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_546 -> m1_547  [key=0, style=solid];
m1_546 -> m1_536  [key=2, style=dotted];
m1_546 -> m1_548  [color=darkseagreen4, key=1, label=customBinder, style=dashed];
m1_547 -> m1_548  [key=0, style=solid];
m1_548 -> m1_549  [key=0, style=solid];
m1_548 -> m1_24  [key=2, style=dotted];
m1_549 -> m1_550  [key=0, style=solid];
m1_550 -> m1_551  [key=0, style=solid];
m1_550 -> m1_24  [key=2, style=dotted];
m1_551 -> m1_552  [key=0, style=solid];
m1_552 -> m1_553  [key=0, style=solid];
m1_552 -> m1_24  [key=2, style=dotted];
m1_553 -> m1_554  [key=0, style=solid];
m1_553 -> m1_537  [key=2, style=dotted];
m1_554 -> m1_555  [key=0, style=solid];
m1_554 -> m1_537  [key=2, style=dotted];
m1_554 -> m1_24  [key=2, style=dotted];
m1_556 -> m1_557  [key=0, style=solid];
m1_557 -> m1_558  [key=0, style=solid];
m1_557 -> m1_24  [key=2, style=dotted];
m1_558 -> m1_559  [key=0, style=solid];
m1_558 -> m1_235  [key=2, style=dotted];
m1_558 -> m1_322  [key=2, style=dotted];
m1_559 -> m1_560  [key=0, style=solid];
m1_559 -> m1_24  [key=2, style=dotted];
m1_560 -> m1_561  [key=0, style=solid];
m1_560 -> m1_540  [key=2, style=dotted];
m1_561 -> m1_562  [key=0, style=solid];
m1_561 -> m1_541  [key=2, style=dotted];
m1_561 -> m1_24  [key=2, style=dotted];
m1_562 -> m1_563  [key=0, style=solid];
m1_563 -> m1_564  [key=0, style=solid];
m1_563 -> m1_24  [key=2, style=dotted];
m1_564 -> m1_565  [key=0, style=solid];
m1_565 -> m1_566  [key=0, style=solid];
m1_565 -> m1_24  [key=2, style=dotted];
m1_566 -> m1_567  [key=0, style=solid];
m1_567 -> m1_568  [key=0, style=solid];
m1_567 -> m1_24  [key=2, style=dotted];
m1_568 -> m1_569  [key=0, style=solid];
m1_569 -> m1_570  [key=0, style=solid];
m1_569 -> m1_24  [key=2, style=dotted];
m1_570 -> m1_571  [key=0, style=solid];
m1_571 -> m1_572  [key=0, style=solid];
m1_571 -> m1_24  [key=2, style=dotted];
m1_572 -> m1_573  [key=0, style=solid];
m1_573 -> m1_574  [key=0, style=solid];
m1_573 -> m1_24  [key=2, style=dotted];
m1_574 -> m1_575  [key=0, style=solid];
m1_575 -> m1_576  [key=0, style=solid];
m1_575 -> m1_24  [key=2, style=dotted];
m1_576 -> m1_577  [key=0, style=solid];
m1_577 -> m1_578  [key=0, style=solid];
m1_577 -> m1_24  [key=2, style=dotted];
m1_578 -> m1_579  [key=0, style=solid];
m1_579 -> m1_580  [key=0, style=solid];
m1_579 -> m1_24  [key=2, style=dotted];
m1_580 -> m1_581  [key=0, style=solid];
m1_581 -> m1_582  [key=0, style=solid];
m1_581 -> m1_24  [key=2, style=dotted];
m1_582 -> m1_583  [key=0, style=solid];
m1_583 -> m1_584  [key=0, style=solid];
m1_583 -> m1_24  [key=2, style=dotted];
m1_584 -> m1_585  [key=0, style=solid];
m1_585 -> m1_586  [key=0, style=solid];
m1_585 -> m1_24  [key=2, style=dotted];
m1_586 -> m1_587  [key=0, style=solid];
m1_587 -> m1_588  [key=0, style=solid];
m1_587 -> m1_24  [key=2, style=dotted];
m1_588 -> m1_589  [key=0, style=solid];
m1_589 -> m1_590  [key=0, style=solid];
m1_589 -> m1_24  [key=2, style=dotted];
m1_590 -> m1_591  [key=0, style=solid];
m1_591 -> m1_592  [key=0, style=solid];
m1_591 -> m1_24  [key=2, style=dotted];
m1_593 -> m1_594  [key=0, style=solid];
m1_594 -> m1_595  [key=0, style=solid];
m1_594 -> m1_24  [key=2, style=dotted];
m1_595 -> m1_596  [key=0, style=solid];
m1_595 -> m1_608  [key=2, style=dotted];
m1_595 -> m1_24  [key=2, style=dotted];
m1_596 -> m1_597  [key=0, style=solid];
m1_597 -> m1_598  [key=0, style=solid];
m1_597 -> m1_608  [key=2, style=dotted];
m1_597 -> m1_24  [key=2, style=dotted];
m1_598 -> m1_599  [key=0, style=solid];
m1_599 -> m1_600  [key=0, style=solid];
m1_599 -> m1_24  [key=2, style=dotted];
m1_601 -> m1_602  [key=0, style=solid];
m1_602 -> m1_603  [key=0, style=solid];
m1_602 -> m1_24  [key=2, style=dotted];
m1_603 -> m1_604  [key=0, style=solid];
m1_604 -> m1_605  [key=0, style=solid];
m1_604 -> m1_24  [key=2, style=dotted];
m1_605 -> m1_606  [key=0, style=solid];
m1_606 -> m1_607  [key=0, style=solid];
m1_606 -> m1_24  [key=2, style=dotted];
m1_555 -> m1_556  [key=0, style=solid];
m1_555 -> m1_538  [key=2, style=dotted];
m1_555 -> m1_557  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m1_592 -> m1_593  [key=0, style=solid];
m1_592 -> m1_542  [key=2, style=dotted];
m1_592 -> m1_594  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m1_592 -> m1_595  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m1_592 -> m1_596  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m1_592 -> m1_610  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m1_592 -> m1_597  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m1_600 -> m1_601  [key=0, style=solid];
m1_600 -> m1_543  [key=2, style=dotted];
m1_600 -> m1_602  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m1_607 -> m1_544  [color=blue, key=0, style=bold];
m1_830 -> m1_842  [key=0, style=solid];
m1_830 -> m1_843  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_842 -> m1_843  [key=0, style=solid];
m1_843 -> m1_844  [key=0, style=solid];
m1_844 -> m1_830  [color=blue, key=0, style=bold];
m1_2662 -> m1_2663  [key=0, style=solid];
m1_2663 -> m1_2664  [key=0, style=solid];
m1_2663 -> m1_2654  [key=2, style=dotted];
m1_2663 -> m1_2665  [color=darkseagreen4, key=1, label=derived, style=dashed];
m1_2664 -> m1_2665  [key=0, style=solid];
m1_2664 -> m1_175  [key=2, style=dotted];
m1_2664 -> m1_2666  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_2665 -> m1_2666  [key=0, style=solid];
m1_2665 -> m1_198  [key=2, style=dotted];
m1_2666 -> m1_2667  [key=0, style=solid];
m1_2666 -> m1_296  [key=2, style=dotted];
m1_2666 -> m1_2668  [color=darkseagreen4, key=1, label=meh, style=dashed];
m1_2667 -> m1_2668  [key=0, style=solid];
m1_2667 -> m1_24  [key=2, style=dotted];
m1_2668 -> m1_2669  [key=0, style=solid];
m1_2668 -> m1_24  [key=2, style=dotted];
m1_2669 -> m1_2662  [color=blue, key=0, style=bold];
m1_1818 -> m1_1819  [key=0, style=solid];
m1_1819 -> m1_1820  [key=0, style=solid];
m1_1819 -> m1_1823  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1819 -> m1_1819  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1820 -> m1_1821  [key=0, style=solid];
m1_1820 -> m1_60  [key=2, style=dotted];
m1_1820 -> m1_1822  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1821 -> m1_1818  [color=blue, key=0, style=bold];
m1_403 -> m1_404  [key=0, style=solid];
m1_404 -> m1_405  [key=0, style=solid];
m1_404 -> m1_411  [key=2, style=dotted];
m1_404 -> m1_407  [color=darkseagreen4, key=1, label=input, style=dashed];
m1_404 -> m1_408  [color=darkseagreen4, key=1, label=input, style=dashed];
m1_404 -> m1_409  [color=darkseagreen4, key=1, label=input, style=dashed];
m1_405 -> m1_406  [key=0, style=solid];
m1_405 -> m1_129  [key=2, style=dotted];
m1_407 -> m1_408  [key=0, style=solid];
m1_407 -> m1_24  [key=2, style=dotted];
m1_408 -> m1_409  [key=0, style=solid];
m1_408 -> m1_24  [key=2, style=dotted];
m1_409 -> m1_410  [key=0, style=solid];
m1_409 -> m1_24  [key=2, style=dotted];
m1_406 -> m1_407  [key=0, style=solid];
m1_406 -> m1_49  [key=2, style=dotted];
m1_406 -> m1_408  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m1_406 -> m1_409  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m1_410 -> m1_403  [color=blue, key=0, style=bold];
m1_2637 -> m1_2638  [key=0, style=solid];
m1_2638 -> m1_2639  [key=0, style=solid];
m1_2638 -> m1_2640  [key=2, style=dotted];
m1_2639 -> m1_2637  [color=blue, key=0, style=bold];
m1_3796 -> m1_3797  [key=0, style=solid];
m1_3796 -> m1_3798  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_3796 -> m1_3799  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_3797 -> m1_3798  [key=0, style=solid];
m1_3797 -> m1_3799  [key=0, style=solid];
m1_3798 -> m1_3800  [key=0, style=solid];
m1_3798 -> m1_2095  [key=2, style=dotted];
m1_3798 -> n72  [key=2, style=dotted];
m1_3799 -> m1_3800  [key=0, style=solid];
m1_3800 -> m1_3796  [color=blue, key=0, style=bold];
m1_3910 -> m1_3911  [key=0, style=solid];
m1_3911 -> m1_3912  [key=0, style=solid];
m1_3911 -> m1_3900  [key=2, style=dotted];
m1_3912 -> m1_3910  [color=blue, key=0, style=bold];
m1_3588 -> m1_3589  [key=0, style=solid];
m1_3589 -> m1_3590  [key=0, style=solid];
m1_3590 -> m1_3588  [color=blue, key=0, style=bold];
m1_2843 -> m1_2844  [key=0, style=solid];
m1_2844 -> m1_2845  [key=0, style=solid];
m1_2845 -> m1_2846  [key=0, style=solid];
m1_2845 -> m1_196  [key=2, style=dotted];
m1_2846 -> m1_2843  [color=blue, key=0, style=bold];
m1_2629 -> m1_2630  [key=0, style=solid];
m1_2630 -> m1_2631  [key=0, style=solid];
m1_2630 -> m1_2630  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_2631 -> m1_2632  [key=0, style=solid];
m1_2631 -> m1_16  [key=2, style=dotted];
m1_2631 -> m1_373  [key=2, style=dotted];
m1_2631 -> m1_2634  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_2632 -> m1_2633  [key=0, style=solid];
m1_2634 -> m1_2635  [key=0, style=solid];
m1_2634 -> m1_20  [key=2, style=dotted];
m1_2633 -> m1_2634  [key=0, style=solid];
m1_2633 -> m1_19  [key=2, style=dotted];
m1_2635 -> m1_2636  [key=0, style=solid];
m1_2635 -> m1_24  [key=2, style=dotted];
m1_2636 -> m1_2629  [color=blue, key=0, style=bold];
m1_2894 -> m1_2895  [key=0, style=solid];
m1_2895 -> m1_2896  [key=0, style=solid];
m1_2896 -> m1_2894  [color=blue, key=0, style=bold];
m1_1254 -> m1_1255  [key=0, style=solid];
m1_1255 -> m1_1256  [key=0, style=solid];
m1_1255 -> m1_1261  [key=2, style=dotted];
m1_1255 -> m1_1259  [color=darkseagreen4, key=1, label=ts, style=dashed];
m1_1256 -> m1_1257  [key=0, style=solid];
m1_1256 -> m1_1262  [key=2, style=dotted];
m1_1256 -> m1_41  [key=2, style=dotted];
m1_1256 -> m1_1258  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1259 -> m1_1260  [key=0, style=solid];
m1_1259 -> m1_24  [key=2, style=dotted];
m1_1257 -> m1_1258  [key=0, style=solid];
m1_1257 -> m1_42  [key=2, style=dotted];
m1_1258 -> m1_1259  [key=0, style=solid];
m1_1258 -> m1_49  [key=2, style=dotted];
m1_1260 -> m1_1254  [color=blue, key=0, style=bold];
m1_3620 -> m1_3621  [key=0, style=solid];
m1_3621 -> m1_3622  [key=0, style=solid];
m1_3621 -> m1_3588  [key=2, style=dotted];
m1_3622 -> m1_3623  [key=0, style=solid];
m1_3622 -> m1_129  [key=2, style=dotted];
m1_3622 -> m1_3625  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3622 -> m1_3631  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3623 -> m1_3624  [key=0, style=solid];
m1_3623 -> m1_24  [key=2, style=dotted];
m1_3625 -> m1_3626  [key=0, style=solid];
m1_3625 -> m1_3625  [color=darkorchid, key=3, label="Local variable System.Action doStuff", style=bold];
m1_3624 -> m1_3625  [key=0, style=solid];
m1_3624 -> m1_3243  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<int> obj", style=bold];
m1_3626 -> m1_3627  [key=0, style=solid];
m1_3626 -> m1_3629  [key=2, style=dotted];
m1_3627 -> m1_3628  [key=0, style=solid];
m1_3627 -> m1_24  [key=2, style=dotted];
m1_3628 -> m1_3620  [color=blue, key=0, style=bold];
m1_2161 -> m1_2162  [key=0, style=solid];
m1_2161 -> m1_2163  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_2161 -> m1_2164  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_2161 -> m1_2165  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_2161 -> m1_2166  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_2161 -> m1_2167  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_2161 -> m1_2168  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_2161 -> m1_2169  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_2161 -> m1_2170  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_2161 -> m1_2171  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_2161 -> m1_2172  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_2161 -> m1_2173  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_2161 -> m1_2174  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_2161 -> m1_2175  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_2161 -> m1_2176  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_2161 -> m1_2177  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_2161 -> m1_2178  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_2161 -> m1_2179  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_2162 -> m1_2163  [key=0, style=solid];
m1_2162 -> m1_716  [key=2, style=dotted];
m1_2163 -> m1_2164  [key=0, style=solid];
m1_2163 -> m1_717  [key=2, style=dotted];
m1_2164 -> m1_2165  [key=0, style=solid];
m1_2164 -> m1_718  [key=2, style=dotted];
m1_2165 -> m1_2166  [key=0, style=solid];
m1_2165 -> m1_718  [key=2, style=dotted];
m1_2166 -> m1_2167  [key=0, style=solid];
m1_2166 -> m1_718  [key=2, style=dotted];
m1_2167 -> m1_2168  [key=0, style=solid];
m1_2167 -> m1_718  [key=2, style=dotted];
m1_2168 -> m1_2169  [key=0, style=solid];
m1_2168 -> m1_2181  [key=2, style=dotted];
m1_2169 -> m1_2170  [key=0, style=solid];
m1_2169 -> m1_2182  [key=2, style=dotted];
m1_2170 -> m1_2171  [key=0, style=solid];
m1_2170 -> m1_2183  [key=2, style=dotted];
m1_2171 -> m1_2172  [key=0, style=solid];
m1_2171 -> m1_2184  [key=2, style=dotted];
m1_2172 -> m1_2173  [key=0, style=solid];
m1_2172 -> m1_2185  [key=2, style=dotted];
m1_2173 -> m1_2174  [key=0, style=solid];
m1_2173 -> m1_2186  [key=2, style=dotted];
m1_2174 -> m1_2175  [key=0, style=solid];
m1_2174 -> m1_2187  [key=2, style=dotted];
m1_2175 -> m1_2176  [key=0, style=solid];
m1_2175 -> m1_2188  [key=2, style=dotted];
m1_2176 -> m1_2177  [key=0, style=solid];
m1_2176 -> m1_2189  [key=2, style=dotted];
m1_2177 -> m1_2178  [key=0, style=solid];
m1_2177 -> m1_2190  [key=2, style=dotted];
m1_2178 -> m1_2179  [key=0, style=solid];
m1_2178 -> m1_2191  [key=2, style=dotted];
m1_2179 -> m1_2180  [key=0, style=solid];
m1_2179 -> m1_2192  [key=2, style=dotted];
m1_2180 -> m1_2161  [color=blue, key=0, style=bold];
m1_675 -> m1_676  [key=0, style=solid];
m1_676 -> m1_677  [key=0, style=solid];
m1_676 -> m1_683  [key=2, style=dotted];
m1_676 -> m1_680  [color=darkseagreen4, key=1, label=ratio, style=dashed];
m1_677 -> m1_678  [key=0, style=solid];
m1_677 -> m1_129  [key=2, style=dotted];
m1_677 -> m1_679  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_680 -> m1_681  [key=0, style=solid];
m1_680 -> m1_24  [key=2, style=dotted];
m1_680 -> m1_680  [color=darkseagreen4, key=1, label=ratio, style=dashed];
m1_678 -> m1_679  [key=0, style=solid];
m1_678 -> m1_24  [key=2, style=dotted];
m1_679 -> m1_680  [key=0, style=solid];
m1_679 -> m1_49  [key=2, style=dotted];
m1_681 -> m1_682  [key=0, style=solid];
m1_681 -> m1_24  [key=2, style=dotted];
m1_681 -> m1_681  [color=darkseagreen4, key=1, label=ratio, style=dashed];
m1_682 -> m1_675  [color=blue, key=0, style=bold];
m1_3172 -> m1_3173  [key=0, style=solid];
m1_3173 -> m1_3174  [key=0, style=solid];
m1_3173 -> m1_175  [key=2, style=dotted];
m1_3173 -> m1_833  [key=2, style=dotted];
m1_3174 -> m1_3175  [key=0, style=solid];
m1_3174 -> m1_16  [key=2, style=dotted];
m1_3174 -> m1_373  [key=2, style=dotted];
m1_3174 -> m1_20  [key=2, style=dotted];
m1_3174 -> m1_3176  [color=darkseagreen4, key=1, label=dict, style=dashed];
m1_3175 -> m1_3176  [key=0, style=solid];
m1_3175 -> m1_24  [key=2, style=dotted];
m1_3176 -> m1_3177  [key=0, style=solid];
m1_3176 -> m1_24  [key=2, style=dotted];
m1_3177 -> m1_3172  [color=blue, key=0, style=bold];
m1_2872 -> m1_2873  [key=0, style=solid];
m1_2873 -> m1_2874  [key=0, style=solid];
m1_2873 -> m1_2395  [key=2, style=dotted];
m1_2874 -> m1_2872  [color=blue, key=0, style=bold];
m1_148 -> m1_149  [key=0, style=solid];
m1_149 -> m1_150  [key=0, style=solid];
m1_149 -> m1_49  [key=2, style=dotted];
m1_150 -> m1_151  [key=0, style=solid];
m1_150 -> m1_152  [key=2, style=dotted];
m1_151 -> m1_148  [color=blue, key=0, style=bold];
m1_3467 -> m1_3468  [key=0, style=solid];
m1_3468 -> m1_3469  [key=0, style=solid];
m1_3468 -> m1_19  [key=2, style=dotted];
m1_3468 -> m1_16  [key=2, style=dotted];
m1_3468 -> m1_373  [key=2, style=dotted];
m1_3468 -> m1_3010  [key=2, style=dotted];
m1_3469 -> m1_3470  [key=0, style=solid];
m1_3469 -> m1_24  [key=2, style=dotted];
m1_3470 -> m1_3467  [color=blue, key=0, style=bold];
m1_3578 -> m1_3579  [key=0, style=solid];
m1_3579 -> m1_3580  [key=0, style=solid];
m1_3579 -> m1_49  [key=2, style=dotted];
m1_3580 -> m1_3581  [key=0, style=solid];
m1_3580 -> m1_24  [key=2, style=dotted];
m1_3580 -> m1_3580  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_3581 -> m1_3582  [key=0, style=solid];
m1_3581 -> m1_24  [key=2, style=dotted];
m1_3581 -> m1_3581  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_3582 -> m1_3578  [color=blue, key=0, style=bold];
m1_2087 -> m1_2088  [key=0, style=solid];
m1_2088 -> m1_2087  [color=blue, key=0, style=bold];
m1_955 -> m1_956  [key=0, style=solid];
m1_956 -> m1_957  [key=0, style=solid];
m1_956 -> m1_956  [color=darkorchid, key=3, label="Local variable string value", style=bold];
m1_957 -> m1_958  [key=0, style=solid];
m1_957 -> m1_936  [key=2, style=dotted];
m1_957 -> m1_959  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_957 -> m1_960  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_958 -> m1_959  [key=0, style=solid];
m1_958 -> m1_24  [key=2, style=dotted];
m1_959 -> m1_960  [key=0, style=solid];
m1_959 -> m1_962  [key=2, style=dotted];
m1_959 -> m1_24  [key=2, style=dotted];
m1_960 -> m1_961  [key=0, style=solid];
m1_960 -> m1_24  [key=2, style=dotted];
m1_961 -> m1_955  [color=blue, key=0, style=bold];
m1_1508 -> m1_1509  [key=0, style=solid];
m1_1509 -> m1_1510  [key=0, style=solid];
m1_1509 -> m1_1512  [key=2, style=dotted];
m1_1509 -> m1_1102  [key=2, style=dotted];
m1_1510 -> m1_1511  [key=0, style=solid];
m1_1511 -> m1_1508  [color=blue, key=0, style=bold];
m1_1562 -> m1_1563  [key=0, style=solid];
m1_1563 -> m1_1564  [key=0, style=solid];
m1_1563 -> m1_1551  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1564 -> m1_1565  [key=0, style=solid];
m1_1564 -> m1_49  [key=2, style=dotted];
m1_1565 -> m1_1566  [key=0, style=solid];
m1_1565 -> m1_1568  [key=0, style=solid];
m1_1565 -> m1_21  [key=2, style=dotted];
m1_1566 -> m1_1567  [key=0, style=solid];
m1_1567 -> m1_1568  [key=0, style=solid];
m1_1567 -> m1_1457  [key=2, style=dotted];
m1_1567 -> m1_22  [key=2, style=dotted];
m1_1568 -> m1_1562  [color=blue, key=0, style=bold];
m1_1465 -> m1_1466  [key=0, style=solid];
m1_1466 -> m1_1467  [key=0, style=solid];
m1_1466 -> m1_1466  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1467 -> m1_1468  [key=0, style=solid];
m1_1467 -> m1_49  [key=2, style=dotted];
m1_1468 -> m1_1469  [key=0, style=solid];
m1_1468 -> m1_1471  [key=0, style=solid];
m1_1468 -> m1_21  [key=2, style=dotted];
m1_1469 -> m1_1470  [key=0, style=solid];
m1_1470 -> m1_1471  [key=0, style=solid];
m1_1470 -> m1_1457  [key=2, style=dotted];
m1_1470 -> m1_22  [key=2, style=dotted];
m1_1471 -> m1_1465  [color=blue, key=0, style=bold];
m1_1458 -> m1_1459  [key=0, style=solid];
m1_1459 -> m1_1460  [key=0, style=solid];
m1_1459 -> m1_60  [key=2, style=dotted];
m1_1459 -> m1_1461  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1460 -> m1_1458  [color=blue, key=0, style=bold];
m1_3571 -> m1_3572  [key=0, style=solid];
m1_3572 -> m1_3573  [key=0, style=solid];
m1_3573 -> m1_3571  [color=blue, key=0, style=bold];
m1_2673 -> m1_2674  [key=0, style=solid];
m1_2674 -> m1_2675  [key=0, style=solid];
m1_2674 -> m1_702  [key=2, style=dotted];
m1_2675 -> m1_2673  [color=blue, key=0, style=bold];
m1_3940 -> m1_3941  [key=0, style=solid];
m1_3941 -> m1_3942  [key=0, style=solid];
m1_3941 -> m1_3900  [key=2, style=dotted];
m1_3942 -> m1_3940  [color=blue, key=0, style=bold];
m1_3286 -> m1_3287  [key=0, style=solid];
m1_3287 -> m1_3288  [key=0, style=solid];
m1_3287 -> m1_3294  [key=2, style=dotted];
m1_3287 -> m1_3289  [color=darkseagreen4, key=1, label=person, style=dashed];
m1_3287 -> m1_3290  [color=darkseagreen4, key=1, label=person, style=dashed];
m1_3287 -> m1_3292  [color=darkseagreen4, key=1, label=person, style=dashed];
m1_3288 -> m1_3289  [key=0, style=solid];
m1_3289 -> m1_3290  [key=0, style=solid];
m1_3290 -> m1_3291  [key=0, style=solid];
m1_3290 -> m1_129  [key=2, style=dotted];
m1_3292 -> m1_3293  [key=0, style=solid];
m1_3292 -> m1_24  [key=2, style=dotted];
m1_3291 -> m1_3292  [key=0, style=solid];
m1_3291 -> m1_49  [key=2, style=dotted];
m1_3293 -> m1_3286  [color=blue, key=0, style=bold];
m1_4191 -> m1_4192  [key=0, style=solid];
m1_4192 -> m1_4193  [key=0, style=solid];
m1_4193 -> m1_4191  [color=blue, key=0, style=bold];
m1_1682 -> m1_1683  [key=0, style=solid];
m1_1683 -> m1_1684  [key=0, style=solid];
m1_1683 -> m1_1683  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1684 -> m1_1685  [key=0, style=solid];
m1_1684 -> m1_936  [key=2, style=dotted];
m1_1684 -> m1_1686  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m1_1684 -> m1_1687  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m1_1684 -> m1_1688  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m1_1684 -> m1_1689  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m1_1684 -> m1_1690  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m1_1685 -> m1_1686  [key=0, style=solid];
m1_1685 -> m1_24  [key=2, style=dotted];
m1_1686 -> m1_1687  [key=0, style=solid];
m1_1686 -> m1_1102  [key=2, style=dotted];
m1_1686 -> m1_24  [key=2, style=dotted];
m1_1687 -> m1_1688  [key=0, style=solid];
m1_1687 -> m1_24  [key=2, style=dotted];
m1_1688 -> m1_1689  [key=0, style=solid];
m1_1688 -> m1_24  [key=2, style=dotted];
m1_1689 -> m1_1690  [key=0, style=solid];
m1_1689 -> m1_24  [key=2, style=dotted];
m1_1690 -> m1_1691  [key=0, style=solid];
m1_1690 -> m1_24  [key=2, style=dotted];
m1_1691 -> m1_1682  [color=blue, key=0, style=bold];
m1_927 -> m1_928  [key=0, style=solid];
m1_928 -> m1_929  [key=0, style=solid];
m1_928 -> m1_935  [key=2, style=dotted];
m1_928 -> m1_931  [color=darkseagreen4, key=1, label=store, style=dashed];
m1_928 -> m1_932  [color=darkseagreen4, key=1, label=store, style=dashed];
m1_929 -> m1_930  [key=0, style=solid];
m1_929 -> m1_129  [key=2, style=dotted];
m1_929 -> m1_933  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m1_931 -> m1_932  [key=0, style=solid];
m1_931 -> m1_24  [key=2, style=dotted];
m1_932 -> m1_933  [key=0, style=solid];
m1_932 -> m1_24  [key=2, style=dotted];
m1_930 -> m1_931  [key=0, style=solid];
m1_930 -> m1_936  [key=2, style=dotted];
m1_930 -> m1_932  [color=darkseagreen4, key=1, label=deserializedStore, style=dashed];
m1_933 -> m1_934  [key=0, style=solid];
m1_933 -> m1_937  [key=2, style=dotted];
m1_934 -> m1_927  [color=blue, key=0, style=bold];
m1_3714 -> m1_3715  [key=0, style=solid];
m1_3715 -> m1_3714  [color=blue, key=0, style=bold];
m1_3495 -> m1_3496  [key=0, style=solid];
m1_3496 -> m1_3497  [key=0, style=solid];
m1_3496 -> m1_3500  [key=2, style=dotted];
m1_3496 -> m1_134  [key=2, style=dotted];
m1_3496 -> m1_3501  [key=2, style=dotted];
m1_3497 -> m1_3498  [key=0, style=solid];
m1_3497 -> m1_41  [key=2, style=dotted];
m1_3498 -> m1_3499  [key=0, style=solid];
m1_3498 -> m1_42  [key=2, style=dotted];
m1_3499 -> m1_3495  [color=blue, key=0, style=bold];
m1_1188 -> m1_1189  [key=0, style=solid];
m1_1189 -> m1_1190  [key=0, style=solid];
m1_1189 -> m1_1204  [key=2, style=dotted];
m1_1189 -> m1_1191  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m1_1189 -> m1_1192  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m1_1189 -> m1_1193  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m1_1189 -> m1_1194  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m1_1190 -> m1_1191  [key=0, style=solid];
m1_1191 -> m1_1192  [key=0, style=solid];
m1_1191 -> m1_322  [key=2, style=dotted];
m1_1192 -> m1_1193  [key=0, style=solid];
m1_1192 -> m1_322  [key=2, style=dotted];
m1_1193 -> m1_1194  [key=0, style=solid];
m1_1193 -> m1_322  [key=2, style=dotted];
m1_1194 -> m1_1195  [key=0, style=solid];
m1_1194 -> m1_129  [key=2, style=dotted];
m1_1195 -> m1_1196  [key=0, style=solid];
m1_1195 -> m1_49  [key=2, style=dotted];
m1_1195 -> m1_1197  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m1_1195 -> m1_1198  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m1_1195 -> m1_1199  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m1_1195 -> m1_1200  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m1_1195 -> m1_1201  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m1_1195 -> m1_1202  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m1_1196 -> m1_1197  [key=0, style=solid];
m1_1196 -> m1_24  [key=2, style=dotted];
m1_1197 -> m1_1198  [key=0, style=solid];
m1_1197 -> m1_24  [key=2, style=dotted];
m1_1198 -> m1_1199  [key=0, style=solid];
m1_1198 -> m1_24  [key=2, style=dotted];
m1_1199 -> m1_1200  [key=0, style=solid];
m1_1199 -> m1_24  [key=2, style=dotted];
m1_1200 -> m1_1201  [key=0, style=solid];
m1_1200 -> m1_24  [key=2, style=dotted];
m1_1201 -> m1_1202  [key=0, style=solid];
m1_1201 -> m1_24  [key=2, style=dotted];
m1_1202 -> m1_1203  [key=0, style=solid];
m1_1202 -> m1_24  [key=2, style=dotted];
m1_1203 -> m1_1188  [color=blue, key=0, style=bold];
m1_2245 -> m1_2246  [key=0, style=solid];
m1_2246 -> m1_2247  [key=0, style=solid];
m1_2246 -> m1_1512  [key=2, style=dotted];
m1_2246 -> m1_2248  [color=darkseagreen4, key=1, label=person, style=dashed];
m1_2246 -> m1_2249  [color=darkseagreen4, key=1, label=person, style=dashed];
m1_2246 -> m1_2250  [color=darkseagreen4, key=1, label=person, style=dashed];
m1_2246 -> m1_2254  [color=darkseagreen4, key=1, label=person, style=dashed];
m1_2247 -> m1_2248  [key=0, style=solid];
m1_2247 -> m1_1102  [key=2, style=dotted];
m1_2248 -> m1_2249  [key=0, style=solid];
m1_2249 -> m1_2250  [key=0, style=solid];
m1_2250 -> m1_2251  [key=0, style=solid];
m1_2254 -> m1_2255  [key=0, style=solid];
m1_2254 -> m1_2154  [key=2, style=dotted];
m1_2251 -> m1_2252  [key=0, style=solid];
m1_2251 -> m1_376  [key=2, style=dotted];
m1_2251 -> m1_1110  [key=2, style=dotted];
m1_2251 -> m1_2254  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m1_2251 -> m1_2260  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m1_2252 -> m1_2253  [key=0, style=solid];
m1_2260 -> m1_2261  [key=0, style=solid];
m1_2260 -> m1_24  [key=2, style=dotted];
m1_2253 -> m1_2254  [key=0, style=solid];
m1_2253 -> m1_2256  [color=darkseagreen4, key=1, label=dateTimeOffsetText, style=dashed];
m1_2256 -> m1_2257  [key=0, style=solid];
m1_2256 -> m1_42  [key=2, style=dotted];
m1_2255 -> m1_2256  [key=0, style=solid];
m1_2255 -> m1_175  [key=2, style=dotted];
m1_2255 -> m1_198  [key=2, style=dotted];
m1_2255 -> m1_2257  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_2257 -> m1_2258  [key=0, style=solid];
m1_2257 -> m1_49  [key=2, style=dotted];
m1_2257 -> m1_2259  [color=darkseagreen4, key=1, label=o2, style=dashed];
m1_2257 -> m1_2260  [color=darkseagreen4, key=1, label=o2, style=dashed];
m1_2257 -> m1_2261  [color=darkseagreen4, key=1, label=o2, style=dashed];
m1_2257 -> m1_2262  [color=darkseagreen4, key=1, label=o2, style=dashed];
m1_2257 -> m1_2263  [color=darkseagreen4, key=1, label=o2, style=dashed];
m1_2258 -> m1_2259  [key=0, style=solid];
m1_2258 -> m1_24  [key=2, style=dotted];
m1_2259 -> m1_2260  [key=0, style=solid];
m1_2259 -> m1_24  [key=2, style=dotted];
m1_2261 -> m1_2262  [key=0, style=solid];
m1_2261 -> m1_24  [key=2, style=dotted];
m1_2262 -> m1_2263  [key=0, style=solid];
m1_2262 -> m1_24  [key=2, style=dotted];
m1_2263 -> m1_2264  [key=0, style=solid];
m1_2263 -> m1_24  [key=2, style=dotted];
m1_2264 -> m1_2245  [color=blue, key=0, style=bold];
m1_3654 -> m1_3655  [key=0, style=solid];
m1_3655 -> m1_3656  [key=0, style=solid];
m1_3655 -> m1_3659  [key=2, style=dotted];
m1_3656 -> m1_3657  [key=0, style=solid];
m1_3656 -> m1_175  [key=2, style=dotted];
m1_3656 -> m1_198  [key=2, style=dotted];
m1_3657 -> m1_3658  [key=0, style=solid];
m1_3657 -> m1_42  [key=2, style=dotted];
m1_3658 -> m1_3654  [color=blue, key=0, style=bold];
m1_4184 -> m1_4185  [key=0, style=solid];
m1_4185 -> m1_4186  [key=0, style=solid];
m1_4186 -> m1_4184  [color=blue, key=0, style=bold];
m1_1335 -> m1_1336  [key=0, style=solid];
m1_1336 -> m1_1337  [key=0, style=solid];
m1_1336 -> m1_1306  [key=2, style=dotted];
m1_1336 -> m1_1341  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m1_1336 -> m1_1342  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m1_1337 -> m1_1338  [key=0, style=solid];
m1_1337 -> m1_1307  [key=2, style=dotted];
m1_1341 -> m1_1342  [key=0, style=solid];
m1_1341 -> m1_24  [key=2, style=dotted];
m1_1342 -> m1_1343  [key=0, style=solid];
m1_1342 -> m1_24  [key=2, style=dotted];
m1_1338 -> m1_1339  [key=0, style=solid];
m1_1338 -> m1_1344  [key=2, style=dotted];
m1_1338 -> m1_1296  [key=2, style=dotted];
m1_1338 -> m1_1340  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1339 -> m1_1340  [key=0, style=solid];
m1_1339 -> m1_24  [key=2, style=dotted];
m1_1340 -> m1_1341  [key=0, style=solid];
m1_1340 -> m1_1344  [key=2, style=dotted];
m1_1340 -> m1_236  [key=2, style=dotted];
m1_1340 -> m1_1342  [color=darkseagreen4, key=1, label=m2, style=dashed];
m1_1343 -> m1_1335  [color=blue, key=0, style=bold];
m1_3153 -> m1_3154  [key=0, style=solid];
m1_3154 -> m1_3155  [key=0, style=solid];
m1_3154 -> m1_3154  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_3155 -> m1_3156  [key=0, style=solid];
m1_3155 -> m1_49  [key=2, style=dotted];
m1_3156 -> m1_3157  [key=0, style=solid];
m1_3156 -> m1_24  [key=2, style=dotted];
m1_3157 -> m1_3158  [key=0, style=solid];
m1_3158 -> m1_3159  [key=0, style=solid];
m1_3158 -> m1_49  [key=2, style=dotted];
m1_3159 -> m1_3160  [key=0, style=solid];
m1_3159 -> m1_1246  [key=2, style=dotted];
m1_3159 -> m1_24  [key=2, style=dotted];
m1_3160 -> m1_3153  [color=blue, key=0, style=bold];
m1_1722 -> m1_1723  [key=0, style=solid];
m1_1723 -> m1_1724  [key=0, style=solid];
m1_1723 -> m1_1719  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1724 -> m1_1725  [key=0, style=solid];
m1_1724 -> m1_49  [key=2, style=dotted];
m1_1724 -> m1_1726  [color=darkseagreen4, key=1, label=content, style=dashed];
m1_1724 -> m1_1727  [color=darkseagreen4, key=1, label=content, style=dashed];
m1_1724 -> m1_1728  [color=darkseagreen4, key=1, label=content, style=dashed];
m1_1725 -> m1_1726  [key=0, style=solid];
m1_1725 -> m1_24  [key=2, style=dotted];
m1_1726 -> m1_1727  [key=0, style=solid];
m1_1726 -> m1_24  [key=2, style=dotted];
m1_1727 -> m1_1728  [key=0, style=solid];
m1_1727 -> m1_24  [key=2, style=dotted];
m1_1728 -> m1_1729  [key=0, style=solid];
m1_1728 -> m1_24  [key=2, style=dotted];
m1_1729 -> m1_1722  [color=blue, key=0, style=bold];
m1_4125 -> m1_4126  [key=0, style=solid];
m1_61 -> m1_62  [key=0, style=solid];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_49  [key=2, style=dotted];
m1_63 -> m1_61  [color=blue, key=0, style=bold];
m1_67 -> m1_68  [key=0, style=solid];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_49  [key=2, style=dotted];
m1_69 -> m1_67  [color=blue, key=0, style=bold];
m1_73 -> m1_74  [key=0, style=solid];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_49  [key=2, style=dotted];
m1_75 -> m1_73  [color=blue, key=0, style=bold];
m1_79 -> m1_80  [key=0, style=solid];
m1_80 -> m1_81  [key=0, style=solid];
m1_80 -> m1_49  [key=2, style=dotted];
m1_81 -> m1_79  [color=blue, key=0, style=bold];
m1_139 -> m1_140  [key=0, style=solid];
m1_140 -> m1_141  [key=0, style=solid];
m1_140 -> m1_49  [key=2, style=dotted];
m1_141 -> m1_139  [color=blue, key=0, style=bold];
m1_145 -> m1_146  [key=0, style=solid];
m1_146 -> m1_147  [key=0, style=solid];
m1_146 -> m1_49  [key=2, style=dotted];
m1_147 -> m1_145  [color=blue, key=0, style=bold];
m1_156 -> m1_157  [key=0, style=solid];
m1_157 -> m1_158  [key=0, style=solid];
m1_157 -> m1_49  [key=2, style=dotted];
m1_158 -> m1_156  [color=blue, key=0, style=bold];
m1_167 -> m1_168  [key=0, style=solid];
m1_168 -> m1_169  [key=0, style=solid];
m1_168 -> m1_170  [key=2, style=dotted];
m1_168 -> m1_129  [key=2, style=dotted];
m1_169 -> m1_167  [color=blue, key=0, style=bold];
m1_180 -> m1_181  [key=0, style=solid];
m1_181 -> m1_182  [key=0, style=solid];
m1_181 -> m1_183  [key=2, style=dotted];
m1_181 -> m1_129  [key=2, style=dotted];
m1_182 -> m1_180  [color=blue, key=0, style=bold];
m1_208 -> m1_209  [key=0, style=solid];
m1_211 -> m1_212  [key=0, style=solid];
m1_214 -> m1_215  [key=0, style=solid];
m1_217 -> m1_218  [key=0, style=solid];
m1_220 -> m1_221  [key=0, style=solid];
m1_223 -> m1_224  [key=0, style=solid];
m1_226 -> m1_227  [key=0, style=solid];
m1_209 -> m1_210  [key=0, style=solid];
m1_209 -> m1_49  [key=2, style=dotted];
m1_210 -> m1_208  [color=blue, key=0, style=bold];
m1_212 -> m1_213  [key=0, style=solid];
m1_212 -> m1_49  [key=2, style=dotted];
m1_213 -> m1_211  [color=blue, key=0, style=bold];
m1_215 -> m1_216  [key=0, style=solid];
m1_215 -> m1_49  [key=2, style=dotted];
m1_216 -> m1_214  [color=blue, key=0, style=bold];
m1_218 -> m1_219  [key=0, style=solid];
m1_218 -> m1_49  [key=2, style=dotted];
m1_219 -> m1_217  [color=blue, key=0, style=bold];
m1_221 -> m1_222  [key=0, style=solid];
m1_221 -> m1_49  [key=2, style=dotted];
m1_222 -> m1_220  [color=blue, key=0, style=bold];
m1_224 -> m1_225  [key=0, style=solid];
m1_224 -> m1_49  [key=2, style=dotted];
m1_225 -> m1_223  [color=blue, key=0, style=bold];
m1_227 -> m1_228  [key=0, style=solid];
m1_227 -> m1_49  [key=2, style=dotted];
m1_228 -> m1_226  [color=blue, key=0, style=bold];
m1_250 -> m1_251  [key=0, style=solid];
m1_250 -> m1_129  [key=2, style=dotted];
m1_249 -> m1_250  [key=0, style=solid];
m1_252 -> m1_253  [key=0, style=solid];
m1_255 -> m1_256  [key=0, style=solid];
m1_251 -> m1_249  [color=blue, key=0, style=bold];
m1_253 -> m1_254  [key=0, style=solid];
m1_253 -> m1_49  [key=2, style=dotted];
m1_254 -> m1_252  [color=blue, key=0, style=bold];
m1_256 -> m1_257  [key=0, style=solid];
m1_256 -> m1_49  [key=2, style=dotted];
m1_257 -> m1_255  [color=blue, key=0, style=bold];
m1_272 -> m1_273  [key=0, style=solid];
m1_272 -> m1_129  [key=2, style=dotted];
m1_271 -> m1_272  [key=0, style=solid];
m1_274 -> m1_275  [key=0, style=solid];
m1_273 -> m1_271  [color=blue, key=0, style=bold];
m1_275 -> m1_276  [key=0, style=solid];
m1_275 -> m1_49  [key=2, style=dotted];
m1_276 -> m1_274  [color=blue, key=0, style=bold];
m1_349 -> m1_350  [key=0, style=solid];
m1_348 -> m1_349  [key=0, style=solid];
m1_350 -> m1_348  [color=blue, key=0, style=bold];
m1_444 -> m1_445  [key=0, style=solid];
m1_444 -> m1_49  [key=2, style=dotted];
m1_443 -> m1_444  [key=0, style=solid];
m1_445 -> m1_443  [color=blue, key=0, style=bold];
m1_610 -> m1_611  [key=0, style=solid];
m1_609 -> m1_610  [key=0, style=solid];
m1_611 -> m1_609  [color=blue, key=0, style=bold];
m1_921 -> m1_922  [key=0, style=solid];
m1_924 -> m1_925  [key=0, style=solid];
m1_922 -> m1_923  [key=0, style=solid];
m1_923 -> m1_921  [color=blue, key=0, style=bold];
m1_925 -> m1_926  [key=0, style=solid];
m1_926 -> m1_924  [color=blue, key=0, style=bold];
m1_1056 -> m1_1057  [key=0, style=solid];
m1_1057 -> m1_1058  [key=0, style=solid];
m1_1057 -> m1_1059  [key=2, style=dotted];
m1_1057 -> m1_129  [key=2, style=dotted];
m1_1058 -> m1_1056  [color=blue, key=0, style=bold];
m1_1065 -> m1_1066  [key=0, style=solid];
m1_1065 -> m1_49  [key=2, style=dotted];
m1_1064 -> m1_1065  [key=0, style=solid];
m1_1066 -> m1_1064  [color=blue, key=0, style=bold];
m1_1367 -> m1_1368  [key=0, style=solid];
m1_1368 -> m1_1369  [key=0, style=solid];
m1_1368 -> m1_1371  [key=2, style=dotted];
m1_1369 -> m1_1370  [key=0, style=solid];
m1_1369 -> m1_129  [key=2, style=dotted];
m1_1370 -> m1_1367  [color=blue, key=0, style=bold];
m1_1461 -> m1_1462  [key=0, style=solid];
m1_1462 -> m1_1463  [key=0, style=solid];
m1_1462 -> m1_1442  [key=2, style=dotted];
m1_1462 -> m1_1102  [key=2, style=dotted];
m1_1463 -> m1_1464  [key=0, style=solid];
m1_1463 -> m1_129  [key=2, style=dotted];
m1_1464 -> m1_1461  [color=blue, key=0, style=bold];
m1_1506 -> m1_1507  [key=0, style=solid];
m1_1506 -> m1_936  [key=2, style=dotted];
m1_1505 -> m1_1506  [key=0, style=solid];
m1_1507 -> m1_1505  [color=blue, key=0, style=bold];
m1_1612 -> m1_1613  [key=0, style=solid];
m1_1613 -> m1_1614  [key=0, style=solid];
m1_1613 -> m1_1599  [key=2, style=dotted];
m1_1613 -> m1_1615  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_1614 -> m1_1615  [key=0, style=solid];
m1_1615 -> m1_1616  [key=0, style=solid];
m1_1615 -> m1_175  [key=2, style=dotted];
m1_1615 -> m1_198  [key=2, style=dotted];
m1_1616 -> m1_1612  [color=blue, key=0, style=bold];
m1_1754 -> m1_1755  [key=0, style=solid];
m1_1754 -> m1_49  [key=2, style=dotted];
m1_1753 -> m1_1754  [key=0, style=solid];
m1_1755 -> m1_1753  [color=blue, key=0, style=bold];
m1_1781 -> m1_1782  [key=0, style=solid];
m1_1781 -> m1_49  [key=2, style=dotted];
m1_1780 -> m1_1781  [key=0, style=solid];
m1_1782 -> m1_1780  [color=blue, key=0, style=bold];
m1_1788 -> m1_1789  [key=0, style=solid];
m1_1788 -> m1_49  [key=2, style=dotted];
m1_1787 -> m1_1788  [key=0, style=solid];
m1_1789 -> m1_1787  [color=blue, key=0, style=bold];
m1_1795 -> m1_1796  [key=0, style=solid];
m1_1795 -> m1_49  [key=2, style=dotted];
m1_1794 -> m1_1795  [key=0, style=solid];
m1_1796 -> m1_1794  [color=blue, key=0, style=bold];
m1_1802 -> m1_1803  [key=0, style=solid];
m1_1802 -> m1_49  [key=2, style=dotted];
m1_1801 -> m1_1802  [key=0, style=solid];
m1_1803 -> m1_1801  [color=blue, key=0, style=bold];
m1_1809 -> m1_1810  [key=0, style=solid];
m1_1809 -> m1_49  [key=2, style=dotted];
m1_1808 -> m1_1809  [key=0, style=solid];
m1_1810 -> m1_1808  [color=blue, key=0, style=bold];
m1_1816 -> m1_1817  [key=0, style=solid];
m1_1816 -> m1_49  [key=2, style=dotted];
m1_1815 -> m1_1816  [key=0, style=solid];
m1_1817 -> m1_1815  [color=blue, key=0, style=bold];
m1_1823 -> m1_1824  [key=0, style=solid];
m1_1823 -> m1_49  [key=2, style=dotted];
m1_1822 -> m1_1823  [key=0, style=solid];
m1_1824 -> m1_1822  [color=blue, key=0, style=bold];
m1_1830 -> m1_1831  [key=0, style=solid];
m1_1830 -> m1_49  [key=2, style=dotted];
m1_1829 -> m1_1830  [key=0, style=solid];
m1_1831 -> m1_1829  [color=blue, key=0, style=bold];
m1_1844 -> m1_1845  [key=0, style=solid];
m1_1844 -> m1_1512  [key=2, style=dotted];
m1_1844 -> m1_1846  [key=2, style=dotted];
m1_1843 -> m1_1844  [key=0, style=solid];
m1_1845 -> m1_1843  [color=blue, key=0, style=bold];
m1_1852 -> m1_1853  [key=0, style=solid];
m1_1852 -> m1_134  [key=2, style=dotted];
m1_1852 -> m1_1846  [key=2, style=dotted];
m1_1851 -> m1_1852  [key=0, style=solid];
m1_1853 -> m1_1851  [color=blue, key=0, style=bold];
m1_1862 -> m1_1863  [key=0, style=solid];
m1_1863 -> m1_1864  [key=0, style=solid];
m1_1863 -> m1_834  [key=2, style=dotted];
m1_1863 -> m1_175  [key=2, style=dotted];
m1_1863 -> m1_1865  [key=2, style=dotted];
m1_1863 -> m1_176  [key=2, style=dotted];
m1_1864 -> m1_1862  [color=blue, key=0, style=bold];
m1_1869 -> m1_1870  [key=0, style=solid];
m1_1870 -> m1_1871  [key=0, style=solid];
m1_1870 -> m1_175  [key=2, style=dotted];
m1_1870 -> m1_1865  [key=2, style=dotted];
m1_1870 -> m1_296  [key=2, style=dotted];
m1_1871 -> m1_1869  [color=blue, key=0, style=bold];
m1_1875 -> m1_1876  [key=0, style=solid];
m1_1876 -> m1_1877  [key=0, style=solid];
m1_1876 -> m1_175  [key=2, style=dotted];
m1_1876 -> m1_1865  [key=2, style=dotted];
m1_1876 -> m1_296  [key=2, style=dotted];
m1_1877 -> m1_1875  [color=blue, key=0, style=bold];
m1_1881 -> m1_1882  [key=0, style=solid];
m1_1882 -> m1_1883  [key=0, style=solid];
m1_1882 -> m1_175  [key=2, style=dotted];
m1_1882 -> m1_1865  [key=2, style=dotted];
m1_1882 -> m1_296  [key=2, style=dotted];
m1_1883 -> m1_1881  [color=blue, key=0, style=bold];
m1_1994 -> m1_1995  [key=0, style=solid];
m1_1995 -> m1_1996  [key=0, style=solid];
m1_1996 -> m1_1994  [color=blue, key=0, style=bold];
m1_2031 -> m1_2032  [key=0, style=solid];
m1_2031 -> m1_175  [key=2, style=dotted];
m1_2031 -> m1_296  [key=2, style=dotted];
m1_2030 -> m1_2031  [key=0, style=solid];
m1_2032 -> m1_2030  [color=blue, key=0, style=bold];
m1_2424 -> m1_2425  [key=0, style=solid];
m1_2424 -> m1_49  [key=2, style=dotted];
m1_2423 -> m1_2424  [key=0, style=solid];
m1_2425 -> m1_2423  [color=blue, key=0, style=bold];
m1_2429 -> m1_2430  [key=0, style=solid];
m1_2430 -> m1_2431  [key=0, style=solid];
m1_2430 -> m1_196  [key=2, style=dotted];
m1_2430 -> m1_2432  [color=darkseagreen4, key=1, label=reference, style=dashed];
m1_2430 -> m1_2436  [color=darkseagreen4, key=1, label=reference, style=dashed];
m1_2431 -> m1_2432  [key=0, style=solid];
m1_2431 -> m1_832  [key=2, style=dotted];
m1_2432 -> m1_2433  [key=0, style=solid];
m1_2432 -> m1_832  [key=2, style=dotted];
m1_2436 -> m1_2437  [key=0, style=solid];
m1_2436 -> m1_832  [key=2, style=dotted];
m1_2433 -> m1_2434  [key=0, style=solid];
m1_2433 -> m1_196  [key=2, style=dotted];
m1_2433 -> m1_2435  [color=darkseagreen4, key=1, label=child, style=dashed];
m1_2433 -> m1_2436  [color=darkseagreen4, key=1, label=child, style=dashed];
m1_2433 -> m1_2437  [color=darkseagreen4, key=1, label=child, style=dashed];
m1_2434 -> m1_2435  [key=0, style=solid];
m1_2434 -> m1_832  [key=2, style=dotted];
m1_2435 -> m1_2436  [key=0, style=solid];
m1_2435 -> m1_832  [key=2, style=dotted];
m1_2437 -> m1_2438  [key=0, style=solid];
m1_2437 -> m1_41  [key=2, style=dotted];
m1_2438 -> m1_2439  [key=0, style=solid];
m1_2438 -> m1_49  [key=2, style=dotted];
m1_2439 -> m1_2429  [color=blue, key=0, style=bold];
m1_2540 -> m1_2541  [key=0, style=solid];
m1_2540 -> m1_49  [key=2, style=dotted];
m1_2539 -> m1_2540  [key=0, style=solid];
m1_2541 -> m1_2539  [color=blue, key=0, style=bold];
m1_2755 -> m1_2756  [key=0, style=solid];
m1_2756 -> m1_2757  [key=0, style=solid];
m1_2756 -> m1_936  [key=2, style=dotted];
m1_2757 -> m1_2755  [color=blue, key=0, style=bold];
m1_3085 -> m1_3086  [key=0, style=solid];
m1_3085 -> m1_175  [key=2, style=dotted];
m1_3085 -> m1_296  [key=2, style=dotted];
m1_3084 -> m1_3085  [key=0, style=solid];
m1_3086 -> m1_3084  [color=blue, key=0, style=bold];
m1_3109 -> m1_3110  [key=0, style=solid];
m1_3109 -> m1_49  [key=2, style=dotted];
m1_3108 -> m1_3109  [key=0, style=solid];
m1_3110 -> m1_3108  [color=blue, key=0, style=bold];
m1_3123 -> m1_3124  [key=0, style=solid];
m1_3123 -> m1_49  [key=2, style=dotted];
m1_3122 -> m1_3123  [key=0, style=solid];
m1_3124 -> m1_3122  [color=blue, key=0, style=bold];
m1_3142 -> m1_3143  [key=0, style=solid];
m1_3143 -> m1_3144  [key=0, style=solid];
m1_3144 -> m1_3145  [key=0, style=solid];
m1_3144 -> m1_49  [key=2, style=dotted];
m1_3145 -> m1_3142  [color=blue, key=0, style=bold];
m1_3149 -> m1_3150  [key=0, style=solid];
m1_3150 -> m1_3151  [key=0, style=solid];
m1_3151 -> m1_3152  [key=0, style=solid];
m1_3151 -> m1_49  [key=2, style=dotted];
m1_3152 -> m1_3149  [color=blue, key=0, style=bold];
m1_3223 -> m1_3224  [key=0, style=solid];
m1_3224 -> m1_3225  [key=0, style=solid];
m1_3224 -> m1_49  [key=2, style=dotted];
m1_3225 -> m1_3223  [color=blue, key=0, style=bold];
m1_3229 -> m1_3230  [key=0, style=solid];
m1_3230 -> m1_3231  [key=0, style=solid];
m1_3230 -> m1_49  [key=2, style=dotted];
m1_3231 -> m1_3229  [color=blue, key=0, style=bold];
m1_3235 -> m1_3236  [key=0, style=solid];
m1_3236 -> m1_3237  [key=0, style=solid];
m1_3236 -> m1_49  [key=2, style=dotted];
m1_3237 -> m1_3235  [color=blue, key=0, style=bold];
m1_3245 -> m1_3246  [key=0, style=solid];
m1_3246 -> m1_3247  [key=0, style=solid];
m1_3246 -> m1_49  [key=2, style=dotted];
m1_3247 -> m1_3245  [color=blue, key=0, style=bold];
m1_3251 -> m1_3252  [key=0, style=solid];
m1_3252 -> m1_3253  [key=0, style=solid];
m1_3252 -> m1_465  [key=2, style=dotted];
m1_3253 -> m1_3251  [color=blue, key=0, style=bold];
m1_3371 -> m1_3372  [key=0, style=solid];
m1_3371 -> m1_322  [key=2, style=dotted];
m1_3372 -> m1_3373  [key=0, style=solid];
m1_3370 -> m1_3371  [key=0, style=solid];
m1_3370 -> m1_3372  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_3373 -> m1_3370  [color=blue, key=0, style=bold];
m1_3386 -> m1_3387  [key=0, style=solid];
m1_3386 -> m1_322  [key=2, style=dotted];
m1_3387 -> m1_3388  [key=0, style=solid];
m1_3385 -> m1_3386  [key=0, style=solid];
m1_3385 -> m1_3387  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_3388 -> m1_3385  [color=blue, key=0, style=bold];
m1_3401 -> m1_3402  [key=0, style=solid];
m1_3401 -> m1_322  [key=2, style=dotted];
m1_3402 -> m1_3403  [key=0, style=solid];
m1_3400 -> m1_3401  [key=0, style=solid];
m1_3400 -> m1_3402  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_3403 -> m1_3400  [color=blue, key=0, style=bold];
m1_3529 -> m1_3530  [key=0, style=solid];
m1_3529 -> m1_16  [key=2, style=dotted];
m1_3529 -> m1_373  [key=2, style=dotted];
m1_3529 -> m1_20  [key=2, style=dotted];
m1_3528 -> m1_3529  [key=0, style=solid];
m1_3530 -> m1_3528  [color=blue, key=0, style=bold];
m1_3541 -> m1_3542  [key=0, style=solid];
m1_3542 -> m1_3543  [key=0, style=solid];
m1_3542 -> m1_3545  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3543 -> m1_3544  [key=0, style=solid];
m1_3543 -> m1_19  [key=2, style=dotted];
m1_3543 -> m1_3548  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_3545 -> m1_3546  [key=0, style=solid];
m1_3545 -> m1_16  [key=2, style=dotted];
m1_3545 -> m1_373  [key=2, style=dotted];
m1_3545 -> m1_3547  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_3545 -> m1_3548  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_3544 -> m1_3545  [key=0, style=solid];
m1_3548 -> m1_3549  [key=0, style=solid];
m1_3548 -> m1_2524  [key=2, style=dotted];
m1_3546 -> m1_3547  [key=0, style=solid];
m1_3546 -> m1_18  [key=2, style=dotted];
m1_3547 -> m1_3548  [key=0, style=solid];
m1_3547 -> m1_18  [key=2, style=dotted];
m1_3549 -> m1_3541  [color=blue, key=0, style=bold];
m1_3631 -> m1_3632  [key=0, style=solid];
m1_3631 -> m1_49  [key=2, style=dotted];
m1_3631 -> m1_3627  [color=darkseagreen4, key=1, label=obj, style=dashed];
m1_3630 -> m1_3631  [key=0, style=solid];
m1_3632 -> m1_3630  [color=blue, key=0, style=bold];
m1_3711 -> m1_3712  [key=0, style=solid];
m1_3712 -> m1_3713  [key=0, style=solid];
m1_3712 -> m1_49  [key=2, style=dotted];
m1_3713 -> m1_3711  [color=blue, key=0, style=bold];
m1_3719 -> m1_3720  [key=0, style=solid];
m1_3720 -> m1_3721  [key=0, style=solid];
m1_3720 -> m1_49  [key=2, style=dotted];
m1_3721 -> m1_3719  [color=blue, key=0, style=bold];
m1_3729 -> m1_3730  [key=0, style=solid];
m1_3729 -> m1_49  [key=2, style=dotted];
m1_3728 -> m1_3729  [key=0, style=solid];
m1_3730 -> m1_3728  [color=blue, key=0, style=bold];
m1_3851 -> m1_3852  [key=0, style=solid];
m1_3852 -> m1_3853  [key=0, style=solid];
m1_3852 -> m1_542  [key=2, style=dotted];
m1_3853 -> m1_3851  [color=blue, key=0, style=bold];
m1_4098 -> m1_4099  [key=0, style=solid];
m1_4099 -> m1_4100  [key=0, style=solid];
m1_4099 -> m1_4101  [key=2, style=dotted];
m1_4099 -> m1_129  [key=2, style=dotted];
m1_4100 -> m1_4098  [color=blue, key=0, style=bold];
m1_4105 -> m1_4106  [key=0, style=solid];
m1_4106 -> m1_4107  [key=0, style=solid];
m1_4106 -> m1_49  [key=2, style=dotted];
m1_4107 -> m1_4105  [color=blue, key=0, style=bold];
m1_4126 -> m1_4127  [key=0, style=solid];
m1_4126 -> m1_4128  [key=2, style=dotted];
m1_4126 -> m1_4129  [key=2, style=dotted];
m1_4126 -> m1_4130  [key=2, style=dotted];
m1_4126 -> m1_236  [key=2, style=dotted];
m1_4127 -> m1_4125  [color=blue, key=0, style=bold];
m1_3594 -> m1_3595  [key=0, style=solid];
m1_3595 -> m1_3596  [key=0, style=solid];
m1_3596 -> m1_3597  [key=0, style=solid];
m1_3596 -> m1_134  [key=2, style=dotted];
m1_3596 -> m1_3598  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_3596 -> m1_3599  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_3597 -> m1_3598  [key=0, style=solid];
m1_3597 -> m1_129  [key=2, style=dotted];
m1_3598 -> m1_3599  [key=0, style=solid];
m1_3598 -> m1_175  [key=2, style=dotted];
m1_3598 -> m1_176  [key=2, style=dotted];
m1_3599 -> m1_3600  [key=0, style=solid];
m1_3599 -> m1_175  [key=2, style=dotted];
m1_3599 -> m1_176  [key=2, style=dotted];
m1_3600 -> m1_3601  [key=0, style=solid];
m1_3600 -> m1_24  [key=2, style=dotted];
m1_3601 -> m1_3594  [color=blue, key=0, style=bold];
m1_3959 -> m1_3960  [key=0, style=solid];
m1_3960 -> m1_3961  [key=0, style=solid];
m1_3960 -> m1_3964  [color=darkseagreen4, key=1, label=originalUri, style=dashed];
m1_3960 -> m1_3960  [color=darkorchid, key=3, label="Local variable string originalUri", style=bold];
m1_3961 -> m1_3962  [key=0, style=solid];
m1_3961 -> m1_1708  [key=2, style=dotted];
m1_3964 -> m1_3965  [key=0, style=solid];
m1_3964 -> m1_24  [key=2, style=dotted];
m1_3962 -> m1_3963  [key=0, style=solid];
m1_3962 -> m1_129  [key=2, style=dotted];
m1_3963 -> m1_3964  [key=0, style=solid];
m1_3963 -> m1_49  [key=2, style=dotted];
m1_3965 -> m1_3959  [color=blue, key=0, style=bold];
m1_1345 -> m1_1346  [key=0, style=solid];
m1_1346 -> m1_1347  [key=0, style=solid];
m1_1346 -> m1_1351  [key=2, style=dotted];
m1_1346 -> m1_1352  [key=2, style=dotted];
m1_1347 -> m1_1348  [key=0, style=solid];
m1_1347 -> m1_1307  [key=2, style=dotted];
m1_1348 -> m1_1349  [key=0, style=solid];
m1_1348 -> m1_41  [key=2, style=dotted];
m1_1349 -> m1_1350  [key=0, style=solid];
m1_1349 -> m1_42  [key=2, style=dotted];
m1_1350 -> m1_1345  [color=blue, key=0, style=bold];
m1_3716 -> m1_3717  [key=0, style=solid];
m1_3717 -> m1_3718  [key=0, style=solid];
m1_3717 -> m1_60  [key=2, style=dotted];
m1_3717 -> m1_3719  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_3718 -> m1_3716  [color=blue, key=0, style=bold];
m1_1872 -> m1_1873  [key=0, style=solid];
m1_1873 -> m1_1874  [key=0, style=solid];
m1_1873 -> m1_60  [key=2, style=dotted];
m1_1873 -> m1_1875  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1874 -> m1_1872  [color=blue, key=0, style=bold];
m1_343 -> m1_344  [key=0, style=solid];
m1_344 -> m1_345  [key=0, style=solid];
m1_344 -> m1_344  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_345 -> m1_346  [key=0, style=solid];
m1_345 -> m1_175  [key=2, style=dotted];
m1_345 -> m1_296  [key=2, style=dotted];
m1_345 -> m1_349  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_346 -> m1_347  [key=0, style=solid];
m1_346 -> m1_24  [key=2, style=dotted];
m1_347 -> m1_343  [color=blue, key=0, style=bold];
m1_351 -> m1_352  [key=0, style=solid];
m1_352 -> m1_353  [key=0, style=solid];
m1_352 -> m1_49  [key=2, style=dotted];
m1_352 -> m1_354  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_352 -> m1_355  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_353 -> m1_354  [key=0, style=solid];
m1_353 -> m1_24  [key=2, style=dotted];
m1_354 -> m1_355  [key=0, style=solid];
m1_354 -> m1_24  [key=2, style=dotted];
m1_355 -> m1_356  [key=0, style=solid];
m1_355 -> m1_24  [key=2, style=dotted];
m1_356 -> m1_351  [color=blue, key=0, style=bold];
m1_1949 -> m1_1950  [key=0, style=solid];
m1_1950 -> m1_1951  [key=0, style=solid];
m1_1950 -> m1_1950  [color=darkorchid, key=3, label="Local variable string googleSearchText", style=bold];
m1_1951 -> m1_1952  [key=0, style=solid];
m1_1951 -> m1_467  [key=2, style=dotted];
m1_1952 -> m1_1953  [key=0, style=solid];
m1_1952 -> m1_1041  [key=2, style=dotted];
m1_1952 -> m1_430  [key=2, style=dotted];
m1_1952 -> m1_1954  [color=darkseagreen4, key=1, label=results, style=dashed];
m1_1953 -> m1_1954  [key=0, style=solid];
m1_1953 -> m1_134  [key=2, style=dotted];
m1_1953 -> m1_1956  [color=darkseagreen4, key=1, label=searchResults, style=dashed];
m1_1953 -> m1_1957  [color=darkseagreen4, key=1, label=searchResults, style=dashed];
m1_1953 -> m1_1958  [color=darkseagreen4, key=1, label=searchResults, style=dashed];
m1_1953 -> m1_1959  [color=darkseagreen4, key=1, label=searchResults, style=dashed];
m1_1954 -> m1_1955  [key=0, style=solid];
m1_1954 -> m1_1957  [key=0, style=solid];
m1_1956 -> m1_1954  [key=0, style=solid];
m1_1956 -> m1_322  [key=2, style=dotted];
m1_1957 -> m1_1958  [key=0, style=solid];
m1_1957 -> m1_24  [key=2, style=dotted];
m1_1958 -> m1_1959  [key=0, style=solid];
m1_1958 -> m1_24  [key=2, style=dotted];
m1_1959 -> m1_1960  [key=0, style=solid];
m1_1959 -> m1_24  [key=2, style=dotted];
m1_1955 -> m1_1956  [key=0, style=solid];
m1_1955 -> m1_770  [key=2, style=dotted];
m1_1955 -> m1_49  [key=2, style=dotted];
m1_1960 -> m1_1949  [color=blue, key=0, style=bold];
m1_813 -> m1_814  [key=0, style=solid];
m1_814 -> m1_815  [key=0, style=solid];
m1_814 -> m1_196  [key=2, style=dotted];
m1_814 -> m1_817  [color=darkseagreen4, key=1, label=dictStore, style=dashed];
m1_814 -> m1_823  [color=darkseagreen4, key=1, label=dictStore, style=dashed];
m1_815 -> m1_816  [key=0, style=solid];
m1_815 -> m1_817  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_815 -> m1_818  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_815 -> m1_84  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m1_817 -> m1_818  [key=0, style=solid];
m1_817 -> m1_830  [key=2, style=dotted];
m1_817 -> m1_831  [key=2, style=dotted];
m1_817 -> m1_832  [key=2, style=dotted];
m1_823 -> m1_824  [key=0, style=solid];
m1_823 -> m1_836  [key=2, style=dotted];
m1_816 -> m1_817  [key=0, style=solid];
m1_816 -> m1_819  [key=0, style=solid];
m1_818 -> m1_816  [key=0, style=solid];
m1_818 -> m1_818  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_819 -> m1_820  [key=0, style=solid];
m1_819 -> m1_175  [key=2, style=dotted];
m1_820 -> m1_821  [key=0, style=solid];
m1_820 -> m1_833  [key=2, style=dotted];
m1_820 -> m1_823  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m1_820 -> m1_827  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m1_821 -> m1_822  [key=0, style=solid];
m1_821 -> m1_834  [key=2, style=dotted];
m1_821 -> m1_825  [color=darkseagreen4, key=1, label=ms, style=dashed];
m1_821 -> m1_827  [color=darkseagreen4, key=1, label=ms, style=dashed];
m1_827 -> m1_828  [key=0, style=solid];
m1_827 -> m1_17  [key=2, style=dotted];
m1_827 -> m1_840  [key=2, style=dotted];
m1_822 -> m1_823  [key=0, style=solid];
m1_822 -> m1_835  [key=2, style=dotted];
m1_822 -> m1_824  [color=darkseagreen4, key=1, label=streamWriter, style=dashed];
m1_825 -> m1_826  [key=0, style=solid];
m1_825 -> m1_838  [key=2, style=dotted];
m1_824 -> m1_825  [key=0, style=solid];
m1_824 -> m1_837  [key=2, style=dotted];
m1_826 -> m1_827  [key=0, style=solid];
m1_826 -> m1_839  [key=2, style=dotted];
m1_826 -> m1_828  [color=darkseagreen4, key=1, label=stopWatch, style=dashed];
m1_828 -> m1_829  [key=0, style=solid];
m1_828 -> m1_841  [key=2, style=dotted];
m1_829 -> m1_813  [color=blue, key=0, style=bold];
m1_1497 -> m1_1498  [key=0, style=solid];
m1_1498 -> m1_1499  [key=0, style=solid];
m1_1498 -> m1_1503  [key=2, style=dotted];
m1_1498 -> m1_1500  [color=darkseagreen4, key=1, label=testClass, style=dashed];
m1_1499 -> m1_1500  [key=0, style=solid];
m1_1499 -> m1_1504  [key=2, style=dotted];
m1_1500 -> m1_1501  [key=0, style=solid];
m1_1500 -> m1_129  [key=2, style=dotted];
m1_1500 -> m1_1506  [color=darkseagreen4, key=1, label=strFromTest, style=dashed];
m1_1501 -> m1_1502  [key=0, style=solid];
m1_1501 -> m1_60  [key=2, style=dotted];
m1_1501 -> m1_1505  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1502 -> m1_1497  [color=blue, key=0, style=bold];
m1_2269 -> m1_2270  [key=0, style=solid];
m1_2270 -> m1_2271  [key=0, style=solid];
m1_2270 -> m1_49  [key=2, style=dotted];
m1_2270 -> m1_2272  [color=darkseagreen4, key=1, label=kvPairs, style=dashed];
m1_2270 -> m1_2273  [color=darkseagreen4, key=1, label=kvPairs, style=dashed];
m1_2270 -> m1_2274  [color=darkseagreen4, key=1, label=kvPairs, style=dashed];
m1_2270 -> m1_2275  [color=darkseagreen4, key=1, label=kvPairs, style=dashed];
m1_2271 -> m1_2272  [key=0, style=solid];
m1_2271 -> m1_24  [key=2, style=dotted];
m1_2272 -> m1_2273  [key=0, style=solid];
m1_2272 -> m1_24  [key=2, style=dotted];
m1_2273 -> m1_2274  [key=0, style=solid];
m1_2273 -> m1_24  [key=2, style=dotted];
m1_2274 -> m1_2275  [key=0, style=solid];
m1_2274 -> m1_24  [key=2, style=dotted];
m1_2275 -> m1_2276  [key=0, style=solid];
m1_2275 -> m1_24  [key=2, style=dotted];
m1_2276 -> m1_2269  [color=blue, key=0, style=bold];
m1_3574 -> m1_3575  [key=0, style=solid];
m1_3575 -> m1_3576  [key=0, style=solid];
m1_3575 -> m1_49  [key=2, style=dotted];
m1_3576 -> m1_3577  [key=0, style=solid];
m1_3576 -> m1_24  [key=2, style=dotted];
m1_3577 -> m1_3574  [color=blue, key=0, style=bold];
m1_3919 -> m1_3920  [key=0, style=solid];
m1_3920 -> m1_3921  [key=0, style=solid];
m1_3921 -> m1_3919  [color=blue, key=0, style=bold];
m1_2063 -> m1_2066  [key=0, style=solid];
m1_2066 -> m1_2067  [key=0, style=solid];
m1_2067 -> m1_2063  [color=blue, key=0, style=bold];
m1_3242 -> m1_3243  [key=0, style=solid];
m1_3243 -> m1_3244  [key=0, style=solid];
m1_3243 -> m1_60  [key=2, style=dotted];
m1_3243 -> m1_3245  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_3244 -> m1_3242  [color=blue, key=0, style=bold];
m1_1935 -> m1_1936  [key=0, style=solid];
m1_1936 -> m1_1937  [key=0, style=solid];
m1_1936 -> m1_196  [key=2, style=dotted];
m1_1936 -> m1_1938  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m1_1936 -> m1_1939  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m1_1937 -> m1_1938  [key=0, style=solid];
m1_1937 -> m1_1512  [key=2, style=dotted];
m1_1937 -> m1_832  [key=2, style=dotted];
m1_1938 -> m1_1939  [key=0, style=solid];
m1_1938 -> m1_1512  [key=2, style=dotted];
m1_1938 -> m1_832  [key=2, style=dotted];
m1_1939 -> m1_1940  [key=0, style=solid];
m1_1939 -> m1_41  [key=2, style=dotted];
m1_1940 -> m1_1941  [key=0, style=solid];
m1_1940 -> m1_42  [key=2, style=dotted];
m1_1941 -> m1_1935  [color=blue, key=0, style=bold];
m1_469 -> m1_470  [key=0, style=solid];
m1_470 -> m1_471  [key=0, style=solid];
m1_470 -> m1_49  [key=2, style=dotted];
m1_471 -> m1_472  [key=0, style=solid];
m1_471 -> m1_24  [key=2, style=dotted];
m1_472 -> m1_473  [key=0, style=solid];
m1_472 -> m1_49  [key=2, style=dotted];
m1_473 -> m1_474  [key=0, style=solid];
m1_473 -> m1_24  [key=2, style=dotted];
m1_474 -> m1_469  [color=blue, key=0, style=bold];
m1_1248 -> m1_1249  [key=0, style=solid];
m1_1249 -> m1_1250  [key=0, style=solid];
m1_1249 -> m1_129  [key=2, style=dotted];
m1_1249 -> m1_1251  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1250 -> m1_1251  [key=0, style=solid];
m1_1250 -> m1_24  [key=2, style=dotted];
m1_1251 -> m1_1252  [key=0, style=solid];
m1_1251 -> m1_49  [key=2, style=dotted];
m1_1252 -> m1_1253  [key=0, style=solid];
m1_1252 -> m1_24  [key=2, style=dotted];
m1_1253 -> m1_1248  [color=blue, key=0, style=bold];
m1_3204 -> m1_3205  [key=0, style=solid];
m1_3205 -> m1_3206  [key=0, style=solid];
m1_3205 -> m1_49  [key=2, style=dotted];
m1_3206 -> m1_3207  [key=0, style=solid];
m1_3206 -> m1_152  [key=2, style=dotted];
m1_3207 -> m1_3208  [key=0, style=solid];
m1_3207 -> m1_49  [key=2, style=dotted];
m1_3208 -> m1_3209  [key=0, style=solid];
m1_3208 -> m1_152  [key=2, style=dotted];
m1_3209 -> m1_3210  [key=0, style=solid];
m1_3209 -> m1_49  [key=2, style=dotted];
m1_3210 -> m1_3211  [key=0, style=solid];
m1_3210 -> m1_152  [key=2, style=dotted];
m1_3211 -> m1_3212  [key=0, style=solid];
m1_3211 -> m1_49  [key=2, style=dotted];
m1_3212 -> m1_3213  [key=0, style=solid];
m1_3212 -> m1_152  [key=2, style=dotted];
m1_3213 -> m1_3214  [key=0, style=solid];
m1_3213 -> m1_49  [key=2, style=dotted];
m1_3214 -> m1_3215  [key=0, style=solid];
m1_3214 -> m1_152  [key=2, style=dotted];
m1_3215 -> m1_3216  [key=0, style=solid];
m1_3215 -> m1_49  [key=2, style=dotted];
m1_3216 -> m1_3217  [key=0, style=solid];
m1_3216 -> m1_152  [key=2, style=dotted];
m1_3217 -> m1_3218  [key=0, style=solid];
m1_3217 -> m1_49  [key=2, style=dotted];
m1_3218 -> m1_3219  [key=0, style=solid];
m1_3218 -> m1_152  [key=2, style=dotted];
m1_3219 -> m1_3204  [color=blue, key=0, style=bold];
m1_3761 -> m1_3762  [key=0, style=solid];
m1_3762 -> m1_3763  [key=0, style=solid];
m1_3762 -> m1_3762  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_3763 -> m1_3764  [key=0, style=solid];
m1_3763 -> m1_49  [key=2, style=dotted];
m1_3763 -> m1_3765  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_3763 -> m1_3766  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_3763 -> m1_3767  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_3763 -> m1_3768  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_3764 -> m1_3765  [key=0, style=solid];
m1_3764 -> m1_152  [key=2, style=dotted];
m1_3765 -> m1_3766  [key=0, style=solid];
m1_3765 -> m1_152  [key=2, style=dotted];
m1_3766 -> m1_3767  [key=0, style=solid];
m1_3766 -> m1_152  [key=2, style=dotted];
m1_3767 -> m1_3768  [key=0, style=solid];
m1_3767 -> m1_152  [key=2, style=dotted];
m1_3768 -> m1_3769  [key=0, style=solid];
m1_3768 -> m1_152  [key=2, style=dotted];
m1_3769 -> m1_3761  [color=blue, key=0, style=bold];
m1_3125 -> m1_3126  [key=0, style=solid];
m1_3126 -> m1_3127  [key=0, style=solid];
m1_3126 -> m1_3130  [key=2, style=dotted];
m1_3126 -> m1_3131  [key=2, style=dotted];
m1_3127 -> m1_3128  [key=0, style=solid];
m1_3127 -> m1_129  [key=2, style=dotted];
m1_3128 -> m1_3129  [key=0, style=solid];
m1_3128 -> m1_24  [key=2, style=dotted];
m1_3129 -> m1_3125  [color=blue, key=0, style=bold];
m1_1216 -> m1_1217  [key=0, style=solid];
m1_1217 -> m1_1218  [key=0, style=solid];
m1_1217 -> m1_1224  [key=2, style=dotted];
m1_1217 -> m1_1219  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_1217 -> m1_1220  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_1217 -> m1_1221  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_1218 -> m1_1219  [key=0, style=solid];
m1_1218 -> m1_1225  [key=2, style=dotted];
m1_1219 -> m1_1220  [key=0, style=solid];
m1_1219 -> m1_1225  [key=2, style=dotted];
m1_1220 -> m1_1221  [key=0, style=solid];
m1_1220 -> m1_1225  [key=2, style=dotted];
m1_1221 -> m1_1222  [key=0, style=solid];
m1_1221 -> m1_129  [key=2, style=dotted];
m1_1222 -> m1_1223  [key=0, style=solid];
m1_1222 -> m1_24  [key=2, style=dotted];
m1_1223 -> m1_1216  [color=blue, key=0, style=bold];
m1_1091 -> m1_1092  [key=0, style=solid];
m1_1092 -> m1_1093  [key=0, style=solid];
m1_1092 -> m1_134  [key=2, style=dotted];
m1_1092 -> m1_1102  [key=2, style=dotted];
m1_1092 -> m1_1095  [color=darkseagreen4, key=1, label=testDates, style=dashed];
m1_1092 -> m1_1099  [color=darkseagreen4, key=1, label=testDates, style=dashed];
m1_1093 -> m1_1094  [key=0, style=solid];
m1_1093 -> m1_834  [key=2, style=dotted];
m1_1093 -> m1_1095  [color=darkseagreen4, key=1, label=ms, style=dashed];
m1_1093 -> m1_1096  [color=darkseagreen4, key=1, label=ms, style=dashed];
m1_1093 -> m1_1097  [color=darkseagreen4, key=1, label=ms, style=dashed];
m1_1095 -> m1_1096  [key=0, style=solid];
m1_1095 -> m1_915  [key=2, style=dotted];
m1_1099 -> m1_1100  [key=0, style=solid];
m1_1099 -> m1_175  [key=2, style=dotted];
m1_1099 -> m1_176  [key=2, style=dotted];
m1_1094 -> m1_1095  [key=0, style=solid];
m1_1094 -> m1_914  [key=2, style=dotted];
m1_1096 -> m1_1097  [key=0, style=solid];
m1_1096 -> m1_838  [key=2, style=dotted];
m1_1097 -> m1_1098  [key=0, style=solid];
m1_1097 -> m1_17  [key=2, style=dotted];
m1_1098 -> m1_1099  [key=0, style=solid];
m1_1098 -> m1_1103  [key=2, style=dotted];
m1_1098 -> m1_1100  [color=darkseagreen4, key=1, label=expected, style=dashed];
m1_1100 -> m1_1101  [key=0, style=solid];
m1_1100 -> m1_24  [key=2, style=dotted];
m1_1101 -> m1_1091  [color=blue, key=0, style=bold];
m1_1649 -> m1_1650  [key=0, style=solid];
m1_1650 -> m1_1651  [key=0, style=solid];
m1_1651 -> m1_1649  [color=blue, key=0, style=bold];
m1_2991 -> m1_2992  [key=0, style=solid];
m1_2992 -> m1_2993  [key=0, style=solid];
m1_2992 -> m1_3007  [key=2, style=dotted];
m1_2992 -> m1_2998  [color=darkseagreen4, key=1, label=test, style=dashed];
m1_2993 -> m1_2994  [key=0, style=solid];
m1_2993 -> m1_19  [key=2, style=dotted];
m1_2993 -> m1_2998  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_2993 -> m1_3003  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_2998 -> m1_2999  [key=0, style=solid];
m1_2998 -> m1_3008  [key=2, style=dotted];
m1_2994 -> m1_2995  [key=0, style=solid];
m1_3003 -> m1_3004  [key=0, style=solid];
m1_3003 -> m1_3010  [key=2, style=dotted];
m1_3003 -> m1_3005  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m1_2995 -> m1_2996  [key=0, style=solid];
m1_2996 -> m1_2997  [key=0, style=solid];
m1_2996 -> m1_834  [key=2, style=dotted];
m1_2996 -> m1_3000  [color=darkseagreen4, key=1, label=stream, style=dashed];
m1_2997 -> m1_2998  [key=0, style=solid];
m1_2997 -> m1_2972  [key=2, style=dotted];
m1_2997 -> m1_835  [key=2, style=dotted];
m1_2997 -> m1_2999  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_3000 -> m1_3001  [key=0, style=solid];
m1_3000 -> m1_916  [key=2, style=dotted];
m1_2999 -> m1_3000  [key=0, style=solid];
m1_2999 -> m1_3009  [key=2, style=dotted];
m1_3001 -> m1_3002  [key=0, style=solid];
m1_3001 -> m1_1075  [key=2, style=dotted];
m1_3002 -> m1_3003  [key=0, style=solid];
m1_3002 -> m1_16  [key=2, style=dotted];
m1_3002 -> m1_17  [key=2, style=dotted];
m1_3004 -> m1_3005  [key=0, style=solid];
m1_3004 -> m1_24  [key=2, style=dotted];
m1_3005 -> m1_3006  [key=0, style=solid];
m1_3005 -> m1_3011  [key=2, style=dotted];
m1_3006 -> m1_2991  [color=blue, key=0, style=bold];
m1_2107 -> m1_2108  [key=0, style=solid];
m1_2108 -> m1_2109  [key=0, style=solid];
m1_2108 -> m1_2110  [key=2, style=dotted];
m1_2109 -> m1_2107  [color=blue, key=0, style=bold];
m1_1012 -> m1_1013  [key=0, style=solid];
m1_1013 -> m1_1014  [key=0, style=solid];
m1_1013 -> m1_1017  [key=2, style=dotted];
m1_1013 -> m1_129  [key=2, style=dotted];
m1_1014 -> m1_1015  [key=0, style=solid];
m1_1014 -> m1_49  [key=2, style=dotted];
m1_1015 -> m1_1016  [key=0, style=solid];
m1_1015 -> m1_24  [key=2, style=dotted];
m1_1016 -> m1_1012  [color=blue, key=0, style=bold];
m1_261 -> m1_262  [key=0, style=solid];
m1_262 -> m1_263  [key=0, style=solid];
m1_262 -> m1_258  [key=2, style=dotted];
m1_262 -> m1_272  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_263 -> m1_264  [key=0, style=solid];
m1_263 -> m1_60  [key=2, style=dotted];
m1_263 -> m1_271  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_264 -> m1_265  [key=0, style=solid];
m1_264 -> m1_258  [key=2, style=dotted];
m1_265 -> m1_266  [key=0, style=solid];
m1_265 -> m1_129  [key=2, style=dotted];
m1_266 -> m1_267  [key=0, style=solid];
m1_266 -> m1_24  [key=2, style=dotted];
m1_267 -> m1_268  [key=0, style=solid];
m1_267 -> m1_60  [key=2, style=dotted];
m1_267 -> m1_274  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_268 -> m1_269  [key=0, style=solid];
m1_268 -> m1_49  [key=2, style=dotted];
m1_269 -> m1_270  [key=0, style=solid];
m1_269 -> m1_24  [key=2, style=dotted];
m1_270 -> m1_261  [color=blue, key=0, style=bold];
m1_3358 -> m1_3359  [key=0, style=solid];
m1_3359 -> m1_3360  [key=0, style=solid];
m1_3359 -> m1_3362  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3359 -> m1_149  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_3360 -> m1_3361  [key=0, style=solid];
m1_3360 -> m1_134  [key=2, style=dotted];
m1_3360 -> m1_3371  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_3360 -> m1_3364  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_3360 -> m1_3365  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_3360 -> m1_3366  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_3360 -> m1_3367  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_3360 -> m1_3368  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_3362 -> m1_3363  [key=0, style=solid];
m1_3362 -> m1_175  [key=2, style=dotted];
m1_3362 -> m1_296  [key=2, style=dotted];
m1_3361 -> m1_3362  [key=0, style=solid];
m1_3361 -> m1_3371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_3361 -> m1_3372  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_3361 -> m1_3361  [color=darkorchid, key=3, label="Local variable System.EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error", style=bold];
m1_3364 -> m1_3365  [key=0, style=solid];
m1_3364 -> m1_24  [key=2, style=dotted];
m1_3365 -> m1_3366  [key=0, style=solid];
m1_3365 -> m1_1457  [key=2, style=dotted];
m1_3365 -> m1_22  [key=2, style=dotted];
m1_3366 -> m1_3367  [key=0, style=solid];
m1_3366 -> m1_1457  [key=2, style=dotted];
m1_3366 -> m1_22  [key=2, style=dotted];
m1_3367 -> m1_3368  [key=0, style=solid];
m1_3367 -> m1_1457  [key=2, style=dotted];
m1_3367 -> m1_22  [key=2, style=dotted];
m1_3368 -> m1_3369  [key=0, style=solid];
m1_3368 -> m1_1457  [key=2, style=dotted];
m1_3368 -> m1_22  [key=2, style=dotted];
m1_3363 -> m1_3364  [key=0, style=solid];
m1_3363 -> m1_797  [key=2, style=dotted];
m1_3369 -> m1_3358  [color=blue, key=0, style=bold];
m1_389 -> m1_390  [key=0, style=solid];
m1_390 -> m1_389  [color=blue, key=0, style=bold];
m1_3029 -> m1_3030  [key=0, style=solid];
m1_3030 -> m1_3031  [key=0, style=solid];
m1_3030 -> m1_3041  [key=2, style=dotted];
m1_3030 -> m1_3034  [color=darkseagreen4, key=1, label=contractResolver, style=dashed];
m1_3030 -> m1_3036  [color=darkseagreen4, key=1, label=contractResolver, style=dashed];
m1_3031 -> m1_3032  [key=0, style=solid];
m1_3031 -> m1_3028  [key=2, style=dotted];
m1_3031 -> m1_3034  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_3034 -> m1_3035  [key=0, style=solid];
m1_3034 -> m1_175  [key=2, style=dotted];
m1_3034 -> m1_198  [key=2, style=dotted];
m1_3036 -> m1_3037  [key=0, style=solid];
m1_3036 -> m1_175  [key=2, style=dotted];
m1_3036 -> m1_296  [key=2, style=dotted];
m1_3032 -> m1_3033  [key=0, style=solid];
m1_3033 -> m1_3034  [key=0, style=solid];
m1_3035 -> m1_3036  [key=0, style=solid];
m1_3035 -> m1_42  [key=2, style=dotted];
m1_3037 -> m1_3038  [key=0, style=solid];
m1_3037 -> m1_24  [key=2, style=dotted];
m1_3038 -> m1_3039  [key=0, style=solid];
m1_3038 -> m1_24  [key=2, style=dotted];
m1_3039 -> m1_3040  [key=0, style=solid];
m1_3039 -> m1_24  [key=2, style=dotted];
m1_3040 -> m1_3029  [color=blue, key=0, style=bold];
m1_2878 -> m1_2879  [key=0, style=solid];
m1_2879 -> m1_2880  [key=0, style=solid];
m1_2879 -> m1_2395  [key=2, style=dotted];
m1_2880 -> m1_2878  [color=blue, key=0, style=bold];
m1_1317 -> m1_1318  [key=0, style=solid];
m1_1318 -> m1_1319  [key=0, style=solid];
m1_1318 -> m1_1306  [key=2, style=dotted];
m1_1319 -> m1_1320  [key=0, style=solid];
m1_1319 -> m1_1307  [key=2, style=dotted];
m1_1320 -> m1_1321  [key=0, style=solid];
m1_1320 -> m1_175  [key=2, style=dotted];
m1_1320 -> m1_176  [key=2, style=dotted];
m1_1320 -> m1_1322  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1321 -> m1_1322  [key=0, style=solid];
m1_1321 -> m1_24  [key=2, style=dotted];
m1_1322 -> m1_1323  [key=0, style=solid];
m1_1322 -> m1_175  [key=2, style=dotted];
m1_1322 -> m1_296  [key=2, style=dotted];
m1_1322 -> m1_1324  [color=darkseagreen4, key=1, label=m2, style=dashed];
m1_1323 -> m1_1324  [key=0, style=solid];
m1_1323 -> m1_954  [key=2, style=dotted];
m1_1323 -> m1_24  [key=2, style=dotted];
m1_1324 -> m1_1325  [key=0, style=solid];
m1_1324 -> m1_954  [key=2, style=dotted];
m1_1324 -> m1_24  [key=2, style=dotted];
m1_1325 -> m1_1317  [color=blue, key=0, style=bold];
m1_3744 -> m1_3745  [key=0, style=solid];
m1_3745 -> m1_3746  [key=0, style=solid];
m1_3745 -> m1_3750  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3745 -> m1_3745  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_3746 -> m1_3747  [key=0, style=solid];
m1_3746 -> m1_49  [key=2, style=dotted];
m1_3746 -> m1_3748  [color=darkseagreen4, key=1, label=floats, style=dashed];
m1_3746 -> m1_3749  [color=darkseagreen4, key=1, label=floats, style=dashed];
m1_3750 -> m1_3751  [key=0, style=solid];
m1_3750 -> m1_49  [key=2, style=dotted];
m1_3750 -> m1_3752  [color=darkseagreen4, key=1, label=doubles, style=dashed];
m1_3750 -> m1_3753  [color=darkseagreen4, key=1, label=doubles, style=dashed];
m1_3747 -> m1_3748  [key=0, style=solid];
m1_3747 -> m1_24  [key=2, style=dotted];
m1_3748 -> m1_3749  [key=0, style=solid];
m1_3748 -> m1_24  [key=2, style=dotted];
m1_3749 -> m1_3750  [key=0, style=solid];
m1_3749 -> m1_24  [key=2, style=dotted];
m1_3751 -> m1_3752  [key=0, style=solid];
m1_3751 -> m1_24  [key=2, style=dotted];
m1_3752 -> m1_3753  [key=0, style=solid];
m1_3752 -> m1_24  [key=2, style=dotted];
m1_3753 -> m1_3754  [key=0, style=solid];
m1_3753 -> m1_24  [key=2, style=dotted];
m1_3754 -> m1_3744  [color=blue, key=0, style=bold];
m1_2133 -> m1_2134  [key=0, style=solid];
m1_2134 -> m1_2135  [key=0, style=solid];
m1_2134 -> m1_2136  [key=2, style=dotted];
m1_2135 -> m1_2133  [color=blue, key=0, style=bold];
m1_2739 -> m1_2740  [key=0, style=solid];
m1_2740 -> m1_2741  [key=0, style=solid];
m1_2740 -> m1_2744  [key=2, style=dotted];
m1_2741 -> m1_2742  [key=0, style=solid];
m1_2741 -> m1_41  [key=2, style=dotted];
m1_2742 -> m1_2743  [key=0, style=solid];
m1_2742 -> m1_42  [key=2, style=dotted];
m1_2743 -> m1_2739  [color=blue, key=0, style=bold];
m1_1797 -> m1_1798  [key=0, style=solid];
m1_1798 -> m1_1799  [key=0, style=solid];
m1_1798 -> m1_1802  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1798 -> m1_1777  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1799 -> m1_1800  [key=0, style=solid];
m1_1799 -> m1_60  [key=2, style=dotted];
m1_1799 -> m1_1801  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1800 -> m1_1797  [color=blue, key=0, style=bold];
m1_3274 -> m1_3275  [key=0, style=solid];
m1_3275 -> m1_3276  [key=0, style=solid];
m1_3275 -> m1_175  [key=2, style=dotted];
m1_3275 -> m1_296  [key=2, style=dotted];
m1_3275 -> m1_3277  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_3275 -> m1_3278  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_3275 -> m1_3279  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_3276 -> m1_3277  [key=0, style=solid];
m1_3276 -> m1_3271  [key=2, style=dotted];
m1_3276 -> m1_3272  [key=2, style=dotted];
m1_3276 -> m1_24  [key=2, style=dotted];
m1_3277 -> m1_3278  [key=0, style=solid];
m1_3277 -> m1_3273  [key=2, style=dotted];
m1_3277 -> m1_24  [key=2, style=dotted];
m1_3278 -> m1_3279  [key=0, style=solid];
m1_3278 -> m1_24  [key=2, style=dotted];
m1_3279 -> m1_3280  [key=0, style=solid];
m1_3279 -> m1_24  [key=2, style=dotted];
m1_3280 -> m1_3281  [key=0, style=solid];
m1_3280 -> m1_49  [key=2, style=dotted];
m1_3280 -> m1_3282  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_3280 -> m1_3283  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_3280 -> m1_3284  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_3281 -> m1_3282  [key=0, style=solid];
m1_3281 -> m1_24  [key=2, style=dotted];
m1_3282 -> m1_3283  [key=0, style=solid];
m1_3282 -> m1_24  [key=2, style=dotted];
m1_3283 -> m1_3284  [key=0, style=solid];
m1_3283 -> m1_24  [key=2, style=dotted];
m1_3284 -> m1_3285  [key=0, style=solid];
m1_3284 -> m1_24  [key=2, style=dotted];
m1_3285 -> m1_3274  [color=blue, key=0, style=bold];
m1_362 -> m1_363  [key=0, style=solid];
m1_363 -> m1_364  [key=0, style=solid];
m1_363 -> m1_16  [key=2, style=dotted];
m1_363 -> m1_373  [key=2, style=dotted];
m1_363 -> m1_368  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_363 -> m1_371  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_364 -> m1_365  [key=0, style=solid];
m1_364 -> m1_24  [key=2, style=dotted];
m1_368 -> m1_369  [key=0, style=solid];
m1_368 -> m1_374  [key=2, style=dotted];
m1_371 -> m1_372  [key=0, style=solid];
m1_371 -> m1_24  [key=2, style=dotted];
m1_365 -> m1_366  [key=0, style=solid];
m1_365 -> m1_19  [key=2, style=dotted];
m1_365 -> m1_368  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_366 -> m1_367  [key=0, style=solid];
m1_367 -> m1_368  [key=0, style=solid];
m1_367 -> m1_134  [key=2, style=dotted];
m1_367 -> m1_369  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_367 -> m1_370  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_369 -> m1_370  [key=0, style=solid];
m1_369 -> m1_375  [key=2, style=dotted];
m1_369 -> m1_24  [key=2, style=dotted];
m1_370 -> m1_371  [key=0, style=solid];
m1_370 -> m1_376  [key=2, style=dotted];
m1_370 -> m1_24  [key=2, style=dotted];
m1_372 -> m1_362  [color=blue, key=0, style=bold];
m1_2392 -> m1_2393  [key=0, style=solid];
m1_2393 -> m1_2394  [key=0, style=solid];
m1_2393 -> m1_2395  [key=2, style=dotted];
m1_2394 -> m1_2392  [color=blue, key=0, style=bold];
m1_4095 -> m1_4096  [key=0, style=solid];
m1_4096 -> m1_4097  [key=0, style=solid];
m1_4096 -> m1_60  [key=2, style=dotted];
m1_4096 -> m1_4098  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_4097 -> m1_4095  [color=blue, key=0, style=bold];
m1_4151 -> m1_4152  [key=0, style=solid];
m1_4152 -> m1_4153  [key=0, style=solid];
m1_4152 -> m1_2395  [key=2, style=dotted];
m1_4153 -> m1_4151  [color=blue, key=0, style=bold];
m1_1297 -> m1_1298  [key=0, style=solid];
m1_1298 -> m1_1299  [key=0, style=solid];
m1_1298 -> m1_1306  [key=2, style=dotted];
m1_1298 -> m1_1303  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m1_1298 -> m1_1304  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m1_1299 -> m1_1300  [key=0, style=solid];
m1_1299 -> m1_1307  [key=2, style=dotted];
m1_1303 -> m1_1304  [key=0, style=solid];
m1_1303 -> m1_24  [key=2, style=dotted];
m1_1304 -> m1_1305  [key=0, style=solid];
m1_1304 -> m1_24  [key=2, style=dotted];
m1_1300 -> m1_1301  [key=0, style=solid];
m1_1300 -> m1_129  [key=2, style=dotted];
m1_1300 -> m1_1302  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1301 -> m1_1302  [key=0, style=solid];
m1_1301 -> m1_24  [key=2, style=dotted];
m1_1302 -> m1_1303  [key=0, style=solid];
m1_1302 -> m1_49  [key=2, style=dotted];
m1_1302 -> m1_1304  [color=darkseagreen4, key=1, label=m2, style=dashed];
m1_1305 -> m1_1297  [color=blue, key=0, style=bold];
m1_3943 -> m1_3944  [key=0, style=solid];
m1_3944 -> m1_3945  [key=0, style=solid];
m1_3944 -> m1_3900  [key=2, style=dotted];
m1_3945 -> m1_3943  [color=blue, key=0, style=bold];
m1_2111 -> m1_2112  [key=0, style=solid];
m1_2112 -> m1_2113  [key=0, style=solid];
m1_2112 -> m1_2114  [key=2, style=dotted];
m1_2113 -> m1_2111  [color=blue, key=0, style=bold];
m1_2383 -> m1_2384  [key=0, style=solid];
m1_2383 -> m1_2386  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_2383 -> m1_2387  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_2384 -> m1_2385  [key=0, style=solid];
m1_2384 -> m1_2386  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_2386 -> m1_2388  [key=0, style=solid];
m1_2386 -> m1_2389  [key=2, style=dotted];
m1_2386 -> m1_2390  [key=2, style=dotted];
m1_2387 -> m1_2388  [key=0, style=solid];
m1_2387 -> m1_2391  [key=2, style=dotted];
m1_2385 -> m1_2386  [key=0, style=solid];
m1_2385 -> m1_2387  [key=0, style=solid];
m1_2388 -> m1_2383  [color=blue, key=0, style=bold];
m1_1776 -> m1_1777  [key=0, style=solid];
m1_1777 -> m1_1778  [key=0, style=solid];
m1_1777 -> m1_1781  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1777 -> m1_1777  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1778 -> m1_1779  [key=0, style=solid];
m1_1778 -> m1_60  [key=2, style=dotted];
m1_1778 -> m1_1780  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1779 -> m1_1776  [color=blue, key=0, style=bold];
m1_377 -> m1_378  [key=0, style=solid];
m1_378 -> m1_379  [key=0, style=solid];
m1_378 -> m1_382  [key=2, style=dotted];
m1_378 -> m1_129  [key=2, style=dotted];
m1_378 -> m1_24  [key=2, style=dotted];
m1_379 -> m1_380  [key=0, style=solid];
m1_379 -> m1_49  [key=2, style=dotted];
m1_380 -> m1_381  [key=0, style=solid];
m1_380 -> m1_24  [key=2, style=dotted];
m1_381 -> m1_377  [color=blue, key=0, style=bold];
m1_3374 -> m1_3375  [key=0, style=solid];
m1_3375 -> m1_3376  [key=0, style=solid];
m1_3375 -> m1_3378  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3375 -> m1_3375  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_3376 -> m1_3377  [key=0, style=solid];
m1_3376 -> m1_134  [key=2, style=dotted];
m1_3376 -> m1_3386  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_3376 -> m1_3380  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_3376 -> m1_3381  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_3376 -> m1_3382  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_3376 -> m1_3383  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_3378 -> m1_3379  [key=0, style=solid];
m1_3378 -> m1_175  [key=2, style=dotted];
m1_3378 -> m1_296  [key=2, style=dotted];
m1_3377 -> m1_3378  [key=0, style=solid];
m1_3377 -> m1_3386  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_3377 -> m1_3387  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_3377 -> m1_3377  [color=darkorchid, key=3, label="Local variable System.EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error", style=bold];
m1_3380 -> m1_3381  [key=0, style=solid];
m1_3380 -> m1_24  [key=2, style=dotted];
m1_3381 -> m1_3382  [key=0, style=solid];
m1_3381 -> m1_1457  [key=2, style=dotted];
m1_3381 -> m1_22  [key=2, style=dotted];
m1_3382 -> m1_3383  [key=0, style=solid];
m1_3382 -> m1_1457  [key=2, style=dotted];
m1_3382 -> m1_22  [key=2, style=dotted];
m1_3383 -> m1_3384  [key=0, style=solid];
m1_3383 -> m1_1457  [key=2, style=dotted];
m1_3383 -> m1_22  [key=2, style=dotted];
m1_3379 -> m1_3380  [key=0, style=solid];
m1_3379 -> m1_797  [key=2, style=dotted];
m1_3384 -> m1_3374  [color=blue, key=0, style=bold];
m1_3471 -> m1_3472  [key=0, style=solid];
m1_3472 -> m1_3473  [key=0, style=solid];
m1_3472 -> m1_3477  [key=2, style=dotted];
m1_3472 -> m1_3474  [color=darkseagreen4, key=1, label=testObj, style=dashed];
m1_3473 -> m1_3474  [key=0, style=solid];
m1_3473 -> m1_3478  [key=2, style=dotted];
m1_3473 -> m1_3475  [color=darkseagreen4, key=1, label=objDeserialized, style=dashed];
m1_3474 -> m1_3475  [key=0, style=solid];
m1_3474 -> m1_24  [key=2, style=dotted];
m1_3475 -> m1_3476  [key=0, style=solid];
m1_3475 -> m1_24  [key=2, style=dotted];
m1_3476 -> m1_3471  [color=blue, key=0, style=bold];
m1_1975 -> m1_1976  [key=0, style=solid];
m1_1976 -> m1_1977  [key=0, style=solid];
m1_1976 -> m1_196  [key=2, style=dotted];
m1_1977 -> m1_1978  [key=0, style=solid];
m1_1977 -> m1_134  [key=2, style=dotted];
m1_1978 -> m1_1975  [color=blue, key=0, style=bold];
m1_2729 -> m1_2730  [key=0, style=solid];
m1_2730 -> m1_2731  [key=0, style=solid];
m1_2730 -> m1_2738  [key=2, style=dotted];
m1_2730 -> m1_134  [key=2, style=dotted];
m1_2731 -> m1_2732  [key=0, style=solid];
m1_2731 -> m1_41  [key=2, style=dotted];
m1_2731 -> m1_2733  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_2732 -> m1_2733  [key=0, style=solid];
m1_2732 -> m1_42  [key=2, style=dotted];
m1_2733 -> m1_2734  [key=0, style=solid];
m1_2733 -> m1_49  [key=2, style=dotted];
m1_2733 -> m1_2735  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_2733 -> m1_2736  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_2734 -> m1_2735  [key=0, style=solid];
m1_2734 -> m1_1681  [key=2, style=dotted];
m1_2734 -> m1_24  [key=2, style=dotted];
m1_2735 -> m1_2736  [key=0, style=solid];
m1_2735 -> m1_1681  [key=2, style=dotted];
m1_2735 -> m1_24  [key=2, style=dotted];
m1_2736 -> m1_2737  [key=0, style=solid];
m1_2736 -> m1_1681  [key=2, style=dotted];
m1_2736 -> m1_24  [key=2, style=dotted];
m1_2737 -> m1_2729  [color=blue, key=0, style=bold];
m1_2265 -> m1_2266  [key=0, style=solid];
m1_2265 -> m1_2267  [color=darkseagreen4, key=1, label=TValue, style=dashed];
m1_2266 -> m1_2267  [key=0, style=solid];
m1_2267 -> m1_2268  [key=0, style=solid];
m1_2268 -> m1_2265  [color=blue, key=0, style=bold];
m1_3132 -> m1_3133  [key=0, style=solid];
m1_3133 -> m1_3134  [key=0, style=solid];
m1_3133 -> m1_3133  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_3134 -> m1_3135  [key=0, style=solid];
m1_3134 -> m1_49  [key=2, style=dotted];
m1_3134 -> m1_3136  [color=darkseagreen4, key=1, label=w, style=dashed];
m1_3134 -> m1_3137  [color=darkseagreen4, key=1, label=w, style=dashed];
m1_3135 -> m1_3136  [key=0, style=solid];
m1_3135 -> m1_3131  [key=2, style=dotted];
m1_3135 -> m1_24  [key=2, style=dotted];
m1_3136 -> m1_3137  [key=0, style=solid];
m1_3136 -> m1_3131  [key=2, style=dotted];
m1_3136 -> m1_24  [key=2, style=dotted];
m1_3137 -> m1_3138  [key=0, style=solid];
m1_3137 -> m1_24  [key=2, style=dotted];
m1_3138 -> m1_3132  [color=blue, key=0, style=bold];
m1_1308 -> m1_1309  [key=0, style=solid];
m1_1309 -> m1_1310  [key=0, style=solid];
m1_1309 -> m1_1306  [key=2, style=dotted];
m1_1309 -> m1_1314  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m1_1309 -> m1_1315  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m1_1310 -> m1_1311  [key=0, style=solid];
m1_1310 -> m1_1307  [key=2, style=dotted];
m1_1314 -> m1_1315  [key=0, style=solid];
m1_1314 -> m1_24  [key=2, style=dotted];
m1_1315 -> m1_1316  [key=0, style=solid];
m1_1315 -> m1_24  [key=2, style=dotted];
m1_1311 -> m1_1312  [key=0, style=solid];
m1_1311 -> m1_175  [key=2, style=dotted];
m1_1311 -> m1_176  [key=2, style=dotted];
m1_1311 -> m1_1313  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1312 -> m1_1313  [key=0, style=solid];
m1_1312 -> m1_24  [key=2, style=dotted];
m1_1313 -> m1_1314  [key=0, style=solid];
m1_1313 -> m1_49  [key=2, style=dotted];
m1_1313 -> m1_1315  [color=darkseagreen4, key=1, label=m2, style=dashed];
m1_1316 -> m1_1308  [color=blue, key=0, style=bold];
m1_3197 -> m1_3198  [key=0, style=solid];
m1_3198 -> m1_3199  [key=0, style=solid];
m1_3198 -> m1_175  [key=2, style=dotted];
m1_3198 -> m1_833  [key=2, style=dotted];
m1_3198 -> m1_3201  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_3199 -> m1_3200  [key=0, style=solid];
m1_3199 -> m1_16  [key=2, style=dotted];
m1_3199 -> m1_373  [key=2, style=dotted];
m1_3199 -> m1_20  [key=2, style=dotted];
m1_3199 -> m1_3202  [color=darkseagreen4, key=1, label=dict, style=dashed];
m1_3201 -> m1_3202  [key=0, style=solid];
m1_3201 -> m1_20  [key=2, style=dotted];
m1_3200 -> m1_3201  [key=0, style=solid];
m1_3200 -> m1_16  [key=2, style=dotted];
m1_3200 -> m1_373  [key=2, style=dotted];
m1_3202 -> m1_3203  [key=0, style=solid];
m1_3202 -> m1_24  [key=2, style=dotted];
m1_3203 -> m1_3197  [color=blue, key=0, style=bold];
m1_159 -> m1_160  [key=0, style=solid];
m1_160 -> m1_161  [key=0, style=solid];
m1_160 -> m1_49  [key=2, style=dotted];
m1_160 -> m1_162  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_161 -> m1_162  [key=0, style=solid];
m1_161 -> m1_152  [key=2, style=dotted];
m1_162 -> m1_163  [key=0, style=solid];
m1_162 -> m1_152  [key=2, style=dotted];
m1_163 -> m1_159  [color=blue, key=0, style=bold];
m1_870 -> m1_901  [key=0, style=solid];
m1_870 -> m1_902  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_870 -> m1_903  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_870 -> m1_907  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_870 -> m1_861  [color=darkorchid, key=3, label="Parameter variable object o", style=bold];
m1_870 -> m1_882  [color=darkorchid, key=3, label="Parameter variable object o", style=bold];
m1_870 -> m1_892  [color=darkorchid, key=3, label="Parameter variable object o", style=bold];
m1_901 -> m1_902  [key=0, style=solid];
m1_901 -> m1_834  [key=2, style=dotted];
m1_901 -> m1_903  [color=darkseagreen4, key=1, label=ms, style=dashed];
m1_901 -> m1_904  [color=darkseagreen4, key=1, label=ms, style=dashed];
m1_902 -> m1_903  [key=0, style=solid];
m1_902 -> m1_914  [key=2, style=dotted];
m1_902 -> m1_375  [key=2, style=dotted];
m1_903 -> m1_904  [key=0, style=solid];
m1_903 -> m1_915  [key=2, style=dotted];
m1_907 -> m1_908  [key=0, style=solid];
m1_907 -> m1_129  [key=2, style=dotted];
m1_907 -> m1_467  [key=2, style=dotted];
m1_904 -> m1_905  [key=0, style=solid];
m1_904 -> m1_916  [key=2, style=dotted];
m1_905 -> m1_906  [key=0, style=solid];
m1_905 -> m1_917  [key=2, style=dotted];
m1_905 -> m1_467  [key=2, style=dotted];
m1_906 -> m1_907  [key=0, style=solid];
m1_906 -> m1_918  [key=2, style=dotted];
m1_906 -> m1_919  [key=2, style=dotted];
m1_906 -> m1_920  [key=2, style=dotted];
m1_906 -> m1_906  [color=darkseagreen4, key=1, label=dataContractJson, style=dashed];
m1_906 -> m1_921  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_906 -> m1_909  [color=darkseagreen4, key=1, label=dataContractJson, style=dashed];
m1_906 -> m1_910  [color=darkseagreen4, key=1, label=dataContractJson, style=dashed];
m1_909 -> m1_910  [key=0, style=solid];
m1_909 -> m1_24  [key=2, style=dotted];
m1_910 -> m1_911  [key=0, style=solid];
m1_910 -> m1_912  [key=0, style=solid];
m1_908 -> m1_909  [key=0, style=solid];
m1_908 -> m1_918  [key=2, style=dotted];
m1_908 -> m1_919  [key=2, style=dotted];
m1_908 -> m1_920  [key=2, style=dotted];
m1_908 -> m1_908  [color=darkseagreen4, key=1, label=jsonNetJson, style=dashed];
m1_908 -> m1_924  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_908 -> m1_911  [color=darkseagreen4, key=1, label=jsonNetJson, style=dashed];
m1_908 -> m1_912  [color=darkseagreen4, key=1, label=jsonNetJson, style=dashed];
m1_911 -> m1_910  [key=0, style=solid];
m1_911 -> m1_468  [key=2, style=dotted];
m1_911 -> m1_22  [key=2, style=dotted];
m1_911 -> m1_911  [color=darkseagreen4, key=1, label=property, style=dashed];
m1_912 -> m1_913  [key=0, style=solid];
m1_912 -> m1_770  [key=2, style=dotted];
m1_913 -> m1_870  [color=blue, key=0, style=bold];
m1_4023 -> m1_4024  [key=0, style=solid];
m1_4024 -> m1_4025  [key=0, style=solid];
m1_4024 -> m1_376  [key=2, style=dotted];
m1_4024 -> m1_4027  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_4024 -> m1_4030  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_4025 -> m1_4026  [key=0, style=solid];
m1_4025 -> m1_4025  [color=darkorchid, key=3, label="Local variable string dateFormatString", style=bold];
m1_4027 -> m1_4028  [key=0, style=solid];
m1_4027 -> m1_196  [key=2, style=dotted];
m1_4027 -> m1_176  [key=2, style=dotted];
m1_4027 -> m1_4029  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4030 -> m1_4031  [key=0, style=solid];
m1_4030 -> m1_1681  [key=2, style=dotted];
m1_4030 -> m1_24  [key=2, style=dotted];
m1_4026 -> m1_4027  [key=0, style=solid];
m1_4026 -> m1_175  [key=2, style=dotted];
m1_4026 -> m1_4029  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_4029 -> m1_4030  [key=0, style=solid];
m1_4029 -> m1_296  [key=2, style=dotted];
m1_4028 -> m1_4029  [key=0, style=solid];
m1_4028 -> m1_42  [key=2, style=dotted];
m1_4031 -> m1_4023  [color=blue, key=0, style=bold];
m1_3389 -> m1_3390  [key=0, style=solid];
m1_3390 -> m1_3391  [key=0, style=solid];
m1_3390 -> m1_134  [key=2, style=dotted];
m1_3390 -> m1_3401  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_3390 -> m1_3394  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_3390 -> m1_3395  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_3390 -> m1_3396  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_3390 -> m1_3397  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_3391 -> m1_3392  [key=0, style=solid];
m1_3391 -> m1_3401  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_3391 -> m1_3402  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_3391 -> m1_3391  [color=darkorchid, key=3, label="Local variable System.EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error", style=bold];
m1_3394 -> m1_3395  [key=0, style=solid];
m1_3394 -> m1_24  [key=2, style=dotted];
m1_3395 -> m1_3396  [key=0, style=solid];
m1_3395 -> m1_24  [key=2, style=dotted];
m1_3396 -> m1_3397  [key=0, style=solid];
m1_3396 -> m1_24  [key=2, style=dotted];
m1_3397 -> m1_3398  [key=0, style=solid];
m1_3397 -> m1_24  [key=2, style=dotted];
m1_3392 -> m1_3393  [key=0, style=solid];
m1_3392 -> m1_3399  [key=2, style=dotted];
m1_3392 -> m1_175  [key=2, style=dotted];
m1_3392 -> m1_176  [key=2, style=dotted];
m1_3393 -> m1_3394  [key=0, style=solid];
m1_3393 -> m1_42  [key=2, style=dotted];
m1_3398 -> m1_3389  [color=blue, key=0, style=bold];
m1_1160 -> m1_1161  [key=0, style=solid];
m1_1161 -> m1_1162  [key=0, style=solid];
m1_1161 -> m1_1161  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1162 -> m1_1163  [key=0, style=solid];
m1_1162 -> m1_49  [key=2, style=dotted];
m1_1162 -> m1_1164  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m1_1162 -> m1_1165  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m1_1162 -> m1_1166  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m1_1162 -> m1_1167  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m1_1162 -> m1_1168  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m1_1163 -> m1_1164  [key=0, style=solid];
m1_1163 -> m1_24  [key=2, style=dotted];
m1_1164 -> m1_1165  [key=0, style=solid];
m1_1164 -> m1_24  [key=2, style=dotted];
m1_1165 -> m1_1166  [key=0, style=solid];
m1_1165 -> m1_24  [key=2, style=dotted];
m1_1166 -> m1_1167  [key=0, style=solid];
m1_1166 -> m1_24  [key=2, style=dotted];
m1_1167 -> m1_1168  [key=0, style=solid];
m1_1167 -> m1_24  [key=2, style=dotted];
m1_1168 -> m1_1169  [key=0, style=solid];
m1_1168 -> m1_24  [key=2, style=dotted];
m1_1169 -> m1_1160  [color=blue, key=0, style=bold];
m1_307 -> m1_308  [key=0, style=solid];
m1_308 -> m1_309  [key=0, style=solid];
m1_308 -> m1_310  [key=2, style=dotted];
m1_309 -> m1_307  [color=blue, key=0, style=bold];
m1_1116 -> m1_1117  [key=0, style=solid];
m1_1117 -> m1_1118  [key=0, style=solid];
m1_1117 -> m1_196  [key=2, style=dotted];
m1_1117 -> m1_1119  [color=darkseagreen4, key=1, label=values, style=dashed];
m1_1117 -> m1_1120  [color=darkseagreen4, key=1, label=values, style=dashed];
m1_1117 -> m1_1123  [color=darkseagreen4, key=1, label=values, style=dashed];
m1_1118 -> m1_1119  [key=0, style=solid];
m1_1118 -> m1_832  [key=2, style=dotted];
m1_1119 -> m1_1120  [key=0, style=solid];
m1_1119 -> m1_832  [key=2, style=dotted];
m1_1120 -> m1_1121  [key=0, style=solid];
m1_1120 -> m1_129  [key=2, style=dotted];
m1_1120 -> m1_1122  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1123 -> m1_1124  [key=0, style=solid];
m1_1123 -> m1_24  [key=2, style=dotted];
m1_1121 -> m1_1122  [key=0, style=solid];
m1_1121 -> m1_24  [key=2, style=dotted];
m1_1122 -> m1_1123  [key=0, style=solid];
m1_1122 -> m1_49  [key=2, style=dotted];
m1_1124 -> m1_1116  [color=blue, key=0, style=bold];
m1_2409 -> m1_2410  [key=0, style=solid];
m1_2410 -> m1_2411  [key=0, style=solid];
m1_2411 -> m1_2409  [color=blue, key=0, style=bold];
m1_164 -> m1_165  [key=0, style=solid];
m1_165 -> m1_166  [key=0, style=solid];
m1_165 -> m1_60  [key=2, style=dotted];
m1_165 -> m1_167  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_166 -> m1_164  [color=blue, key=0, style=bold];
m1_3854 -> m1_3855  [key=0, style=solid];
m1_3855 -> m1_3856  [key=0, style=solid];
m1_3855 -> m1_3874  [key=2, style=dotted];
m1_3855 -> m1_3857  [color=darkseagreen4, key=1, label=consoleWriter, style=dashed];
m1_3855 -> m1_3862  [color=darkseagreen4, key=1, label=consoleWriter, style=dashed];
m1_3855 -> m1_3868  [color=darkseagreen4, key=1, label=consoleWriter, style=dashed];
m1_3856 -> m1_3857  [key=0, style=solid];
m1_3856 -> m1_175  [key=2, style=dotted];
m1_3856 -> m1_3875  [key=2, style=dotted];
m1_3856 -> m1_3876  [key=2, style=dotted];
m1_3856 -> m1_3859  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_3856 -> m1_3863  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_3856 -> m1_3865  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_3856 -> m1_3869  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_3856 -> m1_3871  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_3857 -> m1_3858  [key=0, style=solid];
m1_3857 -> m1_198  [key=2, style=dotted];
m1_3857 -> m1_3859  [color=darkseagreen4, key=1, label=text1, style=dashed];
m1_3862 -> m1_3863  [key=0, style=solid];
m1_3862 -> m1_832  [key=2, style=dotted];
m1_3868 -> m1_3869  [key=0, style=solid];
m1_3868 -> m1_832  [key=2, style=dotted];
m1_3859 -> m1_3860  [key=0, style=solid];
m1_3859 -> m1_296  [key=2, style=dotted];
m1_3863 -> m1_3864  [key=0, style=solid];
m1_3863 -> m1_198  [key=2, style=dotted];
m1_3863 -> m1_3865  [color=darkseagreen4, key=1, label=text2, style=dashed];
m1_3865 -> m1_3866  [key=0, style=solid];
m1_3865 -> m1_296  [key=2, style=dotted];
m1_3869 -> m1_3870  [key=0, style=solid];
m1_3869 -> m1_198  [key=2, style=dotted];
m1_3869 -> m1_3871  [color=darkseagreen4, key=1, label=text3, style=dashed];
m1_3871 -> m1_3872  [key=0, style=solid];
m1_3871 -> m1_296  [key=2, style=dotted];
m1_3858 -> m1_3859  [key=0, style=solid];
m1_3858 -> m1_24  [key=2, style=dotted];
m1_3860 -> m1_3861  [key=0, style=solid];
m1_3860 -> m1_3877  [key=2, style=dotted];
m1_3860 -> m1_24  [key=2, style=dotted];
m1_3861 -> m1_3862  [key=0, style=solid];
m1_3861 -> m1_196  [key=2, style=dotted];
m1_3861 -> m1_3863  [color=darkseagreen4, key=1, label=dict2, style=dashed];
m1_3864 -> m1_3865  [key=0, style=solid];
m1_3864 -> m1_42  [key=2, style=dotted];
m1_3866 -> m1_3867  [key=0, style=solid];
m1_3866 -> m1_3832  [key=2, style=dotted];
m1_3866 -> m1_3877  [key=2, style=dotted];
m1_3866 -> m1_24  [key=2, style=dotted];
m1_3867 -> m1_3868  [key=0, style=solid];
m1_3867 -> m1_196  [key=2, style=dotted];
m1_3867 -> m1_3869  [color=darkseagreen4, key=1, label=dict3, style=dashed];
m1_3870 -> m1_3871  [key=0, style=solid];
m1_3870 -> m1_42  [key=2, style=dotted];
m1_3872 -> m1_3873  [key=0, style=solid];
m1_3872 -> m1_3832  [key=2, style=dotted];
m1_3872 -> m1_3877  [key=2, style=dotted];
m1_3872 -> m1_24  [key=2, style=dotted];
m1_3873 -> m1_3854  [color=blue, key=0, style=bold];
m1_1961 -> m1_1962  [key=0, style=solid];
m1_1962 -> m1_1963  [key=0, style=solid];
m1_1962 -> m1_1974  [key=2, style=dotted];
m1_1962 -> m1_1969  [color=darkseagreen4, key=1, label=personPropertyClass, style=dashed];
m1_1963 -> m1_1964  [key=0, style=solid];
m1_1963 -> m1_1965  [color=darkseagreen4, key=1, label=wagePerson, style=dashed];
m1_1963 -> m1_1966  [color=darkseagreen4, key=1, label=wagePerson, style=dashed];
m1_1963 -> m1_1967  [color=darkseagreen4, key=1, label=wagePerson, style=dashed];
m1_1963 -> m1_1968  [color=darkseagreen4, key=1, label=wagePerson, style=dashed];
m1_1963 -> m1_1972  [color=darkseagreen4, key=1, label=wagePerson, style=dashed];
m1_1969 -> m1_1970  [key=0, style=solid];
m1_1969 -> m1_41  [key=2, style=dotted];
m1_1969 -> m1_1971  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1964 -> m1_1965  [key=0, style=solid];
m1_1964 -> m1_1102  [key=2, style=dotted];
m1_1965 -> m1_1966  [key=0, style=solid];
m1_1966 -> m1_1967  [key=0, style=solid];
m1_1967 -> m1_1968  [key=0, style=solid];
m1_1967 -> m1_1102  [key=2, style=dotted];
m1_1968 -> m1_1969  [key=0, style=solid];
m1_1972 -> m1_1973  [key=0, style=solid];
m1_1972 -> m1_24  [key=2, style=dotted];
m1_1970 -> m1_1971  [key=0, style=solid];
m1_1970 -> m1_42  [key=2, style=dotted];
m1_1971 -> m1_1972  [key=0, style=solid];
m1_1971 -> m1_49  [key=2, style=dotted];
m1_1973 -> m1_1961  [color=blue, key=0, style=bold];
m1_1364 -> m1_1365  [key=0, style=solid];
m1_1365 -> m1_1366  [key=0, style=solid];
m1_1365 -> m1_60  [key=2, style=dotted];
m1_1365 -> m1_1367  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1366 -> m1_1364  [color=blue, key=0, style=bold];
m1_2026 -> m1_2027  [key=0, style=solid];
m1_2027 -> m1_2028  [key=0, style=solid];
m1_2027 -> m1_2031  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_2027 -> m1_2027  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_2028 -> m1_2029  [key=0, style=solid];
m1_2028 -> m1_60  [key=2, style=dotted];
m1_2028 -> m1_2030  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_2029 -> m1_2026  [color=blue, key=0, style=bold];
m1_4092 -> m1_4093  [key=0, style=solid];
m1_4093 -> m1_4094  [key=0, style=solid];
m1_4093 -> m1_2395  [key=2, style=dotted];
m1_4094 -> m1_4092  [color=blue, key=0, style=bold];
m1_1032 -> m1_1033  [key=0, style=solid];
m1_1033 -> m1_1034  [key=0, style=solid];
m1_1033 -> m1_1033  [color=darkorchid, key=3, label="Local variable string jsonText", style=bold];
m1_1034 -> m1_1035  [key=0, style=solid];
m1_1034 -> m1_465  [key=2, style=dotted];
m1_1034 -> m1_1036  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_1035 -> m1_1036  [key=0, style=solid];
m1_1035 -> m1_1040  [key=2, style=dotted];
m1_1035 -> m1_466  [key=2, style=dotted];
m1_1035 -> m1_24  [key=2, style=dotted];
m1_1036 -> m1_1037  [key=0, style=solid];
m1_1037 -> m1_1038  [key=0, style=solid];
m1_1038 -> m1_1039  [key=0, style=solid];
m1_1038 -> m1_1041  [key=2, style=dotted];
m1_1038 -> m1_466  [key=2, style=dotted];
m1_1038 -> m1_24  [key=2, style=dotted];
m1_1039 -> m1_1032  [color=blue, key=0, style=bold];
m1_421 -> m1_422  [key=0, style=solid];
m1_422 -> m1_423  [key=0, style=solid];
m1_422 -> m1_402  [key=2, style=dotted];
m1_422 -> m1_429  [key=2, style=dotted];
m1_422 -> m1_430  [key=2, style=dotted];
m1_422 -> m1_425  [color=darkseagreen4, key=1, label=input, style=dashed];
m1_422 -> m1_426  [color=darkseagreen4, key=1, label=input, style=dashed];
m1_422 -> m1_427  [color=darkseagreen4, key=1, label=input, style=dashed];
m1_423 -> m1_424  [key=0, style=solid];
m1_423 -> m1_129  [key=2, style=dotted];
m1_425 -> m1_426  [key=0, style=solid];
m1_425 -> m1_24  [key=2, style=dotted];
m1_426 -> m1_427  [key=0, style=solid];
m1_426 -> m1_24  [key=2, style=dotted];
m1_427 -> m1_428  [key=0, style=solid];
m1_427 -> m1_24  [key=2, style=dotted];
m1_424 -> m1_425  [key=0, style=solid];
m1_424 -> m1_49  [key=2, style=dotted];
m1_424 -> m1_426  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m1_424 -> m1_427  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m1_428 -> m1_421  [color=blue, key=0, style=bold];
m1_2713 -> m1_4182  [key=0, style=solid];
m1_4182 -> m1_4183  [key=0, style=solid];
m1_4183 -> m1_2713  [color=blue, key=0, style=bold];
m1_1579 -> m1_1580  [key=0, style=solid];
m1_1580 -> m1_1581  [key=0, style=solid];
m1_1580 -> m1_1578  [key=2, style=dotted];
m1_1580 -> m1_1582  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_1581 -> m1_1582  [key=0, style=solid];
m1_1582 -> m1_1583  [key=0, style=solid];
m1_1582 -> m1_175  [key=2, style=dotted];
m1_1582 -> m1_176  [key=2, style=dotted];
m1_1582 -> m1_1584  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1583 -> m1_1584  [key=0, style=solid];
m1_1583 -> m1_24  [key=2, style=dotted];
m1_1584 -> m1_1585  [key=0, style=solid];
m1_1584 -> m1_175  [key=2, style=dotted];
m1_1584 -> m1_296  [key=2, style=dotted];
m1_1585 -> m1_1586  [key=0, style=solid];
m1_1585 -> m1_175  [key=2, style=dotted];
m1_1585 -> m1_176  [key=2, style=dotted];
m1_1586 -> m1_1587  [key=0, style=solid];
m1_1586 -> m1_24  [key=2, style=dotted];
m1_1587 -> m1_1579  [color=blue, key=0, style=bold];
m1_3602 -> m1_3603  [key=0, style=solid];
m1_3603 -> m1_3604  [key=0, style=solid];
m1_3603 -> m1_3603  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_3604 -> m1_3605  [key=0, style=solid];
m1_3604 -> m1_49  [key=2, style=dotted];
m1_3605 -> m1_3606  [key=0, style=solid];
m1_3606 -> m1_3607  [key=0, style=solid];
m1_3606 -> m1_2357  [key=2, style=dotted];
m1_3606 -> m1_24  [key=2, style=dotted];
m1_3607 -> m1_3602  [color=blue, key=0, style=bold];
m1_3254 -> m1_3255  [key=0, style=solid];
m1_3255 -> m1_3256  [key=0, style=solid];
m1_3255 -> m1_3255  [color=darkorchid, key=3, label="Local variable string jsonIsoText", style=bold];
m1_3256 -> m1_3257  [key=0, style=solid];
m1_3256 -> m1_1149  [key=2, style=dotted];
m1_3256 -> m1_236  [key=2, style=dotted];
m1_3257 -> m1_3258  [key=0, style=solid];
m1_3257 -> m1_24  [key=2, style=dotted];
m1_3258 -> m1_3254  [color=blue, key=0, style=bold];
m1_70 -> m1_71  [key=0, style=solid];
m1_71 -> m1_72  [key=0, style=solid];
m1_71 -> m1_60  [key=2, style=dotted];
m1_71 -> m1_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_72 -> m1_70  [color=blue, key=0, style=bold];
m1_475 -> m1_476  [key=0, style=solid];
m1_476 -> m1_477  [key=0, style=solid];
m1_476 -> m1_19  [key=2, style=dotted];
m1_476 -> m1_478  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_479  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_480  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_481  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_482  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_483  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_484  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_485  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_487  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_488  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_489  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_490  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_491  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_492  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_493  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_494  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_495  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_496  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_497  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_498  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_499  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_500  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_501  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_502  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_503  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_504  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_505  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_506  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_507  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_508  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_509  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_510  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_511  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_512  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_513  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_514  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_515  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_516  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_517  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_518  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_519  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_520  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_521  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_522  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_524  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_525  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_526  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_527  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_529  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_530  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_531  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_532  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_533  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_476 -> m1_534  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_477 -> m1_478  [key=0, style=solid];
m1_477 -> m1_536  [key=2, style=dotted];
m1_477 -> m1_479  [color=darkseagreen4, key=1, label=customBinder, style=dashed];
m1_478 -> m1_479  [key=0, style=solid];
m1_479 -> m1_480  [key=0, style=solid];
m1_479 -> m1_24  [key=2, style=dotted];
m1_480 -> m1_481  [key=0, style=solid];
m1_481 -> m1_482  [key=0, style=solid];
m1_481 -> m1_24  [key=2, style=dotted];
m1_482 -> m1_483  [key=0, style=solid];
m1_483 -> m1_484  [key=0, style=solid];
m1_483 -> m1_24  [key=2, style=dotted];
m1_484 -> m1_485  [key=0, style=solid];
m1_484 -> m1_537  [key=2, style=dotted];
m1_485 -> m1_486  [key=0, style=solid];
m1_485 -> m1_537  [key=2, style=dotted];
m1_485 -> m1_24  [key=2, style=dotted];
m1_487 -> m1_488  [key=0, style=solid];
m1_488 -> m1_489  [key=0, style=solid];
m1_488 -> m1_24  [key=2, style=dotted];
m1_489 -> m1_490  [key=0, style=solid];
m1_489 -> m1_235  [key=2, style=dotted];
m1_489 -> m1_539  [key=2, style=dotted];
m1_490 -> m1_491  [key=0, style=solid];
m1_490 -> m1_24  [key=2, style=dotted];
m1_491 -> m1_492  [key=0, style=solid];
m1_491 -> m1_540  [key=2, style=dotted];
m1_492 -> m1_493  [key=0, style=solid];
m1_492 -> m1_541  [key=2, style=dotted];
m1_492 -> m1_24  [key=2, style=dotted];
m1_493 -> m1_494  [key=0, style=solid];
m1_494 -> m1_495  [key=0, style=solid];
m1_494 -> m1_24  [key=2, style=dotted];
m1_495 -> m1_496  [key=0, style=solid];
m1_496 -> m1_497  [key=0, style=solid];
m1_496 -> m1_24  [key=2, style=dotted];
m1_497 -> m1_498  [key=0, style=solid];
m1_498 -> m1_499  [key=0, style=solid];
m1_498 -> m1_24  [key=2, style=dotted];
m1_499 -> m1_500  [key=0, style=solid];
m1_500 -> m1_501  [key=0, style=solid];
m1_500 -> m1_24  [key=2, style=dotted];
m1_501 -> m1_502  [key=0, style=solid];
m1_502 -> m1_503  [key=0, style=solid];
m1_502 -> m1_24  [key=2, style=dotted];
m1_503 -> m1_504  [key=0, style=solid];
m1_504 -> m1_505  [key=0, style=solid];
m1_504 -> m1_24  [key=2, style=dotted];
m1_505 -> m1_506  [key=0, style=solid];
m1_506 -> m1_507  [key=0, style=solid];
m1_506 -> m1_24  [key=2, style=dotted];
m1_507 -> m1_508  [key=0, style=solid];
m1_508 -> m1_509  [key=0, style=solid];
m1_508 -> m1_24  [key=2, style=dotted];
m1_509 -> m1_510  [key=0, style=solid];
m1_510 -> m1_511  [key=0, style=solid];
m1_510 -> m1_24  [key=2, style=dotted];
m1_511 -> m1_512  [key=0, style=solid];
m1_512 -> m1_513  [key=0, style=solid];
m1_512 -> m1_24  [key=2, style=dotted];
m1_513 -> m1_514  [key=0, style=solid];
m1_514 -> m1_515  [key=0, style=solid];
m1_514 -> m1_24  [key=2, style=dotted];
m1_515 -> m1_516  [key=0, style=solid];
m1_516 -> m1_517  [key=0, style=solid];
m1_516 -> m1_24  [key=2, style=dotted];
m1_517 -> m1_518  [key=0, style=solid];
m1_518 -> m1_519  [key=0, style=solid];
m1_518 -> m1_24  [key=2, style=dotted];
m1_519 -> m1_520  [key=0, style=solid];
m1_520 -> m1_521  [key=0, style=solid];
m1_520 -> m1_24  [key=2, style=dotted];
m1_521 -> m1_522  [key=0, style=solid];
m1_522 -> m1_523  [key=0, style=solid];
m1_522 -> m1_24  [key=2, style=dotted];
m1_524 -> m1_525  [key=0, style=solid];
m1_525 -> m1_526  [key=0, style=solid];
m1_525 -> m1_24  [key=2, style=dotted];
m1_526 -> m1_527  [key=0, style=solid];
m1_527 -> m1_528  [key=0, style=solid];
m1_527 -> m1_24  [key=2, style=dotted];
m1_529 -> m1_530  [key=0, style=solid];
m1_530 -> m1_531  [key=0, style=solid];
m1_530 -> m1_24  [key=2, style=dotted];
m1_531 -> m1_532  [key=0, style=solid];
m1_532 -> m1_533  [key=0, style=solid];
m1_532 -> m1_24  [key=2, style=dotted];
m1_533 -> m1_534  [key=0, style=solid];
m1_534 -> m1_535  [key=0, style=solid];
m1_534 -> m1_24  [key=2, style=dotted];
m1_486 -> m1_487  [key=0, style=solid];
m1_486 -> m1_538  [key=2, style=dotted];
m1_486 -> m1_488  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m1_523 -> m1_524  [key=0, style=solid];
m1_523 -> m1_542  [key=2, style=dotted];
m1_523 -> m1_525  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m1_528 -> m1_529  [key=0, style=solid];
m1_528 -> m1_543  [key=2, style=dotted];
m1_528 -> m1_530  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m1_535 -> m1_475  [color=blue, key=0, style=bold];
m1_2697 -> m1_2698  [key=0, style=solid];
m1_2698 -> m1_2699  [key=0, style=solid];
m1_2698 -> m1_2704  [key=2, style=dotted];
m1_2698 -> m1_2705  [key=2, style=dotted];
m1_2698 -> m1_1715  [key=2, style=dotted];
m1_2698 -> m1_2702  [color=darkseagreen4, key=1, label=response, style=dashed];
m1_2699 -> m1_2700  [key=0, style=solid];
m1_2699 -> m1_41  [key=2, style=dotted];
m1_2702 -> m1_2703  [key=0, style=solid];
m1_2702 -> m1_2706  [key=2, style=dotted];
m1_2702 -> m1_22  [key=2, style=dotted];
m1_2700 -> m1_2701  [key=0, style=solid];
m1_2700 -> m1_49  [key=2, style=dotted];
m1_2700 -> m1_2702  [color=darkseagreen4, key=1, label=deserializedResponse, style=dashed];
m1_2701 -> m1_2702  [key=0, style=solid];
m1_2701 -> m1_24  [key=2, style=dotted];
m1_2703 -> m1_2697  [color=blue, key=0, style=bold];
m1_2670 -> m1_2671  [key=0, style=solid];
m1_2671 -> m1_2672  [key=0, style=solid];
m1_2671 -> m1_716  [key=2, style=dotted];
m1_2671 -> m1_4257  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", style=dashed];
m1_2672 -> m1_2670  [color=blue, key=0, style=bold];
m1_1942 -> m1_1943  [key=0, style=solid];
m1_1943 -> m1_1944  [key=0, style=solid];
m1_1943 -> m1_1940  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1944 -> m1_1945  [key=0, style=solid];
m1_1944 -> m1_49  [key=2, style=dotted];
m1_1945 -> m1_1946  [key=0, style=solid];
m1_1945 -> m1_1948  [key=0, style=solid];
m1_1945 -> m1_21  [key=2, style=dotted];
m1_1946 -> m1_1947  [key=0, style=solid];
m1_1947 -> m1_1948  [key=0, style=solid];
m1_1947 -> m1_1457  [key=2, style=dotted];
m1_1947 -> m1_22  [key=2, style=dotted];
m1_1948 -> m1_1942  [color=blue, key=0, style=bold];
m1_3668 -> m1_3669  [key=0, style=solid];
m1_3669 -> m1_3670  [key=0, style=solid];
m1_3669 -> m1_134  [key=2, style=dotted];
m1_3669 -> m1_1102  [key=2, style=dotted];
m1_3669 -> m1_376  [key=2, style=dotted];
m1_3669 -> m1_1110  [key=2, style=dotted];
m1_3670 -> m1_3671  [key=0, style=solid];
m1_3670 -> m1_175  [key=2, style=dotted];
m1_3670 -> m1_198  [key=2, style=dotted];
m1_3671 -> m1_3672  [key=0, style=solid];
m1_3671 -> m1_42  [key=2, style=dotted];
m1_3672 -> m1_3668  [color=blue, key=0, style=bold];
m1_2718 -> m1_2719  [key=0, style=solid];
m1_2719 -> m1_2720  [key=0, style=solid];
m1_2719 -> m1_49  [key=2, style=dotted];
m1_2719 -> m1_2721  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_2720 -> m1_2721  [key=0, style=solid];
m1_2720 -> m1_24  [key=2, style=dotted];
m1_2721 -> m1_2722  [key=0, style=solid];
m1_2721 -> m1_24  [key=2, style=dotted];
m1_2722 -> m1_2718  [color=blue, key=0, style=bold];
m1_3913 -> m1_3914  [key=0, style=solid];
m1_3914 -> m1_3915  [key=0, style=solid];
m1_3914 -> m1_3900  [key=2, style=dotted];
m1_3915 -> m1_3913  [color=blue, key=0, style=bold];
m1_4102 -> m1_4103  [key=0, style=solid];
m1_4103 -> m1_4104  [key=0, style=solid];
m1_4103 -> m1_60  [key=2, style=dotted];
m1_4103 -> m1_4105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_4104 -> m1_4102  [color=blue, key=0, style=bold];
m1_1067 -> m1_1068  [key=0, style=solid];
m1_1068 -> m1_1069  [key=0, style=solid];
m1_1068 -> m1_1070  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1068 -> m1_1071  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1068 -> m1_1068  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1069 -> m1_1070  [key=0, style=solid];
m1_1069 -> m1_914  [key=2, style=dotted];
m1_1070 -> m1_1071  [key=0, style=solid];
m1_1070 -> m1_1075  [key=2, style=dotted];
m1_1070 -> m1_1076  [key=2, style=dotted];
m1_1070 -> m1_1077  [key=2, style=dotted];
m1_1070 -> m1_1073  [color=darkseagreen4, key=1, label=dataContractResult, style=dashed];
m1_1071 -> m1_1072  [key=0, style=solid];
m1_1071 -> m1_49  [key=2, style=dotted];
m1_1071 -> m1_1073  [color=darkseagreen4, key=1, label=jsonNetResult, style=dashed];
m1_1073 -> m1_1074  [key=0, style=solid];
m1_1073 -> m1_24  [key=2, style=dotted];
m1_1072 -> m1_1073  [key=0, style=solid];
m1_1072 -> m1_24  [key=2, style=dotted];
m1_1074 -> m1_1067  [color=blue, key=0, style=bold];
m1_3886 -> m1_3887  [key=0, style=solid];
m1_3886 -> m1_36  [color=darkorchid, key=3, label="method methodReturn System.TypeCode System.IConvertible.GetTypeCode", style=bold];
m1_3887 -> m1_3888  [key=0, style=solid];
m1_3888 -> m1_3886  [color=blue, key=0, style=bold];
m1_2821 -> m1_2822  [key=0, style=solid];
m1_2822 -> m1_2823  [key=0, style=solid];
m1_2822 -> m1_2826  [key=2, style=dotted];
m1_2822 -> m1_1102  [key=2, style=dotted];
m1_2823 -> m1_2824  [key=0, style=solid];
m1_2823 -> m1_41  [key=2, style=dotted];
m1_2824 -> m1_2825  [key=0, style=solid];
m1_2824 -> m1_42  [key=2, style=dotted];
m1_2825 -> m1_2821  [color=blue, key=0, style=bold];
m1_3564 -> m1_3565  [key=0, style=solid];
m1_3565 -> m1_3566  [key=0, style=solid];
m1_3565 -> m1_3567  [key=2, style=dotted];
m1_3566 -> m1_3564  [color=blue, key=0, style=bold];
m1_3016 -> m1_3017  [key=0, style=solid];
m1_3017 -> m1_3018  [key=0, style=solid];
m1_3017 -> m1_1865  [key=2, style=dotted];
m1_3017 -> m1_3021  [color=darkseagreen4, key=1, label=contractResolver, style=dashed];
m1_3017 -> m1_3023  [color=darkseagreen4, key=1, label=contractResolver, style=dashed];
m1_3018 -> m1_3019  [key=0, style=solid];
m1_3018 -> m1_3028  [key=2, style=dotted];
m1_3018 -> m1_3021  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_3021 -> m1_3022  [key=0, style=solid];
m1_3021 -> m1_175  [key=2, style=dotted];
m1_3021 -> m1_198  [key=2, style=dotted];
m1_3023 -> m1_3024  [key=0, style=solid];
m1_3023 -> m1_175  [key=2, style=dotted];
m1_3023 -> m1_296  [key=2, style=dotted];
m1_3019 -> m1_3020  [key=0, style=solid];
m1_3020 -> m1_3021  [key=0, style=solid];
m1_3022 -> m1_3023  [key=0, style=solid];
m1_3022 -> m1_42  [key=2, style=dotted];
m1_3024 -> m1_3025  [key=0, style=solid];
m1_3024 -> m1_24  [key=2, style=dotted];
m1_3025 -> m1_3026  [key=0, style=solid];
m1_3025 -> m1_24  [key=2, style=dotted];
m1_3026 -> m1_3027  [key=0, style=solid];
m1_3026 -> m1_24  [key=2, style=dotted];
m1_3027 -> m1_3016  [color=blue, key=0, style=bold];
m1_128 -> m1_130  [key=0, style=solid];
m1_128 -> m1_131  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_128 -> m1_132  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_130 -> m1_131  [key=0, style=solid];
m1_130 -> m1_134  [key=2, style=dotted];
m1_131 -> m1_132  [key=0, style=solid];
m1_131 -> m1_133  [key=0, style=solid];
m1_132 -> m1_133  [key=0, style=solid];
m1_132 -> m1_135  [key=2, style=dotted];
m1_133 -> m1_128  [color=blue, key=0, style=bold];
m1_854 -> m1_855  [key=0, style=solid];
m1_855 -> m1_856  [key=0, style=solid];
m1_855 -> m1_859  [key=2, style=dotted];
m1_856 -> m1_857  [key=0, style=solid];
m1_856 -> m1_129  [key=2, style=dotted];
m1_857 -> m1_858  [key=0, style=solid];
m1_857 -> m1_24  [key=2, style=dotted];
m1_858 -> m1_854  [color=blue, key=0, style=bold];
m1_963 -> m1_964  [key=0, style=solid];
m1_964 -> m1_965  [key=0, style=solid];
m1_964 -> m1_954  [key=2, style=dotted];
m1_964 -> m1_966  [color=darkseagreen4, key=1, label=dateValue, style=dashed];
m1_964 -> m1_975  [color=darkseagreen4, key=1, label=dateValue, style=dashed];
m1_965 -> m1_966  [key=0, style=solid];
m1_965 -> m1_196  [key=2, style=dotted];
m1_965 -> m1_967  [color=darkseagreen4, key=1, label=testDictionary, style=dashed];
m1_965 -> m1_970  [color=darkseagreen4, key=1, label=testDictionary, style=dashed];
m1_966 -> m1_967  [key=0, style=solid];
m1_975 -> m1_976  [key=0, style=solid];
m1_975 -> m1_24  [key=2, style=dotted];
m1_967 -> m1_968  [key=0, style=solid];
m1_967 -> m1_129  [key=2, style=dotted];
m1_967 -> m1_973  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m1_970 -> m1_971  [key=0, style=solid];
m1_970 -> m1_915  [key=2, style=dotted];
m1_968 -> m1_969  [key=0, style=solid];
m1_968 -> m1_834  [key=2, style=dotted];
m1_968 -> m1_970  [color=darkseagreen4, key=1, label=ms, style=dashed];
m1_968 -> m1_971  [color=darkseagreen4, key=1, label=ms, style=dashed];
m1_973 -> m1_974  [key=0, style=solid];
m1_973 -> m1_936  [key=2, style=dotted];
m1_969 -> m1_970  [key=0, style=solid];
m1_969 -> m1_914  [key=2, style=dotted];
m1_971 -> m1_972  [key=0, style=solid];
m1_971 -> m1_916  [key=2, style=dotted];
m1_972 -> m1_973  [key=0, style=solid];
m1_972 -> m1_917  [key=2, style=dotted];
m1_974 -> m1_975  [key=0, style=solid];
m1_976 -> m1_963  [color=blue, key=0, style=bold];
m1_2869 -> m1_2870  [key=0, style=solid];
m1_2870 -> m1_2871  [key=0, style=solid];
m1_2870 -> m1_2395  [key=2, style=dotted];
m1_2871 -> m1_2869  [color=blue, key=0, style=bold];
m1_2141 -> m1_2142  [key=0, style=solid];
m1_2142 -> m1_2143  [key=0, style=solid];
m1_2142 -> m1_2144  [key=2, style=dotted];
m1_2143 -> m1_2141  [color=blue, key=0, style=bold];
m1_1667 -> m1_1668  [key=0, style=solid];
m1_1668 -> m1_1669  [key=0, style=solid];
m1_1668 -> m1_1668  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1669 -> m1_1670  [key=0, style=solid];
m1_1669 -> m1_175  [key=2, style=dotted];
m1_1669 -> m1_296  [key=2, style=dotted];
m1_1669 -> m1_1671  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_1669 -> m1_1672  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_1669 -> m1_1673  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_1669 -> m1_1674  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_1669 -> m1_1675  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_1669 -> m1_1676  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_1669 -> m1_1677  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_1669 -> m1_1678  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_1669 -> m1_1679  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_1670 -> m1_1671  [key=0, style=solid];
m1_1670 -> m1_24  [key=2, style=dotted];
m1_1671 -> m1_1672  [key=0, style=solid];
m1_1671 -> m1_24  [key=2, style=dotted];
m1_1672 -> m1_1673  [key=0, style=solid];
m1_1672 -> m1_24  [key=2, style=dotted];
m1_1673 -> m1_1674  [key=0, style=solid];
m1_1673 -> m1_24  [key=2, style=dotted];
m1_1674 -> m1_1675  [key=0, style=solid];
m1_1674 -> m1_24  [key=2, style=dotted];
m1_1675 -> m1_1676  [key=0, style=solid];
m1_1675 -> m1_1681  [key=2, style=dotted];
m1_1675 -> m1_24  [key=2, style=dotted];
m1_1676 -> m1_1677  [key=0, style=solid];
m1_1676 -> m1_1681  [key=2, style=dotted];
m1_1676 -> m1_24  [key=2, style=dotted];
m1_1677 -> m1_1678  [key=0, style=solid];
m1_1677 -> m1_24  [key=2, style=dotted];
m1_1678 -> m1_1679  [key=0, style=solid];
m1_1678 -> m1_24  [key=2, style=dotted];
m1_1679 -> m1_1680  [key=0, style=solid];
m1_1679 -> m1_797  [key=2, style=dotted];
m1_1680 -> m1_1667  [color=blue, key=0, style=bold];
m1_4070 -> m1_4071  [key=0, style=solid];
m1_4071 -> m1_4072  [key=0, style=solid];
m1_4071 -> m1_4078  [key=2, style=dotted];
m1_4071 -> m1_4073  [color=darkseagreen4, key=1, label=original, style=dashed];
m1_4072 -> m1_4073  [key=0, style=solid];
m1_4072 -> m1_175  [key=2, style=dotted];
m1_4072 -> m1_4074  [color=darkseagreen4, key=1, label=serializerSettings, style=dashed];
m1_4073 -> m1_4074  [key=0, style=solid];
m1_4073 -> m1_176  [key=2, style=dotted];
m1_4074 -> m1_4075  [key=0, style=solid];
m1_4074 -> m1_296  [key=2, style=dotted];
m1_4074 -> m1_4076  [color=darkseagreen4, key=1, label=clonedObject, style=dashed];
m1_4075 -> m1_4076  [key=0, style=solid];
m1_4075 -> m1_24  [key=2, style=dotted];
m1_4076 -> m1_4077  [key=0, style=solid];
m1_4076 -> m1_24  [key=2, style=dotted];
m1_4077 -> m1_4070  [color=blue, key=0, style=bold];
m1_1384 -> m1_1385  [key=0, style=solid];
m1_1385 -> m1_1386  [key=0, style=solid];
m1_1385 -> m1_1390  [key=2, style=dotted];
m1_1385 -> m1_1391  [key=2, style=dotted];
m1_1385 -> m1_1387  [color=darkseagreen4, key=1, label=personRaw, style=dashed];
m1_1386 -> m1_1387  [key=0, style=solid];
m1_1387 -> m1_1388  [key=0, style=solid];
m1_1387 -> m1_129  [key=2, style=dotted];
m1_1388 -> m1_1389  [key=0, style=solid];
m1_1388 -> m1_24  [key=2, style=dotted];
m1_1389 -> m1_1384  [color=blue, key=0, style=bold];
m1_3591 -> m1_3592  [key=0, style=solid];
m1_3592 -> m1_3593  [key=0, style=solid];
m1_3593 -> m1_3591  [color=blue, key=0, style=bold];
m1_891 -> m1_892  [key=0, style=solid];
m1_892 -> m1_893  [key=0, style=solid];
m1_892 -> m1_900  [key=2, style=dotted];
m1_892 -> m1_894  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m1_892 -> m1_895  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m1_892 -> m1_896  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m1_892 -> m1_897  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m1_893 -> m1_894  [key=0, style=solid];
m1_894 -> m1_895  [key=0, style=solid];
m1_895 -> m1_896  [key=0, style=solid];
m1_896 -> m1_897  [key=0, style=solid];
m1_897 -> m1_898  [key=0, style=solid];
m1_897 -> m1_870  [key=2, style=dotted];
m1_898 -> m1_899  [key=0, style=solid];
m1_898 -> m1_42  [key=2, style=dotted];
m1_899 -> m1_891  [color=blue, key=0, style=bold];
m1_2399 -> m1_2400  [key=0, style=solid];
m1_2399 -> m1_2402  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_2399 -> m1_2403  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_2400 -> m1_2401  [key=0, style=solid];
m1_2400 -> m1_2402  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_2402 -> m1_2404  [key=0, style=solid];
m1_2402 -> m1_2405  [key=2, style=dotted];
m1_2402 -> m1_2390  [key=2, style=dotted];
m1_2403 -> m1_2404  [key=0, style=solid];
m1_2403 -> m1_2391  [key=2, style=dotted];
m1_2401 -> m1_2402  [key=0, style=solid];
m1_2401 -> m1_2403  [key=0, style=solid];
m1_2404 -> m1_2399  [color=blue, key=0, style=bold];
m1_2115 -> m1_2116  [key=0, style=solid];
m1_2116 -> m1_2117  [key=0, style=solid];
m1_2116 -> m1_2118  [key=2, style=dotted];
m1_2117 -> m1_2115  [color=blue, key=0, style=bold];
m1_4084 -> m1_4085  [key=0, style=solid];
m1_4085 -> m1_4084  [color=blue, key=0, style=bold];
m1_3507 -> m1_3508  [key=0, style=solid];
m1_3508 -> m1_3509  [key=0, style=solid];
m1_3508 -> m1_3515  [key=2, style=dotted];
m1_3509 -> m1_3510  [key=0, style=solid];
m1_3509 -> m1_41  [key=2, style=dotted];
m1_3510 -> m1_3511  [key=0, style=solid];
m1_3510 -> m1_42  [key=2, style=dotted];
m1_3511 -> m1_3512  [key=0, style=solid];
m1_3511 -> m1_3516  [key=2, style=dotted];
m1_3512 -> m1_3513  [key=0, style=solid];
m1_3512 -> m1_41  [key=2, style=dotted];
m1_3513 -> m1_3514  [key=0, style=solid];
m1_3513 -> m1_42  [key=2, style=dotted];
m1_3514 -> m1_3507  [color=blue, key=0, style=bold];
m1_4170 -> m1_4171  [key=0, style=solid];
m1_4170 -> m1_3243  [color=darkorchid, key=3, label="method methodReturn object ReadJson", style=bold];
m1_4171 -> m1_4172  [key=0, style=solid];
m1_4171 -> m1_20  [key=2, style=dotted];
m1_4171 -> m1_4174  [color=darkseagreen4, key=1, label=encodingName, style=dashed];
m1_4172 -> m1_4173  [key=0, style=solid];
m1_4172 -> m1_4174  [key=0, style=solid];
m1_4174 -> m1_4175  [key=0, style=solid];
m1_4174 -> m1_4176  [key=2, style=dotted];
m1_4173 -> m1_4175  [key=0, style=solid];
m1_4175 -> m1_4170  [color=blue, key=0, style=bold];
m1_881 -> m1_882  [key=0, style=solid];
m1_882 -> m1_883  [key=0, style=solid];
m1_882 -> m1_890  [key=2, style=dotted];
m1_882 -> m1_884  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m1_882 -> m1_885  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m1_882 -> m1_886  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m1_882 -> m1_887  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m1_883 -> m1_884  [key=0, style=solid];
m1_884 -> m1_885  [key=0, style=solid];
m1_885 -> m1_886  [key=0, style=solid];
m1_886 -> m1_887  [key=0, style=solid];
m1_887 -> m1_888  [key=0, style=solid];
m1_887 -> m1_870  [key=2, style=dotted];
m1_888 -> m1_889  [key=0, style=solid];
m1_888 -> m1_42  [key=2, style=dotted];
m1_889 -> m1_881  [color=blue, key=0, style=bold];
m1_2473 -> m1_2474  [key=0, style=solid];
m1_2474 -> m1_2475  [key=0, style=solid];
m1_2475 -> m1_2473  [color=blue, key=0, style=bold];
m1_2562 -> m1_2563  [key=0, style=solid];
m1_2563 -> m1_2564  [key=0, style=solid];
m1_2563 -> m1_49  [key=2, style=dotted];
m1_2564 -> m1_2565  [key=0, style=solid];
m1_2564 -> m1_2561  [key=2, style=dotted];
m1_2564 -> m1_954  [key=2, style=dotted];
m1_2564 -> m1_1110  [key=2, style=dotted];
m1_2564 -> m1_24  [key=2, style=dotted];
m1_2565 -> m1_2562  [color=blue, key=0, style=bold];
m1_2768 -> m1_2769  [key=0, style=solid];
m1_2769 -> m1_2770  [key=0, style=solid];
m1_2769 -> m1_2769  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_2770 -> m1_2771  [key=0, style=solid];
m1_2770 -> m1_49  [key=2, style=dotted];
m1_2770 -> m1_2772  [color=darkseagreen4, key=1, label=commentTestClass, style=dashed];
m1_2770 -> m1_2773  [color=darkseagreen4, key=1, label=commentTestClass, style=dashed];
m1_2771 -> m1_2772  [key=0, style=solid];
m1_2771 -> m1_24  [key=2, style=dotted];
m1_2772 -> m1_2773  [key=0, style=solid];
m1_2772 -> m1_24  [key=2, style=dotted];
m1_2773 -> m1_2774  [key=0, style=solid];
m1_2773 -> m1_24  [key=2, style=dotted];
m1_2774 -> m1_2768  [color=blue, key=0, style=bold];
m1_2320 -> m1_2321  [key=0, style=solid];
m1_2321 -> m1_2320  [color=blue, key=0, style=bold];
m1_1744 -> m1_1745  [key=0, style=solid];
m1_1745 -> m1_1746  [key=0, style=solid];
m1_1745 -> m1_1745  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1746 -> m1_1747  [key=0, style=solid];
m1_1746 -> m1_49  [key=2, style=dotted];
m1_1747 -> m1_1748  [key=0, style=solid];
m1_1747 -> m1_24  [key=2, style=dotted];
m1_1748 -> m1_1744  [color=blue, key=0, style=bold];
m1_3706 -> m1_3707  [key=0, style=solid];
m1_3707 -> m1_3706  [color=blue, key=0, style=bold];
m1_1104 -> m1_1105  [key=0, style=solid];
m1_1105 -> m1_1106  [key=0, style=solid];
m1_1105 -> m1_134  [key=2, style=dotted];
m1_1105 -> m1_1109  [key=2, style=dotted];
m1_1105 -> m1_1102  [key=2, style=dotted];
m1_1105 -> m1_376  [key=2, style=dotted];
m1_1105 -> m1_1110  [key=2, style=dotted];
m1_1106 -> m1_1107  [key=0, style=solid];
m1_1106 -> m1_129  [key=2, style=dotted];
m1_1107 -> m1_1108  [key=0, style=solid];
m1_1107 -> m1_24  [key=2, style=dotted];
m1_1108 -> m1_1104  [color=blue, key=0, style=bold];
m1_2723 -> m1_2724  [key=0, style=solid];
m1_2724 -> m1_2725  [key=0, style=solid];
m1_2724 -> m1_49  [key=2, style=dotted];
m1_2724 -> m1_2726  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_2724 -> m1_2727  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_2725 -> m1_2726  [key=0, style=solid];
m1_2725 -> m1_24  [key=2, style=dotted];
m1_2726 -> m1_2727  [key=0, style=solid];
m1_2726 -> m1_24  [key=2, style=dotted];
m1_2727 -> m1_2728  [key=0, style=solid];
m1_2727 -> m1_24  [key=2, style=dotted];
m1_2728 -> m1_2723  [color=blue, key=0, style=bold];
m1_3226 -> m1_3227  [key=0, style=solid];
m1_3227 -> m1_3228  [key=0, style=solid];
m1_3227 -> m1_60  [key=2, style=dotted];
m1_3227 -> m1_3229  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_3228 -> m1_3226  [color=blue, key=0, style=bold];
m1_3483 -> m1_3490  [key=0, style=solid];
m1_3483 -> m1_3479  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m1_3490 -> m1_3491  [key=0, style=solid];
m1_3490 -> m1_16  [key=2, style=dotted];
m1_3490 -> m1_373  [key=2, style=dotted];
m1_3490 -> m1_3493  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_3491 -> m1_3492  [key=0, style=solid];
m1_3491 -> m1_19  [key=2, style=dotted];
m1_3491 -> m1_3493  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_3493 -> m1_3494  [key=0, style=solid];
m1_3493 -> m1_2524  [key=2, style=dotted];
m1_3492 -> m1_3493  [key=0, style=solid];
m1_3492 -> m1_1865  [key=2, style=dotted];
m1_3494 -> m1_3483  [color=blue, key=0, style=bold];
m1_3178 -> m1_3179  [key=0, style=solid];
m1_3179 -> m1_3180  [key=0, style=solid];
m1_3179 -> m1_3188  [key=2, style=dotted];
m1_3179 -> m1_129  [key=2, style=dotted];
m1_3179 -> m1_3181  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3180 -> m1_3181  [key=0, style=solid];
m1_3180 -> m1_24  [key=2, style=dotted];
m1_3181 -> m1_3182  [key=0, style=solid];
m1_3181 -> m1_49  [key=2, style=dotted];
m1_3182 -> m1_3183  [key=0, style=solid];
m1_3182 -> m1_24  [key=2, style=dotted];
m1_3183 -> m1_3184  [key=0, style=solid];
m1_3183 -> m1_3188  [key=2, style=dotted];
m1_3183 -> m1_129  [key=2, style=dotted];
m1_3183 -> m1_3185  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3184 -> m1_3185  [key=0, style=solid];
m1_3184 -> m1_24  [key=2, style=dotted];
m1_3185 -> m1_3186  [key=0, style=solid];
m1_3185 -> m1_49  [key=2, style=dotted];
m1_3186 -> m1_3187  [key=0, style=solid];
m1_3186 -> m1_24  [key=2, style=dotted];
m1_3187 -> m1_3178  [color=blue, key=0, style=bold];
m1_3012 -> m1_3013  [key=0, style=solid];
m1_3013 -> m1_3014  [key=0, style=solid];
m1_3013 -> m1_3015  [key=2, style=dotted];
m1_3014 -> m1_3012  [color=blue, key=0, style=bold];
m1_1111 -> m1_1112  [key=0, style=solid];
m1_1112 -> m1_1113  [key=0, style=solid];
m1_1112 -> m1_134  [key=2, style=dotted];
m1_1112 -> m1_1109  [key=2, style=dotted];
m1_1112 -> m1_1102  [key=2, style=dotted];
m1_1112 -> m1_376  [key=2, style=dotted];
m1_1112 -> m1_1110  [key=2, style=dotted];
m1_1113 -> m1_1114  [key=0, style=solid];
m1_1113 -> m1_175  [key=2, style=dotted];
m1_1113 -> m1_176  [key=2, style=dotted];
m1_1114 -> m1_1115  [key=0, style=solid];
m1_1114 -> m1_24  [key=2, style=dotted];
m1_1115 -> m1_1111  [color=blue, key=0, style=bold];
m1_3878 -> m1_3879  [key=0, style=solid];
m1_3879 -> m1_3880  [key=0, style=solid];
m1_3879 -> m1_3885  [key=2, style=dotted];
m1_3879 -> m1_3881  [color=darkseagreen4, key=1, label=product, style=dashed];
m1_3880 -> m1_3881  [key=0, style=solid];
m1_3880 -> m1_196  [key=2, style=dotted];
m1_3881 -> m1_3882  [key=0, style=solid];
m1_3881 -> m1_129  [key=2, style=dotted];
m1_3881 -> m1_3883  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3882 -> m1_3883  [key=0, style=solid];
m1_3882 -> m1_24  [key=2, style=dotted];
m1_3883 -> m1_3884  [key=0, style=solid];
m1_3883 -> m1_49  [key=2, style=dotted];
m1_3884 -> m1_3878  [color=blue, key=0, style=bold];
m1_1226 -> m1_1227  [key=0, style=solid];
m1_1227 -> m1_1228  [key=0, style=solid];
m1_1227 -> m1_1229  [color=darkseagreen4, key=1, label=obj, style=dashed];
m1_1227 -> m1_1230  [color=darkseagreen4, key=1, label=obj, style=dashed];
m1_1228 -> m1_1229  [key=0, style=solid];
m1_1228 -> m1_175  [key=2, style=dotted];
m1_1228 -> m1_1230  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_1229 -> m1_1230  [key=0, style=solid];
m1_1229 -> m1_176  [key=2, style=dotted];
m1_1229 -> m1_1231  [color=darkseagreen4, key=1, label=indented, style=dashed];
m1_1230 -> m1_1231  [key=0, style=solid];
m1_1230 -> m1_198  [key=2, style=dotted];
m1_1231 -> m1_1232  [key=0, style=solid];
m1_1231 -> m1_1233  [key=2, style=dotted];
m1_1232 -> m1_1226  [color=blue, key=0, style=bold];
m1_3786 -> m1_3787  [key=0, style=solid];
m1_3787 -> m1_3788  [key=0, style=solid];
m1_3787 -> m1_3790  [key=2, style=dotted];
m1_3787 -> m1_175  [key=2, style=dotted];
m1_3787 -> m1_1865  [key=2, style=dotted];
m1_3787 -> m1_198  [key=2, style=dotted];
m1_3788 -> m1_3789  [key=0, style=solid];
m1_3788 -> m1_42  [key=2, style=dotted];
m1_3789 -> m1_3786  [color=blue, key=0, style=bold];
m1_3146 -> m1_3147  [key=0, style=solid];
m1_3147 -> m1_3148  [key=0, style=solid];
m1_3147 -> m1_60  [key=2, style=dotted];
m1_3147 -> m1_3149  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_3147 -> m1_3147  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_3148 -> m1_3146  [color=blue, key=0, style=bold];
m1_2752 -> m1_2753  [key=0, style=solid];
m1_2753 -> m1_2754  [key=0, style=solid];
m1_2753 -> m1_60  [key=2, style=dotted];
m1_2753 -> m1_2755  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_2754 -> m1_2752  [color=blue, key=0, style=bold];
m1_2145 -> m1_2146  [key=0, style=solid];
m1_2146 -> m1_2147  [key=0, style=solid];
m1_2146 -> m1_2087  [key=2, style=dotted];
m1_2146 -> m1_2148  [color=darkseagreen4, key=1, label=modelStateDictionary, style=dashed];
m1_2147 -> m1_2148  [key=0, style=solid];
m1_2147 -> m1_2100  [key=2, style=dotted];
m1_2148 -> m1_2149  [key=0, style=solid];
m1_2148 -> m1_129  [key=2, style=dotted];
m1_2148 -> m1_2150  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_2149 -> m1_2150  [key=0, style=solid];
m1_2149 -> m1_24  [key=2, style=dotted];
m1_2150 -> m1_2151  [key=0, style=solid];
m1_2150 -> m1_49  [key=2, style=dotted];
m1_2150 -> m1_2152  [color=darkseagreen4, key=1, label=newModelStateDictionary, style=dashed];
m1_2151 -> m1_2152  [key=0, style=solid];
m1_2151 -> m1_24  [key=2, style=dotted];
m1_2152 -> m1_2153  [key=0, style=solid];
m1_2152 -> m1_24  [key=2, style=dotted];
m1_2153 -> m1_2145  [color=blue, key=0, style=bold];
m1_4078 -> m1_4079  [key=0, style=solid];
m1_4079 -> m1_4080  [key=0, style=solid];
m1_4080 -> m1_4078  [color=blue, key=0, style=bold];
m1_3568 -> m1_3569  [key=0, style=solid];
m1_3568 -> m1_3565  [color=darkorchid, key=3, label="method methodReturn object ReadJson", style=bold];
m1_3569 -> m1_3570  [key=0, style=solid];
m1_3570 -> m1_3568  [color=blue, key=0, style=bold];
m1_2799 -> m1_2800  [key=0, style=solid];
m1_2800 -> m1_2801  [key=0, style=solid];
m1_2800 -> m1_2798  [key=2, style=dotted];
m1_2800 -> m1_2803  [color=darkseagreen4, key=1, label=cc, style=dashed];
m1_2801 -> m1_2802  [key=0, style=solid];
m1_2801 -> m1_2807  [key=2, style=dotted];
m1_2801 -> m1_2803  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_2803 -> m1_2804  [key=0, style=solid];
m1_2803 -> m1_915  [key=2, style=dotted];
m1_2802 -> m1_2803  [key=0, style=solid];
m1_2802 -> m1_834  [key=2, style=dotted];
m1_2802 -> m1_2804  [color=darkseagreen4, key=1, label=ms, style=dashed];
m1_2804 -> m1_2805  [key=0, style=solid];
m1_2804 -> m1_916  [key=2, style=dotted];
m1_2804 -> m1_2808  [key=2, style=dotted];
m1_2804 -> m1_917  [key=2, style=dotted];
m1_2805 -> m1_2806  [key=0, style=solid];
m1_2805 -> m1_24  [key=2, style=dotted];
m1_2806 -> m1_2799  [color=blue, key=0, style=bold];
m1_2809 -> m1_2810  [key=0, style=solid];
m1_2810 -> m1_2811  [key=0, style=solid];
m1_2810 -> m1_2814  [key=2, style=dotted];
m1_2811 -> m1_2812  [key=0, style=solid];
m1_2811 -> m1_129  [key=2, style=dotted];
m1_2812 -> m1_2813  [key=0, style=solid];
m1_2812 -> m1_24  [key=2, style=dotted];
m1_2813 -> m1_2809  [color=blue, key=0, style=bold];
m1_3985 -> m1_3986  [key=0, style=solid];
m1_3986 -> m1_3987  [key=0, style=solid];
m1_3986 -> m1_540  [key=2, style=dotted];
m1_3986 -> m1_3989  [color=darkseagreen4, key=1, label=culture, style=dashed];
m1_3986 -> m1_3994  [color=darkseagreen4, key=1, label=culture, style=dashed];
m1_3986 -> m1_3999  [color=darkseagreen4, key=1, label=culture, style=dashed];
m1_3987 -> m1_3988  [key=0, style=solid];
m1_3987 -> m1_954  [key=2, style=dotted];
m1_3987 -> m1_3990  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_3987 -> m1_3993  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_3987 -> m1_3998  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_3989 -> m1_3990  [key=0, style=solid];
m1_3989 -> m1_175  [key=2, style=dotted];
m1_3989 -> m1_3992  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_3994 -> m1_3995  [key=0, style=solid];
m1_3994 -> m1_16  [key=2, style=dotted];
m1_3994 -> m1_373  [key=2, style=dotted];
m1_3999 -> m1_4000  [key=0, style=solid];
m1_3999 -> m1_16  [key=2, style=dotted];
m1_3999 -> m1_373  [key=2, style=dotted];
m1_3988 -> m1_3989  [key=0, style=solid];
m1_3988 -> m1_3994  [color=darkseagreen4, key=1, label=dateFormatString, style=dashed];
m1_3988 -> m1_3999  [color=darkseagreen4, key=1, label=dateFormatString, style=dashed];
m1_3988 -> m1_3968  [color=darkorchid, key=3, label="Local variable string dateFormatString", style=bold];
m1_3990 -> m1_3991  [key=0, style=solid];
m1_3990 -> m1_176  [key=2, style=dotted];
m1_3990 -> m1_3992  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3990 -> m1_3994  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3993 -> m1_3994  [key=0, style=solid];
m1_3993 -> m1_24  [key=2, style=dotted];
m1_3998 -> m1_3999  [key=0, style=solid];
m1_3998 -> m1_24  [key=2, style=dotted];
m1_3992 -> m1_3993  [key=0, style=solid];
m1_3992 -> m1_296  [key=2, style=dotted];
m1_3991 -> m1_3992  [key=0, style=solid];
m1_3991 -> m1_24  [key=2, style=dotted];
m1_3995 -> m1_3996  [key=0, style=solid];
m1_3995 -> m1_3357  [key=2, style=dotted];
m1_3995 -> m1_3997  [color=darkseagreen4, key=1, label=v, style=dashed];
m1_3995 -> m1_3998  [color=darkseagreen4, key=1, label=v, style=dashed];
m1_3996 -> m1_3997  [key=0, style=solid];
m1_3996 -> m1_24  [key=2, style=dotted];
m1_3997 -> m1_3998  [key=0, style=solid];
m1_3997 -> m1_375  [key=2, style=dotted];
m1_3997 -> m1_24  [key=2, style=dotted];
m1_4000 -> m1_4001  [key=0, style=solid];
m1_4000 -> m1_3357  [key=2, style=dotted];
m1_4000 -> m1_4002  [color=darkseagreen4, key=1, label=v, style=dashed];
m1_4000 -> m1_4003  [color=darkseagreen4, key=1, label=v, style=dashed];
m1_4001 -> m1_4002  [key=0, style=solid];
m1_4001 -> m1_24  [key=2, style=dotted];
m1_4002 -> m1_4003  [key=0, style=solid];
m1_4002 -> m1_375  [key=2, style=dotted];
m1_4002 -> m1_24  [key=2, style=dotted];
m1_4003 -> m1_4004  [key=0, style=solid];
m1_4003 -> m1_24  [key=2, style=dotted];
m1_4004 -> m1_3985  [color=blue, key=0, style=bold];
m1_4121 -> m1_4122  [key=0, style=solid];
m1_4122 -> m1_4123  [key=0, style=solid];
m1_4122 -> m1_4126  [color=darkseagreen4, key=1, label=JsonMessage, style=dashed];
m1_4122 -> m1_4122  [color=darkorchid, key=3, label="Local variable string JsonMessage", style=bold];
m1_4123 -> m1_4124  [key=0, style=solid];
m1_4123 -> m1_60  [key=2, style=dotted];
m1_4123 -> m1_4125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_4124 -> m1_4121  [color=blue, key=0, style=bold];
m1_1884 -> m1_1885  [key=0, style=solid];
m1_1885 -> m1_1886  [key=0, style=solid];
m1_1885 -> m1_134  [key=2, style=dotted];
m1_1885 -> m1_1887  [color=darkseagreen4, key=1, label=strings, style=dashed];
m1_1885 -> m1_1888  [color=darkseagreen4, key=1, label=strings, style=dashed];
m1_1885 -> m1_1889  [color=darkseagreen4, key=1, label=strings, style=dashed];
m1_1886 -> m1_1887  [key=0, style=solid];
m1_1886 -> m1_1892  [key=2, style=dotted];
m1_1887 -> m1_1888  [key=0, style=solid];
m1_1887 -> m1_1892  [key=2, style=dotted];
m1_1888 -> m1_1889  [key=0, style=solid];
m1_1888 -> m1_1892  [key=2, style=dotted];
m1_1889 -> m1_1890  [key=0, style=solid];
m1_1889 -> m1_129  [key=2, style=dotted];
m1_1890 -> m1_1891  [key=0, style=solid];
m1_1890 -> m1_24  [key=2, style=dotted];
m1_1891 -> m1_1884  [color=blue, key=0, style=bold];
m1_1893 -> m1_1894  [key=0, style=solid];
m1_1894 -> m1_1895  [key=0, style=solid];
m1_1894 -> m1_1901  [key=2, style=dotted];
m1_1895 -> m1_1896  [key=0, style=solid];
m1_1895 -> m1_41  [key=2, style=dotted];
m1_1895 -> m1_1897  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1896 -> m1_1897  [key=0, style=solid];
m1_1896 -> m1_42  [key=2, style=dotted];
m1_1897 -> m1_1898  [key=0, style=solid];
m1_1897 -> m1_49  [key=2, style=dotted];
m1_1897 -> m1_1899  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_1898 -> m1_1899  [key=0, style=solid];
m1_1898 -> m1_24  [key=2, style=dotted];
m1_1899 -> m1_1900  [key=0, style=solid];
m1_1899 -> m1_24  [key=2, style=dotted];
m1_1900 -> m1_1893  [color=blue, key=0, style=bold];
m1_33 -> m1_34  [key=0, style=solid];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_25  [key=2, style=dotted];
m1_34 -> m1_36  [color=darkseagreen4, key=1, label=mySubclass, style=dashed];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_29  [key=2, style=dotted];
m1_35 -> m1_38  [color=darkseagreen4, key=1, label=myMainClass, style=dashed];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_41  [key=2, style=dotted];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_41  [key=2, style=dotted];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_42  [key=2, style=dotted];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_42  [key=2, style=dotted];
m1_40 -> m1_33  [color=blue, key=0, style=bold];
m1_3189 -> m1_3190  [key=0, style=solid];
m1_3190 -> m1_3191  [key=0, style=solid];
m1_3190 -> m1_3195  [key=2, style=dotted];
m1_3190 -> m1_3196  [key=2, style=dotted];
m1_3190 -> m1_129  [key=2, style=dotted];
m1_3191 -> m1_3192  [key=0, style=solid];
m1_3191 -> m1_24  [key=2, style=dotted];
m1_3192 -> m1_3193  [key=0, style=solid];
m1_3192 -> m1_49  [key=2, style=dotted];
m1_3193 -> m1_3194  [key=0, style=solid];
m1_3193 -> m1_3196  [key=2, style=dotted];
m1_3193 -> m1_24  [key=2, style=dotted];
m1_3194 -> m1_3189  [color=blue, key=0, style=bold];
m1_3404 -> m1_3405  [key=0, style=solid];
m1_3405 -> m1_3406  [key=0, style=solid];
m1_3405 -> m1_3412  [key=2, style=dotted];
m1_3406 -> m1_3407  [key=0, style=solid];
m1_3406 -> m1_49  [key=2, style=dotted];
m1_3406 -> m1_3408  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_3406 -> m1_3409  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_3406 -> m1_3410  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_3407 -> m1_3408  [key=0, style=solid];
m1_3407 -> m1_797  [key=2, style=dotted];
m1_3408 -> m1_3409  [key=0, style=solid];
m1_3408 -> m1_24  [key=2, style=dotted];
m1_3409 -> m1_3410  [key=0, style=solid];
m1_3409 -> m1_24  [key=2, style=dotted];
m1_3410 -> m1_3411  [key=0, style=solid];
m1_3410 -> m1_24  [key=2, style=dotted];
m1_3411 -> m1_3404  [color=blue, key=0, style=bold];
m1_3259 -> m1_3260  [key=0, style=solid];
m1_3260 -> m1_3261  [key=0, style=solid];
m1_3260 -> m1_175  [key=2, style=dotted];
m1_3260 -> m1_296  [key=2, style=dotted];
m1_3260 -> m1_3262  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_3260 -> m1_3263  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_3260 -> m1_3264  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_3261 -> m1_3262  [key=0, style=solid];
m1_3261 -> m1_3271  [key=2, style=dotted];
m1_3261 -> m1_3272  [key=2, style=dotted];
m1_3261 -> m1_24  [key=2, style=dotted];
m1_3262 -> m1_3263  [key=0, style=solid];
m1_3262 -> m1_3273  [key=2, style=dotted];
m1_3262 -> m1_24  [key=2, style=dotted];
m1_3263 -> m1_3264  [key=0, style=solid];
m1_3263 -> m1_24  [key=2, style=dotted];
m1_3264 -> m1_3265  [key=0, style=solid];
m1_3264 -> m1_24  [key=2, style=dotted];
m1_3265 -> m1_3266  [key=0, style=solid];
m1_3265 -> m1_175  [key=2, style=dotted];
m1_3265 -> m1_296  [key=2, style=dotted];
m1_3265 -> m1_3267  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_3265 -> m1_3268  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_3265 -> m1_3269  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_3266 -> m1_3267  [key=0, style=solid];
m1_3266 -> m1_3271  [key=2, style=dotted];
m1_3266 -> m1_3272  [key=2, style=dotted];
m1_3266 -> m1_24  [key=2, style=dotted];
m1_3267 -> m1_3268  [key=0, style=solid];
m1_3267 -> m1_3273  [key=2, style=dotted];
m1_3267 -> m1_24  [key=2, style=dotted];
m1_3268 -> m1_3269  [key=0, style=solid];
m1_3268 -> m1_24  [key=2, style=dotted];
m1_3269 -> m1_3270  [key=0, style=solid];
m1_3269 -> m1_24  [key=2, style=dotted];
m1_3270 -> m1_3259  [color=blue, key=0, style=bold];
m1_1263 -> m1_1264  [key=0, style=solid];
m1_1264 -> m1_1265  [key=0, style=solid];
m1_1264 -> m1_1270  [key=2, style=dotted];
m1_1264 -> m1_129  [key=2, style=dotted];
m1_1265 -> m1_1266  [key=0, style=solid];
m1_1265 -> m1_24  [key=2, style=dotted];
m1_1266 -> m1_1267  [key=0, style=solid];
m1_1266 -> m1_49  [key=2, style=dotted];
m1_1266 -> m1_1268  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_1267 -> m1_1268  [key=0, style=solid];
m1_1267 -> m1_24  [key=2, style=dotted];
m1_1268 -> m1_1269  [key=0, style=solid];
m1_1268 -> m1_24  [key=2, style=dotted];
m1_1269 -> m1_1263  [color=blue, key=0, style=bold];
m1_2881 -> m1_2882  [key=0, style=solid];
m1_2882 -> m1_2883  [key=0, style=solid];
m1_2882 -> m1_2887  [key=2, style=dotted];
m1_2882 -> m1_41  [key=2, style=dotted];
m1_2883 -> m1_2884  [key=0, style=solid];
m1_2883 -> m1_42  [key=2, style=dotted];
m1_2884 -> m1_2885  [key=0, style=solid];
m1_2884 -> m1_2888  [key=2, style=dotted];
m1_2884 -> m1_41  [key=2, style=dotted];
m1_2885 -> m1_2886  [key=0, style=solid];
m1_2885 -> m1_42  [key=2, style=dotted];
m1_2886 -> m1_2881  [color=blue, key=0, style=bold];
m1_4202 -> m1_4203  [key=0, style=solid];
m1_4202 -> m1_4204  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_4203 -> m1_4204  [key=0, style=solid];
m1_4204 -> m1_4205  [key=0, style=solid];
m1_4205 -> m1_4206  [key=0, style=solid];
m1_4206 -> m1_4202  [color=blue, key=0, style=bold];
m1_2775 -> m1_2776  [key=0, style=solid];
m1_2776 -> m1_2777  [key=0, style=solid];
m1_2777 -> m1_2778  [key=0, style=solid];
m1_2778 -> m1_2775  [color=blue, key=0, style=bold];
m1_118 -> m1_119  [key=0, style=solid];
m1_119 -> m1_120  [key=0, style=solid];
m1_119 -> m1_128  [key=2, style=dotted];
m1_119 -> m1_123  [color=darkseagreen4, key=1, label=foo1, style=dashed];
m1_119 -> m1_124  [color=darkseagreen4, key=1, label=foo1, style=dashed];
m1_119 -> m1_125  [color=darkseagreen4, key=1, label=foo1, style=dashed];
m1_119 -> m1_126  [color=darkseagreen4, key=1, label=foo1, style=dashed];
m1_120 -> m1_121  [key=0, style=solid];
m1_120 -> m1_129  [key=2, style=dotted];
m1_120 -> m1_122  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_123 -> m1_124  [key=0, style=solid];
m1_123 -> m1_24  [key=2, style=dotted];
m1_124 -> m1_125  [key=0, style=solid];
m1_124 -> m1_24  [key=2, style=dotted];
m1_125 -> m1_126  [key=0, style=solid];
m1_125 -> m1_24  [key=2, style=dotted];
m1_126 -> m1_127  [key=0, style=solid];
m1_126 -> m1_24  [key=2, style=dotted];
m1_121 -> m1_122  [key=0, style=solid];
m1_121 -> m1_42  [key=2, style=dotted];
m1_122 -> m1_123  [key=0, style=solid];
m1_122 -> m1_49  [key=2, style=dotted];
m1_122 -> m1_124  [color=darkseagreen4, key=1, label=foo2, style=dashed];
m1_122 -> m1_125  [color=darkseagreen4, key=1, label=foo2, style=dashed];
m1_122 -> m1_126  [color=darkseagreen4, key=1, label=foo2, style=dashed];
m1_127 -> m1_118  [color=blue, key=0, style=bold];
m1_1839 -> m1_1840  [key=0, style=solid];
m1_1840 -> m1_1841  [key=0, style=solid];
m1_1840 -> m1_1844  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1840 -> m1_1777  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1841 -> m1_1842  [key=0, style=solid];
m1_1841 -> m1_60  [key=2, style=dotted];
m1_1841 -> m1_1843  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1842 -> m1_1839  [color=blue, key=0, style=bold];
m1_297 -> m1_298  [key=0, style=solid];
m1_298 -> m1_299  [key=0, style=solid];
m1_298 -> m1_305  [key=2, style=dotted];
m1_298 -> m1_300  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_299 -> m1_300  [key=0, style=solid];
m1_299 -> m1_306  [key=2, style=dotted];
m1_300 -> m1_301  [key=0, style=solid];
m1_300 -> m1_129  [key=2, style=dotted];
m1_301 -> m1_302  [key=0, style=solid];
m1_301 -> m1_24  [key=2, style=dotted];
m1_302 -> m1_303  [key=0, style=solid];
m1_302 -> m1_49  [key=2, style=dotted];
m1_303 -> m1_304  [key=0, style=solid];
m1_303 -> m1_24  [key=2, style=dotted];
m1_304 -> m1_297  [color=blue, key=0, style=bold];
m1_3436 -> m1_3437  [key=0, style=solid];
m1_3437 -> m1_3438  [key=0, style=solid];
m1_3437 -> m1_196  [key=2, style=dotted];
m1_3437 -> m1_1102  [key=2, style=dotted];
m1_3438 -> m1_3439  [key=0, style=solid];
m1_3438 -> m1_41  [key=2, style=dotted];
m1_3438 -> m1_3440  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3439 -> m1_3440  [key=0, style=solid];
m1_3439 -> m1_42  [key=2, style=dotted];
m1_3440 -> m1_3441  [key=0, style=solid];
m1_3440 -> m1_49  [key=2, style=dotted];
m1_3440 -> m1_3442  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m1_3440 -> m1_3443  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m1_3441 -> m1_3442  [key=0, style=solid];
m1_3441 -> m1_24  [key=2, style=dotted];
m1_3442 -> m1_3443  [key=0, style=solid];
m1_3442 -> m1_1102  [key=2, style=dotted];
m1_3442 -> m1_24  [key=2, style=dotted];
m1_3443 -> m1_3444  [key=0, style=solid];
m1_3443 -> m1_1102  [key=2, style=dotted];
m1_3443 -> m1_24  [key=2, style=dotted];
m1_3444 -> m1_3436  [color=blue, key=0, style=bold];
m1_1737 -> m1_1738  [key=0, style=solid];
m1_1738 -> m1_1739  [key=0, style=solid];
m1_1738 -> m1_1738  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1739 -> m1_1740  [key=0, style=solid];
m1_1739 -> m1_49  [key=2, style=dotted];
m1_1739 -> m1_1741  [color=darkseagreen4, key=1, label=values, style=dashed];
m1_1739 -> m1_1742  [color=darkseagreen4, key=1, label=values, style=dashed];
m1_1740 -> m1_1741  [key=0, style=solid];
m1_1740 -> m1_24  [key=2, style=dotted];
m1_1741 -> m1_1742  [key=0, style=solid];
m1_1741 -> m1_24  [key=2, style=dotted];
m1_1742 -> m1_1743  [key=0, style=solid];
m1_1742 -> m1_24  [key=2, style=dotted];
m1_1743 -> m1_1737  [color=blue, key=0, style=bold];
m1_1997 -> m1_1998  [key=0, style=solid];
m1_1998 -> m1_1999  [key=0, style=solid];
m1_1998 -> m1_41  [key=2, style=dotted];
m1_1999 -> m1_1997  [color=blue, key=0, style=bold];
m1_3966 -> m1_3967  [key=0, style=solid];
m1_3967 -> m1_3968  [key=0, style=solid];
m1_3967 -> m1_954  [key=2, style=dotted];
m1_3967 -> m1_3970  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_3967 -> m1_3973  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_3967 -> m1_3978  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_3968 -> m1_3969  [key=0, style=solid];
m1_3968 -> m1_3974  [color=darkseagreen4, key=1, label=dateFormatString, style=dashed];
m1_3968 -> m1_3979  [color=darkseagreen4, key=1, label=dateFormatString, style=dashed];
m1_3968 -> m1_3968  [color=darkorchid, key=3, label="Local variable string dateFormatString", style=bold];
m1_3970 -> m1_3971  [key=0, style=solid];
m1_3970 -> m1_176  [key=2, style=dotted];
m1_3970 -> m1_3972  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3970 -> m1_3974  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3973 -> m1_3974  [key=0, style=solid];
m1_3973 -> m1_24  [key=2, style=dotted];
m1_3978 -> m1_3979  [key=0, style=solid];
m1_3978 -> m1_24  [key=2, style=dotted];
m1_3969 -> m1_3970  [key=0, style=solid];
m1_3969 -> m1_175  [key=2, style=dotted];
m1_3969 -> m1_3972  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_3974 -> m1_3975  [key=0, style=solid];
m1_3974 -> m1_16  [key=2, style=dotted];
m1_3974 -> m1_373  [key=2, style=dotted];
m1_3979 -> m1_3980  [key=0, style=solid];
m1_3979 -> m1_16  [key=2, style=dotted];
m1_3979 -> m1_373  [key=2, style=dotted];
m1_3972 -> m1_3973  [key=0, style=solid];
m1_3972 -> m1_296  [key=2, style=dotted];
m1_3971 -> m1_3972  [key=0, style=solid];
m1_3971 -> m1_24  [key=2, style=dotted];
m1_3975 -> m1_3976  [key=0, style=solid];
m1_3975 -> m1_3357  [key=2, style=dotted];
m1_3975 -> m1_3977  [color=darkseagreen4, key=1, label=v, style=dashed];
m1_3975 -> m1_3978  [color=darkseagreen4, key=1, label=v, style=dashed];
m1_3976 -> m1_3977  [key=0, style=solid];
m1_3976 -> m1_24  [key=2, style=dotted];
m1_3977 -> m1_3978  [key=0, style=solid];
m1_3977 -> m1_375  [key=2, style=dotted];
m1_3977 -> m1_24  [key=2, style=dotted];
m1_3980 -> m1_3981  [key=0, style=solid];
m1_3980 -> m1_3357  [key=2, style=dotted];
m1_3980 -> m1_3982  [color=darkseagreen4, key=1, label=v, style=dashed];
m1_3980 -> m1_3983  [color=darkseagreen4, key=1, label=v, style=dashed];
m1_3981 -> m1_3982  [key=0, style=solid];
m1_3981 -> m1_24  [key=2, style=dotted];
m1_3982 -> m1_3983  [key=0, style=solid];
m1_3982 -> m1_375  [key=2, style=dotted];
m1_3982 -> m1_24  [key=2, style=dotted];
m1_3983 -> m1_3984  [key=0, style=solid];
m1_3983 -> m1_24  [key=2, style=dotted];
m1_3984 -> m1_3966  [color=blue, key=0, style=bold];
m1_2624 -> m1_2625  [key=0, style=solid];
m1_2625 -> m1_2626  [key=0, style=solid];
m1_2625 -> m1_2625  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_2626 -> m1_2627  [key=0, style=solid];
m1_2626 -> m1_49  [key=2, style=dotted];
m1_2627 -> m1_2628  [key=0, style=solid];
m1_2627 -> m1_24  [key=2, style=dotted];
m1_2628 -> m1_2624  [color=blue, key=0, style=bold];
m1_4086 -> m1_4087  [key=0, style=solid];
m1_4087 -> m1_4088  [key=0, style=solid];
m1_4087 -> m1_2395  [key=2, style=dotted];
m1_4088 -> m1_4086  [color=blue, key=0, style=bold];
m1_1765 -> m1_1766  [key=0, style=solid];
m1_1766 -> m1_1767  [key=0, style=solid];
m1_1766 -> m1_1766  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1767 -> m1_1768  [key=0, style=solid];
m1_1767 -> m1_49  [key=2, style=dotted];
m1_1768 -> m1_1765  [color=blue, key=0, style=bold];
m1_1288 -> m1_1289  [key=0, style=solid];
m1_1289 -> m1_1290  [key=0, style=solid];
m1_1289 -> m1_1287  [key=2, style=dotted];
m1_1290 -> m1_1291  [key=0, style=solid];
m1_1290 -> m1_1295  [key=2, style=dotted];
m1_1290 -> m1_1296  [key=2, style=dotted];
m1_1290 -> m1_1292  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1291 -> m1_1292  [key=0, style=solid];
m1_1291 -> m1_24  [key=2, style=dotted];
m1_1292 -> m1_1293  [key=0, style=solid];
m1_1292 -> m1_1295  [key=2, style=dotted];
m1_1292 -> m1_236  [key=2, style=dotted];
m1_1293 -> m1_1294  [key=0, style=solid];
m1_1293 -> m1_24  [key=2, style=dotted];
m1_1294 -> m1_1288  [color=blue, key=0, style=bold];
m1_3633 -> m1_3634  [key=0, style=solid];
m1_3634 -> m1_3635  [key=0, style=solid];
m1_3634 -> m1_3640  [key=2, style=dotted];
m1_3635 -> m1_3636  [key=0, style=solid];
m1_3635 -> m1_175  [key=2, style=dotted];
m1_3635 -> m1_3641  [key=2, style=dotted];
m1_3635 -> m1_176  [key=2, style=dotted];
m1_3635 -> m1_3637  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3636 -> m1_3637  [key=0, style=solid];
m1_3636 -> m1_24  [key=2, style=dotted];
m1_3637 -> m1_3638  [key=0, style=solid];
m1_3637 -> m1_175  [key=2, style=dotted];
m1_3637 -> m1_3641  [key=2, style=dotted];
m1_3637 -> m1_296  [key=2, style=dotted];
m1_3638 -> m1_3639  [key=0, style=solid];
m1_3638 -> m1_24  [key=2, style=dotted];
m1_3639 -> m1_3633  [color=blue, key=0, style=bold];
m1_1400 -> m1_1401  [key=0, style=solid];
m1_1401 -> m1_1402  [key=0, style=solid];
m1_1401 -> m1_1413  [key=2, style=dotted];
m1_1401 -> m1_1246  [key=2, style=dotted];
m1_1402 -> m1_1403  [key=0, style=solid];
m1_1402 -> m1_129  [key=2, style=dotted];
m1_1402 -> m1_1404  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1403 -> m1_1404  [key=0, style=solid];
m1_1403 -> m1_24  [key=2, style=dotted];
m1_1404 -> m1_1405  [key=0, style=solid];
m1_1404 -> m1_49  [key=2, style=dotted];
m1_1404 -> m1_1406  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m1_1404 -> m1_1407  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m1_1404 -> m1_1408  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m1_1404 -> m1_1409  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m1_1404 -> m1_1410  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m1_1404 -> m1_1411  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m1_1405 -> m1_1406  [key=0, style=solid];
m1_1405 -> m1_1246  [key=2, style=dotted];
m1_1405 -> m1_24  [key=2, style=dotted];
m1_1406 -> m1_1407  [key=0, style=solid];
m1_1406 -> m1_24  [key=2, style=dotted];
m1_1407 -> m1_1408  [key=0, style=solid];
m1_1407 -> m1_24  [key=2, style=dotted];
m1_1408 -> m1_1409  [key=0, style=solid];
m1_1408 -> m1_24  [key=2, style=dotted];
m1_1409 -> m1_1410  [key=0, style=solid];
m1_1409 -> m1_24  [key=2, style=dotted];
m1_1410 -> m1_1411  [key=0, style=solid];
m1_1410 -> m1_24  [key=2, style=dotted];
m1_1411 -> m1_1412  [key=0, style=solid];
m1_1411 -> m1_24  [key=2, style=dotted];
m1_1412 -> m1_1400  [color=blue, key=0, style=bold];
m1_1878 -> m1_1879  [key=0, style=solid];
m1_1879 -> m1_1880  [key=0, style=solid];
m1_1879 -> m1_60  [key=2, style=dotted];
m1_1879 -> m1_1881  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1880 -> m1_1878  [color=blue, key=0, style=bold];
m1_2900 -> m1_2901  [key=0, style=solid];
m1_2901 -> m1_2902  [key=0, style=solid];
m1_2901 -> m1_2889  [key=2, style=dotted];
m1_2902 -> m1_2903  [key=0, style=solid];
m1_2902 -> m1_41  [key=2, style=dotted];
m1_2902 -> m1_2904  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_2903 -> m1_2904  [key=0, style=solid];
m1_2903 -> m1_42  [key=2, style=dotted];
m1_2904 -> m1_2905  [key=0, style=solid];
m1_2904 -> m1_49  [key=2, style=dotted];
m1_2905 -> m1_2906  [key=0, style=solid];
m1_2905 -> m1_2897  [key=2, style=dotted];
m1_2905 -> m1_24  [key=2, style=dotted];
m1_2906 -> m1_2900  [color=blue, key=0, style=bold];
m1_3697 -> m1_3698  [key=0, style=solid];
m1_3698 -> m1_3699  [key=0, style=solid];
m1_3698 -> m1_2971  [key=2, style=dotted];
m1_3698 -> m1_3703  [color=darkseagreen4, key=1, label=sw, style=dashed];
m1_3699 -> m1_3700  [key=0, style=solid];
m1_3699 -> m1_2972  [key=2, style=dotted];
m1_3699 -> m1_3701  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_3699 -> m1_3702  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_3703 -> m1_3704  [key=0, style=solid];
m1_3703 -> m1_2976  [key=2, style=dotted];
m1_3700 -> m1_3701  [key=0, style=solid];
m1_3700 -> m1_175  [key=2, style=dotted];
m1_3700 -> m1_833  [key=2, style=dotted];
m1_3701 -> m1_3702  [key=0, style=solid];
m1_3701 -> m1_3008  [key=2, style=dotted];
m1_3702 -> m1_3703  [key=0, style=solid];
m1_3702 -> m1_24  [key=2, style=dotted];
m1_3704 -> m1_3705  [key=0, style=solid];
m1_3704 -> m1_42  [key=2, style=dotted];
m1_3705 -> m1_3697  [color=blue, key=0, style=bold];
m1_177 -> m1_178  [key=0, style=solid];
m1_178 -> m1_179  [key=0, style=solid];
m1_178 -> m1_60  [key=2, style=dotted];
m1_178 -> m1_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_179 -> m1_177  [color=blue, key=0, style=bold];
m1_1825 -> m1_1826  [key=0, style=solid];
m1_1826 -> m1_1827  [key=0, style=solid];
m1_1826 -> m1_1830  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1826 -> m1_1826  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1827 -> m1_1828  [key=0, style=solid];
m1_1827 -> m1_60  [key=2, style=dotted];
m1_1827 -> m1_1829  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1828 -> m1_1825  [color=blue, key=0, style=bold];
m1_748 -> m1_749  [key=0, style=solid];
m1_749 -> m1_750  [key=0, style=solid];
m1_749 -> m1_755  [key=2, style=dotted];
m1_750 -> m1_751  [key=0, style=solid];
m1_750 -> m1_41  [key=2, style=dotted];
m1_751 -> m1_752  [key=0, style=solid];
m1_751 -> m1_49  [key=2, style=dotted];
m1_751 -> m1_753  [color=darkseagreen4, key=1, label=r2, style=dashed];
m1_752 -> m1_753  [key=0, style=solid];
m1_752 -> m1_756  [key=2, style=dotted];
m1_752 -> m1_24  [key=2, style=dotted];
m1_753 -> m1_754  [key=0, style=solid];
m1_753 -> m1_24  [key=2, style=dotted];
m1_754 -> m1_748  [color=blue, key=0, style=bold];
m1_1628 -> m1_1629  [key=0, style=solid];
m1_1629 -> m1_1630  [key=0, style=solid];
m1_1629 -> m1_1640  [key=2, style=dotted];
m1_1629 -> m1_1631  [color=darkseagreen4, key=1, label=optInClass, style=dashed];
m1_1629 -> m1_1632  [color=darkseagreen4, key=1, label=optInClass, style=dashed];
m1_1629 -> m1_1633  [color=darkseagreen4, key=1, label=optInClass, style=dashed];
m1_1630 -> m1_1631  [key=0, style=solid];
m1_1631 -> m1_1632  [key=0, style=solid];
m1_1632 -> m1_1633  [key=0, style=solid];
m1_1633 -> m1_1634  [key=0, style=solid];
m1_1633 -> m1_41  [key=2, style=dotted];
m1_1634 -> m1_1635  [key=0, style=solid];
m1_1634 -> m1_42  [key=2, style=dotted];
m1_1635 -> m1_1636  [key=0, style=solid];
m1_1635 -> m1_49  [key=2, style=dotted];
m1_1635 -> m1_1637  [color=darkseagreen4, key=1, label=newOptInClass, style=dashed];
m1_1635 -> m1_1638  [color=darkseagreen4, key=1, label=newOptInClass, style=dashed];
m1_1636 -> m1_1637  [key=0, style=solid];
m1_1636 -> m1_24  [key=2, style=dotted];
m1_1637 -> m1_1638  [key=0, style=solid];
m1_1637 -> m1_24  [key=2, style=dotted];
m1_1638 -> m1_1639  [key=0, style=solid];
m1_1638 -> m1_24  [key=2, style=dotted];
m1_1639 -> m1_1628  [color=blue, key=0, style=bold];
m1_187 -> m1_188  [key=0, style=solid];
m1_188 -> m1_189  [key=0, style=solid];
m1_188 -> m1_190  [key=2, style=dotted];
m1_189 -> m1_187  [color=blue, key=0, style=bold];
m1_1514 -> m1_1515  [key=0, style=solid];
m1_1514 -> m1_1522  [key=2, style=dotted];
m1_1514 -> m1_1102  [key=2, style=dotted];
m1_1514 -> m1_1516  [color=darkseagreen4, key=1, label=entry, style=dashed];
m1_1514 -> m1_1517  [color=darkseagreen4, key=1, label=entry, style=dashed];
m1_1513 -> m1_1514  [key=0, style=solid];
m1_1515 -> m1_1516  [key=0, style=solid];
m1_1515 -> m1_129  [key=2, style=dotted];
m1_1515 -> m1_1518  [color=darkseagreen4, key=1, label=defaultJson, style=dashed];
m1_1516 -> m1_1517  [key=0, style=solid];
m1_1516 -> m1_1149  [key=2, style=dotted];
m1_1516 -> m1_1296  [key=2, style=dotted];
m1_1516 -> m1_1519  [color=darkseagreen4, key=1, label=isoJson, style=dashed];
m1_1517 -> m1_1518  [key=0, style=solid];
m1_1517 -> m1_1344  [key=2, style=dotted];
m1_1517 -> m1_1296  [key=2, style=dotted];
m1_1517 -> m1_1520  [color=darkseagreen4, key=1, label=javascriptJson, style=dashed];
m1_1518 -> m1_1519  [key=0, style=solid];
m1_1518 -> m1_24  [key=2, style=dotted];
m1_1519 -> m1_1520  [key=0, style=solid];
m1_1519 -> m1_24  [key=2, style=dotted];
m1_1520 -> m1_1521  [key=0, style=solid];
m1_1520 -> m1_24  [key=2, style=dotted];
m1_1521 -> m1_1513  [color=blue, key=0, style=bold];
m1_977 -> m1_978  [key=0, style=solid];
m1_978 -> m1_979  [key=0, style=solid];
m1_978 -> m1_990  [key=2, style=dotted];
m1_978 -> m1_980  [color=darkseagreen4, key=1, label=executorObject, style=dashed];
m1_978 -> m1_981  [color=darkseagreen4, key=1, label=executorObject, style=dashed];
m1_978 -> m1_982  [color=darkseagreen4, key=1, label=executorObject, style=dashed];
m1_978 -> m1_984  [color=darkseagreen4, key=1, label=executorObject, style=dashed];
m1_979 -> m1_980  [key=0, style=solid];
m1_980 -> m1_981  [key=0, style=solid];
m1_981 -> m1_982  [key=0, style=solid];
m1_982 -> m1_983  [key=0, style=solid];
m1_982 -> m1_129  [key=2, style=dotted];
m1_984 -> m1_985  [key=0, style=solid];
m1_984 -> m1_991  [key=2, style=dotted];
m1_983 -> m1_984  [key=0, style=solid];
m1_983 -> m1_936  [key=2, style=dotted];
m1_983 -> m1_985  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m1_983 -> m1_986  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m1_983 -> m1_987  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m1_983 -> m1_988  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m1_985 -> m1_986  [key=0, style=solid];
m1_985 -> m1_24  [key=2, style=dotted];
m1_986 -> m1_987  [key=0, style=solid];
m1_986 -> m1_24  [key=2, style=dotted];
m1_987 -> m1_988  [key=0, style=solid];
m1_987 -> m1_992  [key=2, style=dotted];
m1_988 -> m1_989  [key=0, style=solid];
m1_988 -> m1_24  [key=2, style=dotted];
m1_989 -> m1_977  [color=blue, key=0, style=bold];
m1_136 -> m1_137  [key=0, style=solid];
m1_137 -> m1_138  [key=0, style=solid];
m1_137 -> m1_60  [key=2, style=dotted];
m1_137 -> m1_139  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_138 -> m1_136  [color=blue, key=0, style=bold];
m1_778 -> m1_779  [key=0, style=solid];
m1_779 -> m1_780  [key=0, style=solid];
m1_779 -> m1_774  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_780 -> m1_781  [key=0, style=solid];
m1_780 -> m1_49  [key=2, style=dotted];
m1_781 -> m1_782  [key=0, style=solid];
m1_781 -> m1_24  [key=2, style=dotted];
m1_782 -> m1_778  [color=blue, key=0, style=bold];
m1_3311 -> m1_3312  [key=0, style=solid];
m1_3311 -> m1_3314  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_3312 -> m1_3313  [key=0, style=solid];
m1_3314 -> m1_3315  [key=0, style=solid];
m1_3314 -> m1_3316  [key=2, style=dotted];
m1_3314 -> m1_2358  [key=2, style=dotted];
m1_3314 -> m1_3317  [key=2, style=dotted];
m1_3314 -> m1_3318  [key=2, style=dotted];
m1_3313 -> m1_3314  [key=0, style=solid];
m1_3315 -> m1_3311  [color=blue, key=0, style=bold];
m1_3937 -> m1_3938  [key=0, style=solid];
m1_3938 -> m1_3939  [key=0, style=solid];
m1_3938 -> m1_3900  [key=2, style=dotted];
m1_3939 -> m1_3937  [color=blue, key=0, style=bold];
m1_2542 -> m1_2543  [key=0, style=solid];
m1_2543 -> m1_2544  [key=0, style=solid];
m1_2543 -> m1_2549  [key=2, style=dotted];
m1_2544 -> m1_2545  [key=0, style=solid];
m1_2544 -> m1_41  [key=2, style=dotted];
m1_2544 -> m1_2546  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_2545 -> m1_2546  [key=0, style=solid];
m1_2545 -> m1_42  [key=2, style=dotted];
m1_2546 -> m1_2547  [key=0, style=solid];
m1_2546 -> m1_49  [key=2, style=dotted];
m1_2547 -> m1_2548  [key=0, style=solid];
m1_2547 -> m1_24  [key=2, style=dotted];
m1_2547 -> m1_2547  [color=darkseagreen4, key=1, label=newStruct, style=dashed];
m1_2548 -> m1_2542  [color=blue, key=0, style=bold];
m1_99 -> m1_100  [key=0, style=solid];
m1_100 -> m1_101  [key=0, style=solid];
m1_100 -> m1_49  [key=2, style=dotted];
m1_100 -> m1_102  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_100 -> m1_103  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_100 -> m1_104  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_100 -> m1_105  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_100 -> m1_106  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_100 -> m1_107  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_100 -> m1_108  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_100 -> m1_109  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_100 -> m1_110  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_100 -> m1_111  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_100 -> m1_112  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_100 -> m1_113  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_100 -> m1_114  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_100 -> m1_115  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_100 -> m1_116  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_101 -> m1_102  [key=0, style=solid];
m1_101 -> m1_84  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m1_102 -> m1_103  [key=0, style=solid];
m1_102 -> m1_24  [key=2, style=dotted];
m1_102 -> m1_102  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_103 -> m1_104  [key=0, style=solid];
m1_103 -> m1_24  [key=2, style=dotted];
m1_103 -> m1_103  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_24  [key=2, style=dotted];
m1_104 -> m1_104  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_105 -> m1_106  [key=0, style=solid];
m1_105 -> m1_24  [key=2, style=dotted];
m1_105 -> m1_105  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_106 -> m1_107  [key=0, style=solid];
m1_106 -> m1_24  [key=2, style=dotted];
m1_106 -> m1_106  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_107 -> m1_108  [key=0, style=solid];
m1_107 -> m1_24  [key=2, style=dotted];
m1_107 -> m1_107  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_108 -> m1_109  [key=0, style=solid];
m1_108 -> m1_24  [key=2, style=dotted];
m1_108 -> m1_108  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_109 -> m1_110  [key=0, style=solid];
m1_109 -> m1_24  [key=2, style=dotted];
m1_109 -> m1_109  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_110 -> m1_111  [key=0, style=solid];
m1_110 -> m1_24  [key=2, style=dotted];
m1_110 -> m1_110  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_111 -> m1_112  [key=0, style=solid];
m1_111 -> m1_24  [key=2, style=dotted];
m1_111 -> m1_111  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_112 -> m1_113  [key=0, style=solid];
m1_112 -> m1_24  [key=2, style=dotted];
m1_112 -> m1_112  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_113 -> m1_114  [key=0, style=solid];
m1_113 -> m1_24  [key=2, style=dotted];
m1_113 -> m1_113  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_114 -> m1_115  [key=0, style=solid];
m1_114 -> m1_24  [key=2, style=dotted];
m1_114 -> m1_114  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_115 -> m1_116  [key=0, style=solid];
m1_115 -> m1_24  [key=2, style=dotted];
m1_115 -> m1_115  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_116 -> m1_117  [key=0, style=solid];
m1_116 -> m1_24  [key=2, style=dotted];
m1_116 -> m1_116  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_117 -> m1_99  [color=blue, key=0, style=bold];
m1_1550 -> m1_1551  [key=0, style=solid];
m1_1551 -> m1_1552  [key=0, style=solid];
m1_1551 -> m1_1555  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1551 -> m1_1551  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1552 -> m1_1553  [key=0, style=solid];
m1_1552 -> m1_175  [key=2, style=dotted];
m1_1552 -> m1_296  [key=2, style=dotted];
m1_1552 -> m1_1554  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_1555 -> m1_1556  [key=0, style=solid];
m1_1555 -> m1_175  [key=2, style=dotted];
m1_1555 -> m1_296  [key=2, style=dotted];
m1_1555 -> m1_1557  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_1553 -> m1_1554  [key=0, style=solid];
m1_1553 -> m1_24  [key=2, style=dotted];
m1_1554 -> m1_1555  [key=0, style=solid];
m1_1554 -> m1_24  [key=2, style=dotted];
m1_1556 -> m1_1557  [key=0, style=solid];
m1_1556 -> m1_24  [key=2, style=dotted];
m1_1557 -> m1_1558  [key=0, style=solid];
m1_1557 -> m1_24  [key=2, style=dotted];
m1_1558 -> m1_1550  [color=blue, key=0, style=bold];
m1_2758 -> m1_2759  [key=0, style=solid];
m1_2759 -> m1_2760  [key=0, style=solid];
m1_2759 -> m1_936  [key=2, style=dotted];
m1_2760 -> m1_2761  [key=0, style=solid];
m1_2760 -> m1_152  [key=2, style=dotted];
m1_2761 -> m1_2758  [color=blue, key=0, style=bold];
m1_3502 -> m1_3503  [key=0, style=solid];
m1_3503 -> m1_3504  [key=0, style=solid];
m1_3503 -> m1_3506  [key=2, style=dotted];
m1_3503 -> m1_41  [key=2, style=dotted];
m1_3504 -> m1_3505  [key=0, style=solid];
m1_3504 -> m1_24  [key=2, style=dotted];
m1_3505 -> m1_3502  [color=blue, key=0, style=bold];
m1_3060 -> m1_3061  [key=0, style=solid];
m1_3061 -> m1_3062  [key=0, style=solid];
m1_3061 -> m1_134  [key=2, style=dotted];
m1_3061 -> m1_3064  [color=darkseagreen4, key=1, label=d1, style=dashed];
m1_3061 -> m1_3065  [color=darkseagreen4, key=1, label=d1, style=dashed];
m1_3062 -> m1_3063  [key=0, style=solid];
m1_3062 -> m1_129  [key=2, style=dotted];
m1_3064 -> m1_3065  [key=0, style=solid];
m1_3064 -> m1_24  [key=2, style=dotted];
m1_3065 -> m1_3066  [key=0, style=solid];
m1_3065 -> m1_24  [key=2, style=dotted];
m1_3063 -> m1_3064  [key=0, style=solid];
m1_3063 -> m1_49  [key=2, style=dotted];
m1_3063 -> m1_3065  [color=darkseagreen4, key=1, label=d2, style=dashed];
m1_3066 -> m1_3060  [color=blue, key=0, style=bold];
m1_3708 -> m1_3709  [key=0, style=solid];
m1_3709 -> m1_3710  [key=0, style=solid];
m1_3709 -> m1_60  [key=2, style=dotted];
m1_3709 -> m1_3711  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_3710 -> m1_3708  [color=blue, key=0, style=bold];
m1_3608 -> m1_3609  [key=0, style=solid];
m1_3609 -> m1_3610  [key=0, style=solid];
m1_3609 -> m1_3609  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_3610 -> m1_3611  [key=0, style=solid];
m1_3610 -> m1_49  [key=2, style=dotted];
m1_3611 -> m1_3612  [key=0, style=solid];
m1_3612 -> m1_3613  [key=0, style=solid];
m1_3612 -> m1_24  [key=2, style=dotted];
m1_3613 -> m1_3608  [color=blue, key=0, style=bold];
m1_771 -> m1_772  [key=0, style=solid];
m1_772 -> m1_773  [key=0, style=solid];
m1_772 -> m1_777  [key=2, style=dotted];
m1_773 -> m1_774  [key=0, style=solid];
m1_773 -> m1_129  [key=2, style=dotted];
m1_773 -> m1_775  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_774 -> m1_775  [key=0, style=solid];
m1_774 -> m1_774  [color=darkorchid, key=3, label="Local variable string expectedJson", style=bold];
m1_775 -> m1_776  [key=0, style=solid];
m1_775 -> m1_24  [key=2, style=dotted];
m1_776 -> m1_771  [color=blue, key=0, style=bold];
m1_2566 -> m1_2567  [key=0, style=solid];
m1_2567 -> m1_2568  [key=0, style=solid];
m1_2567 -> m1_2560  [key=2, style=dotted];
m1_2567 -> m1_2561  [key=2, style=dotted];
m1_2567 -> m1_954  [key=2, style=dotted];
m1_2567 -> m1_1110  [key=2, style=dotted];
m1_2567 -> m1_175  [key=2, style=dotted];
m1_2567 -> m1_198  [key=2, style=dotted];
m1_2567 -> m1_2569  [color=darkseagreen4, key=1, label=serializeObject, style=dashed];
m1_2568 -> m1_2569  [key=0, style=solid];
m1_2568 -> m1_24  [key=2, style=dotted];
m1_2569 -> m1_2570  [key=0, style=solid];
m1_2569 -> m1_16  [key=2, style=dotted];
m1_2569 -> m1_373  [key=2, style=dotted];
m1_2569 -> m1_2572  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_2570 -> m1_2571  [key=0, style=solid];
m1_2570 -> m1_19  [key=2, style=dotted];
m1_2570 -> m1_2572  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_2572 -> m1_2573  [key=0, style=solid];
m1_2572 -> m1_20  [key=2, style=dotted];
m1_2572 -> m1_2574  [color=darkseagreen4, key=1, label=deserializeObject, style=dashed];
m1_2571 -> m1_2572  [key=0, style=solid];
m1_2573 -> m1_2574  [key=0, style=solid];
m1_2573 -> m1_1110  [key=2, style=dotted];
m1_2573 -> m1_24  [key=2, style=dotted];
m1_2574 -> m1_2575  [key=0, style=solid];
m1_2574 -> m1_954  [key=2, style=dotted];
m1_2574 -> m1_24  [key=2, style=dotted];
m1_2575 -> m1_2566  [color=blue, key=0, style=bold];
m1_705 -> m1_706  [key=0, style=solid];
m1_706 -> m1_707  [key=0, style=solid];
m1_706 -> m1_708  [key=0, style=solid];
m1_707 -> m1_715  [key=0, style=solid];
m1_708 -> m1_709  [key=0, style=solid];
m1_708 -> m1_716  [key=2, style=dotted];
m1_709 -> m1_710  [key=0, style=solid];
m1_709 -> m1_717  [key=2, style=dotted];
m1_710 -> m1_711  [key=0, style=solid];
m1_710 -> m1_718  [key=2, style=dotted];
m1_711 -> m1_712  [key=0, style=solid];
m1_711 -> m1_718  [key=2, style=dotted];
m1_712 -> m1_713  [key=0, style=solid];
m1_712 -> m1_718  [key=2, style=dotted];
m1_713 -> m1_714  [key=0, style=solid];
m1_713 -> m1_718  [key=2, style=dotted];
m1_714 -> m1_715  [key=0, style=solid];
m1_715 -> m1_705  [color=blue, key=0, style=bold];
m1_1392 -> m1_1393  [key=0, style=solid];
m1_1393 -> m1_1394  [key=0, style=solid];
m1_1393 -> m1_1393  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1394 -> m1_1395  [key=0, style=solid];
m1_1394 -> m1_49  [key=2, style=dotted];
m1_1394 -> m1_1396  [color=darkseagreen4, key=1, label=personRaw, style=dashed];
m1_1394 -> m1_1397  [color=darkseagreen4, key=1, label=personRaw, style=dashed];
m1_1395 -> m1_1396  [key=0, style=solid];
m1_1395 -> m1_24  [key=2, style=dotted];
m1_1396 -> m1_1397  [key=0, style=solid];
m1_1396 -> m1_1399  [key=2, style=dotted];
m1_1396 -> m1_24  [key=2, style=dotted];
m1_1397 -> m1_1398  [key=0, style=solid];
m1_1397 -> m1_24  [key=2, style=dotted];
m1_1398 -> m1_1392  [color=blue, key=0, style=bold];
m1_2285 -> m1_2322  [key=0, style=solid];
m1_2285 -> m1_2323  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_2285 -> m1_2324  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_2285 -> m1_2325  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_2285 -> m1_2326  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_2285 -> m1_2327  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_2285 -> m1_2328  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_2285 -> m1_2329  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_2322 -> m1_2323  [key=0, style=solid];
m1_2323 -> m1_2324  [key=0, style=solid];
m1_2324 -> m1_2325  [key=0, style=solid];
m1_2325 -> m1_2326  [key=0, style=solid];
m1_2326 -> m1_2327  [key=0, style=solid];
m1_2327 -> m1_2328  [key=0, style=solid];
m1_2328 -> m1_2329  [key=0, style=solid];
m1_2329 -> m1_2330  [key=0, style=solid];
m1_2330 -> m1_2285  [color=blue, key=0, style=bold];
m1_2489 -> m1_2490  [key=0, style=solid];
m1_2490 -> m1_2491  [key=0, style=solid];
m1_2490 -> m1_41  [key=2, style=dotted];
m1_2491 -> m1_2492  [key=0, style=solid];
m1_2491 -> m1_42  [key=2, style=dotted];
m1_2492 -> m1_2489  [color=blue, key=0, style=bold];
m1_4163 -> m1_4164  [key=0, style=solid];
m1_4164 -> m1_4165  [key=0, style=solid];
m1_4164 -> m1_2395  [key=2, style=dotted];
m1_4165 -> m1_4163  [color=blue, key=0, style=bold];
m1_1271 -> m1_1272  [key=0, style=solid];
m1_1272 -> m1_1273  [key=0, style=solid];
m1_1272 -> m1_1279  [key=2, style=dotted];
m1_1273 -> m1_1274  [key=0, style=solid];
m1_1273 -> m1_129  [key=2, style=dotted];
m1_1274 -> m1_1275  [key=0, style=solid];
m1_1274 -> m1_49  [key=2, style=dotted];
m1_1274 -> m1_1276  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m1_1274 -> m1_1277  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m1_1275 -> m1_1276  [key=0, style=solid];
m1_1275 -> m1_24  [key=2, style=dotted];
m1_1276 -> m1_1277  [key=0, style=solid];
m1_1276 -> m1_24  [key=2, style=dotted];
m1_1277 -> m1_1278  [key=0, style=solid];
m1_1277 -> m1_24  [key=2, style=dotted];
m1_1278 -> m1_1271  [color=blue, key=0, style=bold];
m1_82 -> m1_83  [key=0, style=solid];
m1_83 -> m1_84  [key=0, style=solid];
m1_83 -> m1_49  [key=2, style=dotted];
m1_83 -> m1_85  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_83 -> m1_86  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_83 -> m1_87  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_83 -> m1_88  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_83 -> m1_89  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_83 -> m1_90  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_83 -> m1_91  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_83 -> m1_92  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_83 -> m1_93  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_83 -> m1_94  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_83 -> m1_95  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_83 -> m1_96  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_83 -> m1_97  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_84  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_24  [key=2, style=dotted];
m1_85 -> m1_85  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_86 -> m1_87  [key=0, style=solid];
m1_86 -> m1_24  [key=2, style=dotted];
m1_86 -> m1_86  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_24  [key=2, style=dotted];
m1_87 -> m1_87  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_24  [key=2, style=dotted];
m1_88 -> m1_88  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_24  [key=2, style=dotted];
m1_89 -> m1_89  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_24  [key=2, style=dotted];
m1_90 -> m1_90  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_24  [key=2, style=dotted];
m1_91 -> m1_91  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_24  [key=2, style=dotted];
m1_92 -> m1_92  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_93 -> m1_94  [key=0, style=solid];
m1_93 -> m1_24  [key=2, style=dotted];
m1_93 -> m1_93  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_94 -> m1_95  [key=0, style=solid];
m1_94 -> m1_24  [key=2, style=dotted];
m1_94 -> m1_94  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_95 -> m1_96  [key=0, style=solid];
m1_95 -> m1_24  [key=2, style=dotted];
m1_95 -> m1_95  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_96 -> m1_97  [key=0, style=solid];
m1_96 -> m1_24  [key=2, style=dotted];
m1_96 -> m1_96  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_24  [key=2, style=dotted];
m1_97 -> m1_97  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_98 -> m1_82  [color=blue, key=0, style=bold];
m1_439 -> m1_440  [key=0, style=solid];
m1_440 -> m1_441  [key=0, style=solid];
m1_440 -> m1_444  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_440 -> m1_440  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_441 -> m1_442  [key=0, style=solid];
m1_441 -> m1_60  [key=2, style=dotted];
m1_441 -> m1_443  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_442 -> m1_439  [color=blue, key=0, style=bold];
m1_2525 -> m1_2526  [key=0, style=solid];
m1_2526 -> m1_2527  [key=0, style=solid];
m1_2526 -> m1_2535  [color=darkseagreen4, key=1, label=classRef, style=dashed];
m1_2527 -> m1_2528  [key=0, style=solid];
m1_2527 -> m1_2537  [key=2, style=dotted];
m1_2527 -> m1_2538  [key=2, style=dotted];
m1_2527 -> m1_2529  [color=darkseagreen4, key=1, label=s1, style=dashed];
m1_2535 -> m1_2536  [key=0, style=solid];
m1_2535 -> m1_60  [key=2, style=dotted];
m1_2535 -> m1_2539  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_2528 -> m1_2529  [key=0, style=solid];
m1_2528 -> m1_41  [key=2, style=dotted];
m1_2528 -> m1_2530  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_2528 -> m1_2535  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_2528 -> m1_2540  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_2529 -> m1_2530  [key=0, style=solid];
m1_2529 -> m1_2535  [key=0, style=solid];
m1_2530 -> m1_2531  [key=0, style=solid];
m1_2530 -> m1_49  [key=2, style=dotted];
m1_2530 -> m1_2532  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_2530 -> m1_2533  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_2530 -> m1_2534  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_2531 -> m1_2532  [key=0, style=solid];
m1_2531 -> m1_24  [key=2, style=dotted];
m1_2532 -> m1_2533  [key=0, style=solid];
m1_2532 -> m1_24  [key=2, style=dotted];
m1_2533 -> m1_2534  [key=0, style=solid];
m1_2533 -> m1_24  [key=2, style=dotted];
m1_2534 -> m1_2536  [key=0, style=solid];
m1_2534 -> m1_24  [key=2, style=dotted];
m1_2536 -> m1_2525  [color=blue, key=0, style=bold];
m1_2049 -> m1_2050  [key=0, style=solid];
m1_2050 -> m1_2051  [key=0, style=solid];
m1_2050 -> m1_2062  [key=2, style=dotted];
m1_2050 -> m1_2052  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_2050 -> m1_2053  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_2050 -> m1_2054  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_2051 -> m1_2052  [key=0, style=solid];
m1_2051 -> m1_2063  [key=2, style=dotted];
m1_2051 -> m1_2053  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_2052 -> m1_2053  [key=0, style=solid];
m1_2053 -> m1_2054  [key=0, style=solid];
m1_2054 -> m1_2055  [key=0, style=solid];
m1_2054 -> m1_175  [key=2, style=dotted];
m1_2054 -> m1_176  [key=2, style=dotted];
m1_2055 -> m1_2056  [key=0, style=solid];
m1_2055 -> m1_42  [key=2, style=dotted];
m1_2056 -> m1_2057  [key=0, style=solid];
m1_2056 -> m1_49  [key=2, style=dotted];
m1_2056 -> m1_2058  [color=darkseagreen4, key=1, label=newC1, style=dashed];
m1_2056 -> m1_2059  [color=darkseagreen4, key=1, label=newC1, style=dashed];
m1_2056 -> m1_2060  [color=darkseagreen4, key=1, label=newC1, style=dashed];
m1_2057 -> m1_2058  [key=0, style=solid];
m1_2057 -> m1_24  [key=2, style=dotted];
m1_2058 -> m1_2059  [key=0, style=solid];
m1_2058 -> m1_24  [key=2, style=dotted];
m1_2059 -> m1_2060  [key=0, style=solid];
m1_2059 -> m1_24  [key=2, style=dotted];
m1_2060 -> m1_2061  [key=0, style=solid];
m1_2060 -> m1_24  [key=2, style=dotted];
m1_2061 -> m1_2049  [color=blue, key=0, style=bold];
m1_3074 -> m1_3075  [key=0, style=solid];
m1_3075 -> m1_3076  [key=0, style=solid];
m1_3075 -> m1_3075  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_3076 -> m1_3077  [key=0, style=solid];
m1_3076 -> m1_175  [key=2, style=dotted];
m1_3076 -> m1_296  [key=2, style=dotted];
m1_3077 -> m1_3078  [key=0, style=solid];
m1_3077 -> m1_3079  [key=2, style=dotted];
m1_3077 -> m1_3011  [key=2, style=dotted];
m1_3078 -> m1_3074  [color=blue, key=0, style=bold];
m1_1239 -> m1_1240  [key=0, style=solid];
m1_1240 -> m1_1241  [key=0, style=solid];
m1_1240 -> m1_1246  [key=2, style=dotted];
m1_1240 -> m1_1244  [color=darkseagreen4, key=1, label=guid, style=dashed];
m1_1241 -> m1_1242  [key=0, style=solid];
m1_1241 -> m1_1247  [key=2, style=dotted];
m1_1241 -> m1_129  [key=2, style=dotted];
m1_1241 -> m1_1243  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1244 -> m1_1245  [key=0, style=solid];
m1_1244 -> m1_24  [key=2, style=dotted];
m1_1242 -> m1_1243  [key=0, style=solid];
m1_1242 -> m1_24  [key=2, style=dotted];
m1_1243 -> m1_1244  [key=0, style=solid];
m1_1243 -> m1_49  [key=2, style=dotted];
m1_1245 -> m1_1239  [color=blue, key=0, style=bold];
m1_2654 -> m1_2655  [key=0, style=solid];
m1_2655 -> m1_2656  [key=0, style=solid];
m1_2656 -> m1_2654  [color=blue, key=0, style=bold];
m1_3248 -> m1_3249  [key=0, style=solid];
m1_3249 -> m1_3250  [key=0, style=solid];
m1_3249 -> m1_60  [key=2, style=dotted];
m1_3249 -> m1_3251  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_3250 -> m1_3248  [color=blue, key=0, style=bold];
m1_1151 -> m1_1152  [key=0, style=solid];
m1_1152 -> m1_1153  [key=0, style=solid];
m1_1152 -> m1_1155  [key=2, style=dotted];
m1_1152 -> m1_129  [key=2, style=dotted];
m1_1153 -> m1_1154  [key=0, style=solid];
m1_1153 -> m1_24  [key=2, style=dotted];
m1_1154 -> m1_1151  [color=blue, key=0, style=bold];
m1_2476 -> m1_2477  [key=0, style=solid];
m1_2477 -> m1_2478  [key=0, style=solid];
m1_2477 -> m1_2479  [key=2, style=dotted];
m1_2478 -> m1_2476  [color=blue, key=0, style=bold];
m1_2793 -> m1_2794  [key=0, style=solid];
m1_2794 -> m1_2795  [key=0, style=solid];
m1_2794 -> m1_2798  [key=2, style=dotted];
m1_2795 -> m1_2796  [key=0, style=solid];
m1_2795 -> m1_41  [key=2, style=dotted];
m1_2796 -> m1_2797  [key=0, style=solid];
m1_2796 -> m1_42  [key=2, style=dotted];
m1_2797 -> m1_2793  [color=blue, key=0, style=bold];
m1_1547 -> m1_1548  [key=0, style=solid];
m1_1548 -> m1_1549  [key=0, style=solid];
m1_1549 -> m1_1547  [color=blue, key=0, style=bold];
m1_29 -> m1_30  [key=0, style=solid];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_32  [key=2, style=dotted];
m1_30 -> m1_25  [key=2, style=dotted];
m1_31 -> m1_29  [color=blue, key=0, style=bold];
m1_1205 -> m1_1206  [key=0, style=solid];
m1_1206 -> m1_1207  [key=0, style=solid];
m1_1206 -> m1_1215  [key=2, style=dotted];
m1_1206 -> m1_41  [key=2, style=dotted];
m1_1206 -> m1_1209  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1206 -> m1_1210  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1207 -> m1_1208  [key=0, style=solid];
m1_1207 -> m1_3243  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m1_1209 -> m1_1210  [key=0, style=solid];
m1_1209 -> m1_42  [key=2, style=dotted];
m1_1210 -> m1_1211  [key=0, style=solid];
m1_1210 -> m1_49  [key=2, style=dotted];
m1_1210 -> m1_1212  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_1210 -> m1_1213  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_1208 -> m1_1209  [key=0, style=solid];
m1_1211 -> m1_1212  [key=0, style=solid];
m1_1211 -> m1_24  [key=2, style=dotted];
m1_1212 -> m1_1213  [key=0, style=solid];
m1_1212 -> m1_24  [key=2, style=dotted];
m1_1213 -> m1_1214  [key=0, style=solid];
m1_1213 -> m1_24  [key=2, style=dotted];
m1_1214 -> m1_1205  [color=blue, key=0, style=bold];
m1_2513 -> m1_2514  [key=0, style=solid];
m1_2514 -> m1_2515  [key=0, style=solid];
m1_2514 -> m1_19  [key=2, style=dotted];
m1_2514 -> m1_2516  [color=darkseagreen4, key=1, label=serializer1, style=dashed];
m1_2514 -> m1_2519  [color=darkseagreen4, key=1, label=serializer1, style=dashed];
m1_2515 -> m1_2516  [key=0, style=solid];
m1_2515 -> m1_1149  [key=2, style=dotted];
m1_2515 -> m1_539  [key=2, style=dotted];
m1_2516 -> m1_2517  [key=0, style=solid];
m1_2519 -> m1_2520  [key=0, style=solid];
m1_2519 -> m1_2524  [key=2, style=dotted];
m1_2519 -> m1_2521  [color=darkseagreen4, key=1, label=z, style=dashed];
m1_2519 -> m1_2522  [color=darkseagreen4, key=1, label=z, style=dashed];
m1_2517 -> m1_2518  [key=0, style=solid];
m1_2517 -> m1_2517  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_2518 -> m1_2519  [key=0, style=solid];
m1_2518 -> m1_16  [key=2, style=dotted];
m1_2518 -> m1_373  [key=2, style=dotted];
m1_2520 -> m1_2521  [key=0, style=solid];
m1_2520 -> m1_24  [key=2, style=dotted];
m1_2521 -> m1_2522  [key=0, style=solid];
m1_2521 -> m1_24  [key=2, style=dotted];
m1_2522 -> m1_2523  [key=0, style=solid];
m1_2522 -> m1_24  [key=2, style=dotted];
m1_2523 -> m1_2513  [color=blue, key=0, style=bold];
m1_1692 -> m1_1693  [key=0, style=solid];
m1_1693 -> m1_1694  [key=0, style=solid];
m1_1693 -> m1_1693  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1694 -> m1_1695  [key=0, style=solid];
m1_1694 -> m1_467  [key=2, style=dotted];
m1_1695 -> m1_1696  [key=0, style=solid];
m1_1695 -> m1_770  [key=2, style=dotted];
m1_1695 -> m1_49  [key=2, style=dotted];
m1_1695 -> m1_1697  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_1695 -> m1_1698  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_1695 -> m1_1699  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_1696 -> m1_1697  [key=0, style=solid];
m1_1696 -> m1_797  [key=2, style=dotted];
m1_1697 -> m1_1698  [key=0, style=solid];
m1_1697 -> m1_24  [key=2, style=dotted];
m1_1698 -> m1_1699  [key=0, style=solid];
m1_1698 -> m1_24  [key=2, style=dotted];
m1_1699 -> m1_1700  [key=0, style=solid];
m1_1699 -> m1_24  [key=2, style=dotted];
m1_1700 -> m1_1692  [color=blue, key=0, style=bold];
m1_323 -> m1_324  [key=0, style=solid];
m1_324 -> m1_325  [key=0, style=solid];
m1_324 -> m1_334  [key=2, style=dotted];
m1_324 -> m1_326  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_324 -> m1_327  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_324 -> m1_328  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_325 -> m1_326  [key=0, style=solid];
m1_326 -> m1_327  [key=0, style=solid];
m1_326 -> m1_321  [key=2, style=dotted];
m1_326 -> m1_322  [key=2, style=dotted];
m1_327 -> m1_328  [key=0, style=solid];
m1_328 -> m1_329  [key=0, style=solid];
m1_328 -> m1_41  [key=2, style=dotted];
m1_328 -> m1_330  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_329 -> m1_330  [key=0, style=solid];
m1_329 -> m1_42  [key=2, style=dotted];
m1_330 -> m1_331  [key=0, style=solid];
m1_330 -> m1_49  [key=2, style=dotted];
m1_330 -> m1_332  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_331 -> m1_332  [key=0, style=solid];
m1_331 -> m1_24  [key=2, style=dotted];
m1_332 -> m1_333  [key=0, style=solid];
m1_332 -> m1_24  [key=2, style=dotted];
m1_333 -> m1_323  [color=blue, key=0, style=bold];
m1_3042 -> m1_3043  [key=0, style=solid];
m1_3043 -> m1_3044  [key=0, style=solid];
m1_3044 -> m1_3045  [key=0, style=solid];
m1_3044 -> m1_3052  [key=2, style=dotted];
m1_3044 -> m1_3046  [color=darkseagreen4, key=1, label=testCulture, style=dashed];
m1_3045 -> m1_3046  [key=0, style=solid];
m1_3046 -> m1_3047  [key=0, style=solid];
m1_3047 -> m1_3048  [key=0, style=solid];
m1_3047 -> m1_3047  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_3048 -> m1_3049  [key=0, style=solid];
m1_3048 -> m1_49  [key=2, style=dotted];
m1_3048 -> m1_3050  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_3049 -> m1_3050  [key=0, style=solid];
m1_3049 -> m1_24  [key=2, style=dotted];
m1_3050 -> m1_3051  [key=0, style=solid];
m1_3050 -> m1_24  [key=2, style=dotted];
m1_3051 -> m1_3042  [color=blue, key=0, style=bold];
m1_1523 -> m1_1524  [key=0, style=solid];
m1_1524 -> m1_1525  [key=0, style=solid];
m1_1524 -> m1_1536  [key=2, style=dotted];
m1_1524 -> m1_1526  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_1524 -> m1_1527  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_1524 -> m1_1528  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_1524 -> m1_1532  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_1524 -> m1_1533  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_1524 -> m1_1534  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_1525 -> m1_1526  [key=0, style=solid];
m1_1525 -> m1_196  [key=2, style=dotted];
m1_1526 -> m1_1527  [key=0, style=solid];
m1_1526 -> m1_134  [key=2, style=dotted];
m1_1527 -> m1_1528  [key=0, style=solid];
m1_1527 -> m1_134  [key=2, style=dotted];
m1_1528 -> m1_1529  [key=0, style=solid];
m1_1528 -> m1_41  [key=2, style=dotted];
m1_1528 -> m1_1530  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1532 -> m1_1533  [key=0, style=solid];
m1_1532 -> m1_1537  [key=2, style=dotted];
m1_1532 -> m1_24  [key=2, style=dotted];
m1_1533 -> m1_1534  [key=0, style=solid];
m1_1533 -> m1_1537  [key=2, style=dotted];
m1_1533 -> m1_24  [key=2, style=dotted];
m1_1534 -> m1_1535  [key=0, style=solid];
m1_1534 -> m1_1537  [key=2, style=dotted];
m1_1534 -> m1_24  [key=2, style=dotted];
m1_1529 -> m1_1530  [key=0, style=solid];
m1_1529 -> m1_24  [key=2, style=dotted];
m1_1530 -> m1_1531  [key=0, style=solid];
m1_1530 -> m1_49  [key=2, style=dotted];
m1_1530 -> m1_1532  [color=darkseagreen4, key=1, label=deserializedObject, style=dashed];
m1_1530 -> m1_1533  [color=darkseagreen4, key=1, label=deserializedObject, style=dashed];
m1_1530 -> m1_1534  [color=darkseagreen4, key=1, label=deserializedObject, style=dashed];
m1_1531 -> m1_1532  [key=0, style=solid];
m1_1531 -> m1_797  [key=2, style=dotted];
m1_1535 -> m1_1523  [color=blue, key=0, style=bold];
m1_2977 -> m1_2978  [key=0, style=solid];
m1_2978 -> m1_2979  [key=0, style=solid];
m1_2978 -> m1_2978  [color=darkorchid, key=3, label="Local variable string input", style=bold];
m1_2979 -> m1_2980  [key=0, style=solid];
m1_2979 -> m1_1708  [key=2, style=dotted];
m1_2979 -> m1_2982  [color=darkseagreen4, key=1, label=uri, style=dashed];
m1_2980 -> m1_2981  [key=0, style=solid];
m1_2980 -> m1_129  [key=2, style=dotted];
m1_2982 -> m1_2983  [key=0, style=solid];
m1_2982 -> m1_24  [key=2, style=dotted];
m1_2981 -> m1_2982  [key=0, style=solid];
m1_2981 -> m1_49  [key=2, style=dotted];
m1_2983 -> m1_2977  [color=blue, key=0, style=bold];
m1_3925 -> m1_3926  [key=0, style=solid];
m1_3926 -> m1_3927  [key=0, style=solid];
m1_3927 -> m1_3925  [color=blue, key=0, style=bold];
m1_1617 -> m1_1618  [key=0, style=solid];
m1_1618 -> m1_1619  [key=0, style=solid];
m1_1618 -> m1_1621  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1618 -> m1_1618  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1619 -> m1_1620  [key=0, style=solid];
m1_1619 -> m1_49  [key=2, style=dotted];
m1_1621 -> m1_1622  [key=0, style=solid];
m1_1621 -> m1_49  [key=2, style=dotted];
m1_1621 -> m1_1623  [color=darkseagreen4, key=1, label=n, style=dashed];
m1_1621 -> m1_1624  [color=darkseagreen4, key=1, label=n, style=dashed];
m1_1621 -> m1_1625  [color=darkseagreen4, key=1, label=n, style=dashed];
m1_1621 -> m1_1626  [color=darkseagreen4, key=1, label=n, style=dashed];
m1_1620 -> m1_1621  [key=0, style=solid];
m1_1620 -> m1_24  [key=2, style=dotted];
m1_1622 -> m1_1623  [key=0, style=solid];
m1_1622 -> m1_1246  [key=2, style=dotted];
m1_1622 -> m1_24  [key=2, style=dotted];
m1_1623 -> m1_1624  [key=0, style=solid];
m1_1623 -> m1_1246  [key=2, style=dotted];
m1_1623 -> m1_24  [key=2, style=dotted];
m1_1624 -> m1_1625  [key=0, style=solid];
m1_1624 -> m1_24  [key=2, style=dotted];
m1_1625 -> m1_1626  [key=0, style=solid];
m1_1625 -> m1_24  [key=2, style=dotted];
m1_1626 -> m1_1627  [key=0, style=solid];
m1_1626 -> m1_24  [key=2, style=dotted];
m1_1627 -> m1_1617  [color=blue, key=0, style=bold];
m1_2676 -> m1_2677  [key=0, style=solid];
m1_2677 -> m1_2678  [key=0, style=solid];
m1_2677 -> m1_2692  [key=2, style=dotted];
m1_2677 -> m1_2679  [color=darkseagreen4, key=1, label=nullableStructPropertyClass, style=dashed];
m1_2677 -> m1_2683  [color=darkseagreen4, key=1, label=nullableStructPropertyClass, style=dashed];
m1_2678 -> m1_2679  [key=0, style=solid];
m1_2678 -> m1_2693  [key=2, style=dotted];
m1_2679 -> m1_2680  [key=0, style=solid];
m1_2679 -> m1_2693  [key=2, style=dotted];
m1_2683 -> m1_2684  [key=0, style=solid];
m1_2683 -> m1_129  [key=2, style=dotted];
m1_2680 -> m1_2681  [key=0, style=solid];
m1_2680 -> m1_2692  [key=2, style=dotted];
m1_2680 -> m1_2682  [color=darkseagreen4, key=1, label=barWithNull, style=dashed];
m1_2680 -> m1_2687  [color=darkseagreen4, key=1, label=barWithNull, style=dashed];
m1_2681 -> m1_2682  [key=0, style=solid];
m1_2681 -> m1_2693  [key=2, style=dotted];
m1_2682 -> m1_2683  [key=0, style=solid];
m1_2687 -> m1_2688  [key=0, style=solid];
m1_2687 -> m1_129  [key=2, style=dotted];
m1_2684 -> m1_2685  [key=0, style=solid];
m1_2684 -> m1_2694  [key=2, style=dotted];
m1_2684 -> m1_2686  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m1_2685 -> m1_2686  [key=0, style=solid];
m1_2685 -> m1_24  [key=2, style=dotted];
m1_2686 -> m1_2687  [key=0, style=solid];
m1_2686 -> m1_24  [key=2, style=dotted];
m1_2688 -> m1_2689  [key=0, style=solid];
m1_2688 -> m1_2694  [key=2, style=dotted];
m1_2688 -> m1_2690  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m1_2689 -> m1_2690  [key=0, style=solid];
m1_2689 -> m1_24  [key=2, style=dotted];
m1_2690 -> m1_2691  [key=0, style=solid];
m1_2690 -> m1_24  [key=2, style=dotted];
m1_2691 -> m1_2676  [color=blue, key=0, style=bold];
m1_3824 -> m1_3825  [key=0, style=solid];
m1_3825 -> m1_3826  [key=0, style=solid];
m1_3825 -> m1_196  [key=2, style=dotted];
m1_3825 -> m1_3831  [key=2, style=dotted];
m1_3825 -> m1_129  [key=2, style=dotted];
m1_3825 -> m1_3827  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3826 -> m1_3827  [key=0, style=solid];
m1_3826 -> m1_24  [key=2, style=dotted];
m1_3827 -> m1_3828  [key=0, style=solid];
m1_3827 -> m1_49  [key=2, style=dotted];
m1_3827 -> m1_3829  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_3828 -> m1_3829  [key=0, style=solid];
m1_3828 -> m1_3831  [key=2, style=dotted];
m1_3828 -> m1_3832  [key=2, style=dotted];
m1_3828 -> m1_24  [key=2, style=dotted];
m1_3829 -> m1_3830  [key=0, style=solid];
m1_3829 -> m1_3831  [key=2, style=dotted];
m1_3829 -> m1_3832  [key=2, style=dotted];
m1_3829 -> m1_24  [key=2, style=dotted];
m1_3830 -> m1_3824  [color=blue, key=0, style=bold];
m1_1414 -> m1_1415  [key=0, style=solid];
m1_1415 -> m1_1416  [key=0, style=solid];
m1_1415 -> m1_1415  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1416 -> m1_1417  [key=0, style=solid];
m1_1416 -> m1_49  [key=2, style=dotted];
m1_1417 -> m1_1418  [key=0, style=solid];
m1_1417 -> m1_24  [key=2, style=dotted];
m1_1418 -> m1_1414  [color=blue, key=0, style=bold];
m1_3445 -> m1_3446  [key=0, style=solid];
m1_3446 -> m1_3447  [key=0, style=solid];
m1_3446 -> m1_196  [key=2, style=dotted];
m1_3446 -> m1_1102  [key=2, style=dotted];
m1_3447 -> m1_3448  [key=0, style=solid];
m1_3447 -> m1_175  [key=2, style=dotted];
m1_3447 -> m1_198  [key=2, style=dotted];
m1_3447 -> m1_3451  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3448 -> m1_3449  [key=0, style=solid];
m1_3448 -> m1_467  [key=2, style=dotted];
m1_3448 -> m1_3450  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_3451 -> m1_3452  [key=0, style=solid];
m1_3451 -> m1_175  [key=2, style=dotted];
m1_3451 -> m1_296  [key=2, style=dotted];
m1_3451 -> m1_3453  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m1_3451 -> m1_3454  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m1_3449 -> m1_3450  [key=0, style=solid];
m1_3449 -> m1_919  [key=2, style=dotted];
m1_3449 -> m1_1681  [key=2, style=dotted];
m1_3449 -> m1_3456  [key=2, style=dotted];
m1_3449 -> m1_3457  [key=2, style=dotted];
m1_3450 -> m1_3451  [key=0, style=solid];
m1_3450 -> m1_919  [key=2, style=dotted];
m1_3450 -> m1_1681  [key=2, style=dotted];
m1_3450 -> m1_3456  [key=2, style=dotted];
m1_3450 -> m1_3457  [key=2, style=dotted];
m1_3452 -> m1_3453  [key=0, style=solid];
m1_3452 -> m1_24  [key=2, style=dotted];
m1_3453 -> m1_3454  [key=0, style=solid];
m1_3453 -> m1_1102  [key=2, style=dotted];
m1_3453 -> m1_24  [key=2, style=dotted];
m1_3454 -> m1_3455  [key=0, style=solid];
m1_3454 -> m1_1102  [key=2, style=dotted];
m1_3454 -> m1_24  [key=2, style=dotted];
m1_3455 -> m1_3445  [color=blue, key=0, style=bold];
m1_4108 -> m1_4109  [key=0, style=solid];
m1_4109 -> m1_4110  [key=0, style=solid];
m1_4109 -> m1_4109  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_4110 -> m1_4111  [key=0, style=solid];
m1_4110 -> m1_49  [key=2, style=dotted];
m1_4110 -> m1_4112  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_4111 -> m1_4112  [key=0, style=solid];
m1_4111 -> m1_24  [key=2, style=dotted];
m1_4112 -> m1_4113  [key=0, style=solid];
m1_4112 -> m1_24  [key=2, style=dotted];
m1_4113 -> m1_4108  [color=blue, key=0, style=bold];
m1_2707 -> m1_2708  [key=0, style=solid];
m1_2708 -> m1_2709  [key=0, style=solid];
m1_2708 -> m1_2713  [key=2, style=dotted];
m1_2709 -> m1_2710  [key=0, style=solid];
m1_2709 -> m1_129  [key=2, style=dotted];
m1_2710 -> m1_2711  [key=0, style=solid];
m1_2710 -> m1_175  [key=2, style=dotted];
m1_2710 -> m1_296  [key=2, style=dotted];
m1_2711 -> m1_2712  [key=0, style=solid];
m1_2711 -> m1_24  [key=2, style=dotted];
m1_2712 -> m1_2707  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_15  [key=2, style=dotted];
m1_1 -> m1_11  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_1 -> m1_12  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_1 -> m1_13  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_16  [key=2, style=dotted];
m1_2 -> m1_17  [key=2, style=dotted];
m1_2 -> m1_4  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_2 -> m1_5  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_2 -> m1_8  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_22  [key=2, style=dotted];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_23  [key=2, style=dotted];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_24  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_18  [key=2, style=dotted];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_20  [key=2, style=dotted];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_19  [key=2, style=dotted];
m1_6 -> m1_8  [color=darkseagreen4, key=1, label=ser, style=dashed];
m1_7 -> m1_8  [key=0, style=solid];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_14  [key=0, style=solid];
m1_9 -> m1_21  [key=2, style=dotted];
m1_10 -> m1_11  [key=0, style=solid];
m1_14 -> m1_0  [color=blue, key=0, style=bold];
m1_2373 -> m1_2374  [key=0, style=solid];
m1_2374 -> m1_2375  [key=0, style=solid];
m1_2374 -> m1_2378  [key=2, style=dotted];
m1_2374 -> m1_2379  [key=2, style=dotted];
m1_2374 -> m1_2380  [key=2, style=dotted];
m1_2375 -> m1_2376  [key=0, style=solid];
m1_2375 -> m1_2381  [key=2, style=dotted];
m1_2375 -> m1_2382  [key=2, style=dotted];
m1_2375 -> m1_1296  [key=2, style=dotted];
m1_2376 -> m1_2377  [key=0, style=solid];
m1_2376 -> m1_24  [key=2, style=dotted];
m1_2377 -> m1_2373  [color=blue, key=0, style=bold];
m1_2875 -> m1_2876  [key=0, style=solid];
m1_2876 -> m1_2877  [key=0, style=solid];
m1_2876 -> m1_2395  [key=2, style=dotted];
m1_2877 -> m1_2875  [color=blue, key=0, style=bold];
m1_2961 -> m1_2962  [key=0, style=solid];
m1_2962 -> m1_2963  [key=0, style=solid];
m1_2963 -> m1_2964  [key=0, style=solid];
m1_2963 -> m1_768  [key=2, style=dotted];
m1_2963 -> m1_2966  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_2964 -> m1_2965  [key=0, style=solid];
m1_2964 -> m1_2971  [key=2, style=dotted];
m1_2964 -> m1_2968  [color=darkseagreen4, key=1, label=sw, style=dashed];
m1_2966 -> m1_2967  [key=0, style=solid];
m1_2966 -> m1_2973  [key=2, style=dotted];
m1_2966 -> m1_2974  [key=2, style=dotted];
m1_2965 -> m1_2966  [key=0, style=solid];
m1_2965 -> m1_2972  [key=2, style=dotted];
m1_2965 -> m1_2967  [color=darkseagreen4, key=1, label=jw, style=dashed];
m1_2968 -> m1_2969  [key=0, style=solid];
m1_2968 -> m1_2976  [key=2, style=dotted];
m1_2967 -> m1_2968  [key=0, style=solid];
m1_2967 -> m1_2975  [key=2, style=dotted];
m1_2969 -> m1_2970  [key=0, style=solid];
m1_2969 -> m1_24  [key=2, style=dotted];
m1_2970 -> m1_2961  [color=blue, key=0, style=bold];
m1_4180 -> m1_4181  [key=0, style=solid];
m1_4181 -> m1_4180  [color=blue, key=0, style=bold];
m1_2510 -> m1_2511  [key=0, style=solid];
m1_2511 -> m1_2512  [key=0, style=solid];
m1_2512 -> m1_2510  [color=blue, key=0, style=bold];
m1_1641 -> m1_1642  [key=0, style=solid];
m1_1642 -> m1_1641  [color=blue, key=0, style=bold];
m1_3080 -> m1_3081  [key=0, style=solid];
m1_3081 -> m1_3082  [key=0, style=solid];
m1_3081 -> m1_3085  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3081 -> m1_3081  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_3082 -> m1_3083  [key=0, style=solid];
m1_3082 -> m1_60  [key=2, style=dotted];
m1_3082 -> m1_3084  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_3083 -> m1_3080  [color=blue, key=0, style=bold];
m1_2123 -> m1_2124  [key=0, style=solid];
m1_2123 -> m1_2126  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m1_2124 -> m1_2125  [key=0, style=solid];
m1_2124 -> m1_2126  [key=0, style=solid];
m1_2126 -> m1_2127  [key=0, style=solid];
m1_2126 -> m1_2128  [key=0, style=solid];
m1_2125 -> m1_2128  [key=0, style=solid];
m1_2127 -> m1_2126  [key=0, style=solid];
m1_2127 -> m1_2127  [color=darkseagreen4, key=1, label=entry, style=dashed];
m1_2128 -> m1_2123  [color=blue, key=0, style=bold];
m1_2580 -> m1_2581  [key=0, style=solid];
m1_2581 -> m1_2582  [key=0, style=solid];
m1_2581 -> m1_2584  [key=2, style=dotted];
m1_2581 -> m1_41  [key=2, style=dotted];
m1_2582 -> m1_2583  [key=0, style=solid];
m1_2582 -> m1_42  [key=2, style=dotted];
m1_2583 -> m1_2580  [color=blue, key=0, style=bold];
m1_1170 -> m1_1171  [key=0, style=solid];
m1_1171 -> m1_1172  [key=0, style=solid];
m1_1171 -> m1_1171  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1172 -> m1_1173  [key=0, style=solid];
m1_1172 -> m1_49  [key=2, style=dotted];
m1_1172 -> m1_1174  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m1_1172 -> m1_1175  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m1_1172 -> m1_1176  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m1_1172 -> m1_1177  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m1_1172 -> m1_1178  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m1_1173 -> m1_1174  [key=0, style=solid];
m1_1173 -> m1_24  [key=2, style=dotted];
m1_1174 -> m1_1175  [key=0, style=solid];
m1_1174 -> m1_24  [key=2, style=dotted];
m1_1175 -> m1_1176  [key=0, style=solid];
m1_1175 -> m1_24  [key=2, style=dotted];
m1_1176 -> m1_1177  [key=0, style=solid];
m1_1176 -> m1_24  [key=2, style=dotted];
m1_1177 -> m1_1178  [key=0, style=solid];
m1_1177 -> m1_24  [key=2, style=dotted];
m1_1178 -> m1_1179  [key=0, style=solid];
m1_1178 -> m1_24  [key=2, style=dotted];
m1_1179 -> m1_1170  [color=blue, key=0, style=bold];
m1_1018 -> m1_1019  [key=0, style=solid];
m1_1019 -> m1_1020  [key=0, style=solid];
m1_1019 -> m1_1025  [key=2, style=dotted];
m1_1019 -> m1_129  [key=2, style=dotted];
m1_1020 -> m1_1021  [key=0, style=solid];
m1_1020 -> m1_24  [key=2, style=dotted];
m1_1021 -> m1_1022  [key=0, style=solid];
m1_1021 -> m1_49  [key=2, style=dotted];
m1_1021 -> m1_1023  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_1022 -> m1_1023  [key=0, style=solid];
m1_1022 -> m1_24  [key=2, style=dotted];
m1_1023 -> m1_1024  [key=0, style=solid];
m1_1023 -> m1_24  [key=2, style=dotted];
m1_1024 -> m1_1018  [color=blue, key=0, style=bold];
m1_284 -> m1_285  [key=0, style=solid];
m1_285 -> m1_286  [key=0, style=solid];
m1_285 -> m1_293  [key=2, style=dotted];
m1_286 -> m1_287  [key=0, style=solid];
m1_286 -> m1_294  [key=2, style=dotted];
m1_286 -> m1_134  [key=2, style=dotted];
m1_286 -> m1_196  [key=2, style=dotted];
m1_287 -> m1_288  [key=0, style=solid];
m1_287 -> m1_175  [key=2, style=dotted];
m1_287 -> m1_295  [key=2, style=dotted];
m1_287 -> m1_198  [key=2, style=dotted];
m1_288 -> m1_289  [key=0, style=solid];
m1_288 -> m1_24  [key=2, style=dotted];
m1_289 -> m1_290  [key=0, style=solid];
m1_289 -> m1_289  [color=darkorchid, key=3, label="Local variable string deserializeJson", style=bold];
m1_290 -> m1_291  [key=0, style=solid];
m1_290 -> m1_175  [key=2, style=dotted];
m1_290 -> m1_295  [key=2, style=dotted];
m1_290 -> m1_296  [key=2, style=dotted];
m1_291 -> m1_292  [key=0, style=solid];
m1_291 -> m1_24  [key=2, style=dotted];
m1_292 -> m1_284  [color=blue, key=0, style=bold];
m1_2493 -> m1_2494  [key=0, style=solid];
m1_2494 -> m1_2495  [key=0, style=solid];
m1_2494 -> m1_936  [key=2, style=dotted];
m1_2494 -> m1_2496  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_2494 -> m1_2497  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_2494 -> m1_2498  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_2495 -> m1_2496  [key=0, style=solid];
m1_2495 -> m1_24  [key=2, style=dotted];
m1_2496 -> m1_2497  [key=0, style=solid];
m1_2496 -> m1_24  [key=2, style=dotted];
m1_2497 -> m1_2498  [key=0, style=solid];
m1_2497 -> m1_24  [key=2, style=dotted];
m1_2498 -> m1_2499  [key=0, style=solid];
m1_2498 -> m1_24  [key=2, style=dotted];
m1_2499 -> m1_2493  [color=blue, key=0, style=bold];
m1_805 -> m1_806  [key=0, style=solid];
m1_806 -> m1_807  [key=0, style=solid];
m1_806 -> m1_801  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_807 -> m1_808  [key=0, style=solid];
m1_807 -> m1_49  [key=2, style=dotted];
m1_807 -> m1_809  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m1_807 -> m1_810  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m1_807 -> m1_811  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m1_808 -> m1_809  [key=0, style=solid];
m1_808 -> m1_797  [key=2, style=dotted];
m1_809 -> m1_810  [key=0, style=solid];
m1_809 -> m1_24  [key=2, style=dotted];
m1_810 -> m1_811  [key=0, style=solid];
m1_810 -> m1_797  [key=2, style=dotted];
m1_811 -> m1_812  [key=0, style=solid];
m1_811 -> m1_24  [key=2, style=dotted];
m1_812 -> m1_805  [color=blue, key=0, style=bold];
m1_1078 -> m1_1079  [key=0, style=solid];
m1_1079 -> m1_1080  [key=0, style=solid];
m1_1079 -> m1_1081  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1079 -> m1_1083  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1079 -> m1_1084  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1079 -> m1_1079  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1080 -> m1_1081  [key=0, style=solid];
m1_1080 -> m1_1089  [key=2, style=dotted];
m1_1081 -> m1_1082  [key=0, style=solid];
m1_1081 -> m1_1090  [key=2, style=dotted];
m1_1081 -> m1_1087  [color=darkseagreen4, key=1, label=javaScriptSerializerResult, style=dashed];
m1_1083 -> m1_1084  [key=0, style=solid];
m1_1083 -> m1_1075  [key=2, style=dotted];
m1_1083 -> m1_1076  [key=2, style=dotted];
m1_1083 -> m1_1077  [key=2, style=dotted];
m1_1083 -> m1_1086  [color=darkseagreen4, key=1, label=dataContractResult, style=dashed];
m1_1084 -> m1_1085  [key=0, style=solid];
m1_1084 -> m1_49  [key=2, style=dotted];
m1_1084 -> m1_1086  [color=darkseagreen4, key=1, label=jsonNetResult, style=dashed];
m1_1084 -> m1_1087  [color=darkseagreen4, key=1, label=jsonNetResult, style=dashed];
m1_1082 -> m1_1083  [key=0, style=solid];
m1_1082 -> m1_914  [key=2, style=dotted];
m1_1087 -> m1_1088  [key=0, style=solid];
m1_1087 -> m1_24  [key=2, style=dotted];
m1_1086 -> m1_1087  [key=0, style=solid];
m1_1086 -> m1_24  [key=2, style=dotted];
m1_1085 -> m1_1086  [key=0, style=solid];
m1_1085 -> m1_24  [key=2, style=dotted];
m1_1088 -> m1_1078  [color=blue, key=0, style=bold];
m1_3931 -> m1_3932  [key=0, style=solid];
m1_3932 -> m1_3933  [key=0, style=solid];
m1_3932 -> m1_3900  [key=2, style=dotted];
m1_3933 -> m1_3931  [color=blue, key=0, style=bold];
m1_1053 -> m1_1054  [key=0, style=solid];
m1_1054 -> m1_1055  [key=0, style=solid];
m1_1054 -> m1_60  [key=2, style=dotted];
m1_1054 -> m1_1056  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1055 -> m1_1053  [color=blue, key=0, style=bold];
m1_3319 -> m1_3320  [key=0, style=solid];
m1_3320 -> m1_3321  [key=0, style=solid];
m1_3320 -> m1_998  [key=2, style=dotted];
m1_3320 -> m1_3322  [key=2, style=dotted];
m1_3321 -> m1_3319  [color=blue, key=0, style=bold];
m1_871 -> m1_872  [key=0, style=solid];
m1_872 -> m1_873  [key=0, style=solid];
m1_872 -> m1_880  [key=2, style=dotted];
m1_872 -> m1_874  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m1_872 -> m1_875  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m1_872 -> m1_876  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m1_872 -> m1_877  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m1_873 -> m1_874  [key=0, style=solid];
m1_874 -> m1_875  [key=0, style=solid];
m1_875 -> m1_876  [key=0, style=solid];
m1_876 -> m1_877  [key=0, style=solid];
m1_877 -> m1_878  [key=0, style=solid];
m1_877 -> m1_41  [key=2, style=dotted];
m1_878 -> m1_879  [key=0, style=solid];
m1_878 -> m1_42  [key=2, style=dotted];
m1_879 -> m1_871  [color=blue, key=0, style=bold];
m1_4062 -> m1_4063  [key=0, style=solid];
m1_4063 -> m1_4064  [key=0, style=solid];
m1_4063 -> m1_4069  [key=2, style=dotted];
m1_4064 -> m1_4065  [key=0, style=solid];
m1_4064 -> m1_41  [key=2, style=dotted];
m1_4064 -> m1_4066  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4065 -> m1_4066  [key=0, style=solid];
m1_4065 -> m1_42  [key=2, style=dotted];
m1_4066 -> m1_4067  [key=0, style=solid];
m1_4066 -> m1_49  [key=2, style=dotted];
m1_4067 -> m1_4068  [key=0, style=solid];
m1_4067 -> m1_24  [key=2, style=dotted];
m1_4068 -> m1_4062  [color=blue, key=0, style=bold];
m1_431 -> m1_432  [key=0, style=solid];
m1_432 -> m1_433  [key=0, style=solid];
m1_432 -> m1_432  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_433 -> m1_434  [key=0, style=solid];
m1_433 -> m1_49  [key=2, style=dotted];
m1_433 -> m1_435  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m1_433 -> m1_436  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m1_433 -> m1_437  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m1_434 -> m1_435  [key=0, style=solid];
m1_434 -> m1_24  [key=2, style=dotted];
m1_435 -> m1_436  [key=0, style=solid];
m1_435 -> m1_24  [key=2, style=dotted];
m1_436 -> m1_437  [key=0, style=solid];
m1_436 -> m1_24  [key=2, style=dotted];
m1_437 -> m1_438  [key=0, style=solid];
m1_437 -> m1_24  [key=2, style=dotted];
m1_438 -> m1_431  [color=blue, key=0, style=bold];
m1_4041 -> m1_4042  [key=0, style=solid];
m1_4042 -> m1_4043  [key=0, style=solid];
m1_4042 -> m1_1109  [key=2, style=dotted];
m1_4042 -> m1_954  [key=2, style=dotted];
m1_4042 -> m1_4045  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_4042 -> m1_4048  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_4042 -> m1_4053  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_4043 -> m1_4044  [key=0, style=solid];
m1_4043 -> m1_4049  [color=darkseagreen4, key=1, label=dateFormatString, style=dashed];
m1_4043 -> m1_3968  [color=darkorchid, key=3, label="Local variable string dateFormatString", style=bold];
m1_4045 -> m1_4046  [key=0, style=solid];
m1_4045 -> m1_176  [key=2, style=dotted];
m1_4045 -> m1_4047  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4045 -> m1_4049  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4048 -> m1_4049  [key=0, style=solid];
m1_4048 -> m1_24  [key=2, style=dotted];
m1_4053 -> m1_4054  [key=0, style=solid];
m1_4053 -> m1_24  [key=2, style=dotted];
m1_4044 -> m1_4045  [key=0, style=solid];
m1_4044 -> m1_175  [key=2, style=dotted];
m1_4044 -> m1_4047  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_4049 -> m1_4050  [key=0, style=solid];
m1_4049 -> m1_16  [key=2, style=dotted];
m1_4049 -> m1_373  [key=2, style=dotted];
m1_4047 -> m1_4048  [key=0, style=solid];
m1_4047 -> m1_296  [key=2, style=dotted];
m1_4046 -> m1_4047  [key=0, style=solid];
m1_4046 -> m1_24  [key=2, style=dotted];
m1_4050 -> m1_4051  [key=0, style=solid];
m1_4050 -> m1_3357  [key=2, style=dotted];
m1_4050 -> m1_4052  [color=darkseagreen4, key=1, label=v, style=dashed];
m1_4050 -> m1_4053  [color=darkseagreen4, key=1, label=v, style=dashed];
m1_4051 -> m1_4052  [key=0, style=solid];
m1_4051 -> m1_24  [key=2, style=dotted];
m1_4052 -> m1_4053  [key=0, style=solid];
m1_4052 -> m1_375  [key=2, style=dotted];
m1_4052 -> m1_24  [key=2, style=dotted];
m1_4054 -> m1_4041  [color=blue, key=0, style=bold];
m1_2659 -> m1_2660  [key=0, style=solid];
m1_2660 -> m1_2661  [key=0, style=solid];
m1_2661 -> m1_2659  [color=blue, key=0, style=bold];
m1_3731 -> m1_3732  [key=0, style=solid];
m1_3731 -> m1_3733  [color=darkseagreen4, key=1, label=TSecond, style=dashed];
m1_3732 -> m1_3733  [key=0, style=solid];
m1_3733 -> m1_3734  [key=0, style=solid];
m1_3734 -> m1_3731  [color=blue, key=0, style=bold];
m1_4157 -> m1_4158  [key=0, style=solid];
m1_4157 -> m1_4159  [color=darkorchid, key=3, label="method methodReturn object ReadJson", style=bold];
m1_4158 -> m1_4159  [key=0, style=solid];
m1_4158 -> m1_20  [key=2, style=dotted];
m1_4159 -> m1_4160  [key=0, style=solid];
m1_4159 -> m1_4162  [key=2, style=dotted];
m1_4159 -> m1_1075  [key=2, style=dotted];
m1_4159 -> m1_3079  [key=2, style=dotted];
m1_4160 -> m1_4161  [key=0, style=solid];
m1_4161 -> m1_4157  [color=blue, key=0, style=bold];
m1_2949 -> m1_2950  [key=0, style=solid];
m1_2950 -> m1_2951  [key=0, style=solid];
m1_2950 -> m1_2948  [key=2, style=dotted];
m1_2950 -> m1_1246  [key=2, style=dotted];
m1_2950 -> m1_2960  [key=2, style=dotted];
m1_2950 -> m1_1110  [key=2, style=dotted];
m1_2950 -> m1_1708  [key=2, style=dotted];
m1_2950 -> m1_2954  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_2950 -> m1_2955  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_2950 -> m1_2956  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_2950 -> m1_2957  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_2950 -> m1_2958  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_2951 -> m1_2952  [key=0, style=solid];
m1_2951 -> m1_41  [key=2, style=dotted];
m1_2951 -> m1_2953  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_2954 -> m1_2955  [key=0, style=solid];
m1_2954 -> m1_24  [key=2, style=dotted];
m1_2955 -> m1_2956  [key=0, style=solid];
m1_2955 -> m1_24  [key=2, style=dotted];
m1_2956 -> m1_2957  [key=0, style=solid];
m1_2956 -> m1_24  [key=2, style=dotted];
m1_2957 -> m1_2958  [key=0, style=solid];
m1_2957 -> m1_24  [key=2, style=dotted];
m1_2958 -> m1_2959  [key=0, style=solid];
m1_2958 -> m1_24  [key=2, style=dotted];
m1_2952 -> m1_2953  [key=0, style=solid];
m1_2952 -> m1_42  [key=2, style=dotted];
m1_2953 -> m1_2954  [key=0, style=solid];
m1_2953 -> m1_49  [key=2, style=dotted];
m1_2953 -> m1_2955  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_2953 -> m1_2956  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_2953 -> m1_2957  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_2953 -> m1_2958  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_2959 -> m1_2949  [color=blue, key=0, style=bold];
m1_2331 -> m1_2332  [key=0, style=solid];
m1_2332 -> m1_2331  [color=blue, key=0, style=bold];
m1_2456 -> m1_2457  [key=0, style=solid];
m1_2456 -> m1_2458  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_2457 -> m1_2458  [key=0, style=solid];
m1_2458 -> m1_2459  [key=0, style=solid];
m1_2459 -> m1_2456  [color=blue, key=0, style=bold];
m1_229 -> m1_230  [key=0, style=solid];
m1_230 -> m1_231  [key=0, style=solid];
m1_230 -> m1_49  [key=2, style=dotted];
m1_231 -> m1_232  [key=0, style=solid];
m1_231 -> m1_24  [key=2, style=dotted];
m1_232 -> m1_233  [key=0, style=solid];
m1_232 -> m1_235  [key=2, style=dotted];
m1_232 -> m1_236  [key=2, style=dotted];
m1_233 -> m1_234  [key=0, style=solid];
m1_233 -> m1_24  [key=2, style=dotted];
m1_234 -> m1_229  [color=blue, key=0, style=bold];
m1_2863 -> m1_2864  [key=0, style=solid];
m1_2864 -> m1_2865  [key=0, style=solid];
m1_2864 -> m1_2395  [key=2, style=dotted];
m1_2865 -> m1_2863  [color=blue, key=0, style=bold];
m1_2831 -> m1_2832  [key=0, style=solid];
m1_2832 -> m1_2833  [key=0, style=solid];
m1_2832 -> m1_2827  [key=2, style=dotted];
m1_2832 -> m1_2834  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_2832 -> m1_2835  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_2832 -> m1_2838  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_2832 -> m1_2839  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_2833 -> m1_2834  [key=0, style=solid];
m1_2833 -> m1_322  [key=2, style=dotted];
m1_2834 -> m1_2835  [key=0, style=solid];
m1_2834 -> m1_322  [key=2, style=dotted];
m1_2835 -> m1_2836  [key=0, style=solid];
m1_2835 -> m1_41  [key=2, style=dotted];
m1_2835 -> m1_2837  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_2838 -> m1_2839  [key=0, style=solid];
m1_2838 -> m1_24  [key=2, style=dotted];
m1_2839 -> m1_2840  [key=0, style=solid];
m1_2839 -> m1_24  [key=2, style=dotted];
m1_2836 -> m1_2837  [key=0, style=solid];
m1_2836 -> m1_42  [key=2, style=dotted];
m1_2837 -> m1_2838  [key=0, style=solid];
m1_2837 -> m1_49  [key=2, style=dotted];
m1_2837 -> m1_2839  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_2837 -> m1_2840  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_2837 -> m1_2841  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_2840 -> m1_2841  [key=0, style=solid];
m1_2840 -> m1_24  [key=2, style=dotted];
m1_2841 -> m1_2842  [key=0, style=solid];
m1_2841 -> m1_24  [key=2, style=dotted];
m1_2842 -> m1_2831  [color=blue, key=0, style=bold];
m1_1660 -> m1_1661  [key=0, style=solid];
m1_1661 -> m1_1662  [key=0, style=solid];
m1_1661 -> m1_1661  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1662 -> m1_1663  [key=0, style=solid];
m1_1662 -> m1_175  [key=2, style=dotted];
m1_1662 -> m1_296  [key=2, style=dotted];
m1_1662 -> m1_1664  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_1662 -> m1_1665  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_1663 -> m1_1664  [key=0, style=solid];
m1_1663 -> m1_24  [key=2, style=dotted];
m1_1664 -> m1_1665  [key=0, style=solid];
m1_1664 -> m1_24  [key=2, style=dotted];
m1_1665 -> m1_1666  [key=0, style=solid];
m1_1665 -> m1_24  [key=2, style=dotted];
m1_1666 -> m1_1660  [color=blue, key=0, style=bold];
m1_1756 -> m1_1757  [key=0, style=solid];
m1_1757 -> m1_1758  [key=0, style=solid];
m1_1757 -> m1_1757  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1758 -> m1_1759  [key=0, style=solid];
m1_1758 -> m1_49  [key=2, style=dotted];
m1_1759 -> m1_1760  [key=0, style=solid];
m1_1759 -> m1_1764  [key=2, style=dotted];
m1_1759 -> m1_1761  [color=darkseagreen4, key=1, label=a, style=dashed];
m1_1759 -> m1_1762  [color=darkseagreen4, key=1, label=a, style=dashed];
m1_1760 -> m1_1761  [key=0, style=solid];
m1_1760 -> m1_24  [key=2, style=dotted];
m1_1761 -> m1_1762  [key=0, style=solid];
m1_1761 -> m1_24  [key=2, style=dotted];
m1_1762 -> m1_1763  [key=0, style=solid];
m1_1762 -> m1_24  [key=2, style=dotted];
m1_1763 -> m1_1756  [color=blue, key=0, style=bold];
m1_3806 -> m1_3807  [key=0, style=solid];
m1_3807 -> m1_3808  [key=0, style=solid];
m1_3807 -> m1_740  [key=2, style=dotted];
m1_3807 -> m1_1246  [key=2, style=dotted];
m1_3807 -> m1_3809  [color=darkseagreen4, key=1, label=john, style=dashed];
m1_3807 -> m1_3810  [color=darkseagreen4, key=1, label=john, style=dashed];
m1_3807 -> m1_3811  [color=darkseagreen4, key=1, label=john, style=dashed];
m1_3808 -> m1_3809  [key=0, style=solid];
m1_3808 -> m1_740  [key=2, style=dotted];
m1_3808 -> m1_1246  [key=2, style=dotted];
m1_3808 -> m1_3810  [color=darkseagreen4, key=1, label=jane, style=dashed];
m1_3808 -> m1_3811  [color=darkseagreen4, key=1, label=jane, style=dashed];
m1_3809 -> m1_3810  [key=0, style=solid];
m1_3810 -> m1_3811  [key=0, style=solid];
m1_3811 -> m1_3812  [key=0, style=solid];
m1_3811 -> m1_134  [key=2, style=dotted];
m1_3812 -> m1_3813  [key=0, style=solid];
m1_3812 -> m1_175  [key=2, style=dotted];
m1_3812 -> m1_542  [key=2, style=dotted];
m1_3812 -> m1_176  [key=2, style=dotted];
m1_3813 -> m1_3814  [key=0, style=solid];
m1_3813 -> m1_42  [key=2, style=dotted];
m1_3814 -> m1_3806  [color=blue, key=0, style=bold];
m1_2068 -> m1_2069  [key=0, style=solid];
m1_2069 -> m1_2070  [key=0, style=solid];
m1_2069 -> m1_2069  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_2070 -> m1_2071  [key=0, style=solid];
m1_2070 -> m1_49  [key=2, style=dotted];
m1_2071 -> m1_2072  [key=0, style=solid];
m1_2071 -> m1_24  [key=2, style=dotted];
m1_2072 -> m1_2068  [color=blue, key=0, style=bold];
m1_1847 -> m1_1848  [key=0, style=solid];
m1_1848 -> m1_1849  [key=0, style=solid];
m1_1848 -> m1_1852  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1848 -> m1_149  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1849 -> m1_1850  [key=0, style=solid];
m1_1849 -> m1_60  [key=2, style=dotted];
m1_1849 -> m1_1851  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1850 -> m1_1847  [color=blue, key=0, style=bold];
m1_4114 -> m1_4115  [key=0, style=solid];
m1_4115 -> m1_4116  [key=0, style=solid];
m1_4115 -> m1_4120  [key=2, style=dotted];
m1_4116 -> m1_4117  [key=0, style=solid];
m1_4116 -> m1_129  [key=2, style=dotted];
m1_4117 -> m1_4118  [key=0, style=solid];
m1_4117 -> m1_49  [key=2, style=dotted];
m1_4118 -> m1_4119  [key=0, style=solid];
m1_4118 -> m1_24  [key=2, style=dotted];
m1_4119 -> m1_4114  [color=blue, key=0, style=bold];
m1_43 -> m1_44  [key=0, style=solid];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_49  [key=2, style=dotted];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_24  [key=2, style=dotted];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_49  [key=2, style=dotted];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_24  [key=2, style=dotted];
m1_48 -> m1_43  [color=blue, key=0, style=bold];
m1_3901 -> m1_3902  [key=0, style=solid];
m1_3902 -> m1_3903  [key=0, style=solid];
m1_3902 -> m1_3900  [key=2, style=dotted];
m1_3903 -> m1_3901  [color=blue, key=0, style=bold];
m1_2073 -> m1_2074  [key=0, style=solid];
m1_2074 -> m1_2075  [key=0, style=solid];
m1_2074 -> m1_2084  [key=2, style=dotted];
m1_2074 -> m1_2076  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_2074 -> m1_2077  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_2074 -> m1_2080  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_2075 -> m1_2076  [key=0, style=solid];
m1_2075 -> m1_2085  [key=2, style=dotted];
m1_2076 -> m1_2077  [key=0, style=solid];
m1_2076 -> m1_1246  [key=2, style=dotted];
m1_2077 -> m1_2078  [key=0, style=solid];
m1_2077 -> m1_2086  [key=2, style=dotted];
m1_2080 -> m1_2081  [key=0, style=solid];
m1_2080 -> m1_915  [key=2, style=dotted];
m1_2078 -> m1_2079  [key=0, style=solid];
m1_2078 -> m1_834  [key=2, style=dotted];
m1_2078 -> m1_2080  [color=darkseagreen4, key=1, label=ms, style=dashed];
m1_2078 -> m1_2081  [color=darkseagreen4, key=1, label=ms, style=dashed];
m1_2079 -> m1_2080  [key=0, style=solid];
m1_2079 -> m1_914  [key=2, style=dotted];
m1_2081 -> m1_2082  [key=0, style=solid];
m1_2081 -> m1_916  [key=2, style=dotted];
m1_2082 -> m1_2083  [key=0, style=solid];
m1_2082 -> m1_917  [key=2, style=dotted];
m1_2083 -> m1_2073  [color=blue, key=0, style=bold];
m1_3779 -> m1_3780  [key=0, style=solid];
m1_3780 -> m1_3781  [key=0, style=solid];
m1_3780 -> m1_16  [key=2, style=dotted];
m1_3780 -> m1_373  [key=2, style=dotted];
m1_3780 -> m1_3783  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_3781 -> m1_3782  [key=0, style=solid];
m1_3781 -> m1_175  [key=2, style=dotted];
m1_3783 -> m1_3784  [key=0, style=solid];
m1_3783 -> m1_20  [key=2, style=dotted];
m1_3782 -> m1_3783  [key=0, style=solid];
m1_3782 -> m1_833  [key=2, style=dotted];
m1_3784 -> m1_3785  [key=0, style=solid];
m1_3784 -> m1_24  [key=2, style=dotted];
m1_3785 -> m1_3779  [color=blue, key=0, style=bold];
m1_993 -> m1_994  [key=0, style=solid];
m1_994 -> m1_995  [key=0, style=solid];
m1_994 -> m1_956  [color=darkorchid, key=3, label="Local variable string value", style=bold];
m1_995 -> m1_996  [key=0, style=solid];
m1_995 -> m1_936  [key=2, style=dotted];
m1_996 -> m1_997  [key=0, style=solid];
m1_996 -> m1_998  [key=2, style=dotted];
m1_996 -> m1_24  [key=2, style=dotted];
m1_997 -> m1_993  [color=blue, key=0, style=bold];
m1_1928 -> m1_1929  [key=0, style=solid];
m1_1929 -> m1_1930  [key=0, style=solid];
m1_1929 -> m1_196  [key=2, style=dotted];
m1_1929 -> m1_1931  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m1_1929 -> m1_1932  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m1_1930 -> m1_1931  [key=0, style=solid];
m1_1930 -> m1_1246  [key=2, style=dotted];
m1_1930 -> m1_832  [key=2, style=dotted];
m1_1931 -> m1_1932  [key=0, style=solid];
m1_1931 -> m1_1246  [key=2, style=dotted];
m1_1931 -> m1_832  [key=2, style=dotted];
m1_1932 -> m1_1933  [key=0, style=solid];
m1_1932 -> m1_41  [key=2, style=dotted];
m1_1933 -> m1_1934  [key=0, style=solid];
m1_1933 -> m1_42  [key=2, style=dotted];
m1_1934 -> m1_1928  [color=blue, key=0, style=bold];
m1_2612 -> m1_2613  [key=0, style=solid];
m1_2613 -> m1_2614  [key=0, style=solid];
m1_2613 -> m1_49  [key=2, style=dotted];
m1_2614 -> m1_2615  [key=0, style=solid];
m1_2614 -> m1_24  [key=2, style=dotted];
m1_2615 -> m1_2612  [color=blue, key=0, style=bold];
m1_4005 -> m1_4006  [key=0, style=solid];
m1_4006 -> m1_4007  [key=0, style=solid];
m1_4006 -> m1_954  [key=2, style=dotted];
m1_4006 -> m1_4009  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_4006 -> m1_4012  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_4007 -> m1_4008  [key=0, style=solid];
m1_4007 -> m1_3968  [color=darkorchid, key=3, label="Local variable string dateFormatString", style=bold];
m1_4009 -> m1_4010  [key=0, style=solid];
m1_4009 -> m1_196  [key=2, style=dotted];
m1_4009 -> m1_176  [key=2, style=dotted];
m1_4009 -> m1_4011  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4012 -> m1_4013  [key=0, style=solid];
m1_4012 -> m1_1681  [key=2, style=dotted];
m1_4012 -> m1_24  [key=2, style=dotted];
m1_4008 -> m1_4009  [key=0, style=solid];
m1_4008 -> m1_175  [key=2, style=dotted];
m1_4008 -> m1_4011  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_4011 -> m1_4012  [key=0, style=solid];
m1_4011 -> m1_296  [key=2, style=dotted];
m1_4010 -> m1_4011  [key=0, style=solid];
m1_4010 -> m1_42  [key=2, style=dotted];
m1_4013 -> m1_4005  [color=blue, key=0, style=bold];
m1_1559 -> m1_1560  [key=0, style=solid];
m1_1560 -> m1_1561  [key=0, style=solid];
m1_1561 -> m1_1559  [color=blue, key=0, style=bold];
m1_2500 -> m1_2501  [key=0, style=solid];
m1_2501 -> m1_2502  [key=0, style=solid];
m1_2501 -> m1_310  [key=2, style=dotted];
m1_2501 -> m1_41  [key=2, style=dotted];
m1_2501 -> m1_2503  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m1_2502 -> m1_2503  [key=0, style=solid];
m1_2502 -> m1_42  [key=2, style=dotted];
m1_2503 -> m1_2504  [key=0, style=solid];
m1_2503 -> m1_49  [key=2, style=dotted];
m1_2503 -> m1_2505  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_2503 -> m1_2506  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_2503 -> m1_2507  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_2504 -> m1_2505  [key=0, style=solid];
m1_2504 -> m1_24  [key=2, style=dotted];
m1_2505 -> m1_2506  [key=0, style=solid];
m1_2505 -> m1_2509  [key=2, style=dotted];
m1_2505 -> m1_22  [key=2, style=dotted];
m1_2506 -> m1_2507  [key=0, style=solid];
m1_2506 -> m1_2509  [key=2, style=dotted];
m1_2506 -> m1_22  [key=2, style=dotted];
m1_2507 -> m1_2508  [key=0, style=solid];
m1_2507 -> m1_2509  [key=2, style=dotted];
m1_2507 -> m1_22  [key=2, style=dotted];
m1_2508 -> m1_2500  [color=blue, key=0, style=bold];
m1_1701 -> m1_1702  [key=0, style=solid];
m1_1702 -> m1_1703  [key=0, style=solid];
m1_1702 -> m1_1708  [key=2, style=dotted];
m1_1702 -> m1_1704  [color=darkseagreen4, key=1, label=uri, style=dashed];
m1_1702 -> m1_1706  [color=darkseagreen4, key=1, label=uri, style=dashed];
m1_1703 -> m1_1704  [key=0, style=solid];
m1_1703 -> m1_129  [key=2, style=dotted];
m1_1703 -> m1_1705  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1704 -> m1_1705  [key=0, style=solid];
m1_1704 -> m1_1709  [key=2, style=dotted];
m1_1704 -> m1_24  [key=2, style=dotted];
m1_1706 -> m1_1707  [key=0, style=solid];
m1_1706 -> m1_24  [key=2, style=dotted];
m1_1705 -> m1_1706  [key=0, style=solid];
m1_1705 -> m1_49  [key=2, style=dotted];
m1_1707 -> m1_1701  [color=blue, key=0, style=bold];
m1_2412 -> m1_2413  [key=0, style=solid];
m1_2413 -> m1_2414  [key=0, style=solid];
m1_2413 -> m1_196  [key=2, style=dotted];
m1_2413 -> m1_2415  [color=darkseagreen4, key=1, label=reference, style=dashed];
m1_2413 -> m1_2419  [color=darkseagreen4, key=1, label=reference, style=dashed];
m1_2414 -> m1_2415  [key=0, style=solid];
m1_2414 -> m1_832  [key=2, style=dotted];
m1_2415 -> m1_2416  [key=0, style=solid];
m1_2415 -> m1_832  [key=2, style=dotted];
m1_2419 -> m1_2420  [key=0, style=solid];
m1_2419 -> m1_832  [key=2, style=dotted];
m1_2416 -> m1_2417  [key=0, style=solid];
m1_2416 -> m1_196  [key=2, style=dotted];
m1_2416 -> m1_2418  [color=darkseagreen4, key=1, label=child, style=dashed];
m1_2416 -> m1_2419  [color=darkseagreen4, key=1, label=child, style=dashed];
m1_2416 -> m1_2420  [color=darkseagreen4, key=1, label=child, style=dashed];
m1_2417 -> m1_2418  [key=0, style=solid];
m1_2417 -> m1_832  [key=2, style=dotted];
m1_2418 -> m1_2419  [key=0, style=solid];
m1_2418 -> m1_832  [key=2, style=dotted];
m1_2420 -> m1_2421  [key=0, style=solid];
m1_2420 -> m1_41  [key=2, style=dotted];
m1_2420 -> m1_2424  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_2421 -> m1_2422  [key=0, style=solid];
m1_2421 -> m1_60  [key=2, style=dotted];
m1_2421 -> m1_2423  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_2422 -> m1_2412  [color=blue, key=0, style=bold];
m1_184 -> m1_185  [key=0, style=solid];
m1_184 -> m1_184  [color=darkorchid, key=3, label="method methodReturn string ResolveDictionaryKey", style=bold];
m1_185 -> m1_186  [key=0, style=solid];
m1_186 -> m1_184  [color=blue, key=0, style=bold];
m1_3413 -> m1_3414  [key=0, style=solid];
m1_3414 -> m1_3415  [key=0, style=solid];
m1_3414 -> m1_3412  [key=2, style=dotted];
m1_3415 -> m1_3416  [key=0, style=solid];
m1_3415 -> m1_129  [key=2, style=dotted];
m1_3416 -> m1_3417  [key=0, style=solid];
m1_3416 -> m1_24  [key=2, style=dotted];
m1_3417 -> m1_3413  [color=blue, key=0, style=bold];
m1_3104 -> m1_3105  [key=0, style=solid];
m1_3105 -> m1_3106  [key=0, style=solid];
m1_3105 -> m1_3109  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3105 -> m1_3105  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_3106 -> m1_3107  [key=0, style=solid];
m1_3106 -> m1_60  [key=2, style=dotted];
m1_3106 -> m1_3108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_3107 -> m1_3104  [color=blue, key=0, style=bold];
m1_3907 -> m1_3908  [key=0, style=solid];
m1_3908 -> m1_3909  [key=0, style=solid];
m1_3908 -> m1_3900  [key=2, style=dotted];
m1_3909 -> m1_3907  [color=blue, key=0, style=bold];
m1_3770 -> m1_3771  [key=0, style=solid];
m1_3771 -> m1_3772  [key=0, style=solid];
m1_3771 -> m1_3778  [key=2, style=dotted];
m1_3771 -> m1_3774  [color=darkseagreen4, key=1, label=s1, style=dashed];
m1_3771 -> m1_3775  [color=darkseagreen4, key=1, label=s1, style=dashed];
m1_3772 -> m1_3773  [key=0, style=solid];
m1_3772 -> m1_129  [key=2, style=dotted];
m1_3774 -> m1_3775  [key=0, style=solid];
m1_3774 -> m1_24  [key=2, style=dotted];
m1_3775 -> m1_3776  [key=0, style=solid];
m1_3775 -> m1_3777  [key=0, style=solid];
m1_3773 -> m1_3774  [key=0, style=solid];
m1_3773 -> m1_49  [key=2, style=dotted];
m1_3773 -> m1_3776  [color=darkseagreen4, key=1, label=s2, style=dashed];
m1_3776 -> m1_3775  [key=0, style=solid];
m1_3776 -> m1_2110  [key=2, style=dotted];
m1_3776 -> m1_22  [key=2, style=dotted];
m1_3777 -> m1_3770  [color=blue, key=0, style=bold];
m1_1026 -> m1_1027  [key=0, style=solid];
m1_1027 -> m1_1028  [key=0, style=solid];
m1_1027 -> m1_1027  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_1028 -> m1_1029  [key=0, style=solid];
m1_1028 -> m1_465  [key=2, style=dotted];
m1_1029 -> m1_1030  [key=0, style=solid];
m1_1029 -> m1_1029  [color=darkorchid, key=3, label="Local variable string s", style=bold];
m1_1030 -> m1_1031  [key=0, style=solid];
m1_1030 -> m1_1030  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_1031 -> m1_1026  [color=blue, key=0, style=bold];
m1_2396 -> m1_2397  [key=0, style=solid];
m1_2397 -> m1_2398  [key=0, style=solid];
m1_2398 -> m1_2396  [color=blue, key=0, style=bold];
m1_3928 -> m1_3929  [key=0, style=solid];
m1_3929 -> m1_3930  [key=0, style=solid];
m1_3929 -> m1_3900  [key=2, style=dotted];
m1_3930 -> m1_3928  [color=blue, key=0, style=bold];
m1_2012 -> m1_2013  [key=0, style=solid];
m1_2013 -> m1_2014  [key=0, style=solid];
m1_2013 -> m1_49  [key=2, style=dotted];
m1_2014 -> m1_2015  [key=0, style=solid];
m1_2014 -> m1_1399  [key=2, style=dotted];
m1_2014 -> m1_24  [key=2, style=dotted];
m1_2015 -> m1_2016  [key=0, style=solid];
m1_2015 -> m1_49  [key=2, style=dotted];
m1_2016 -> m1_2017  [key=0, style=solid];
m1_2016 -> m1_1399  [key=2, style=dotted];
m1_2016 -> m1_24  [key=2, style=dotted];
m1_2017 -> m1_2012  [color=blue, key=0, style=bold];
m1_3755 -> m1_3756  [key=0, style=solid];
m1_3756 -> m1_3757  [key=0, style=solid];
m1_3756 -> m1_196  [key=2, style=dotted];
m1_3756 -> m1_1102  [key=2, style=dotted];
m1_3756 -> m1_376  [key=2, style=dotted];
m1_3756 -> m1_1110  [key=2, style=dotted];
m1_3756 -> m1_3758  [color=darkseagreen4, key=1, label=dates, style=dashed];
m1_3757 -> m1_3758  [key=0, style=solid];
m1_3757 -> m1_41  [key=2, style=dotted];
m1_3757 -> m1_3759  [color=darkseagreen4, key=1, label=expected, style=dashed];
m1_3758 -> m1_3759  [key=0, style=solid];
m1_3758 -> m1_175  [key=2, style=dotted];
m1_3758 -> m1_198  [key=2, style=dotted];
m1_3759 -> m1_3760  [key=0, style=solid];
m1_3759 -> m1_24  [key=2, style=dotted];
m1_3760 -> m1_3755  [color=blue, key=0, style=bold];
m1_3427 -> m1_3428  [key=0, style=solid];
m1_3428 -> m1_3429  [key=0, style=solid];
m1_3428 -> m1_196  [key=2, style=dotted];
m1_3428 -> m1_376  [key=2, style=dotted];
m1_3429 -> m1_3430  [key=0, style=solid];
m1_3429 -> m1_175  [key=2, style=dotted];
m1_3429 -> m1_198  [key=2, style=dotted];
m1_3429 -> m1_3431  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3430 -> m1_3431  [key=0, style=solid];
m1_3430 -> m1_42  [key=2, style=dotted];
m1_3431 -> m1_3432  [key=0, style=solid];
m1_3431 -> m1_49  [key=2, style=dotted];
m1_3431 -> m1_3433  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m1_3431 -> m1_3434  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m1_3432 -> m1_3433  [key=0, style=solid];
m1_3432 -> m1_24  [key=2, style=dotted];
m1_3433 -> m1_3434  [key=0, style=solid];
m1_3433 -> m1_376  [key=2, style=dotted];
m1_3433 -> m1_24  [key=2, style=dotted];
m1_3434 -> m1_3435  [key=0, style=solid];
m1_3434 -> m1_376  [key=2, style=dotted];
m1_3434 -> m1_24  [key=2, style=dotted];
m1_3435 -> m1_3427  [color=blue, key=0, style=bold];
m1_64 -> m1_65  [key=0, style=solid];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_60  [key=2, style=dotted];
m1_65 -> m1_67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_66 -> m1_64  [color=blue, key=0, style=bold];
m1_1005 -> m1_1006  [key=0, style=solid];
m1_1006 -> m1_1007  [key=0, style=solid];
m1_1006 -> m1_1011  [key=2, style=dotted];
m1_1006 -> m1_129  [key=2, style=dotted];
m1_1007 -> m1_1008  [key=0, style=solid];
m1_1007 -> m1_49  [key=2, style=dotted];
m1_1007 -> m1_1009  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_1008 -> m1_1009  [key=0, style=solid];
m1_1008 -> m1_24  [key=2, style=dotted];
m1_1009 -> m1_1010  [key=0, style=solid];
m1_1009 -> m1_24  [key=2, style=dotted];
m1_1010 -> m1_1005  [color=blue, key=0, style=bold];
m1_1139 -> m1_1140  [key=0, style=solid];
m1_1140 -> m1_1141  [key=0, style=solid];
m1_1140 -> m1_954  [key=2, style=dotted];
m1_1140 -> m1_1147  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_1141 -> m1_1142  [key=0, style=solid];
m1_1141 -> m1_1144  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m1_1141 -> m1_1146  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m1_1147 -> m1_1148  [key=0, style=solid];
m1_1147 -> m1_24  [key=2, style=dotted];
m1_1142 -> m1_1143  [key=0, style=solid];
m1_1142 -> m1_175  [key=2, style=dotted];
m1_1142 -> m1_1144  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_1142 -> m1_1146  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_1144 -> m1_1145  [key=0, style=solid];
m1_1144 -> m1_176  [key=2, style=dotted];
m1_1144 -> m1_1146  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1146 -> m1_1147  [key=0, style=solid];
m1_1146 -> m1_1150  [key=2, style=dotted];
m1_1146 -> m1_1146  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m1_1143 -> m1_1144  [key=0, style=solid];
m1_1143 -> m1_1149  [key=2, style=dotted];
m1_1143 -> m1_322  [key=2, style=dotted];
m1_1145 -> m1_1146  [key=0, style=solid];
m1_1145 -> m1_24  [key=2, style=dotted];
m1_1148 -> m1_1139  [color=blue, key=0, style=bold];
m1_2782 -> m1_2783  [key=0, style=solid];
m1_2783 -> m1_2784  [key=0, style=solid];
m1_2783 -> m1_2785  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_2783 -> m1_2783  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_2784 -> m1_2785  [key=0, style=solid];
m1_2784 -> m1_49  [key=2, style=dotted];
m1_2784 -> m1_2786  [color=darkseagreen4, key=1, label=withoutParameterisedConstructor, style=dashed];
m1_2785 -> m1_2786  [key=0, style=solid];
m1_2785 -> m1_49  [key=2, style=dotted];
m1_2786 -> m1_2787  [key=0, style=solid];
m1_2786 -> m1_24  [key=2, style=dotted];
m1_2787 -> m1_2782  [color=blue, key=0, style=bold];
m1_3326 -> m1_3327  [key=0, style=solid];
m1_3327 -> m1_3328  [key=0, style=solid];
m1_3327 -> m1_134  [key=2, style=dotted];
m1_3327 -> m1_3334  [color=darkseagreen4, key=1, label=values, style=dashed];
m1_3327 -> m1_3335  [color=darkseagreen4, key=1, label=values, style=dashed];
m1_3327 -> m1_3336  [color=darkseagreen4, key=1, label=values, style=dashed];
m1_3327 -> m1_3337  [color=darkseagreen4, key=1, label=values, style=dashed];
m1_3328 -> m1_3329  [key=0, style=solid];
m1_3328 -> m1_16  [key=2, style=dotted];
m1_3328 -> m1_373  [key=2, style=dotted];
m1_3328 -> m1_3331  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_3328 -> m1_3333  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_3334 -> m1_3330  [key=0, style=solid];
m1_3334 -> m1_322  [key=2, style=dotted];
m1_3335 -> m1_3336  [key=0, style=solid];
m1_3335 -> m1_24  [key=2, style=dotted];
m1_3336 -> m1_3337  [key=0, style=solid];
m1_3336 -> m1_24  [key=2, style=dotted];
m1_3337 -> m1_3338  [key=0, style=solid];
m1_3337 -> m1_24  [key=2, style=dotted];
m1_3329 -> m1_3330  [key=0, style=solid];
m1_3331 -> m1_3332  [key=0, style=solid];
m1_3331 -> m1_3335  [key=0, style=solid];
m1_3331 -> m1_18  [key=2, style=dotted];
m1_3333 -> m1_3334  [key=0, style=solid];
m1_3333 -> m1_20  [key=2, style=dotted];
m1_3330 -> m1_3331  [key=0, style=solid];
m1_3330 -> m1_3335  [key=0, style=solid];
m1_3332 -> m1_3333  [key=0, style=solid];
m1_3332 -> m1_19  [key=2, style=dotted];
m1_3338 -> m1_3326  [color=blue, key=0, style=bold];
m1_311 -> m1_312  [key=0, style=solid];
m1_312 -> m1_313  [key=0, style=solid];
m1_312 -> m1_307  [key=2, style=dotted];
m1_312 -> m1_314  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_312 -> m1_315  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_313 -> m1_314  [key=0, style=solid];
m1_314 -> m1_315  [key=0, style=solid];
m1_314 -> m1_321  [key=2, style=dotted];
m1_314 -> m1_322  [key=2, style=dotted];
m1_315 -> m1_316  [key=0, style=solid];
m1_315 -> m1_41  [key=2, style=dotted];
m1_315 -> m1_317  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_316 -> m1_317  [key=0, style=solid];
m1_316 -> m1_42  [key=2, style=dotted];
m1_317 -> m1_318  [key=0, style=solid];
m1_317 -> m1_49  [key=2, style=dotted];
m1_317 -> m1_319  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_318 -> m1_319  [key=0, style=solid];
m1_318 -> m1_24  [key=2, style=dotted];
m1_319 -> m1_320  [key=0, style=solid];
m1_319 -> m1_24  [key=2, style=dotted];
m1_320 -> m1_311  [color=blue, key=0, style=bold];
m1_3531 -> m1_3532  [key=0, style=solid];
m1_3532 -> m1_3533  [key=0, style=solid];
m1_3532 -> m1_3532  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_3533 -> m1_3534  [key=0, style=solid];
m1_3533 -> m1_49  [key=2, style=dotted];
m1_3533 -> m1_3535  [color=darkseagreen4, key=1, label=exception, style=dashed];
m1_3533 -> m1_3536  [color=darkseagreen4, key=1, label=exception, style=dashed];
m1_3534 -> m1_3535  [key=0, style=solid];
m1_3534 -> m1_797  [key=2, style=dotted];
m1_3535 -> m1_3536  [key=0, style=solid];
m1_3535 -> m1_746  [key=2, style=dotted];
m1_3536 -> m1_3537  [key=0, style=solid];
m1_3536 -> m1_24  [key=2, style=dotted];
m1_3537 -> m1_3531  [color=blue, key=0, style=bold];
m1_412 -> m1_413  [key=0, style=solid];
m1_413 -> m1_414  [key=0, style=solid];
m1_413 -> m1_420  [key=2, style=dotted];
m1_413 -> m1_416  [color=darkseagreen4, key=1, label=input, style=dashed];
m1_413 -> m1_417  [color=darkseagreen4, key=1, label=input, style=dashed];
m1_413 -> m1_418  [color=darkseagreen4, key=1, label=input, style=dashed];
m1_414 -> m1_415  [key=0, style=solid];
m1_414 -> m1_129  [key=2, style=dotted];
m1_416 -> m1_417  [key=0, style=solid];
m1_416 -> m1_24  [key=2, style=dotted];
m1_417 -> m1_418  [key=0, style=solid];
m1_417 -> m1_24  [key=2, style=dotted];
m1_418 -> m1_419  [key=0, style=solid];
m1_418 -> m1_24  [key=2, style=dotted];
m1_415 -> m1_416  [key=0, style=solid];
m1_415 -> m1_49  [key=2, style=dotted];
m1_415 -> m1_417  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m1_415 -> m1_418  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m1_419 -> m1_412  [color=blue, key=0, style=bold];
m1_2000 -> m1_2001  [key=0, style=solid];
m1_2001 -> m1_2002  [key=0, style=solid];
m1_2001 -> m1_2010  [key=2, style=dotted];
m1_2001 -> m1_2003  [color=darkseagreen4, key=1, label=g, style=dashed];
m1_2001 -> m1_2004  [color=darkseagreen4, key=1, label=g, style=dashed];
m1_2001 -> m1_2005  [color=darkseagreen4, key=1, label=g, style=dashed];
m1_2002 -> m1_2003  [key=0, style=solid];
m1_2002 -> m1_2011  [key=2, style=dotted];
m1_2002 -> m1_1991  [key=2, style=dotted];
m1_2003 -> m1_2004  [key=0, style=solid];
m1_2003 -> m1_2011  [key=2, style=dotted];
m1_2003 -> m1_1991  [key=2, style=dotted];
m1_2004 -> m1_2005  [key=0, style=solid];
m1_2005 -> m1_2006  [key=0, style=solid];
m1_2005 -> m1_1997  [key=2, style=dotted];
m1_2005 -> m1_2007  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_2006 -> m1_2007  [key=0, style=solid];
m1_2006 -> m1_42  [key=2, style=dotted];
m1_2007 -> m1_2008  [key=0, style=solid];
m1_2007 -> m1_49  [key=2, style=dotted];
m1_2008 -> m1_2009  [key=0, style=solid];
m1_2008 -> m1_24  [key=2, style=dotted];
m1_2009 -> m1_2000  [color=blue, key=0, style=bold];
m1_694 -> m1_695  [key=0, style=solid];
m1_694 -> m1_696  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_694 -> m1_697  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_694 -> m1_698  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_694 -> m1_699  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_694 -> m1_700  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_695 -> m1_696  [key=0, style=solid];
m1_695 -> m1_702  [key=2, style=dotted];
m1_696 -> m1_697  [key=0, style=solid];
m1_696 -> m1_703  [key=2, style=dotted];
m1_697 -> m1_698  [key=0, style=solid];
m1_697 -> m1_704  [key=2, style=dotted];
m1_698 -> m1_699  [key=0, style=solid];
m1_698 -> m1_704  [key=2, style=dotted];
m1_699 -> m1_700  [key=0, style=solid];
m1_699 -> m1_704  [key=2, style=dotted];
m1_700 -> m1_701  [key=0, style=solid];
m1_700 -> m1_704  [key=2, style=dotted];
m1_701 -> m1_694  [color=blue, key=0, style=bold];
m1_1372 -> m1_1373  [key=0, style=solid];
m1_1373 -> m1_1374  [key=0, style=solid];
m1_1373 -> m1_1376  [key=2, style=dotted];
m1_1373 -> m1_129  [key=2, style=dotted];
m1_1374 -> m1_1375  [key=0, style=solid];
m1_1374 -> m1_24  [key=2, style=dotted];
m1_1375 -> m1_1372  [color=blue, key=0, style=bold];
m1_3791 -> m1_3792  [key=0, style=solid];
m1_3792 -> m1_3793  [key=0, style=solid];
m1_3792 -> m1_2357  [key=2, style=dotted];
m1_3793 -> m1_3794  [key=0, style=solid];
m1_3793 -> m1_41  [key=2, style=dotted];
m1_3794 -> m1_3795  [key=0, style=solid];
m1_3794 -> m1_42  [key=2, style=dotted];
m1_3795 -> m1_3791  [color=blue, key=0, style=bold];
m1_383 -> m1_384  [key=0, style=solid];
m1_384 -> m1_385  [key=0, style=solid];
m1_384 -> m1_388  [key=2, style=dotted];
m1_384 -> m1_129  [key=2, style=dotted];
m1_384 -> m1_24  [key=2, style=dotted];
m1_385 -> m1_386  [key=0, style=solid];
m1_385 -> m1_49  [key=2, style=dotted];
m1_386 -> m1_387  [key=0, style=solid];
m1_386 -> m1_24  [key=2, style=dotted];
m1_387 -> m1_383  [color=blue, key=0, style=bold];
m1_1859 -> m1_1860  [key=0, style=solid];
m1_1860 -> m1_1861  [key=0, style=solid];
m1_1860 -> m1_60  [key=2, style=dotted];
m1_1860 -> m1_1862  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1861 -> m1_1859  [color=blue, key=0, style=bold];
m1_1042 -> m1_1043  [key=0, style=solid];
m1_1043 -> m1_1044  [key=0, style=solid];
m1_1043 -> m1_1052  [key=2, style=dotted];
m1_1043 -> m1_1045  [color=darkseagreen4, key=1, label=test, style=dashed];
m1_1043 -> m1_1046  [color=darkseagreen4, key=1, label=test, style=dashed];
m1_1043 -> m1_1049  [color=darkseagreen4, key=1, label=test, style=dashed];
m1_1043 -> m1_1050  [color=darkseagreen4, key=1, label=test, style=dashed];
m1_1044 -> m1_1045  [key=0, style=solid];
m1_1045 -> m1_1046  [key=0, style=solid];
m1_1046 -> m1_1047  [key=0, style=solid];
m1_1046 -> m1_129  [key=2, style=dotted];
m1_1046 -> m1_1048  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m1_1049 -> m1_1050  [key=0, style=solid];
m1_1049 -> m1_24  [key=2, style=dotted];
m1_1050 -> m1_1051  [key=0, style=solid];
m1_1050 -> m1_24  [key=2, style=dotted];
m1_1047 -> m1_1048  [key=0, style=solid];
m1_1047 -> m1_24  [key=2, style=dotted];
m1_1048 -> m1_1049  [key=0, style=solid];
m1_1048 -> m1_49  [key=2, style=dotted];
m1_1048 -> m1_1050  [color=darkseagreen4, key=1, label=test2, style=dashed];
m1_1051 -> m1_1042  [color=blue, key=0, style=bold];
m1_3238 -> m1_3239  [key=0, style=solid];
m1_3239 -> m1_3240  [key=0, style=solid];
m1_3239 -> m1_49  [key=2, style=dotted];
m1_3240 -> m1_3241  [key=0, style=solid];
m1_3240 -> m1_152  [key=2, style=dotted];
m1_3241 -> m1_3238  [color=blue, key=0, style=bold];
m1_2815 -> m1_2816  [key=0, style=solid];
m1_2816 -> m1_2817  [key=0, style=solid];
m1_2816 -> m1_2820  [key=2, style=dotted];
m1_2817 -> m1_2818  [key=0, style=solid];
m1_2817 -> m1_129  [key=2, style=dotted];
m1_2818 -> m1_2819  [key=0, style=solid];
m1_2818 -> m1_24  [key=2, style=dotted];
m1_2819 -> m1_2815  [color=blue, key=0, style=bold];
m1_3118 -> m1_3119  [key=0, style=solid];
m1_3119 -> m1_3120  [key=0, style=solid];
m1_3119 -> m1_3123  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3119 -> m1_3114  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_3120 -> m1_3121  [key=0, style=solid];
m1_3120 -> m1_60  [key=2, style=dotted];
m1_3120 -> m1_3122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_3121 -> m1_3118  [color=blue, key=0, style=bold];
m1_2907 -> m1_2908  [key=0, style=solid];
m1_2908 -> m1_2909  [key=0, style=solid];
m1_2908 -> m1_49  [key=2, style=dotted];
m1_2908 -> m1_2910  [color=darkseagreen4, key=1, label=r, style=dashed];
m1_2908 -> m1_2911  [color=darkseagreen4, key=1, label=r, style=dashed];
m1_2908 -> m1_2912  [color=darkseagreen4, key=1, label=r, style=dashed];
m1_2908 -> m1_2913  [color=darkseagreen4, key=1, label=r, style=dashed];
m1_2909 -> m1_2910  [key=0, style=solid];
m1_2909 -> m1_375  [key=2, style=dotted];
m1_2909 -> m1_24  [key=2, style=dotted];
m1_2910 -> m1_2911  [key=0, style=solid];
m1_2910 -> m1_466  [key=2, style=dotted];
m1_2910 -> m1_24  [key=2, style=dotted];
m1_2911 -> m1_2912  [key=0, style=solid];
m1_2911 -> m1_1681  [key=2, style=dotted];
m1_2911 -> m1_797  [key=2, style=dotted];
m1_2912 -> m1_2913  [key=0, style=solid];
m1_2912 -> m1_1681  [key=2, style=dotted];
m1_2912 -> m1_797  [key=2, style=dotted];
m1_2913 -> m1_2914  [key=0, style=solid];
m1_2913 -> m1_1681  [key=2, style=dotted];
m1_2913 -> m1_152  [key=2, style=dotted];
m1_2914 -> m1_2907  [color=blue, key=0, style=bold];
m1_4210 -> m1_130  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired", style=dashed];
m1_4210 -> m1_132  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired", style=dashed];
m1_4211 -> m1_250  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_4212 -> m1_259  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass", style=dashed];
m1_4213 -> m1_272  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_4214 -> m1_280  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver", style=dashed];
m1_4215 -> m1_308  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem", style=dashed];
m1_4216 -> m1_392  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse", style=dashed];
m1_4217 -> m1_444  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4218 -> m1_610  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m1_4219 -> m1_685  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m1_4219 -> m1_686  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m1_4219 -> m1_687  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m1_4219 -> m1_688  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m1_4219 -> m1_689  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m1_4219 -> m1_692  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m1_4219 -> m1_695  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m1_4219 -> m1_696  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m1_4219 -> m1_697  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m1_4219 -> m1_698  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m1_4219 -> m1_699  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m1_4219 -> m1_700  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m1_4219 -> m1_706  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m1_4219 -> m1_708  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m1_4219 -> m1_709  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m1_4219 -> m1_710  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m1_4219 -> m1_711  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m1_4219 -> m1_712  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m1_4219 -> m1_713  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m1_4219 -> m1_714  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m1_4220 -> m1_842  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast", style=dashed];
m1_4220 -> m1_843  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast", style=dashed];
m1_4220 -> m1_846  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast", style=dashed];
m1_4221 -> m1_866  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", style=dashed];
m1_4221 -> m1_887  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", style=dashed];
m1_4221 -> m1_897  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", style=dashed];
m1_4221 -> m1_3473  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", style=dashed];
m1_4221 -> m1_3479  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", style=dashed];
m1_4221 -> m1_3480  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", style=dashed];
m1_4222 -> m1_1065  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4223 -> m1_1506  [color=darkseagreen4, key=1, label=strFromTest, style=dashed];
m1_4224 -> m1_1548  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass", style=dashed];
m1_4225 -> m1_1560  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass", style=dashed];
m1_4226 -> m1_1644  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", style=dashed];
m1_4226 -> m1_1645  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", style=dashed];
m1_4226 -> m1_1646  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", style=dashed];
m1_4226 -> m1_1647  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", style=dashed];
m1_4226 -> m1_1650  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", style=dashed];
m1_4227 -> m1_1754  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4228 -> m1_1781  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4229 -> m1_1788  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4230 -> m1_1795  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4231 -> m1_1802  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4232 -> m1_1809  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4233 -> m1_1816  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4234 -> m1_1823  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4235 -> m1_1830  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4236 -> m1_1844  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4237 -> m1_1852  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4238 -> m1_1976  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass", style=dashed];
m1_4238 -> m1_1977  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass", style=dashed];
m1_4239 -> m1_1992  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", style=dashed];
m1_4239 -> m1_1995  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", style=dashed];
m1_4239 -> m1_1998  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", style=dashed];
m1_4240 -> m1_2031  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4241 -> m1_2035  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor", style=dashed];
m1_4242 -> m1_2064  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1", style=dashed];
m1_4243 -> m1_2066  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2", style=dashed];
m1_4244 -> m1_2093  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m1_4244 -> m1_2098  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m1_4244 -> m1_2101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m1_4244 -> m1_2104  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m1_4244 -> m1_2108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m1_4244 -> m1_2112  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m1_4244 -> m1_2116  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m1_4244 -> m1_2120  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m1_4244 -> m1_2127  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m1_4244 -> m1_2130  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m1_4244 -> m1_2134  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m1_4244 -> m1_2138  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m1_4244 -> m1_2142  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m1_4245 -> m1_2155  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2157  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2158  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2159  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2162  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2163  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2164  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2165  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2166  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2167  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2168  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2169  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2170  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2171  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2172  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2173  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2174  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2175  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2176  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2177  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2178  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2179  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2194  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2195  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2196  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2197  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2198  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2200  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2201  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2202  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2203  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2204  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2205  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2206  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2207  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2208  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2209  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2210  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4245 -> m1_2211  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m1_4246 -> m1_2266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>", style=dashed];
m1_4246 -> m1_2267  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>", style=dashed];
m1_4247 -> m1_2322  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", style=dashed];
m1_4247 -> m1_2323  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", style=dashed];
m1_4247 -> m1_2324  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", style=dashed];
m1_4247 -> m1_2325  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", style=dashed];
m1_4247 -> m1_2326  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", style=dashed];
m1_4247 -> m1_2327  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", style=dashed];
m1_4247 -> m1_2328  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", style=dashed];
m1_4247 -> m1_2329  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", style=dashed];
m1_4248 -> m1_2333  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m1_4248 -> m1_2334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m1_4248 -> m1_2335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m1_4248 -> m1_2336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m1_4248 -> m1_2337  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m1_4248 -> m1_2338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m1_4248 -> m1_2339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m1_4248 -> m1_2340  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m1_4248 -> m1_2341  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m1_4248 -> m1_2342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m1_4249 -> m1_2424  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4250 -> m1_2457  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty", style=dashed];
m1_4250 -> m1_2458  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty", style=dashed];
m1_4251 -> m1_2474  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey", style=dashed];
m1_4252 -> m1_2511  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass", style=dashed];
m1_4253 -> m1_2540  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4254 -> m1_2638  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector", style=dashed];
m1_4255 -> m1_2655  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived", style=dashed];
m1_4256 -> m1_2660  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base", style=dashed];
m1_4258 -> m1_2674  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", style=dashed];
m1_4259 -> m1_2776  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor", style=dashed];
m1_4259 -> m1_2777  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor", style=dashed];
m1_4260 -> m1_2780  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor", style=dashed];
m1_4261 -> m1_2828  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty", style=dashed];
m1_4261 -> m1_2829  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty", style=dashed];
m1_4262 -> m1_2844  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty", style=dashed];
m1_4262 -> m1_2845  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty", style=dashed];
m1_4263 -> m1_2890  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes", style=dashed];
m1_4263 -> m1_2891  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes", style=dashed];
m1_4263 -> m1_2892  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes", style=dashed];
m1_4263 -> m1_2895  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes", style=dashed];
m1_4263 -> m1_2898  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes", style=dashed];
m1_4264 -> m1_2922  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException", style=dashed];
m1_4265 -> m1_3085  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4266 -> m1_3109  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4267 -> m1_3123  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4268 -> m1_3371  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_4269 -> m1_3386  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_4270 -> m1_3401  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_4271 -> m1_3529  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4272 -> m1_3529  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_4273 -> m1_3589  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>", style=dashed];
m1_4274 -> m1_3592  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>", style=dashed];
m1_4275 -> m1_3631  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4276 -> m1_3642  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver", style=dashed];
m1_4277 -> m1_3729  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4278 -> m1_3799  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor", style=dashed];
m1_4279 -> m1_3891  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m1_4279 -> m1_3893  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m1_4279 -> m1_3895  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m1_4279 -> m1_3897  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m1_4279 -> m1_3920  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m1_4279 -> m1_3923  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m1_4279 -> m1_3926  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m1_4280 -> m1_4079  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType", style=dashed];
m1_4281 -> m1_4082  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType", style=dashed];
m1_4282 -> m1_4126  [color=darkseagreen4, key=1, label=JsonMessage, style=dashed];
m1_4283 -> m1_4182  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DecimalTest", style=dashed];
m1_4284 -> m1_4185  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor", style=dashed];
m1_4284 -> m1_4188  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor", style=dashed];
m1_4284 -> m1_4189  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor", style=dashed];
m1_4285 -> m1_4192  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor", style=dashed];
m1_4285 -> m1_4195  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor", style=dashed];
m1_4285 -> m1_4196  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor", style=dashed];
m1_4286 -> m1_4199  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor", style=dashed];
m1_4286 -> m1_4200  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor", style=dashed];
m1_4286 -> m1_4203  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor", style=dashed];
m1_4286 -> m1_4204  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor", style=dashed];
m1_4286 -> m1_4205  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor", style=dashed];
m2_60 -> m2_61  [key=0, style=solid];
m2_60 -> m2_26  [key=2, style=dotted];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_65  [color=darkseagreen4, key=1, label=json, style=dashed];
m2_61 -> m2_61  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m2_61 -> m2_53  [color=blue, key=0, style=bold];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_13  [key=2, style=dotted];
m2_62 -> m2_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_63 -> m2_60  [color=blue, key=0, style=bold];
m2_14 -> m2_15  [key=0, style=solid];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_8  [key=2, style=dotted];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_31  [color=darkseagreen4, key=1, label=r, style=dashed];
m2_29 -> m2_33  [key=2, style=dotted];
m2_64 -> m2_65  [key=0, style=solid];
m2_198 -> m2_199  [key=0, style=solid];
m2_199 -> m2_200  [key=0, style=solid];
m2_199 -> m2_201  [color=darkseagreen4, key=1, label=json, style=dashed];
m2_199 -> m2_199  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m2_200 -> m2_201  [key=0, style=solid];
m2_200 -> m2_155  [key=2, style=dotted];
m2_200 -> m2_202  [color=darkseagreen4, key=1, label=c, style=dashed];
m2_200 -> m2_203  [color=darkseagreen4, key=1, label=c, style=dashed];
m2_201 -> m2_202  [key=0, style=solid];
m2_201 -> m2_6  [key=2, style=dotted];
m2_201 -> m2_205  [key=2, style=dotted];
m2_202 -> m2_203  [key=0, style=solid];
m2_202 -> m2_8  [key=2, style=dotted];
m2_203 -> m2_204  [key=0, style=solid];
m2_203 -> m2_8  [key=2, style=dotted];
m2_204 -> m2_198  [color=blue, key=0, style=bold];
m2_80 -> m2_81  [key=0, style=solid];
m2_80 -> m2_8  [key=2, style=dotted];
m2_34 -> m2_35  [key=0, style=solid];
m2_43 -> m2_26  [key=2, style=dotted];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_34  [color=blue, key=0, style=bold];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_51  [key=2, style=dotted];
m2_42 -> m2_52  [key=2, style=dotted];
m2_42 -> m2_47  [key=2, style=dotted];
m2_41 -> m2_43  [color=darkseagreen4, key=1, label=expected, style=dashed];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_41  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m2_38 -> m2_47  [key=2, style=dotted];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_40  [color=darkseagreen4, key=1, label=actual, style=dashed];
m2_38 -> m2_6  [key=2, style=dotted];
m2_38 -> m2_17  [key=2, style=dotted];
m2_38 -> m2_41  [color=darkseagreen4, key=1, label=actual, style=dashed];
m2_39 -> m2_6  [key=2, style=dotted];
m2_39 -> m2_48  [key=2, style=dotted];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_29  [key=2, style=dotted];
m2_39 -> m2_8  [key=2, style=dotted];
m2_36 -> m2_42  [color=darkseagreen4, key=1, label=ms, style=dashed];
m2_36 -> m2_45  [key=2, style=dotted];
m2_36 -> m2_37  [color=red, key=0, style=solid];
m2_36 -> m2_46  [key=2, style=dotted];
m2_36 -> m2_38  [color=darkseagreen4, key=1, label=jsonString, style=dashed];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_49  [key=2, style=dotted];
m2_40 -> m2_50  [key=2, style=dotted];
m2_40 -> m2_29  [key=2, style=dotted];
m2_40 -> m2_8  [key=2, style=dotted];
m2_37 -> m2_46  [key=2, style=dotted];
m2_37 -> m2_38  [color=red, key=0, style=solid];
m2_37 -> m2_40  [color=darkseagreen4, key=1, label=writer, style=dashed];
m2_37 -> m2_33  [color=red, key=2, style=dotted];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_40  [color=darkseagreen4, key=1, label=regex, style=dashed];
m2_35 -> m2_35  [color=darkorchid, key=3, label="Local variable string contextKey", style=bold];
m2_35 -> m2_5  [key=2, style=dotted];
m2_35 -> m2_44  [key=2, style=dotted];
m2_35 -> m2_29  [key=2, style=dotted];
m2_35 -> m2_45  [key=2, style=dotted];
m2_44 -> m2_34  [color=blue, key=0, style=bold];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_81  [key=2, style=dotted];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_85  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m2_93 -> m2_64  [key=2, style=dotted];
m2_93 -> m2_95  [color=darkseagreen4, key=1, label=reader, style=dashed];
m2_94 -> m2_95  [key=0, style=solid];
m2_94 -> m2_103  [key=2, style=dotted];
m2_94 -> m2_96  [color=darkseagreen4, key=1, label=t1, style=dashed];
m2_94 -> m2_101  [color=darkseagreen4, key=1, label=t1, style=dashed];
m2_94 -> m2_6  [key=2, style=dotted];
m2_94 -> m2_48  [key=2, style=dotted];
m2_95 -> m2_96  [key=0, style=solid];
m2_95 -> m2_104  [key=2, style=dotted];
m2_95 -> m2_101  [color=darkseagreen4, key=1, label=t2, style=dashed];
m2_95 -> m2_65  [key=2, style=dotted];
m2_95 -> m2_97  [color=darkseagreen4, key=1, label=c, style=dashed];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_6  [key=2, style=dotted];
m2_96 -> m2_105  [key=2, style=dotted];
m2_96 -> m2_106  [key=2, style=dotted];
m2_96 -> m2_98  [color=darkseagreen4, key=1, label=employees, style=dashed];
m2_96 -> m2_99  [color=darkseagreen4, key=1, label=employees, style=dashed];
m2_96 -> m2_100  [color=darkseagreen4, key=1, label=employees, style=dashed];
m2_96 -> m2_26  [key=2, style=dotted];
m2_96 -> m2_25  [key=2, style=dotted];
m2_101 -> m2_102  [key=0, style=solid];
m2_101 -> m2_107  [key=2, style=dotted];
m2_101 -> m2_59  [key=2, style=dotted];
m2_101 -> m2_103  [color=darkseagreen4, key=1, label=newRegex, style=dashed];
m2_101 -> m2_6  [key=2, style=dotted];
m2_101 -> m2_105  [key=2, style=dotted];
m2_97 -> m2_98  [key=0, style=solid];
m2_97 -> m2_8  [key=2, style=dotted];
m2_97 -> m2_26  [key=2, style=dotted];
m2_98 -> m2_99  [key=0, style=solid];
m2_98 -> m2_8  [key=2, style=dotted];
m2_98 -> m2_82  [color=blue, key=0, style=bold];
m2_99 -> m2_100  [key=0, style=solid];
m2_99 -> m2_8  [key=2, style=dotted];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_8  [key=2, style=dotted];
m2_100 -> m2_3  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m2_102 -> m2_92  [color=blue, key=0, style=bold];
m2_102 -> m2_26  [key=2, style=dotted];
m2_102 -> m2_25  [key=2, style=dotted];
m2_102 -> m2_103  [key=0, style=solid];
m2_103 -> m2_26  [key=2, style=dotted];
m2_103 -> m2_104  [key=0, style=solid];
m2_48 -> m2_49  [key=0, style=solid];
m2_49 -> m2_50  [key=0, style=solid];
m2_49 -> m2_10  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_6  [key=2, style=dotted];
m2_50 -> m2_17  [key=2, style=dotted];
m2_50 -> m2_52  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m2_50 -> m2_53  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m2_50 -> m2_54  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m2_50 -> m2_55  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m2_50 -> m2_56  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_8  [key=2, style=dotted];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_8  [key=2, style=dotted];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_8  [key=2, style=dotted];
m2_54 -> m2_62  [key=2, style=dotted];
m2_54 -> m2_63  [key=2, style=dotted];
m2_55 -> m2_56  [key=0, style=solid];
m2_55 -> m2_8  [key=2, style=dotted];
m2_55 -> m2_64  [key=2, style=dotted];
m2_55 -> m2_58  [color=darkseagreen4, key=1, label=reader, style=dashed];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_58  [key=2, style=dotted];
m2_56 -> m2_59  [key=2, style=dotted];
m2_56 -> m2_47  [key=2, style=dotted];
m2_57 -> m2_48  [color=blue, key=0, style=bold];
m2_57 -> m2_6  [key=2, style=dotted];
m2_57 -> m2_58  [key=0, style=solid];
m2_25 -> m2_26  [color=red, key=0, style=solid];
m2_25 -> m2_33  [color=red, key=2, style=dotted];
m2_67 -> m2_68  [key=0, style=solid];
m2_67 -> m2_72  [color=darkseagreen4, key=1, label=regex, style=dashed];
m2_67 -> m2_80  [key=2, style=dotted];
m2_59 -> m2_26  [key=2, style=dotted];
m2_59 -> m2_25  [key=2, style=dotted];
m2_59 -> m2_60  [key=0, style=solid];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_90  [color=darkseagreen4, key=1, label=ms, style=dashed];
m2_84 -> m2_92  [color=darkseagreen4, key=1, label=ms, style=dashed];
m2_84 -> m2_45  [key=2, style=dotted];
m2_84 -> m2_93  [color=darkseagreen4, key=1, label=ms, style=dashed];
m2_85 -> m2_86  [key=0, style=solid];
m2_85 -> m2_85  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m2_85 -> m2_46  [key=2, style=dotted];
m2_85 -> m2_88  [color=darkseagreen4, key=1, label=writer, style=dashed];
m2_86 -> m2_87  [key=0, style=solid];
m2_86 -> m2_6  [key=2, style=dotted];
m2_86 -> m2_17  [key=2, style=dotted];
m2_86 -> m2_88  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m2_86 -> m2_89  [color=darkseagreen4, key=1, label=employees, style=dashed];
m2_86 -> m2_90  [color=darkseagreen4, key=1, label=employees, style=dashed];
m2_86 -> m2_47  [key=2, style=dotted];
m2_86 -> m2_95  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m2_86 -> m2_94  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_8  [key=2, style=dotted];
m2_87 -> m2_6  [key=2, style=dotted];
m2_87 -> m2_48  [key=2, style=dotted];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_8  [key=2, style=dotted];
m2_88 -> m2_49  [key=2, style=dotted];
m2_88 -> m2_50  [key=2, style=dotted];
m2_89 -> m2_90  [key=0, style=solid];
m2_89 -> m2_8  [key=2, style=dotted];
m2_89 -> m2_91  [color=darkseagreen4, key=1, label=expected, style=dashed];
m2_89 -> m2_89  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_8  [key=2, style=dotted];
m2_90 -> m2_51  [key=2, style=dotted];
m2_90 -> m2_52  [key=2, style=dotted];
m2_90 -> m2_12  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m2_91 -> m2_84  [color=blue, key=0, style=bold];
m2_91 -> m2_26  [key=2, style=dotted];
m2_91 -> m2_92  [key=0, style=solid];
m2_106 -> m2_107  [key=0, style=solid];
m2_82 -> m2_83  [key=0, style=solid];
m2_82 -> m2_8  [key=2, style=dotted];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_88  [color=darkseagreen4, key=1, label=regex, style=dashed];
m2_83 -> m2_5  [key=2, style=dotted];
m2_83 -> m2_68  [color=blue, key=0, style=bold];
m2_156 -> m2_157  [key=0, style=solid];
m2_157 -> m2_158  [key=0, style=solid];
m2_157 -> m2_157  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m2_158 -> m2_159  [key=0, style=solid];
m2_158 -> m2_6  [key=2, style=dotted];
m2_158 -> m2_17  [key=2, style=dotted];
m2_159 -> m2_160  [key=0, style=solid];
m2_159 -> m2_8  [key=2, style=dotted];
m2_160 -> m2_156  [color=blue, key=0, style=bold];
m2_31 -> m2_26  [key=2, style=dotted];
m2_31 -> m2_32  [key=0, style=solid];
m2_161 -> m2_162  [key=0, style=solid];
m2_162 -> m2_163  [key=0, style=solid];
m2_162 -> m2_6  [key=2, style=dotted];
m2_162 -> m2_17  [key=2, style=dotted];
m2_162 -> m2_164  [color=darkseagreen4, key=1, label=actual, style=dashed];
m2_162 -> m2_165  [color=darkseagreen4, key=1, label=actual, style=dashed];
m2_163 -> m2_164  [key=0, style=solid];
m2_163 -> m2_29  [key=2, style=dotted];
m2_163 -> m2_8  [key=2, style=dotted];
m2_164 -> m2_165  [key=0, style=solid];
m2_164 -> m2_29  [key=2, style=dotted];
m2_164 -> m2_8  [key=2, style=dotted];
m2_165 -> m2_166  [key=0, style=solid];
m2_165 -> m2_167  [color=darkseagreen4, key=1, label=o, style=dashed];
m2_165 -> m2_168  [color=darkseagreen4, key=1, label=o, style=dashed];
m2_166 -> m2_167  [key=0, style=solid];
m2_166 -> m2_8  [key=2, style=dotted];
m2_167 -> m2_168  [key=0, style=solid];
m2_167 -> m2_8  [key=2, style=dotted];
m2_168 -> m2_169  [key=0, style=solid];
m2_168 -> m2_8  [key=2, style=dotted];
m2_169 -> m2_161  [color=blue, key=0, style=bold];
m2_170 -> m2_171  [key=0, style=solid];
m2_171 -> m2_172  [key=0, style=solid];
m2_171 -> m2_6  [key=2, style=dotted];
m2_171 -> m2_17  [key=2, style=dotted];
m2_172 -> m2_173  [key=0, style=solid];
m2_173 -> m2_174  [key=0, style=solid];
m2_173 -> m2_8  [key=2, style=dotted];
m2_174 -> m2_170  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_1  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m2_1 -> m2_5  [key=2, style=dotted];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_6  [key=2, style=dotted];
m2_2 -> m2_7  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_8  [key=2, style=dotted];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_8  [key=2, style=dotted];
m2_4 -> m2_0  [color=blue, key=0, style=bold];
m2_5 -> m2_0  [color=blue, key=0, style=bold];
m2_18 -> m2_19  [key=0, style=solid];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_22  [color=darkseagreen4, key=1, label=contextKey, style=dashed];
m2_19 -> m2_27  [color=darkseagreen4, key=1, label=contextKey, style=dashed];
m2_19 -> m2_19  [color=darkorchid, key=3, label="Local variable string contextKey", style=bold];
m2_19 -> m2_12  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_29  [key=2, style=dotted];
m2_20 -> m2_22  [color=darkseagreen4, key=1, label=regex, style=dashed];
m2_20 -> m2_27  [color=darkseagreen4, key=1, label=someValue, style=dashed];
m2_20 -> m2_6  [key=2, style=dotted];
m2_20 -> m2_14  [key=2, style=dotted];
m2_20 -> m2_24  [key=2, style=dotted];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_31  [key=2, style=dotted];
m2_22 -> m2_26  [key=2, style=dotted];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_8  [key=2, style=dotted];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_30  [key=2, style=dotted];
m2_21 -> m2_24  [color=darkseagreen4, key=1, label=inputContext, style=dashed];
m2_21 -> m2_26  [key=2, style=dotted];
m2_21 -> m2_25  [key=2, style=dotted];
m2_24 -> m2_25  [color=red, key=0, style=solid];
m2_24 -> m2_32  [key=2, style=dotted];
m2_24 -> m2_26  [color=darkseagreen4, key=1, label=serializedString, style=dashed];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_6  [key=2, style=dotted];
m2_23 -> m2_26  [color=darkseagreen4, key=1, label=jsonSerializerSettings, style=dashed];
m2_23 -> m2_18  [color=blue, key=0, style=bold];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_7  [key=2, style=dotted];
m2_28 -> m2_18  [color=blue, key=0, style=bold];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_28  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m2_30 -> m2_26  [key=2, style=dotted];
m2_30 -> m2_25  [key=2, style=dotted];
m2_30 -> m2_31  [key=0, style=solid];
m2_32 -> m2_27  [color=blue, key=0, style=bold];
m2_16 -> m2_14  [color=blue, key=0, style=bold];
m2_58 -> m2_65  [key=2, style=dotted];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_60  [color=darkseagreen4, key=1, label=c, style=dashed];
m2_144 -> m2_145  [key=0, style=solid];
m2_145 -> m2_146  [key=0, style=solid];
m2_145 -> m2_155  [key=2, style=dotted];
m2_146 -> m2_147  [key=0, style=solid];
m2_146 -> m2_46  [key=2, style=dotted];
m2_146 -> m2_148  [color=darkseagreen4, key=1, label=json, style=dashed];
m2_147 -> m2_148  [key=0, style=solid];
m2_147 -> m2_33  [key=2, style=dotted];
m2_148 -> m2_149  [key=0, style=solid];
m2_148 -> m2_6  [key=2, style=dotted];
m2_148 -> m2_17  [key=2, style=dotted];
m2_148 -> m2_150  [color=darkseagreen4, key=1, label=c2, style=dashed];
m2_148 -> m2_151  [color=darkseagreen4, key=1, label=c2, style=dashed];
m2_148 -> m2_152  [color=darkseagreen4, key=1, label=c2, style=dashed];
m2_148 -> m2_153  [color=darkseagreen4, key=1, label=c2, style=dashed];
m2_149 -> m2_150  [key=0, style=solid];
m2_149 -> m2_8  [key=2, style=dotted];
m2_150 -> m2_151  [key=0, style=solid];
m2_150 -> m2_8  [key=2, style=dotted];
m2_151 -> m2_152  [key=0, style=solid];
m2_151 -> m2_8  [key=2, style=dotted];
m2_152 -> m2_153  [key=0, style=solid];
m2_152 -> m2_8  [key=2, style=dotted];
m2_153 -> m2_154  [key=0, style=solid];
m2_153 -> m2_8  [key=2, style=dotted];
m2_154 -> m2_144  [color=blue, key=0, style=bold];
m2_111 -> m2_26  [key=2, style=dotted];
m2_111 -> m2_25  [key=2, style=dotted];
m2_111 -> m2_112  [key=0, style=solid];
m2_112 -> m2_26  [key=2, style=dotted];
m2_112 -> m2_112  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m2_112 -> m2_113  [key=0, style=solid];
m2_112 -> m2_6  [key=2, style=dotted];
m2_112 -> m2_67  [key=2, style=dotted];
m2_112 -> m2_114  [color=darkseagreen4, key=1, label=values, style=dashed];
m2_112 -> m2_115  [color=darkseagreen4, key=1, label=values, style=dashed];
m2_112 -> m2_121  [color=darkseagreen4, key=1, label=values, style=dashed];
m2_112 -> m2_122  [color=darkseagreen4, key=1, label=values, style=dashed];
m2_110 -> m2_111  [key=0, style=solid];
m2_110 -> m2_112  [color=darkseagreen4, key=1, label=newRegex, style=dashed];
m2_110 -> m2_6  [key=2, style=dotted];
m2_110 -> m2_105  [key=2, style=dotted];
m2_108 -> m2_6  [key=2, style=dotted];
m2_108 -> m2_110  [color=darkseagreen4, key=1, label=json, style=dashed];
m2_108 -> m2_49  [key=2, style=dotted];
m2_108 -> m2_109  [key=0, style=solid];
m2_108 -> m2_7  [key=2, style=dotted];
m2_109 -> m2_110  [key=0, style=solid];
m2_109 -> m2_8  [key=2, style=dotted];
m2_109 -> m2_111  [color=darkseagreen4, key=1, label=employeeRef, style=dashed];
m2_107 -> m2_108  [key=0, style=solid];
m2_107 -> m2_80  [key=2, style=dotted];
m2_113 -> m2_106  [color=blue, key=0, style=bold];
m2_113 -> m2_114  [key=0, style=solid];
m2_113 -> m2_8  [key=2, style=dotted];
m2_121 -> m2_122  [key=0, style=solid];
m2_121 -> m2_8  [key=2, style=dotted];
m2_104 -> m2_99  [color=blue, key=0, style=bold];
m2_65 -> m2_66  [key=0, style=solid];
m2_65 -> m2_6  [key=2, style=dotted];
m2_65 -> m2_67  [key=2, style=dotted];
m2_9 -> m2_10  [key=0, style=solid];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_15  [color=darkseagreen4, key=1, label=json, style=dashed];
m2_10 -> m2_10  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m2_10 -> m2_5  [key=2, style=dotted];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_13  [key=2, style=dotted];
m2_11 -> m2_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_11 -> m2_6  [key=2, style=dotted];
m2_11 -> m2_15  [key=2, style=dotted];
m2_11 -> m2_16  [key=2, style=dotted];
m2_11 -> m2_17  [key=2, style=dotted];
m2_12 -> m2_9  [color=blue, key=0, style=bold];
m2_12 -> m2_12  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_8  [key=2, style=dotted];
m2_114 -> m2_115  [key=0, style=solid];
m2_114 -> m2_116  [color=darkseagreen4, key=1, label=e, style=dashed];
m2_114 -> m2_117  [color=darkseagreen4, key=1, label=e, style=dashed];
m2_116 -> m2_26  [key=2, style=dotted];
m2_116 -> m2_117  [key=0, style=solid];
m2_116 -> m2_8  [key=2, style=dotted];
m2_118 -> m2_26  [key=2, style=dotted];
m2_118 -> m2_119  [key=0, style=solid];
m2_118 -> m2_8  [key=2, style=dotted];
m2_115 -> m2_116  [key=0, style=solid];
m2_115 -> m2_120  [key=2, style=dotted];
m2_115 -> m2_121  [key=2, style=dotted];
m2_115 -> m2_117  [color=darkseagreen4, key=1, label=json, style=dashed];
m2_115 -> m2_118  [color=darkseagreen4, key=1, label=p, style=dashed];
m2_115 -> m2_119  [color=darkseagreen4, key=1, label=p, style=dashed];
m2_117 -> m2_118  [key=0, style=solid];
m2_117 -> m2_33  [key=2, style=dotted];
m2_117 -> m2_8  [key=2, style=dotted];
m2_119 -> m2_114  [color=blue, key=0, style=bold];
m2_119 -> m2_120  [key=0, style=solid];
m2_119 -> m2_45  [key=2, style=dotted];
m2_119 -> m2_8  [key=2, style=dotted];
m2_81 -> m2_82  [key=0, style=solid];
m2_81 -> m2_8  [key=2, style=dotted];
m2_13 -> m2_9  [color=blue, key=0, style=bold];
m2_124 -> m2_125  [key=0, style=solid];
m2_125 -> m2_126  [key=0, style=solid];
m2_125 -> m2_140  [key=2, style=dotted];
m2_125 -> m2_128  [color=darkseagreen4, key=1, label=listRef, style=dashed];
m2_126 -> m2_127  [key=0, style=solid];
m2_126 -> m2_141  [key=2, style=dotted];
m2_126 -> d16  [key=2, style=dotted];
m2_128 -> m2_129  [key=0, style=solid];
m2_128 -> m2_33  [key=2, style=dotted];
m2_127 -> m2_128  [key=0, style=solid];
m2_127 -> m2_46  [key=2, style=dotted];
m2_127 -> m2_129  [color=darkseagreen4, key=1, label=json, style=dashed];
m2_129 -> m2_130  [key=0, style=solid];
m2_129 -> m2_6  [key=2, style=dotted];
m2_129 -> m2_17  [key=2, style=dotted];
m2_129 -> m2_131  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m2_129 -> m2_132  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m2_130 -> m2_131  [key=0, style=solid];
m2_130 -> m2_8  [key=2, style=dotted];
m2_131 -> m2_132  [key=0, style=solid];
m2_131 -> m2_143  [key=2, style=dotted];
m2_132 -> m2_133  [key=0, style=solid];
m2_132 -> m2_134  [color=darkseagreen4, key=1, label=nested, style=dashed];
m2_132 -> m2_135  [color=darkseagreen4, key=1, label=nested, style=dashed];
m2_132 -> m2_136  [color=darkseagreen4, key=1, label=nested, style=dashed];
m2_132 -> m2_137  [color=darkseagreen4, key=1, label=nested, style=dashed];
m2_132 -> m2_138  [color=darkseagreen4, key=1, label=nested, style=dashed];
m2_133 -> m2_134  [key=0, style=solid];
m2_133 -> m2_8  [key=2, style=dotted];
m2_134 -> m2_135  [key=0, style=solid];
m2_134 -> m2_8  [key=2, style=dotted];
m2_135 -> m2_136  [key=0, style=solid];
m2_135 -> m2_8  [key=2, style=dotted];
m2_136 -> m2_137  [key=0, style=solid];
m2_136 -> m2_8  [key=2, style=dotted];
m2_137 -> m2_138  [key=0, style=solid];
m2_137 -> m2_8  [key=2, style=dotted];
m2_138 -> m2_139  [key=0, style=solid];
m2_138 -> m2_8  [key=2, style=dotted];
m2_139 -> m2_124  [color=blue, key=0, style=bold];
m2_68 -> m2_69  [key=0, style=solid];
m2_68 -> m2_74  [color=darkseagreen4, key=1, label=ms, style=dashed];
m2_68 -> m2_45  [key=2, style=dotted];
m2_68 -> m2_73  [color=darkseagreen4, key=1, label=ms, style=dashed];
m2_69 -> m2_70  [key=0, style=solid];
m2_69 -> m2_30  [key=2, style=dotted];
m2_69 -> m2_71  [color=darkseagreen4, key=1, label=reference, style=dashed];
m2_69 -> m2_72  [color=darkseagreen4, key=1, label=writer, style=dashed];
m2_69 -> m2_76  [color=darkseagreen4, key=1, label=reference, style=dashed];
m2_69 -> m2_46  [key=2, style=dotted];
m2_70 -> m2_71  [key=0, style=solid];
m2_70 -> m2_31  [key=2, style=dotted];
m2_70 -> m2_76  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m2_70 -> m2_47  [key=2, style=dotted];
m2_70 -> m2_72  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m2_70 -> m2_75  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m2_71 -> m2_72  [key=0, style=solid];
m2_71 -> m2_31  [key=2, style=dotted];
m2_71 -> m2_6  [key=2, style=dotted];
m2_71 -> m2_48  [key=2, style=dotted];
m2_72 -> m2_73  [key=0, style=solid];
m2_72 -> m2_31  [key=2, style=dotted];
m2_72 -> m2_49  [key=2, style=dotted];
m2_72 -> m2_50  [key=2, style=dotted];
m2_76 -> m2_77  [key=0, style=solid];
m2_76 -> m2_31  [key=2, style=dotted];
m2_76 -> m2_78  [color=green, key=1, label=c, style=dashed];
m2_76 -> m2_65  [key=2, style=dotted];
m2_73 -> m2_74  [key=0, style=solid];
m2_73 -> m2_30  [key=2, style=dotted];
m2_73 -> m2_75  [color=darkseagreen4, key=1, label=child, style=dashed];
m2_73 -> m2_76  [color=darkseagreen4, key=1, label=child, style=dashed];
m2_73 -> m2_77  [color=darkseagreen4, key=1, label=child, style=dashed];
m2_73 -> m2_81  [key=2, style=dotted];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_31  [key=2, style=dotted];
m2_74 -> m2_76  [color=darkseagreen4, key=1, label=reader, style=dashed];
m2_74 -> m2_64  [key=2, style=dotted];
m2_75 -> m2_76  [key=0, style=solid];
m2_75 -> m2_31  [key=2, style=dotted];
m2_75 -> m2_6  [key=2, style=dotted];
m2_75 -> m2_48  [key=2, style=dotted];
m2_77 -> m2_78  [color=green, key=0, style=solid];
m2_77 -> m2_46  [key=2, style=dotted];
m2_77 -> m2_79  [color=darkseagreen4, key=1, label=json, style=dashed];
m2_77 -> m2_25  [key=2, style=dotted];
m2_77 -> m2_26  [key=2, style=dotted];
m2_78 -> m2_79  [color=green, key=0, style=solid];
m2_78 -> m2_33  [key=2, style=dotted];
m2_78 -> m2_26  [color=green, key=2, style=dotted];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_6  [key=2, style=dotted];
m2_79 -> m2_17  [key=2, style=dotted];
m2_79 -> m2_81  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_79 -> m2_82  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_79 -> m2_66  [color=blue, key=0, style=bold];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_6  [key=2, style=dotted];
m2_15 -> m2_17  [key=2, style=dotted];
m2_66 -> m2_64  [color=blue, key=0, style=bold];
m2_66 -> m2_67  [key=0, style=solid];
m2_187 -> m2_188  [key=0, style=solid];
m2_188 -> m2_189  [key=0, style=solid];
m2_188 -> m2_6  [key=2, style=dotted];
m2_188 -> m2_17  [key=2, style=dotted];
m2_189 -> m2_190  [key=0, style=solid];
m2_190 -> m2_191  [key=0, style=solid];
m2_190 -> m2_8  [key=2, style=dotted];
m2_191 -> m2_187  [color=blue, key=0, style=bold];
m2_175 -> m2_176  [key=0, style=solid];
m2_176 -> m2_177  [key=0, style=solid];
m2_176 -> m2_6  [key=2, style=dotted];
m2_176 -> m2_7  [key=2, style=dotted];
m2_176 -> m2_178  [color=darkseagreen4, key=1, label=actual, style=dashed];
m2_176 -> m2_179  [color=darkseagreen4, key=1, label=actual, style=dashed];
m2_176 -> m2_180  [color=darkseagreen4, key=1, label=actual, style=dashed];
m2_176 -> m2_181  [color=darkseagreen4, key=1, label=actual, style=dashed];
m2_176 -> m2_182  [color=darkseagreen4, key=1, label=actual, style=dashed];
m2_176 -> m2_183  [color=darkseagreen4, key=1, label=actual, style=dashed];
m2_176 -> m2_184  [color=darkseagreen4, key=1, label=actual, style=dashed];
m2_176 -> m2_185  [color=darkseagreen4, key=1, label=actual, style=dashed];
m2_177 -> m2_178  [key=0, style=solid];
m2_177 -> m2_8  [key=2, style=dotted];
m2_178 -> m2_179  [key=0, style=solid];
m2_178 -> m2_8  [key=2, style=dotted];
m2_179 -> m2_180  [key=0, style=solid];
m2_179 -> m2_8  [key=2, style=dotted];
m2_180 -> m2_181  [key=0, style=solid];
m2_180 -> m2_8  [key=2, style=dotted];
m2_181 -> m2_182  [key=0, style=solid];
m2_181 -> m2_8  [key=2, style=dotted];
m2_182 -> m2_183  [key=0, style=solid];
m2_182 -> m2_8  [key=2, style=dotted];
m2_183 -> m2_184  [key=0, style=solid];
m2_183 -> m2_8  [key=2, style=dotted];
m2_184 -> m2_185  [key=0, style=solid];
m2_184 -> m2_8  [key=2, style=dotted];
m2_185 -> m2_186  [key=0, style=solid];
m2_185 -> m2_8  [key=2, style=dotted];
m2_186 -> m2_175  [color=blue, key=0, style=bold];
m2_122 -> m2_123  [key=0, style=solid];
m2_122 -> m2_8  [key=2, style=dotted];
m2_122 -> m2_42  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.RegexConverterTests", style=dashed];
m2_122 -> m2_90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.RegexConverterTests", style=dashed];
m2_122 -> m2_54  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.RegexConverterTests", style=dashed];
m2_120 -> m2_121  [key=0, style=solid];
m2_120 -> m2_45  [key=2, style=dotted];
m2_120 -> m2_8  [key=2, style=dotted];
m2_123 -> m2_108  [color=blue, key=0, style=bold];
m2_192 -> m2_193  [key=0, style=solid];
m2_193 -> m2_194  [key=0, style=solid];
m2_193 -> m2_6  [key=2, style=dotted];
m2_193 -> m2_17  [key=2, style=dotted];
m2_194 -> m2_195  [key=0, style=solid];
m2_194 -> m2_8  [key=2, style=dotted];
m2_195 -> m2_196  [key=0, style=solid];
m2_195 -> m2_6  [key=2, style=dotted];
m2_195 -> m2_17  [key=2, style=dotted];
m2_196 -> m2_197  [key=0, style=solid];
m2_196 -> m2_59  [key=2, style=dotted];
m2_197 -> m2_192  [color=blue, key=0, style=bold];
m2_206 -> m2_15  [color=darkseagreen4, key=1, label=json, style=dashed];
m2_207 -> m2_65  [color=darkseagreen4, key=1, label=json, style=dashed];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_10  [key=2, style=dotted];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_11  [key=2, style=dotted];
m3_2 -> m3_4  [color=darkseagreen4, key=1, label=ms, style=dashed];
m3_3 -> m3_4  [key=0, style=solid];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_12  [key=2, style=dotted];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_13  [key=2, style=dotted];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_8  [color=darkseagreen4, key=1, label=value, style=dashed];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_14  [key=2, style=dotted];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_15  [key=2, style=dotted];
m3_9 -> m3_0  [color=blue, key=0, style=bold];
m4_22 -> m4_23  [key=0, style=solid];
m4_23 -> m4_24  [key=0, style=solid];
m4_23 -> m4_19  [key=2, style=dotted];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_20  [key=2, style=dotted];
m4_24 -> m4_21  [key=2, style=dotted];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_30  [key=2, style=dotted];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> m4_19  [key=2, style=dotted];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_20  [key=2, style=dotted];
m4_27 -> m4_21  [key=2, style=dotted];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_30  [key=2, style=dotted];
m4_29 -> m4_22  [color=blue, key=0, style=bold];
m4_138 -> m4_139  [key=0, style=solid];
m4_139 -> m4_140  [key=0, style=solid];
m4_139 -> m4_142  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_139 -> m4_139  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_140 -> m4_141  [key=0, style=solid];
m4_140 -> m4_133  [key=2, style=dotted];
m4_140 -> m4_142  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m4_142 -> m4_143  [key=0, style=solid];
m4_142 -> m4_147  [key=0, style=solid];
m4_142 -> m4_135  [key=2, style=dotted];
m4_142 -> m4_136  [key=2, style=dotted];
m4_142 -> m4_137  [key=2, style=dotted];
m4_141 -> m4_142  [key=0, style=solid];
m4_141 -> m4_20  [key=2, style=dotted];
m4_141 -> m4_134  [key=2, style=dotted];
m4_143 -> m4_144  [key=0, style=solid];
m4_147 -> m4_148  [key=0, style=solid];
m4_147 -> m4_149  [key=2, style=dotted];
m4_144 -> m4_145  [key=0, style=solid];
m4_144 -> m4_5  [key=2, style=dotted];
m4_145 -> m4_146  [key=0, style=solid];
m4_145 -> m4_5  [key=2, style=dotted];
m4_146 -> m4_148  [key=0, style=solid];
m4_148 -> m4_138  [color=blue, key=0, style=bold];
m4_6 -> m4_7  [key=0, style=solid];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_10  [key=2, style=dotted];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_5  [key=2, style=dotted];
m4_9 -> m4_6  [color=blue, key=0, style=bold];
m4_73 -> m4_74  [key=0, style=solid];
m4_74 -> m4_75  [key=0, style=solid];
m4_74 -> m4_80  [key=2, style=dotted];
m4_74 -> m4_76  [color=darkseagreen4, key=1, label=negativeEnumClass, style=dashed];
m4_74 -> m4_77  [color=darkseagreen4, key=1, label=negativeEnumClass, style=dashed];
m4_75 -> m4_76  [key=0, style=solid];
m4_76 -> m4_77  [key=0, style=solid];
m4_77 -> m4_78  [key=0, style=solid];
m4_77 -> m4_20  [key=2, style=dotted];
m4_77 -> m4_21  [key=2, style=dotted];
m4_78 -> m4_79  [key=0, style=solid];
m4_78 -> m4_30  [key=2, style=dotted];
m4_79 -> m4_73  [color=blue, key=0, style=bold];
m4_113 -> m4_114  [key=0, style=solid];
m4_114 -> m4_115  [key=0, style=solid];
m4_114 -> m4_30  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_115 -> m4_116  [key=0, style=solid];
m4_115 -> m4_20  [key=2, style=dotted];
m4_115 -> m4_39  [key=2, style=dotted];
m4_116 -> m4_117  [key=0, style=solid];
m4_116 -> m4_5  [key=2, style=dotted];
m4_117 -> m4_113  [color=blue, key=0, style=bold];
m4_40 -> m4_41  [key=0, style=solid];
m4_41 -> m4_42  [key=0, style=solid];
m4_41 -> m4_48  [key=2, style=dotted];
m4_41 -> m4_43  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m4_41 -> m4_44  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m4_41 -> m4_45  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m4_42 -> m4_43  [key=0, style=solid];
m4_43 -> m4_44  [key=0, style=solid];
m4_44 -> m4_45  [key=0, style=solid];
m4_45 -> m4_46  [key=0, style=solid];
m4_45 -> m4_20  [key=2, style=dotted];
m4_45 -> m4_21  [key=2, style=dotted];
m4_46 -> m4_47  [key=0, style=solid];
m4_46 -> m4_30  [key=2, style=dotted];
m4_47 -> m4_40  [color=blue, key=0, style=bold];
m4_81 -> m4_82  [key=0, style=solid];
m4_82 -> m4_83  [key=0, style=solid];
m4_82 -> m4_78  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_83 -> m4_84  [key=0, style=solid];
m4_83 -> m4_20  [key=2, style=dotted];
m4_83 -> m4_39  [key=2, style=dotted];
m4_83 -> m4_85  [color=darkseagreen4, key=1, label=negativeEnumClass, style=dashed];
m4_84 -> m4_85  [key=0, style=solid];
m4_84 -> m4_5  [key=2, style=dotted];
m4_85 -> m4_86  [key=0, style=solid];
m4_85 -> m4_5  [key=2, style=dotted];
m4_86 -> m4_81  [color=blue, key=0, style=bold];
m4_94 -> m4_95  [key=0, style=solid];
m4_95 -> m4_96  [key=0, style=solid];
m4_95 -> m4_46  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_96 -> m4_97  [key=0, style=solid];
m4_96 -> m4_20  [key=2, style=dotted];
m4_96 -> m4_39  [key=2, style=dotted];
m4_96 -> m4_98  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m4_96 -> m4_99  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m4_97 -> m4_98  [key=0, style=solid];
m4_97 -> m4_5  [key=2, style=dotted];
m4_98 -> m4_99  [key=0, style=solid];
m4_98 -> m4_5  [key=2, style=dotted];
m4_99 -> m4_100  [key=0, style=solid];
m4_99 -> m4_5  [key=2, style=dotted];
m4_100 -> m4_94  [color=blue, key=0, style=bold];
m4_118 -> m4_119  [key=0, style=solid];
m4_119 -> m4_120  [key=0, style=solid];
m4_119 -> m4_119  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_120 -> m4_121  [key=0, style=solid];
m4_120 -> m4_20  [key=2, style=dotted];
m4_120 -> m4_39  [key=2, style=dotted];
m4_121 -> m4_122  [key=0, style=solid];
m4_121 -> m4_123  [key=2, style=dotted];
m4_122 -> m4_118  [color=blue, key=0, style=bold];
m4_172 -> m4_173  [key=0, style=solid];
m4_173 -> m4_174  [key=0, style=solid];
m4_173 -> m4_14  [key=2, style=dotted];
m4_173 -> m4_175  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_174 -> m4_172  [color=blue, key=0, style=bold];
m4_57 -> m4_58  [key=0, style=solid];
m4_58 -> m4_59  [key=0, style=solid];
m4_58 -> m4_48  [key=2, style=dotted];
m4_58 -> m4_60  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m4_58 -> m4_61  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m4_58 -> m4_62  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m4_59 -> m4_60  [key=0, style=solid];
m4_60 -> m4_61  [key=0, style=solid];
m4_61 -> m4_62  [key=0, style=solid];
m4_62 -> m4_63  [key=0, style=solid];
m4_62 -> m4_20  [key=2, style=dotted];
m4_62 -> m4_21  [key=2, style=dotted];
m4_63 -> m4_64  [key=0, style=solid];
m4_63 -> m4_30  [key=2, style=dotted];
m4_64 -> m4_57  [color=blue, key=0, style=bold];
m4_11 -> m4_12  [key=0, style=solid];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_14  [key=2, style=dotted];
m4_12 -> m4_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_13 -> m4_11  [color=blue, key=0, style=bold];
m4_49 -> m4_50  [key=0, style=solid];
m4_50 -> m4_51  [key=0, style=solid];
m4_50 -> m4_48  [key=2, style=dotted];
m4_50 -> m4_52  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m4_50 -> m4_53  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m4_50 -> m4_54  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m4_51 -> m4_52  [key=0, style=solid];
m4_52 -> m4_53  [key=0, style=solid];
m4_53 -> m4_54  [key=0, style=solid];
m4_54 -> m4_55  [key=0, style=solid];
m4_54 -> m4_20  [key=2, style=dotted];
m4_54 -> m4_21  [key=2, style=dotted];
m4_55 -> m4_56  [key=0, style=solid];
m4_55 -> m4_30  [key=2, style=dotted];
m4_56 -> m4_49  [color=blue, key=0, style=bold];
m4_65 -> m4_66  [key=0, style=solid];
m4_66 -> m4_67  [key=0, style=solid];
m4_66 -> m4_48  [key=2, style=dotted];
m4_66 -> m4_68  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m4_66 -> m4_69  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m4_66 -> m4_70  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m4_67 -> m4_68  [key=0, style=solid];
m4_68 -> m4_69  [key=0, style=solid];
m4_69 -> m4_70  [key=0, style=solid];
m4_70 -> m4_71  [key=0, style=solid];
m4_70 -> m4_20  [key=2, style=dotted];
m4_70 -> m4_21  [key=2, style=dotted];
m4_71 -> m4_72  [key=0, style=solid];
m4_71 -> m4_30  [key=2, style=dotted];
m4_72 -> m4_65  [color=blue, key=0, style=bold];
m4_178 -> m4_179  [key=0, style=solid];
m4_179 -> m4_180  [key=0, style=solid];
m4_179 -> m4_183  [key=2, style=dotted];
m4_179 -> m4_181  [color=darkseagreen4, key=1, label=ms, style=dashed];
m4_179 -> m4_187  [color=darkseagreen4, key=1, label=ms, style=dashed];
m4_180 -> m4_181  [key=0, style=solid];
m4_180 -> m4_184  [key=2, style=dotted];
m4_180 -> m4_187  [color=darkseagreen4, key=1, label=s, style=dashed];
m4_180 -> m4_189  [color=darkseagreen4, key=1, label=s, style=dashed];
m4_181 -> m4_182  [key=0, style=solid];
m4_181 -> m4_185  [key=2, style=dotted];
m4_181 -> m4_186  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_181 -> m4_181  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m4_182 -> m4_178  [color=blue, key=0, style=bold];
m4_101 -> m4_102  [key=0, style=solid];
m4_102 -> m4_103  [key=0, style=solid];
m4_102 -> m4_63  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_103 -> m4_104  [key=0, style=solid];
m4_103 -> m4_20  [key=2, style=dotted];
m4_103 -> m4_39  [key=2, style=dotted];
m4_103 -> m4_105  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m4_103 -> m4_106  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m4_104 -> m4_105  [key=0, style=solid];
m4_104 -> m4_5  [key=2, style=dotted];
m4_105 -> m4_106  [key=0, style=solid];
m4_105 -> m4_5  [key=2, style=dotted];
m4_106 -> m4_107  [key=0, style=solid];
m4_106 -> m4_5  [key=2, style=dotted];
m4_107 -> m4_101  [color=blue, key=0, style=bold];
m4_150 -> m4_151  [key=0, style=solid];
m4_151 -> m4_152  [key=0, style=solid];
m4_151 -> d16  [key=2, style=dotted];
m4_152 -> m4_153  [key=0, style=solid];
m4_152 -> m4_20  [key=2, style=dotted];
m4_152 -> m4_21  [key=2, style=dotted];
m4_152 -> m4_154  [color=darkseagreen4, key=1, label=json1, style=dashed];
m4_153 -> m4_154  [key=0, style=solid];
m4_153 -> m4_30  [key=2, style=dotted];
m4_154 -> m4_155  [key=0, style=solid];
m4_154 -> m4_10  [key=2, style=dotted];
m4_154 -> m4_156  [color=darkseagreen4, key=1, label=foos, style=dashed];
m4_154 -> m4_157  [color=darkseagreen4, key=1, label=foos, style=dashed];
m4_154 -> m4_158  [color=darkseagreen4, key=1, label=foos, style=dashed];
m4_154 -> m4_159  [color=darkseagreen4, key=1, label=foos, style=dashed];
m4_154 -> m4_160  [color=darkseagreen4, key=1, label=foos, style=dashed];
m4_154 -> m4_161  [color=darkseagreen4, key=1, label=foos, style=dashed];
m4_155 -> m4_156  [key=0, style=solid];
m4_155 -> m4_5  [key=2, style=dotted];
m4_156 -> m4_157  [key=0, style=solid];
m4_156 -> m4_5  [key=2, style=dotted];
m4_157 -> m4_158  [key=0, style=solid];
m4_157 -> m4_5  [key=2, style=dotted];
m4_158 -> m4_159  [key=0, style=solid];
m4_158 -> m4_5  [key=2, style=dotted];
m4_159 -> m4_160  [key=0, style=solid];
m4_159 -> m4_5  [key=2, style=dotted];
m4_160 -> m4_161  [key=0, style=solid];
m4_160 -> m4_5  [key=2, style=dotted];
m4_161 -> m4_162  [key=0, style=solid];
m4_161 -> m4_5  [key=2, style=dotted];
m4_162 -> m4_163  [key=0, style=solid];
m4_162 -> d16  [key=2, style=dotted];
m4_163 -> m4_164  [key=0, style=solid];
m4_163 -> m4_20  [key=2, style=dotted];
m4_163 -> m4_21  [key=2, style=dotted];
m4_163 -> m4_165  [color=darkseagreen4, key=1, label=json2, style=dashed];
m4_164 -> m4_165  [key=0, style=solid];
m4_164 -> m4_30  [key=2, style=dotted];
m4_165 -> m4_166  [key=0, style=solid];
m4_165 -> m4_10  [key=2, style=dotted];
m4_165 -> m4_167  [color=darkseagreen4, key=1, label=bars, style=dashed];
m4_165 -> m4_168  [color=darkseagreen4, key=1, label=bars, style=dashed];
m4_165 -> m4_169  [color=darkseagreen4, key=1, label=bars, style=dashed];
m4_166 -> m4_167  [key=0, style=solid];
m4_166 -> m4_5  [key=2, style=dotted];
m4_167 -> m4_168  [key=0, style=solid];
m4_167 -> m4_5  [key=2, style=dotted];
m4_168 -> m4_169  [key=0, style=solid];
m4_168 -> m4_5  [key=2, style=dotted];
m4_169 -> m4_170  [key=0, style=solid];
m4_169 -> m4_5  [key=2, style=dotted];
m4_170 -> m4_150  [color=blue, key=0, style=bold];
m4_87 -> m4_88  [key=0, style=solid];
m4_88 -> m4_89  [key=0, style=solid];
m4_88 -> m4_88  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_89 -> m4_90  [key=0, style=solid];
m4_89 -> m4_20  [key=2, style=dotted];
m4_89 -> m4_39  [key=2, style=dotted];
m4_89 -> m4_91  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m4_89 -> m4_92  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m4_90 -> m4_91  [key=0, style=solid];
m4_90 -> m4_5  [key=2, style=dotted];
m4_91 -> m4_92  [key=0, style=solid];
m4_91 -> m4_5  [key=2, style=dotted];
m4_92 -> m4_93  [key=0, style=solid];
m4_92 -> m4_5  [key=2, style=dotted];
m4_93 -> m4_87  [color=blue, key=0, style=bold];
m4_31 -> m4_32  [key=0, style=solid];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_25  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_20  [key=2, style=dotted];
m4_33 -> m4_39  [key=2, style=dotted];
m4_34 -> m4_35  [key=0, style=solid];
m4_34 -> m4_5  [key=2, style=dotted];
m4_35 -> m4_36  [key=0, style=solid];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> m4_20  [key=2, style=dotted];
m4_36 -> m4_39  [key=2, style=dotted];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_5  [key=2, style=dotted];
m4_38 -> m4_31  [color=blue, key=0, style=bold];
m4_108 -> m4_109  [key=0, style=solid];
m4_109 -> m4_110  [key=0, style=solid];
m4_109 -> m4_19  [key=2, style=dotted];
m4_110 -> m4_111  [key=0, style=solid];
m4_110 -> m4_20  [key=2, style=dotted];
m4_110 -> m4_21  [key=2, style=dotted];
m4_111 -> m4_112  [key=0, style=solid];
m4_111 -> m4_30  [key=2, style=dotted];
m4_112 -> m4_108  [color=blue, key=0, style=bold];
m4_186 -> m4_187  [key=0, style=solid];
m4_15 -> m4_16  [key=0, style=solid];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_19  [key=2, style=dotted];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_20  [key=2, style=dotted];
m4_17 -> m4_21  [key=2, style=dotted];
m4_18 -> m4_15  [color=blue, key=0, style=bold];
m4_131 -> m4_132  [key=0, style=solid];
m4_131 -> m4_135  [key=2, style=dotted];
m4_131 -> m4_136  [key=2, style=dotted];
m4_131 -> m4_137  [key=2, style=dotted];
m4_128 -> m4_129  [key=0, style=solid];
m4_129 -> m4_130  [key=0, style=solid];
m4_129 -> m4_133  [key=2, style=dotted];
m4_129 -> m4_131  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m4_130 -> m4_131  [key=0, style=solid];
m4_130 -> m4_20  [key=2, style=dotted];
m4_130 -> m4_134  [key=2, style=dotted];
m4_132 -> m4_128  [color=blue, key=0, style=bold];
m4_175 -> m4_176  [key=0, style=solid];
m4_176 -> m4_177  [key=0, style=solid];
m4_176 -> m4_20  [key=2, style=dotted];
m4_176 -> m4_39  [key=2, style=dotted];
m4_177 -> m4_175  [color=blue, key=0, style=bold];
m4_187 -> m4_188  [key=0, style=solid];
m4_187 -> m4_193  [key=2, style=dotted];
m4_187 -> m4_194  [key=2, style=dotted];
m4_189 -> m4_190  [key=0, style=solid];
m4_189 -> m4_195  [key=2, style=dotted];
m4_189 -> m4_196  [key=2, style=dotted];
m4_189 -> m4_197  [key=2, style=dotted];
m4_189 -> m4_191  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_188 -> m4_189  [key=0, style=solid];
m4_190 -> m4_191  [key=0, style=solid];
m4_190 -> m4_5  [key=2, style=dotted];
m4_191 -> m4_192  [key=0, style=solid];
m4_191 -> m4_5  [key=2, style=dotted];
m4_192 -> m4_186  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_4  [key=2, style=dotted];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_5  [key=2, style=dotted];
m4_3 -> m4_0  [color=blue, key=0, style=bold];
m4_124 -> m4_125  [key=0, style=solid];
m4_125 -> m4_126  [key=0, style=solid];
m4_125 -> m4_131  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_125 -> m4_125  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_126 -> m4_127  [key=0, style=solid];
m4_126 -> m4_14  [key=2, style=dotted];
m4_126 -> m4_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_127 -> m4_124  [color=blue, key=0, style=bold];
m4_198 -> m4_131  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_199 -> m4_187  [color=darkseagreen4, key=1, label=ms, style=dashed];
m4_200 -> m4_187  [color=darkseagreen4, key=1, label=s, style=dashed];
m4_200 -> m4_189  [color=darkseagreen4, key=1, label=s, style=dashed];
}
