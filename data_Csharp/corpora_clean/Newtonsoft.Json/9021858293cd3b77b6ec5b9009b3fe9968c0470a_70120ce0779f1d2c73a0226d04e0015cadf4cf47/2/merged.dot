digraph  {
n14 [label="Newtonsoft.Json.JsonConverter", span=""];
n0 [label="Entry Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)", span="33-33", cluster="Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)"];
n1 [label="JsonSerializer serializer = new JsonSerializer()", span="35-35", cluster="Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)"];
n2 [label="serializer.Serialize(writer, value)", span="37-37", cluster="Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)"];
n4 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="109-109", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()"];
n3 [label="Exit Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)", span="33-33", cluster="Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)"];
n5 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="476-476", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)"];
n6 [label="Entry Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", span="40-40", cluster="Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)"];
n7 [label="throw new NotImplementedException(string.Format(''{0} has not overriden FromJson method.'', GetType().Name));", span="42-42", cluster="Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)"];
n8 [label="Exit Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", span="40-40", cluster="Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)"];
n9 [label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0", cluster="System.NotImplementedException.NotImplementedException(string)"];
n10 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()"];
n11 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)"];
n12 [label="Entry Newtonsoft.Json.JsonConverter.CanConvert(System.Type)", span="45-45", cluster="Newtonsoft.Json.JsonConverter.CanConvert(System.Type)"];
n13 [label="Exit Newtonsoft.Json.JsonConverter.CanConvert(System.Type)", span="45-45", cluster="Newtonsoft.Json.JsonConverter.CanConvert(System.Type)"];
m1_8 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="Issue1682.cs"];
m1_7 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="524-524", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="Issue1682.cs"];
m1_10 [label="Entry Newtonsoft.Json.Tests.Issues.Issue1682.Test_Deserialize()", span="59-59", cluster="Newtonsoft.Json.Tests.Issues.Issue1682.Test_Deserialize()", file="Issue1682.cs"];
m1_11 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { JsonConvert.DeserializeObject<BaseSerializable>(''{}''); },\r\n                ''Could not create an instance of type Newtonsoft.Json.Tests.Issues.Issue1682+BaseSerializable. Type is an interface or abstract class and cannot be instantiated. Path '', line 1, position 2.'')", span="61-63", cluster="Newtonsoft.Json.Tests.Issues.Issue1682.Test_Deserialize()", color=green, community=1, file="Issue1682.cs"];
m1_12 [label="Exit Newtonsoft.Json.Tests.Issues.Issue1682.Test_Deserialize()", span="59-59", cluster="Newtonsoft.Json.Tests.Issues.Issue1682.Test_Deserialize()", file="Issue1682.cs"];
m1_14 [label="Entry lambda expression", span="62-62", cluster="lambda expression", file="Issue1682.cs"];
m1_15 [label="JsonConvert.DeserializeObject<BaseSerializable>(''{}'')", span="62-62", cluster="lambda expression", color=green, community=0, file="Issue1682.cs"];
m1_16 [label="Exit lambda expression", span="62-62", cluster="lambda expression", file="Issue1682.cs"];
m1_17 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="703-703", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="Issue1682.cs"];
m1_13 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="370-370", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="Issue1682.cs"];
m1_9 [label="Entry Newtonsoft.Json.Tests.Issues.Issue1682.ClassWithSerializableProperty.ClassWithSerializableProperty()", span="66-66", cluster="Newtonsoft.Json.Tests.Issues.Issue1682.ClassWithSerializableProperty.ClassWithSerializableProperty()", file="Issue1682.cs"];
m1_0 [label="Entry Newtonsoft.Json.Tests.Issues.Issue1682.Test_Serialize()", span="49-49", cluster="Newtonsoft.Json.Tests.Issues.Issue1682.Test_Serialize()", file="Issue1682.cs"];
m1_1 [label="string s1 = JsonConvert.SerializeObject(new ConcreteSerializable())", span="51-51", cluster="Newtonsoft.Json.Tests.Issues.Issue1682.Test_Serialize()", color=green, community=0, file="Issue1682.cs"];
m1_2 [label="Assert.AreEqual(''{}'', s1)", span="52-52", cluster="Newtonsoft.Json.Tests.Issues.Issue1682.Test_Serialize()", color=green, community=0, file="Issue1682.cs"];
m1_3 [label="string s2 = JsonConvert.SerializeObject(new ClassWithSerializableProperty())", span="54-54", cluster="Newtonsoft.Json.Tests.Issues.Issue1682.Test_Serialize()", color=green, community=0, file="Issue1682.cs"];
m1_4 [label="Assert.AreEqual(@''{''''Serializable'''':null}'', s2)", span="55-55", cluster="Newtonsoft.Json.Tests.Issues.Issue1682.Test_Serialize()", color=green, community=0, file="Issue1682.cs"];
m1_5 [label="Exit Newtonsoft.Json.Tests.Issues.Issue1682.Test_Serialize()", span="49-49", cluster="Newtonsoft.Json.Tests.Issues.Issue1682.Test_Serialize()", file="Issue1682.cs"];
m1_6 [label="Entry Newtonsoft.Json.Tests.Issues.Issue1682.ConcreteSerializable.ConcreteSerializable()", span="74-74", cluster="Newtonsoft.Json.Tests.Issues.Issue1682.ConcreteSerializable.ConcreteSerializable()", file="Issue1682.cs"];
m1_18 [label="Exit Newtonsoft.Json.Tests.Issues.Issue1682.ConcreteSerializable.ConcreteSerializable()", span="74-74", cluster="Newtonsoft.Json.Tests.Issues.Issue1682.ConcreteSerializable.ConcreteSerializable()", file="Issue1682.cs"];
m2_527 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", span="939-939", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonSchema.cs"];
m2_528 [label="JsonReader reader = new JsonTextReader(new StringReader(@''true''))", span="941-941", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonSchema.cs"];
m2_529 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error reading bytes. Unexpected token: Boolean. Path '', line 1, position 4.'',\r\n                () => { reader.ReadAsBytes(); })", span="943-945", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonSchema.cs"];
m2_530 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", span="939-939", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonSchema.cs"];
m2_762 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="JsonSchema.cs"];
m2_777 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", span="1314-1314", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSchema.cs"];
m2_778 [label="string input = @''[\r\n  NaN,\r\n  Infinity,\r\n  -Infinity\r\n]''", span="1316-1320", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSchema.cs"];
m2_779 [label="StringReader sr = new StringReader(input)", span="1322-1322", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSchema.cs"];
m2_780 [label="JsonReader jsonReader = new JsonTextReader(sr)", span="1324-1324", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSchema.cs"];
m2_781 [label="jsonReader.Read()", span="1326-1326", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSchema.cs"];
m2_782 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartArray)", span="1327-1327", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSchema.cs"];
m2_783 [label="jsonReader.Read()", span="1329-1329", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSchema.cs"];
m2_784 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1330-1330", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSchema.cs"];
m2_785 [label="Assert.AreEqual(jsonReader.Value, double.NaN)", span="1331-1331", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSchema.cs"];
m2_786 [label="jsonReader.Read()", span="1333-1333", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSchema.cs"];
m2_787 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1334-1334", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSchema.cs"];
m2_788 [label="Assert.AreEqual(jsonReader.Value, double.PositiveInfinity)", span="1335-1335", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSchema.cs"];
m2_789 [label="jsonReader.Read()", span="1337-1337", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSchema.cs"];
m2_790 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1338-1338", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSchema.cs"];
m2_791 [label="Assert.AreEqual(jsonReader.Value, double.NegativeInfinity)", span="1339-1339", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSchema.cs"];
m2_792 [label="jsonReader.Read()", span="1341-1341", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSchema.cs"];
m2_793 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndArray)", span="1342-1342", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSchema.cs"];
m2_794 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", span="1314-1314", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSchema.cs"];
m2_1146 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", span="1873-1873", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSchema.cs"];
m2_1147 [label="string json = @''{''''Offset'''':''''2011-08-01T21:25Z''''}''", span="1875-1875", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSchema.cs"];
m2_1148 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1877-1877", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSchema.cs"];
m2_1149 [label="Assert.IsTrue(reader.Read())", span="1879-1879", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSchema.cs"];
m2_1150 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1880-1880", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSchema.cs"];
m2_1151 [label="Assert.IsTrue(reader.Read())", span="1882-1882", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSchema.cs"];
m2_1152 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1883-1883", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSchema.cs"];
m2_1153 [label="reader.ReadAsDateTimeOffset()", span="1885-1885", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSchema.cs"];
m2_1154 [label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="1886-1886", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSchema.cs"];
m2_1155 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="1887-1887", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSchema.cs"];
m2_1156 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2011, 8, 1, 21, 25, 0, DateTimeKind.Utc), TimeSpan.Zero), reader.Value)", span="1888-1888", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSchema.cs"];
m2_1157 [label="Assert.IsTrue(reader.Read())", span="1890-1890", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSchema.cs"];
m2_1158 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1891-1891", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSchema.cs"];
m2_1159 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", span="1873-1873", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSchema.cs"];
m2_15 [label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="299-299", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonSchema.cs"];
m2_1144 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="JsonSchema.cs"];
m2_551 [label="Entry Unk.IsNull", span="", cluster="Unk.IsNull", file="JsonSchema.cs"];
m2_560 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", span="983-983", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_561 [label="string newLinesText = StringUtils.CarriageReturn + StringUtils.CarriageReturnLineFeed + StringUtils.LineFeed + StringUtils.CarriageReturnLineFeed + '' '' + StringUtils.CarriageReturn + StringUtils.CarriageReturnLineFeed", span="985-985", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_562 [label="string json =\r\n                newLinesText\r\n                + ''{'' + newLinesText\r\n                + ''''' + newLinesText\r\n                + ''name1'' + newLinesText\r\n                + ''''' + newLinesText\r\n                + '':'' + newLinesText\r\n                + ''['' + newLinesText\r\n                + ''new'' + newLinesText\r\n                + ''Date'' + newLinesText\r\n                + ''('' + newLinesText\r\n                + ''1'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''null'' + newLinesText\r\n                + ''/*'' + newLinesText\r\n                + ''blah comment'' + newLinesText\r\n                + ''*/'' + newLinesText\r\n                + '')'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''1.1111'' + newLinesText\r\n                + '']'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''name2'' + newLinesText\r\n                + '':'' + newLinesText\r\n                + ''{'' + newLinesText\r\n                + ''}'' + newLinesText\r\n                + ''}'' + newLinesText", span="987-1013", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_564 [label="StringReader sr = new StringReader(newLinesText)", span="1016-1016", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_572 [label="Assert.AreEqual(newLinesText + ''name1'' + newLinesText, reader.Value)", span="1028-1028", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_587 [label="Assert.AreEqual(newLinesText + ''blah comment'' + newLinesText, reader.Value)", span="1048-1048", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_563 [label="int count = 0", span="1015-1015", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_567 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="1022-1022", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_566 [label="count++", span="1019-1019", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_565 [label="sr.ReadLine() != null", span="1017-1017", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_568 [label="Assert.IsTrue(reader.Read())", span="1023-1023", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_569 [label="Assert.AreEqual(7, reader.LineNumber)", span="1024-1024", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_570 [label="Assert.IsTrue(reader.Read())", span="1026-1026", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_571 [label="Assert.AreEqual(31, reader.LineNumber)", span="1027-1027", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_573 [label="Assert.IsTrue(reader.Read())", span="1030-1030", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_574 [label="Assert.AreEqual(37, reader.LineNumber)", span="1031-1031", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_575 [label="Assert.IsTrue(reader.Read())", span="1033-1033", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_576 [label="Assert.AreEqual(55, reader.LineNumber)", span="1034-1034", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_577 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="1035-1035", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_578 [label="Assert.AreEqual(''Date'', reader.Value)", span="1036-1036", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_579 [label="Assert.IsTrue(reader.Read())", span="1038-1038", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_580 [label="Assert.AreEqual(61, reader.LineNumber)", span="1039-1039", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_581 [label="Assert.AreEqual(1L, reader.Value)", span="1040-1040", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_582 [label="Assert.IsTrue(reader.Read())", span="1042-1042", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_583 [label="Assert.AreEqual(73, reader.LineNumber)", span="1043-1043", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_584 [label="Assert.AreEqual(null, reader.Value)", span="1044-1044", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_585 [label="Assert.IsTrue(reader.Read())", span="1046-1046", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_586 [label="Assert.AreEqual(91, reader.LineNumber)", span="1047-1047", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_588 [label="Assert.IsTrue(reader.Read())", span="1050-1050", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_589 [label="Assert.AreEqual(97, reader.LineNumber)", span="1051-1051", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_590 [label="Assert.IsTrue(reader.Read())", span="1053-1053", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_591 [label="Assert.AreEqual(109, reader.LineNumber)", span="1054-1054", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_592 [label="Assert.IsTrue(reader.Read())", span="1056-1056", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_593 [label="Assert.AreEqual(115, reader.LineNumber)", span="1057-1057", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_594 [label="Assert.IsTrue(reader.Read())", span="1059-1059", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_595 [label="Assert.AreEqual(133, reader.LineNumber)", span="1060-1060", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_596 [label="Assert.AreEqual(''name2'', reader.Value)", span="1061-1061", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_597 [label="Assert.IsTrue(reader.Read())", span="1063-1063", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_598 [label="Assert.AreEqual(139, reader.LineNumber)", span="1064-1064", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_599 [label="Assert.IsTrue(reader.Read())", span="1066-1066", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_600 [label="Assert.AreEqual(145, reader.LineNumber)", span="1067-1067", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_601 [label="Assert.IsTrue(reader.Read())", span="1069-1069", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_602 [label="Assert.AreEqual(151, reader.LineNumber)", span="1070-1070", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_603 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", span="983-983", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSchema.cs"];
m2_541 [label="Entry System.Convert.ToBase64String(byte[])", span="0-0", cluster="System.Convert.ToBase64String(byte[])", file="JsonSchema.cs"];
m2_1433 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", span="2339-2339", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonSchema.cs"];
m2_1434 [label="string json = ''new Date,()''", span="2341-2341", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonSchema.cs"];
m2_1435 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2342-2342", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonSchema.cs"];
m2_1436 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected character while parsing constructor: ,. Path '', line 1, position 8.'',\r\n                () => { Assert.IsTrue(reader.Read()); })", span="2344-2346", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonSchema.cs"];
m2_1437 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", span="2339-2339", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonSchema.cs"];
m2_1194 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", span="1946-1946", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonSchema.cs"];
m2_1195 [label="string json = @''{''''Name'''':1}''", span="1948-1948", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonSchema.cs"];
m2_1196 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1950-1950", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonSchema.cs"];
m2_1197 [label="Assert.IsTrue(reader.Read())", span="1952-1952", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonSchema.cs"];
m2_1198 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1953-1953", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonSchema.cs"];
m2_1199 [label="Assert.IsTrue(reader.Read())", span="1955-1955", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonSchema.cs"];
m2_1200 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1956-1956", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonSchema.cs"];
m2_1201 [label="reader.ReadAsDecimal()", span="1958-1958", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonSchema.cs"];
m2_1202 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="1959-1959", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonSchema.cs"];
m2_1203 [label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="1960-1960", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonSchema.cs"];
m2_1204 [label="Assert.AreEqual(1m, reader.Value)", span="1961-1961", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonSchema.cs"];
m2_1205 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", span="1946-1946", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonSchema.cs"];
m2_132 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", span="296-296", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonSchema.cs"];
m2_133 [label="string input = @''{\r\n''''matches'''' : [\r\n{''''t'''':''''C'''', ''''n'''':''''Citigroup Inc.'''', ''''e'''':''''NYSE'''', ''''id'''':''''662713''''}\r\n,{''''t'''':''''CHL'''', ''''n'''':''''China Mobile Ltd. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''660998''''}\r\n,{''''t'''':''''PTR'''', ''''n'''':''''PetroChina Company Limited (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''664536''''}\r\n,{''''t'''':''''RIO'''', ''''n'''':''''Companhia Vale do Rio Doce (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''671472''''}\r\n,{''''t'''':''''RIOPR'''', ''''n'''':''''Companhia Vale do Rio Doce (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''3512643''''}\r\n,{''''t'''':''''CSCO'''', ''''n'''':''''Cisco Systems, Inc.'''', ''''e'''':''''NASDAQ'''', ''''id'''':''''99624''''}\r\n,{''''t'''':''''CVX'''', ''''n'''':''''Chevron Corporation'''', ''''e'''':''''NYSE'''', ''''id'''':''''667226''''}\r\n,{''''t'''':''''TM'''', ''''n'''':''''Toyota Motor Corporation (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''655880''''}\r\n,{''''t'''':''''JPM'''', ''''n'''':''''JPMorgan Chase \\x26 Co.'''', ''''e'''':''''NYSE'''', ''''id'''':''''665639''''}\r\n,{''''t'''':''''COP'''', ''''n'''':''''ConocoPhillips'''', ''''e'''':''''NYSE'''', ''''id'''':''''1691168''''}\r\n,{''''t'''':''''LFC'''', ''''n'''':''''China Life Insurance Company Ltd. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''688679''''}\r\n,{''''t'''':''''NOK'''', ''''n'''':''''Nokia Corporation (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''657729''''}\r\n,{''''t'''':''''KO'''', ''''n'''':''''The Coca-Cola Company'''', ''''e'''':''''NYSE'''', ''''id'''':''''6550''''}\r\n,{''''t'''':''''VZ'''', ''''n'''':''''Verizon Communications Inc.'''', ''''e'''':''''NYSE'''', ''''id'''':''''664887''''}\r\n,{''''t'''':''''AMX'''', ''''n'''':''''America Movil S.A.B de C.V. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''665834''''}],\r\n''''all'''' : false\r\n}\r\n''", span="298-317", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonSchema.cs"];
m2_134 [label="JsonReader jsonReader = new JsonTextReader(new StringReader(input))", span="319-319", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonSchema.cs"];
m2_135 [label="jsonReader.Read()", span="321-321", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonSchema.cs"];
m2_136 [label="Console.WriteLine(jsonReader.Value)", span="323-323", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonSchema.cs"];
m2_137 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", span="296-296", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonSchema.cs"];
m2_158 [label="Entry System.Text.UTF8Encoding.UTF8Encoding(bool)", span="0-0", cluster="System.Text.UTF8Encoding.UTF8Encoding(bool)", file="JsonSchema.cs"];
m2_1177 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JsonSchema.cs"];
m2_1145 [label="Entry System.TimeSpan.Add(System.TimeSpan)", span="0-0", cluster="System.TimeSpan.Add(System.TimeSpan)", file="JsonSchema.cs"];
m2_16 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="JsonSchema.cs"];
m2_1590 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", span="2581-2581", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonSchema.cs"];
m2_1591 [label="string json = ''[[]]''", span="2583-2583", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonSchema.cs"];
m2_1592 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                MaxDepth = 1\r\n            }", span="2585-2588", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonSchema.cs"];
m2_1593 [label="Assert.IsTrue(reader.Read())", span="2590-2590", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonSchema.cs"];
m2_1594 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'',\r\n                () => { Assert.IsTrue(reader.Read()); })", span="2592-2594", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonSchema.cs"];
m2_1595 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", span="2581-2581", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonSchema.cs"];
m2_770 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="931-931", cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="JsonSchema.cs"];
m2_823 [label="Entry System.Convert.ToInt32(char)", span="0-0", cluster="System.Convert.ToInt32(char)", file="JsonSchema.cs"];
m2_1038 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", span="1708-1708", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonSchema.cs"];
m2_1039 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1.0]''))", span="1710-1710", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonSchema.cs"];
m2_1040 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected token when reading bytes: Float. Path '[0]', line 1, position 4.'',\r\n                () => { reader.ReadAsBytes(); })", span="1712-1714", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonSchema.cs"];
m2_1041 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", span="1708-1708", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonSchema.cs"];
m2_910 [label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0", cluster="System.Text.Encoding.GetString(byte[], int, int)", file="JsonSchema.cs"];
m2_1731 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", span="2781-2781", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSchema.cs"];
m2_1732 [label="ToggleReaderError toggleReaderError = new ToggleReaderError(new StringReader(''{'first':1,'second':2,'third':3}''))", span="2783-2783", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSchema.cs"];
m2_1733 [label="JsonTextReader jsonTextReader = new JsonTextReader(toggleReaderError)", span="2784-2784", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSchema.cs"];
m2_1735 [label="toggleReaderError.Error = true", span="2788-2788", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSchema.cs"];
m2_1738 [label="toggleReaderError.Error = false", span="2797-2797", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSchema.cs"];
m2_1741 [label="toggleReaderError.Error = true", span="2802-2802", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSchema.cs"];
m2_1743 [label="toggleReaderError.Error = false", span="2808-2808", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSchema.cs"];
m2_1746 [label="toggleReaderError.Error = true", span="2813-2813", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSchema.cs"];
m2_1750 [label="toggleReaderError.Error = false", span="2825-2825", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSchema.cs"];
m2_1734 [label="Assert.IsTrue(jsonTextReader.Read())", span="2786-2786", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSchema.cs"];
m2_1736 [label="ExceptionAssert.Throws<Exception>(\r\n                ''Read error'',\r\n                () => jsonTextReader.Read())", span="2790-2792", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSchema.cs"];
m2_1737 [label="ExceptionAssert.Throws<Exception>(\r\n                ''Read error'',\r\n                () => jsonTextReader.Read())", span="2793-2795", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSchema.cs"];
m2_1739 [label="Assert.IsTrue(jsonTextReader.Read())", span="2799-2799", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSchema.cs"];
m2_1740 [label="Assert.AreEqual(''first'', jsonTextReader.Value)", span="2800-2800", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSchema.cs"];
m2_1742 [label="ExceptionAssert.Throws<Exception>(\r\n                ''Read error'',\r\n                () => jsonTextReader.Read())", span="2804-2806", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSchema.cs"];
m2_1744 [label="Assert.IsTrue(jsonTextReader.Read())", span="2810-2810", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSchema.cs"];
m2_1745 [label="Assert.AreEqual(1L, jsonTextReader.Value)", span="2811-2811", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSchema.cs"];
m2_1747 [label="ExceptionAssert.Throws<Exception>(\r\n                ''Read error'',\r\n                () => jsonTextReader.Read())", span="2815-2817", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSchema.cs"];
m2_1748 [label="ExceptionAssert.Throws<Exception>(\r\n                ''Read error'',\r\n                () => jsonTextReader.Read())", span="2818-2820", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSchema.cs"];
m2_1749 [label="ExceptionAssert.Throws<Exception>(\r\n                ''Read error'',\r\n                () => jsonTextReader.Read())", span="2821-2823", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSchema.cs"];
m2_1751 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", span="2781-2781", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSchema.cs"];
m2_91 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="JsonSchema.cs"];
m2_708 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="JsonSchema.cs"];
m2_1587 [label="Entry double.ToString(System.IFormatProvider)", span="0-0", cluster="double.ToString(System.IFormatProvider)", file="JsonSchema.cs"];
m2_520 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", span="929-929", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonSchema.cs"];
m2_521 [label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\''))", span="931-931", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonSchema.cs"];
m2_522 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unterminated string. Expected delimiter: '. Path '', line 1, position 3.'',\r\n                () => { reader.Read(); })", span="933-935", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonSchema.cs"];
m2_523 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", span="929-929", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonSchema.cs"];
m2_950 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", span="1574-1574", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSchema.cs"];
m2_951 [label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1576-1576", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSchema.cs"];
m2_952 [label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1577-1577", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSchema.cs"];
m2_953 [label="Assert.IsTrue(jsonReader.Read())", span="1579-1579", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSchema.cs"];
m2_954 [label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1580-1580", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSchema.cs"];
m2_955 [label="jsonReader.ReadAsInt32()", span="1582-1582", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSchema.cs"];
m2_956 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1583-1583", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSchema.cs"];
m2_957 [label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1584-1584", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSchema.cs"];
m2_958 [label="Assert.AreEqual(250, jsonReader.Value)", span="1585-1585", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSchema.cs"];
m2_959 [label="jsonReader.ReadAsInt32()", span="1587-1587", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSchema.cs"];
m2_960 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1588-1588", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSchema.cs"];
m2_961 [label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1589-1589", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSchema.cs"];
m2_962 [label="Assert.AreEqual(250, jsonReader.Value)", span="1590-1590", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSchema.cs"];
m2_963 [label="jsonReader.ReadAsInt32()", span="1592-1592", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSchema.cs"];
m2_964 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1593-1593", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSchema.cs"];
m2_965 [label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1594-1594", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSchema.cs"];
m2_966 [label="Assert.AreEqual(250, jsonReader.Value)", span="1595-1595", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSchema.cs"];
m2_967 [label="Assert.IsTrue(jsonReader.Read())", span="1597-1597", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSchema.cs"];
m2_968 [label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1598-1598", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSchema.cs"];
m2_969 [label="Assert.IsFalse(jsonReader.Read())", span="1600-1600", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSchema.cs"];
m2_970 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", span="1574-1574", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSchema.cs"];
m2_1442 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", span="2350-2350", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSchema.cs"];
m2_1443 [label="string json = ''\x00a0{\x00a0'h\x00a0i\x00a0'\x00a0:\x00a0[\x00a0true\x00a0,\x00a0new\x00a0Date\x00a0(\x00a0)\x00a0]\x00a0/*\x00a0comment\x00a0*/\x00a0}\x00a0''", span="2352-2352", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSchema.cs"];
m2_1444 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2353-2353", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSchema.cs"];
m2_1445 [label="Assert.IsTrue(reader.Read())", span="2355-2355", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSchema.cs"];
m2_1446 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2356-2356", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSchema.cs"];
m2_1447 [label="Assert.IsTrue(reader.Read())", span="2358-2358", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSchema.cs"];
m2_1448 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2359-2359", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSchema.cs"];
m2_1449 [label="Assert.IsTrue(reader.Read())", span="2361-2361", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSchema.cs"];
m2_1450 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2362-2362", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSchema.cs"];
m2_1451 [label="Assert.IsTrue(reader.Read())", span="2364-2364", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSchema.cs"];
m2_1452 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2365-2365", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSchema.cs"];
m2_1453 [label="Assert.IsTrue(reader.Read())", span="2367-2367", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSchema.cs"];
m2_1454 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2368-2368", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSchema.cs"];
m2_1455 [label="Assert.IsTrue(reader.Read())", span="2370-2370", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSchema.cs"];
m2_1456 [label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2371-2371", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSchema.cs"];
m2_1457 [label="Assert.IsTrue(reader.Read())", span="2373-2373", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSchema.cs"];
m2_1458 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2374-2374", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSchema.cs"];
m2_1459 [label="Assert.IsTrue(reader.Read())", span="2376-2376", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSchema.cs"];
m2_1460 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2377-2377", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSchema.cs"];
m2_1461 [label="Assert.IsTrue(reader.Read())", span="2379-2379", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSchema.cs"];
m2_1462 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2380-2380", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSchema.cs"];
m2_1463 [label="Assert.IsFalse(reader.Read())", span="2382-2382", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSchema.cs"];
m2_1464 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", span="2350-2350", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSchema.cs"];
m2_1752 [label="Entry Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", span="2865-2865", cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JsonSchema.cs"];
m2_1789 [label="_inner = inner", span="2867-2867", cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JsonSchema.cs"];
m2_1790 [label="Exit Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", span="2865-2865", cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JsonSchema.cs"];
m2_1292 [label="Entry System.DateTime.DateTime(long)", span="0-0", cluster="System.DateTime.DateTime(long)", file="JsonSchema.cs"];
m2_435 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", span="790-790", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonSchema.cs"];
m2_436 [label="long i = int.MaxValue", span="792-792", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonSchema.cs"];
m2_437 [label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="794-794", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonSchema.cs"];
m2_442 [label="long total = j + i", span="800-800", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonSchema.cs"];
m2_438 [label="reader.Read()", span="795-795", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonSchema.cs"];
m2_439 [label="Assert.AreEqual(typeof(long), reader.ValueType)", span="796-796", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonSchema.cs"];
m2_443 [label="ExceptionAssert.Throws<OverflowException>(\r\n                    ''Arithmetic operation resulted in an overflow.'',\r\n                    () =>\r\n                    {\r\n                        reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)));\r\n                        reader.ReadAsInt32();\r\n                    })", span="801-807", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonSchema.cs"];
m2_440 [label="int j = 1", span="798-798", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonSchema.cs"];
m2_441 [label="j < 1000", span="798-798", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonSchema.cs"];
m2_444 [label="j++", span="798-798", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonSchema.cs"];
m2_445 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", span="790-790", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonSchema.cs"];
m2_1728 [label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JsonSchema.cs"];
m2_140 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", span="329-329", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSchema.cs"];
m2_141 [label="string json = @''{''''DefaultConverter'''':new Date(0, ''''hi''''),''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}''", span="331-331", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSchema.cs"];
m2_142 [label="JsonReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="333-333", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSchema.cs"];
m2_143 [label="Assert.IsTrue(reader.Read())", span="335-335", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSchema.cs"];
m2_144 [label="Assert.IsTrue(reader.Read())", span="336-336", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSchema.cs"];
m2_145 [label="Assert.IsTrue(reader.Read())", span="337-337", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSchema.cs"];
m2_146 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="338-338", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSchema.cs"];
m2_147 [label="Assert.AreEqual(''Date'', reader.Value)", span="339-339", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSchema.cs"];
m2_148 [label="Assert.IsTrue(reader.Read())", span="341-341", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSchema.cs"];
m2_149 [label="Assert.AreEqual(0L, reader.Value)", span="342-342", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSchema.cs"];
m2_150 [label="Assert.IsTrue(reader.Read())", span="344-344", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSchema.cs"];
m2_151 [label="Assert.AreEqual(''hi'', reader.Value)", span="345-345", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSchema.cs"];
m2_152 [label="Assert.IsTrue(reader.Read())", span="347-347", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSchema.cs"];
m2_153 [label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="348-348", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSchema.cs"];
m2_154 [label="Assert.IsTrue(reader.Read())", span="350-350", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSchema.cs"];
m2_155 [label="Assert.AreEqual(''MemberConverter'', reader.Value)", span="351-351", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSchema.cs"];
m2_156 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", span="329-329", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSchema.cs"];
m2_552 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", span="972-972", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonSchema.cs"];
m2_553 [label="JsonReader reader = new JsonTextReader(new StringReader(@''{aww''))", span="974-974", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonSchema.cs"];
m2_554 [label="Assert.IsTrue(reader.Read())", span="975-975", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonSchema.cs"];
m2_555 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end while parsing unquoted property name. Path '', line 1, position 4.'',\r\n                () => { reader.Read(); })", span="977-979", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonSchema.cs"];
m2_556 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", span="972-972", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonSchema.cs"];
m2_795 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", span="1347-1347", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSchema.cs"];
m2_796 [label="int length = 20000", span="1349-1349", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSchema.cs"];
m2_797 [label="string json = @''['''''' + new string(' ', length) + @'''''']''", span="1350-1350", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSchema.cs"];
m2_798 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1352-1352", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSchema.cs"];
m2_799 [label="reader.Read()", span="1354-1354", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSchema.cs"];
m2_800 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1355-1355", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSchema.cs"];
m2_801 [label="reader.Read()", span="1357-1357", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSchema.cs"];
m2_802 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1358-1358", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSchema.cs"];
m2_803 [label="Assert.AreEqual(typeof(string), reader.ValueType)", span="1359-1359", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSchema.cs"];
m2_804 [label="Assert.AreEqual(20000, reader.Value.ToString().Length)", span="1360-1360", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSchema.cs"];
m2_805 [label="Assert.IsTrue(reader.Read())", span="1362-1362", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSchema.cs"];
m2_806 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1363-1363", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSchema.cs"];
m2_807 [label="Assert.IsFalse(reader.Read())", span="1365-1365", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSchema.cs"];
m2_808 [label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1366-1366", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSchema.cs"];
m2_809 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", span="1347-1347", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSchema.cs"];
m2_393 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="JsonSchema.cs"];
m2_130 [label="Entry Newtonsoft.Json.JsonTextReader.Close()", span="1512-1512", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonSchema.cs"];
m2_1815 [label="Entry System.Array.Copy(System.Array, int, System.Array, int, int)", span="0-0", cluster="System.Array.Copy(System.Array, int, System.Array, int, int)", file="JsonSchema.cs"];
m2_1814 [label="Entry System.Math.Min(int, int)", span="0-0", cluster="System.Math.Min(int, int)", file="JsonSchema.cs"];
m2_681 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", span="1209-1209", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSchema.cs"];
m2_682 [label="JsonTextReader reader = null", span="1211-1211", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSchema.cs"];
m2_683 [label="reader = new JsonTextReader(new StringReader(''1''))", span="1213-1213", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSchema.cs"];
m2_684 [label="Assert.AreEqual(1, reader.ReadAsInt32())", span="1214-1214", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSchema.cs"];
m2_685 [label="reader = new JsonTextReader(new StringReader(''-1''))", span="1216-1216", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSchema.cs"];
m2_686 [label="Assert.AreEqual(-1, reader.ReadAsInt32())", span="1217-1217", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSchema.cs"];
m2_687 [label="reader = new JsonTextReader(new StringReader(''0''))", span="1219-1219", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSchema.cs"];
m2_688 [label="Assert.AreEqual(0, reader.ReadAsInt32())", span="1220-1220", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSchema.cs"];
m2_689 [label="reader = new JsonTextReader(new StringReader(''-0''))", span="1222-1222", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSchema.cs"];
m2_690 [label="Assert.AreEqual(0, reader.ReadAsInt32())", span="1223-1223", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSchema.cs"];
m2_691 [label="reader = new JsonTextReader(new StringReader(int.MaxValue.ToString()))", span="1225-1225", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSchema.cs"];
m2_692 [label="Assert.AreEqual(int.MaxValue, reader.ReadAsInt32())", span="1226-1226", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSchema.cs"];
m2_693 [label="reader = new JsonTextReader(new StringReader(int.MinValue.ToString()))", span="1228-1228", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSchema.cs"];
m2_694 [label="Assert.AreEqual(int.MinValue, reader.ReadAsInt32())", span="1229-1229", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSchema.cs"];
m2_695 [label="reader = new JsonTextReader(new StringReader(long.MaxValue.ToString()))", span="1231-1231", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSchema.cs"];
m2_696 [label="ExceptionAssert.Throws<OverflowException>(''Arithmetic operation resulted in an overflow.'', () => reader.ReadAsInt32())", span="1232-1232", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSchema.cs"];
m2_697 [label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1234-1234", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSchema.cs"];
m2_698 [label="ExceptionAssert.Throws<FormatException>(''Input string was not in a correct format.'', () => reader.ReadAsInt32())", span="1235-1235", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSchema.cs"];
m2_699 [label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1237-1237", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSchema.cs"];
m2_700 [label="ExceptionAssert.Throws<FormatException>(''Input string was not in a correct format.'', () => reader.ReadAsInt32())", span="1238-1238", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSchema.cs"];
m2_701 [label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1240-1240", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSchema.cs"];
m2_702 [label="ExceptionAssert.Throws<FormatException>(''Input string was not in a correct format.'', () => reader.ReadAsInt32())", span="1241-1241", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSchema.cs"];
m2_703 [label="reader = new JsonTextReader(new StringReader(''''))", span="1243-1243", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSchema.cs"];
m2_704 [label="Assert.AreEqual(null, reader.ReadAsInt32())", span="1244-1244", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSchema.cs"];
m2_705 [label="reader = new JsonTextReader(new StringReader(''-''))", span="1246-1246", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSchema.cs"];
m2_706 [label="ExceptionAssert.Throws<FormatException>(''Input string was not in a correct format.'', () => reader.ReadAsInt32())", span="1247-1247", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSchema.cs"];
m2_707 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", span="1209-1209", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSchema.cs"];
m2_1534 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", span="2501-2501", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonSchema.cs"];
m2_1535 [label="JsonReader reader = new JsonTextReader(new StringReader(@''{}}''))", span="2503-2503", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonSchema.cs"];
m2_1536 [label="Assert.IsTrue(reader.Read())", span="2504-2504", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonSchema.cs"];
m2_1537 [label="Assert.IsTrue(reader.Read())", span="2505-2505", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonSchema.cs"];
m2_1538 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Additional text encountered after finished reading JSON content: }. Path '', line 1, position 2.'',\r\n                () => { reader.Read(); })", span="2507-2509", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonSchema.cs"];
m2_1539 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", span="2501-2501", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonSchema.cs"];
m2_79 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", span="211-211", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonSchema.cs"];
m2_80 [label="string json = @''{ ''''MATHEMATICAL ITALIC CAPITAL ALPHA'''': ''''\uD835\uDEE2'''' }''", span="213-213", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonSchema.cs"];
m2_81 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="215-215", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonSchema.cs"];
m2_82 [label="Assert.IsTrue(reader.Read())", span="217-217", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonSchema.cs"];
m2_83 [label="Assert.IsTrue(reader.Read())", span="218-218", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonSchema.cs"];
m2_84 [label="Assert.IsTrue(reader.Read())", span="220-220", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonSchema.cs"];
m2_85 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="221-221", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonSchema.cs"];
m2_86 [label="string s = reader.Value.ToString()", span="223-223", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonSchema.cs"];
m2_87 [label="Assert.AreEqual(2, s.Length)", span="224-224", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonSchema.cs"];
m2_88 [label="StringInfo stringInfo = new StringInfo(s)", span="226-226", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonSchema.cs"];
m2_89 [label="Assert.AreEqual(1, stringInfo.LengthInTextElements)", span="227-227", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonSchema.cs"];
m2_90 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", span="211-211", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonSchema.cs"];
m2_929 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", span="1544-1544", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSchema.cs"];
m2_930 [label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1546-1546", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSchema.cs"];
m2_931 [label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1547-1547", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSchema.cs"];
m2_932 [label="Assert.IsTrue(jsonReader.Read())", span="1549-1549", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSchema.cs"];
m2_933 [label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1550-1550", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSchema.cs"];
m2_934 [label="jsonReader.Read()", span="1552-1552", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSchema.cs"];
m2_935 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1553-1553", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSchema.cs"];
m2_936 [label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1554-1554", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSchema.cs"];
m2_937 [label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1555-1555", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSchema.cs"];
m2_938 [label="jsonReader.Read()", span="1557-1557", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSchema.cs"];
m2_939 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1558-1558", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSchema.cs"];
m2_940 [label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1559-1559", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSchema.cs"];
m2_941 [label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1560-1560", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSchema.cs"];
m2_942 [label="jsonReader.Read()", span="1562-1562", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSchema.cs"];
m2_943 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1563-1563", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSchema.cs"];
m2_944 [label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1564-1564", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSchema.cs"];
m2_945 [label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1565-1565", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSchema.cs"];
m2_946 [label="Assert.IsTrue(jsonReader.Read())", span="1567-1567", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSchema.cs"];
m2_947 [label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1568-1568", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSchema.cs"];
m2_948 [label="Assert.IsFalse(jsonReader.Read())", span="1570-1570", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSchema.cs"];
m2_949 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", span="1544-1544", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSchema.cs"];
m2_908 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="317-317", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonSchema.cs"];
m2_979 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", span="1616-1616", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonSchema.cs"];
m2_980 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1618-1618", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonSchema.cs"];
m2_981 [label="Assert.IsNull(reader.ReadAsDecimal())", span="1620-1620", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonSchema.cs"];
m2_982 [label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1621-1621", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonSchema.cs"];
m2_983 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", span="1616-1616", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonSchema.cs"];
m2_497 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", span="877-877", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonSchema.cs"];
m2_498 [label="string json = @''\r\n{\r\n  ''''description'''': ''''A person'''',\r\n  ''''type'''': ''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''name'''': {''''type'''':''''string''''},\r\n    ''''hobbies'''': {\r\n      ''''type'''': ''''array'''',\r\n      ''''items'''': {''''type'''':''''string''''}\r\n    }\r\n  }\r\n}\r\n''", span="879-892", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonSchema.cs"];
m2_499 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="894-894", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonSchema.cs"];
m2_500 [label="int i = 0", span="899-899", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonSchema.cs"];
m2_502 [label="Assert.IsTrue(reader.Read())", span="901-901", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonSchema.cs"];
m2_504 [label="Assert.IsTrue(reader.Read())", span="904-904", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonSchema.cs"];
m2_505 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="905-905", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonSchema.cs"];
m2_506 [label="Assert.AreEqual(''type'', reader.Value)", span="906-906", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonSchema.cs"];
m2_501 [label="i < 14", span="899-899", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonSchema.cs"];
m2_503 [label="i++", span="899-899", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonSchema.cs"];
m2_507 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", span="877-877", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonSchema.cs"];
m2_824 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", span="1393-1393", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_825 [label="string json =\r\n                @''[0.0,0.0,0.1,1.0,1.000001,1E-06,4.94065645841247E-324,Infinity,-Infinity,NaN,1.7976931348623157E+308,-1.7976931348623157E+308,Infinity,-Infinity,NaN,0e-10,0.25e-5,0.3e10]''", span="1395-1396", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_826 [label="JsonReader jsonReader = new JsonTextReader(new StringReader(json))", span="1398-1398", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_827 [label="jsonReader.Read()", span="1400-1400", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_828 [label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1401-1401", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_829 [label="jsonReader.Read()", span="1403-1403", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_830 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1404-1404", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_831 [label="Assert.AreEqual(0.0, jsonReader.Value)", span="1405-1405", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_832 [label="jsonReader.Read()", span="1407-1407", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_833 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1408-1408", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_834 [label="Assert.AreEqual(0.0, jsonReader.Value)", span="1409-1409", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_835 [label="jsonReader.Read()", span="1411-1411", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_836 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1412-1412", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_837 [label="Assert.AreEqual(0.1, jsonReader.Value)", span="1413-1413", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_838 [label="jsonReader.Read()", span="1415-1415", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_839 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1416-1416", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_840 [label="Assert.AreEqual(1.0, jsonReader.Value)", span="1417-1417", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_841 [label="jsonReader.Read()", span="1419-1419", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_842 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1420-1420", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_843 [label="Assert.AreEqual(1.000001, jsonReader.Value)", span="1421-1421", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_844 [label="jsonReader.Read()", span="1423-1423", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_845 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1424-1424", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_846 [label="Assert.AreEqual(1E-06, jsonReader.Value)", span="1425-1425", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_847 [label="jsonReader.Read()", span="1427-1427", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_848 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1428-1428", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_849 [label="Assert.AreEqual(4.94065645841247E-324, jsonReader.Value)", span="1429-1429", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_850 [label="jsonReader.Read()", span="1431-1431", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_851 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1432-1432", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_852 [label="Assert.AreEqual(double.PositiveInfinity, jsonReader.Value)", span="1433-1433", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_853 [label="jsonReader.Read()", span="1435-1435", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_854 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1436-1436", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_855 [label="Assert.AreEqual(double.NegativeInfinity, jsonReader.Value)", span="1437-1437", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_856 [label="jsonReader.Read()", span="1439-1439", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_857 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1440-1440", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_858 [label="Assert.AreEqual(double.NaN, jsonReader.Value)", span="1441-1441", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_859 [label="jsonReader.Read()", span="1443-1443", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_860 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1444-1444", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_861 [label="Assert.AreEqual(double.MaxValue, jsonReader.Value)", span="1445-1445", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_862 [label="jsonReader.Read()", span="1447-1447", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_863 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1448-1448", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_864 [label="Assert.AreEqual(double.MinValue, jsonReader.Value)", span="1449-1449", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_865 [label="jsonReader.Read()", span="1451-1451", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_866 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1452-1452", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_867 [label="Assert.AreEqual(double.PositiveInfinity, jsonReader.Value)", span="1453-1453", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_868 [label="jsonReader.Read()", span="1455-1455", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_869 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1456-1456", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_870 [label="Assert.AreEqual(double.NegativeInfinity, jsonReader.Value)", span="1457-1457", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_871 [label="jsonReader.Read()", span="1459-1459", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_872 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1460-1460", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_873 [label="Assert.AreEqual(double.NaN, jsonReader.Value)", span="1461-1461", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_874 [label="jsonReader.Read()", span="1463-1463", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_875 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1464-1464", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_876 [label="Assert.AreEqual(0d, jsonReader.Value)", span="1465-1465", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_877 [label="jsonReader.Read()", span="1467-1467", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_878 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1468-1468", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_879 [label="Assert.AreEqual(0.0000025d, jsonReader.Value)", span="1469-1469", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_880 [label="jsonReader.Read()", span="1471-1471", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_881 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1472-1472", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_882 [label="Assert.AreEqual(3000000000d, jsonReader.Value)", span="1473-1473", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_883 [label="jsonReader.Read()", span="1475-1475", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_884 [label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1476-1476", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_885 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", span="1393-1393", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSchema.cs"];
m2_1178 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", span="1920-1920", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSchema.cs"];
m2_1179 [label="string json = @''{''''Offset'''':''''30/1/2011''''}''", span="1922-1922", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSchema.cs"];
m2_1180 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1924-1924", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSchema.cs"];
m2_1181 [label="reader.Culture = new CultureInfo(''en-NZ'')", span="1925-1925", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSchema.cs"];
m2_1182 [label="Assert.IsTrue(reader.Read())", span="1927-1927", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSchema.cs"];
m2_1183 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1928-1928", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSchema.cs"];
m2_1184 [label="Assert.IsTrue(reader.Read())", span="1930-1930", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSchema.cs"];
m2_1185 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1931-1931", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSchema.cs"];
m2_1186 [label="reader.ReadAsDateTimeOffset()", span="1933-1933", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSchema.cs"];
m2_1187 [label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="1934-1934", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSchema.cs"];
m2_1188 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="1935-1935", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSchema.cs"];
m2_1189 [label="DateTimeOffset dt = (DateTimeOffset)reader.Value", span="1937-1937", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSchema.cs"];
m2_1191 [label="Assert.IsTrue(reader.Read())", span="1940-1940", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSchema.cs"];
m2_1192 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1941-1941", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSchema.cs"];
m2_1190 [label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", span="1938-1938", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSchema.cs"];
m2_1193 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", span="1920-1920", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSchema.cs"];
m2_1796 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="JsonSchema.cs"];
m2_1371 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", span="2245-2245", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonSchema.cs"];
m2_1372 [label="string json = ''[true ''", span="2247-2247", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonSchema.cs"];
m2_1373 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2248-2248", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonSchema.cs"];
m2_1374 [label="Assert.IsTrue(reader.Read())", span="2250-2250", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonSchema.cs"];
m2_1375 [label="Assert.IsTrue(reader.Read())", span="2251-2251", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonSchema.cs"];
m2_1376 [label="Assert.IsFalse(reader.Read())", span="2252-2252", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonSchema.cs"];
m2_1377 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", span="2245-2245", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonSchema.cs"];
m2_675 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="656-656", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JsonSchema.cs"];
m2_513 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", span="919-919", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonSchema.cs"];
m2_514 [label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\u123''))", span="921-921", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonSchema.cs"];
m2_515 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end while parsing unicode character. Path '', line 1, position 4.'',\r\n                () => { reader.Read(); })", span="923-925", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonSchema.cs"];
m2_516 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", span="919-919", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonSchema.cs"];
m2_48 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", span="108-108", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonSchema.cs"];
m2_49 [label="string json = ''[NaN]''", span="110-110", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonSchema.cs"];
m2_50 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="112-112", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonSchema.cs"];
m2_51 [label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="113-113", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonSchema.cs"];
m2_52 [label="Assert.IsTrue(reader.Read())", span="115-115", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonSchema.cs"];
m2_53 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="116-116", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonSchema.cs"];
m2_54 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Cannot read NaN as a decimal.'',\r\n                () => reader.Read())", span="118-120", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonSchema.cs"];
m2_55 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", span="108-108", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonSchema.cs"];
m2_1798 [label="Entry Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", span="2885-2885", cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", file="JsonSchema.cs"];
m2_1799 [label="bytes = content", span="2887-2887", cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", file="JsonSchema.cs"];
m2_1801 [label="this.bytesPerRead = bytesPerRead", span="2889-2889", cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", file="JsonSchema.cs"];
m2_1800 [label="totalBytesRead = 0", span="2888-2888", cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", file="JsonSchema.cs"];
m2_1802 [label="Exit Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", span="2885-2885", cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", file="JsonSchema.cs"];
m2_394 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", span="707-707", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSchema.cs"];
m2_395 [label="string json = ''\0{\0'\0h\0i\0'\0:\0[\01\0,\0'\0'\0\0,\0null\0]\0,\0do\0:true\0}\0\0/*\0sd\0f\0*/\0/*\0sd\0f\0*/ \0''", span="709-709", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSchema.cs"];
m2_396 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="710-710", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSchema.cs"];
m2_397 [label="Assert.IsTrue(reader.Read())", span="712-712", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSchema.cs"];
m2_398 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="713-713", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSchema.cs"];
m2_399 [label="Assert.IsTrue(reader.Read())", span="715-715", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSchema.cs"];
m2_400 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="716-716", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSchema.cs"];
m2_401 [label="Assert.IsTrue(reader.Read())", span="718-718", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSchema.cs"];
m2_402 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="719-719", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSchema.cs"];
m2_403 [label="Assert.IsTrue(reader.Read())", span="721-721", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSchema.cs"];
m2_404 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="722-722", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSchema.cs"];
m2_405 [label="Assert.IsTrue(reader.Read())", span="724-724", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSchema.cs"];
m2_406 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="725-725", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSchema.cs"];
m2_407 [label="Assert.IsTrue(reader.Read())", span="727-727", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSchema.cs"];
m2_408 [label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="728-728", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSchema.cs"];
m2_409 [label="Assert.IsTrue(reader.Read())", span="730-730", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSchema.cs"];
m2_410 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="731-731", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSchema.cs"];
m2_411 [label="Assert.IsTrue(reader.Read())", span="733-733", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSchema.cs"];
m2_412 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="734-734", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSchema.cs"];
m2_413 [label="Assert.IsTrue(reader.Read())", span="736-736", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSchema.cs"];
m2_414 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="737-737", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSchema.cs"];
m2_415 [label="Assert.IsTrue(reader.Read())", span="739-739", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSchema.cs"];
m2_416 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="740-740", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSchema.cs"];
m2_417 [label="Assert.IsTrue(reader.Read())", span="742-742", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSchema.cs"];
m2_418 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="743-743", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSchema.cs"];
m2_419 [label="Assert.AreEqual(''\0sd\0f\0'', reader.Value)", span="744-744", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSchema.cs"];
m2_420 [label="Assert.IsTrue(reader.Read())", span="746-746", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSchema.cs"];
m2_421 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="747-747", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSchema.cs"];
m2_422 [label="Assert.AreEqual(''\0sd\0f\0'', reader.Value)", span="748-748", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSchema.cs"];
m2_423 [label="Assert.IsFalse(reader.Read())", span="750-750", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSchema.cs"];
m2_424 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", span="707-707", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSchema.cs"];
m2_0 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", span="50-50", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonSchema.cs"];
m2_1 [label="string json = @''{ ''''ItemName'''': ''''value'''', ''''u'''':netanelsalinger,''''r'''':9 }''", span="52-52", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonSchema.cs"];
m2_2 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="54-54", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonSchema.cs"];
m2_3 [label="Assert.IsTrue(reader.Read())", span="56-56", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonSchema.cs"];
m2_4 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="57-57", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonSchema.cs"];
m2_5 [label="Assert.IsTrue(reader.Read())", span="59-59", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonSchema.cs"];
m2_6 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="60-60", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonSchema.cs"];
m2_7 [label="Assert.IsTrue(reader.Read())", span="62-62", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonSchema.cs"];
m2_8 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="63-63", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonSchema.cs"];
m2_9 [label="Assert.IsTrue(reader.Read())", span="65-65", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonSchema.cs"];
m2_10 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="66-66", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonSchema.cs"];
m2_11 [label="ExceptionAssert.Throws<JsonReaderException>(''Unexpected content while parsing JSON. Path 'u', line 1, position 27.'',\r\n                () => { reader.Read(); })", span="68-69", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonSchema.cs"];
m2_12 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", span="50-50", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonSchema.cs"];
m2_676 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", span="1178-1178", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonSchema.cs"];
m2_677 [label="string json = @''[\r\n  true,\r\n  {\r\n    ''''integer'''': 99,\r\n    ''''string'''': ''''how now brown cow?'''',\r\n    ''''array'''': [\r\n      0,\r\n      1,\r\n      2,\r\n      3,\r\n      4,\r\n      {\r\n        ''''decimal'''': 990.00990099\r\n      },\r\n      5\r\n    ]\r\n  },\r\n  ''''This is a string.'''',\r\n  null,\r\n  null\r\n]''", span="1180-1200", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonSchema.cs"];
m2_678 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1202-1202", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonSchema.cs"];
m2_679 [label="reader.Read()", span="1203-1203", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonSchema.cs"];
m2_680 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", span="1178-1178", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonSchema.cs"];
m2_763 [label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", span="0-0", cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", file="JsonSchema.cs"];
m2_1394 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", span="2278-2278", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonSchema.cs"];
m2_1395 [label="string json = ''{hi:1, ''", span="2280-2280", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonSchema.cs"];
m2_1396 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2281-2281", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonSchema.cs"];
m2_1397 [label="Assert.IsTrue(reader.Read())", span="2283-2283", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonSchema.cs"];
m2_1398 [label="Assert.IsTrue(reader.Read())", span="2284-2284", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonSchema.cs"];
m2_1399 [label="Assert.IsTrue(reader.Read())", span="2285-2285", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonSchema.cs"];
m2_1400 [label="Assert.IsFalse(reader.Read())", span="2286-2286", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonSchema.cs"];
m2_1401 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", span="2278-2278", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonSchema.cs"];
m2_347 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", span="652-652", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="JsonSchema.cs"];
m2_348 [label="ExceptionAssert.Throws<ArgumentNullException>(\r\n                @''Value cannot be null.\r\nParameter name: reader'',\r\n                () => { new JsonTextReader(null); })", span="654-657", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="JsonSchema.cs"];
m2_349 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", span="652-652", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="JsonSchema.cs"];
m2_545 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", span="962-962", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonSchema.cs"];
m2_546 [label="JsonReader reader = new JsonTextReader(new StringReader(@''[  ''))", span="964-964", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonSchema.cs"];
m2_547 [label="Assert.IsTrue(reader.Read())", span="965-965", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonSchema.cs"];
m2_548 [label="Assert.IsNull(reader.ReadAsBytes())", span="967-967", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonSchema.cs"];
m2_549 [label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="968-968", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonSchema.cs"];
m2_550 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", span="962-962", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonSchema.cs"];
m2_185 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", span="410-410", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JsonSchema.cs"];
m2_186 [label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n]   \r\n\r\n''", span="412-418", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JsonSchema.cs"];
m2_187 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="420-420", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JsonSchema.cs"];
m2_188 [label="reader.Read()", span="421-421", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JsonSchema.cs"];
m2_189 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", span="410-410", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JsonSchema.cs"];
m2_604 [label="Entry System.IO.StringReader.ReadLine()", span="0-0", cluster="System.IO.StringReader.ReadLine()", file="JsonSchema.cs"];
m2_1246 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", span="2023-2023", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonSchema.cs"];
m2_1247 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/sdf''))", span="2025-2025", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonSchema.cs"];
m2_1248 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error parsing comment. Expected: *, got s. Path '', line 1, position 1.'',\r\n                () => { reader.Read(); })", span="2027-2029", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonSchema.cs"];
m2_1249 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", span="2023-2023", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonSchema.cs"];
m2_198 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", span="444-444", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_199 [label="string input = @''{\r\n  CPU: 'Intel',\r\n  Drives: [\r\n    'DVD read/writer',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}''", span="446-452", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_200 [label="StringReader sr = new StringReader(input)", span="454-454", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_201 [label="JsonTextReader jsonReader = new JsonTextReader(sr)", span="456-456", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_202 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.None)", span="462-462", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_203 [label="Assert.AreEqual(0, jsonReader.LineNumber)", span="463-463", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_204 [label="Assert.AreEqual(0, jsonReader.LinePosition)", span="464-464", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_205 [label="jsonReader.Read()", span="466-466", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_206 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartObject)", span="467-467", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_207 [label="Assert.AreEqual(1, jsonReader.LineNumber)", span="468-468", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_208 [label="Assert.AreEqual(1, jsonReader.LinePosition)", span="469-469", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_209 [label="jsonReader.Read()", span="471-471", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_210 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.PropertyName)", span="472-472", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_211 [label="Assert.AreEqual(jsonReader.Value, ''CPU'')", span="473-473", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_212 [label="Assert.AreEqual(2, jsonReader.LineNumber)", span="474-474", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_213 [label="Assert.AreEqual(7, jsonReader.LinePosition)", span="475-475", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_214 [label="jsonReader.Read()", span="477-477", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_215 [label="Assert.AreEqual(JsonToken.String, jsonReader.TokenType)", span="478-478", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_216 [label="Assert.AreEqual(''Intel'', jsonReader.Value)", span="479-479", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_217 [label="Assert.AreEqual(2, jsonReader.LineNumber)", span="480-480", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_218 [label="Assert.AreEqual(15, jsonReader.LinePosition)", span="481-481", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_219 [label="jsonReader.Read()", span="483-483", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_220 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.PropertyName)", span="484-484", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_221 [label="Assert.AreEqual(jsonReader.Value, ''Drives'')", span="485-485", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_222 [label="Assert.AreEqual(3, jsonReader.LineNumber)", span="486-486", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_223 [label="Assert.AreEqual(10, jsonReader.LinePosition)", span="487-487", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_224 [label="jsonReader.Read()", span="489-489", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_225 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartArray)", span="490-490", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_226 [label="Assert.AreEqual(3, jsonReader.LineNumber)", span="491-491", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_227 [label="Assert.AreEqual(12, jsonReader.LinePosition)", span="492-492", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_228 [label="jsonReader.Read()", span="494-494", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_229 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="495-495", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_230 [label="Assert.AreEqual(jsonReader.Value, ''DVD read/writer'')", span="496-496", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_231 [label="Assert.AreEqual(jsonReader.QuoteChar, '\'')", span="497-497", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_232 [label="Assert.AreEqual(4, jsonReader.LineNumber)", span="498-498", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_233 [label="Assert.AreEqual(22, jsonReader.LinePosition)", span="499-499", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_234 [label="jsonReader.Read()", span="501-501", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_235 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="502-502", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_236 [label="Assert.AreEqual(jsonReader.Value, ''500 gigabyte hard drive'')", span="503-503", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_237 [label="Assert.AreEqual(jsonReader.QuoteChar, '''')", span="504-504", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_238 [label="Assert.AreEqual(5, jsonReader.LineNumber)", span="505-505", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_239 [label="Assert.AreEqual(30, jsonReader.LinePosition)", span="506-506", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_240 [label="jsonReader.Read()", span="508-508", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_241 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndArray)", span="509-509", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_242 [label="Assert.AreEqual(6, jsonReader.LineNumber)", span="510-510", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_243 [label="Assert.AreEqual(4, jsonReader.LinePosition)", span="511-511", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_244 [label="jsonReader.Read()", span="513-513", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_245 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndObject)", span="514-514", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_246 [label="Assert.AreEqual(7, jsonReader.LineNumber)", span="515-515", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_247 [label="Assert.AreEqual(2, jsonReader.LinePosition)", span="516-516", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_248 [label="Assert.IsFalse(jsonReader.Read())", span="518-518", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_249 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", span="444-444", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSchema.cs"];
m2_159 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", span="355-355", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonSchema.cs"];
m2_160 [label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n],''", span="357-361", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonSchema.cs"];
m2_161 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="363-363", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonSchema.cs"];
m2_162 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Additional text encountered after finished reading JSON content: ,. Path '', line 5, position 2.'',\r\n                () =>\r\n                {\r\n                    while (reader.Read())\r\n                    {\r\n                    }\r\n                })", span="365-372", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonSchema.cs"];
m2_163 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", span="355-355", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonSchema.cs"];
m2_1002 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="363-363", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonSchema.cs"];
m2_1239 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", span="2013-2013", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonSchema.cs"];
m2_1240 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/* sdf''))", span="2015-2015", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonSchema.cs"];
m2_1241 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end while parsing comment. Path '', line 1, position 6.'',\r\n                () => { reader.Read(); })", span="2017-2019", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonSchema.cs"];
m2_1242 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", span="2013-2013", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonSchema.cs"];
m2_1267 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", span="2055-2055", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSchema.cs"];
m2_1268 [label="string json = @''{''''decimal'''':''''9,99''''}''", span="2057-2057", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSchema.cs"];
m2_1269 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2059-2059", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSchema.cs"];
m2_1270 [label="reader.Culture = new CultureInfo(''fr-FR'')", span="2060-2060", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSchema.cs"];
m2_1271 [label="Assert.IsTrue(reader.Read())", span="2062-2062", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSchema.cs"];
m2_1272 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2063-2063", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSchema.cs"];
m2_1273 [label="Assert.IsTrue(reader.Read())", span="2065-2065", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSchema.cs"];
m2_1274 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2066-2066", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSchema.cs"];
m2_1275 [label="decimal? d = reader.ReadAsDecimal()", span="2068-2068", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSchema.cs"];
m2_1276 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2069-2069", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSchema.cs"];
m2_1277 [label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2070-2070", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSchema.cs"];
m2_1279 [label="Assert.IsTrue(reader.Read())", span="2073-2073", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSchema.cs"];
m2_1280 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2074-2074", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSchema.cs"];
m2_1278 [label="Assert.AreEqual(9.99m, d)", span="2071-2071", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSchema.cs"];
m2_1281 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", span="2055-2055", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSchema.cs"];
m2_131 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="JsonSchema.cs"];
m2_984 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="326-326", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonSchema.cs"];
m2_1282 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", span="2078-2078", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonSchema.cs"];
m2_1283 [label="string json = @''[\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  },\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  }\r\n]''", span="2080-2091", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonSchema.cs"];
m2_1284 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2093-2093", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonSchema.cs"];
m2_1285 [label="int i = 0", span="2098-2098", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonSchema.cs"];
m2_1287 [label="reader.Read()", span="2100-2100", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonSchema.cs"];
m2_1289 [label="Assert.IsTrue(reader.Read())", span="2103-2103", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonSchema.cs"];
m2_1290 [label="Assert.AreEqual(new DateTime(631136448000000000), reader.Value)", span="2104-2104", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonSchema.cs"];
m2_1286 [label="i < 13", span="2098-2098", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonSchema.cs"];
m2_1288 [label="i++", span="2098-2098", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonSchema.cs"];
m2_1291 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", span="2078-2078", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonSchema.cs"];
m2_1599 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", span="2598-2598", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSchema.cs"];
m2_1600 [label="string json = ''[[[[]]],[[]]]''", span="2600-2600", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSchema.cs"];
m2_1601 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                MaxDepth = 1\r\n            }", span="2602-2605", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSchema.cs"];
m2_1602 [label="Assert.IsTrue(reader.Read())", span="2607-2607", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSchema.cs"];
m2_1603 [label="Assert.AreEqual(0, reader.Depth)", span="2608-2608", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSchema.cs"];
m2_1604 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'',\r\n                () => { Assert.IsTrue(reader.Read()); })", span="2610-2612", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSchema.cs"];
m2_1605 [label="Assert.AreEqual(1, reader.Depth)", span="2613-2613", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSchema.cs"];
m2_1606 [label="Assert.IsTrue(reader.Read())", span="2615-2615", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSchema.cs"];
m2_1607 [label="Assert.AreEqual(2, reader.Depth)", span="2616-2616", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSchema.cs"];
m2_1608 [label="Assert.IsTrue(reader.Read())", span="2618-2618", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSchema.cs"];
m2_1609 [label="Assert.AreEqual(3, reader.Depth)", span="2619-2619", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSchema.cs"];
m2_1610 [label="Assert.IsTrue(reader.Read())", span="2621-2621", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSchema.cs"];
m2_1611 [label="Assert.AreEqual(3, reader.Depth)", span="2622-2622", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSchema.cs"];
m2_1612 [label="Assert.IsTrue(reader.Read())", span="2624-2624", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSchema.cs"];
m2_1613 [label="Assert.AreEqual(2, reader.Depth)", span="2625-2625", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSchema.cs"];
m2_1614 [label="Assert.IsTrue(reader.Read())", span="2627-2627", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSchema.cs"];
m2_1615 [label="Assert.AreEqual(1, reader.Depth)", span="2628-2628", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSchema.cs"];
m2_1616 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''The reader's MaxDepth of 1 has been exceeded. Path '[1]', line 1, position 9.'',\r\n                () => { Assert.IsTrue(reader.Read()); })", span="2630-2632", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSchema.cs"];
m2_1617 [label="Assert.AreEqual(1, reader.Depth)", span="2633-2633", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSchema.cs"];
m2_1618 [label="Assert.IsTrue(reader.Read())", span="2635-2635", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSchema.cs"];
m2_1619 [label="Assert.AreEqual(2, reader.Depth)", span="2636-2636", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSchema.cs"];
m2_1620 [label="Assert.IsTrue(reader.Read())", span="2638-2638", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSchema.cs"];
m2_1621 [label="Assert.AreEqual(2, reader.Depth)", span="2639-2639", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSchema.cs"];
m2_1622 [label="Assert.IsTrue(reader.Read())", span="2641-2641", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSchema.cs"];
m2_1623 [label="Assert.AreEqual(1, reader.Depth)", span="2642-2642", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSchema.cs"];
m2_1624 [label="Assert.IsTrue(reader.Read())", span="2644-2644", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSchema.cs"];
m2_1625 [label="Assert.AreEqual(0, reader.Depth)", span="2645-2645", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSchema.cs"];
m2_1626 [label="Assert.IsFalse(reader.Read())", span="2647-2647", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSchema.cs"];
m2_1627 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", span="2598-2598", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSchema.cs"];
m2_1017 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", span="1676-1676", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonSchema.cs"];
m2_1018 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1678-1678", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonSchema.cs"];
m2_1019 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error reading date. Unexpected token: StartConstructor. Path '', line 1, position 9.'',\r\n                () => { reader.ReadAsDateTimeOffset(); })", span="1680-1682", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonSchema.cs"];
m2_1020 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", span="1676-1676", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonSchema.cs"];
m2_107 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", span="265-265", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonSchema.cs"];
m2_108 [label="MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(@'''''''' + input + @''''''''))", span="267-267", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonSchema.cs"];
m2_109 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(ms))", span="269-269", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonSchema.cs"];
m2_110 [label="reader.Read()", span="270-270", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonSchema.cs"];
m2_111 [label="string s = (string)reader.Value", span="272-272", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonSchema.cs"];
m2_112 [label="return s;", span="274-274", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonSchema.cs"];
m2_113 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", span="265-265", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonSchema.cs"];
m2_1253 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", span="2033-2033", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSchema.cs"];
m2_1254 [label="string json = @''{''''decimal'''':-7.92281625142643E+28}''", span="2035-2035", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSchema.cs"];
m2_1255 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2037-2037", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSchema.cs"];
m2_1256 [label="Assert.IsTrue(reader.Read())", span="2039-2039", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSchema.cs"];
m2_1257 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2040-2040", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSchema.cs"];
m2_1258 [label="Assert.IsTrue(reader.Read())", span="2042-2042", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSchema.cs"];
m2_1259 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2043-2043", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSchema.cs"];
m2_1260 [label="decimal? d = reader.ReadAsDecimal()", span="2045-2045", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSchema.cs"];
m2_1261 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2046-2046", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSchema.cs"];
m2_1262 [label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2047-2047", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSchema.cs"];
m2_1264 [label="Assert.IsTrue(reader.Read())", span="2050-2050", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSchema.cs"];
m2_1265 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2051-2051", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSchema.cs"];
m2_1263 [label="Assert.AreEqual(-79228162514264300000000000000m, d)", span="2048-2048", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSchema.cs"];
m2_1266 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", span="2033-2033", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSchema.cs"];
m2_725 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", span="1251-1251", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSchema.cs"];
m2_726 [label="StringBuilder sb = new StringBuilder()", span="1253-1253", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSchema.cs"];
m2_727 [label="StringWriter sw = new StringWriter(sb)", span="1254-1254", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSchema.cs"];
m2_753 [label="string json = sb.ToString()", span="1293-1293", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSchema.cs"];
m2_728 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="1256-1259", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSchema.cs"];
m2_729 [label="jsonWriter.WriteStartArray()", span="1261-1261", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSchema.cs"];
m2_730 [label="jsonWriter.WriteValue(true)", span="1262-1262", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSchema.cs"];
m2_731 [label="jsonWriter.WriteStartObject()", span="1264-1264", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSchema.cs"];
m2_732 [label="jsonWriter.WritePropertyName(''integer'')", span="1265-1265", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSchema.cs"];
m2_733 [label="jsonWriter.WriteValue(99)", span="1266-1266", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSchema.cs"];
m2_734 [label="jsonWriter.WritePropertyName(''string'')", span="1267-1267", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSchema.cs"];
m2_735 [label="jsonWriter.WriteValue(''how now brown cow?'')", span="1268-1268", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSchema.cs"];
m2_736 [label="jsonWriter.WritePropertyName(''array'')", span="1269-1269", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSchema.cs"];
m2_737 [label="jsonWriter.WriteStartArray()", span="1271-1271", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSchema.cs"];
m2_740 [label="jsonWriter.WriteValue(i)", span="1274-1274", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSchema.cs"];
m2_742 [label="jsonWriter.WriteStartObject()", span="1277-1277", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSchema.cs"];
m2_743 [label="jsonWriter.WritePropertyName(''decimal'')", span="1278-1278", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSchema.cs"];
m2_744 [label="jsonWriter.WriteValue(990.00990099m)", span="1279-1279", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSchema.cs"];
m2_745 [label="jsonWriter.WriteEndObject()", span="1280-1280", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSchema.cs"];
m2_746 [label="jsonWriter.WriteValue(5)", span="1282-1282", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSchema.cs"];
m2_747 [label="jsonWriter.WriteEndArray()", span="1283-1283", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSchema.cs"];
m2_748 [label="jsonWriter.WriteEndObject()", span="1285-1285", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSchema.cs"];
m2_749 [label="jsonWriter.WriteValue(''This is a string.'')", span="1287-1287", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSchema.cs"];
m2_750 [label="jsonWriter.WriteNull()", span="1288-1288", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSchema.cs"];
m2_751 [label="jsonWriter.WriteNull()", span="1289-1289", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSchema.cs"];
m2_752 [label="jsonWriter.WriteEndArray()", span="1290-1290", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSchema.cs"];
m2_738 [label="int i = 0", span="1272-1272", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSchema.cs"];
m2_739 [label="i < 5", span="1272-1272", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSchema.cs"];
m2_741 [label="i++", span="1272-1272", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSchema.cs"];
m2_754 [label="JsonSerializer serializer = new JsonSerializer()", span="1295-1295", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSchema.cs"];
m2_755 [label="object jsonObject = serializer.Deserialize(new JsonTextReader(new StringReader(json)))", span="1297-1297", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSchema.cs"];
m2_760 [label="Assert.AreEqual(json, sb.ToString())", span="1310-1310", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSchema.cs"];
m2_759 [label="serializer.Serialize(jsonWriter, jsonObject)", span="1307-1307", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSchema.cs"];
m2_756 [label="sb = new StringBuilder()", span="1299-1299", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSchema.cs"];
m2_757 [label="sw = new StringWriter(sb)", span="1300-1300", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSchema.cs"];
m2_758 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="1302-1305", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSchema.cs"];
m2_761 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", span="1251-1251", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSchema.cs"];
m2_1418 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeperator()", span="2316-2316", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeperator()", file="JsonSchema.cs"];
m2_1419 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''true/''))", span="2318-2318", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeperator()", file="JsonSchema.cs"];
m2_1420 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error parsing boolean value. Path '', line 1, position 4.'',\r\n                () => { reader.Read(); })", span="2320-2322", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeperator()", file="JsonSchema.cs"];
m2_1421 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeperator()", span="2316-2316", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeperator()", file="JsonSchema.cs"];
m2_129 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="JsonSchema.cs"];
m2_1797 [label="Entry System.IO.TextReader.Read(char[], int, int)", span="0-0", cluster="System.IO.TextReader.Read(char[], int, int)", file="JsonSchema.cs"];
m2_1634 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", span="2651-2651", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1635 [label="string json = ''[false, true, true, false, 'test!', 1.11, 0e-10, 0E-10, 0.25e-5, 0.3e10, 6.0221418e23, 'Purple\\r \\n monkey\\'s:\\tdishwasher']''", span="2653-2653", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1636 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2655-2655", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1637 [label="Assert.IsTrue(reader.Read())", span="2657-2657", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1638 [label="Assert.IsTrue(reader.Read())", span="2659-2659", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1639 [label="Assert.AreEqual(false, reader.Value)", span="2660-2660", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1640 [label="Assert.IsTrue(reader.Read())", span="2662-2662", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1641 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2663-2663", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1642 [label="Assert.AreEqual(true, reader.Value)", span="2664-2664", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1643 [label="Assert.IsTrue(reader.Read())", span="2666-2666", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1644 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2667-2667", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1645 [label="Assert.AreEqual(true, reader.Value)", span="2668-2668", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1646 [label="Assert.IsTrue(reader.Read())", span="2670-2670", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1647 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2671-2671", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1648 [label="Assert.AreEqual(false, reader.Value)", span="2672-2672", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1649 [label="Assert.IsTrue(reader.Read())", span="2674-2674", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1650 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2675-2675", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1651 [label="Assert.AreEqual(''test!'', reader.Value)", span="2676-2676", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1652 [label="Assert.IsTrue(reader.Read())", span="2678-2678", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1653 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2679-2679", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1654 [label="Assert.AreEqual(1.11d, reader.Value)", span="2680-2680", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1655 [label="Assert.IsTrue(reader.Read())", span="2682-2682", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1656 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2683-2683", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1657 [label="Assert.AreEqual(0d, reader.Value)", span="2684-2684", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1658 [label="Assert.IsTrue(reader.Read())", span="2686-2686", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1659 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2687-2687", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1660 [label="Assert.AreEqual(0d, reader.Value)", span="2688-2688", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1661 [label="Assert.IsTrue(reader.Read())", span="2690-2690", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1662 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2691-2691", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1663 [label="Assert.AreEqual(0.0000025d, reader.Value)", span="2692-2692", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1664 [label="Assert.IsTrue(reader.Read())", span="2694-2694", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1665 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2695-2695", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1666 [label="Assert.AreEqual(3000000000d, reader.Value)", span="2696-2696", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1667 [label="Assert.IsTrue(reader.Read())", span="2698-2698", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1668 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2699-2699", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1669 [label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="2700-2700", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1670 [label="Assert.IsTrue(reader.Read())", span="2702-2702", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1671 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2703-2703", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1672 [label="Assert.AreEqual(reader.Value, ''Purple\r \n monkey's:\tdishwasher'')", span="2704-2704", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1673 [label="Assert.IsTrue(reader.Read())", span="2706-2706", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_1674 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", span="2651-2651", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSchema.cs"];
m2_47 [label="Entry System.Convert.ToDecimal(double)", span="0-0", cluster="System.Convert.ToDecimal(double)", file="JsonSchema.cs"];
m2_1304 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", span="2138-2138", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonSchema.cs"];
m2_1305 [label="string json = ''new Date\0()''", span="2140-2140", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonSchema.cs"];
m2_1306 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2141-2141", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonSchema.cs"];
m2_1307 [label="Assert.IsTrue(reader.Read())", span="2146-2146", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonSchema.cs"];
m2_1308 [label="Assert.AreEqual(''Date'', reader.Value)", span="2147-2147", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonSchema.cs"];
m2_1309 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2148-2148", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonSchema.cs"];
m2_1310 [label="Assert.IsTrue(reader.Read())", span="2150-2150", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonSchema.cs"];
m2_1311 [label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2151-2151", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonSchema.cs"];
m2_1312 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", span="2138-2138", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonSchema.cs"];
m2_1225 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", span="1993-1993", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonSchema.cs"];
m2_1226 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nulz''))", span="1995-1995", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonSchema.cs"];
m2_1227 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error parsing null value. Path '', line 0, position 0.'',\r\n                () => { reader.Read(); })", span="1997-1999", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonSchema.cs"];
m2_1228 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", span="1993-1993", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonSchema.cs"];
m2_508 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", span="910-910", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonSchema.cs"];
m2_509 [label="JsonReader reader = new JsonTextReader(new StringReader('''h\0i'''))", span="912-912", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonSchema.cs"];
m2_510 [label="Assert.IsTrue(reader.Read())", span="913-913", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonSchema.cs"];
m2_511 [label="Assert.AreEqual(''h\0i'', reader.Value)", span="915-915", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonSchema.cs"];
m2_512 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", span="910-910", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonSchema.cs"];
m2_167 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", span="376-376", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonSchema.cs"];
m2_168 [label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n]content''", span="378-382", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonSchema.cs"];
m2_169 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="384-384", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonSchema.cs"];
m2_170 [label="reader.Read()", span="389-389", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonSchema.cs"];
m2_171 [label="Assert.AreEqual(1, reader.LineNumber)", span="390-390", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonSchema.cs"];
m2_172 [label="reader.Read()", span="392-392", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonSchema.cs"];
m2_173 [label="Assert.AreEqual(2, reader.LineNumber)", span="393-393", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonSchema.cs"];
m2_174 [label="reader.Read()", span="395-395", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonSchema.cs"];
m2_175 [label="Assert.AreEqual(3, reader.LineNumber)", span="396-396", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonSchema.cs"];
m2_176 [label="reader.Read()", span="398-398", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonSchema.cs"];
m2_177 [label="Assert.AreEqual(4, reader.LineNumber)", span="399-399", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonSchema.cs"];
m2_178 [label="reader.Read()", span="401-401", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonSchema.cs"];
m2_179 [label="Assert.AreEqual(5, reader.LineNumber)", span="402-402", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonSchema.cs"];
m2_180 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Additional text encountered after finished reading JSON content: c. Path '', line 5, position 2.'',\r\n                () => { reader.Read(); })", span="404-406", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonSchema.cs"];
m2_181 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", span="376-376", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonSchema.cs"];
m2_772 [label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="772-772", cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonSchema.cs"];
m2_810 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", span="1370-1370", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonSchema.cs"];
m2_811 [label="string json = @''[''''\u003c'''',''''\u5f20'''']''", span="1372-1372", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonSchema.cs"];
m2_812 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1374-1374", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonSchema.cs"];
m2_813 [label="reader.Read()", span="1379-1379", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonSchema.cs"];
m2_814 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1380-1380", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonSchema.cs"];
m2_815 [label="reader.Read()", span="1382-1382", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonSchema.cs"];
m2_816 [label="Assert.AreEqual(''<'', reader.Value)", span="1383-1383", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonSchema.cs"];
m2_817 [label="reader.Read()", span="1385-1385", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonSchema.cs"];
m2_818 [label="Assert.AreEqual(24352, Convert.ToInt32(Convert.ToChar((string)reader.Value)))", span="1386-1386", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonSchema.cs"];
m2_819 [label="reader.Read()", span="1388-1388", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonSchema.cs"];
m2_820 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1389-1389", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonSchema.cs"];
m2_821 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", span="1370-1370", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonSchema.cs"];
m2_250 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", span="523-523", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_251 [label="string input = @''{\r\n  value:'Purple',\r\n  array:[1,2,new Date(1)],\r\n  subobject:{prop:1,proparray:[1]}\r\n}''", span="525-529", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_252 [label="StringReader sr = new StringReader(input)", span="531-531", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_253 [label="JsonReader reader = new JsonTextReader(sr)", span="533-533", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_254 [label="Assert.AreEqual(0, reader.Depth)", span="535-535", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_255 [label="reader.Read()", span="537-537", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_256 [label="Assert.AreEqual(reader.TokenType, JsonToken.StartObject)", span="538-538", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_257 [label="Assert.AreEqual(0, reader.Depth)", span="539-539", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_258 [label="Assert.AreEqual('''', reader.Path)", span="540-540", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_259 [label="reader.Read()", span="542-542", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_260 [label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="543-543", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_261 [label="Assert.AreEqual(1, reader.Depth)", span="544-544", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_262 [label="Assert.AreEqual(''value'', reader.Path)", span="545-545", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_263 [label="reader.Read()", span="547-547", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_264 [label="Assert.AreEqual(reader.TokenType, JsonToken.String)", span="548-548", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_265 [label="Assert.AreEqual(reader.Value, @''Purple'')", span="549-549", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_266 [label="Assert.AreEqual(reader.QuoteChar, '\'')", span="550-550", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_267 [label="Assert.AreEqual(1, reader.Depth)", span="551-551", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_268 [label="Assert.AreEqual(''value'', reader.Path)", span="552-552", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_269 [label="reader.Read()", span="554-554", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_270 [label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="555-555", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_271 [label="Assert.AreEqual(1, reader.Depth)", span="556-556", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_272 [label="Assert.AreEqual(''array'', reader.Path)", span="557-557", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_273 [label="reader.Read()", span="559-559", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_274 [label="Assert.AreEqual(reader.TokenType, JsonToken.StartArray)", span="560-560", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_275 [label="Assert.AreEqual(1, reader.Depth)", span="561-561", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_276 [label="Assert.AreEqual(''array'', reader.Path)", span="562-562", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_277 [label="reader.Read()", span="564-564", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_278 [label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="565-565", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_279 [label="Assert.AreEqual(1L, reader.Value)", span="566-566", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_280 [label="Assert.AreEqual(2, reader.Depth)", span="567-567", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_281 [label="Assert.AreEqual(''array[0]'', reader.Path)", span="568-568", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_282 [label="reader.Read()", span="570-570", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_283 [label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="571-571", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_284 [label="Assert.AreEqual(2L, reader.Value)", span="572-572", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_285 [label="Assert.AreEqual(2, reader.Depth)", span="573-573", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_286 [label="Assert.AreEqual(''array[1]'', reader.Path)", span="574-574", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_287 [label="reader.Read()", span="576-576", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_288 [label="Assert.AreEqual(reader.TokenType, JsonToken.StartConstructor)", span="577-577", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_289 [label="Assert.AreEqual(''Date'', reader.Value)", span="578-578", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_290 [label="Assert.AreEqual(2, reader.Depth)", span="579-579", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_291 [label="Assert.AreEqual(''array[2]'', reader.Path)", span="580-580", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_292 [label="reader.Read()", span="582-582", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_293 [label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="583-583", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_294 [label="Assert.AreEqual(1L, reader.Value)", span="584-584", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_295 [label="Assert.AreEqual(3, reader.Depth)", span="585-585", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_296 [label="Assert.AreEqual(''array[2][0]'', reader.Path)", span="586-586", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_297 [label="reader.Read()", span="588-588", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_298 [label="Assert.AreEqual(reader.TokenType, JsonToken.EndConstructor)", span="589-589", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_299 [label="Assert.AreEqual(null, reader.Value)", span="590-590", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_300 [label="Assert.AreEqual(2, reader.Depth)", span="591-591", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_301 [label="Assert.AreEqual(''array[2]'', reader.Path)", span="592-592", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_302 [label="reader.Read()", span="594-594", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_303 [label="Assert.AreEqual(reader.TokenType, JsonToken.EndArray)", span="595-595", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_304 [label="Assert.AreEqual(1, reader.Depth)", span="596-596", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_305 [label="Assert.AreEqual(''array'', reader.Path)", span="597-597", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_306 [label="reader.Read()", span="599-599", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_307 [label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="600-600", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_308 [label="Assert.AreEqual(1, reader.Depth)", span="601-601", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_309 [label="Assert.AreEqual(''subobject'', reader.Path)", span="602-602", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_310 [label="reader.Read()", span="604-604", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_311 [label="Assert.AreEqual(reader.TokenType, JsonToken.StartObject)", span="605-605", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_312 [label="Assert.AreEqual(1, reader.Depth)", span="606-606", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_313 [label="Assert.AreEqual(''subobject'', reader.Path)", span="607-607", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_314 [label="reader.Read()", span="609-609", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_315 [label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="610-610", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_316 [label="Assert.AreEqual(2, reader.Depth)", span="611-611", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_317 [label="Assert.AreEqual(''subobject.prop'', reader.Path)", span="612-612", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_318 [label="reader.Read()", span="614-614", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_319 [label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="615-615", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_320 [label="Assert.AreEqual(2, reader.Depth)", span="616-616", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_321 [label="Assert.AreEqual(''subobject.prop'', reader.Path)", span="617-617", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_322 [label="reader.Read()", span="619-619", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_323 [label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="620-620", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_324 [label="Assert.AreEqual(2, reader.Depth)", span="621-621", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_325 [label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="622-622", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_326 [label="reader.Read()", span="624-624", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_327 [label="Assert.AreEqual(reader.TokenType, JsonToken.StartArray)", span="625-625", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_328 [label="Assert.AreEqual(2, reader.Depth)", span="626-626", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_329 [label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="627-627", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_330 [label="reader.Read()", span="629-629", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_331 [label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="630-630", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_332 [label="Assert.AreEqual(3, reader.Depth)", span="631-631", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_333 [label="Assert.AreEqual(''subobject.proparray[0]'', reader.Path)", span="632-632", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_334 [label="reader.Read()", span="634-634", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_335 [label="Assert.AreEqual(reader.TokenType, JsonToken.EndArray)", span="635-635", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_336 [label="Assert.AreEqual(2, reader.Depth)", span="636-636", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_337 [label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="637-637", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_338 [label="reader.Read()", span="639-639", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_339 [label="Assert.AreEqual(reader.TokenType, JsonToken.EndObject)", span="640-640", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_340 [label="Assert.AreEqual(1, reader.Depth)", span="641-641", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_341 [label="Assert.AreEqual(''subobject'', reader.Path)", span="642-642", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_342 [label="reader.Read()", span="644-644", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_343 [label="Assert.AreEqual(reader.TokenType, JsonToken.EndObject)", span="645-645", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_344 [label="Assert.AreEqual(0, reader.Depth)", span="646-646", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_345 [label="Assert.AreEqual('''', reader.Path)", span="647-647", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_346 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", span="523-523", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSchema.cs"];
m2_13 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSchema.cs"];
m2_535 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", span="949-949", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonSchema.cs"];
m2_536 [label="string helloWorld = ''Hello world!''", span="951-951", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonSchema.cs"];
m2_537 [label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="952-952", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonSchema.cs"];
m2_538 [label="JsonReader reader = new JsonTextReader(new StringReader(@''''' + Convert.ToBase64String(helloWorldData)))", span="954-954", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonSchema.cs"];
m2_539 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unterminated string. Expected delimiter: '. Path '', line 1, position 17.'',\r\n                () => { reader.ReadAsBytes(); })", span="956-958", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonSchema.cs"];
m2_540 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", span="949-949", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonSchema.cs"];
m2_1425 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", span="2326-2326", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonSchema.cs"];
m2_1426 [label="string json = ''new Date()''", span="2328-2328", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonSchema.cs"];
m2_1427 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2329-2329", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonSchema.cs"];
m2_1428 [label="Assert.IsTrue(reader.Read())", span="2331-2331", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonSchema.cs"];
m2_1429 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2332-2332", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonSchema.cs"];
m2_1430 [label="Assert.IsTrue(reader.Read())", span="2334-2334", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonSchema.cs"];
m2_1431 [label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2335-2335", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonSchema.cs"];
m2_1432 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", span="2326-2326", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonSchema.cs"];
m2_468 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", span="836-836", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSchema.cs"];
m2_469 [label="BigInteger i = new BigInteger(long.MaxValue)", span="838-838", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSchema.cs"];
m2_470 [label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="840-840", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSchema.cs"];
m2_475 [label="BigInteger total = i + j", span="846-846", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSchema.cs"];
m2_471 [label="reader.Read()", span="841-841", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSchema.cs"];
m2_472 [label="Assert.AreEqual(typeof(long), reader.ValueType)", span="842-842", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSchema.cs"];
m2_473 [label="int j = 1", span="844-844", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSchema.cs"];
m2_474 [label="j < 1000", span="844-844", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSchema.cs"];
m2_479 [label="j++", span="844-844", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSchema.cs"];
m2_476 [label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="848-848", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSchema.cs"];
m2_477 [label="reader.Read()", span="849-849", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSchema.cs"];
m2_478 [label="Assert.AreEqual(typeof(BigInteger), reader.ValueType)", span="851-851", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSchema.cs"];
m2_480 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", span="836-836", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSchema.cs"];
m2_1073 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", span="1767-1767", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSchema.cs"];
m2_1074 [label="string json = ''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}''", span="1769-1769", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSchema.cs"];
m2_1075 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1771-1771", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSchema.cs"];
m2_1076 [label="Assert.IsTrue(reader.Read())", span="1773-1773", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSchema.cs"];
m2_1077 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1774-1774", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSchema.cs"];
m2_1078 [label="Assert.IsTrue(reader.Read())", span="1776-1776", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSchema.cs"];
m2_1079 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1777-1777", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSchema.cs"];
m2_1080 [label="reader.ReadAsDateTimeOffset()", span="1779-1779", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSchema.cs"];
m2_1081 [label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="1780-1780", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSchema.cs"];
m2_1082 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="1781-1781", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSchema.cs"];
m2_1083 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="1782-1782", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSchema.cs"];
m2_1084 [label="Assert.IsTrue(reader.Read())", span="1784-1784", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSchema.cs"];
m2_1085 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1785-1785", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSchema.cs"];
m2_1086 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", span="1767-1767", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSchema.cs"];
m2_651 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", span="1133-1133", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSchema.cs"];
m2_652 [label="string input = ''{value:'Purple\\r \\n monkey\\'s:\\tdishwasher'}''", span="1135-1135", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSchema.cs"];
m2_653 [label="StringReader sr = new StringReader(input)", span="1137-1137", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSchema.cs"];
m2_654 [label="JsonReader jsonReader = new JsonTextReader(sr)", span="1139-1139", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSchema.cs"];
m2_655 [label="Assert.AreEqual(0, jsonReader.Depth)", span="1141-1141", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSchema.cs"];
m2_656 [label="jsonReader.Read()", span="1143-1143", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSchema.cs"];
m2_657 [label="Assert.AreEqual(JsonToken.StartObject, jsonReader.TokenType)", span="1144-1144", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSchema.cs"];
m2_658 [label="Assert.AreEqual(0, jsonReader.Depth)", span="1145-1145", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSchema.cs"];
m2_659 [label="jsonReader.Read()", span="1147-1147", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSchema.cs"];
m2_660 [label="Assert.AreEqual(JsonToken.PropertyName, jsonReader.TokenType)", span="1148-1148", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSchema.cs"];
m2_661 [label="Assert.AreEqual(1, jsonReader.Depth)", span="1149-1149", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSchema.cs"];
m2_662 [label="jsonReader.Read()", span="1151-1151", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSchema.cs"];
m2_663 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="1152-1152", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSchema.cs"];
m2_664 [label="Assert.AreEqual(''Purple\r \n monkey's:\tdishwasher'', jsonReader.Value)", span="1153-1153", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSchema.cs"];
m2_665 [label="Assert.AreEqual('\'', jsonReader.QuoteChar)", span="1154-1154", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSchema.cs"];
m2_666 [label="Assert.AreEqual(1, jsonReader.Depth)", span="1155-1155", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSchema.cs"];
m2_667 [label="jsonReader.Read()", span="1157-1157", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSchema.cs"];
m2_668 [label="Assert.AreEqual(JsonToken.EndObject, jsonReader.TokenType)", span="1158-1158", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSchema.cs"];
m2_669 [label="Assert.AreEqual(0, jsonReader.Depth)", span="1159-1159", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSchema.cs"];
m2_670 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", span="1133-1133", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSchema.cs"];
m2_1511 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", span="2463-2463", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonSchema.cs"];
m2_1512 [label="string json = @''0x20''", span="2465-2465", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonSchema.cs"];
m2_1513 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2467-2467", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonSchema.cs"];
m2_1514 [label="reader.ReadAsDecimal()", span="2469-2469", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonSchema.cs"];
m2_1515 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2470-2470", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonSchema.cs"];
m2_1516 [label="Assert.AreEqual(32m, reader.Value)", span="2471-2471", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonSchema.cs"];
m2_1517 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", span="2463-2463", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonSchema.cs"];
m2_452 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", span="812-812", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonSchema.cs"];
m2_453 [label="long i = int.MinValue", span="814-814", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonSchema.cs"];
m2_454 [label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="816-816", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonSchema.cs"];
m2_457 [label="Assert.AreEqual(i, reader.Value)", span="819-819", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonSchema.cs"];
m2_460 [label="long total = -j + i", span="823-823", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonSchema.cs"];
m2_455 [label="reader.Read()", span="817-817", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonSchema.cs"];
m2_456 [label="Assert.AreEqual(typeof(long), reader.ValueType)", span="818-818", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonSchema.cs"];
m2_461 [label="ExceptionAssert.Throws<OverflowException>(\r\n                    ''Arithmetic operation resulted in an overflow.'',\r\n                    () =>\r\n                    {\r\n                        reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)));\r\n                        reader.ReadAsInt32();\r\n                    })", span="824-830", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonSchema.cs"];
m2_458 [label="int j = 1", span="821-821", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonSchema.cs"];
m2_459 [label="j < 1000", span="821-821", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonSchema.cs"];
m2_462 [label="j++", span="821-821", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonSchema.cs"];
m2_463 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", span="812-812", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonSchema.cs"];
m2_1791 [label="Entry Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", span="2870-2870", cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonSchema.cs"];
m2_1792 [label=Error, span="2872-2872", cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonSchema.cs"];
m2_1794 [label="return _inner.Read(buffer, index, 1);", span="2875-2875", cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonSchema.cs"];
m2_1793 [label="throw new Exception(''Read error'');", span="2873-2873", cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonSchema.cs"];
m2_1795 [label="Exit Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", span="2870-2870", cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonSchema.cs"];
m2_765 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="875-875", cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="JsonSchema.cs"];
m2_1438 [label="Entry Unk.>", span="", cluster="Unk.>", file="JsonSchema.cs"];
m2_605 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", span="1074-1074", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSchema.cs"];
m2_606 [label="JsonReader reader = new JsonTextReader(new StringReader(@''{'hi\r\nbye':1}''))", span="1076-1076", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSchema.cs"];
m2_607 [label="Assert.IsTrue(reader.Read())", span="1077-1077", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSchema.cs"];
m2_608 [label="Assert.IsTrue(reader.Read())", span="1078-1078", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSchema.cs"];
m2_609 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1079-1079", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSchema.cs"];
m2_610 [label="Assert.AreEqual(@''hi\r\nbye'', reader.Value)", span="1080-1081", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSchema.cs"];
m2_611 [label="Assert.IsTrue(reader.Read())", span="1082-1082", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSchema.cs"];
m2_612 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1083-1083", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSchema.cs"];
m2_613 [label="Assert.AreEqual(1L, reader.Value)", span="1084-1084", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSchema.cs"];
m2_614 [label="Assert.IsTrue(reader.Read())", span="1085-1085", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSchema.cs"];
m2_615 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1086-1086", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSchema.cs"];
m2_616 [label="Assert.IsFalse(reader.Read())", span="1087-1087", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSchema.cs"];
m2_617 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", span="1074-1074", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSchema.cs"];
m2_1232 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeperator()", span="2003-2003", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeperator()", file="JsonSchema.cs"];
m2_1233 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nullz''))", span="2005-2005", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeperator()", file="JsonSchema.cs"];
m2_1234 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error parsing null value. Path '', line 1, position 4.'',\r\n                () => { reader.Read(); })", span="2007-2009", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeperator()", file="JsonSchema.cs"];
m2_1235 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeperator()", span="2003-2003", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeperator()", file="JsonSchema.cs"];
m2_1402 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", span="2290-2290", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonSchema.cs"];
m2_1403 [label="string json = ''[]''", span="2292-2292", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonSchema.cs"];
m2_1404 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2293-2293", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonSchema.cs"];
m2_1405 [label="Assert.IsTrue(reader.Read())", span="2295-2295", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonSchema.cs"];
m2_1406 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2296-2296", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonSchema.cs"];
m2_1407 [label="Assert.IsTrue(reader.Read())", span="2298-2298", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonSchema.cs"];
m2_1408 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2299-2299", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonSchema.cs"];
m2_1409 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", span="2290-2290", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonSchema.cs"];
m2_1386 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", span="2267-2267", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonSchema.cs"];
m2_1387 [label="string json = ''new Date !''", span="2269-2269", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonSchema.cs"];
m2_1388 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2270-2270", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonSchema.cs"];
m2_1389 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected character while parsing constructor: !. Path '', line 1, position 9.'',\r\n                () => { reader.Read(); })", span="2272-2274", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonSchema.cs"];
m2_1390 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", span="2267-2267", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonSchema.cs"];
m2_157 [label="Entry Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", span="2892-2892", cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="JsonSchema.cs"];
m2_1803 [label="Exit Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", span="2892-2892", cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="JsonSchema.cs"];
m2_425 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", span="754-754", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonSchema.cs"];
m2_426 [label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''e1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''e2'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$ref'''': ''''1''''\r\n  },\r\n  {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n]''", span="756-773", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonSchema.cs"];
m2_427 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="775-775", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonSchema.cs"];
m2_428 [label="int i = 0", span="780-780", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonSchema.cs"];
m2_430 [label="reader.Read()", span="782-782", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonSchema.cs"];
m2_432 [label="reader.Read()", span="785-785", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonSchema.cs"];
m2_433 [label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="786-786", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonSchema.cs"];
m2_429 [label="i < 15", span="780-780", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonSchema.cs"];
m2_431 [label="i++", span="780-780", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonSchema.cs"];
m2_434 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", span="754-754", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonSchema.cs"];
m2_138 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="354-354", cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonSchema.cs"];
m2_671 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", span="1164-1164", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", file="JsonSchema.cs"];
m2_672 [label="string input = @''{\r\n  CPU: 'Intel',\r\n  Drives: [ /* Com*ment */\r\n    'DVD read/writer',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}'' + '\n'", span="1166-1172", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", file="JsonSchema.cs"];
m2_673 [label="object o = JsonConvert.DeserializeObject(input)", span="1174-1174", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", file="JsonSchema.cs"];
m2_674 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", span="1164-1164", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", file="JsonSchema.cs"];
m2_391 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(int)", span="379-379", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="JsonSchema.cs"];
m2_709 [label="Entry long.ToString()", span="0-0", cluster="long.ToString()", file="JsonSchema.cs"];
m2_1206 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", span="1965-1965", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonSchema.cs"];
m2_1207 [label="string json = @''{''''Name'''': 1.1}''", span="1967-1967", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonSchema.cs"];
m2_1208 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1969-1969", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonSchema.cs"];
m2_1209 [label="Assert.IsTrue(reader.Read())", span="1971-1971", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonSchema.cs"];
m2_1210 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1972-1972", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonSchema.cs"];
m2_1211 [label="Assert.IsTrue(reader.Read())", span="1974-1974", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonSchema.cs"];
m2_1212 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1975-1975", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonSchema.cs"];
m2_1213 [label="ExceptionAssert.Throws<FormatException>(\r\n                ''Input string was not in a correct format.'',\r\n                () => { reader.ReadAsInt32(); })", span="1977-1979", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonSchema.cs"];
m2_1214 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", span="1965-1965", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonSchema.cs"];
m2_1340 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", span="2197-2197", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSchema.cs"];
m2_1341 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''1 2 ''''name'''' [][]null {}{} 1.1''))", span="2199-2199", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSchema.cs"];
m2_1342 [label="reader.SupportMultipleContent = true", span="2200-2200", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSchema.cs"];
m2_1343 [label="Assert.IsTrue(reader.Read())", span="2202-2202", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSchema.cs"];
m2_1344 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2203-2203", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSchema.cs"];
m2_1345 [label="Assert.IsTrue(reader.Read())", span="2205-2205", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSchema.cs"];
m2_1346 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2206-2206", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSchema.cs"];
m2_1347 [label="Assert.IsTrue(reader.Read())", span="2208-2208", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSchema.cs"];
m2_1348 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2209-2209", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSchema.cs"];
m2_1349 [label="Assert.IsTrue(reader.Read())", span="2211-2211", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSchema.cs"];
m2_1350 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2212-2212", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSchema.cs"];
m2_1351 [label="Assert.IsTrue(reader.Read())", span="2214-2214", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSchema.cs"];
m2_1352 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2215-2215", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSchema.cs"];
m2_1353 [label="Assert.IsTrue(reader.Read())", span="2217-2217", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSchema.cs"];
m2_1354 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2218-2218", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSchema.cs"];
m2_1355 [label="Assert.IsTrue(reader.Read())", span="2220-2220", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSchema.cs"];
m2_1356 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2221-2221", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSchema.cs"];
m2_1357 [label="Assert.IsTrue(reader.Read())", span="2223-2223", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSchema.cs"];
m2_1358 [label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2224-2224", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSchema.cs"];
m2_1359 [label="Assert.IsTrue(reader.Read())", span="2226-2226", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSchema.cs"];
m2_1360 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2227-2227", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSchema.cs"];
m2_1361 [label="Assert.IsTrue(reader.Read())", span="2229-2229", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSchema.cs"];
m2_1362 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2230-2230", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSchema.cs"];
m2_1363 [label="Assert.IsTrue(reader.Read())", span="2232-2232", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSchema.cs"];
m2_1364 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2233-2233", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSchema.cs"];
m2_1365 [label="Assert.IsTrue(reader.Read())", span="2235-2235", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSchema.cs"];
m2_1366 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2236-2236", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSchema.cs"];
m2_1367 [label="Assert.IsTrue(reader.Read())", span="2238-2238", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSchema.cs"];
m2_1368 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2239-2239", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSchema.cs"];
m2_1369 [label="Assert.IsFalse(reader.Read())", span="2241-2241", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSchema.cs"];
m2_1370 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", span="2197-2197", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSchema.cs"];
m2_482 [label="Entry StringReader.cstr", span="", cluster="StringReader.cstr", file="JsonSchema.cs"];
m2_446 [label="Entry long.ToString(System.IFormatProvider)", span="0-0", cluster="long.ToString(System.IFormatProvider)", file="JsonSchema.cs"];
m2_774 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="418-418", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSchema.cs"];
m2_1816 [label="Entry Newtonsoft.Json.Tests.SlowStream.Seek(long, System.IO.SeekOrigin)", span="2940-2940", cluster="Newtonsoft.Json.Tests.SlowStream.Seek(long, System.IO.SeekOrigin)", file="JsonSchema.cs"];
m2_1817 [label="throw new NotSupportedException();", span="2942-2942", cluster="Newtonsoft.Json.Tests.SlowStream.Seek(long, System.IO.SeekOrigin)", file="JsonSchema.cs"];
m2_1818 [label="Exit Newtonsoft.Json.Tests.SlowStream.Seek(long, System.IO.SeekOrigin)", span="2940-2940", cluster="Newtonsoft.Json.Tests.SlowStream.Seek(long, System.IO.SeekOrigin)", file="JsonSchema.cs"];
m2_1504 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", span="2451-2451", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonSchema.cs"];
m2_1505 [label="string json = @''010''", span="2453-2453", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonSchema.cs"];
m2_1506 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2455-2455", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonSchema.cs"];
m2_1507 [label="reader.ReadAsDecimal()", span="2457-2457", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonSchema.cs"];
m2_1508 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2458-2458", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonSchema.cs"];
m2_1509 [label="Assert.AreEqual(8m, reader.Value)", span="2459-2459", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonSchema.cs"];
m2_1510 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", span="2451-2451", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonSchema.cs"];
m2_1819 [label="Entry System.NotSupportedException.NotSupportedException()", span="0-0", cluster="System.NotSupportedException.NotSupportedException()", file="JsonSchema.cs"];
m2_1586 [label="Entry System.Convert.ToDouble(string, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDouble(string, System.IFormatProvider)", file="JsonSchema.cs"];
m2_1588 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JsonSchema.cs"];
m2_769 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="810-810", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonSchema.cs"];
m2_886 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", span="1481-1481", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonSchema.cs"];
m2_887 [label="string json = @''{\r\n    ''''A'''' : true,\r\n    ''''B'''' ''''''", span="1483-1485", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonSchema.cs"];
m2_888 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1487-1487", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonSchema.cs"];
m2_889 [label="reader.Read()", span="1489-1489", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonSchema.cs"];
m2_890 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1490-1490", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonSchema.cs"];
m2_891 [label="reader.Read()", span="1492-1492", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonSchema.cs"];
m2_892 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1493-1493", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonSchema.cs"];
m2_893 [label="reader.Read()", span="1495-1495", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonSchema.cs"];
m2_894 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="1496-1496", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonSchema.cs"];
m2_895 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                @''Invalid character after parsing property name. Expected ':' but got: ''''. Path 'A', line 3, position 9.'',\r\n                () => { reader.Read(); })", span="1498-1500", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonSchema.cs"];
m2_896 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", span="1481-1481", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonSchema.cs"];
m2_1410 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", span="2303-2303", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonSchema.cs"];
m2_1411 [label="string json = ''{}''", span="2305-2305", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonSchema.cs"];
m2_1412 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2306-2306", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonSchema.cs"];
m2_1413 [label="Assert.IsTrue(reader.Read())", span="2308-2308", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonSchema.cs"];
m2_1414 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2309-2309", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonSchema.cs"];
m2_1415 [label="Assert.IsTrue(reader.Read())", span="2311-2311", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonSchema.cs"];
m2_1416 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2312-2312", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonSchema.cs"];
m2_1417 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", span="2303-2303", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonSchema.cs"];
m2_17 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JsonSchema.cs"];
m2_900 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", span="1504-1504", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonSchema.cs"];
m2_901 [label="StringReader s = new StringReader(@''''''SGVsbG8gd29ybGQu'''''')", span="1506-1506", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonSchema.cs"];
m2_902 [label="JsonTextReader reader = new JsonTextReader(s)", span="1507-1507", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonSchema.cs"];
m2_903 [label="byte[] data = reader.ReadAsBytes()", span="1509-1509", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonSchema.cs"];
m2_904 [label="Assert.IsNotNull(data)", span="1510-1510", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonSchema.cs"];
m2_905 [label="string text = Encoding.UTF8.GetString(data, 0, data.Length)", span="1512-1512", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonSchema.cs"];
m2_906 [label="Assert.AreEqual(''Hello world.'', text)", span="1513-1513", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonSchema.cs"];
m2_907 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", span="1504-1504", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonSchema.cs"];
m2_1788 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", span="537-537", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="JsonSchema.cs"];
m2_767 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="407-407", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonSchema.cs"];
m2_633 [label="Entry Unk.AreEquivalent", span="", cluster="Unk.AreEquivalent", file="JsonSchema.cs"];
m2_483 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="JsonSchema.cs"];
m2_360 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", span="671-671", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonSchema.cs"];
m2_361 [label="string s = new string('a', 10000)", span="673-673", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonSchema.cs"];
m2_362 [label="JsonReader reader = new JsonTextReader(new StringReader(''''' + s + '''''))", span="674-674", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonSchema.cs"];
m2_364 [label="Assert.AreEqual(s, reader.Value)", span="677-677", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonSchema.cs"];
m2_363 [label="reader.Read()", span="675-675", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonSchema.cs"];
m2_365 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", span="671-671", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonSchema.cs"];
m2_1088 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="JsonSchema.cs"];
m2_1820 [label="Entry Newtonsoft.Json.Tests.SlowStream.SetLength(long)", span="2945-2945", cluster="Newtonsoft.Json.Tests.SlowStream.SetLength(long)", file="JsonSchema.cs"];
m2_1821 [label="throw new NotSupportedException();", span="2947-2947", cluster="Newtonsoft.Json.Tests.SlowStream.SetLength(long)", file="JsonSchema.cs"];
m2_1822 [label="Exit Newtonsoft.Json.Tests.SlowStream.SetLength(long)", span="2945-2945", cluster="Newtonsoft.Json.Tests.SlowStream.SetLength(long)", file="JsonSchema.cs"];
m2_909 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="JsonSchema.cs"];
m2_990 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", span="1634-1634", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonSchema.cs"];
m2_991 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{''))", span="1636-1636", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonSchema.cs"];
m2_992 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end when reading bytes. Path '', line 1, position 1.'',\r\n                () => { reader.ReadAsBytes(); })", span="1638-1640", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonSchema.cs"];
m2_993 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", span="1634-1634", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonSchema.cs"];
m2_392 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="381-381", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonSchema.cs"];
m2_618 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", span="1091-1091", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSchema.cs"];
m2_619 [label="string helloWorld = ''Hello world!''", span="1093-1093", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSchema.cs"];
m2_620 [label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1094-1094", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSchema.cs"];
m2_621 [label="JsonReader reader = new JsonTextReader(new StringReader(@''[1,''' + Convert.ToBase64String(helloWorldData) + @''']''))", span="1096-1096", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSchema.cs"];
m2_627 [label="CollectionAssert.AreEquivalent(helloWorldData, data)", span="1102-1102", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSchema.cs"];
m2_622 [label="Assert.IsTrue(reader.Read())", span="1097-1097", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSchema.cs"];
m2_623 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1098-1098", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSchema.cs"];
m2_624 [label="Assert.IsTrue(reader.Read())", span="1099-1099", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSchema.cs"];
m2_625 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1100-1100", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSchema.cs"];
m2_626 [label="byte[] data = reader.ReadAsBytes()", span="1101-1101", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSchema.cs"];
m2_628 [label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="1103-1103", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSchema.cs"];
m2_629 [label="Assert.IsTrue(reader.Read())", span="1104-1104", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSchema.cs"];
m2_630 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1105-1105", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSchema.cs"];
m2_631 [label="Assert.IsFalse(reader.Read())", span="1107-1107", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSchema.cs"];
m2_632 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", span="1091-1091", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSchema.cs"];
m2_59 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", span="124-124", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSchema.cs"];
m2_60 [label="string json = @''{''''recipe_id'''':''''12'''',''''recipe_name'''':''''Apocalypse Leather Armors'''',''''recipe_text'''':''''#C16------------------------------\r\n#C12Ingredients #C20\r\n#C16------------------------------\r\n\r\na piece of Leather Armor\r\n( ie #L \''''Enhanced Leather Armor Boots\'''' \''''85644\'''' )\r\n<img src=rdb:\/\/13264>\r\n\r\n#L \''''Hacker Tool\'''' \''''87814\''''\r\n<img src=rdb:\/\/99282>\r\n\r\n#L \''''Clanalizer\'''' \''''208313\''''\r\n<img src=rdb:\/\/156479>\r\n\r\n#C16------------------------------\r\n#C12Recipe #C16\r\n#C16------------------------------#C20\r\n\r\nHacker Tool\r\n#C15+#C20\r\na piece of Leather Armor\r\n#C15=#C20\r\n<img src=rdb:\/\/13264>\r\na piece of Hacked Leather Armor\r\n( ie : #L \''''Hacked Leather Armor Boots\'''' \''''245979\'''' )\r\n#C16Skills: |  BE  |#C20\r\n\r\n#C14------------------------------#C20\r\n\r\nClanalizer\r\n#C15+#C20\r\na piece of Hacked Leather Armor\r\n#C15=#C20\r\n<img src=rdb:\/\/13264>\r\na piece of Apocalypse Leather Armor\r\n( ie : #L \''''Apocalypse Leather Armor Boots\'''' \''''245966\'''' )\r\n#C16Skills: |  ??  |#C20\r\n\r\n#C16------------------------------\r\n#C12Details#C16\r\n#C16------------------------------#C20\r\n\r\n#L \''''Apocalypse Leather Armor Boots\'''' \''''245967\''''\r\n#L \''''Apocalypse Leather Armor Gloves\'''' \''''245969\''''\r\n#L \''''Apocalypse Leather Armor Helmet\'''' \''''245975\''''\r\n#L \''''Apocalypse Leather Armor Pants\'''' \''''245971\''''\r\n#L \''''Apocalypse Leather Armor Sleeves\'''' \''''245973\''''\r\n#L \''''Apocalypse Leather Body Armor\'''' \''''245965\''''\r\n\r\n#C16------------------------------\r\n#C12Comments#C16\r\n#C16------------------------------#C20\r\n\r\nNice froob armor.. but ugleh!\r\n\r\n'''',''''recipe_author'''':null}''", span="126-126", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSchema.cs"];
m2_61 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="128-128", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSchema.cs"];
m2_62 [label="Assert.IsTrue(reader.Read())", span="130-130", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSchema.cs"];
m2_63 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="131-131", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSchema.cs"];
m2_64 [label="Assert.IsTrue(reader.Read())", span="133-133", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSchema.cs"];
m2_65 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="134-134", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSchema.cs"];
m2_66 [label="Assert.IsTrue(reader.Read())", span="136-136", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSchema.cs"];
m2_67 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="137-137", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSchema.cs"];
m2_68 [label="Assert.IsTrue(reader.Read())", span="139-139", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSchema.cs"];
m2_69 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="140-140", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSchema.cs"];
m2_70 [label="Assert.IsTrue(reader.Read())", span="142-142", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSchema.cs"];
m2_71 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="143-143", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSchema.cs"];
m2_72 [label="Assert.IsTrue(reader.Read())", span="145-145", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSchema.cs"];
m2_73 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="146-146", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSchema.cs"];
m2_74 [label="Assert.AreEqual(''recipe_text'', reader.Value)", span="147-147", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSchema.cs"];
m2_75 [label="Assert.IsTrue(reader.Read())", span="149-149", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSchema.cs"];
m2_76 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="150-150", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSchema.cs"];
m2_77 [label="Assert.AreEqual(@''#C16------------------------------\r\n#C12Ingredients #C20\r\n#C16------------------------------\r\n\r\na piece of Leather Armor\r\n( ie #L ''''Enhanced Leather Armor Boots'''' ''''85644'''' )\r\n<img src=rdb://13264>\r\n\r\n#L ''''Hacker Tool'''' ''''87814''''\r\n<img src=rdb://99282>\r\n\r\n#L ''''Clanalizer'''' ''''208313''''\r\n<img src=rdb://156479>\r\n\r\n#C16------------------------------\r\n#C12Recipe #C16\r\n#C16------------------------------#C20\r\n\r\nHacker Tool\r\n#C15+#C20\r\na piece of Leather Armor\r\n#C15=#C20\r\n<img src=rdb://13264>\r\na piece of Hacked Leather Armor\r\n( ie : #L ''''Hacked Leather Armor Boots'''' ''''245979'''' )\r\n#C16Skills: |  BE  |#C20\r\n\r\n#C14------------------------------#C20\r\n\r\nClanalizer\r\n#C15+#C20\r\na piece of Hacked Leather Armor\r\n#C15=#C20\r\n<img src=rdb://13264>\r\na piece of Apocalypse Leather Armor\r\n( ie : #L ''''Apocalypse Leather Armor Boots'''' ''''245966'''' )\r\n#C16Skills: |  ??  |#C20\r\n\r\n#C16------------------------------\r\n#C12Details#C16\r\n#C16------------------------------#C20\r\n\r\n#L ''''Apocalypse Leather Armor Boots'''' ''''245967''''\r\n#L ''''Apocalypse Leather Armor Gloves'''' ''''245969''''\r\n#L ''''Apocalypse Leather Armor Helmet'''' ''''245975''''\r\n#L ''''Apocalypse Leather Armor Pants'''' ''''245971''''\r\n#L ''''Apocalypse Leather Armor Sleeves'''' ''''245973''''\r\n#L ''''Apocalypse Leather Body Armor'''' ''''245965''''\r\n\r\n#C16------------------------------\r\n#C12Comments#C16\r\n#C16------------------------------#C20\r\n\r\nNice froob armor.. but ugleh!\r\n\r\n'', reader.Value)", span="152-207", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSchema.cs"];
m2_78 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", span="124-124", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSchema.cs"];
m2_1771 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", span="2832-2832", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSchema.cs"];
m2_1772 [label="StringWriter sw = new StringWriter()", span="2834-2834", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSchema.cs"];
m2_1773 [label="JsonTextWriter writer = new JsonTextWriter(sw)", span="2835-2835", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSchema.cs"];
m2_1778 [label="string json = sw.ToString()", span="2842-2842", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSchema.cs"];
m2_1774 [label="writer.WriteStartArray()", span="2837-2837", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSchema.cs"];
m2_1775 [label="writer.WriteValue(decimal.MaxValue)", span="2838-2838", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSchema.cs"];
m2_1776 [label="writer.WriteValue(decimal.MinValue)", span="2839-2839", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSchema.cs"];
m2_1777 [label="writer.WriteEndArray()", span="2840-2840", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSchema.cs"];
m2_1779 [label="StringReader sr = new StringReader(json)", span="2844-2844", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSchema.cs"];
m2_1780 [label="JsonTextReader reader = new JsonTextReader(sr)", span="2845-2845", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSchema.cs"];
m2_1781 [label="Assert.IsTrue(reader.Read())", span="2847-2847", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSchema.cs"];
m2_1782 [label="decimal? max = reader.ReadAsDecimal()", span="2849-2849", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSchema.cs"];
m2_1784 [label="decimal? min = reader.ReadAsDecimal()", span="2852-2852", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSchema.cs"];
m2_1786 [label="Assert.IsTrue(reader.Read())", span="2855-2855", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSchema.cs"];
m2_1783 [label="Assert.AreEqual(decimal.MaxValue, max)", span="2850-2850", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSchema.cs"];
m2_1785 [label="Assert.AreEqual(decimal.MinValue, min)", span="2853-2853", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSchema.cs"];
m2_1787 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", span="2832-2832", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSchema.cs"];
m2_389 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="116-116", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonSchema.cs"];
m2_822 [label="Entry System.Convert.ToChar(string)", span="0-0", cluster="System.Convert.ToChar(string)", file="JsonSchema.cs"];
m2_1768 [label="Entry lambda expression", span="2823-2823", cluster="lambda expression", file="JsonSchema.cs"];
m2_20 [label="reader.Read()", span="69-69", cluster="lambda expression", file="JsonSchema.cs"];
m2_19 [label="Entry lambda expression", span="69-69", cluster="lambda expression", file="JsonSchema.cs"];
m2_21 [label="Exit lambda expression", span="69-69", cluster="lambda expression", file="JsonSchema.cs"];
m2_57 [label="reader.Read()", span="120-120", cluster="lambda expression", file="JsonSchema.cs"];
m2_56 [label="Entry lambda expression", span="120-120", cluster="lambda expression", file="JsonSchema.cs"];
m2_58 [label="Exit lambda expression", span="120-120", cluster="lambda expression", file="JsonSchema.cs"];
m2_165 [label="reader.Read()", span="369-369", cluster="lambda expression", file="JsonSchema.cs"];
m2_164 [label="Entry lambda expression", span="367-372", cluster="lambda expression", file="JsonSchema.cs"];
m2_166 [label="Exit lambda expression", span="367-372", cluster="lambda expression", file="JsonSchema.cs"];
m2_183 [label="reader.Read()", span="406-406", cluster="lambda expression", file="JsonSchema.cs"];
m2_182 [label="Entry lambda expression", span="406-406", cluster="lambda expression", file="JsonSchema.cs"];
m2_184 [label="Exit lambda expression", span="406-406", cluster="lambda expression", file="JsonSchema.cs"];
m2_196 [label="reader.Read()", span="437-437", cluster="lambda expression", file="JsonSchema.cs"];
m2_195 [label="Entry lambda expression", span="435-440", cluster="lambda expression", file="JsonSchema.cs"];
m2_197 [label="Exit lambda expression", span="435-440", cluster="lambda expression", file="JsonSchema.cs"];
m2_350 [label="Entry lambda expression", span="657-657", cluster="lambda expression", file="JsonSchema.cs"];
m2_351 [label="new JsonTextReader(null)", span="657-657", cluster="lambda expression", file="JsonSchema.cs"];
m2_352 [label="Exit lambda expression", span="657-657", cluster="lambda expression", file="JsonSchema.cs"];
m2_358 [label="reader.Read()", span="667-667", cluster="lambda expression", file="JsonSchema.cs"];
m2_357 [label="Entry lambda expression", span="667-667", cluster="lambda expression", file="JsonSchema.cs"];
m2_359 [label="Exit lambda expression", span="667-667", cluster="lambda expression", file="JsonSchema.cs"];
m2_448 [label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="805-805", cluster="lambda expression", file="JsonSchema.cs"];
m2_447 [label="Entry lambda expression", span="803-807", cluster="lambda expression", file="JsonSchema.cs"];
m2_449 [label="reader.ReadAsInt32()", span="806-806", cluster="lambda expression", file="JsonSchema.cs"];
m2_450 [label="Exit lambda expression", span="803-807", cluster="lambda expression", file="JsonSchema.cs"];
m2_465 [label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="828-828", cluster="lambda expression", file="JsonSchema.cs"];
m2_464 [label="Entry lambda expression", span="826-830", cluster="lambda expression", file="JsonSchema.cs"];
m2_466 [label="reader.ReadAsInt32()", span="829-829", cluster="lambda expression", file="JsonSchema.cs"];
m2_467 [label="Exit lambda expression", span="826-830", cluster="lambda expression", file="JsonSchema.cs"];
m2_518 [label="reader.Read()", span="925-925", cluster="lambda expression", file="JsonSchema.cs"];
m2_517 [label="Entry lambda expression", span="925-925", cluster="lambda expression", file="JsonSchema.cs"];
m2_519 [label="Exit lambda expression", span="925-925", cluster="lambda expression", file="JsonSchema.cs"];
m2_525 [label="reader.Read()", span="935-935", cluster="lambda expression", file="JsonSchema.cs"];
m2_524 [label="Entry lambda expression", span="935-935", cluster="lambda expression", file="JsonSchema.cs"];
m2_526 [label="Exit lambda expression", span="935-935", cluster="lambda expression", file="JsonSchema.cs"];
m2_532 [label="reader.ReadAsBytes()", span="945-945", cluster="lambda expression", file="JsonSchema.cs"];
m2_531 [label="Entry lambda expression", span="945-945", cluster="lambda expression", file="JsonSchema.cs"];
m2_533 [label="Exit lambda expression", span="945-945", cluster="lambda expression", file="JsonSchema.cs"];
m2_543 [label="reader.ReadAsBytes()", span="958-958", cluster="lambda expression", file="JsonSchema.cs"];
m2_542 [label="Entry lambda expression", span="958-958", cluster="lambda expression", file="JsonSchema.cs"];
m2_544 [label="Exit lambda expression", span="958-958", cluster="lambda expression", file="JsonSchema.cs"];
m2_558 [label="reader.Read()", span="979-979", cluster="lambda expression", file="JsonSchema.cs"];
m2_557 [label="Entry lambda expression", span="979-979", cluster="lambda expression", file="JsonSchema.cs"];
m2_559 [label="Exit lambda expression", span="979-979", cluster="lambda expression", file="JsonSchema.cs"];
m2_711 [label="reader.ReadAsInt32()", span="1232-1232", cluster="lambda expression", file="JsonSchema.cs"];
m2_710 [label="Entry lambda expression", span="1232-1232", cluster="lambda expression", file="JsonSchema.cs"];
m2_714 [label="reader.ReadAsInt32()", span="1235-1235", cluster="lambda expression", file="JsonSchema.cs"];
m2_713 [label="Entry lambda expression", span="1235-1235", cluster="lambda expression", file="JsonSchema.cs"];
m2_717 [label="reader.ReadAsInt32()", span="1238-1238", cluster="lambda expression", file="JsonSchema.cs"];
m2_716 [label="Entry lambda expression", span="1238-1238", cluster="lambda expression", file="JsonSchema.cs"];
m2_720 [label="reader.ReadAsInt32()", span="1241-1241", cluster="lambda expression", file="JsonSchema.cs"];
m2_719 [label="Entry lambda expression", span="1241-1241", cluster="lambda expression", file="JsonSchema.cs"];
m2_723 [label="reader.ReadAsInt32()", span="1247-1247", cluster="lambda expression", file="JsonSchema.cs"];
m2_722 [label="Entry lambda expression", span="1247-1247", cluster="lambda expression", file="JsonSchema.cs"];
m2_712 [label="Exit lambda expression", span="1232-1232", cluster="lambda expression", file="JsonSchema.cs"];
m2_715 [label="Exit lambda expression", span="1235-1235", cluster="lambda expression", file="JsonSchema.cs"];
m2_718 [label="Exit lambda expression", span="1238-1238", cluster="lambda expression", file="JsonSchema.cs"];
m2_721 [label="Exit lambda expression", span="1241-1241", cluster="lambda expression", file="JsonSchema.cs"];
m2_724 [label="Exit lambda expression", span="1247-1247", cluster="lambda expression", file="JsonSchema.cs"];
m2_898 [label="reader.Read()", span="1500-1500", cluster="lambda expression", file="JsonSchema.cs"];
m2_897 [label="Entry lambda expression", span="1500-1500", cluster="lambda expression", file="JsonSchema.cs"];
m2_899 [label="Exit lambda expression", span="1500-1500", cluster="lambda expression", file="JsonSchema.cs"];
m2_977 [label="reader.Read()", span="1612-1612", cluster="lambda expression", file="JsonSchema.cs"];
m2_976 [label="Entry lambda expression", span="1612-1612", cluster="lambda expression", file="JsonSchema.cs"];
m2_978 [label="Exit lambda expression", span="1612-1612", cluster="lambda expression", file="JsonSchema.cs"];
m2_995 [label="reader.ReadAsBytes()", span="1640-1640", cluster="lambda expression", file="JsonSchema.cs"];
m2_994 [label="Entry lambda expression", span="1640-1640", cluster="lambda expression", file="JsonSchema.cs"];
m2_996 [label="Exit lambda expression", span="1640-1640", cluster="lambda expression", file="JsonSchema.cs"];
m2_1008 [label="reader.ReadAsDecimal()", span="1661-1661", cluster="lambda expression", file="JsonSchema.cs"];
m2_1007 [label="Entry lambda expression", span="1661-1661", cluster="lambda expression", file="JsonSchema.cs"];
m2_1009 [label="Exit lambda expression", span="1661-1661", cluster="lambda expression", file="JsonSchema.cs"];
m2_1015 [label="reader.ReadAsBytes()", span="1671-1671", cluster="lambda expression", file="JsonSchema.cs"];
m2_1014 [label="Entry lambda expression", span="1671-1671", cluster="lambda expression", file="JsonSchema.cs"];
m2_1016 [label="Exit lambda expression", span="1671-1671", cluster="lambda expression", file="JsonSchema.cs"];
m2_1022 [label="reader.ReadAsDateTimeOffset()", span="1682-1682", cluster="lambda expression", file="JsonSchema.cs"];
m2_1021 [label="Entry lambda expression", span="1682-1682", cluster="lambda expression", file="JsonSchema.cs"];
m2_1023 [label="Exit lambda expression", span="1682-1682", cluster="lambda expression", file="JsonSchema.cs"];
m2_1036 [label="reader.ReadAsBytes()", span="1704-1704", cluster="lambda expression", file="JsonSchema.cs"];
m2_1035 [label="Entry lambda expression", span="1704-1704", cluster="lambda expression", file="JsonSchema.cs"];
m2_1037 [label="Exit lambda expression", span="1704-1704", cluster="lambda expression", file="JsonSchema.cs"];
m2_1043 [label="reader.ReadAsBytes()", span="1714-1714", cluster="lambda expression", file="JsonSchema.cs"];
m2_1042 [label="Entry lambda expression", span="1714-1714", cluster="lambda expression", file="JsonSchema.cs"];
m2_1044 [label="Exit lambda expression", span="1714-1714", cluster="lambda expression", file="JsonSchema.cs"];
m2_1114 [label="reader.ReadAsDateTimeOffset()", span="1825-1825", cluster="lambda expression", file="JsonSchema.cs"];
m2_1113 [label="Entry lambda expression", span="1825-1825", cluster="lambda expression", file="JsonSchema.cs"];
m2_1115 [label="Exit lambda expression", span="1825-1825", cluster="lambda expression", file="JsonSchema.cs"];
m2_1216 [label="reader.ReadAsInt32()", span="1979-1979", cluster="lambda expression", file="JsonSchema.cs"];
m2_1215 [label="Entry lambda expression", span="1979-1979", cluster="lambda expression", file="JsonSchema.cs"];
m2_1217 [label="Exit lambda expression", span="1979-1979", cluster="lambda expression", file="JsonSchema.cs"];
m2_1223 [label="reader.Read()", span="1989-1989", cluster="lambda expression", file="JsonSchema.cs"];
m2_1222 [label="Entry lambda expression", span="1989-1989", cluster="lambda expression", file="JsonSchema.cs"];
m2_1224 [label="Exit lambda expression", span="1989-1989", cluster="lambda expression", file="JsonSchema.cs"];
m2_1230 [label="reader.Read()", span="1999-1999", cluster="lambda expression", file="JsonSchema.cs"];
m2_1229 [label="Entry lambda expression", span="1999-1999", cluster="lambda expression", file="JsonSchema.cs"];
m2_1231 [label="Exit lambda expression", span="1999-1999", cluster="lambda expression", file="JsonSchema.cs"];
m2_1237 [label="reader.Read()", span="2009-2009", cluster="lambda expression", file="JsonSchema.cs"];
m2_1236 [label="Entry lambda expression", span="2009-2009", cluster="lambda expression", file="JsonSchema.cs"];
m2_1238 [label="Exit lambda expression", span="2009-2009", cluster="lambda expression", file="JsonSchema.cs"];
m2_1244 [label="reader.Read()", span="2019-2019", cluster="lambda expression", file="JsonSchema.cs"];
m2_1243 [label="Entry lambda expression", span="2019-2019", cluster="lambda expression", file="JsonSchema.cs"];
m2_1245 [label="Exit lambda expression", span="2019-2019", cluster="lambda expression", file="JsonSchema.cs"];
m2_1251 [label="reader.Read()", span="2029-2029", cluster="lambda expression", file="JsonSchema.cs"];
m2_1250 [label="Entry lambda expression", span="2029-2029", cluster="lambda expression", file="JsonSchema.cs"];
m2_1252 [label="Exit lambda expression", span="2029-2029", cluster="lambda expression", file="JsonSchema.cs"];
m2_1384 [label="reader.Read()", span="2263-2263", cluster="lambda expression", file="JsonSchema.cs"];
m2_1383 [label="Entry lambda expression", span="2263-2263", cluster="lambda expression", file="JsonSchema.cs"];
m2_1385 [label="Exit lambda expression", span="2263-2263", cluster="lambda expression", file="JsonSchema.cs"];
m2_1392 [label="reader.Read()", span="2274-2274", cluster="lambda expression", file="JsonSchema.cs"];
m2_1391 [label="Entry lambda expression", span="2274-2274", cluster="lambda expression", file="JsonSchema.cs"];
m2_1393 [label="Exit lambda expression", span="2274-2274", cluster="lambda expression", file="JsonSchema.cs"];
m2_1423 [label="reader.Read()", span="2322-2322", cluster="lambda expression", file="JsonSchema.cs"];
m2_1422 [label="Entry lambda expression", span="2322-2322", cluster="lambda expression", file="JsonSchema.cs"];
m2_1424 [label="Exit lambda expression", span="2322-2322", cluster="lambda expression", file="JsonSchema.cs"];
m2_1440 [label="Assert.IsTrue(reader.Read())", span="2346-2346", cluster="lambda expression", file="JsonSchema.cs"];
m2_1439 [label="Entry lambda expression", span="2346-2346", cluster="lambda expression", file="JsonSchema.cs"];
m2_1441 [label="Exit lambda expression", span="2346-2346", cluster="lambda expression", file="JsonSchema.cs"];
m2_1541 [label="reader.Read()", span="2509-2509", cluster="lambda expression", file="JsonSchema.cs"];
m2_1540 [label="Entry lambda expression", span="2509-2509", cluster="lambda expression", file="JsonSchema.cs"];
m2_1542 [label="Exit lambda expression", span="2509-2509", cluster="lambda expression", file="JsonSchema.cs"];
m2_1597 [label="Assert.IsTrue(reader.Read())", span="2594-2594", cluster="lambda expression", file="JsonSchema.cs"];
m2_1596 [label="Entry lambda expression", span="2594-2594", cluster="lambda expression", file="JsonSchema.cs"];
m2_1598 [label="Exit lambda expression", span="2594-2594", cluster="lambda expression", file="JsonSchema.cs"];
m2_1629 [label="Assert.IsTrue(reader.Read())", span="2612-2612", cluster="lambda expression", file="JsonSchema.cs"];
m2_1632 [label="Assert.IsTrue(reader.Read())", span="2632-2632", cluster="lambda expression", file="JsonSchema.cs"];
m2_1628 [label="Entry lambda expression", span="2612-2612", cluster="lambda expression", file="JsonSchema.cs"];
m2_1631 [label="Entry lambda expression", span="2632-2632", cluster="lambda expression", file="JsonSchema.cs"];
m2_1630 [label="Exit lambda expression", span="2612-2612", cluster="lambda expression", file="JsonSchema.cs"];
m2_1633 [label="Exit lambda expression", span="2632-2632", cluster="lambda expression", file="JsonSchema.cs"];
m2_1754 [label="jsonTextReader.Read()", span="2792-2792", cluster="lambda expression", file="JsonSchema.cs"];
m2_1757 [label="jsonTextReader.Read()", span="2795-2795", cluster="lambda expression", file="JsonSchema.cs"];
m2_1760 [label="jsonTextReader.Read()", span="2806-2806", cluster="lambda expression", file="JsonSchema.cs"];
m2_1763 [label="jsonTextReader.Read()", span="2817-2817", cluster="lambda expression", file="JsonSchema.cs"];
m2_1766 [label="jsonTextReader.Read()", span="2820-2820", cluster="lambda expression", file="JsonSchema.cs"];
m2_1769 [label="jsonTextReader.Read()", span="2823-2823", cluster="lambda expression", file="JsonSchema.cs"];
m2_1753 [label="Entry lambda expression", span="2792-2792", cluster="lambda expression", file="JsonSchema.cs"];
m2_1756 [label="Entry lambda expression", span="2795-2795", cluster="lambda expression", file="JsonSchema.cs"];
m2_1759 [label="Entry lambda expression", span="2806-2806", cluster="lambda expression", file="JsonSchema.cs"];
m2_1762 [label="Entry lambda expression", span="2817-2817", cluster="lambda expression", file="JsonSchema.cs"];
m2_1765 [label="Entry lambda expression", span="2820-2820", cluster="lambda expression", file="JsonSchema.cs"];
m2_1755 [label="Exit lambda expression", span="2792-2792", cluster="lambda expression", file="JsonSchema.cs"];
m2_1758 [label="Exit lambda expression", span="2795-2795", cluster="lambda expression", file="JsonSchema.cs"];
m2_1761 [label="Exit lambda expression", span="2806-2806", cluster="lambda expression", file="JsonSchema.cs"];
m2_1764 [label="Exit lambda expression", span="2817-2817", cluster="lambda expression", file="JsonSchema.cs"];
m2_1767 [label="Exit lambda expression", span="2820-2820", cluster="lambda expression", file="JsonSchema.cs"];
m2_1770 [label="Exit lambda expression", span="2823-2823", cluster="lambda expression", file="JsonSchema.cs"];
m2_1729 [label="Entry System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", file="JsonSchema.cs"];
m2_1293 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", span="2108-2108", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonSchema.cs"];
m2_1294 [label="string json = @''/*comment*/ { /*comment*/\r\n        ''''Name'''': /*comment*/ ''''Apple'''' /*comment*/, /*comment*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment*/ [ /*comment*/\r\n          ''''Small'''', /*comment*/\r\n          ''''Medium'''' /*comment*/,\r\n          /*comment*/ ''''Large''''\r\n        /*comment*/ ] /*comment*/\r\n      } /*comment*/''", span="2110-2119", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonSchema.cs"];
m2_1295 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2121-2121", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonSchema.cs"];
m2_1296 [label="int i = 0", span="2126-2126", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonSchema.cs"];
m2_1298 [label="Assert.IsTrue(reader.Read())", span="2128-2128", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonSchema.cs"];
m2_1300 [label="Assert.IsTrue(reader.Read())", span="2131-2131", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonSchema.cs"];
m2_1301 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2132-2132", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonSchema.cs"];
m2_1302 [label="Assert.IsFalse(reader.Read())", span="2134-2134", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonSchema.cs"];
m2_1297 [label="i < 26", span="2126-2126", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonSchema.cs"];
m2_1299 [label="i++", span="2126-2126", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonSchema.cs"];
m2_1303 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", span="2108-2108", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonSchema.cs"];
m2_1465 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", span="2386-2386", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1466 [label="string json = @''/*comment*/{/*comment*/Name:/*comment*/true/*comment*/,/*comment*/\r\n        ''''ExpiryDate'''':/*comment*/new\r\n'' + StringUtils.LineFeed +\r\n                          @''Date\r\n(/*comment*/null/*comment*/),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''':/*comment*/[/*comment*/\r\n          ''''Small''''/*comment*/]/*comment*/}/*comment*/''", span="2388-2395", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1467 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2397-2397", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1468 [label="Assert.IsTrue(reader.Read())", span="2399-2399", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1469 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2400-2400", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1470 [label="Assert.IsTrue(reader.Read())", span="2402-2402", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1471 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2403-2403", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1472 [label="Assert.IsTrue(reader.Read())", span="2405-2405", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1473 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2406-2406", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1474 [label="Assert.IsTrue(reader.Read())", span="2408-2408", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1475 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2409-2409", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1476 [label="Assert.AreEqual(''Name'', reader.Value)", span="2410-2410", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1477 [label="Assert.IsTrue(reader.Read())", span="2412-2412", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1478 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2413-2413", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1479 [label="Assert.IsTrue(reader.Read())", span="2415-2415", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1480 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2416-2416", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1481 [label="Assert.AreEqual(true, reader.Value)", span="2417-2417", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1482 [label="Assert.IsTrue(reader.Read())", span="2419-2419", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1483 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2420-2420", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1484 [label="Assert.IsTrue(reader.Read())", span="2422-2422", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1485 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2423-2423", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1486 [label="Assert.IsTrue(reader.Read())", span="2425-2425", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1487 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2426-2426", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1488 [label="Assert.AreEqual(''ExpiryDate'', reader.Value)", span="2427-2427", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1489 [label="Assert.IsTrue(reader.Read())", span="2429-2429", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1490 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2430-2430", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1491 [label="Assert.IsTrue(reader.Read())", span="2432-2432", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1492 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2433-2433", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1493 [label="Assert.AreEqual(5, reader.LineNumber)", span="2434-2434", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1494 [label="Assert.AreEqual(''Date'', reader.Value)", span="2435-2435", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1495 [label="Assert.IsTrue(reader.Read())", span="2437-2437", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1496 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2438-2438", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1497 [label="Assert.IsTrue(reader.Read())", span="2440-2440", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1498 [label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2441-2441", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1499 [label="Assert.IsTrue(reader.Read())", span="2443-2443", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1500 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2444-2444", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1501 [label="Assert.IsTrue(reader.Read())", span="2446-2446", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1502 [label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2447-2447", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1503 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", span="2386-2386", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSchema.cs"];
m2_1031 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", span="1698-1698", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonSchema.cs"];
m2_1032 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1''))", span="1700-1700", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonSchema.cs"];
m2_1033 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end when reading bytes. Path '[0]', line 1, position 2.'',\r\n                () => { reader.ReadAsBytes(); })", span="1702-1704", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonSchema.cs"];
m2_1034 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", span="1698-1698", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonSchema.cs"];
m2_1543 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", span="2513-2513", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1544 [label="double d", span="2515-2515", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1545 [label="d = Convert.ToDouble(''6.0221418e23'', CultureInfo.InvariantCulture)", span="2517-2517", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1546 [label="Console.WriteLine(d.ToString(new CultureInfo(''fr-FR'')))", span="2518-2518", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1547 [label="Console.WriteLine(d.ToString(''0.#############################################################################''))", span="2519-2519", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1548 [label="string json = @''[0e-10,0E-10,0.25e-5,0.3e10,6.0221418e23]''", span="2524-2524", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1549 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2526-2526", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1567 [label="reader = new JsonTextReader(new StringReader(json))", span="2553-2553", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1550 [label="reader.Read()", span="2528-2528", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1551 [label="reader.Read()", span="2530-2530", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1552 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2531-2531", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1553 [label="Assert.AreEqual(0d, reader.Value)", span="2532-2532", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1554 [label="reader.Read()", span="2534-2534", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1555 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2535-2535", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1556 [label="Assert.AreEqual(0d, reader.Value)", span="2536-2536", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1557 [label="reader.Read()", span="2538-2538", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1558 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2539-2539", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1559 [label="Assert.AreEqual(0.0000025d, reader.Value)", span="2540-2540", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1560 [label="reader.Read()", span="2542-2542", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1561 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2543-2543", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1562 [label="Assert.AreEqual(3000000000d, reader.Value)", span="2544-2544", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1563 [label="reader.Read()", span="2546-2546", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1564 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2547-2547", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1565 [label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="2548-2548", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1566 [label="reader.Read()", span="2550-2550", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1568 [label="reader.Read()", span="2555-2555", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1569 [label="reader.ReadAsDecimal()", span="2557-2557", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1570 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2558-2558", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1571 [label="Assert.AreEqual(0m, reader.Value)", span="2559-2559", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1572 [label="reader.ReadAsDecimal()", span="2561-2561", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1573 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2562-2562", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1574 [label="Assert.AreEqual(0m, reader.Value)", span="2563-2563", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1575 [label="reader.ReadAsDecimal()", span="2565-2565", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1576 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2566-2566", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1577 [label="Assert.AreEqual(0.0000025m, reader.Value)", span="2567-2567", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1578 [label="reader.ReadAsDecimal()", span="2569-2569", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1579 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2570-2570", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1580 [label="Assert.AreEqual(3000000000m, reader.Value)", span="2571-2571", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1581 [label="reader.ReadAsDecimal()", span="2573-2573", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1582 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2574-2574", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1583 [label="Assert.AreEqual(602214180000000000000000m, reader.Value)", span="2575-2575", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1584 [label="reader.Read()", span="2577-2577", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1585 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", span="2513-2513", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSchema.cs"];
m2_1823 [label="Entry Newtonsoft.Json.Tests.SlowStream.Write(byte[], int, int)", span="2950-2950", cluster="Newtonsoft.Json.Tests.SlowStream.Write(byte[], int, int)", file="JsonSchema.cs"];
m2_1824 [label="throw new NotSupportedException();", span="2952-2952", cluster="Newtonsoft.Json.Tests.SlowStream.Write(byte[], int, int)", file="JsonSchema.cs"];
m2_1825 [label="Exit Newtonsoft.Json.Tests.SlowStream.Write(byte[], int, int)", span="2950-2950", cluster="Newtonsoft.Json.Tests.SlowStream.Write(byte[], int, int)", file="JsonSchema.cs"];
m2_766 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="357-357", cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JsonSchema.cs"];
m2_971 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", span="1604-1604", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonSchema.cs"];
m2_972 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[}''))", span="1606-1606", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonSchema.cs"];
m2_973 [label="reader.Read()", span="1608-1608", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonSchema.cs"];
m2_974 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected character encountered while parsing value: }. Path '', line 1, position 1.'',\r\n                () => { reader.Read(); })", span="1610-1612", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonSchema.cs"];
m2_975 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", span="1604-1604", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonSchema.cs"];
m2_92 [label="Entry System.Globalization.StringInfo.StringInfo(string)", span="0-0", cluster="System.Globalization.StringInfo.StringInfo(string)", file="JsonSchema.cs"];
m2_14 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="JsonSchema.cs"];
m2_139 [label="Entry System.Console.WriteLine(object)", span="0-0", cluster="System.Console.WriteLine(object)", file="JsonSchema.cs"];
m2_1130 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", span="1851-1851", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSchema.cs"];
m2_1131 [label="string json = @''{''''Offset'''':''''\/Date(946708260000-0631)\/''''}''", span="1853-1853", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSchema.cs"];
m2_1132 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1855-1855", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSchema.cs"];
m2_1133 [label="Assert.IsTrue(reader.Read())", span="1857-1857", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSchema.cs"];
m2_1134 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1858-1858", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSchema.cs"];
m2_1135 [label="Assert.IsTrue(reader.Read())", span="1860-1860", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSchema.cs"];
m2_1136 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1861-1861", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSchema.cs"];
m2_1137 [label="reader.ReadAsDateTimeOffset()", span="1863-1863", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSchema.cs"];
m2_1138 [label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="1864-1864", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSchema.cs"];
m2_1139 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="1865-1865", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSchema.cs"];
m2_1140 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6).Add(TimeSpan.FromMinutes(-31))), reader.Value)", span="1866-1866", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSchema.cs"];
m2_1141 [label="Assert.IsTrue(reader.Read())", span="1868-1868", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSchema.cs"];
m2_1142 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1869-1869", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSchema.cs"];
m2_1143 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", span="1851-1851", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSchema.cs"];
m2_190 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", span="427-427", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonSchema.cs"];
m2_191 [label="string json = @'''hi' a''", span="429-429", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonSchema.cs"];
m2_192 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="431-431", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonSchema.cs"];
m2_193 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Additional text encountered after finished reading JSON content: a. Path '', line 1, position 5.'',\r\n                () =>\r\n                {\r\n                    while (reader.Read())\r\n                    {\r\n                    }\r\n                })", span="433-440", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonSchema.cs"];
m2_194 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", span="427-427", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonSchema.cs"];
m2_367 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", span="681-681", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSchema.cs"];
m2_368 [label="int valueCount = 10000", span="683-683", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSchema.cs"];
m2_369 [label="StringWriter sw = new StringWriter()", span="684-684", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSchema.cs"];
m2_373 [label="i < valueCount", span="687-687", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSchema.cs"];
m2_381 [label="i < valueCount", span="697-697", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSchema.cs"];
m2_370 [label="JsonTextWriter writer = new JsonTextWriter(sw)", span="685-685", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSchema.cs"];
m2_377 [label="string json = sw.ToString()", span="693-693", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSchema.cs"];
m2_371 [label="writer.WriteStartArray()", span="686-686", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSchema.cs"];
m2_374 [label="writer.WriteValue(i)", span="689-689", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSchema.cs"];
m2_376 [label="writer.WriteEndArray()", span="691-691", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSchema.cs"];
m2_372 [label="int i = 0", span="687-687", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSchema.cs"];
m2_375 [label="i++", span="687-687", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSchema.cs"];
m2_378 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="695-695", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSchema.cs"];
m2_379 [label="Assert.IsTrue(reader.Read())", span="696-696", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSchema.cs"];
m2_382 [label="Assert.IsTrue(reader.Read())", span="699-699", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSchema.cs"];
m2_383 [label="Assert.AreEqual((long)i, reader.Value)", span="700-700", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSchema.cs"];
m2_385 [label="Assert.IsTrue(reader.Read())", span="702-702", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSchema.cs"];
m2_386 [label="Assert.IsFalse(reader.Read())", span="703-703", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSchema.cs"];
m2_380 [label="int i = 0", span="697-697", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSchema.cs"];
m2_384 [label="i++", span="697-697", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSchema.cs"];
m2_387 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", span="681-681", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSchema.cs"];
m2_1087 [label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="JsonSchema.cs"];
m2_18 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", span="175-175", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="JsonSchema.cs"];
m2_1104 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", span="1811-1811", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonSchema.cs"];
m2_1105 [label="string json = @''{''''Offset'''':''''blablahbla''''}''", span="1813-1813", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonSchema.cs"];
m2_1106 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1815-1815", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonSchema.cs"];
m2_1107 [label="Assert.IsTrue(reader.Read())", span="1817-1817", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonSchema.cs"];
m2_1108 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1818-1818", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonSchema.cs"];
m2_1109 [label="Assert.IsTrue(reader.Read())", span="1820-1820", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonSchema.cs"];
m2_1110 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1821-1821", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonSchema.cs"];
m2_1111 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Could not convert string to DateTimeOffset: blablahbla. Path 'Offset', line 1, position 22.'',\r\n                () => { reader.ReadAsDateTimeOffset(); })", span="1823-1825", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonSchema.cs"];
m2_1112 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", span="1811-1811", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonSchema.cs"];
m2_1003 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", span="1655-1655", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonSchema.cs"];
m2_1004 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1657-1657", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonSchema.cs"];
m2_1005 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error reading decimal. Unexpected token: StartConstructor. Path '', line 1, position 9.'',\r\n                () => { reader.ReadAsDecimal(); })", span="1659-1661", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonSchema.cs"];
m2_1006 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", span="1655-1655", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonSchema.cs"];
m2_117 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", span="278-278", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonSchema.cs"];
m2_118 [label="MemoryStream ms = new MemoryStream()", span="280-280", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonSchema.cs"];
m2_119 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(ms))", span="281-281", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonSchema.cs"];
m2_120 [label="Assert.IsTrue(ms.CanRead)", span="283-283", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonSchema.cs"];
m2_122 [label="Assert.IsFalse(ms.CanRead)", span="285-285", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonSchema.cs"];
m2_121 [label="reader.Close()", span="284-284", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonSchema.cs"];
m2_123 [label="ms = new MemoryStream()", span="287-287", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonSchema.cs"];
m2_124 [label="reader = new JsonTextReader(new StreamReader(ms)) { CloseInput = false }", span="288-288", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonSchema.cs"];
m2_125 [label="Assert.IsTrue(ms.CanRead)", span="290-290", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonSchema.cs"];
m2_127 [label="Assert.IsTrue(ms.CanRead)", span="292-292", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonSchema.cs"];
m2_126 [label="reader.Close()", span="291-291", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonSchema.cs"];
m2_128 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", span="278-278", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonSchema.cs"];
m2_1060 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", span="1745-1745", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSchema.cs"];
m2_1061 [label="string json = @''{''''text'''':0xabcdef12345}''", span="1747-1747", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSchema.cs"];
m2_1062 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1749-1749", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSchema.cs"];
m2_1063 [label="Assert.IsTrue(reader.Read())", span="1751-1751", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSchema.cs"];
m2_1064 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1752-1752", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSchema.cs"];
m2_1065 [label="Assert.IsTrue(reader.Read())", span="1754-1754", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSchema.cs"];
m2_1066 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1755-1755", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSchema.cs"];
m2_1067 [label="Assert.IsTrue(reader.Read())", span="1757-1757", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSchema.cs"];
m2_1068 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1758-1758", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSchema.cs"];
m2_1069 [label="Assert.AreEqual(11806310474565, reader.Value)", span="1759-1759", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSchema.cs"];
m2_1070 [label="Assert.IsTrue(reader.Read())", span="1761-1761", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSchema.cs"];
m2_1071 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1762-1762", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSchema.cs"];
m2_1072 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", span="1745-1745", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSchema.cs"];
m2_1089 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="JsonSchema.cs"];
m2_1116 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", span="1829-1829", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSchema.cs"];
m2_1117 [label="string json = ''{\''Offset\'':\''\\/Date(946663200000+06)\\/\''}''", span="1831-1831", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSchema.cs"];
m2_1118 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1833-1833", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSchema.cs"];
m2_1119 [label="Assert.IsTrue(reader.Read())", span="1835-1835", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSchema.cs"];
m2_1120 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1836-1836", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSchema.cs"];
m2_1121 [label="Assert.IsTrue(reader.Read())", span="1838-1838", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSchema.cs"];
m2_1122 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1839-1839", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSchema.cs"];
m2_1123 [label="reader.ReadAsDateTimeOffset()", span="1841-1841", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSchema.cs"];
m2_1124 [label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="1842-1842", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSchema.cs"];
m2_1125 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="1843-1843", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSchema.cs"];
m2_1126 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="1844-1844", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSchema.cs"];
m2_1127 [label="Assert.IsTrue(reader.Read())", span="1846-1846", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSchema.cs"];
m2_1128 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1847-1847", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSchema.cs"];
m2_1129 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", span="1829-1829", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSchema.cs"];
m2_353 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", span="661-661", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="JsonSchema.cs"];
m2_354 [label="JsonReader reader = new JsonTextReader(new StringReader('''hi''))", span="663-663", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="JsonSchema.cs"];
m2_355 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unterminated string. Expected delimiter: '. Path '', line 1, position 3.'',\r\n                () => { reader.Read(); })", span="665-667", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="JsonSchema.cs"];
m2_356 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", span="661-661", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="JsonSchema.cs"];
m2_1378 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", span="2256-2256", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonSchema.cs"];
m2_1379 [label="string json = ''new Dat''", span="2258-2258", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonSchema.cs"];
m2_1380 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2259-2259", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonSchema.cs"];
m2_1381 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end while parsing constructor. Path '', line 1, position 7.'',\r\n                () => { reader.Read(); })", span="2261-2263", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonSchema.cs"];
m2_1382 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", span="2256-2256", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonSchema.cs"];
m2_764 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="373-373", cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JsonSchema.cs"];
m2_1675 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", span="2710-2710", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1676 [label="string json = @''[''''1970-01-01T00:00:00Z'''',''''\/Date(0)\/'''']''", span="2712-2712", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1677 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2714-2714", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1687 [label="reader = new JsonTextReader(new StringReader(json))", span="2727-2727", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1697 [label="reader = new JsonTextReader(new StringReader(json))", span="2740-2740", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1707 [label="reader = new JsonTextReader(new StringReader(json))", span="2753-2753", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1717 [label="reader = new JsonTextReader(new StringReader(json))", span="2766-2766", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1678 [label="reader.DateParseHandling = Json.DateParseHandling.DateTime", span="2715-2715", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1679 [label="Assert.IsTrue(reader.Read())", span="2717-2717", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1680 [label="Assert.IsTrue(reader.Read())", span="2718-2718", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1681 [label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="2719-2719", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1682 [label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="2720-2720", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1683 [label="Assert.IsTrue(reader.Read())", span="2721-2721", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1684 [label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="2722-2722", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1685 [label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="2723-2723", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1686 [label="Assert.IsTrue(reader.Read())", span="2724-2724", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1688 [label="reader.DateParseHandling = Json.DateParseHandling.DateTimeOffset", span="2728-2728", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1689 [label="Assert.IsTrue(reader.Read())", span="2730-2730", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1690 [label="Assert.IsTrue(reader.Read())", span="2731-2731", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1691 [label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="2732-2732", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1692 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2733-2733", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1693 [label="Assert.IsTrue(reader.Read())", span="2734-2734", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1694 [label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="2735-2735", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1695 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2736-2736", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1696 [label="Assert.IsTrue(reader.Read())", span="2737-2737", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1698 [label="reader.DateParseHandling = Json.DateParseHandling.None", span="2741-2741", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1699 [label="Assert.IsTrue(reader.Read())", span="2743-2743", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1700 [label="Assert.IsTrue(reader.Read())", span="2744-2744", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1701 [label="Assert.AreEqual(@''1970-01-01T00:00:00Z'', reader.Value)", span="2745-2745", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1702 [label="Assert.AreEqual(typeof(string), reader.ValueType)", span="2746-2746", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1703 [label="Assert.IsTrue(reader.Read())", span="2747-2747", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1704 [label="Assert.AreEqual(@''/Date(0)/'', reader.Value)", span="2748-2748", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1705 [label="Assert.AreEqual(typeof(string), reader.ValueType)", span="2749-2749", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1706 [label="Assert.IsTrue(reader.Read())", span="2750-2750", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1708 [label="reader.DateParseHandling = Json.DateParseHandling.DateTime", span="2754-2754", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1709 [label="Assert.IsTrue(reader.Read())", span="2756-2756", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1710 [label="reader.ReadAsDateTimeOffset()", span="2757-2757", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1711 [label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="2758-2758", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1712 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2759-2759", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1713 [label="reader.ReadAsDateTimeOffset()", span="2760-2760", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1714 [label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="2761-2761", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1715 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2762-2762", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1716 [label="Assert.IsTrue(reader.Read())", span="2763-2763", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1718 [label="reader.DateParseHandling = Json.DateParseHandling.DateTimeOffset", span="2767-2767", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1719 [label="Assert.IsTrue(reader.Read())", span="2769-2769", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1720 [label="reader.ReadAsDateTime()", span="2770-2770", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1721 [label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="2771-2771", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1722 [label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="2772-2772", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1723 [label="reader.ReadAsDateTime()", span="2773-2773", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1724 [label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="2774-2774", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1725 [label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="2775-2775", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1726 [label="Assert.IsTrue(reader.Read())", span="2776-2776", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_1727 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", span="2710-2710", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSchema.cs"];
m2_93 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", span="231-231", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonSchema.cs"];
m2_94 [label="Assert.AreEqual(''ABC \ud800\udc00 DEF'', ReadString(''ABC \\ud800\\udc00 DEF''))", span="234-234", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonSchema.cs"];
m2_95 [label="Assert.AreEqual(''ABC \ufffd\ufffd DEF'', ReadString(''ABC \\ud800\\ud800 DEF''))", span="237-237", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonSchema.cs"];
m2_96 [label="Assert.AreEqual(''ABC \ufffd\ufffd\u1234 DEF'', ReadString(''ABC \\ud800\\ud800\\u1234 DEF''))", span="240-240", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonSchema.cs"];
m2_97 [label="Assert.AreEqual(''ABC \ufffd\ufffd\ufffd DEF'', ReadString(''ABC \\ud800\\ud800\\ud800 DEF''))", span="243-243", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonSchema.cs"];
m2_98 [label="Assert.AreEqual(''ABC \ufffd\ud800\udc00 DEF'', ReadString(''ABC \\ud800\\ud800\\udc00 DEF''))", span="246-246", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonSchema.cs"];
m2_99 [label="Assert.AreEqual(''ABC \ufffd'', ReadString(''ABC \\ud800''))", span="249-249", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonSchema.cs"];
m2_100 [label="Assert.AreEqual(''ABC \ufffd DEF'', ReadString(''ABC \\ud800 DEF''))", span="252-252", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonSchema.cs"];
m2_101 [label="Assert.AreEqual(''ABC \ufffd\ufffd DEF'', ReadString(''ABC \\udc00\\ud800 DEF''))", span="255-255", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonSchema.cs"];
m2_102 [label="Assert.AreEqual(''\ufffd\ufffd\ufffd'', ReadString(''\udc00\ud800\ud800''))", span="258-258", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonSchema.cs"];
m2_103 [label="Assert.AreEqual(''ABC \ufffd\b'', ReadString(''ABC \\ud800\\b''))", span="260-260", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonSchema.cs"];
m2_104 [label="Assert.AreEqual(''ABC \ufffd '', ReadString(''ABC \\ud800 ''))", span="261-261", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonSchema.cs"];
m2_105 [label="Assert.AreEqual(''ABC \b\ufffd'', ReadString(''ABC \\b\\ud800''))", span="262-262", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonSchema.cs"];
m2_106 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", span="231-231", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonSchema.cs"];
m2_997 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", span="1645-1645", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonSchema.cs"];
m2_998 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1647-1647", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonSchema.cs"];
m2_999 [label="Assert.IsNull(reader.ReadAsDateTimeOffset())", span="1649-1649", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonSchema.cs"];
m2_1000 [label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1650-1650", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonSchema.cs"];
m2_1001 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", span="1645-1645", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonSchema.cs"];
m2_1806 [label="Entry Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", span="2927-2927", cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="JsonSchema.cs"];
m2_1807 [label="int toReturn = Math.Min(count, bytesPerRead)", span="2929-2929", cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="JsonSchema.cs"];
m2_1810 [label="Array.Copy(bytes, totalBytesRead, buffer, offset, toReturn)", span="2933-2933", cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="JsonSchema.cs"];
m2_1808 [label="toReturn = Math.Min(toReturn, bytes.Length - totalBytesRead)", span="2930-2930", cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="JsonSchema.cs"];
m2_1809 [label="toReturn > 0", span="2931-2931", cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="JsonSchema.cs"];
m2_1811 [label="totalBytesRead += toReturn", span="2936-2936", cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="JsonSchema.cs"];
m2_1812 [label="return toReturn;", span="2937-2937", cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="JsonSchema.cs"];
m2_1813 [label="Exit Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", span="2927-2927", cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="JsonSchema.cs"];
m2_1518 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", span="2475-2475", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSchema.cs"];
m2_1519 [label="string json = @''[0,1,2 , 3]''", span="2477-2477", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSchema.cs"];
m2_1520 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2479-2479", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSchema.cs"];
m2_1521 [label="reader.Read()", span="2481-2481", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSchema.cs"];
m2_1522 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2482-2482", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSchema.cs"];
m2_1523 [label="reader.Read()", span="2484-2484", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSchema.cs"];
m2_1524 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2485-2485", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSchema.cs"];
m2_1525 [label="reader.Read()", span="2487-2487", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSchema.cs"];
m2_1526 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2488-2488", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSchema.cs"];
m2_1527 [label="reader.Read()", span="2490-2490", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSchema.cs"];
m2_1528 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2491-2491", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSchema.cs"];
m2_1529 [label="reader.Read()", span="2493-2493", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSchema.cs"];
m2_1530 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2494-2494", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSchema.cs"];
m2_1531 [label="reader.Read()", span="2496-2496", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSchema.cs"];
m2_1532 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2497-2497", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSchema.cs"];
m2_1533 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", span="2475-2475", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSchema.cs"];
m2_22 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", span="73-73", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSchema.cs"];
m2_23 [label="string json = ''[1.0,1,9.9,1E-06]''", span="75-75", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSchema.cs"];
m2_24 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="77-77", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSchema.cs"];
m2_25 [label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="78-78", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSchema.cs"];
m2_26 [label="Assert.IsTrue(reader.Read())", span="80-80", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSchema.cs"];
m2_27 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="81-81", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSchema.cs"];
m2_28 [label="Assert.IsTrue(reader.Read())", span="83-83", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSchema.cs"];
m2_29 [label="Assert.AreEqual(1.0m, reader.Value)", span="84-84", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSchema.cs"];
m2_30 [label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="85-85", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSchema.cs"];
m2_31 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="86-86", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSchema.cs"];
m2_32 [label="Assert.IsTrue(reader.Read())", span="88-88", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSchema.cs"];
m2_33 [label="Assert.AreEqual(1L, reader.Value)", span="89-89", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSchema.cs"];
m2_34 [label="Assert.AreEqual(typeof(long), reader.ValueType)", span="90-90", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSchema.cs"];
m2_35 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="91-91", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSchema.cs"];
m2_36 [label="Assert.IsTrue(reader.Read())", span="93-93", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSchema.cs"];
m2_37 [label="Assert.AreEqual(9.9m, reader.Value)", span="94-94", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSchema.cs"];
m2_38 [label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="95-95", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSchema.cs"];
m2_39 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="96-96", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSchema.cs"];
m2_40 [label="Assert.IsTrue(reader.Read())", span="98-98", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSchema.cs"];
m2_41 [label="Assert.AreEqual(Convert.ToDecimal(1E-06), reader.Value)", span="99-99", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSchema.cs"];
m2_42 [label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="100-100", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSchema.cs"];
m2_43 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="101-101", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSchema.cs"];
m2_44 [label="Assert.IsTrue(reader.Read())", span="103-103", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSchema.cs"];
m2_45 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="104-104", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSchema.cs"];
m2_46 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", span="73-73", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSchema.cs"];
m2_1024 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", span="1687-1687", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonSchema.cs"];
m2_1025 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[/*hi*/1/*hi*/,2/*hi*/]''))", span="1689-1689", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonSchema.cs"];
m2_1026 [label="byte[] data = reader.ReadAsBytes()", span="1691-1691", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonSchema.cs"];
m2_1027 [label="Assert.AreEqual(2, data.Length)", span="1692-1692", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonSchema.cs"];
m2_1028 [label="Assert.AreEqual(1, data[0])", span="1693-1693", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonSchema.cs"];
m2_1029 [label="Assert.AreEqual(2, data[1])", span="1694-1694", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonSchema.cs"];
m2_1030 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", span="1687-1687", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonSchema.cs"];
m2_116 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="JsonSchema.cs"];
m2_911 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", span="1517-1517", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSchema.cs"];
m2_912 [label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1519-1519", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSchema.cs"];
m2_913 [label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1520-1520", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSchema.cs"];
m2_914 [label="Assert.IsTrue(jsonReader.Read())", span="1522-1522", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSchema.cs"];
m2_915 [label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1523-1523", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSchema.cs"];
m2_916 [label="Assert.IsTrue(jsonReader.Read())", span="1525-1525", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSchema.cs"];
m2_917 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1526-1526", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSchema.cs"];
m2_918 [label="Assert.AreEqual(250L, jsonReader.Value)", span="1527-1527", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSchema.cs"];
m2_919 [label="Assert.IsTrue(jsonReader.Read())", span="1529-1529", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSchema.cs"];
m2_920 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1530-1530", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSchema.cs"];
m2_921 [label="Assert.AreEqual(250L, jsonReader.Value)", span="1531-1531", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSchema.cs"];
m2_922 [label="Assert.IsTrue(jsonReader.Read())", span="1533-1533", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSchema.cs"];
m2_923 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1534-1534", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSchema.cs"];
m2_924 [label="Assert.AreEqual(250L, jsonReader.Value)", span="1535-1535", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSchema.cs"];
m2_925 [label="Assert.IsTrue(jsonReader.Read())", span="1537-1537", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSchema.cs"];
m2_926 [label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1538-1538", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSchema.cs"];
m2_927 [label="Assert.IsFalse(jsonReader.Read())", span="1540-1540", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSchema.cs"];
m2_928 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", span="1517-1517", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSchema.cs"];
m2_1313 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", span="2155-2155", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonSchema.cs"];
m2_1314 [label="string json = ''new Date\n()''", span="2157-2157", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonSchema.cs"];
m2_1315 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2158-2158", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonSchema.cs"];
m2_1316 [label="Assert.IsTrue(reader.Read())", span="2160-2160", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonSchema.cs"];
m2_1317 [label="Assert.AreEqual(''Date'', reader.Value)", span="2161-2161", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonSchema.cs"];
m2_1318 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2162-2162", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonSchema.cs"];
m2_1319 [label="Assert.IsTrue(reader.Read())", span="2164-2164", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonSchema.cs"];
m2_1320 [label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2165-2165", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonSchema.cs"];
m2_1321 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", span="2155-2155", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonSchema.cs"];
m2_634 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", span="1111-1111", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSchema.cs"];
m2_635 [label="string helloWorld = ''Hello world!''", span="1113-1113", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSchema.cs"];
m2_636 [label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1114-1114", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSchema.cs"];
m2_637 [label="JsonReader reader = new JsonTextReader(new StringReader(@''{num:1,data:''' + Convert.ToBase64String(helloWorldData) + @'''}''))", span="1116-1116", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSchema.cs"];
m2_645 [label="CollectionAssert.AreEquivalent(helloWorldData, data)", span="1124-1124", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSchema.cs"];
m2_638 [label="Assert.IsTrue(reader.Read())", span="1117-1117", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSchema.cs"];
m2_639 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1118-1118", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSchema.cs"];
m2_640 [label="Assert.IsTrue(reader.Read())", span="1119-1119", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSchema.cs"];
m2_641 [label="Assert.IsTrue(reader.Read())", span="1120-1120", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSchema.cs"];
m2_642 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1121-1121", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSchema.cs"];
m2_643 [label="Assert.IsTrue(reader.Read())", span="1122-1122", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSchema.cs"];
m2_644 [label="byte[] data = reader.ReadAsBytes()", span="1123-1123", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSchema.cs"];
m2_646 [label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="1125-1125", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSchema.cs"];
m2_647 [label="Assert.IsTrue(reader.Read())", span="1126-1126", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSchema.cs"];
m2_648 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1127-1127", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSchema.cs"];
m2_649 [label="Assert.IsFalse(reader.Read())", span="1129-1129", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSchema.cs"];
m2_650 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", span="1111-1111", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSchema.cs"];
m2_484 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", span="856-856", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSchema.cs"];
m2_485 [label="BigInteger i = new BigInteger(long.MinValue)", span="858-858", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSchema.cs"];
m2_486 [label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="860-860", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSchema.cs"];
m2_491 [label="BigInteger total = i + -j", span="866-866", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSchema.cs"];
m2_487 [label="reader.Read()", span="861-861", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSchema.cs"];
m2_488 [label="Assert.AreEqual(typeof(long), reader.ValueType)", span="862-862", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSchema.cs"];
m2_489 [label="int j = 1", span="864-864", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSchema.cs"];
m2_490 [label="j < 1000", span="864-864", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSchema.cs"];
m2_495 [label="j++", span="864-864", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSchema.cs"];
m2_492 [label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="868-868", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSchema.cs"];
m2_493 [label="reader.Read()", span="869-869", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSchema.cs"];
m2_494 [label="Assert.AreEqual(typeof(BigInteger), reader.ValueType)", span="871-871", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSchema.cs"];
m2_496 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", span="856-856", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSchema.cs"];
m2_388 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="JsonSchema.cs"];
m2_481 [label="Entry BigInteger.cstr", span="", cluster="BigInteger.cstr", file="JsonSchema.cs"];
m2_775 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="614-614", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonSchema.cs"];
m2_985 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", span="1625-1625", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonSchema.cs"];
m2_986 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1627-1627", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonSchema.cs"];
m2_987 [label="Assert.IsNull(reader.ReadAsBytes())", span="1629-1629", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonSchema.cs"];
m2_988 [label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1630-1630", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonSchema.cs"];
m2_989 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", span="1625-1625", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonSchema.cs"];
m2_771 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="365-365", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonSchema.cs"];
m2_534 [label="Entry Newtonsoft.Json.JsonReader.ReadAsBytes()", span="372-372", cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonSchema.cs"];
m2_1730 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="353-353", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JsonSchema.cs"];
m2_366 [label="Entry string.String(char, int)", span="0-0", cluster="string.String(char, int)", file="JsonSchema.cs"];
m2_1322 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", span="2169-2169", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSchema.cs"];
m2_1323 [label="string json = ''[,,, \n\r\n \0   \r  , ,    ]''", span="2171-2171", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSchema.cs"];
m2_1324 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2172-2172", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSchema.cs"];
m2_1325 [label="Assert.IsTrue(reader.Read())", span="2174-2174", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSchema.cs"];
m2_1326 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2175-2175", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSchema.cs"];
m2_1327 [label="Assert.IsTrue(reader.Read())", span="2177-2177", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSchema.cs"];
m2_1328 [label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2178-2178", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSchema.cs"];
m2_1329 [label="Assert.IsTrue(reader.Read())", span="2180-2180", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSchema.cs"];
m2_1330 [label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2181-2181", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSchema.cs"];
m2_1331 [label="Assert.IsTrue(reader.Read())", span="2183-2183", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSchema.cs"];
m2_1332 [label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2184-2184", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSchema.cs"];
m2_1333 [label="Assert.IsTrue(reader.Read())", span="2186-2186", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSchema.cs"];
m2_1334 [label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2187-2187", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSchema.cs"];
m2_1335 [label="Assert.IsTrue(reader.Read())", span="2189-2189", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSchema.cs"];
m2_1336 [label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2190-2190", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSchema.cs"];
m2_1337 [label="Assert.IsTrue(reader.Read())", span="2192-2192", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSchema.cs"];
m2_1338 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2193-2193", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSchema.cs"];
m2_1339 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", span="2169-2169", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSchema.cs"];
m2_1161 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", span="1895-1895", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSchema.cs"];
m2_1162 [label="string json = @''{''''Offset'''':''''1/30/2011''''}''", span="1897-1897", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSchema.cs"];
m2_1163 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1899-1899", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSchema.cs"];
m2_1164 [label="reader.Culture = new CultureInfo(''en-US'')", span="1900-1900", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSchema.cs"];
m2_1165 [label="Assert.IsTrue(reader.Read())", span="1902-1902", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSchema.cs"];
m2_1166 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1903-1903", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSchema.cs"];
m2_1167 [label="Assert.IsTrue(reader.Read())", span="1905-1905", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSchema.cs"];
m2_1168 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1906-1906", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSchema.cs"];
m2_1169 [label="reader.ReadAsDateTimeOffset()", span="1908-1908", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSchema.cs"];
m2_1170 [label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="1909-1909", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSchema.cs"];
m2_1171 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="1910-1910", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSchema.cs"];
m2_1172 [label="DateTimeOffset dt = (DateTimeOffset)reader.Value", span="1912-1912", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSchema.cs"];
m2_1174 [label="Assert.IsTrue(reader.Read())", span="1915-1915", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSchema.cs"];
m2_1175 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1916-1916", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSchema.cs"];
m2_1173 [label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", span="1913-1913", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSchema.cs"];
m2_1176 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", span="1895-1895", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSchema.cs"];
m2_390 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="166-166", cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="JsonSchema.cs"];
m2_1160 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonSchema.cs"];
m2_1804 [label="Entry Newtonsoft.Json.Tests.SlowStream.Flush()", span="2912-2912", cluster="Newtonsoft.Json.Tests.SlowStream.Flush()", file="JsonSchema.cs"];
m2_1805 [label="Exit Newtonsoft.Json.Tests.SlowStream.Flush()", span="2912-2912", cluster="Newtonsoft.Json.Tests.SlowStream.Flush()", file="JsonSchema.cs"];
m2_773 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="JsonSchema.cs"];
m2_451 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="335-335", cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="JsonSchema.cs"];
m2_114 [label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0", cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="JsonSchema.cs"];
m2_1010 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", span="1665-1665", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonSchema.cs"];
m2_1011 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1667-1667", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonSchema.cs"];
m2_1012 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error reading bytes. Unexpected token: StartConstructor. Path '', line 1, position 9.'',\r\n                () => { reader.ReadAsBytes(); })", span="1669-1671", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonSchema.cs"];
m2_1013 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", span="1665-1665", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonSchema.cs"];
m2_115 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="JsonSchema.cs"];
m2_768 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="819-819", cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="JsonSchema.cs"];
m2_1090 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", span="1789-1789", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSchema.cs"];
m2_1091 [label="string json = @''{''''Offset'''':''''\/Date(946706400000-0600)\/''''}''", span="1791-1791", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSchema.cs"];
m2_1092 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1793-1793", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSchema.cs"];
m2_1093 [label="Assert.IsTrue(reader.Read())", span="1795-1795", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSchema.cs"];
m2_1094 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1796-1796", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSchema.cs"];
m2_1095 [label="Assert.IsTrue(reader.Read())", span="1798-1798", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSchema.cs"];
m2_1096 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1799-1799", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSchema.cs"];
m2_1097 [label="reader.ReadAsDateTimeOffset()", span="1801-1801", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSchema.cs"];
m2_1098 [label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="1802-1802", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSchema.cs"];
m2_1099 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="1803-1803", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSchema.cs"];
m2_1100 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6)), reader.Value)", span="1804-1804", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSchema.cs"];
m2_1101 [label="Assert.IsTrue(reader.Read())", span="1806-1806", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSchema.cs"];
m2_1102 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1807-1807", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSchema.cs"];
m2_1103 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", span="1789-1789", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSchema.cs"];
m2_1218 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", span="1983-1983", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonSchema.cs"];
m2_1219 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nul''))", span="1985-1985", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonSchema.cs"];
m2_1220 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error parsing null value. Path '', line 0, position 0.'',\r\n                () => { reader.Read(); })", span="1987-1989", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonSchema.cs"];
m2_1221 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", span="1983-1983", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonSchema.cs"];
m2_1589 [label="Entry double.ToString(string)", span="0-0", cluster="double.ToString(string)", file="JsonSchema.cs"];
m2_1045 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", span="1718-1718", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSchema.cs"];
m2_1046 [label="string json = @''{''''Message'''':''''Hi,I\u0092ve send you smth''''}''", span="1720-1720", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSchema.cs"];
m2_1047 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1722-1722", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSchema.cs"];
m2_1048 [label="Assert.IsTrue(reader.Read())", span="1727-1727", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSchema.cs"];
m2_1049 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1728-1728", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSchema.cs"];
m2_1050 [label="Assert.IsTrue(reader.Read())", span="1730-1730", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSchema.cs"];
m2_1051 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1731-1731", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSchema.cs"];
m2_1052 [label="Assert.AreEqual(''Message'', reader.Value)", span="1732-1732", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSchema.cs"];
m2_1053 [label="Assert.IsTrue(reader.Read())", span="1734-1734", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSchema.cs"];
m2_1054 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1735-1735", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSchema.cs"];
m2_1055 [label="Assert.AreEqual(@''Hi,I'' + '\u0092' + ''ve send you smth'', reader.Value)", span="1736-1736", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSchema.cs"];
m2_1056 [label="Assert.IsTrue(reader.Read())", span="1738-1738", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSchema.cs"];
m2_1057 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1739-1739", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSchema.cs"];
m2_1058 [label="Assert.IsFalse(reader.Read())", span="1741-1741", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSchema.cs"];
m2_1059 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", span="1718-1718", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSchema.cs"];
m2_1826 [label=reader, span="", file="JsonSchema.cs"];
m2_1827 [label=reader, span="", file="JsonSchema.cs"];
m2_1828 [label="Newtonsoft.Json.Tests.JsonTextReaderTest", span="", file="JsonSchema.cs"];
m2_1829 [label=reader, span="", file="JsonSchema.cs"];
m2_1830 [label=reader, span="", file="JsonSchema.cs"];
m2_1831 [label=reader, span="", file="JsonSchema.cs"];
m2_1832 [label=reader, span="", file="JsonSchema.cs"];
m2_1833 [label=total, span="", file="JsonSchema.cs"];
m2_1834 [label=total, span="", file="JsonSchema.cs"];
m2_1835 [label=reader, span="", file="JsonSchema.cs"];
m2_1836 [label=reader, span="", file="JsonSchema.cs"];
m2_1837 [label=reader, span="", file="JsonSchema.cs"];
m2_1838 [label=reader, span="", file="JsonSchema.cs"];
m2_1839 [label=reader, span="", file="JsonSchema.cs"];
m2_1840 [label=reader, span="", file="JsonSchema.cs"];
m2_1841 [label=reader, span="", file="JsonSchema.cs"];
m2_1842 [label=reader, span="", file="JsonSchema.cs"];
m2_1843 [label=reader, span="", file="JsonSchema.cs"];
m2_1844 [label=reader, span="", file="JsonSchema.cs"];
m2_1845 [label=reader, span="", file="JsonSchema.cs"];
m2_1846 [label=reader, span="", file="JsonSchema.cs"];
m2_1847 [label=reader, span="", file="JsonSchema.cs"];
m2_1848 [label=reader, span="", file="JsonSchema.cs"];
m2_1849 [label=reader, span="", file="JsonSchema.cs"];
m2_1850 [label=reader, span="", file="JsonSchema.cs"];
m2_1851 [label=reader, span="", file="JsonSchema.cs"];
m2_1852 [label=reader, span="", file="JsonSchema.cs"];
m2_1853 [label=reader, span="", file="JsonSchema.cs"];
m2_1854 [label=reader, span="", file="JsonSchema.cs"];
m2_1855 [label=reader, span="", file="JsonSchema.cs"];
m2_1856 [label=reader, span="", file="JsonSchema.cs"];
m2_1857 [label=reader, span="", file="JsonSchema.cs"];
m2_1858 [label=reader, span="", file="JsonSchema.cs"];
m2_1859 [label=reader, span="", file="JsonSchema.cs"];
m2_1860 [label=reader, span="", file="JsonSchema.cs"];
m2_1861 [label=reader, span="", file="JsonSchema.cs"];
m2_1862 [label=reader, span="", file="JsonSchema.cs"];
m2_1863 [label=jsonTextReader, span="", file="JsonSchema.cs"];
m2_1864 [label="Newtonsoft.Json.Tests.ToggleReaderError", span="", file="JsonSchema.cs"];
m2_1865 [label="Newtonsoft.Json.Tests.SlowStream", span="", file="JsonSchema.cs"];
m3_104 [label="Entry byte.ToString(string, System.IFormatProvider)", span="0-0", cluster="byte.ToString(string, System.IFormatProvider)", file="JsonSchemaBuilder.cs"];
m3_125 [label="Entry Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan, char)", span="379-379", cluster="Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan, char)", file="JsonSchemaBuilder.cs"];
m3_126 [label="return ToString(value.ToString(), quoteChar);", span="381-381", cluster="Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan, char)", file="JsonSchemaBuilder.cs"];
m3_127 [label="Exit Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan, char)", span="379-379", cluster="Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan, char)", file="JsonSchemaBuilder.cs"];
m3_358 [label="Entry Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting, bool)", span="1027-1027", cluster="Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting, bool)", file="JsonSchemaBuilder.cs"];
m3_359 [label="XmlNodeConverter converter = new XmlNodeConverter { OmitRootObject = omitRootObject }", span="1029-1029", cluster="Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting, bool)", file="JsonSchemaBuilder.cs"];
m3_360 [label="return SerializeObject(node, formatting, converter);", span="1031-1031", cluster="Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting, bool)", file="JsonSchemaBuilder.cs"];
m3_361 [label="Exit Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting, bool)", span="1027-1027", cluster="Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting, bool)", file="JsonSchemaBuilder.cs"];
m3_254 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", span="681-681", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", file="JsonSchemaBuilder.cs"];
m3_255 [label="return DeserializeObject(value, type, (JsonSerializerSettings)null);", span="683-683", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", file="JsonSchemaBuilder.cs"];
m3_256 [label="Exit Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", span="681-681", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", file="JsonSchemaBuilder.cs"];
m3_30 [label="Entry Newtonsoft.Json.JsonConvert.ToString(char)", span="173-173", cluster="Newtonsoft.Json.JsonConvert.ToString(char)", file="JsonSchemaBuilder.cs"];
m3_31 [label="return ToString(char.ToString(value));", span="175-175", cluster="Newtonsoft.Json.JsonConvert.ToString(char)", file="JsonSchemaBuilder.cs"];
m3_32 [label="Exit Newtonsoft.Json.JsonConvert.ToString(char)", span="173-173", cluster="Newtonsoft.Json.JsonConvert.ToString(char)", file="JsonSchemaBuilder.cs"];
m3_352 [label="Entry Newtonsoft.Json.JsonConvert.SerializeXNode(XObject)", span="1004-1004", cluster="Newtonsoft.Json.JsonConvert.SerializeXNode(XObject)", file="JsonSchemaBuilder.cs"];
m3_353 [label="return SerializeXNode(node, Formatting.None);", span="1006-1006", cluster="Newtonsoft.Json.JsonConvert.SerializeXNode(XObject)", file="JsonSchemaBuilder.cs"];
m3_354 [label="Exit Newtonsoft.Json.JsonConvert.SerializeXNode(XObject)", span="1004-1004", cluster="Newtonsoft.Json.JsonConvert.SerializeXNode(XObject)", file="JsonSchemaBuilder.cs"];
m3_365 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string)", span="1050-1050", cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string)", file="JsonSchemaBuilder.cs"];
m3_366 [label="return DeserializeXNode(value, deserializeRootElementName, false);", span="1052-1052", cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string)", file="JsonSchemaBuilder.cs"];
m3_367 [label="Exit Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string)", span="1050-1050", cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string)", file="JsonSchemaBuilder.cs"];
m3_108 [label="Entry sbyte.ToString(string, System.IFormatProvider)", span="0-0", cluster="sbyte.ToString(string, System.IFormatProvider)", file="JsonSchemaBuilder.cs"];
m3_72 [label="Entry Newtonsoft.Json.JsonConvert.ToString(float, Newtonsoft.Json.FloatFormatHandling, char, bool)", span="268-268", cluster="Newtonsoft.Json.JsonConvert.ToString(float, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonSchemaBuilder.cs"];
m3_73 [label="return EnsureFloatFormat(value, EnsureDecimalPlace(value, value.ToString(''R'', CultureInfo.InvariantCulture)), floatFormatHandling, quoteChar, nullable);", span="270-270", cluster="Newtonsoft.Json.JsonConvert.ToString(float, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonSchemaBuilder.cs"];
m3_74 [label="Exit Newtonsoft.Json.JsonConvert.ToString(float, Newtonsoft.Json.FloatFormatHandling, char, bool)", span="268-268", cluster="Newtonsoft.Json.JsonConvert.ToString(float, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonSchemaBuilder.cs"];
m3_51 [label="Entry Newtonsoft.Json.JsonConvert.ToString(uint)", span="225-225", cluster="Newtonsoft.Json.JsonConvert.ToString(uint)", file="JsonSchemaBuilder.cs"];
m3_52 [label="return value.ToString(null, CultureInfo.InvariantCulture);", span="227-227", cluster="Newtonsoft.Json.JsonConvert.ToString(uint)", file="JsonSchemaBuilder.cs"];
m3_53 [label="Exit Newtonsoft.Json.JsonConvert.ToString(uint)", span="225-225", cluster="Newtonsoft.Json.JsonConvert.ToString(uint)", file="JsonSchemaBuilder.cs"];
m3_88 [label="Entry Newtonsoft.Json.JsonConvert.ToString(double, Newtonsoft.Json.FloatFormatHandling, char, bool)", span="294-294", cluster="Newtonsoft.Json.JsonConvert.ToString(double, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonSchemaBuilder.cs"];
m3_89 [label="return EnsureFloatFormat(value, EnsureDecimalPlace(value, value.ToString(''R'', CultureInfo.InvariantCulture)), floatFormatHandling, quoteChar, nullable);", span="296-296", cluster="Newtonsoft.Json.JsonConvert.ToString(double, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonSchemaBuilder.cs"];
m3_90 [label="Exit Newtonsoft.Json.JsonConvert.ToString(double, Newtonsoft.Json.FloatFormatHandling, char, bool)", span="294-294", cluster="Newtonsoft.Json.JsonConvert.ToString(double, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonSchemaBuilder.cs"];
m3_335 [label="Entry Unk.SerializeObject", span="", cluster="Unk.SerializeObject", file="JsonSchemaBuilder.cs"];
m3_13 [label="Entry System.IO.StringWriter.Write(char)", span="0-0", cluster="System.IO.StringWriter.Write(char)", file="JsonSchemaBuilder.cs"];
m3_95 [label="Entry string.IndexOf(char)", span="0-0", cluster="string.IndexOf(char)", file="JsonSchemaBuilder.cs"];
m3_210 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="535-535", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JsonSchemaBuilder.cs"];
m3_211 [label="JsonSerializerSettings settings = (converters != null && converters.Length > 0)\r\n                ? new JsonSerializerSettings { Converters = converters }\r\n                : null", span="537-539", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JsonSchemaBuilder.cs"];
m3_212 [label="return SerializeObject(value, formatting, settings);", span="541-541", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JsonSchemaBuilder.cs"];
m3_213 [label="Exit Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="535-535", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JsonSchemaBuilder.cs"];
m3_34 [label="Entry Newtonsoft.Json.JsonConvert.ToString(string)", span="407-407", cluster="Newtonsoft.Json.JsonConvert.ToString(string)", file="JsonSchemaBuilder.cs"];
m3_139 [label="return ToString(value, '''');", span="409-409", cluster="Newtonsoft.Json.JsonConvert.ToString(string)", file="JsonSchemaBuilder.cs"];
m3_140 [label="Exit Newtonsoft.Json.JsonConvert.ToString(string)", span="407-407", cluster="Newtonsoft.Json.JsonConvert.ToString(string)", file="JsonSchemaBuilder.cs"];
m3_101 [label="Entry Newtonsoft.Json.JsonConvert.ToString(byte)", span="320-320", cluster="Newtonsoft.Json.JsonConvert.ToString(byte)", file="JsonSchemaBuilder.cs"];
m3_102 [label="return value.ToString(null, CultureInfo.InvariantCulture);", span="322-322", cluster="Newtonsoft.Json.JsonConvert.ToString(byte)", file="JsonSchemaBuilder.cs"];
m3_103 [label="Exit Newtonsoft.Json.JsonConvert.ToString(byte)", span="320-320", cluster="Newtonsoft.Json.JsonConvert.ToString(byte)", file="JsonSchemaBuilder.cs"];
m3_87 [label="Entry double.ToString(string, System.IFormatProvider)", span="0-0", cluster="double.ToString(string, System.IFormatProvider)", file="JsonSchemaBuilder.cs"];
m3_129 [label="Entry Newtonsoft.Json.JsonConvert.ToString(string, char)", span="418-418", cluster="Newtonsoft.Json.JsonConvert.ToString(string, char)", file="JsonSchemaBuilder.cs"];
m3_141 [label="delimiter != '''' && delimiter != '\''", span="420-420", cluster="Newtonsoft.Json.JsonConvert.ToString(string, char)", file="JsonSchemaBuilder.cs"];
m3_143 [label="return JavaScriptUtils.ToEscapedJavaScriptString(value, delimiter, true);", span="423-423", cluster="Newtonsoft.Json.JsonConvert.ToString(string, char)", file="JsonSchemaBuilder.cs"];
m3_142 [label="throw new ArgumentException(''Delimiter must be a single or double quote.'', ''delimiter'');", span="421-421", cluster="Newtonsoft.Json.JsonConvert.ToString(string, char)", file="JsonSchemaBuilder.cs"];
m3_144 [label="Exit Newtonsoft.Json.JsonConvert.ToString(string, char)", span="418-418", cluster="Newtonsoft.Json.JsonConvert.ToString(string, char)", file="JsonSchemaBuilder.cs"];
m3_340 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", span="961-961", cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", file="JsonSchemaBuilder.cs"];
m3_341 [label="return DeserializeXmlNode(value, null);", span="963-963", cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", file="JsonSchemaBuilder.cs"];
m3_342 [label="Exit Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", span="961-961", cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", file="JsonSchemaBuilder.cs"];
m3_16 [label="Entry Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset)", span="135-135", cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset)", file="JsonSchemaBuilder.cs"];
m3_17 [label="return ToString(value, DateFormatHandling.IsoDateFormat);", span="137-137", cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset)", file="JsonSchemaBuilder.cs"];
m3_18 [label="Exit Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset)", span="135-135", cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset)", file="JsonSchemaBuilder.cs"];
m3_75 [label="Entry Newtonsoft.Json.JsonConvert.EnsureFloatFormat(double, string, Newtonsoft.Json.FloatFormatHandling, char, bool)", span="273-273", cluster="Newtonsoft.Json.JsonConvert.EnsureFloatFormat(double, string, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonSchemaBuilder.cs"];
m3_76 [label="floatFormatHandling == FloatFormatHandling.Symbol || !(double.IsInfinity(value) || double.IsNaN(value))", span="275-275", cluster="Newtonsoft.Json.JsonConvert.EnsureFloatFormat(double, string, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonSchemaBuilder.cs"];
m3_77 [label="return text;", span="276-276", cluster="Newtonsoft.Json.JsonConvert.EnsureFloatFormat(double, string, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonSchemaBuilder.cs"];
m3_78 [label="floatFormatHandling == FloatFormatHandling.DefaultValue", span="278-278", cluster="Newtonsoft.Json.JsonConvert.EnsureFloatFormat(double, string, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonSchemaBuilder.cs"];
m3_79 [label="return (!nullable) ? ''0.0'' : Null;", span="279-279", cluster="Newtonsoft.Json.JsonConvert.EnsureFloatFormat(double, string, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonSchemaBuilder.cs"];
m3_80 [label="return quoteChar + text + quoteChar;", span="281-281", cluster="Newtonsoft.Json.JsonConvert.EnsureFloatFormat(double, string, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonSchemaBuilder.cs"];
m3_81 [label="Exit Newtonsoft.Json.JsonConvert.EnsureFloatFormat(double, string, Newtonsoft.Json.FloatFormatHandling, char, bool)", span="273-273", cluster="Newtonsoft.Json.JsonConvert.EnsureFloatFormat(double, string, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonSchemaBuilder.cs"];
m3_238 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object, Newtonsoft.Json.Formatting)", span="627-627", cluster="Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object, Newtonsoft.Json.Formatting)", file="JsonSchemaBuilder.cs"];
m3_239 [label="return SerializeObjectAsync(value, formatting, null);", span="629-629", cluster="Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object, Newtonsoft.Json.Formatting)", file="JsonSchemaBuilder.cs"];
m3_240 [label="Exit Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object, Newtonsoft.Json.Formatting)", span="627-627", cluster="Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object, Newtonsoft.Json.Formatting)", file="JsonSchemaBuilder.cs"];
m3_261 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", span="708-708", cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", file="JsonSchemaBuilder.cs"];
m3_262 [label="return DeserializeObject<T>(value);", span="710-710", cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", file="JsonSchemaBuilder.cs"];
m3_263 [label="Exit Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", span="708-708", cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", file="JsonSchemaBuilder.cs"];
m3_42 [label="Entry int.ToString(string, System.IFormatProvider)", span="0-0", cluster="int.ToString(string, System.IFormatProvider)", file="JsonSchemaBuilder.cs"];
m3_15 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="JsonSchemaBuilder.cs"];
m3_283 [label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="52-52", cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="JsonSchemaBuilder.cs"];
m3_270 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, params Newtonsoft.Json.JsonConverter[])", span="767-767", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, params Newtonsoft.Json.JsonConverter[])", file="JsonSchemaBuilder.cs"];
m3_273 [label="JsonSerializerSettings settings = (converters != null && converters.Length > 0)\r\n                ? new JsonSerializerSettings { Converters = converters }\r\n                : null", span="769-771", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, params Newtonsoft.Json.JsonConverter[])", file="JsonSchemaBuilder.cs"];
m3_274 [label="return DeserializeObject(value, type, settings);", span="773-773", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, params Newtonsoft.Json.JsonConverter[])", file="JsonSchemaBuilder.cs"];
m3_275 [label="Exit Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, params Newtonsoft.Json.JsonConverter[])", span="767-767", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, params Newtonsoft.Json.JsonConverter[])", file="JsonSchemaBuilder.cs"];
m3_237 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="643-643", cluster="Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_241 [label="return Task.Factory.StartNew(() => SerializeObject(value, formatting, settings));", span="645-645", cluster="Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_242 [label="Exit Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="643-643", cluster="Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_287 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="650-650", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSchemaBuilder.cs"];
m3_109 [label="Entry Newtonsoft.Json.JsonConvert.ToString(decimal)", span="341-341", cluster="Newtonsoft.Json.JsonConvert.ToString(decimal)", file="JsonSchemaBuilder.cs"];
m3_110 [label="return EnsureDecimalPlace(value.ToString(null, CultureInfo.InvariantCulture));", span="343-343", cluster="Newtonsoft.Json.JsonConvert.ToString(decimal)", file="JsonSchemaBuilder.cs"];
m3_111 [label="Exit Newtonsoft.Json.JsonConvert.ToString(decimal)", span="341-341", cluster="Newtonsoft.Json.JsonConvert.ToString(decimal)", file="JsonSchemaBuilder.cs"];
m3_35 [label="Entry Newtonsoft.Json.JsonConvert.ToString(System.Enum)", span="183-183", cluster="Newtonsoft.Json.JsonConvert.ToString(System.Enum)", file="JsonSchemaBuilder.cs"];
m3_36 [label="return value.ToString(''D'');", span="185-185", cluster="Newtonsoft.Json.JsonConvert.ToString(System.Enum)", file="JsonSchemaBuilder.cs"];
m3_37 [label="Exit Newtonsoft.Json.JsonConvert.ToString(System.Enum)", span="183-183", cluster="Newtonsoft.Json.JsonConvert.ToString(System.Enum)", file="JsonSchemaBuilder.cs"];
m3_233 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", span="742-742", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSchemaBuilder.cs"];
m3_229 [label="Entry Newtonsoft.Json.JsonSerializer.CreateDefault(Newtonsoft.Json.JsonSerializerSettings)", span="493-493", cluster="Newtonsoft.Json.JsonSerializer.CreateDefault(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_3 [label="Entry Newtonsoft.Json.JsonConvert.ToString(System.DateTime, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", span="116-116", cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonSchemaBuilder.cs"];
m3_4 [label="DateTime updatedDateTime = DateTimeUtils.EnsureDateTime(value, timeZoneHandling)", span="118-118", cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonSchemaBuilder.cs"];
m3_7 [label="DateTimeUtils.WriteDateTimeString(writer, updatedDateTime, format, null, CultureInfo.InvariantCulture)", span="123-123", cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonSchemaBuilder.cs"];
m3_5 [label="StringWriter writer = StringUtils.CreateStringWriter(64)", span="120-120", cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonSchemaBuilder.cs"];
m3_6 [label="writer.Write('''')", span="122-122", cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonSchemaBuilder.cs"];
m3_8 [label="writer.Write('''')", span="124-124", cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonSchemaBuilder.cs"];
m3_9 [label="return writer.ToString();", span="125-125", cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonSchemaBuilder.cs"];
m3_10 [label="Exit Newtonsoft.Json.JsonConvert.ToString(System.DateTime, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", span="116-116", cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonSchemaBuilder.cs"];
m3_214 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="347-347", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSchemaBuilder.cs"];
m3_247 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="656-656", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JsonSchemaBuilder.cs"];
m3_248 [label="return DeserializeObject(value, null, (JsonSerializerSettings)null);", span="658-658", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JsonSchemaBuilder.cs"];
m3_249 [label="Exit Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="656-656", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JsonSchemaBuilder.cs"];
m3_46 [label="Entry short.ToString(string, System.IFormatProvider)", span="0-0", cluster="short.ToString(string, System.IFormatProvider)", file="JsonSchemaBuilder.cs"];
m3_267 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="740-740", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="JsonSchemaBuilder.cs"];
m3_268 [label="return (T)DeserializeObject(value, typeof(T), converters);", span="742-742", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="JsonSchemaBuilder.cs"];
m3_269 [label="Exit Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="740-740", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="JsonSchemaBuilder.cs"];
m3_320 [label="Entry Newtonsoft.Json.JsonConvert.PopulateObjectAsync(string, object, Newtonsoft.Json.JsonSerializerSettings)", span="912-912", cluster="Newtonsoft.Json.JsonConvert.PopulateObjectAsync(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_321 [label="return Task.Factory.StartNew(() => PopulateObject(value, target, settings));", span="914-914", cluster="Newtonsoft.Json.JsonConvert.PopulateObjectAsync(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_322 [label="Exit Newtonsoft.Json.JsonConvert.PopulateObjectAsync(string, object, Newtonsoft.Json.JsonSerializerSettings)", span="912-912", cluster="Newtonsoft.Json.JsonConvert.PopulateObjectAsync(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_317 [label="Entry Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", span="595-595", cluster="Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSchemaBuilder.cs"];
m3_112 [label="Entry decimal.ToString(string, System.IFormatProvider)", span="0-0", cluster="decimal.ToString(string, System.IFormatProvider)", file="JsonSchemaBuilder.cs"];
m3_55 [label="Entry Newtonsoft.Json.JsonConvert.ToString(long)", span="235-235", cluster="Newtonsoft.Json.JsonConvert.ToString(long)", file="JsonSchemaBuilder.cs"];
m3_56 [label="return value.ToString(null, CultureInfo.InvariantCulture);", span="237-237", cluster="Newtonsoft.Json.JsonConvert.ToString(long)", file="JsonSchemaBuilder.cs"];
m3_57 [label="Exit Newtonsoft.Json.JsonConvert.ToString(long)", span="235-235", cluster="Newtonsoft.Json.JsonConvert.ToString(long)", file="JsonSchemaBuilder.cs"];
m3_113 [label="Entry Newtonsoft.Json.JsonConvert.ToString(System.Guid)", span="351-351", cluster="Newtonsoft.Json.JsonConvert.ToString(System.Guid)", file="JsonSchemaBuilder.cs"];
m3_114 [label="return ToString(value, '''');", span="353-353", cluster="Newtonsoft.Json.JsonConvert.ToString(System.Guid)", file="JsonSchemaBuilder.cs"];
m3_115 [label="Exit Newtonsoft.Json.JsonConvert.ToString(System.Guid)", span="351-351", cluster="Newtonsoft.Json.JsonConvert.ToString(System.Guid)", file="JsonSchemaBuilder.cs"];
m3_309 [label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", span="885-885", cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_310 [label="StringReader sr = new StringReader(value)", span="887-887", cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_311 [label="JsonSerializer jsonSerializer = JsonSerializer.CreateDefault(settings)", span="888-888", cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_313 [label="jsonSerializer.Populate(jsonReader, target)", span="892-892", cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_312 [label="JsonReader jsonReader = new JsonTextReader(sr)", span="890-890", cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_314 [label="jsonReader.Read() && jsonReader.TokenType != JsonToken.Comment", span="894-894", cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_315 [label="throw new JsonSerializationException(''Additional text found in JSON string after finishing deserializing object.'');", span="895-895", cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_316 [label="Exit Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", span="885-885", cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_362 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeXNode(string)", span="1039-1039", cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string)", file="JsonSchemaBuilder.cs"];
m3_363 [label="return DeserializeXNode(value, null);", span="1041-1041", cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string)", file="JsonSchemaBuilder.cs"];
m3_364 [label="Exit Newtonsoft.Json.JsonConvert.DeserializeXNode(string)", span="1039-1039", cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string)", file="JsonSchemaBuilder.cs"];
m3_251 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="670-670", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_252 [label="return DeserializeObject(value, null, settings);", span="672-672", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_253 [label="Exit Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="670-670", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_355 [label="Entry Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting)", span="1015-1015", cluster="Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting)", file="JsonSchemaBuilder.cs"];
m3_356 [label="return SerializeXNode(node, formatting, false);", span="1017-1017", cluster="Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting)", file="JsonSchemaBuilder.cs"];
m3_357 [label="Exit Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting)", span="1015-1015", cluster="Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting)", file="JsonSchemaBuilder.cs"];
m3_250 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="786-786", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_276 [label="ValidationUtils.ArgumentNotNull(value, ''value'')", span="788-788", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_277 [label="StringReader sr = new StringReader(value)", span="790-790", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_278 [label="JsonSerializer jsonSerializer = JsonSerializer.CreateDefault(settings)", span="791-791", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_281 [label="return jsonSerializer.Deserialize(new JsonTextReader(sr), type);", span="797-797", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_279 [label="!jsonSerializer.IsCheckAdditionalContentSet()", span="794-794", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_280 [label="jsonSerializer.CheckAdditionalContent = true", span="795-795", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_282 [label="Exit Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="786-786", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_196 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(object)", span="207-207", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(object)", file="JsonSchemaBuilder.cs"];
m3_147 [label="Entry Newtonsoft.Json.JsonConvert.ToString(object)", span="431-431", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_148 [label="value == null", span="433-433", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_150 [label="PrimitiveTypeCode typeCode = ConvertUtils.GetTypeCode(value)", span="436-436", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_153 [label="return ToString((string)value);", span="441-441", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_155 [label="return ToString((char)value);", span="443-443", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_157 [label="return ToString((bool)value);", span="445-445", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_159 [label="return ToString((sbyte)value);", span="447-447", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_161 [label="return ToString((short)value);", span="449-449", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_163 [label="return ToString((ushort)value);", span="451-451", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_165 [label="return ToString((int)value);", span="453-453", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_167 [label="return ToString((byte)value);", span="455-455", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_169 [label="return ToString((uint)value);", span="457-457", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_171 [label="return ToString((long)value);", span="459-459", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_173 [label="return ToString((ulong)value);", span="461-461", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_175 [label="return ToString((float)value);", span="463-463", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_177 [label="return ToString((double)value);", span="465-465", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_179 [label="return ToString((DateTime)value);", span="467-467", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_181 [label="return ToString((decimal)value);", span="469-469", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_185 [label="return ToString((DateTimeOffset)value);", span="476-476", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_187 [label="return ToString((Guid)value);", span="479-479", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_189 [label="return ToString((Uri)value);", span="481-481", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_191 [label="return ToString((TimeSpan)value);", span="483-483", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_193 [label="return ToStringInternal((BigInteger)value);", span="486-486", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_195 [label="throw new ArgumentException(''Unsupported type: {0}. Use the JsonSerializer class to get the object's JSON representation.''.FormatWith(CultureInfo.InvariantCulture, value.GetType()));", span="490-490", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_149 [label="return Null;", span="434-434", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_151 [label=typeCode, span="438-438", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_152 [label="PrimitiveTypeCode.String", span="440-440", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_154 [label="PrimitiveTypeCode.Char", span="442-442", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_156 [label="PrimitiveTypeCode.Boolean", span="444-444", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_158 [label="PrimitiveTypeCode.SByte", span="446-446", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_160 [label="PrimitiveTypeCode.Int16", span="448-448", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_162 [label="PrimitiveTypeCode.UInt16", span="450-450", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_164 [label="PrimitiveTypeCode.Int32", span="452-452", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_166 [label="PrimitiveTypeCode.Byte", span="454-454", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_168 [label="PrimitiveTypeCode.UInt32", span="456-456", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_170 [label="PrimitiveTypeCode.Int64", span="458-458", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_172 [label="PrimitiveTypeCode.UInt64", span="460-460", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_174 [label="PrimitiveTypeCode.Single", span="462-462", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_176 [label="PrimitiveTypeCode.Double", span="464-464", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_178 [label="PrimitiveTypeCode.DateTime", span="466-466", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_180 [label="PrimitiveTypeCode.Decimal", span="468-468", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_182 [label="PrimitiveTypeCode.DBNull", span="471-471", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_184 [label="PrimitiveTypeCode.DateTimeOffset", span="475-475", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_186 [label="PrimitiveTypeCode.Guid", span="478-478", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_188 [label="PrimitiveTypeCode.Uri", span="480-480", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_190 [label="PrimitiveTypeCode.TimeSpan", span="482-482", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_192 [label="PrimitiveTypeCode.BigInteger", span="485-485", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_183 [label="return Null;", span="472-472", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_194 [label="Exit Newtonsoft.Json.JsonConvert.ToString(object)", span="431-431", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonSchemaBuilder.cs"];
m3_306 [label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", span="871-871", cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", file="JsonSchemaBuilder.cs"];
m3_307 [label="PopulateObject(value, target, null)", span="873-873", cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", file="JsonSchemaBuilder.cs"];
m3_308 [label="Exit Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", span="871-871", cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", file="JsonSchemaBuilder.cs"];
m3_336 [label="Entry Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting, bool)", span="949-949", cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting, bool)", file="JsonSchemaBuilder.cs"];
m3_337 [label="XmlNodeConverter converter = new XmlNodeConverter { OmitRootObject = omitRootObject }", span="951-951", cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting, bool)", file="JsonSchemaBuilder.cs"];
m3_338 [label="return SerializeObject(node, formatting, converter);", span="953-953", cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting, bool)", file="JsonSchemaBuilder.cs"];
m3_339 [label="Exit Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting, bool)", span="949-949", cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting, bool)", file="JsonSchemaBuilder.cs"];
m3_63 [label="Entry Newtonsoft.Json.JsonConvert.ToString(ulong)", span="253-253", cluster="Newtonsoft.Json.JsonConvert.ToString(ulong)", file="JsonSchemaBuilder.cs"];
m3_64 [label="return value.ToString(null, CultureInfo.InvariantCulture);", span="255-255", cluster="Newtonsoft.Json.JsonConvert.ToString(ulong)", file="JsonSchemaBuilder.cs"];
m3_65 [label="Exit Newtonsoft.Json.JsonConvert.ToString(ulong)", span="253-253", cluster="Newtonsoft.Json.JsonConvert.ToString(ulong)", file="JsonSchemaBuilder.cs"];
m3_319 [label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52", cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="JsonSchemaBuilder.cs"];
m3_54 [label="Entry uint.ToString(string, System.IFormatProvider)", span="0-0", cluster="uint.ToString(string, System.IFormatProvider)", file="JsonSchemaBuilder.cs"];
m3_285 [label="Entry Newtonsoft.Json.JsonSerializer.IsCheckAdditionalContentSet()", span="409-409", cluster="Newtonsoft.Json.JsonSerializer.IsCheckAdditionalContentSet()", file="JsonSchemaBuilder.cs"];
m3_138 [label="Entry System.Uri.ToString()", span="0-0", cluster="System.Uri.ToString()", file="JsonSchemaBuilder.cs"];
m3_334 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.XmlNodeConverter()", span="743-743", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.XmlNodeConverter()", file="JsonSchemaBuilder.cs"];
m3_116 [label="Entry Newtonsoft.Json.JsonConvert.ToString(System.Guid, char)", span="356-356", cluster="Newtonsoft.Json.JsonConvert.ToString(System.Guid, char)", file="JsonSchemaBuilder.cs"];
m3_117 [label="string text = null", span="358-358", cluster="Newtonsoft.Json.JsonConvert.ToString(System.Guid, char)", file="JsonSchemaBuilder.cs"];
m3_118 [label="text = value.ToString(''D'', CultureInfo.InvariantCulture)", span="361-361", cluster="Newtonsoft.Json.JsonConvert.ToString(System.Guid, char)", file="JsonSchemaBuilder.cs"];
m3_119 [label="return quoteChar + text + quoteChar;", span="366-366", cluster="Newtonsoft.Json.JsonConvert.ToString(System.Guid, char)", file="JsonSchemaBuilder.cs"];
m3_120 [label="Exit Newtonsoft.Json.JsonConvert.ToString(System.Guid, char)", span="356-356", cluster="Newtonsoft.Json.JsonConvert.ToString(System.Guid, char)", file="JsonSchemaBuilder.cs"];
m3_145 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="JsonSchemaBuilder.cs"];
m3_300 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="859-859", cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_301 [label="return Task.Factory.StartNew(() => DeserializeObject(value, type, settings));", span="861-861", cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_302 [label="Exit Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="859-859", cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_58 [label="Entry long.ToString(string, System.IFormatProvider)", span="0-0", cluster="long.ToString(string, System.IFormatProvider)", file="JsonSchemaBuilder.cs"];
m3_286 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSchemaBuilder.cs"];
m3_260 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="755-755", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_271 [label="return (T)DeserializeObject(value, typeof(T), settings);", span="757-757", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_272 [label="Exit Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="755-755", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_368 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", span="1066-1066", cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", file="JsonSchemaBuilder.cs"];
m3_369 [label="XmlNodeConverter converter = new XmlNodeConverter()", span="1068-1068", cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", file="JsonSchemaBuilder.cs"];
m3_370 [label="converter.DeserializeRootElementName = deserializeRootElementName", span="1069-1069", cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", file="JsonSchemaBuilder.cs"];
m3_371 [label="converter.WriteArrayAttribute = writeArrayAttribute", span="1070-1070", cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", file="JsonSchemaBuilder.cs"];
m3_372 [label="return (XDocument)DeserializeObject(value, typeof(XDocument), converter);", span="1072-1072", cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", file="JsonSchemaBuilder.cs"];
m3_373 [label="Exit Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", span="1066-1066", cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", file="JsonSchemaBuilder.cs"];
m3_121 [label="Entry System.Guid.ToString(string, System.IFormatProvider)", span="0-0", cluster="System.Guid.ToString(string, System.IFormatProvider)", file="JsonSchemaBuilder.cs"];
m3_243 [label="Entry System.Threading.Tasks.TaskFactory.StartNew<TResult>(System.Func<TResult>)", span="0-0", cluster="System.Threading.Tasks.TaskFactory.StartNew<TResult>(System.Func<TResult>)", file="JsonSchemaBuilder.cs"];
m3_215 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="553-553", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_216 [label="return SerializeObject(value, Formatting.None, settings);", span="555-555", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_217 [label="Exit Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="553-553", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_43 [label="Entry Newtonsoft.Json.JsonConvert.ToString(short)", span="203-203", cluster="Newtonsoft.Json.JsonConvert.ToString(short)", file="JsonSchemaBuilder.cs"];
m3_44 [label="return value.ToString(null, CultureInfo.InvariantCulture);", span="205-205", cluster="Newtonsoft.Json.JsonConvert.ToString(short)", file="JsonSchemaBuilder.cs"];
m3_45 [label="Exit Newtonsoft.Json.JsonConvert.ToString(short)", span="203-203", cluster="Newtonsoft.Json.JsonConvert.ToString(short)", file="JsonSchemaBuilder.cs"];
m3_199 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonSchemaBuilder.cs"];
m3_330 [label="Entry Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting)", span="935-935", cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting)", file="JsonSchemaBuilder.cs"];
m3_331 [label="XmlNodeConverter converter = new XmlNodeConverter()", span="937-937", cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting)", file="JsonSchemaBuilder.cs"];
m3_332 [label="return SerializeObject(node, formatting, converter);", span="939-939", cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting)", file="JsonSchemaBuilder.cs"];
m3_333 [label="Exit Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting)", span="935-935", cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting)", file="JsonSchemaBuilder.cs"];
m3_203 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="568-568", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_218 [label="return SerializeObject(value, null, formatting, settings);", span="570-570", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_219 [label="Exit Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="568-568", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_318 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="354-354", cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonSchemaBuilder.cs"];
m3_82 [label="Entry double.IsInfinity(double)", span="0-0", cluster="double.IsInfinity(double)", file="JsonSchemaBuilder.cs"];
m3_66 [label="Entry ulong.ToString(string, System.IFormatProvider)", span="0-0", cluster="ulong.ToString(string, System.IFormatProvider)", file="JsonSchemaBuilder.cs"];
m3_234 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object)", span="613-613", cluster="Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object)", file="JsonSchemaBuilder.cs"];
m3_235 [label="return SerializeObjectAsync(value, Formatting.None, null);", span="615-615", cluster="Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object)", file="JsonSchemaBuilder.cs"];
m3_236 [label="Exit Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object)", span="613-613", cluster="Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object)", file="JsonSchemaBuilder.cs"];
m3_197 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="JsonSchemaBuilder.cs"];
m3_71 [label="Entry Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(double, string)", span="299-299", cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(double, string)", file="JsonSchemaBuilder.cs"];
m3_91 [label="double.IsNaN(value) || double.IsInfinity(value) || text.IndexOf('.') != -1 || text.IndexOf('E') != -1 || text.IndexOf('e') != -1", span="301-301", cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(double, string)", file="JsonSchemaBuilder.cs"];
m3_92 [label="return text;", span="302-302", cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(double, string)", file="JsonSchemaBuilder.cs"];
m3_93 [label="return text + ''.0'';", span="304-304", cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(double, string)", file="JsonSchemaBuilder.cs"];
m3_94 [label="Exit Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(double, string)", span="299-299", cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(double, string)", file="JsonSchemaBuilder.cs"];
m3_288 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string)", span="810-810", cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string)", file="JsonSchemaBuilder.cs"];
m3_289 [label="return DeserializeObjectAsync<T>(value, null);", span="812-812", cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string)", file="JsonSchemaBuilder.cs"];
m3_290 [label="Exit Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string)", span="810-810", cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string)", file="JsonSchemaBuilder.cs"];
m3_33 [label="Entry char.ToString(char)", span="0-0", cluster="char.ToString(char)", file="JsonSchemaBuilder.cs"];
m3_50 [label="Entry ushort.ToString(string, System.IFormatProvider)", span="0-0", cluster="ushort.ToString(string, System.IFormatProvider)", file="JsonSchemaBuilder.cs"];
m3_135 [label="Entry Newtonsoft.Json.JsonConvert.ToString(System.Uri, char)", span="397-397", cluster="Newtonsoft.Json.JsonConvert.ToString(System.Uri, char)", file="JsonSchemaBuilder.cs"];
m3_136 [label="return ToString(value.ToString(), quoteChar);", span="399-399", cluster="Newtonsoft.Json.JsonConvert.ToString(System.Uri, char)", file="JsonSchemaBuilder.cs"];
m3_137 [label="Exit Newtonsoft.Json.JsonConvert.ToString(System.Uri, char)", span="397-397", cluster="Newtonsoft.Json.JsonConvert.ToString(System.Uri, char)", file="JsonSchemaBuilder.cs"];
m3_62 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="JsonSchemaBuilder.cs"];
m3_346 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", span="988-988", cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", file="JsonSchemaBuilder.cs"];
m3_347 [label="XmlNodeConverter converter = new XmlNodeConverter()", span="990-990", cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", file="JsonSchemaBuilder.cs"];
m3_348 [label="converter.DeserializeRootElementName = deserializeRootElementName", span="991-991", cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", file="JsonSchemaBuilder.cs"];
m3_349 [label="converter.WriteArrayAttribute = writeArrayAttribute", span="992-992", cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", file="JsonSchemaBuilder.cs"];
m3_350 [label="return (XmlDocument)DeserializeObject(value, typeof(XmlDocument), converter);", span="994-994", cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", file="JsonSchemaBuilder.cs"];
m3_351 [label="Exit Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", span="988-988", cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", file="JsonSchemaBuilder.cs"];
m3_19 [label="Entry Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling)", span="146-146", cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling)", file="JsonSchemaBuilder.cs"];
m3_20 [label="StringWriter writer = StringUtils.CreateStringWriter(64)", span="148-148", cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling)", file="JsonSchemaBuilder.cs"];
m3_22 [label="DateTimeUtils.WriteDateTimeOffsetString(writer, value, format, null, CultureInfo.InvariantCulture)", span="151-151", cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling)", file="JsonSchemaBuilder.cs"];
m3_21 [label="writer.Write('''')", span="150-150", cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling)", file="JsonSchemaBuilder.cs"];
m3_23 [label="writer.Write('''')", span="152-152", cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling)", file="JsonSchemaBuilder.cs"];
m3_24 [label="return writer.ToString();", span="153-153", cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling)", file="JsonSchemaBuilder.cs"];
m3_25 [label="Exit Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling)", span="146-146", cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling)", file="JsonSchemaBuilder.cs"];
m3_220 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="588-588", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_221 [label="JsonSerializer jsonSerializer = JsonSerializer.CreateDefault(settings)", span="590-590", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_225 [label="jsonWriter.Formatting = formatting", span="596-596", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_226 [label="jsonSerializer.Serialize(jsonWriter, value, type)", span="598-598", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_222 [label="StringBuilder sb = new StringBuilder(256)", span="592-592", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_223 [label="StringWriter sw = new StringWriter(sb, CultureInfo.InvariantCulture)", span="593-593", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_224 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="594-594", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_227 [label="return sw.ToString();", span="601-601", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_228 [label="Exit Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="588-588", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_39 [label="Entry Newtonsoft.Json.JsonConvert.ToString(int)", span="193-193", cluster="Newtonsoft.Json.JsonConvert.ToString(int)", file="JsonSchemaBuilder.cs"];
m3_40 [label="return value.ToString(null, CultureInfo.InvariantCulture);", span="195-195", cluster="Newtonsoft.Json.JsonConvert.ToString(int)", file="JsonSchemaBuilder.cs"];
m3_41 [label="Exit Newtonsoft.Json.JsonConvert.ToString(int)", span="193-193", cluster="Newtonsoft.Json.JsonConvert.ToString(int)", file="JsonSchemaBuilder.cs"];
m3_130 [label="Entry Newtonsoft.Json.JsonConvert.ToString(System.Uri)", span="389-389", cluster="Newtonsoft.Json.JsonConvert.ToString(System.Uri)", file="JsonSchemaBuilder.cs"];
m3_131 [label="value == null", span="391-391", cluster="Newtonsoft.Json.JsonConvert.ToString(System.Uri)", file="JsonSchemaBuilder.cs"];
m3_133 [label="return ToString(value, '''');", span="394-394", cluster="Newtonsoft.Json.JsonConvert.ToString(System.Uri)", file="JsonSchemaBuilder.cs"];
m3_132 [label="return Null;", span="392-392", cluster="Newtonsoft.Json.JsonConvert.ToString(System.Uri)", file="JsonSchemaBuilder.cs"];
m3_134 [label="Exit Newtonsoft.Json.JsonConvert.ToString(System.Uri)", span="389-389", cluster="Newtonsoft.Json.JsonConvert.ToString(System.Uri)", file="JsonSchemaBuilder.cs"];
m3_84 [label="Entry Newtonsoft.Json.JsonConvert.ToString(double)", span="289-289", cluster="Newtonsoft.Json.JsonConvert.ToString(double)", file="JsonSchemaBuilder.cs"];
m3_85 [label="return EnsureDecimalPlace(value, value.ToString(''R'', CultureInfo.InvariantCulture));", span="291-291", cluster="Newtonsoft.Json.JsonConvert.ToString(double)", file="JsonSchemaBuilder.cs"];
m3_86 [label="Exit Newtonsoft.Json.JsonConvert.ToString(double)", span="289-289", cluster="Newtonsoft.Json.JsonConvert.ToString(double)", file="JsonSchemaBuilder.cs"];
m3_232 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="116-116", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonSchemaBuilder.cs"];
m3_264 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", span="728-728", cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_265 [label="return DeserializeObject<T>(value, settings);", span="730-730", cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_266 [label="Exit Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", span="728-728", cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_343 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string)", span="972-972", cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string)", file="JsonSchemaBuilder.cs"];
m3_344 [label="return DeserializeXmlNode(value, deserializeRootElementName, false);", span="974-974", cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string)", file="JsonSchemaBuilder.cs"];
m3_345 [label="Exit Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string)", span="972-972", cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string)", file="JsonSchemaBuilder.cs"];
m3_128 [label="Entry System.TimeSpan.ToString()", span="0-0", cluster="System.TimeSpan.ToString()", file="JsonSchemaBuilder.cs"];
m3_324 [label="Entry lambda expression", span="914-914", cluster="lambda expression", file="JsonSchemaBuilder.cs"];
m3_245 [label="SerializeObject(value, formatting, settings)", span="645-645", cluster="lambda expression", file="JsonSchemaBuilder.cs"];
m3_244 [label="Entry lambda expression", span="645-645", cluster="lambda expression", file="JsonSchemaBuilder.cs"];
m3_246 [label="Exit lambda expression", span="645-645", cluster="lambda expression", file="JsonSchemaBuilder.cs"];
m3_295 [label="DeserializeObject<T>(value, settings)", span="830-830", cluster="lambda expression", file="JsonSchemaBuilder.cs"];
m3_294 [label="Entry lambda expression", span="830-830", cluster="lambda expression", file="JsonSchemaBuilder.cs"];
m3_296 [label="Exit lambda expression", span="830-830", cluster="lambda expression", file="JsonSchemaBuilder.cs"];
m3_304 [label="DeserializeObject(value, type, settings)", span="861-861", cluster="lambda expression", file="JsonSchemaBuilder.cs"];
m3_303 [label="Entry lambda expression", span="861-861", cluster="lambda expression", file="JsonSchemaBuilder.cs"];
m3_305 [label="Exit lambda expression", span="861-861", cluster="lambda expression", file="JsonSchemaBuilder.cs"];
m3_325 [label="PopulateObject(value, target, settings)", span="914-914", cluster="lambda expression", file="JsonSchemaBuilder.cs"];
m3_326 [label="Exit lambda expression", span="914-914", cluster="lambda expression", file="JsonSchemaBuilder.cs"];
m3_105 [label="Entry Newtonsoft.Json.JsonConvert.ToString(sbyte)", span="331-331", cluster="Newtonsoft.Json.JsonConvert.ToString(sbyte)", file="JsonSchemaBuilder.cs"];
m3_106 [label="return value.ToString(null, CultureInfo.InvariantCulture);", span="333-333", cluster="Newtonsoft.Json.JsonConvert.ToString(sbyte)", file="JsonSchemaBuilder.cs"];
m3_107 [label="Exit Newtonsoft.Json.JsonConvert.ToString(sbyte)", span="331-331", cluster="Newtonsoft.Json.JsonConvert.ToString(sbyte)", file="JsonSchemaBuilder.cs"];
m3_297 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string)", span="841-841", cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string)", file="JsonSchemaBuilder.cs"];
m3_298 [label="return DeserializeObjectAsync(value, null, null);", span="843-843", cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string)", file="JsonSchemaBuilder.cs"];
m3_299 [label="Exit Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string)", span="841-841", cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string)", file="JsonSchemaBuilder.cs"];
m3_96 [label="Entry Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(string)", span="307-307", cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(string)", file="JsonSchemaBuilder.cs"];
m3_97 [label="text.IndexOf('.') != -1", span="309-309", cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(string)", file="JsonSchemaBuilder.cs"];
m3_98 [label="return text;", span="310-310", cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(string)", file="JsonSchemaBuilder.cs"];
m3_99 [label="return text + ''.0'';", span="312-312", cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(string)", file="JsonSchemaBuilder.cs"];
m3_100 [label="Exit Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(string)", span="307-307", cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(string)", file="JsonSchemaBuilder.cs"];
m3_11 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", span="76-76", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonSchemaBuilder.cs"];
m3_67 [label="Entry Newtonsoft.Json.JsonConvert.ToString(float)", span="263-263", cluster="Newtonsoft.Json.JsonConvert.ToString(float)", file="JsonSchemaBuilder.cs"];
m3_68 [label="return EnsureDecimalPlace(value, value.ToString(''R'', CultureInfo.InvariantCulture));", span="265-265", cluster="Newtonsoft.Json.JsonConvert.ToString(float)", file="JsonSchemaBuilder.cs"];
m3_69 [label="Exit Newtonsoft.Json.JsonConvert.ToString(float)", span="263-263", cluster="Newtonsoft.Json.JsonConvert.ToString(float)", file="JsonSchemaBuilder.cs"];
m3_47 [label="Entry Newtonsoft.Json.JsonConvert.ToString(ushort)", span="214-214", cluster="Newtonsoft.Json.JsonConvert.ToString(ushort)", file="JsonSchemaBuilder.cs"];
m3_48 [label="return value.ToString(null, CultureInfo.InvariantCulture);", span="216-216", cluster="Newtonsoft.Json.JsonConvert.ToString(ushort)", file="JsonSchemaBuilder.cs"];
m3_49 [label="Exit Newtonsoft.Json.JsonConvert.ToString(ushort)", span="214-214", cluster="Newtonsoft.Json.JsonConvert.ToString(ushort)", file="JsonSchemaBuilder.cs"];
m3_284 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="JsonSchemaBuilder.cs"];
m3_323 [label="Entry System.Threading.Tasks.TaskFactory.StartNew(System.Action)", span="0-0", cluster="System.Threading.Tasks.TaskFactory.StartNew(System.Action)", file="JsonSchemaBuilder.cs"];
m3_70 [label="Entry float.ToString(string, System.IFormatProvider)", span="0-0", cluster="float.ToString(string, System.IFormatProvider)", file="JsonSchemaBuilder.cs"];
m3_27 [label="Entry Newtonsoft.Json.JsonConvert.ToString(bool)", span="163-163", cluster="Newtonsoft.Json.JsonConvert.ToString(bool)", file="JsonSchemaBuilder.cs"];
m3_28 [label="return (value) ? True : False;", span="165-165", cluster="Newtonsoft.Json.JsonConvert.ToString(bool)", file="JsonSchemaBuilder.cs"];
m3_29 [label="Exit Newtonsoft.Json.JsonConvert.ToString(bool)", span="163-163", cluster="Newtonsoft.Json.JsonConvert.ToString(bool)", file="JsonSchemaBuilder.cs"];
m3_59 [label="Entry Newtonsoft.Json.JsonConvert.ToStringInternal(BigInteger)", span="241-241", cluster="Newtonsoft.Json.JsonConvert.ToStringInternal(BigInteger)", file="JsonSchemaBuilder.cs"];
m3_60 [label="return value.ToString(null, CultureInfo.InvariantCulture);", span="243-243", cluster="Newtonsoft.Json.JsonConvert.ToStringInternal(BigInteger)", file="JsonSchemaBuilder.cs"];
m3_61 [label="Exit Newtonsoft.Json.JsonConvert.ToStringInternal(BigInteger)", span="241-241", cluster="Newtonsoft.Json.JsonConvert.ToStringInternal(BigInteger)", file="JsonSchemaBuilder.cs"];
m3_0 [label="Entry Newtonsoft.Json.JsonConvert.ToString(System.DateTime)", span="104-104", cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime)", file="JsonSchemaBuilder.cs"];
m3_1 [label="return ToString(value, DateFormatHandling.IsoDateFormat, DateTimeZoneHandling.RoundtripKind);", span="106-106", cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime)", file="JsonSchemaBuilder.cs"];
m3_2 [label="Exit Newtonsoft.Json.JsonConvert.ToString(System.DateTime)", span="104-104", cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime)", file="JsonSchemaBuilder.cs"];
m3_231 [label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder, System.IFormatProvider)", span="0-0", cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder, System.IFormatProvider)", file="JsonSchemaBuilder.cs"];
m3_12 [label="Entry Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", span="103-103", cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="JsonSchemaBuilder.cs"];
m3_122 [label="Entry Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan)", span="374-374", cluster="Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan)", file="JsonSchemaBuilder.cs"];
m3_123 [label="return ToString(value, '''');", span="376-376", cluster="Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan)", file="JsonSchemaBuilder.cs"];
m3_124 [label="Exit Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan)", span="374-374", cluster="Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan)", file="JsonSchemaBuilder.cs"];
m3_83 [label="Entry double.IsNaN(double)", span="0-0", cluster="double.IsNaN(double)", file="JsonSchemaBuilder.cs"];
m3_146 [label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool)", span="211-211", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool)", file="JsonSchemaBuilder.cs"];
m3_14 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", span="377-377", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="JsonSchemaBuilder.cs"];
m3_291 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="828-828", cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_292 [label="return Task.Factory.StartNew(() => DeserializeObject<T>(value, settings));", span="830-830", cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_293 [label="Exit Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="828-828", cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaBuilder.cs"];
m3_204 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="512-512", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonSchemaBuilder.cs"];
m3_205 [label="return SerializeObject(value, formatting, (JsonSerializerSettings)null);", span="514-514", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonSchemaBuilder.cs"];
m3_206 [label="Exit Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="512-512", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonSchemaBuilder.cs"];
m3_200 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="499-499", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonSchemaBuilder.cs"];
m3_201 [label="return SerializeObject(value, Formatting.None, (JsonSerializerSettings)null);", span="501-501", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonSchemaBuilder.cs"];
m3_202 [label="Exit Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="499-499", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonSchemaBuilder.cs"];
m3_257 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="692-692", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonSchemaBuilder.cs"];
m3_258 [label="return DeserializeObject<T>(value, (JsonSerializerSettings)null);", span="694-694", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonSchemaBuilder.cs"];
m3_259 [label="Exit Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="692-692", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonSchemaBuilder.cs"];
m3_207 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="523-523", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JsonSchemaBuilder.cs"];
m3_208 [label="return SerializeObject(value, Formatting.None, converters);", span="525-525", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JsonSchemaBuilder.cs"];
m3_209 [label="Exit Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="523-523", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JsonSchemaBuilder.cs"];
m3_26 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffsetString(System.IO.TextWriter, System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", span="509-509", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffsetString(System.IO.TextWriter, System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="JsonSchemaBuilder.cs"];
m3_230 [label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0", cluster="System.Text.StringBuilder.StringBuilder(int)", file="JsonSchemaBuilder.cs"];
m3_327 [label="Entry Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode)", span="924-924", cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode)", file="JsonSchemaBuilder.cs"];
m3_328 [label="return SerializeXmlNode(node, Formatting.None);", span="926-926", cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode)", file="JsonSchemaBuilder.cs"];
m3_329 [label="Exit Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode)", span="924-924", cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode)", file="JsonSchemaBuilder.cs"];
m3_38 [label="Entry System.Enum.ToString(string)", span="0-0", cluster="System.Enum.ToString(string)", file="JsonSchemaBuilder.cs"];
m3_374 [label=object, span="", file="JsonSchemaBuilder.cs"];
m3_375 [label="Newtonsoft.Json.Formatting", span="", file="JsonSchemaBuilder.cs"];
m3_376 [label="Newtonsoft.Json.JsonSerializerSettings", span="", file="JsonSchemaBuilder.cs"];
m3_377 [label=string, span="", file="JsonSchemaBuilder.cs"];
m3_378 [label="Newtonsoft.Json.JsonSerializerSettings", span="", file="JsonSchemaBuilder.cs"];
m3_379 [label=string, span="", file="JsonSchemaBuilder.cs"];
m3_380 [label="System.Type", span="", file="JsonSchemaBuilder.cs"];
m3_381 [label="Newtonsoft.Json.JsonSerializerSettings", span="", file="JsonSchemaBuilder.cs"];
m3_382 [label=string, span="", file="JsonSchemaBuilder.cs"];
m3_383 [label=object, span="", file="JsonSchemaBuilder.cs"];
m3_384 [label="Newtonsoft.Json.JsonSerializerSettings", span="", file="JsonSchemaBuilder.cs"];
m6_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Schema.JsonValidatingReaderAndSerializer.Example()", span="44-44", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.JsonValidatingReaderAndSerializer.Example()", file="JsonSchemaGenerator.cs"];
m6_1 [label="string schemaJson = @''{\r\n              'description': 'A person',\r\n              'type': 'object',\r\n              'properties': {\r\n                'name': {'type':'string'},\r\n                'hobbies': {\r\n                  'type': 'array',\r\n                  'items': {'type':'string'}\r\n                }\r\n              }\r\n            }''", span="47-57", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.JsonValidatingReaderAndSerializer.Example()", file="JsonSchemaGenerator.cs", color=green, community=0];
m6_2 [label="string json = @''{\r\n              'name': 'James',\r\n              'hobbies': ['.NET', 'Blogging', 'Reading', 'Xbox', 'LOLCATS']\r\n            }''", span="59-62", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.JsonValidatingReaderAndSerializer.Example()", color=red, community=0, file="JsonSchemaGenerator.cs"];
m6_3 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="64-64", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.JsonValidatingReaderAndSerializer.Example()", file="JsonSchemaGenerator.cs"];
m6_4 [label="JsonValidatingReader validatingReader = new JsonValidatingReader(reader)", span="66-66", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.JsonValidatingReaderAndSerializer.Example()", file="JsonSchemaGenerator.cs"];
m6_5 [label="validatingReader.Schema = JsonSchema.Parse(schemaJson)", span="67-67", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.JsonValidatingReaderAndSerializer.Example()", file="JsonSchemaGenerator.cs"];
m6_6 [label="IList<string> messages = new List<string>()", span="69-69", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.JsonValidatingReaderAndSerializer.Example()", file="JsonSchemaGenerator.cs"];
m6_10 [label="Console.WriteLine(p.Name)", span="75-75", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.JsonValidatingReaderAndSerializer.Example()", file="JsonSchemaGenerator.cs"];
m6_14 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSchemaGenerator.cs"];
m6_15 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="JsonSchemaGenerator.cs"];
m6_12 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="JsonSchemaGenerator.cs"];
m6_7 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="359-359", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonSchemaGenerator.cs"];
m6_9 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JsonSchemaGenerator.cs"];
m6_11 [label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="34-34", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="JsonSchemaGenerator.cs"];
m6_8 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="410-410", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JsonSchemaGenerator.cs"];
m6_13 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Schema.JsonValidatingReaderAndSerializer.Example()", span="44-44", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.JsonValidatingReaderAndSerializer.Example()", file="JsonSchemaGenerator.cs"];
m6_17 [label="Entry Newtonsoft.Json.Schema.JsonSchema.Parse(string)", span="294-294", cluster="Newtonsoft.Json.Schema.JsonSchema.Parse(string)", file="JsonSchemaGenerator.cs"];
m6_23 [label="Entry lambda expression", span="70-70", cluster="lambda expression", file="JsonSchemaGenerator.cs"];
m6_24 [label="messages.Add(a.Message)", span="70-70", cluster="lambda expression", file="JsonSchemaGenerator.cs"];
m6_25 [label="Exit lambda expression", span="70-70", cluster="lambda expression", file="JsonSchemaGenerator.cs"];
m6_16 [label="Entry Newtonsoft.Json.JsonValidatingReader.JsonValidatingReader(Newtonsoft.Json.JsonReader)", span="297-297", cluster="Newtonsoft.Json.JsonValidatingReader.JsonValidatingReader(Newtonsoft.Json.JsonReader)", file="JsonSchemaGenerator.cs"];
m6_22 [label="Entry System.Console.WriteLine(bool)", span="0-0", cluster="System.Console.WriteLine(bool)", file="JsonSchemaGenerator.cs"];
m6_20 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="688-688", cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="JsonSchemaGenerator.cs"];
m6_26 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JsonSchemaGenerator.cs"];
m6_18 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JsonSchemaGenerator.cs"];
m6_21 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JsonSchemaGenerator.cs"];
m6_27 [label=messages, span="", file="JsonSchemaGenerator.cs"];
m7_16 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="359-359", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSchemaModel.cs"];
m7_23 [label="Entry Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()", span="82-82", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()", file="JsonSchemaModel.cs"];
m7_24 [label="JsonIgnoreAttributeOnClassTestClass ignoreAttributeOnClassTestClass = new JsonIgnoreAttributeOnClassTestClass()", span="84-84", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()", file="JsonSchemaModel.cs"];
m7_25 [label="ignoreAttributeOnClassTestClass.Field = int.MinValue", span="85-85", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()", file="JsonSchemaModel.cs"];
m7_29 [label="serializer.Serialize(writer, ignoreAttributeOnClassTestClass)", span="92-92", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()", file="JsonSchemaModel.cs"];
m7_26 [label="JsonSerializer serializer = new JsonSerializer()", span="87-87", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()", file="JsonSchemaModel.cs"];
m7_27 [label="serializer.ContractResolver = new CamelCasePropertyNamesContractResolver()", span="88-88", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()", file="JsonSchemaModel.cs"];
m7_28 [label="JTokenWriter writer = new JTokenWriter()", span="90-90", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()", file="JsonSchemaModel.cs"];
m7_30 [label="JObject o = (JObject)writer.Token", span="94-94", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()", file="JsonSchemaModel.cs"];
m7_31 [label="JProperty p = o.Property(''theField'')", span="95-95", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()", file="JsonSchemaModel.cs"];
m7_34 [label="string json = o.ToString()", span="100-100", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()", file="JsonSchemaModel.cs"];
m7_32 [label="Assert.IsNotNull(p)", span="97-97", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()", file="JsonSchemaModel.cs"];
m7_33 [label="Assert.AreEqual(int.MinValue, (int)p.Value)", span="98-98", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()", file="JsonSchemaModel.cs"];
m7_35 [label="Exit Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()", span="82-82", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()", file="JsonSchemaModel.cs"];
m7_14 [label="Entry Newtonsoft.Json.Tests.TestObjects.Person.Person()", span="36-36", cluster="Newtonsoft.Json.Tests.TestObjects.Person.Person()", file="JsonSchemaModel.cs"];
m7_18 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="606-606", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaModel.cs"];
m7_40 [label="Entry Newtonsoft.Json.Linq.JObject.Property(string)", span="239-239", cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="JsonSchemaModel.cs"];
m7_42 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="404-404", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JsonSchemaModel.cs"];
m7_55 [label="Entry Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.BlogPostExample()", span="140-140", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.BlogPostExample()", file="JsonSchemaModel.cs"];
m7_56 [label="Product product = new Product\r\n            {\r\n                ExpiryDate = new DateTime(2010, 12, 20, 18, 1, 0, DateTimeKind.Utc),\r\n                Name = ''Widget'',\r\n                Price = 9.99m,\r\n                Sizes = new[] { ''Small'', ''Medium'', ''Large'' }\r\n            }", span="142-148", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.BlogPostExample()", file="JsonSchemaModel.cs"];
m7_57 [label="string json =\r\n                JsonConvert.SerializeObject(\r\n                    product,\r\n                    Formatting.Indented,\r\n                    new JsonSerializerSettings { ContractResolver = new CamelCasePropertyNamesContractResolver() }\r\n                    )", span="150-155", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.BlogPostExample()", file="JsonSchemaModel.cs"];
m7_58 [label="StringAssert.AreEqual(@''{\r\n  ''''name'''': ''''Widget'''',\r\n  ''''expiryDate'''': ''''2010-12-20T18:01:00Z'''',\r\n  ''''price'''': 9.99,\r\n  ''''sizes'''': [\r\n    ''''Small'''',\r\n    ''''Medium'''',\r\n    ''''Large''''\r\n  ]\r\n}'', json)", span="168-177", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.BlogPostExample()", file="JsonSchemaModel.cs"];
m7_59 [label="Exit Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.BlogPostExample()", span="140-140", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.BlogPostExample()", file="JsonSchemaModel.cs"];
m7_68 [label="Entry Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TestDynamicObject()", span="348-348", cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TestDynamicObject()", file="JsonSchemaModel.cs"];
m7_37 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="433-433", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSchemaModel.cs"];
m7_17 [label="Entry Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", span="38-38", cluster="Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", file="JsonSchemaModel.cs"];
m7_69 [label="Entry Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DictionaryCamelCasePropertyNames()", span="205-205", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DictionaryCamelCasePropertyNames()", file="JsonSchemaModel.cs"];
m7_70 [label="Dictionary<string, string> values = new Dictionary<string, string>\r\n            {\r\n                { ''First'', ''Value1!'' },\r\n                { ''Second'', ''Value2!'' }\r\n            }", span="207-211", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DictionaryCamelCasePropertyNames()", file="JsonSchemaModel.cs"];
m7_71 [label="string json = JsonConvert.SerializeObject(values, Formatting.Indented,\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n                })", span="213-217", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DictionaryCamelCasePropertyNames()", file="JsonSchemaModel.cs"];
m7_72 [label="StringAssert.AreEqual(@''{\r\n  ''''first'''': ''''Value1!'''',\r\n  ''''second'''': ''''Value2!''''\r\n}'', json)", span="219-222", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DictionaryCamelCasePropertyNames()", file="JsonSchemaModel.cs"];
m7_73 [label="Exit Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DictionaryCamelCasePropertyNames()", span="205-205", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DictionaryCamelCasePropertyNames()", file="JsonSchemaModel.cs"];
m7_60 [label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()", file="JsonSchemaModel.cs"];
m7_74 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonSchemaModel.cs"];
m7_21 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JsonSchemaModel.cs"];
m7_52 [label="Entry Newtonsoft.Json.Tests.TestObjects.PrivateMembersClass.PrivateMembersClass(string, string)", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.PrivateMembersClass.PrivateMembersClass(string, string)", file="JsonSchemaModel.cs"];
m7_22 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="525-525", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonSchemaModel.cs"];
m7_41 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="JsonSchemaModel.cs"];
m7_36 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", span="28-28", cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", file="JsonSchemaModel.cs"];
m7_0 [label="Entry Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()", span="46-46", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()", file="JsonSchemaModel.cs"];
m7_1 [label="Person person = new Person()", span="48-48", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()", file="JsonSchemaModel.cs"];
m7_2 [label="person.BirthDate = new DateTime(2000, 11, 20, 23, 55, 44, DateTimeKind.Utc)", span="49-49", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()", file="JsonSchemaModel.cs"];
m7_3 [label="person.LastModified = new DateTime(2000, 11, 20, 23, 55, 44, DateTimeKind.Utc)", span="50-50", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()", file="JsonSchemaModel.cs"];
m7_4 [label="person.Name = ''Name!''", span="51-51", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()", file="JsonSchemaModel.cs"];
m7_5 [label="string json = JsonConvert.SerializeObject(person, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n            })", span="53-56", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()", file="JsonSchemaModel.cs"];
m7_8 [label="Assert.AreEqual(person.BirthDate, deserializedPerson.BirthDate)", span="69-69", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()", file="JsonSchemaModel.cs"];
m7_9 [label="Assert.AreEqual(person.LastModified, deserializedPerson.LastModified)", span="70-70", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()", file="JsonSchemaModel.cs"];
m7_10 [label="Assert.AreEqual(person.Name, deserializedPerson.Name)", span="71-71", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()", file="JsonSchemaModel.cs"];
m7_11 [label="json = JsonConvert.SerializeObject(person, Formatting.Indented)", span="73-73", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()", file="JsonSchemaModel.cs"];
m7_6 [label="StringAssert.AreEqual(@''{\r\n  ''''name'''': ''''Name!'''',\r\n  ''''birthDate'''': ''''2000-11-20T23:55:44Z'''',\r\n  ''''lastModified'''': ''''2000-11-20T23:55:44Z''''\r\n}'', json)", span="58-62", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()", file="JsonSchemaModel.cs"];
m7_7 [label="Person deserializedPerson = JsonConvert.DeserializeObject<Person>(json, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n            })", span="64-67", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()", file="JsonSchemaModel.cs"];
m7_12 [label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''BirthDate'''': ''''2000-11-20T23:55:44Z'''',\r\n  ''''LastModified'''': ''''2000-11-20T23:55:44Z''''\r\n}'', json)", span="74-78", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()", file="JsonSchemaModel.cs"];
m7_13 [label="Exit Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()", span="46-46", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()", file="JsonSchemaModel.cs"];
m7_15 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonSchemaModel.cs"];
m7_38 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", span="74-74", cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", file="JsonSchemaModel.cs"];
m7_53 [label="Entry System.Type.GetField(string, System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetField(string, System.Reflection.BindingFlags)", file="JsonSchemaModel.cs"];
m7_20 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="802-802", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaModel.cs"];
m7_19 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="184-184", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JsonSchemaModel.cs"];
m7_54 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="473-473", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JsonSchemaModel.cs"];
m7_61 [label="Entry Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DynamicCamelCasePropertyNames()", span="182-182", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DynamicCamelCasePropertyNames()", file="JsonSchemaModel.cs"];
m7_62 [label="dynamic o = new TestDynamicObject()", span="184-184", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DynamicCamelCasePropertyNames()", file="JsonSchemaModel.cs"];
m7_63 [label="o.Text = ''Text!''", span="185-185", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DynamicCamelCasePropertyNames()", file="JsonSchemaModel.cs"];
m7_64 [label="o.Integer = int.MaxValue", span="186-186", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DynamicCamelCasePropertyNames()", file="JsonSchemaModel.cs"];
m7_65 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented,\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n                })", span="188-192", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DynamicCamelCasePropertyNames()", file="JsonSchemaModel.cs"];
m7_66 [label="StringAssert.AreEqual(@''{\r\n  ''''explicit'''': false,\r\n  ''''text'''': ''''Text!'''',\r\n  ''''integer'''': 2147483647,\r\n  ''''int'''': 0,\r\n  ''''childObject'''': null\r\n}'', json)", span="194-200", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DynamicCamelCasePropertyNames()", file="JsonSchemaModel.cs"];
m7_67 [label="Exit Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DynamicCamelCasePropertyNames()", span="182-182", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DynamicCamelCasePropertyNames()", file="JsonSchemaModel.cs"];
m7_43 [label="Entry Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.MemberSearchFlags()", span="106-106", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.MemberSearchFlags()", file="JsonSchemaModel.cs"];
m7_44 [label="PrivateMembersClass privateMembersClass = new PrivateMembersClass(''PrivateString!'', ''InternalString!'')", span="108-108", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.MemberSearchFlags()", file="JsonSchemaModel.cs"];
m7_45 [label="string json = JsonConvert.SerializeObject(privateMembersClass, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new CamelCasePropertyNamesContractResolver { DefaultMembersSearchFlags = BindingFlags.NonPublic | BindingFlags.Instance }\r\n            })", span="110-113", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.MemberSearchFlags()", file="JsonSchemaModel.cs"];
m7_46 [label="StringAssert.AreEqual(@''{\r\n  ''''_privateString'''': ''''PrivateString!'''',\r\n  ''''i'''': 0,\r\n  ''''_internalString'''': ''''InternalString!''''\r\n}'', json)", span="115-119", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.MemberSearchFlags()", file="JsonSchemaModel.cs"];
m7_47 [label="PrivateMembersClass deserializedPrivateMembersClass = JsonConvert.DeserializeObject<PrivateMembersClass>(@''{\r\n  ''''_privateString'''': ''''Private!'''',\r\n  ''''i'''': -2,\r\n  ''''_internalString'''': ''''Internal!''''\r\n}'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new CamelCasePropertyNamesContractResolver { DefaultMembersSearchFlags = BindingFlags.NonPublic | BindingFlags.Instance }\r\n            })", span="121-128", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.MemberSearchFlags()", file="JsonSchemaModel.cs"];
m7_48 [label="Assert.AreEqual(''Private!'', ReflectionUtils.GetMemberValue(typeof(PrivateMembersClass).GetField(''_privateString'', BindingFlags.Instance | BindingFlags.NonPublic), deserializedPrivateMembersClass))", span="130-130", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.MemberSearchFlags()", file="JsonSchemaModel.cs"];
m7_49 [label="Assert.AreEqual(''Internal!'', ReflectionUtils.GetMemberValue(typeof(PrivateMembersClass).GetField(''_internalString'', BindingFlags.Instance | BindingFlags.NonPublic), deserializedPrivateMembersClass))", span="131-131", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.MemberSearchFlags()", file="JsonSchemaModel.cs"];
m7_50 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(PrivateMembersClass).GetField(''i'', BindingFlags.Instance | BindingFlags.NonPublic), deserializedPrivateMembersClass))", span="134-134", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.MemberSearchFlags()", file="JsonSchemaModel.cs"];
m7_51 [label="Exit Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.MemberSearchFlags()", span="106-106", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.MemberSearchFlags()", file="JsonSchemaModel.cs"];
m8_92 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonSchemaModelBuilder.cs"];
m8_10 [label="Entry Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", span="162-162", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="JsonSchemaModelBuilder.cs"];
m8_69 [label="JsonSchemaModel model", span="164-164", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="JsonSchemaModelBuilder.cs"];
m8_70 [label="_nodeModels.TryGetValue(node, out model)", span="165-165", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="JsonSchemaModelBuilder.cs"];
m8_72 [label="model = JsonSchemaModel.Create(node.Schemas)", span="170-170", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="JsonSchemaModelBuilder.cs"];
m8_73 [label="_nodeModels[node] = model", span="171-171", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="JsonSchemaModelBuilder.cs"];
m8_74 [label="node.Properties", span="173-173", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="JsonSchemaModelBuilder.cs"];
m8_78 [label="node.PatternProperties", span="182-182", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="JsonSchemaModelBuilder.cs"];
m8_82 [label="node.Items", span="191-191", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="JsonSchemaModelBuilder.cs"];
m8_86 [label="node.AdditionalProperties != null", span="200-200", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="JsonSchemaModelBuilder.cs"];
m8_87 [label="model.AdditionalProperties = BuildNodeModel(node.AdditionalProperties)", span="202-202", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="JsonSchemaModelBuilder.cs"];
m8_88 [label="node.AdditionalItems != null", span="204-204", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="JsonSchemaModelBuilder.cs"];
m8_89 [label="model.AdditionalItems = BuildNodeModel(node.AdditionalItems)", span="206-206", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="JsonSchemaModelBuilder.cs"];
m8_71 [label="return model;", span="167-167", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="JsonSchemaModelBuilder.cs"];
m8_75 [label="model.Properties == null", span="175-175", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="JsonSchemaModelBuilder.cs"];
m8_76 [label="model.Properties = new Dictionary<string, JsonSchemaModel>()", span="177-177", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="JsonSchemaModelBuilder.cs"];
m8_77 [label="model.Properties[property.Key] = BuildNodeModel(property.Value)", span="180-180", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="JsonSchemaModelBuilder.cs"];
m8_79 [label="model.PatternProperties == null", span="184-184", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="JsonSchemaModelBuilder.cs"];
m8_80 [label="model.PatternProperties = new Dictionary<string, JsonSchemaModel>()", span="186-186", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="JsonSchemaModelBuilder.cs"];
m8_81 [label="model.PatternProperties[property.Key] = BuildNodeModel(property.Value)", span="189-189", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="JsonSchemaModelBuilder.cs"];
m8_83 [label="model.Items == null", span="193-193", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="JsonSchemaModelBuilder.cs"];
m8_84 [label="model.Items = new List<JsonSchemaModel>()", span="195-195", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="JsonSchemaModelBuilder.cs"];
m8_85 [label="model.Items.Add(BuildNodeModel(t))", span="198-198", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="JsonSchemaModelBuilder.cs"];
m8_90 [label="return model;", span="209-209", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="JsonSchemaModelBuilder.cs"];
m8_91 [label="Exit Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", span="162-162", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="JsonSchemaModelBuilder.cs"];
m8_8 [label="Entry Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", span="54-54", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_11 [label="string newId", span="56-56", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_12 [label="existingNode != null", span="57-57", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_13 [label="existingNode.Schemas.Contains(schema)", span="59-59", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_14 [label="return existingNode;", span="61-61", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_15 [label="newId = JsonSchemaNode.GetId(existingNode.Schemas.Union(new[] { schema }))", span="64-64", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_16 [label="newId = JsonSchemaNode.GetId(new[] { schema })", span="68-68", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_19 [label="JsonSchemaNode currentNode = (existingNode != null)\r\n                ? existingNode.Combine(schema)\r\n                : new JsonSchemaNode(schema)", span="76-78", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_21 [label="AddProperties(schema.Properties, currentNode.Properties)", span="82-82", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_22 [label="AddProperties(schema.PatternProperties, currentNode.PatternProperties)", span="84-84", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_23 [label="schema.Items != null", span="86-86", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_25 [label="i < schema.Items.Count", span="88-88", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_26 [label="AddItem(currentNode, i, schema.Items[i])", span="90-90", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_28 [label="schema.AdditionalItems != null", span="94-94", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_29 [label="AddAdditionalItems(currentNode, schema.AdditionalItems)", span="96-96", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_30 [label="schema.AdditionalProperties != null", span="99-99", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_31 [label="AddAdditionalProperties(currentNode, schema.AdditionalProperties)", span="101-101", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_32 [label="schema.Extends != null", span="104-104", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_33 [label="schema.Extends", span="106-106", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_17 [label="_nodes.Contains(newId)", span="71-71", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_18 [label="return _nodes[newId];", span="73-73", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_20 [label="_nodes.Add(currentNode)", span="80-80", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_34 [label="currentNode = AddSchema(currentNode, jsonSchema)", span="108-108", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_35 [label="return currentNode;", span="112-112", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_24 [label="int i = 0", span="88-88", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_27 [label="i++", span="88-88", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_36 [label="Exit Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", span="54-54", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_42 [label="Entry Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchema)", span="48-48", cluster="Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_94 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JsonSchemaModelBuilder.cs"];
m8_47 [label="Entry Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddAdditionalProperties(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", span="152-152", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddAdditionalProperties(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_65 [label="parentNode.AdditionalProperties = AddSchema(parentNode.AdditionalProperties, schema)", span="154-154", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddAdditionalProperties(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_66 [label="Exit Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddAdditionalProperties(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", span="152-152", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddAdditionalProperties(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_45 [label="Entry Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddItem(Newtonsoft.Json.Schema.JsonSchemaNode, int, Newtonsoft.Json.Schema.JsonSchema)", span="134-134", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddItem(Newtonsoft.Json.Schema.JsonSchemaNode, int, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_58 [label="JsonSchemaNode existingItemNode = (parentNode.Items.Count > index)\r\n                ? parentNode.Items[index]\r\n                : null", span="136-138", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddItem(Newtonsoft.Json.Schema.JsonSchemaNode, int, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_59 [label="JsonSchemaNode newItemNode = AddSchema(existingItemNode, schema)", span="140-140", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddItem(Newtonsoft.Json.Schema.JsonSchemaNode, int, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_60 [label="!(parentNode.Items.Count > index)", span="142-142", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddItem(Newtonsoft.Json.Schema.JsonSchemaNode, int, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_61 [label="parentNode.Items.Add(newItemNode)", span="144-144", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddItem(Newtonsoft.Json.Schema.JsonSchemaNode, int, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_62 [label="parentNode.Items[index] = newItemNode", span="148-148", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddItem(Newtonsoft.Json.Schema.JsonSchemaNode, int, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_63 [label="Exit Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddItem(Newtonsoft.Json.Schema.JsonSchemaNode, int, Newtonsoft.Json.Schema.JsonSchema)", span="134-134", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddItem(Newtonsoft.Json.Schema.JsonSchemaNode, int, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_43 [label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0", cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="JsonSchemaModelBuilder.cs"];
m8_41 [label="Entry Newtonsoft.Json.Schema.JsonSchemaNode.Combine(Newtonsoft.Json.Schema.JsonSchema)", span="70-70", cluster="Newtonsoft.Json.Schema.JsonSchemaNode.Combine(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_64 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonSchemaModelBuilder.cs"];
m8_9 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonSchemaModelBuilder.cs"];
m8_38 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="1164-1164", cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="JsonSchemaModelBuilder.cs"];
m8_46 [label="Entry Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddAdditionalItems(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", span="157-157", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddAdditionalItems(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_67 [label="parentNode.AdditionalItems = AddSchema(parentNode.AdditionalItems, schema)", span="159-159", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddAdditionalItems(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_68 [label="Exit Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddAdditionalItems(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", span="157-157", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddAdditionalItems(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_40 [label="Entry System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Contains(TKey)", span="0-0", cluster="System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Contains(TKey)", file="JsonSchemaModelBuilder.cs"];
m8_95 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JsonSchemaModelBuilder.cs"];
m8_44 [label="Entry Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddProperties(System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchema>, System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchemaNode>)", span="115-115", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddProperties(System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchema>, System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchemaNode>)", file="JsonSchemaModelBuilder.cs"];
m8_48 [label="source != null", span="117-117", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddProperties(System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchema>, System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchemaNode>)", file="JsonSchemaModelBuilder.cs"];
m8_49 [label=source, span="119-119", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddProperties(System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchema>, System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchemaNode>)", file="JsonSchemaModelBuilder.cs"];
m8_50 [label="AddProperty(target, property.Key, property.Value)", span="121-121", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddProperties(System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchema>, System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchemaNode>)", file="JsonSchemaModelBuilder.cs"];
m8_51 [label="Exit Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddProperties(System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchema>, System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchemaNode>)", span="115-115", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddProperties(System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchema>, System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchemaNode>)", file="JsonSchemaModelBuilder.cs"];
m8_57 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonSchemaModelBuilder.cs"];
m8_7 [label="Entry Newtonsoft.Json.Schema.JsonSchemaNodeCollection.JsonSchemaNodeCollection()", span="31-31", cluster="Newtonsoft.Json.Schema.JsonSchemaNodeCollection.JsonSchemaNodeCollection()", file="JsonSchemaModelBuilder.cs"];
m8_39 [label="Entry Newtonsoft.Json.Schema.JsonSchemaNode.GetId(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Schema.JsonSchema>)", span="75-75", cluster="Newtonsoft.Json.Schema.JsonSchemaNode.GetId(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Schema.JsonSchema>)", file="JsonSchemaModelBuilder.cs"];
m8_52 [label="Entry Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddProperty(System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchemaNode>, string, Newtonsoft.Json.Schema.JsonSchema)", span="126-126", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddProperty(System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchemaNode>, string, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_53 [label="JsonSchemaNode propertyNode", span="128-128", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddProperty(System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchemaNode>, string, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_54 [label="target.TryGetValue(propertyName, out propertyNode)", span="129-129", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddProperty(System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchemaNode>, string, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_55 [label="target[propertyName] = AddSchema(propertyNode, schema)", span="131-131", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddProperty(System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchemaNode>, string, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_56 [label="Exit Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddProperty(System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchemaNode>, string, Newtonsoft.Json.Schema.JsonSchema)", span="126-126", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddProperty(System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchemaNode>, string, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_37 [label="Entry System.Collections.ObjectModel.ReadOnlyCollection<T>.Contains(T)", span="0-0", cluster="System.Collections.ObjectModel.ReadOnlyCollection<T>.Contains(T)", file="JsonSchemaModelBuilder.cs"];
m8_0 [label="Entry Newtonsoft.Json.Schema.JsonSchemaModelBuilder.Build(Newtonsoft.Json.Schema.JsonSchema)", span="43-43", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.Build(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_1 [label="_nodes = new JsonSchemaNodeCollection()", span="45-45", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.Build(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_2 [label="_node = AddSchema(null, schema)", span="46-46", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.Build(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_3 [label="_nodeModels = new Dictionary<JsonSchemaNode, JsonSchemaModel>()", span="48-48", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.Build(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_4 [label="JsonSchemaModel model = BuildNodeModel(_node)", span="49-49", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.Build(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_5 [label="return model;", span="51-51", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.Build(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_6 [label="Exit Newtonsoft.Json.Schema.JsonSchemaModelBuilder.Build(Newtonsoft.Json.Schema.JsonSchema)", span="43-43", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.Build(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaModelBuilder.cs"];
m8_93 [label="Entry Newtonsoft.Json.Schema.JsonSchemaModel.Create(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchema>)", span="67-67", cluster="Newtonsoft.Json.Schema.JsonSchemaModel.Create(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchema>)", file="JsonSchemaModelBuilder.cs"];
m8_96 [label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder", span="", file="JsonSchemaModelBuilder.cs"];
m10_0 [label="Entry Newtonsoft.Json.Schema.JsonSchemaNodeCollection.GetKeyForItem(Newtonsoft.Json.Schema.JsonSchemaNode)", span="33-33", cluster="Newtonsoft.Json.Schema.JsonSchemaNodeCollection.GetKeyForItem(Newtonsoft.Json.Schema.JsonSchemaNode)", file="JsonSchemaNodeCollection.cs"];
m10_1 [label="return item.Id;", span="35-35", cluster="Newtonsoft.Json.Schema.JsonSchemaNodeCollection.GetKeyForItem(Newtonsoft.Json.Schema.JsonSchemaNode)", file="JsonSchemaNodeCollection.cs"];
m10_2 [label="Exit Newtonsoft.Json.Schema.JsonSchemaNodeCollection.GetKeyForItem(Newtonsoft.Json.Schema.JsonSchemaNode)", span="33-33", cluster="Newtonsoft.Json.Schema.JsonSchemaNodeCollection.GetKeyForItem(Newtonsoft.Json.Schema.JsonSchemaNode)", file="JsonSchemaNodeCollection.cs"];
m11_0 [label="Entry Newtonsoft.Json.Schema.JsonSchemaResolver.JsonSchemaResolver()", span="56-56", cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.JsonSchemaResolver()", file="JsonSchemaResolver.cs"];
m11_1 [label="LoadedSchemas = new List<JsonSchema>()", span="58-58", cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.JsonSchemaResolver()", file="JsonSchemaResolver.cs"];
m11_2 [label="Exit Newtonsoft.Json.Schema.JsonSchemaResolver.JsonSchemaResolver()", span="56-56", cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.JsonSchemaResolver()", file="JsonSchemaResolver.cs"];
m11_10 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="JsonSchemaResolver.cs"];
m11_15 [label="Entry lambda expression", span="72-72", cluster="lambda expression", file="JsonSchemaResolver.cs"];
m11_12 [label="string.Equals(s.Id, reference, StringComparison.Ordinal)", span="68-68", cluster="lambda expression", file="JsonSchemaResolver.cs"];
m11_16 [label="string.Equals(s.Location, reference, StringComparison.Ordinal)", span="72-72", cluster="lambda expression", file="JsonSchemaResolver.cs"];
m11_11 [label="Entry lambda expression", span="68-68", cluster="lambda expression", file="JsonSchemaResolver.cs"];
m11_13 [label="Exit lambda expression", span="68-68", cluster="lambda expression", file="JsonSchemaResolver.cs"];
m11_17 [label="Exit lambda expression", span="72-72", cluster="lambda expression", file="JsonSchemaResolver.cs"];
m11_14 [label="Entry Unk.Equals", span="", cluster="Unk.Equals", file="JsonSchemaResolver.cs"];
m11_4 [label="Entry Newtonsoft.Json.Schema.JsonSchemaResolver.GetSchema(string)", span="66-66", cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.GetSchema(string)", file="JsonSchemaResolver.cs"];
m11_5 [label="JsonSchema schema = LoadedSchemas.SingleOrDefault(s => string.Equals(s.Id, reference, StringComparison.Ordinal))", span="68-68", cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.GetSchema(string)", file="JsonSchemaResolver.cs"];
m11_7 [label="schema = LoadedSchemas.SingleOrDefault(s => string.Equals(s.Location, reference, StringComparison.Ordinal))", span="72-72", cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.GetSchema(string)", file="JsonSchemaResolver.cs"];
m11_6 [label="schema == null", span="70-70", cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.GetSchema(string)", file="JsonSchemaResolver.cs"];
m11_8 [label="return schema;", span="75-75", cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.GetSchema(string)", file="JsonSchemaResolver.cs"];
m11_9 [label="Exit Newtonsoft.Json.Schema.JsonSchemaResolver.GetSchema(string)", span="66-66", cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.GetSchema(string)", file="JsonSchemaResolver.cs"];
m11_3 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JsonSchemaResolver.cs"];
m11_18 [label="Newtonsoft.Json.Schema.JsonSchemaResolver", span="", file="JsonSchemaResolver.cs"];
m11_19 [label=string, span="", file="JsonSchemaResolver.cs"];
m13_17 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="382-382", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSchemaWriter.cs"];
m13_20 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JsonSchemaWriter.cs"];
m13_16 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="525-525", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonSchemaWriter.cs"];
m13_14 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PreserveReferencesHandlingObject.File.File()", span="49-49", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PreserveReferencesHandlingObject.File.File()", file="JsonSchemaWriter.cs"];
m13_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PreserveReferencesHandlingObject.Example()", span="57-57", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PreserveReferencesHandlingObject.Example()", file="JsonSchemaWriter.cs"];
m13_1 [label="Directory root = new Directory { Name = ''Root'' }", span="60-60", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PreserveReferencesHandlingObject.Example()", file="JsonSchemaWriter.cs"];
m13_2 [label="Directory documents = new Directory { Name = ''My Documents'', Parent = root }", span="61-61", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PreserveReferencesHandlingObject.Example()", file="JsonSchemaWriter.cs"];
m13_3 [label="File file = new File { Name = ''ImportantLegalDocument.docx'', Parent = documents }", span="63-63", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PreserveReferencesHandlingObject.Example()", file="JsonSchemaWriter.cs"];
m13_4 [label="documents.Files = new List<File> { file }", span="65-65", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PreserveReferencesHandlingObject.Example()", file="JsonSchemaWriter.cs"];
m13_5 [label="JsonConvert.SerializeObject(documents, Formatting.Indented)", span="69-69", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PreserveReferencesHandlingObject.Example()", file="JsonSchemaWriter.cs"];
m13_7 [label="string preserveReferenacesAll = JsonConvert.SerializeObject(documents, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All\r\n            })", span="77-80", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PreserveReferencesHandlingObject.Example()", file="JsonSchemaWriter.cs"];
m13_9 [label="string preserveReferenacesObjects = JsonConvert.SerializeObject(documents, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="106-109", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PreserveReferencesHandlingObject.Example()", file="JsonSchemaWriter.cs"];
m13_6 [label=JsonSerializationException, span="71-71", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PreserveReferencesHandlingObject.Example()", file="JsonSchemaWriter.cs"];
m13_8 [label="Console.WriteLine(preserveReferenacesAll)", span="82-82", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PreserveReferencesHandlingObject.Example()", file="JsonSchemaWriter.cs"];
m13_10 [label="Console.WriteLine(preserveReferenacesObjects)", span="111-111", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PreserveReferencesHandlingObject.Example()", file="JsonSchemaWriter.cs"];
m13_11 [label="Assert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''Name'''': ''''My Documents'''',\r\n  ''''Parent'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''Root'''',\r\n    ''''Parent'''': null,\r\n    ''''Files'''': null\r\n  },\r\n  ''''Files'''': [\r\n    {\r\n      ''''$id'''': ''''3'''',\r\n      ''''Name'''': ''''ImportantLegalDocument.docx'''',\r\n      ''''Parent'''': {\r\n        ''''$ref'''': ''''1''''\r\n      }\r\n    }\r\n  ]\r\n}'', preserveReferenacesObjects)", span="133-151", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PreserveReferencesHandlingObject.Example()", file="JsonSchemaWriter.cs"];
m13_12 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PreserveReferencesHandlingObject.Example()", span="57-57", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PreserveReferencesHandlingObject.Example()", file="JsonSchemaWriter.cs"];
m13_18 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="606-606", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaWriter.cs"];
m13_13 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PreserveReferencesHandlingObject.Directory.Directory()", span="42-42", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PreserveReferencesHandlingObject.Directory.Directory()", file="JsonSchemaWriter.cs"];
m13_15 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JsonSchemaWriter.cs"];
m13_19 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JsonSchemaWriter.cs"];
m14_47 [label="Entry Newtonsoft.Json.Serialization.ITraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", span="25-25", cluster="Newtonsoft.Json.Serialization.ITraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", file="JsonSerializerInternalReader.cs"];
m14_3 [label="Entry object.ReferenceEquals(object, object)", span="0-0", cluster="object.ReferenceEquals(object, object)", file="JsonSerializerInternalReader.cs"];
m14_13 [label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="52-52", cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="JsonSerializerInternalReader.cs"];
m14_50 [label="Entry Newtonsoft.Json.JsonSerializer.OnError(Newtonsoft.Json.Serialization.ErrorEventArgs)", span="993-993", cluster="Newtonsoft.Json.JsonSerializer.OnError(Newtonsoft.Json.Serialization.ErrorEventArgs)", file="JsonSerializerInternalReader.cs"];
m14_23 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", span="93-93", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", file="JsonSerializerInternalReader.cs"];
m14_24 [label="_currentErrorContext == null", span="95-95", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", file="JsonSerializerInternalReader.cs"];
m14_25 [label="throw new InvalidOperationException(''Could not clear error context. Error context is already null.'');", span="96-96", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", file="JsonSerializerInternalReader.cs"];
m14_26 [label="_currentErrorContext = null", span="98-98", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", file="JsonSerializerInternalReader.cs"];
m14_27 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", span="93-93", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", file="JsonSerializerInternalReader.cs"];
m14_0 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ReferenceEqualsEqualityComparer.System.Collections.Generic.IEqualityComparer<object>.Equals(object, object)", span="38-38", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ReferenceEqualsEqualityComparer.System.Collections.Generic.IEqualityComparer<object>.Equals(object, object)", file="JsonSerializerInternalReader.cs"];
m14_1 [label="return ReferenceEquals(x, y);", span="40-40", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ReferenceEqualsEqualityComparer.System.Collections.Generic.IEqualityComparer<object>.Equals(object, object)", file="JsonSerializerInternalReader.cs"];
m14_2 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ReferenceEqualsEqualityComparer.System.Collections.Generic.IEqualityComparer<object>.Equals(object, object)", span="38-38", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ReferenceEqualsEqualityComparer.System.Collections.Generic.IEqualityComparer<object>.Equals(object, object)", file="JsonSerializerInternalReader.cs"];
m14_4 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ReferenceEqualsEqualityComparer.System.Collections.Generic.IEqualityComparer<object>.GetHashCode(object)", span="43-43", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ReferenceEqualsEqualityComparer.System.Collections.Generic.IEqualityComparer<object>.GetHashCode(object)", file="JsonSerializerInternalReader.cs"];
m14_5 [label="return RuntimeHelpers.GetHashCode(obj);", span="46-46", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ReferenceEqualsEqualityComparer.System.Collections.Generic.IEqualityComparer<object>.GetHashCode(object)", file="JsonSerializerInternalReader.cs"];
m14_6 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ReferenceEqualsEqualityComparer.System.Collections.Generic.IEqualityComparer<object>.GetHashCode(object)", span="43-43", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ReferenceEqualsEqualityComparer.System.Collections.Generic.IEqualityComparer<object>.GetHashCode(object)", file="JsonSerializerInternalReader.cs"];
m14_7 [label="Entry System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode(object)", span="0-0", cluster="System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode(object)", file="JsonSerializerInternalReader.cs"];
m14_14 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.GetErrorContext(object, object, string, System.Exception)", span="82-82", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.GetErrorContext(object, object, string, System.Exception)", file="JsonSerializerInternalReader.cs"];
m14_15 [label="_currentErrorContext == null", span="84-84", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.GetErrorContext(object, object, string, System.Exception)", file="JsonSerializerInternalReader.cs"];
m14_16 [label="_currentErrorContext = new ErrorContext(currentObject, member, path, error)", span="85-85", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.GetErrorContext(object, object, string, System.Exception)", file="JsonSerializerInternalReader.cs"];
m14_17 [label="_currentErrorContext.Error != error", span="87-87", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.GetErrorContext(object, object, string, System.Exception)", file="JsonSerializerInternalReader.cs"];
m14_18 [label="throw new InvalidOperationException(''Current error context error is different to requested error.'');", span="88-88", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.GetErrorContext(object, object, string, System.Exception)", file="JsonSerializerInternalReader.cs"];
m14_19 [label="return _currentErrorContext;", span="90-90", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.GetErrorContext(object, object, string, System.Exception)", file="JsonSerializerInternalReader.cs"];
m14_20 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalBase.GetErrorContext(object, object, string, System.Exception)", span="82-82", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.GetErrorContext(object, object, string, System.Exception)", file="JsonSerializerInternalReader.cs"];
m14_46 [label="Entry Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", span="104-104", cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JsonSerializerInternalReader.cs"];
m14_48 [label="Entry Newtonsoft.Json.Serialization.JsonContract.InvokeOnError(object, System.Runtime.Serialization.StreamingContext, Newtonsoft.Json.Serialization.ErrorContext)", span="389-389", cluster="Newtonsoft.Json.Serialization.JsonContract.InvokeOnError(object, System.Runtime.Serialization.StreamingContext, Newtonsoft.Json.Serialization.ErrorContext)", file="JsonSerializerInternalReader.cs"];
m14_49 [label="Entry Newtonsoft.Json.Serialization.ErrorEventArgs.ErrorEventArgs(object, Newtonsoft.Json.Serialization.ErrorContext)", span="51-51", cluster="Newtonsoft.Json.Serialization.ErrorEventArgs.ErrorEventArgs(object, Newtonsoft.Json.Serialization.ErrorContext)", file="JsonSerializerInternalReader.cs"];
m14_28 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", span="101-101", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", file="JsonSerializerInternalReader.cs"];
m14_29 [label="ErrorContext errorContext = GetErrorContext(currentObject, keyValue, path, ex)", span="103-103", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", file="JsonSerializerInternalReader.cs"];
m14_33 [label="contract != null", span="112-112", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", file="JsonSerializerInternalReader.cs"];
m14_34 [label="message += '' '' + contract.UnderlyingType", span="113-113", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", file="JsonSerializerInternalReader.cs"];
m14_35 [label="message += ''. '' + ex.Message", span="114-114", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", file="JsonSerializerInternalReader.cs"];
m14_36 [label="!(ex is JsonException)", span="117-117", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", file="JsonSerializerInternalReader.cs"];
m14_37 [label="message = JsonPosition.FormatMessage(lineInfo, path, message)", span="118-118", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", file="JsonSerializerInternalReader.cs"];
m14_38 [label="TraceWriter.Trace(TraceLevel.Error, message, ex)", span="120-120", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", file="JsonSerializerInternalReader.cs"];
m14_39 [label="contract != null && currentObject != null", span="124-124", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", file="JsonSerializerInternalReader.cs"];
m14_40 [label="contract.InvokeOnError(currentObject, Serializer.Context, errorContext)", span="125-125", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", file="JsonSerializerInternalReader.cs"];
m14_42 [label="Serializer.OnError(new ErrorEventArgs(currentObject, errorContext))", span="128-128", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", file="JsonSerializerInternalReader.cs"];
m14_30 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Error && !errorContext.Traced", span="105-105", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", file="JsonSerializerInternalReader.cs"];
m14_31 [label="errorContext.Traced = true", span="108-108", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", file="JsonSerializerInternalReader.cs"];
m14_41 [label="!errorContext.Handled", span="127-127", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", file="JsonSerializerInternalReader.cs"];
m14_43 [label="return errorContext.Handled;", span="130-130", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", file="JsonSerializerInternalReader.cs"];
m14_32 [label="string message = (GetType() == typeof(JsonSerializerInternalWriter)) ? ''Error serializing'' : ''Error deserializing''", span="111-111", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", file="JsonSerializerInternalReader.cs"];
m14_44 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", span="101-101", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", file="JsonSerializerInternalReader.cs"];
m14_22 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="JsonSerializerInternalReader.cs"];
m14_21 [label="Entry Newtonsoft.Json.Serialization.ErrorContext.ErrorContext(object, object, string, System.Exception)", span="34-34", cluster="Newtonsoft.Json.Serialization.ErrorContext.ErrorContext(object, object, string, System.Exception)", file="JsonSerializerInternalReader.cs"];
m14_8 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.JsonSerializerInternalBase(Newtonsoft.Json.JsonSerializer)", span="57-57", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.JsonSerializerInternalBase(Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs"];
m14_9 [label="ValidationUtils.ArgumentNotNull(serializer, ''serializer'')", span="59-59", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.JsonSerializerInternalBase(Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs"];
m14_10 [label="Serializer = serializer", span="61-61", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.JsonSerializerInternalBase(Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs"];
m14_11 [label="TraceWriter = serializer.TraceWriter", span="62-62", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.JsonSerializerInternalBase(Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs"];
m14_12 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalBase.JsonSerializerInternalBase(Newtonsoft.Json.JsonSerializer)", span="57-57", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.JsonSerializerInternalBase(Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs"];
m14_51 [label="Newtonsoft.Json.Serialization.JsonSerializerInternalBase", span="", file="JsonSerializerInternalReader.cs"];
m17_55 [label="Product p = JavaScriptConvert.DeserializeObject(value, typeof(Product)) as Product", span="169-169", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JavaScriptConvertSerializer()", file="UnixDateTimeConverter.cs"];
m17_91 [label="bool b1 = Convert.ToBoolean(objA, CultureInfo.InvariantCulture)", span="262-262", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="UnixDateTimeConverter.cs"];
m17_138 [label="Assert.AreEqual(nestedTorrentsArray.Count, 19)", span="428-428", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", file="UnixDateTimeConverter.cs"];
m17_453 [label="Entry Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", span="840-840", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="UnixDateTimeConverter.cs"];
m17_454 [label="object compareValue = (arg is JValue) ? ((JValue)arg).Value : arg", span="842-842", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="UnixDateTimeConverter.cs"];
m17_455 [label="binder.Operation", span="844-844", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="UnixDateTimeConverter.cs"];
m17_457 [label="result = (Compare(instance.Type, instance.Value, compareValue) == 0)", span="847-847", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="UnixDateTimeConverter.cs"];
m17_460 [label="result = (Compare(instance.Type, instance.Value, compareValue) != 0)", span="850-850", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="UnixDateTimeConverter.cs"];
m17_463 [label="result = (Compare(instance.Type, instance.Value, compareValue) > 0)", span="853-853", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="UnixDateTimeConverter.cs"];
m17_466 [label="result = (Compare(instance.Type, instance.Value, compareValue) >= 0)", span="856-856", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="UnixDateTimeConverter.cs"];
m17_469 [label="result = (Compare(instance.Type, instance.Value, compareValue) < 0)", span="859-859", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="UnixDateTimeConverter.cs"];
m17_472 [label="result = (Compare(instance.Type, instance.Value, compareValue) <= 0)", span="862-862", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="UnixDateTimeConverter.cs"];
m17_482 [label="Operation(binder.Operation, instance.Value, compareValue, out result)", span="872-872", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="UnixDateTimeConverter.cs"];
m17_456 [label="ExpressionType.Equal", span="846-846", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="UnixDateTimeConverter.cs"];
m17_459 [label="ExpressionType.NotEqual", span="849-849", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="UnixDateTimeConverter.cs"];
m17_462 [label="ExpressionType.GreaterThan", span="852-852", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="UnixDateTimeConverter.cs"];
m17_465 [label="ExpressionType.GreaterThanOrEqual", span="855-855", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="UnixDateTimeConverter.cs"];
m17_468 [label="ExpressionType.LessThan", span="858-858", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="UnixDateTimeConverter.cs"];
m17_471 [label="ExpressionType.LessThanOrEqual", span="861-861", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="UnixDateTimeConverter.cs"];
m17_474 [label="ExpressionType.Add", span="864-864", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="UnixDateTimeConverter.cs"];
m17_458 [label="return true;", span="848-848", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="UnixDateTimeConverter.cs"];
m17_461 [label="return true;", span="851-851", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="UnixDateTimeConverter.cs"];
m17_464 [label="return true;", span="854-854", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="UnixDateTimeConverter.cs"];
m17_467 [label="return true;", span="857-857", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="UnixDateTimeConverter.cs"];
m17_470 [label="return true;", span="860-860", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="UnixDateTimeConverter.cs"];
m17_473 [label="return true;", span="863-863", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="UnixDateTimeConverter.cs"];
m17_475 [label="ExpressionType.AddAssign", span="865-865", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="UnixDateTimeConverter.cs"];
m17_476 [label="ExpressionType.Subtract", span="866-866", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="UnixDateTimeConverter.cs"];
m17_477 [label="ExpressionType.SubtractAssign", span="867-867", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="UnixDateTimeConverter.cs"];
m17_478 [label="ExpressionType.Multiply", span="868-868", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="UnixDateTimeConverter.cs"];
m17_479 [label="ExpressionType.MultiplyAssign", span="869-869", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="UnixDateTimeConverter.cs"];
m17_480 [label="ExpressionType.Divide", span="870-870", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="UnixDateTimeConverter.cs"];
m17_481 [label="ExpressionType.DivideAssign", span="871-871", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="UnixDateTimeConverter.cs"];
m17_483 [label="result = new JValue(result)", span="874-874", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="UnixDateTimeConverter.cs"];
m17_485 [label="result = null", span="880-880", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="UnixDateTimeConverter.cs"];
m17_484 [label="return true;", span="875-875", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="UnixDateTimeConverter.cs"];
m17_486 [label="return false;", span="881-881", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="UnixDateTimeConverter.cs"];
m17_487 [label="Exit Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", span="840-840", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="UnixDateTimeConverter.cs"];
m17_530 [label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt32(System.IFormatProvider)", span="975-975", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt32(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_531 [label="return (uint)this;", span="977-977", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt32(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_532 [label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt32(System.IFormatProvider)", span="975-975", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt32(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_512 [label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToChar(System.IFormatProvider)", span="945-945", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToChar(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_513 [label="return (char)this;", span="947-947", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToChar(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_514 [label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToChar(System.IFormatProvider)", span="945-945", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToChar(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_125 [label="!(objB is Uri)", span="318-318", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="UnixDateTimeConverter.cs"];
m17_127 [label="Uri uri1 = (Uri)objA", span="321-321", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="UnixDateTimeConverter.cs"];
m17_126 [label="throw new ArgumentException(''Object must be of type Uri.'');", span="319-319", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="UnixDateTimeConverter.cs"];
m17_128 [label="Uri uri2 = (Uri)objB", span="322-322", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="UnixDateTimeConverter.cs"];
m17_129 [label="return Comparer<string>.Default.Compare(uri1.ToString(), uri2.ToString());", span="324-324", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="UnixDateTimeConverter.cs"];
m17_130 [label="JTokenType.TimeSpan", span="325-325", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="UnixDateTimeConverter.cs"];
m17_272 [label="Entry Newtonsoft.Json.JavaScriptConvert.DeserializeAnonymousType<T>(string, T)", span="442-442", cluster="Newtonsoft.Json.JavaScriptConvert.DeserializeAnonymousType<T>(string, T)", file="UnixDateTimeConverter.cs"];
m17_273 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", span="715-715", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", file="UnixDateTimeConverter.cs"];
m17_274 [label="ProductCollection collection = new ProductCollection()\r\n      {\r\n        new Product() { Name = ''Test1'' },\r\n        new Product() { Name = ''Test2'' },\r\n        new Product() { Name = ''Test3'' }\r\n      }", span="717-722", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", file="UnixDateTimeConverter.cs"];
m17_110 [label="throw new ArgumentException(''Object must be of type byte[].'');", span="299-299", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="UnixDateTimeConverter.cs"];
m17_152 [label="JavaScriptConvert.SerializeObject(new BadJsonPropertyClass())", span="480-480", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="UnixDateTimeConverter.cs"];
m17_375 [label="Entry Newtonsoft.Json.JsonWriter.WriteRawValue(string)", span="798-798", cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="UnixDateTimeConverter.cs"];
m17_157 [label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.CreateArgumentOutOfRangeException(string, object, string)", span="63-63", cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.CreateArgumentOutOfRangeException(string, object, string)", file="UnixDateTimeConverter.cs"];
m17_158 [label="double d1 = Convert.ToDouble(objA, CultureInfo.InvariantCulture)", span="340-340", cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="UnixDateTimeConverter.cs"];
m17_159 [label="double d2 = Convert.ToDouble(objB, CultureInfo.InvariantCulture)", span="341-341", cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="UnixDateTimeConverter.cs"];
m17_380 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="931-931", cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="UnixDateTimeConverter.cs"];
m17_371 [label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", span="868-868", cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", file="UnixDateTimeConverter.cs"];
m17_536 [label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt64(System.IFormatProvider)", span="985-985", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt64(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_537 [label="return (ulong)this;", span="987-987", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt64(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_538 [label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt64(System.IFormatProvider)", span="985-985", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt64(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_275 [label="Entry Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", span="523-523", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="UnixDateTimeConverter.cs"];
m17_278 [label="value == DBNull.Value", span="528-528", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="UnixDateTimeConverter.cs"];
m17_281 [label="return GetStringValueType(current);", span="532-532", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="UnixDateTimeConverter.cs"];
m17_276 [label="value == null", span="525-525", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="UnixDateTimeConverter.cs"];
m17_280 [label="value is string", span="531-531", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="UnixDateTimeConverter.cs"];
m17_277 [label="return JTokenType.Null;", span="526-526", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="UnixDateTimeConverter.cs"];
m17_279 [label="return JTokenType.Null;", span="529-529", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="UnixDateTimeConverter.cs"];
m17_282 [label="value is long || value is int || value is short || value is sbyte\r\n                     || value is ulong || value is uint || value is ushort || value is byte", span="533-534", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="UnixDateTimeConverter.cs"];
m17_27 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", span="161-161", cluster="Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", file="UnixDateTimeConverter.cs"];
m17_28 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(object)", span="170-170", cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="UnixDateTimeConverter.cs"];
m17_29 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(object)", span="170-170", cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="UnixDateTimeConverter.cs"];
m17_30 [label="Entry Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="175-175", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="UnixDateTimeConverter.cs"];
m17_31 [label="JValue other = node as JValue", span="177-177", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="UnixDateTimeConverter.cs"];
m17_32 [label="other == null", span="178-178", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="UnixDateTimeConverter.cs"];
m17_382 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(float)", span="857-857", cluster="Newtonsoft.Json.JsonWriter.WriteValue(float)", file="UnixDateTimeConverter.cs"];
m17_499 [label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", span="923-923", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="UnixDateTimeConverter.cs"];
m17_500 [label="_value == null", span="925-925", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="UnixDateTimeConverter.cs"];
m17_501 [label="return TypeCode.Empty;", span="926-926", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="UnixDateTimeConverter.cs"];
m17_502 [label="_value is DateTimeOffset", span="929-929", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="UnixDateTimeConverter.cs"];
m17_503 [label="return TypeCode.DateTime;", span="930-930", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="UnixDateTimeConverter.cs"];
m17_504 [label="_value is BigInteger", span="933-933", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="UnixDateTimeConverter.cs"];
m17_505 [label="return TypeCode.Object;", span="934-934", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="UnixDateTimeConverter.cs"];
m17_506 [label="return System.Type.GetTypeCode(_value.GetType());", span="937-937", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="UnixDateTimeConverter.cs"];
m17_507 [label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", span="923-923", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="UnixDateTimeConverter.cs"];
m17_4 [label="return base.Equals(obj);", span="57-57", cluster="Newtonsoft.Json.Tests.Product.Equals(object)", file="UnixDateTimeConverter.cs"];
m17_5 [label="Exit Newtonsoft.Json.Tests.Product.Equals(object)", span="48-48", cluster="Newtonsoft.Json.Tests.Product.Equals(object)", file="UnixDateTimeConverter.cs"];
m17_97 [label="DateTime date2", span="272-272", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="UnixDateTimeConverter.cs"];
m17_265 [label="Assert.AreEqual(int.MaxValue, anonymous.IntValue)", span="706-706", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="UnixDateTimeConverter.cs"];
m17_240 [label="objA == null || objB == null", span="463-463", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="UnixDateTimeConverter.cs"];
m17_139 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", span="410-410", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", file="UnixDateTimeConverter.cs"];
m17_160 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", span="502-502", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", file="UnixDateTimeConverter.cs"];
m17_162 [label="Article a2 = new Article(''a2'')", span="505-505", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", file="UnixDateTimeConverter.cs"];
m17_161 [label="Article a1 = new Article(''a1'')", span="504-504", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", file="UnixDateTimeConverter.cs"];
m17_163 [label="ArticleCollection articles1 = new ArticleCollection()", span="507-507", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", file="UnixDateTimeConverter.cs"];
m17_61 [label="objA == null && objB == null", span="224-224", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="UnixDateTimeConverter.cs"];
m17_65 [label="objA == null && objB != null", span="228-228", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="UnixDateTimeConverter.cs"];
m17_68 [label="JTokenType.Integer", span="233-233", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="UnixDateTimeConverter.cs"];
m17_63 [label="objA != null && objB == null", span="226-226", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="UnixDateTimeConverter.cs"];
m17_64 [label="return 1;", span="227-227", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="UnixDateTimeConverter.cs"];
m17_66 [label="return -1;", span="229-229", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="UnixDateTimeConverter.cs"];
m17_70 [label="return CompareBigInteger((BigInteger)objA, objB);", span="236-236", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="UnixDateTimeConverter.cs"];
m17_72 [label="return -CompareBigInteger((BigInteger)objB, objA);", span="238-238", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="UnixDateTimeConverter.cs"];
m17_62 [label="return 0;", span="225-225", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="UnixDateTimeConverter.cs"];
m17_67 [label=valueType, span="231-231", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="UnixDateTimeConverter.cs"];
m17_69 [label="objA is BigInteger", span="235-235", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="UnixDateTimeConverter.cs"];
m17_71 [label="objB is BigInteger", span="237-237", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="UnixDateTimeConverter.cs"];
m17_73 [label="objA is ulong || objB is ulong || objA is decimal || objB is decimal", span="240-240", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="UnixDateTimeConverter.cs"];
m17_92 [label="bool b2 = Convert.ToBoolean(objB, CultureInfo.InvariantCulture)", span="263-263", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="UnixDateTimeConverter.cs"];
m17_95 [label="objA is DateTime", span="268-268", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="UnixDateTimeConverter.cs"];
m17_94 [label="JTokenType.Date", span="266-266", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="UnixDateTimeConverter.cs"];
m17_93 [label="return b1.CompareTo(b2);", span="265-265", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="UnixDateTimeConverter.cs"];
m17_96 [label="DateTime date1 = (DateTime)objA", span="271-271", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="UnixDateTimeConverter.cs"];
m17_16 [label="Product rocket = new Product()", span="99-99", cluster="Newtonsoft.Json.Tests.Store.Store()", file="UnixDateTimeConverter.cs"];
m17_17 [label="rocket.Name = ''Rocket''", span="100-100", cluster="Newtonsoft.Json.Tests.Store.Store()", file="UnixDateTimeConverter.cs", color=green, community=0];
m17_60 [label="Entry Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", span="222-222", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="UnixDateTimeConverter.cs"];
m17_22 [label="product.Add(alien)", span="106-106", cluster="Newtonsoft.Json.Tests.Store.Store()", file="UnixDateTimeConverter.cs"];
m17_23 [label="Exit Newtonsoft.Json.Tests.Store.Store()", span="92-92", cluster="Newtonsoft.Json.Tests.Store.Store()", file="UnixDateTimeConverter.cs"];
m17_26 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="UnixDateTimeConverter.cs"];
m17_141 [label="JsonPropertyClass test = new JsonPropertyClass()", span="454-454", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", file="UnixDateTimeConverter.cs"];
m17_542 [label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDouble(System.IFormatProvider)", span="995-995", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDouble(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_543 [label="return (double)this;", span="997-997", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDouble(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_544 [label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDouble(System.IFormatProvider)", span="995-995", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDouble(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_396 [label="Entry Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", span="703-703", cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="UnixDateTimeConverter.cs"];
m17_397 [label="other == null", span="705-705", cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="UnixDateTimeConverter.cs"];
m17_399 [label="return ValuesEquals(this, other);", span="708-708", cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="UnixDateTimeConverter.cs"];
m17_398 [label="return false;", span="706-706", cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="UnixDateTimeConverter.cs"];
m17_400 [label="Exit Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", span="703-703", cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="UnixDateTimeConverter.cs"];
m17_146 [label="JsonPropertyClass test2 = JavaScriptConvert.DeserializeObject<JsonPropertyClass>(jsonText)", span="462-462", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", file="UnixDateTimeConverter.cs"];
m17_10 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(ulong)", span="89-89", cluster="Newtonsoft.Json.Linq.JValue.JValue(ulong)", file="UnixDateTimeConverter.cs"];
m17_539 [label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSingle(System.IFormatProvider)", span="990-990", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSingle(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_540 [label="return (float)this;", span="992-992", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSingle(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_541 [label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSingle(System.IFormatProvider)", span="990-990", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSingle(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_210 [label="result = d1 * d2", span="421-421", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="UnixDateTimeConverter.cs"];
m17_57 [label="Assert.AreEqual(new DateTime(2010, 1, 24, 12, 0, 0), p.Expiry)", span="172-172", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JavaScriptConvertSerializer()", file="UnixDateTimeConverter.cs"];
m17_379 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long)", span="838-838", cluster="Newtonsoft.Json.JsonWriter.WriteValue(long)", file="UnixDateTimeConverter.cs"];
m17_98 [label="objB is DateTimeOffset", span="275-275", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="UnixDateTimeConverter.cs"];
m17_101 [label="return date1.CompareTo(date2);", span="281-281", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="UnixDateTimeConverter.cs"];
m17_100 [label="date2 = Convert.ToDateTime(objB, CultureInfo.InvariantCulture)", span="279-279", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="UnixDateTimeConverter.cs"];
m17_99 [label="date2 = ((DateTimeOffset)objB).DateTime", span="276-276", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="UnixDateTimeConverter.cs"];
m17_102 [label="DateTimeOffset date1 = (DateTimeOffset)objA", span="286-286", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="UnixDateTimeConverter.cs"];
m17_527 [label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt32(System.IFormatProvider)", span="970-970", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt32(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_528 [label="return (int)this;", span="972-972", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt32(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_529 [label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt32(System.IFormatProvider)", span="970-970", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt32(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_284 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="UnixDateTimeConverter.cs"];
m17_286 [label="Entry System.IO.StringWriter.GetStringBuilder()", span="0-0", cluster="System.IO.StringWriter.GetStringBuilder()", file="UnixDateTimeConverter.cs"];
m17_288 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", span="740-740", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="UnixDateTimeConverter.cs"];
m17_290 [label="JsonSerializer jsonSerializer = new JsonSerializer()", span="744-744", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="UnixDateTimeConverter.cs"];
m17_292 [label="StringWriter sw = new StringWriter()", span="747-747", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="UnixDateTimeConverter.cs"];
m17_294 [label="Assert.AreEqual(@''{''''Color'''':2,''''Establised'''':''''\/Date(1264122061000+0000)\/'''',''''Width'''':1.1,''''Employees'''':999,''''RoomsPerFloor'''':[1,2,3,4,5,6,7,8,9],''''Open'''':false,''''Symbol'''':''''@'''',''''Mottos'''':[''''Hello World'''',''''������\\'{new Date(12345);}[222]_�@��~'''',null,'''' ''''],''''Cost'''':100980.1,''''Escape'''':''''\r\n\t\f\b?{\\r\\n\''''''''',''''product'''':[{''''Name'''':''''Rocket'''',''''Expiry'''':''''\/Date(949532490000)\/'''',''''Price'''':0},{''''Name'''':''''Alien'''',''''Expiry'''':''''\/Date(946684800000)\/'''',''''Price'''':0}]}'', sw.GetStringBuilder().ToString())", span="752-752", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="UnixDateTimeConverter.cs"];
m17_296 [label="Assert.AreEqual(''\r\n\t\f\b?{\\r\\n\''\''', s2.Escape)", span="755-755", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="UnixDateTimeConverter.cs"];
m17_298 [label="Assert.AreEqual(''\r\n\t\f\b?{\\r\\n\''\''', s3.Escape)", span="758-758", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="UnixDateTimeConverter.cs"];
m17_300 [label="Assert.AreEqual(s1.Establised, s3.Establised)", span="761-761", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="UnixDateTimeConverter.cs"];
m17_302 [label="Newtonsoft.Json.Tests.Product", span="", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="UnixDateTimeConverter.cs"];
m17_304 [label="Newtonsoft.Json.Tests.JsonSerializerTest.Article", span="", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="UnixDateTimeConverter.cs"];
m17_283 [label="Entry Newtonsoft.Json.Tests.ProductCollection.ProductCollection()", span="66-66", cluster="Newtonsoft.Json.Tests.ProductCollection.ProductCollection()", file="UnixDateTimeConverter.cs"];
m17_285 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="517-517", cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="UnixDateTimeConverter.cs"];
m17_287 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="UnixDateTimeConverter.cs"];
m17_289 [label="Store s1 = new Store()", span="742-742", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="UnixDateTimeConverter.cs"];
m17_291 [label="jsonSerializer.NullValueHandling = NullValueHandling.Ignore", span="745-745", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="UnixDateTimeConverter.cs"];
m17_293 [label="jsonSerializer.Serialize(sw, s1)", span="748-748", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="UnixDateTimeConverter.cs"];
m17_295 [label="Store s2 = (Store)jsonSerializer.Deserialize(new JsonReader(new StringReader(''{}'')), typeof(Store))", span="754-754", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="UnixDateTimeConverter.cs"];
m17_297 [label="Store s3 = (Store)jsonSerializer.Deserialize(new JsonReader(new StringReader(@''{''''Escape'''':null}'')), typeof(Store))", span="757-757", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="UnixDateTimeConverter.cs"];
m17_299 [label="Store s4 = (Store)jsonSerializer.Deserialize(new JsonReader(new StringReader(@''{''''Color'''':2,''''Establised'''':''''\/Date(1264071600000+1300)\/'''',''''Width'''':1.1,''''Employees'''':999,''''RoomsPerFloor'''':[1,2,3,4,5,6,7,8,9],''''Open'''':false,''''Symbol'''':''''@'''',''''Mottos'''':[''''Hello World'''',''''������\\'{new Date(12345);}[222]_�@��~'''',null,'''' ''''],''''Cost'''':100980.1,''''Escape'''':''''\r\n\t\f\b?{\\r\\n\''''''''',''''product'''':[{''''Name'''':''''Rocket'''',''''Expiry'''':''''\/Date(949485690000+1300)\/'''',''''Price'''':0},{''''Name'''':''''Alien'''',''''Expiry'''':''''\/Date(946638000000)\/'''',''''Price'''':0}]}'')), typeof(Store))", span="760-760", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="UnixDateTimeConverter.cs"];
m17_301 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", span="740-740", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="UnixDateTimeConverter.cs"];
m17_303 [label="Newtonsoft.Json.Tests.Store", span="", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="UnixDateTimeConverter.cs"];
m17_305 [label="Exit Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", span="523-523", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="UnixDateTimeConverter.cs"];
m17_0 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", span="51-51", cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="UnixDateTimeConverter.cs"];
m17_1 [label="_value = value", span="53-53", cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", color=green, community=0, file="UnixDateTimeConverter.cs"];
m17_2 [label="_valueType = type", span="54-54", cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="UnixDateTimeConverter.cs"];
m17_3 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", span="51-51", cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="UnixDateTimeConverter.cs"];
m17_74 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="UnixDateTimeConverter.cs"];
m17_75 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()", file="UnixDateTimeConverter.cs"];
m17_76 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", span="204-204", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="UnixDateTimeConverter.cs"];
m17_77 [label="MethodExecutorObject executorObject = new MethodExecutorObject()", span="206-206", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="UnixDateTimeConverter.cs"];
m17_79 [label="executorObject.serverMethodParams = new object[] { ''21321546'', ''101'', ''1236'', ''D:\\1.txt'' }", span="208-208", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="UnixDateTimeConverter.cs"];
m17_80 [label="executorObject.clientGetResultFunction = ''ClientBanSubsCB''", span="209-209", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="UnixDateTimeConverter.cs"];
m17_81 [label="string output = JavaScriptConvert.SerializeObject(executorObject)", span="211-211", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="UnixDateTimeConverter.cs"];
m17_82 [label="MethodExecutorObject executorObject2 = JavaScriptConvert.DeserializeObject(output, typeof(MethodExecutorObject)) as MethodExecutorObject", span="213-213", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="UnixDateTimeConverter.cs"];
m17_83 [label="Assert.AreNotSame(executorObject, executorObject2)", span="215-215", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="UnixDateTimeConverter.cs"];
m17_87 [label="Assert.AreEqual(executorObject2.clientGetResultFunction, ''ClientBanSubsCB'')", span="219-219", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="UnixDateTimeConverter.cs"];
m17_88 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", span="204-204", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="UnixDateTimeConverter.cs"];
m17_104 [label="string value = JavaScriptConvert.SerializeObject(new GetOnlyPropertyClass())", span="261-261", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="UnixDateTimeConverter.cs"];
m17_105 [label="GetOnlyPropertyClass c = JavaScriptConvert.DeserializeObject<GetOnlyPropertyClass>(value)", span="263-263", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="UnixDateTimeConverter.cs"];
m17_106 [label="Assert.AreEqual(c.Field, ''Field'')", span="265-265", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="UnixDateTimeConverter.cs"];
m17_109 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.GetOnlyPropertyClass.GetOnlyPropertyClass()", span="248-248", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GetOnlyPropertyClass.GetOnlyPropertyClass()", file="UnixDateTimeConverter.cs"];
m17_111 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="280-280", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="UnixDateTimeConverter.cs"];
m17_112 [label="string value = JavaScriptConvert.SerializeObject(new SetOnlyPropertyClass())", span="282-282", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="UnixDateTimeConverter.cs"];
m17_119 [label="Assert.AreEqual(@''{''''Field'''':0,''''Property'''':21}'', json)", span="315-315", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeTest()", file="UnixDateTimeConverter.cs"];
m17_121 [label="Assert.AreEqual(0, c.IgnoredField)", span="319-319", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeTest()", file="UnixDateTimeConverter.cs"];
m17_122 [label="Assert.AreEqual(99, c.Field)", span="320-320", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeTest()", file="UnixDateTimeConverter.cs"];
m17_131 [label="Entry Newtonsoft.Json.JavaScriptConvert.DeserializeObject(string)", span="404-404", cluster="Newtonsoft.Json.JavaScriptConvert.DeserializeObject(string)", file="UnixDateTimeConverter.cs"];
m17_133 [label="string jsonText = @''{\r\n'''''''':'''''''',\r\n''''label'''': [\r\n       [''''SomeName'''',6]\r\n],\r\n''''torrents'''': [\r\n       [''''192D99A5C943555CB7F00A852821CF6D6DB3008A'''',201,''''filename.avi'''',178311826,1000,178311826,72815250,408,1603,7,121430,''''NameOfLabelPrevioslyDefined'''',3,6,0,8,128954,-1,0],\r\n],\r\n''''torrentc'''': ''''1816000723''''\r\n}''", span="412-421", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", file="UnixDateTimeConverter.cs"];
m17_134 [label="JavaScriptObject o = (JavaScriptObject)JavaScriptConvert.DeserializeObject(jsonText)", span="423-423", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", file="UnixDateTimeConverter.cs"];
m17_136 [label="JavaScriptArray torrentsArray = (JavaScriptArray)o[''torrents'']", span="426-426", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", file="UnixDateTimeConverter.cs"];
m17_78 [label="executorObject.serverClassName = ''BanSubs''", span="207-207", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="UnixDateTimeConverter.cs"];
m17_84 [label="Assert.AreEqual(executorObject2.serverClassName, ''BanSubs'')", span="216-216", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="UnixDateTimeConverter.cs"];
m17_90 [label="Entry Unk.AreNotSame", span="", cluster="Unk.AreNotSame", file="UnixDateTimeConverter.cs"];
m17_108 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="259-259", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="UnixDateTimeConverter.cs"];
m17_118 [label="string json = JavaScriptConvert.SerializeObject(new JsonIgnoreAttributeTestClass())", span="313-313", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeTest()", file="UnixDateTimeConverter.cs"];
m17_124 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", span="289-289", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", file="UnixDateTimeConverter.cs"];
m17_85 [label="Assert.AreEqual(executorObject2.serverMethodParams.Length, 4)", span="217-217", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="UnixDateTimeConverter.cs"];
m17_86 [label="Assert.Contains(''101'', executorObject2.serverMethodParams)", span="218-218", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="UnixDateTimeConverter.cs"];
m17_89 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.MethodExecutorObject.MethodExecutorObject()", span="196-196", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MethodExecutorObject.MethodExecutorObject()", file="UnixDateTimeConverter.cs"];
m17_103 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="259-259", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="UnixDateTimeConverter.cs"];
m17_107 [label="Assert.AreEqual(c.GetOnlyProperty, ''GetOnlyProperty'')", span="266-266", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="UnixDateTimeConverter.cs"];
m17_113 [label="SetOnlyPropertyClass c = JavaScriptConvert.DeserializeObject<SetOnlyPropertyClass>(value)", span="284-284", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="UnixDateTimeConverter.cs"];
m17_117 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeTest()", span="311-311", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeTest()", file="UnixDateTimeConverter.cs"];
m17_115 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="280-280", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="UnixDateTimeConverter.cs"];
m17_114 [label="Assert.AreEqual(c.Field, ''Field'')", span="286-286", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="UnixDateTimeConverter.cs"];
m17_116 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SetOnlyPropertyClass.SetOnlyPropertyClass()", span="269-269", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SetOnlyPropertyClass.SetOnlyPropertyClass()", file="UnixDateTimeConverter.cs"];
m17_120 [label="JsonIgnoreAttributeTestClass c = JavaScriptConvert.DeserializeObject<JsonIgnoreAttributeTestClass>(@''{''''Field'''':99,''''Property'''':-1,''''IgnoredField'''':-1}'')", span="317-317", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeTest()", file="UnixDateTimeConverter.cs"];
m17_123 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeTest()", span="311-311", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeTest()", file="UnixDateTimeConverter.cs"];
m17_132 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", span="410-410", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", file="UnixDateTimeConverter.cs"];
m17_135 [label="Assert.AreEqual(4, o.Count)", span="424-424", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", file="UnixDateTimeConverter.cs"];
m17_137 [label="JavaScriptArray nestedTorrentsArray = (JavaScriptArray)torrentsArray[0]", span="427-427", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", file="UnixDateTimeConverter.cs"];
m17_434 [label="Entry System.IFormattable.ToString(string, System.IFormatProvider)", span="0-0", cluster="System.IFormattable.ToString(string, System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_140 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", span="452-452", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", file="UnixDateTimeConverter.cs"];
m17_151 [label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.ByteArrayCompare(byte[], byte[])", span="78-78", cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.ByteArrayCompare(byte[], byte[])", file="UnixDateTimeConverter.cs"];
m17_153 [label="Entry System.Uri.ToString()", span="0-0", cluster="System.Uri.ToString()", file="UnixDateTimeConverter.cs"];
m17_423 [label="Entry Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", span="793-793", cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_427 [label="_value == null", span="795-795", cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_431 [label="return formattable.ToString(format, formatProvider);", span="800-800", cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_428 [label="return string.Empty;", span="796-796", cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_429 [label="IFormattable formattable = _value as IFormattable", span="798-798", cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_430 [label="formattable != null", span="799-799", cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_432 [label="return _value.ToString();", span="802-802", cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_433 [label="Exit Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", span="793-793", cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_545 [label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", span="1000-1000", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_546 [label="return (decimal)this;", span="1002-1002", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_547 [label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", span="1000-1000", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_11 [label="Entry Newtonsoft.Json.Tests.Store.Store()", span="92-92", cluster="Newtonsoft.Json.Tests.Store.Store()", file="UnixDateTimeConverter.cs"];
m17_306 [label="Entry Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", span="564-564", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="UnixDateTimeConverter.cs"];
m17_308 [label="current == null", span="566-566", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="UnixDateTimeConverter.cs"];
m17_310 [label="current.Value", span="569-569", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="UnixDateTimeConverter.cs"];
m17_314 [label="return current.Value;", span="574-574", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="UnixDateTimeConverter.cs"];
m17_309 [label="return JTokenType.String;", span="567-567", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="UnixDateTimeConverter.cs"];
m17_311 [label="JTokenType.Comment", span="571-571", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="UnixDateTimeConverter.cs"];
m17_315 [label="return JTokenType.String;", span="576-576", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="UnixDateTimeConverter.cs"];
m17_312 [label="JTokenType.String", span="572-572", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="UnixDateTimeConverter.cs"];
m17_313 [label="JTokenType.Raw", span="573-573", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="UnixDateTimeConverter.cs"];
m17_316 [label="Exit Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", span="564-564", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="UnixDateTimeConverter.cs"];
m17_508 [label="Entry System.Type.GetTypeCode(System.Type)", span="0-0", cluster="System.Type.GetTypeCode(System.Type)", file="UnixDateTimeConverter.cs"];
m17_385 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)", span="950-950", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)", file="UnixDateTimeConverter.cs"];
m17_155 [label="Entry System.TimeSpan.CompareTo(System.TimeSpan)", span="0-0", cluster="System.TimeSpan.CompareTo(System.TimeSpan)", file="UnixDateTimeConverter.cs"];
m17_246 [label="ExpressionType.Add", span="474-474", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="UnixDateTimeConverter.cs"];
m17_148 [label="Assert.AreEqual(test.SweetCakesCount, test2.SweetCakesCount)", span="465-465", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", file="UnixDateTimeConverter.cs"];
m17_56 [label="Assert.AreEqual(''Orange'', p.Name)", span="171-171", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JavaScriptConvertSerializer()", file="UnixDateTimeConverter.cs"];
m17_410 [label="Entry Newtonsoft.Json.Linq.JValue.GetHashCode()", span="739-739", cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="UnixDateTimeConverter.cs"];
m17_411 [label="_value == null", span="741-741", cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="UnixDateTimeConverter.cs"];
m17_412 [label="return 0;", span="742-742", cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="UnixDateTimeConverter.cs"];
m17_413 [label="return _value.GetHashCode();", span="744-744", cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="UnixDateTimeConverter.cs"];
m17_414 [label="Exit Newtonsoft.Json.Linq.JValue.GetHashCode()", span="739-739", cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="UnixDateTimeConverter.cs"];
m17_34 [label="other == this", span="180-180", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="UnixDateTimeConverter.cs"];
m17_208 [label="ExpressionType.Multiply", span="419-419", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="UnixDateTimeConverter.cs"];
m17_171 [label="objA == null || objB == null", span="365-365", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="UnixDateTimeConverter.cs"];
m17_258 [label="ExpressionType.Divide", span="486-486", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="UnixDateTimeConverter.cs"];
m17_25 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", span="152-152", cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", file="UnixDateTimeConverter.cs"];
m17_147 [label="Assert.AreEqual(test.Pie, test2.Pie)", span="464-464", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", file="UnixDateTimeConverter.cs"];
m17_38 [label="product.Name = ''Apple''", span="137-137", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="UnixDateTimeConverter.cs"];
m17_394 [label="return (v1 == v2 || (v1._valueType == v2._valueType && Compare(v1._valueType, v1._value, v2._value) == 0));", span="693-693", cluster="Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="UnixDateTimeConverter.cs"];
m17_395 [label="Exit Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", span="691-691", cluster="Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="UnixDateTimeConverter.cs"];
m17_435 [label="Entry Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", span="813-813", cluster="Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", file="UnixDateTimeConverter.cs"];
m17_436 [label="return new DynamicProxyMetaObject<JValue>(parameter, this, new JValueDynamicProxy(), true);", span="815-815", cluster="Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", file="UnixDateTimeConverter.cs"];
m17_437 [label="Exit Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", span="813-813", cluster="Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", file="UnixDateTimeConverter.cs"];
m17_438 [label="Entry Newtonsoft.Json.Utilities.DynamicProxyMetaObject<T>.DynamicProxyMetaObject(System.Linq.Expressions.Expression, T, Newtonsoft.Json.Utilities.DynamicProxy<T>, bool)", span="40-40", cluster="Newtonsoft.Json.Utilities.DynamicProxyMetaObject<T>.DynamicProxyMetaObject(System.Linq.Expressions.Expression, T, Newtonsoft.Json.Utilities.DynamicProxy<T>, bool)", file="UnixDateTimeConverter.cs"];
m17_14 [label="Mottos.Add(null)", span="96-96", cluster="Newtonsoft.Json.Tests.Store.Store()", file="UnixDateTimeConverter.cs", color=green, community=0];
m17_15 [label="Mottos.Add('' '')", span="97-97", cluster="Newtonsoft.Json.Tests.Store.Store()", file="UnixDateTimeConverter.cs"];
m17_144 [label="string jsonText = JavaScriptConvert.SerializeObject(test)", span="458-458", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", file="UnixDateTimeConverter.cs"];
m17_236 [label="ExpressionType.DivideAssign", span="455-455", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="UnixDateTimeConverter.cs"];
m17_548 [label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", span="1005-1005", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_549 [label="return (DateTime)this;", span="1007-1007", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_550 [label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", span="1005-1005", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_164 [label="Entry Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", span="103-103", cluster="Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", file="UnixDateTimeConverter.cs"];
m17_165 [label="Entry Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", span="351-351", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="UnixDateTimeConverter.cs"];
m17_166 [label="objA is string || objB is string", span="353-353", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="UnixDateTimeConverter.cs"];
m17_168 [label="result = ((objA != null) ? objA.ToString() : null) + ((objB != null) ? objB.ToString() : null)", span="357-357", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="UnixDateTimeConverter.cs"];
m17_169 [label="return true;", span="358-358", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="UnixDateTimeConverter.cs"];
m17_167 [label="operation == ExpressionType.Add || operation == ExpressionType.AddAssign", span="355-355", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="UnixDateTimeConverter.cs"];
m17_170 [label="objA is BigInteger || objB is BigInteger", span="363-363", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="UnixDateTimeConverter.cs"];
m17_145 [label="Assert.AreEqual(@''{''''pie'''':''''Delicious'''',''''pie1'''':''''PieChart!'''',''''sweet_cakes_count'''':2147483647}'', jsonText)", span="460-460", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", file="UnixDateTimeConverter.cs"];
m17_53 [label="Entry System.Math.Truncate(decimal)", span="0-0", cluster="System.Math.Truncate(decimal)", file="UnixDateTimeConverter.cs"];
m17_58 [label="Entry System.Math.Abs(double)", span="0-0", cluster="System.Math.Abs(double)", file="UnixDateTimeConverter.cs"];
m17_54 [label="Entry System.Math.Abs(decimal)", span="0-0", cluster="System.Math.Abs(decimal)", file="UnixDateTimeConverter.cs"];
m17_59 [label="Entry double.CompareTo(double)", span="0-0", cluster="double.CompareTo(double)", file="UnixDateTimeConverter.cs"];
m17_238 [label="return true;", span="457-457", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="UnixDateTimeConverter.cs"];
m17_376 [label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="772-772", cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="UnixDateTimeConverter.cs"];
m17_378 [label="Entry Unk.WriteValue", span="", cluster="Unk.WriteValue", file="UnixDateTimeConverter.cs"];
m17_52 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="UnixDateTimeConverter.cs"];
m17_188 [label="return true;", span="389-389", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="UnixDateTimeConverter.cs"];
m17_189 [label="ExpressionType.Divide", span="390-390", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="UnixDateTimeConverter.cs"];
m17_190 [label="ExpressionType.DivideAssign", span="391-391", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="UnixDateTimeConverter.cs"];
m17_191 [label="result = i1 / i2", span="392-392", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="UnixDateTimeConverter.cs"];
m17_192 [label="return true;", span="393-393", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="UnixDateTimeConverter.cs"];
m17_193 [label="objA is ulong || objB is ulong || objA is decimal || objB is decimal", span="398-398", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="UnixDateTimeConverter.cs"];
m17_194 [label="objA == null || objB == null", span="400-400", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="UnixDateTimeConverter.cs"];
m17_195 [label="result = null", span="402-402", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="UnixDateTimeConverter.cs"];
m17_198 [label="decimal d2 = Convert.ToDecimal(objB, CultureInfo.InvariantCulture)", span="407-407", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="UnixDateTimeConverter.cs"];
m17_201 [label="ExpressionType.AddAssign", span="412-412", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="UnixDateTimeConverter.cs"];
m17_202 [label="result = d1 + d2", span="413-413", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="UnixDateTimeConverter.cs"];
m17_203 [label="return true;", span="414-414", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="UnixDateTimeConverter.cs"];
m17_204 [label="ExpressionType.Subtract", span="415-415", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="UnixDateTimeConverter.cs"];
m17_205 [label="ExpressionType.SubtractAssign", span="416-416", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="UnixDateTimeConverter.cs"];
m17_196 [label="return true;", span="403-403", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="UnixDateTimeConverter.cs"];
m17_199 [label=operation, span="409-409", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="UnixDateTimeConverter.cs"];
m17_197 [label="decimal d1 = Convert.ToDecimal(objA, CultureInfo.InvariantCulture)", span="406-406", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="UnixDateTimeConverter.cs"];
m17_200 [label="ExpressionType.Add", span="411-411", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="UnixDateTimeConverter.cs"];
m17_206 [label="result = d1 - d2", span="417-417", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="UnixDateTimeConverter.cs"];
m17_384 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="875-875", cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="UnixDateTimeConverter.cs"];
m17_6 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(long)", span="70-70", cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="UnixDateTimeConverter.cs"];
m17_7 [label="Entry Newtonsoft.Json.Tests.Product.GetHashCode()", span="60-60", cluster="Newtonsoft.Json.Tests.Product.GetHashCode()", file="UnixDateTimeConverter.cs"];
m17_156 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)", file="UnixDateTimeConverter.cs"];
m17_524 [label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16(System.IFormatProvider)", span="965-965", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_525 [label="return (ushort)this;", span="967-967", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_526 [label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16(System.IFormatProvider)", span="965-965", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_509 [label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToBoolean(System.IFormatProvider)", span="940-940", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToBoolean(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_510 [label="return (bool)this;", span="942-942", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToBoolean(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_511 [label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToBoolean(System.IFormatProvider)", span="940-940", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToBoolean(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_439 [label="Entry Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.JValueDynamicProxy()", span="818-818", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.JValueDynamicProxy()", file="UnixDateTimeConverter.cs"];
m17_174 [label="string jsonText = JavaScriptConvert.SerializeObject(r1)", span="524-524", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="UnixDateTimeConverter.cs"];
m17_175 [label="ReadOnlyCollection<int> r2 = JavaScriptConvert.DeserializeObject<ReadOnlyCollection<int>>(jsonText)", span="526-526", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="UnixDateTimeConverter.cs"];
m17_176 [label="CollectionAssert.AreEqual(r1, r2)", span="528-528", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="UnixDateTimeConverter.cs"];
m17_216 [label="Assert.AreEqual(1, jsonNetResult.Count)", span="628-628", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", file="UnixDateTimeConverter.cs"];
m17_217 [label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="629-629", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", file="UnixDateTimeConverter.cs"];
m17_220 [label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0", cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="UnixDateTimeConverter.cs"];
m17_221 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="UnixDateTimeConverter.cs"];
m17_222 [label="Entry Unk.ReadObject", span="", cluster="Unk.ReadObject", file="UnixDateTimeConverter.cs"];
m17_239 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="UnixDateTimeConverter.cs"];
m17_243 [label="string result = JavaScriptConvert.SerializeObject(testDates)", span="668-668", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeOffset()", file="UnixDateTimeConverter.cs"];
m17_244 [label="Assert.AreEqual(@''[''''\/Date(-59011455539000+0000)\/'''',''''\/Date(946688461000+0000)\/'''',''''\/Date(946641661000+1300)\/'''',''''\/Date(946701061000-0330)\/'''']'', result)", span="669-669", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeOffset()", file="UnixDateTimeConverter.cs"];
m17_245 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeOffset()", span="659-659", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeOffset()", file="UnixDateTimeConverter.cs"];
m17_172 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.ReadOnlyCollectionSerialize()", span="520-520", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="UnixDateTimeConverter.cs"];
m17_173 [label="ReadOnlyCollection<int> r1 = new ReadOnlyCollection<int>(new int[] { 0, 1, 2, 3, 4 })", span="522-522", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="UnixDateTimeConverter.cs"];
m17_179 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", span="553-553", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", file="UnixDateTimeConverter.cs"];
m17_183 [label="product.Price = 3.99M", span="559-559", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", file="UnixDateTimeConverter.cs"];
m17_187 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", span="553-553", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", file="UnixDateTimeConverter.cs"];
m17_177 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.ReadOnlyCollectionSerialize()", span="520-520", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="UnixDateTimeConverter.cs"];
m17_181 [label="product.Name = ''Apple''", span="557-557", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", file="UnixDateTimeConverter.cs"];
m17_185 [label="string output = JavaScriptConvert.SerializeObject(product)", span="562-562", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", file="UnixDateTimeConverter.cs"];
m17_178 [label="Entry System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", span="0-0", cluster="System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", file="UnixDateTimeConverter.cs"];
m17_180 [label="Product product = new Product()", span="555-555", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", file="UnixDateTimeConverter.cs"];
m17_182 [label="product.Expiry = new DateTime(2008, 12, 28)", span="558-558", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", file="UnixDateTimeConverter.cs"];
m17_184 [label="product.Sizes = new string[] { ''Small'', ''Medium'', ''Large'' }", span="560-560", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", file="UnixDateTimeConverter.cs"];
m17_186 [label="ProductShort deserializedProductShort = (ProductShort)JavaScriptConvert.DeserializeObject(output, typeof(ProductShort))", span="574-574", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", file="UnixDateTimeConverter.cs"];
m17_214 [label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="624-624", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", file="UnixDateTimeConverter.cs"];
m17_212 [label="string json = @''[''''PRE\u003cPOST'''']''", span="621-621", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", file="UnixDateTimeConverter.cs"];
m17_207 [label="return true;", span="418-418", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="UnixDateTimeConverter.cs"];
m17_209 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="UnixDateTimeConverter.cs"];
m17_211 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", span="619-619", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", file="UnixDateTimeConverter.cs"];
m17_213 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="623-623", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", file="UnixDateTimeConverter.cs"];
m17_215 [label="List<string> jsonNetResult = JavaScriptConvert.DeserializeObject<List<string>>(json)", span="626-626", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", file="UnixDateTimeConverter.cs"];
m17_218 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", span="619-619", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", file="UnixDateTimeConverter.cs"];
m17_219 [label="Entry DataContractJsonSerializer.cstr", span="", cluster="DataContractJsonSerializer.cstr", file="UnixDateTimeConverter.cs"];
m17_225 [label="string result", span="643-643", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTime()", file="UnixDateTimeConverter.cs"];
m17_229 [label="ms.Seek(0, SeekOrigin.Begin)", span="649-649", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTime()", file="UnixDateTimeConverter.cs"];
m17_233 [label="Assert.AreEqual(expected, result)", span="655-655", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTime()", file="UnixDateTimeConverter.cs"];
m17_237 [label="Entry Unk.WriteObject", span="", cluster="Unk.WriteObject", file="UnixDateTimeConverter.cs"];
m17_223 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DateTime()", span="633-633", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTime()", file="UnixDateTimeConverter.cs"];
m17_227 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<DateTime>))", span="647-647", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTime()", file="UnixDateTimeConverter.cs"];
m17_231 [label="string expected = sr.ReadToEnd()", span="652-652", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTime()", file="UnixDateTimeConverter.cs"];
m17_235 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="UnixDateTimeConverter.cs"];
m17_224 [label="List<DateTime> testDates = new List<DateTime> {\r\n        new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n        new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n        new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n        new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n        new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n        new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n      }", span="635-642", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTime()", file="UnixDateTimeConverter.cs"];
m17_226 [label="MemoryStream ms = new MemoryStream()", span="646-646", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTime()", file="UnixDateTimeConverter.cs"];
m17_228 [label="s.WriteObject(ms, testDates)", span="648-648", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTime()", file="UnixDateTimeConverter.cs"];
m17_230 [label="StreamReader sr = new StreamReader(ms)", span="650-650", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTime()", file="UnixDateTimeConverter.cs"];
m17_232 [label="result = JavaScriptConvert.SerializeObject(testDates)", span="654-654", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTime()", file="UnixDateTimeConverter.cs"];
m17_234 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DateTime()", span="633-633", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTime()", file="UnixDateTimeConverter.cs"];
m17_262 [label="Assert.AreEqual(@''{''''StringValue'''':''''I am a string'''',''''IntValue'''':2147483647,''''NestedAnonymous'''':{''''NestedValue'''':255},''''NestedArray'''':[1,2],''''Product'''':{''''Name'''':''''TestProduct'''',''''Expiry'''':''''\/Date(946684800000)\/'''',''''Price'''':0,''''Sizes'''':null}}'', json)", span="702-702", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="UnixDateTimeConverter.cs"];
m17_241 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeOffset()", span="659-659", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeOffset()", file="UnixDateTimeConverter.cs"];
m17_242 [label="List<DateTimeOffset> testDates = new List<DateTimeOffset> {\r\n        new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n        new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n        new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n        new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n      }", span="661-666", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeOffset()", file="UnixDateTimeConverter.cs"];
m17_248 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="UnixDateTimeConverter.cs"];
m17_252 [label="values.Add(int.MinValue, int.MaxValue)", span="677-677", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", file="UnixDateTimeConverter.cs"];
m17_256 [label="CollectionAssert.AreEqual(values, newValues)", span="685-685", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", file="UnixDateTimeConverter.cs"];
m17_260 [label="var anonymous =\r\n        new\r\n        {\r\n          StringValue = ''I am a string'',\r\n          IntValue = int.MaxValue,\r\n          NestedAnonymous = new { NestedValue = byte.MaxValue },\r\n          NestedArray = new[] { 1, 2 },\r\n          Product = new Product() { Name = ''TestProduct'' }\r\n        }", span="691-699", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="UnixDateTimeConverter.cs"];
m17_250 [label="Dictionary<int, int> values = new Dictionary<int, int>()", span="675-675", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", file="UnixDateTimeConverter.cs"];
m17_254 [label="Assert.AreEqual(@''{''''-5'''':6,''''-2147483648'''':2147483647}'', json)", span="681-681", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", file="UnixDateTimeConverter.cs"];
m17_247 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="UnixDateTimeConverter.cs"];
m17_249 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", span="673-673", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", file="UnixDateTimeConverter.cs"];
m17_251 [label="values.Add(-5, 6)", span="676-676", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", file="UnixDateTimeConverter.cs"];
m17_253 [label="string json = JavaScriptConvert.SerializeObject(values)", span="679-679", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", file="UnixDateTimeConverter.cs"];
m17_255 [label="Dictionary<int, int> newValues = JavaScriptConvert.DeserializeObject<Dictionary<int, int>>(json)", span="683-683", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", file="UnixDateTimeConverter.cs"];
m17_257 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", span="673-673", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", file="UnixDateTimeConverter.cs"];
m17_259 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", span="689-689", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="UnixDateTimeConverter.cs"];
m17_261 [label="string json = JavaScriptConvert.SerializeObject(anonymous)", span="701-701", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="UnixDateTimeConverter.cs"];
m17_263 [label="anonymous = JavaScriptConvert.DeserializeAnonymousType(json, anonymous)", span="704-704", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="UnixDateTimeConverter.cs"];
m17_264 [label="Assert.AreEqual(''I am a string'', anonymous.StringValue)", span="705-705", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="UnixDateTimeConverter.cs"];
m17_51 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="UnixDateTimeConverter.cs"];
m17_409 [label="Entry object.Equals(object)", span="0-0", cluster="object.Equals(object)", file="UnixDateTimeConverter.cs"];
m17_373 [label="Entry Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="44-44", cluster="Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="UnixDateTimeConverter.cs"];
m17_554 [label="Entry Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", span="1690-1690", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="UnixDateTimeConverter.cs"];
m17_150 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClass.JsonPropertyClass()", span="431-431", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClass.JsonPropertyClass()", file="UnixDateTimeConverter.cs"];
m17_266 [label="Assert.AreEqual(255, anonymous.NestedAnonymous.NestedValue)", span="707-707", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="UnixDateTimeConverter.cs"];
m17_267 [label="Assert.AreEqual(2, anonymous.NestedArray.Length)", span="708-708", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="UnixDateTimeConverter.cs"];
m17_268 [label="Assert.AreEqual(1, anonymous.NestedArray[0])", span="709-709", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="UnixDateTimeConverter.cs"];
m17_372 [label="Entry Newtonsoft.Json.JsonSerializer.CreateDefault()", span="475-475", cluster="Newtonsoft.Json.JsonSerializer.CreateDefault()", file="UnixDateTimeConverter.cs"];
m17_440 [label="Entry Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", span="820-820", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="UnixDateTimeConverter.cs"];
m17_441 [label="binder.Type == typeof(JValue)", span="822-822", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="UnixDateTimeConverter.cs"];
m17_442 [label="result = instance", span="824-824", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="UnixDateTimeConverter.cs"];
m17_444 [label="object value = instance.Value", span="828-828", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="UnixDateTimeConverter.cs"];
m17_447 [label="return ReflectionUtils.IsNullable(binder.Type);", span="833-833", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="UnixDateTimeConverter.cs"];
m17_448 [label="result = ConvertUtils.Convert(instance.Value, CultureInfo.InvariantCulture, binder.Type)", span="836-836", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="UnixDateTimeConverter.cs"];
m17_443 [label="return true;", span="825-825", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="UnixDateTimeConverter.cs"];
m17_445 [label="value == null", span="830-830", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="UnixDateTimeConverter.cs"];
m17_446 [label="result = null", span="832-832", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="UnixDateTimeConverter.cs"];
m17_449 [label="return true;", span="837-837", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="UnixDateTimeConverter.cs"];
m17_450 [label="Exit Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", span="820-820", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="UnixDateTimeConverter.cs"];
m17_20 [label="alien.Name = ''Alien''", span="103-103", cluster="Newtonsoft.Json.Tests.Store.Store()", file="UnixDateTimeConverter.cs"];
m17_21 [label="product.Add(rocket)", span="105-105", cluster="Newtonsoft.Json.Tests.Store.Store()", file="UnixDateTimeConverter.cs"];
m17_24 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", span="152-152", cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", file="UnixDateTimeConverter.cs"];
m17_515 [label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSByte(System.IFormatProvider)", span="950-950", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSByte(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_516 [label="return (sbyte)this;", span="952-952", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSByte(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_517 [label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSByte(System.IFormatProvider)", span="950-950", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSByte(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_374 [label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1237-1237", cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="UnixDateTimeConverter.cs"];
m17_377 [label="Entry Newtonsoft.Json.JsonWriter.WriteUndefined()", span="780-780", cluster="Newtonsoft.Json.JsonWriter.WriteUndefined()", file="UnixDateTimeConverter.cs"];
m17_35 [label="return true;", span="181-181", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="UnixDateTimeConverter.cs"];
m17_383 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="810-810", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="UnixDateTimeConverter.cs"];
m17_387 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(byte[])", span="1188-1188", cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte[])", file="UnixDateTimeConverter.cs"];
m17_386 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", span="940-940", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", file="UnixDateTimeConverter.cs"];
m17_420 [label="Entry Newtonsoft.Json.Linq.JValue.ToString(string)", span="768-768", cluster="Newtonsoft.Json.Linq.JValue.ToString(string)", file="UnixDateTimeConverter.cs"];
m17_421 [label="return ToString(format, CultureInfo.CurrentCulture);", span="770-770", cluster="Newtonsoft.Json.Linq.JValue.ToString(string)", file="UnixDateTimeConverter.cs"];
m17_422 [label="Exit Newtonsoft.Json.Linq.JValue.ToString(string)", span="768-768", cluster="Newtonsoft.Json.Linq.JValue.ToString(string)", file="UnixDateTimeConverter.cs"];
m17_533 [label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", span="980-980", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_534 [label="return (long)this;", span="982-982", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_535 [label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", span="980-980", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_13 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(double)", span="98-98", cluster="Newtonsoft.Json.Linq.JValue.JValue(double)", file="UnixDateTimeConverter.cs"];
m17_18 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(bool)", span="125-125", cluster="Newtonsoft.Json.Linq.JValue.JValue(bool)", file="UnixDateTimeConverter.cs"];
m17_12 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(double)", span="98-98", cluster="Newtonsoft.Json.Linq.JValue.JValue(double)", file="UnixDateTimeConverter.cs"];
m17_19 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(bool)", span="125-125", cluster="Newtonsoft.Json.Linq.JValue.JValue(bool)", file="UnixDateTimeConverter.cs"];
m17_143 [label="Entry string.CompareOrdinal(string, string)", span="0-0", cluster="string.CompareOrdinal(string, string)", file="UnixDateTimeConverter.cs"];
m17_142 [label="Entry System.Convert.ToString(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToString(object, System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_149 [label="Entry System.DateTimeOffset.CompareTo(System.DateTimeOffset)", span="0-0", cluster="System.DateTimeOffset.CompareTo(System.DateTimeOffset)", file="UnixDateTimeConverter.cs"];
m17_317 [label="Entry Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="613-613", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_318 [label="converters != null && converters.Length > 0 && _value != null", span="615-615", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_319 [label="JsonConverter matchingConverter = JsonSerializer.GetMatchingConverter(converters, _value.GetType())", span="617-617", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_321 [label="matchingConverter.WriteJson(writer, _value, JsonSerializer.CreateDefault())", span="620-620", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_325 [label="writer.WriteComment((_value != null) ? _value.ToString() : null)", span="628-628", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_328 [label="writer.WriteRawValue((_value != null) ? _value.ToString() : null)", span="631-631", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_331 [label="writer.WriteNull()", span="634-634", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_334 [label="writer.WriteUndefined()", span="637-637", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_338 [label="writer.WriteValue((BigInteger)_value)", span="642-642", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_339 [label="writer.WriteValue(Convert.ToInt64(_value, CultureInfo.InvariantCulture))", span="645-645", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_343 [label="writer.WriteValue((decimal)_value)", span="649-649", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_345 [label="writer.WriteValue((double)_value)", span="651-651", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_347 [label="writer.WriteValue((float)_value)", span="653-653", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_348 [label="writer.WriteValue(Convert.ToDouble(_value, CultureInfo.InvariantCulture))", span="655-655", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_351 [label="writer.WriteValue((_value != null) ? _value.ToString() : null)", span="658-658", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_354 [label="writer.WriteValue(Convert.ToBoolean(_value, CultureInfo.InvariantCulture))", span="661-661", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_358 [label="writer.WriteValue((DateTimeOffset)_value)", span="666-666", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_359 [label="writer.WriteValue(Convert.ToDateTime(_value, CultureInfo.InvariantCulture))", span="669-669", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_362 [label="writer.WriteValue((byte[])_value)", span="672-672", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_367 [label="writer.WriteValue((_value != null) ? _value.ToString() : null)", span="677-677", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_323 [label=_valueType, span="625-625", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_320 [label="matchingConverter != null", span="618-618", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_322 [label="return;", span="621-621", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_324 [label="JTokenType.Comment", span="627-627", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_327 [label="JTokenType.Raw", span="630-630", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_330 [label="JTokenType.Null", span="633-633", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_333 [label="JTokenType.Undefined", span="636-636", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_336 [label="JTokenType.Integer", span="639-639", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_341 [label="JTokenType.Float", span="647-647", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_350 [label="JTokenType.String", span="657-657", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_353 [label="JTokenType.Boolean", span="660-660", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_356 [label="JTokenType.Date", span="663-663", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_361 [label="JTokenType.Bytes", span="671-671", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_364 [label="JTokenType.Guid", span="674-674", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_326 [label="return;", span="629-629", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_329 [label="return;", span="632-632", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_332 [label="return;", span="635-635", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_335 [label="return;", span="638-638", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_337 [label="_value is BigInteger", span="641-641", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_340 [label="return;", span="646-646", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_342 [label="_value is decimal", span="648-648", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_344 [label="_value is double", span="650-650", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_346 [label="_value is float", span="652-652", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_349 [label="return;", span="656-656", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_352 [label="return;", span="659-659", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_355 [label="return;", span="662-662", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_357 [label="_value is DateTimeOffset", span="665-665", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_360 [label="return;", span="670-670", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_363 [label="return;", span="673-673", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_365 [label="JTokenType.Uri", span="675-675", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_366 [label="JTokenType.TimeSpan", span="676-676", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_368 [label="return;", span="678-678", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_370 [label="throw MiscellaneousUtils.CreateArgumentOutOfRangeException(''TokenType'', _valueType, ''Unexpected token type.'');", span="681-681", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_369 [label="Exit Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="613-613", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverter.cs"];
m17_451 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="237-237", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="UnixDateTimeConverter.cs"];
m17_307 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="UnixDateTimeConverter.cs"];
m17_39 [label="product.Expiry = new DateTime(2008, 12, 28)", span="138-138", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="UnixDateTimeConverter.cs"];
m17_40 [label="product.Price = 3.99M", span="139-139", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="UnixDateTimeConverter.cs"];
m17_43 [label="Product deserializedProduct = (Product)JavaScriptConvert.DeserializeObject(output, typeof(Product))", span="154-154", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="UnixDateTimeConverter.cs"];
m17_44 [label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="156-156", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="UnixDateTimeConverter.cs"];
m17_46 [label="Assert.AreEqual(3.99, deserializedProduct.Price)", span="158-158", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="UnixDateTimeConverter.cs"];
m17_47 [label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="159-159", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="UnixDateTimeConverter.cs"];
m17_41 [label="product.Sizes = new string[] { ''Small'', ''Medium'', ''Large'' }", span="140-140", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="UnixDateTimeConverter.cs"];
m17_42 [label="string output = JavaScriptConvert.SerializeObject(product)", span="142-142", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="UnixDateTimeConverter.cs"];
m17_49 [label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="161-161", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="UnixDateTimeConverter.cs"];
m17_45 [label="Assert.AreEqual(new DateTime(2008, 12, 28), deserializedProduct.Expiry)", span="157-157", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="UnixDateTimeConverter.cs"];
m17_48 [label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="160-160", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="UnixDateTimeConverter.cs"];
m17_50 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", span="133-133", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="UnixDateTimeConverter.cs"];
m17_393 [label="Entry System.Enum.GetHashCode()", span="0-0", cluster="System.Enum.GetHashCode()", file="UnixDateTimeConverter.cs"];
m17_8 [label="return (Name ?? string.Empty).GetHashCode();", span="62-62", cluster="Newtonsoft.Json.Tests.Product.GetHashCode()", file="UnixDateTimeConverter.cs"];
m17_9 [label="Exit Newtonsoft.Json.Tests.Product.GetHashCode()", span="60-60", cluster="Newtonsoft.Json.Tests.Product.GetHashCode()", file="UnixDateTimeConverter.cs"];
m17_269 [label="Entry Newtonsoft.Json.Linq.JValue.CreateComment(string)", span="508-508", cluster="Newtonsoft.Json.Linq.JValue.CreateComment(string)", file="UnixDateTimeConverter.cs"];
m17_270 [label="return new JValue(value, JTokenType.Comment);", span="510-510", cluster="Newtonsoft.Json.Linq.JValue.CreateComment(string)", file="UnixDateTimeConverter.cs"];
m17_271 [label="Exit Newtonsoft.Json.Linq.JValue.CreateComment(string)", span="508-508", cluster="Newtonsoft.Json.Linq.JValue.CreateComment(string)", file="UnixDateTimeConverter.cs"];
m17_154 [label="Entry System.Collections.Generic.Comparer<T>.Compare(T, T)", span="0-0", cluster="System.Collections.Generic.Comparer<T>.Compare(T, T)", file="UnixDateTimeConverter.cs"];
m17_392 [label="Entry object.GetHashCode()", span="0-0", cluster="object.GetHashCode()", file="UnixDateTimeConverter.cs"];
m17_521 [label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", span="960-960", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_522 [label="return (short)this;", span="962-962", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_523 [label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", span="960-960", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_424 [label="Entry Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", span="780-780", cluster="Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_425 [label="return ToString(null, formatProvider);", span="782-782", cluster="Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_426 [label="Exit Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", span="780-780", cluster="Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_388 [label="Entry Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", span="684-684", cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="UnixDateTimeConverter.cs"];
m17_389 [label="int valueHashCode = (_value != null) ? _value.GetHashCode() : 0", span="686-686", cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="UnixDateTimeConverter.cs"];
m17_390 [label="return _valueType.GetHashCode() ^ valueHashCode;", span="688-688", cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="UnixDateTimeConverter.cs"];
m17_391 [label="Exit Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", span="684-684", cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="UnixDateTimeConverter.cs"];
m17_551 [label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="1010-1010", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_552 [label="return ToObject(conversionType);", span="1012-1012", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_553 [label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="1010-1010", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_518 [label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", span="955-955", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_519 [label="return (byte)this;", span="957-957", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_520 [label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", span="955-955", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", file="UnixDateTimeConverter.cs"];
m17_494 [label="Entry Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", span="914-914", cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="UnixDateTimeConverter.cs"];
m17_495 [label="obj == null", span="916-916", cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="UnixDateTimeConverter.cs"];
m17_497 [label="return Compare(_valueType, _value, obj._value);", span="919-919", cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="UnixDateTimeConverter.cs"];
m17_496 [label="return 1;", span="917-917", cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="UnixDateTimeConverter.cs"];
m17_498 [label="Exit Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", span="914-914", cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="UnixDateTimeConverter.cs"];
m17_36 [label="return ValuesEquals(this, other);", span="183-183", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="UnixDateTimeConverter.cs"];
m17_37 [label="Exit Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="175-175", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="UnixDateTimeConverter.cs"];
m17_381 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double)", span="866-866", cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="UnixDateTimeConverter.cs"];
m17_33 [label="Entry Newtonsoft.Json.JavaScriptConvert.SerializeObject(object)", span="372-372", cluster="Newtonsoft.Json.JavaScriptConvert.SerializeObject(object)", file="UnixDateTimeConverter.cs"];
m17_401 [label="Entry Newtonsoft.Json.Linq.JValue.Equals(object)", span="721-721", cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="UnixDateTimeConverter.cs"];
m17_402 [label="obj == null", span="723-723", cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="UnixDateTimeConverter.cs"];
m17_404 [label="JValue otherValue = obj as JValue", span="726-726", cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="UnixDateTimeConverter.cs"];
m17_407 [label="return base.Equals(obj);", span="730-730", cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="UnixDateTimeConverter.cs"];
m17_403 [label="return false;", span="724-724", cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="UnixDateTimeConverter.cs"];
m17_405 [label="otherValue != null", span="727-727", cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="UnixDateTimeConverter.cs"];
m17_406 [label="return Equals(otherValue);", span="728-728", cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="UnixDateTimeConverter.cs"];
m17_408 [label="Exit Newtonsoft.Json.Linq.JValue.Equals(object)", span="721-721", cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="UnixDateTimeConverter.cs"];
m17_415 [label="Entry Newtonsoft.Json.Linq.JValue.ToString()", span="753-753", cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="UnixDateTimeConverter.cs"];
m17_416 [label="_value == null", span="755-755", cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="UnixDateTimeConverter.cs"];
m17_417 [label="return string.Empty;", span="756-756", cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="UnixDateTimeConverter.cs"];
m17_418 [label="return _value.ToString();", span="758-758", cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="UnixDateTimeConverter.cs"];
m17_419 [label="Exit Newtonsoft.Json.Linq.JValue.ToString()", span="753-753", cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="UnixDateTimeConverter.cs"];
m17_452 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", span="354-354", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="UnixDateTimeConverter.cs"];
m17_488 [label="Entry Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", span="886-886", cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="UnixDateTimeConverter.cs"];
m17_489 [label="obj == null", span="888-888", cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="UnixDateTimeConverter.cs"];
m17_491 [label="object otherValue = (obj is JValue) ? ((JValue)obj).Value : obj", span="891-891", cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="UnixDateTimeConverter.cs"];
m17_490 [label="return 1;", span="889-889", cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="UnixDateTimeConverter.cs"];
m17_492 [label="return Compare(_valueType, _value, otherValue);", span="893-893", cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="UnixDateTimeConverter.cs"];
m17_493 [label="Exit Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", span="886-886", cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="UnixDateTimeConverter.cs"];
m17_555 [label="Newtonsoft.Json.Linq.JValue", span="", file="UnixDateTimeConverter.cs"];
m18_80 [label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeNullToNullable()", span="172-172", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeNullToNullable()", file="UnixDateTimeConverterTests.cs"];
m18_81 [label="DateTime? result = JsonConvert.DeserializeObject<DateTime?>(''null'', new UnixDateTimeConverter())", span="174-174", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeNullToNullable()", file="UnixDateTimeConverterTests.cs"];
m18_82 [label="Assert.IsNull(result)", span="176-176", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeNullToNullable()", file="UnixDateTimeConverterTests.cs"];
m18_83 [label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeNullToNullable()", span="172-172", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeNullToNullable()", file="UnixDateTimeConverterTests.cs"];
m18_85 [label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidValue()", span="180-180", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidValue()", file="UnixDateTimeConverterTests.cs"];
m18_86 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<DateTime>(''-1'', new UnixDateTimeConverter()),\r\n                ''Cannot convert value that is before Unix epoch of 00:00:00 UTC on 1 January 1970 to System.DateTime. Path '', line 1, position 2.''\r\n            )", span="182-185", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidValue()", file="UnixDateTimeConverterTests.cs"];
m18_87 [label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidValue()", span="180-180", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidValue()", file="UnixDateTimeConverterTests.cs"];
m18_6 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="548-548", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverterTests.cs"];
m18_14 [label="Entry System.DateTime.ToUniversalTime()", span="0-0", cluster="System.DateTime.ToUniversalTime()", file="UnixDateTimeConverterTests.cs"];
m18_58 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="751-751", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverterTests.cs"];
m18_7 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="UnixDateTimeConverterTests.cs"];
m18_66 [label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeStringToDateTimeOffset()", span="146-146", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeStringToDateTimeOffset()", file="UnixDateTimeConverterTests.cs"];
m18_68 [label="Assert.AreEqual(new DateTimeOffset(2018, 1, 1, 21, 1, 16, TimeSpan.Zero), result)", span="150-150", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeStringToDateTimeOffset()", file="UnixDateTimeConverterTests.cs"];
m18_67 [label="DateTimeOffset result = JsonConvert.DeserializeObject<DateTimeOffset>(@''''''1514840476'''''', new UnixDateTimeConverter())", span="148-148", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeStringToDateTimeOffset()", file="UnixDateTimeConverterTests.cs"];
m18_69 [label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeStringToDateTimeOffset()", span="146-146", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeStringToDateTimeOffset()", file="UnixDateTimeConverterTests.cs"];
m18_41 [label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeNullableDateTimeClass()", span="96-96", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeNullableDateTimeClass()", file="UnixDateTimeConverterTests.cs"];
m18_45 [label="Assert.AreEqual(@''{''''PreField'''':null,''''DateTimeField'''':null,''''DateTimeOffsetField'''':null,''''PostField'''':null}'', result)", span="108-108", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeNullableDateTimeClass()", file="UnixDateTimeConverterTests.cs"];
m18_48 [label="Assert.AreEqual(@''{''''PreField'''':null,''''DateTimeField'''':1514840476,''''DateTimeOffsetField'''':2750778,''''PostField'''':null}'', result)", span="117-117", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeNullableDateTimeClass()", file="UnixDateTimeConverterTests.cs"];
m18_43 [label="UnixDateTimeConverter converter = new UnixDateTimeConverter()", span="104-104", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeNullableDateTimeClass()", file="UnixDateTimeConverterTests.cs"];
m18_44 [label="string result = JsonConvert.SerializeObject(t, converter)", span="106-106", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeNullableDateTimeClass()", file="UnixDateTimeConverterTests.cs"];
m18_47 [label="result = JsonConvert.SerializeObject(t, converter)", span="116-116", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeNullableDateTimeClass()", file="UnixDateTimeConverterTests.cs"];
m18_46 [label="t = new NullableDateTimeTestClass\r\n            {\r\n                DateTimeField = new DateTime(2018, 1, 1, 21, 1, 16, DateTimeKind.Utc),\r\n                DateTimeOffsetField = new DateTimeOffset(1970, 2, 1, 20, 6, 18, TimeSpan.Zero)\r\n            }", span="110-114", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeNullableDateTimeClass()", file="UnixDateTimeConverterTests.cs"];
m18_42 [label="NullableDateTimeTestClass t = new NullableDateTimeTestClass\r\n            {\r\n                DateTimeField = null,\r\n                DateTimeOffsetField = null\r\n            }", span="98-102", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeNullableDateTimeClass()", file="UnixDateTimeConverterTests.cs"];
m18_49 [label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeNullableDateTimeClass()", span="96-96", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeNullableDateTimeClass()", file="UnixDateTimeConverterTests.cs"];
m18_8 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="525-525", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="UnixDateTimeConverterTests.cs"];
m18_10 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", color=green, community=0, file="UnixDateTimeConverterTests.cs"];
m18_9 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="UnixDateTimeConverterTests.cs"];
m18_11 [label="string result = JsonConvert.SerializeObject(now, new UnixDateTimeConverter())", span="59-59", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeNow()", file="UnixDateTimeConverterTests.cs"];
m18_12 [label="Assert.AreEqual(nowTicks + '''', result)", span="61-61", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeNow()", color=green, community=0, file="UnixDateTimeConverterTests.cs"];
m18_13 [label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeNow()", span="54-54", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeNow()", file="UnixDateTimeConverterTests.cs"];
m18_84 [label="Entry Unk.IsNull", span="", cluster="Unk.IsNull", file="UnixDateTimeConverterTests.cs"];
m18_40 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="UnixDateTimeConverterTests.cs"];
m18_5 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonObjectAttributeOptIn.Example()", span="53-53", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonObjectAttributeOptIn.Example()", file="UnixDateTimeConverterTests.cs"];
m18_59 [label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeDateTimeOffset()", span="133-133", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeDateTimeOffset()", file="UnixDateTimeConverterTests.cs"];
m18_64 [label="Assert.AreEqual(new DateTimeOffset(1970, 2, 1, 20, 6, 18, TimeSpan.Zero), result)", span="142-142", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeDateTimeOffset()", file="UnixDateTimeConverterTests.cs"];
m18_60 [label="UnixDateTimeConverter converter = new UnixDateTimeConverter()", span="135-135", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeDateTimeOffset()", file="UnixDateTimeConverterTests.cs"];
m18_62 [label="string json = JsonConvert.SerializeObject(d, converter)", span="138-138", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeDateTimeOffset()", file="UnixDateTimeConverterTests.cs"];
m18_63 [label="DateTimeOffset result = JsonConvert.DeserializeObject<DateTimeOffset>(json, converter)", span="140-140", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeDateTimeOffset()", file="UnixDateTimeConverterTests.cs"];
m18_61 [label="DateTimeOffset d = new DateTimeOffset(1970, 2, 1, 20, 6, 18, TimeSpan.Zero)", span="136-136", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeDateTimeOffset()", file="UnixDateTimeConverterTests.cs"];
m18_65 [label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeDateTimeOffset()", span="133-133", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeDateTimeOffset()", file="UnixDateTimeConverterTests.cs"];
m18_120 [label="Entry Newtonsoft.Json.Tests.Converters.UnixConverterDictionary<T>.UnixConverterDictionary()", span="271-271", cluster="Newtonsoft.Json.Tests.Converters.UnixConverterDictionary<T>.UnixConverterDictionary()", file="UnixDateTimeConverterTests.cs"];
m18_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonObjectAttributeOptIn.Example()", span="53-53", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonObjectAttributeOptIn.Example()", file="UnixDateTimeConverterTests.cs"];
m18_3 [label="Console.WriteLine(json)", span="65-65", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonObjectAttributeOptIn.Example()", file="UnixDateTimeConverterTests.cs"];
m18_2 [label="string json = JsonConvert.SerializeObject(file, Formatting.Indented)", span="63-63", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonObjectAttributeOptIn.Example()", file="UnixDateTimeConverterTests.cs"];
m18_1 [label="File file = new File\r\n            {\r\n                Id = Guid.NewGuid(),\r\n                Name = ''ImportantLegalDocuments.docx'',\r\n                Size = 50 * 1024\r\n            }", span="56-61", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonObjectAttributeOptIn.Example()", file="UnixDateTimeConverterTests.cs", color=red, community=0];
m18_4 [label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''ImportantLegalDocuments.docx'''',\r\n  ''''Size'''': 51200\r\n}'', json)", span="72-75", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonObjectAttributeOptIn.Example()", file="UnixDateTimeConverterTests.cs"];
m18_23 [label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.WriteJsonInvalidType()", span="74-74", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.WriteJsonInvalidType()", file="UnixDateTimeConverterTests.cs"];
m18_24 [label="UnixDateTimeConverter converter = new UnixDateTimeConverter()", span="76-76", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.WriteJsonInvalidType()", file="UnixDateTimeConverterTests.cs"];
m18_25 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => converter.WriteJson(new JTokenWriter(), new object(), new JsonSerializer()),\r\n                ''Expected date object value.''\r\n            )", span="78-81", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.WriteJsonInvalidType()", file="UnixDateTimeConverterTests.cs"];
m18_26 [label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.WriteJsonInvalidType()", span="74-74", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.WriteJsonInvalidType()", file="UnixDateTimeConverterTests.cs"];
m18_16 [label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeInvalidDate()", span="65-65", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeInvalidDate()", file="UnixDateTimeConverterTests.cs"];
m18_17 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.SerializeObject(new DateTime(1964, 2, 7), new UnixDateTimeConverter()),\r\n                ''Cannot convert date value that is before Unix epoch of 00:00:00 UTC on 1 January 1970.''\r\n            )", span="67-70", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeInvalidDate()", file="UnixDateTimeConverterTests.cs"];
m18_18 [label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeInvalidDate()", span="65-65", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeInvalidDate()", file="UnixDateTimeConverterTests.cs"];
m18_50 [label="Entry Newtonsoft.Json.Tests.TestObjects.NullableDateTimeTestClass.NullableDateTimeTestClass()", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.NullableDateTimeTestClass.NullableDateTimeTestClass()", file="UnixDateTimeConverterTests.cs"];
m18_76 [label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeIntegerToDateTime()", span="164-164", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeIntegerToDateTime()", file="UnixDateTimeConverterTests.cs"];
m18_78 [label="Assert.AreEqual(new DateTime(2018, 1, 1, 21, 1, 16, DateTimeKind.Utc), result)", span="168-168", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeIntegerToDateTime()", file="UnixDateTimeConverterTests.cs"];
m18_77 [label="DateTime result = JsonConvert.DeserializeObject<DateTime>(''1514840476'', new UnixDateTimeConverter())", span="166-166", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeIntegerToDateTime()", file="UnixDateTimeConverterTests.cs"];
m18_79 [label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeIntegerToDateTime()", span="164-164", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeIntegerToDateTime()", file="UnixDateTimeConverterTests.cs"];
m18_106 [label="Entry Newtonsoft.Json.Tests.Converters.UnixConverterList<T>.UnixConverterList()", span="268-268", cluster="Newtonsoft.Json.Tests.Converters.UnixConverterList<T>.UnixConverterList()", file="UnixDateTimeConverterTests.cs"];
m18_111 [label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterDictionary()", span="220-220", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterDictionary()", file="UnixDateTimeConverterTests.cs"];
m18_117 [label="Assert.AreEqual(new DateTime(1970, 1, 1, 0, 0, 3, DateTimeKind.Utc), l2[''First''])", span="237-237", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterDictionary()", file="UnixDateTimeConverterTests.cs"];
m18_118 [label="Assert.AreEqual(new DateTime(2018, 1, 1, 21, 1, 16, DateTimeKind.Utc), l2[''Second''])", span="238-238", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterDictionary()", file="UnixDateTimeConverterTests.cs"];
m18_115 [label="UnixConverterDictionary<object> l2 = JsonConvert.DeserializeObject<UnixConverterDictionary<object>>(json)", span="234-234", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterDictionary()", file="UnixDateTimeConverterTests.cs"];
m18_116 [label="Assert.IsNotNull(l2)", span="235-235", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterDictionary()", file="UnixDateTimeConverterTests.cs"];
m18_112 [label="UnixConverterDictionary<object> l1 = new UnixConverterDictionary<object>\r\n            {\r\n                {''First'', new DateTime(1970, 1, 1, 0, 0, 3, DateTimeKind.Utc)},\r\n                {''Second'', new DateTime(2018, 1, 1, 21, 1, 16, DateTimeKind.Utc)},\r\n            }", span="222-226", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterDictionary()", file="UnixDateTimeConverterTests.cs"];
m18_113 [label="string json = JsonConvert.SerializeObject(l1, Formatting.Indented)", span="228-228", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterDictionary()", file="UnixDateTimeConverterTests.cs"];
m18_114 [label="StringAssert.AreEqual(@''{\r\n  ''''First'''': 3,\r\n  ''''Second'''': 1514840476\r\n}'', json)", span="229-232", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterDictionary()", file="UnixDateTimeConverterTests.cs"];
m18_119 [label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterDictionary()", span="220-220", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterDictionary()", file="UnixDateTimeConverterTests.cs"];
m18_34 [label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeOffset()", span="86-86", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeOffset()", file="UnixDateTimeConverterTests.cs"];
m18_37 [label="Assert.AreEqual(''1514840476'', result)", span="92-92", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeOffset()", file="UnixDateTimeConverterTests.cs"];
m18_36 [label="string result = JsonConvert.SerializeObject(now, new UnixDateTimeConverter())", span="90-90", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeOffset()", file="UnixDateTimeConverterTests.cs"];
m18_35 [label="DateTimeOffset now = new DateTimeOffset(2018, 1, 1, 16, 1, 16, TimeSpan.FromHours(-5))", span="88-88", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeOffset()", file="UnixDateTimeConverterTests.cs"];
m18_38 [label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeOffset()", span="86-86", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeOffset()", file="UnixDateTimeConverterTests.cs"];
m18_107 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="537-537", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="UnixDateTimeConverterTests.cs"];
m18_33 [label="Entry Newtonsoft.Json.Converters.UnixDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="44-44", cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="UnixDateTimeConverterTests.cs"];
m18_15 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="UnixDateTimeConverterTests.cs"];
m18_109 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="703-703", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="UnixDateTimeConverterTests.cs"];
m18_110 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="UnixDateTimeConverterTests.cs"];
m18_121 [label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterObject()", span="242-242", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterObject()", file="UnixDateTimeConverterTests.cs"];
m18_127 [label="Assert.AreEqual(new DateTime(1970, 1, 1, 0, 0, 3, DateTimeKind.Utc), obj2.Object1)", span="261-261", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterObject()", file="UnixDateTimeConverterTests.cs"];
m18_129 [label="Assert.AreEqual(new DateTime(2018, 1, 1, 21, 1, 16, DateTimeKind.Utc), obj2.ObjectNotHandled)", span="263-263", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterObject()", file="UnixDateTimeConverterTests.cs"];
m18_125 [label="UnixConverterObject obj2 = JsonConvert.DeserializeObject<UnixConverterObject>(json)", span="258-258", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterObject()", file="UnixDateTimeConverterTests.cs"];
m18_126 [label="Assert.IsNotNull(obj2)", span="259-259", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterObject()", file="UnixDateTimeConverterTests.cs"];
m18_128 [label="Assert.IsNull(obj2.Object2)", span="262-262", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterObject()", file="UnixDateTimeConverterTests.cs"];
m18_122 [label="UnixConverterObject obj1 = new UnixConverterObject\r\n            {\r\n                Object1 = new DateTime(1970, 1, 1, 0, 0, 3, DateTimeKind.Utc),\r\n                Object2 = null,\r\n                ObjectNotHandled = new DateTime(2018, 1, 1, 21, 1, 16, DateTimeKind.Utc)\r\n            }", span="244-249", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterObject()", file="UnixDateTimeConverterTests.cs"];
m18_123 [label="string json = JsonConvert.SerializeObject(obj1, Formatting.Indented)", span="251-251", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterObject()", file="UnixDateTimeConverterTests.cs"];
m18_124 [label="StringAssert.AreEqual(@''{\r\n  ''''Object1'''': 3,\r\n  ''''Object2'''': null,\r\n  ''''ObjectNotHandled'''': 1514840476\r\n}'', json)", span="252-256", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterObject()", file="UnixDateTimeConverterTests.cs"];
m18_130 [label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterObject()", span="242-242", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterObject()", file="UnixDateTimeConverterTests.cs"];
m18_52 [label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeNullToNonNullable()", span="121-121", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeNullToNonNullable()", file="UnixDateTimeConverterTests.cs"];
m18_53 [label="ExceptionAssert.Throws<Exception>(\r\n                () => JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':null,''''DateTimeOffsetField'''':null,''''PostField'''':''''Post''''}'',\r\n                    new UnixDateTimeConverter()\r\n                ),\r\n                ''Cannot convert null value to System.DateTime. Path 'DateTimeField', line 1, position 38.''\r\n            )", span="123-129", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeNullToNonNullable()", file="UnixDateTimeConverterTests.cs"];
m18_54 [label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeNullToNonNullable()", span="121-121", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeNullToNonNullable()", file="UnixDateTimeConverterTests.cs"];
m18_131 [label="Entry Newtonsoft.Json.Tests.Converters.UnixConverterObject.UnixConverterObject()", span="274-274", cluster="Newtonsoft.Json.Tests.Converters.UnixConverterObject.UnixConverterObject()", file="UnixDateTimeConverterTests.cs"];
m18_31 [label="Entry object.Object()", span="0-0", cluster="object.Object()", file="UnixDateTimeConverterTests.cs"];
m18_91 [label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidValueType()", span="189-189", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidValueType()", file="UnixDateTimeConverterTests.cs"];
m18_92 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<DateTime>(''false'', new UnixDateTimeConverter()),\r\n                ''Unexpected token parsing date. Expected Integer or String, got Boolean. Path '', line 1, position 5.''\r\n            )", span="191-194", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidValueType()", file="UnixDateTimeConverterTests.cs"];
m18_93 [label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidValueType()", span="189-189", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidValueType()", file="UnixDateTimeConverterTests.cs"];
m18_51 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="UnixDateTimeConverterTests.cs"];
m18_30 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", span="82-82", cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", file="UnixDateTimeConverterTests.cs"];
m18_39 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="UnixDateTimeConverterTests.cs"];
m18_108 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="341-341", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="UnixDateTimeConverterTests.cs"];
m18_27 [label="Entry lambda expression", span="79-79", cluster="lambda expression", file="UnixDateTimeConverterTests.cs"];
m18_21 [label="JsonConvert.SerializeObject(new DateTime(1964, 2, 7), new UnixDateTimeConverter())", span="68-68", cluster="lambda expression", file="UnixDateTimeConverterTests.cs"];
m18_56 [label="JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':null,''''DateTimeOffsetField'''':null,''''PostField'''':''''Post''''}'',\r\n                    new UnixDateTimeConverter()\r\n                )", span="124-127", cluster="lambda expression", file="UnixDateTimeConverterTests.cs"];
m18_74 [label="JsonConvert.DeserializeObject<DateTimeOffset>(@''''''PIE'''''', new UnixDateTimeConverter())", span="157-157", cluster="lambda expression", file="UnixDateTimeConverterTests.cs"];
m18_89 [label="JsonConvert.DeserializeObject<DateTime>(''-1'', new UnixDateTimeConverter())", span="183-183", cluster="lambda expression", file="UnixDateTimeConverterTests.cs"];
m18_95 [label="JsonConvert.DeserializeObject<DateTime>(''false'', new UnixDateTimeConverter())", span="192-192", cluster="lambda expression", file="UnixDateTimeConverterTests.cs"];
m18_20 [label="Entry lambda expression", span="68-68", cluster="lambda expression", file="UnixDateTimeConverterTests.cs"];
m18_22 [label="Exit lambda expression", span="68-68", cluster="lambda expression", file="UnixDateTimeConverterTests.cs"];
m18_28 [label="converter.WriteJson(new JTokenWriter(), new object(), new JsonSerializer())", span="79-79", cluster="lambda expression", file="UnixDateTimeConverterTests.cs"];
m18_55 [label="Entry lambda expression", span="124-127", cluster="lambda expression", file="UnixDateTimeConverterTests.cs"];
m18_57 [label="Exit lambda expression", span="124-127", cluster="lambda expression", file="UnixDateTimeConverterTests.cs"];
m18_73 [label="Entry lambda expression", span="157-157", cluster="lambda expression", file="UnixDateTimeConverterTests.cs"];
m18_75 [label="Exit lambda expression", span="157-157", cluster="lambda expression", file="UnixDateTimeConverterTests.cs"];
m18_88 [label="Entry lambda expression", span="183-183", cluster="lambda expression", file="UnixDateTimeConverterTests.cs"];
m18_90 [label="Exit lambda expression", span="183-183", cluster="lambda expression", file="UnixDateTimeConverterTests.cs"];
m18_94 [label="Entry lambda expression", span="192-192", cluster="lambda expression", file="UnixDateTimeConverterTests.cs"];
m18_96 [label="Exit lambda expression", span="192-192", cluster="lambda expression", file="UnixDateTimeConverterTests.cs"];
m18_29 [label="Exit lambda expression", span="79-79", cluster="lambda expression", file="UnixDateTimeConverterTests.cs"];
m18_70 [label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidStringToDateTimeOffset()", span="154-154", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidStringToDateTimeOffset()", file="UnixDateTimeConverterTests.cs"];
m18_71 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<DateTimeOffset>(@''''''PIE'''''', new UnixDateTimeConverter()),\r\n                ''Cannot convert invalid value to System.DateTimeOffset. Path '', line 1, position 5.''\r\n            )", span="156-159", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidStringToDateTimeOffset()", file="UnixDateTimeConverterTests.cs"];
m18_72 [label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidStringToDateTimeOffset()", span="154-154", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidStringToDateTimeOffset()", file="UnixDateTimeConverterTests.cs"];
m18_19 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="370-370", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="UnixDateTimeConverterTests.cs"];
m18_97 [label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterList()", span="198-198", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterList()", file="UnixDateTimeConverterTests.cs"];
m18_103 [label="Assert.AreEqual(new DateTime(2018, 1, 1, 21, 1, 16, DateTimeKind.Utc), l2[0])", span="215-215", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterList()", file="UnixDateTimeConverterTests.cs"];
m18_104 [label="Assert.AreEqual(new DateTime(1970, 1, 1, 0, 0, 3, DateTimeKind.Utc), l2[1])", span="216-216", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterList()", file="UnixDateTimeConverterTests.cs"];
m18_101 [label="UnixConverterList<object> l2 = JsonConvert.DeserializeObject<UnixConverterList<object>>(json)", span="212-212", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterList()", file="UnixDateTimeConverterTests.cs"];
m18_102 [label="Assert.IsNotNull(l2)", span="213-213", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterList()", file="UnixDateTimeConverterTests.cs"];
m18_98 [label="UnixConverterList<object> l1 = new UnixConverterList<object>\r\n            {\r\n                new DateTime(2018, 1, 1, 21, 1, 16, DateTimeKind.Utc),\r\n                new DateTime(1970, 1, 1, 0, 0, 3, DateTimeKind.Utc),\r\n            }", span="200-204", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterList()", file="UnixDateTimeConverterTests.cs"];
m18_99 [label="string json = JsonConvert.SerializeObject(l1, Formatting.Indented)", span="206-206", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterList()", file="UnixDateTimeConverterTests.cs"];
m18_100 [label="StringAssert.AreEqual(@''[\r\n  1514840476,\r\n  3\r\n]'', json)", span="207-210", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterList()", file="UnixDateTimeConverterTests.cs"];
m18_105 [label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterList()", span="198-198", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterList()", file="UnixDateTimeConverterTests.cs"];
m18_132 [label=converter, span="", file="UnixDateTimeConverterTests.cs"];
m19_5 [label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="31-31", cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="ValidationEventArgs.cs"];
m19_0 [label="Entry Newtonsoft.Json.Schema.ValidationEventArgs.ValidationEventArgs(Newtonsoft.Json.Schema.JsonSchemaException)", span="43-43", cluster="Newtonsoft.Json.Schema.ValidationEventArgs.ValidationEventArgs(Newtonsoft.Json.Schema.JsonSchemaException)", file="ValidationEventArgs.cs"];
m19_1 [label="ValidationUtils.ArgumentNotNull(ex, nameof(ex))", span="45-45", cluster="Newtonsoft.Json.Schema.ValidationEventArgs.ValidationEventArgs(Newtonsoft.Json.Schema.JsonSchemaException)", file="ValidationEventArgs.cs"];
m19_2 [label="_ex = ex", span="46-46", cluster="Newtonsoft.Json.Schema.ValidationEventArgs.ValidationEventArgs(Newtonsoft.Json.Schema.JsonSchemaException)", file="ValidationEventArgs.cs"];
m19_3 [label="Exit Newtonsoft.Json.Schema.ValidationEventArgs.ValidationEventArgs(Newtonsoft.Json.Schema.JsonSchemaException)", span="43-43", cluster="Newtonsoft.Json.Schema.ValidationEventArgs.ValidationEventArgs(Newtonsoft.Json.Schema.JsonSchemaException)", file="ValidationEventArgs.cs"];
m19_4 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="ValidationEventArgs.cs"];
m19_6 [label="Newtonsoft.Json.Schema.ValidationEventArgs", span="", file="ValidationEventArgs.cs"];
n14 -> n7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonConverter"];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n1 -> n2  [key=0, style=solid];
n1 -> n4  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n5  [key=2, style=dotted];
n3 -> n0  [key=0, style=bold, color=blue];
n6 -> n7  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n7 -> n9  [key=2, style=dotted];
n7 -> n10  [key=2, style=dotted];
n7 -> n11  [key=2, style=dotted];
n8 -> n6  [key=0, style=bold, color=blue];
n12 -> n13  [key=0, style=solid];
n13 -> n12  [key=0, style=bold, color=blue];
m1_10 -> m1_11  [key=0, style=solid, color=green];
m1_11 -> m1_12  [key=0, style=solid, color=green];
m1_11 -> m1_13  [key=2, style=dotted, color=green];
m1_11 -> m1_14  [key=1, style=dashed, color=green, label="lambda expression"];
m1_12 -> m1_10  [key=0, style=bold, color=blue];
m1_14 -> m1_15  [key=0, style=solid, color=green];
m1_15 -> m1_16  [key=0, style=solid, color=green];
m1_15 -> m1_17  [key=2, style=dotted, color=green];
m1_16 -> m1_14  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid, color=green];
m1_1 -> m1_2  [key=0, style=solid, color=green];
m1_1 -> m1_6  [key=2, style=dotted, color=green];
m1_1 -> m1_7  [key=2, style=dotted, color=green];
m1_2 -> m1_3  [key=0, style=solid, color=green];
m1_2 -> m1_8  [key=2, style=dotted, color=green];
m1_3 -> m1_4  [key=0, style=solid, color=green];
m1_3 -> m1_9  [key=2, style=dotted, color=green];
m1_3 -> m1_7  [key=2, style=dotted, color=green];
m1_4 -> m1_5  [key=0, style=solid, color=green];
m1_4 -> m1_8  [key=2, style=dotted, color=green];
m1_5 -> m1_0  [key=0, style=bold, color=blue];
m1_6 -> m1_18  [key=0, style=solid];
m1_18 -> m1_6  [key=0, style=bold, color=blue];
m2_527 -> m2_528  [key=0, style=solid];
m2_528 -> m2_529  [key=0, style=solid];
m2_528 -> m2_13  [key=2, style=dotted];
m2_528 -> m2_14  [key=2, style=dotted];
m2_528 -> m2_532  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_529 -> m2_530  [key=0, style=solid];
m2_529 -> m2_18  [key=2, style=dotted];
m2_529 -> m2_531  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_530 -> m2_527  [key=0, style=bold, color=blue];
m2_777 -> m2_778  [key=0, style=solid];
m2_778 -> m2_779  [key=0, style=solid];
m2_778 -> m2_778  [key=3, color=darkorchid, style=bold, label="Local variable string input"];
m2_779 -> m2_780  [key=0, style=solid];
m2_779 -> m2_14  [key=2, style=dotted];
m2_780 -> m2_781  [key=0, style=solid];
m2_780 -> m2_13  [key=2, style=dotted];
m2_780 -> m2_782  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_780 -> m2_783  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_780 -> m2_784  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_780 -> m2_785  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_780 -> m2_786  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_780 -> m2_787  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_780 -> m2_788  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_780 -> m2_789  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_780 -> m2_790  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_780 -> m2_791  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_780 -> m2_792  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_780 -> m2_793  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_781 -> m2_782  [key=0, style=solid];
m2_781 -> m2_138  [key=2, style=dotted];
m2_782 -> m2_783  [key=0, style=solid];
m2_782 -> m2_17  [key=2, style=dotted];
m2_783 -> m2_784  [key=0, style=solid];
m2_783 -> m2_138  [key=2, style=dotted];
m2_784 -> m2_785  [key=0, style=solid];
m2_784 -> m2_17  [key=2, style=dotted];
m2_785 -> m2_786  [key=0, style=solid];
m2_785 -> m2_17  [key=2, style=dotted];
m2_786 -> m2_787  [key=0, style=solid];
m2_786 -> m2_138  [key=2, style=dotted];
m2_787 -> m2_788  [key=0, style=solid];
m2_787 -> m2_17  [key=2, style=dotted];
m2_788 -> m2_789  [key=0, style=solid];
m2_788 -> m2_17  [key=2, style=dotted];
m2_789 -> m2_790  [key=0, style=solid];
m2_789 -> m2_138  [key=2, style=dotted];
m2_790 -> m2_791  [key=0, style=solid];
m2_790 -> m2_17  [key=2, style=dotted];
m2_791 -> m2_792  [key=0, style=solid];
m2_791 -> m2_17  [key=2, style=dotted];
m2_792 -> m2_793  [key=0, style=solid];
m2_792 -> m2_138  [key=2, style=dotted];
m2_793 -> m2_794  [key=0, style=solid];
m2_793 -> m2_17  [key=2, style=dotted];
m2_794 -> m2_777  [key=0, style=bold, color=blue];
m2_1146 -> m2_1147  [key=0, style=solid];
m2_1147 -> m2_1148  [key=0, style=solid];
m2_1147 -> m2_1147  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1148 -> m2_1149  [key=0, style=solid];
m2_1148 -> m2_13  [key=2, style=dotted];
m2_1148 -> m2_14  [key=2, style=dotted];
m2_1148 -> m2_1150  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1148 -> m2_1151  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1148 -> m2_1152  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1148 -> m2_1153  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1148 -> m2_1154  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1148 -> m2_1155  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1148 -> m2_1156  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1148 -> m2_1157  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1148 -> m2_1158  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1149 -> m2_1150  [key=0, style=solid];
m2_1149 -> m2_15  [key=2, style=dotted];
m2_1149 -> m2_16  [key=2, style=dotted];
m2_1150 -> m2_1151  [key=0, style=solid];
m2_1150 -> m2_17  [key=2, style=dotted];
m2_1151 -> m2_1152  [key=0, style=solid];
m2_1151 -> m2_15  [key=2, style=dotted];
m2_1151 -> m2_16  [key=2, style=dotted];
m2_1152 -> m2_1153  [key=0, style=solid];
m2_1152 -> m2_17  [key=2, style=dotted];
m2_1153 -> m2_1154  [key=0, style=solid];
m2_1153 -> m2_1002  [key=2, style=dotted];
m2_1154 -> m2_1155  [key=0, style=solid];
m2_1154 -> m2_17  [key=2, style=dotted];
m2_1155 -> m2_1156  [key=0, style=solid];
m2_1155 -> m2_17  [key=2, style=dotted];
m2_1156 -> m2_1157  [key=0, style=solid];
m2_1156 -> m2_1087  [key=2, style=dotted];
m2_1156 -> m2_1160  [key=2, style=dotted];
m2_1156 -> m2_17  [key=2, style=dotted];
m2_1157 -> m2_1158  [key=0, style=solid];
m2_1157 -> m2_15  [key=2, style=dotted];
m2_1157 -> m2_16  [key=2, style=dotted];
m2_1158 -> m2_1159  [key=0, style=solid];
m2_1158 -> m2_17  [key=2, style=dotted];
m2_1159 -> m2_1146  [key=0, style=bold, color=blue];
m2_560 -> m2_561  [key=0, style=solid];
m2_561 -> m2_562  [key=0, style=solid];
m2_561 -> m2_564  [key=1, style=dashed, color=darkseagreen4, label=newLinesText];
m2_561 -> m2_572  [key=1, style=dashed, color=darkseagreen4, label=newLinesText];
m2_561 -> m2_587  [key=1, style=dashed, color=darkseagreen4, label=newLinesText];
m2_562 -> m2_563  [key=0, style=solid];
m2_562 -> m2_567  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_564 -> m2_565  [key=0, style=solid];
m2_564 -> m2_14  [key=2, style=dotted];
m2_572 -> m2_573  [key=0, style=solid];
m2_572 -> m2_17  [key=2, style=dotted];
m2_587 -> m2_588  [key=0, style=solid];
m2_587 -> m2_17  [key=2, style=dotted];
m2_563 -> m2_564  [key=0, style=solid];
m2_563 -> m2_566  [key=1, style=dashed, color=darkseagreen4, label=count];
m2_563 -> m2_373  [key=3, color=darkorchid, style=bold, label="Local variable int count"];
m2_567 -> m2_568  [key=0, style=solid];
m2_567 -> m2_13  [key=2, style=dotted];
m2_567 -> m2_116  [key=2, style=dotted];
m2_567 -> m2_157  [key=2, style=dotted];
m2_567 -> m2_158  [key=2, style=dotted];
m2_567 -> m2_569  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_567 -> m2_570  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_567 -> m2_571  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_567 -> m2_572  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_567 -> m2_573  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_567 -> m2_574  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_567 -> m2_575  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_567 -> m2_576  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_567 -> m2_577  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_567 -> m2_578  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_567 -> m2_579  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_567 -> m2_580  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_567 -> m2_581  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_567 -> m2_582  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_567 -> m2_583  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_567 -> m2_584  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_567 -> m2_585  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_567 -> m2_586  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_567 -> m2_587  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_567 -> m2_588  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_567 -> m2_589  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_567 -> m2_590  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_567 -> m2_591  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_567 -> m2_592  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_567 -> m2_593  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_567 -> m2_594  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_567 -> m2_595  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_567 -> m2_596  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_567 -> m2_597  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_567 -> m2_598  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_567 -> m2_599  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_567 -> m2_600  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_567 -> m2_601  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_567 -> m2_602  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_566 -> m2_565  [key=0, style=solid];
m2_566 -> m2_566  [key=1, style=dashed, color=darkseagreen4, label=count];
m2_565 -> m2_566  [key=0, style=solid];
m2_565 -> m2_567  [key=0, style=solid];
m2_565 -> m2_604  [key=2, style=dotted];
m2_568 -> m2_569  [key=0, style=solid];
m2_568 -> m2_15  [key=2, style=dotted];
m2_568 -> m2_16  [key=2, style=dotted];
m2_569 -> m2_570  [key=0, style=solid];
m2_569 -> m2_17  [key=2, style=dotted];
m2_570 -> m2_571  [key=0, style=solid];
m2_570 -> m2_15  [key=2, style=dotted];
m2_570 -> m2_16  [key=2, style=dotted];
m2_571 -> m2_572  [key=0, style=solid];
m2_571 -> m2_17  [key=2, style=dotted];
m2_573 -> m2_574  [key=0, style=solid];
m2_573 -> m2_15  [key=2, style=dotted];
m2_573 -> m2_16  [key=2, style=dotted];
m2_574 -> m2_575  [key=0, style=solid];
m2_574 -> m2_17  [key=2, style=dotted];
m2_575 -> m2_576  [key=0, style=solid];
m2_575 -> m2_15  [key=2, style=dotted];
m2_575 -> m2_16  [key=2, style=dotted];
m2_576 -> m2_577  [key=0, style=solid];
m2_576 -> m2_17  [key=2, style=dotted];
m2_577 -> m2_578  [key=0, style=solid];
m2_577 -> m2_17  [key=2, style=dotted];
m2_578 -> m2_579  [key=0, style=solid];
m2_578 -> m2_17  [key=2, style=dotted];
m2_579 -> m2_580  [key=0, style=solid];
m2_579 -> m2_15  [key=2, style=dotted];
m2_579 -> m2_16  [key=2, style=dotted];
m2_580 -> m2_581  [key=0, style=solid];
m2_580 -> m2_17  [key=2, style=dotted];
m2_581 -> m2_582  [key=0, style=solid];
m2_581 -> m2_17  [key=2, style=dotted];
m2_582 -> m2_583  [key=0, style=solid];
m2_582 -> m2_15  [key=2, style=dotted];
m2_582 -> m2_16  [key=2, style=dotted];
m2_583 -> m2_584  [key=0, style=solid];
m2_583 -> m2_17  [key=2, style=dotted];
m2_584 -> m2_585  [key=0, style=solid];
m2_584 -> m2_17  [key=2, style=dotted];
m2_585 -> m2_586  [key=0, style=solid];
m2_585 -> m2_15  [key=2, style=dotted];
m2_585 -> m2_16  [key=2, style=dotted];
m2_586 -> m2_587  [key=0, style=solid];
m2_586 -> m2_17  [key=2, style=dotted];
m2_588 -> m2_589  [key=0, style=solid];
m2_588 -> m2_15  [key=2, style=dotted];
m2_588 -> m2_16  [key=2, style=dotted];
m2_589 -> m2_590  [key=0, style=solid];
m2_589 -> m2_17  [key=2, style=dotted];
m2_590 -> m2_591  [key=0, style=solid];
m2_590 -> m2_15  [key=2, style=dotted];
m2_590 -> m2_16  [key=2, style=dotted];
m2_591 -> m2_592  [key=0, style=solid];
m2_591 -> m2_17  [key=2, style=dotted];
m2_592 -> m2_593  [key=0, style=solid];
m2_592 -> m2_15  [key=2, style=dotted];
m2_592 -> m2_16  [key=2, style=dotted];
m2_593 -> m2_594  [key=0, style=solid];
m2_593 -> m2_17  [key=2, style=dotted];
m2_594 -> m2_595  [key=0, style=solid];
m2_594 -> m2_15  [key=2, style=dotted];
m2_594 -> m2_16  [key=2, style=dotted];
m2_595 -> m2_596  [key=0, style=solid];
m2_595 -> m2_17  [key=2, style=dotted];
m2_596 -> m2_597  [key=0, style=solid];
m2_596 -> m2_17  [key=2, style=dotted];
m2_597 -> m2_598  [key=0, style=solid];
m2_597 -> m2_15  [key=2, style=dotted];
m2_597 -> m2_16  [key=2, style=dotted];
m2_598 -> m2_599  [key=0, style=solid];
m2_598 -> m2_17  [key=2, style=dotted];
m2_599 -> m2_600  [key=0, style=solid];
m2_599 -> m2_15  [key=2, style=dotted];
m2_599 -> m2_16  [key=2, style=dotted];
m2_600 -> m2_601  [key=0, style=solid];
m2_600 -> m2_17  [key=2, style=dotted];
m2_601 -> m2_602  [key=0, style=solid];
m2_601 -> m2_15  [key=2, style=dotted];
m2_601 -> m2_16  [key=2, style=dotted];
m2_602 -> m2_603  [key=0, style=solid];
m2_602 -> m2_17  [key=2, style=dotted];
m2_603 -> m2_560  [key=0, style=bold, color=blue];
m2_1433 -> m2_1434  [key=0, style=solid];
m2_1434 -> m2_1435  [key=0, style=solid];
m2_1434 -> m2_1434  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1435 -> m2_1436  [key=0, style=solid];
m2_1435 -> m2_13  [key=2, style=dotted];
m2_1435 -> m2_14  [key=2, style=dotted];
m2_1435 -> m2_1440  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1436 -> m2_1437  [key=0, style=solid];
m2_1436 -> m2_1438  [key=2, style=dotted];
m2_1436 -> m2_1439  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1437 -> m2_1433  [key=0, style=bold, color=blue];
m2_1194 -> m2_1195  [key=0, style=solid];
m2_1195 -> m2_1196  [key=0, style=solid];
m2_1195 -> m2_1195  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1196 -> m2_1197  [key=0, style=solid];
m2_1196 -> m2_13  [key=2, style=dotted];
m2_1196 -> m2_14  [key=2, style=dotted];
m2_1196 -> m2_1198  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1196 -> m2_1199  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1196 -> m2_1200  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1196 -> m2_1201  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1196 -> m2_1202  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1196 -> m2_1203  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1196 -> m2_1204  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1197 -> m2_1198  [key=0, style=solid];
m2_1197 -> m2_15  [key=2, style=dotted];
m2_1197 -> m2_16  [key=2, style=dotted];
m2_1198 -> m2_1199  [key=0, style=solid];
m2_1198 -> m2_17  [key=2, style=dotted];
m2_1199 -> m2_1200  [key=0, style=solid];
m2_1199 -> m2_15  [key=2, style=dotted];
m2_1199 -> m2_16  [key=2, style=dotted];
m2_1200 -> m2_1201  [key=0, style=solid];
m2_1200 -> m2_17  [key=2, style=dotted];
m2_1201 -> m2_1202  [key=0, style=solid];
m2_1201 -> m2_984  [key=2, style=dotted];
m2_1202 -> m2_1203  [key=0, style=solid];
m2_1202 -> m2_17  [key=2, style=dotted];
m2_1203 -> m2_1204  [key=0, style=solid];
m2_1203 -> m2_17  [key=2, style=dotted];
m2_1204 -> m2_1205  [key=0, style=solid];
m2_1204 -> m2_17  [key=2, style=dotted];
m2_1205 -> m2_1194  [key=0, style=bold, color=blue];
m2_132 -> m2_133  [key=0, style=solid];
m2_133 -> m2_134  [key=0, style=solid];
m2_133 -> m2_133  [key=3, color=darkorchid, style=bold, label="Local variable string input"];
m2_134 -> m2_135  [key=0, style=solid];
m2_134 -> m2_13  [key=2, style=dotted];
m2_134 -> m2_14  [key=2, style=dotted];
m2_134 -> m2_136  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_135 -> m2_136  [key=0, style=solid];
m2_135 -> m2_137  [key=0, style=solid];
m2_135 -> m2_138  [key=2, style=dotted];
m2_136 -> m2_135  [key=0, style=solid];
m2_136 -> m2_139  [key=2, style=dotted];
m2_137 -> m2_132  [key=0, style=bold, color=blue];
m2_1590 -> m2_1591  [key=0, style=solid];
m2_1591 -> m2_1592  [key=0, style=solid];
m2_1591 -> m2_1591  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1592 -> m2_1593  [key=0, style=solid];
m2_1592 -> m2_13  [key=2, style=dotted];
m2_1592 -> m2_14  [key=2, style=dotted];
m2_1592 -> m2_1594  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1592 -> m2_1597  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1593 -> m2_1594  [key=0, style=solid];
m2_1593 -> m2_15  [key=2, style=dotted];
m2_1593 -> m2_16  [key=2, style=dotted];
m2_1594 -> m2_1595  [key=0, style=solid];
m2_1594 -> m2_1438  [key=2, style=dotted];
m2_1594 -> m2_1596  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1595 -> m2_1590  [key=0, style=bold, color=blue];
m2_1038 -> m2_1039  [key=0, style=solid];
m2_1039 -> m2_1040  [key=0, style=solid];
m2_1039 -> m2_13  [key=2, style=dotted];
m2_1039 -> m2_14  [key=2, style=dotted];
m2_1039 -> m2_1043  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1040 -> m2_1041  [key=0, style=solid];
m2_1040 -> m2_18  [key=2, style=dotted];
m2_1040 -> m2_1042  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1041 -> m2_1038  [key=0, style=bold, color=blue];
m2_1731 -> m2_1732  [key=0, style=solid];
m2_1732 -> m2_1733  [key=0, style=solid];
m2_1732 -> m2_1752  [key=2, style=dotted];
m2_1732 -> m2_14  [key=2, style=dotted];
m2_1732 -> m2_1735  [key=1, style=dashed, color=darkseagreen4, label=toggleReaderError];
m2_1732 -> m2_1738  [key=1, style=dashed, color=darkseagreen4, label=toggleReaderError];
m2_1732 -> m2_1741  [key=1, style=dashed, color=darkseagreen4, label=toggleReaderError];
m2_1732 -> m2_1743  [key=1, style=dashed, color=darkseagreen4, label=toggleReaderError];
m2_1732 -> m2_1746  [key=1, style=dashed, color=darkseagreen4, label=toggleReaderError];
m2_1732 -> m2_1750  [key=1, style=dashed, color=darkseagreen4, label=toggleReaderError];
m2_1733 -> m2_1734  [key=0, style=solid];
m2_1733 -> m2_13  [key=2, style=dotted];
m2_1733 -> m2_1736  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m2_1733 -> m2_1754  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m2_1733 -> m2_1737  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m2_1733 -> m2_1757  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m2_1733 -> m2_1739  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m2_1733 -> m2_1740  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m2_1733 -> m2_1742  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m2_1733 -> m2_1760  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m2_1733 -> m2_1744  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m2_1733 -> m2_1745  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m2_1733 -> m2_1747  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m2_1733 -> m2_1763  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m2_1733 -> m2_1748  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m2_1733 -> m2_1766  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m2_1733 -> m2_1749  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m2_1733 -> m2_1769  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m2_1735 -> m2_1736  [key=0, style=solid];
m2_1738 -> m2_1739  [key=0, style=solid];
m2_1741 -> m2_1742  [key=0, style=solid];
m2_1743 -> m2_1744  [key=0, style=solid];
m2_1746 -> m2_1747  [key=0, style=solid];
m2_1750 -> m2_1751  [key=0, style=solid];
m2_1734 -> m2_1735  [key=0, style=solid];
m2_1734 -> m2_15  [key=2, style=dotted];
m2_1734 -> m2_16  [key=2, style=dotted];
m2_1736 -> m2_1737  [key=0, style=solid];
m2_1736 -> m2_18  [key=2, style=dotted];
m2_1736 -> m2_1753  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1737 -> m2_1738  [key=0, style=solid];
m2_1737 -> m2_18  [key=2, style=dotted];
m2_1737 -> m2_1756  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1739 -> m2_1740  [key=0, style=solid];
m2_1739 -> m2_15  [key=2, style=dotted];
m2_1739 -> m2_16  [key=2, style=dotted];
m2_1740 -> m2_1741  [key=0, style=solid];
m2_1740 -> m2_17  [key=2, style=dotted];
m2_1742 -> m2_1743  [key=0, style=solid];
m2_1742 -> m2_18  [key=2, style=dotted];
m2_1742 -> m2_1759  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1744 -> m2_1745  [key=0, style=solid];
m2_1744 -> m2_15  [key=2, style=dotted];
m2_1744 -> m2_16  [key=2, style=dotted];
m2_1745 -> m2_1746  [key=0, style=solid];
m2_1745 -> m2_17  [key=2, style=dotted];
m2_1747 -> m2_1748  [key=0, style=solid];
m2_1747 -> m2_18  [key=2, style=dotted];
m2_1747 -> m2_1762  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1748 -> m2_1749  [key=0, style=solid];
m2_1748 -> m2_18  [key=2, style=dotted];
m2_1748 -> m2_1765  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1749 -> m2_1750  [key=0, style=solid];
m2_1749 -> m2_18  [key=2, style=dotted];
m2_1749 -> m2_1768  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1751 -> m2_1731  [key=0, style=bold, color=blue];
m2_520 -> m2_521  [key=0, style=solid];
m2_521 -> m2_522  [key=0, style=solid];
m2_521 -> m2_13  [key=2, style=dotted];
m2_521 -> m2_14  [key=2, style=dotted];
m2_521 -> m2_525  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_522 -> m2_523  [key=0, style=solid];
m2_522 -> m2_18  [key=2, style=dotted];
m2_522 -> m2_524  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_523 -> m2_520  [key=0, style=bold, color=blue];
m2_950 -> m2_951  [key=0, style=solid];
m2_951 -> m2_952  [key=0, style=solid];
m2_951 -> m2_14  [key=2, style=dotted];
m2_952 -> m2_953  [key=0, style=solid];
m2_952 -> m2_13  [key=2, style=dotted];
m2_952 -> m2_954  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_952 -> m2_955  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_952 -> m2_956  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_952 -> m2_957  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_952 -> m2_958  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_952 -> m2_959  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_952 -> m2_960  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_952 -> m2_961  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_952 -> m2_962  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_952 -> m2_963  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_952 -> m2_964  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_952 -> m2_965  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_952 -> m2_966  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_952 -> m2_967  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_952 -> m2_968  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_952 -> m2_969  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_953 -> m2_954  [key=0, style=solid];
m2_953 -> m2_15  [key=2, style=dotted];
m2_953 -> m2_16  [key=2, style=dotted];
m2_954 -> m2_955  [key=0, style=solid];
m2_954 -> m2_17  [key=2, style=dotted];
m2_955 -> m2_956  [key=0, style=solid];
m2_955 -> m2_451  [key=2, style=dotted];
m2_956 -> m2_957  [key=0, style=solid];
m2_956 -> m2_17  [key=2, style=dotted];
m2_957 -> m2_958  [key=0, style=solid];
m2_957 -> m2_17  [key=2, style=dotted];
m2_958 -> m2_959  [key=0, style=solid];
m2_958 -> m2_17  [key=2, style=dotted];
m2_959 -> m2_960  [key=0, style=solid];
m2_959 -> m2_451  [key=2, style=dotted];
m2_960 -> m2_961  [key=0, style=solid];
m2_960 -> m2_17  [key=2, style=dotted];
m2_961 -> m2_962  [key=0, style=solid];
m2_961 -> m2_17  [key=2, style=dotted];
m2_962 -> m2_963  [key=0, style=solid];
m2_962 -> m2_17  [key=2, style=dotted];
m2_963 -> m2_964  [key=0, style=solid];
m2_963 -> m2_451  [key=2, style=dotted];
m2_964 -> m2_965  [key=0, style=solid];
m2_964 -> m2_17  [key=2, style=dotted];
m2_965 -> m2_966  [key=0, style=solid];
m2_965 -> m2_17  [key=2, style=dotted];
m2_966 -> m2_967  [key=0, style=solid];
m2_966 -> m2_17  [key=2, style=dotted];
m2_967 -> m2_968  [key=0, style=solid];
m2_967 -> m2_15  [key=2, style=dotted];
m2_967 -> m2_16  [key=2, style=dotted];
m2_968 -> m2_969  [key=0, style=solid];
m2_968 -> m2_17  [key=2, style=dotted];
m2_969 -> m2_970  [key=0, style=solid];
m2_969 -> m2_15  [key=2, style=dotted];
m2_969 -> m2_131  [key=2, style=dotted];
m2_970 -> m2_950  [key=0, style=bold, color=blue];
m2_1442 -> m2_1443  [key=0, style=solid];
m2_1443 -> m2_1444  [key=0, style=solid];
m2_1443 -> m2_1443  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1444 -> m2_1445  [key=0, style=solid];
m2_1444 -> m2_13  [key=2, style=dotted];
m2_1444 -> m2_116  [key=2, style=dotted];
m2_1444 -> m2_157  [key=2, style=dotted];
m2_1444 -> m2_158  [key=2, style=dotted];
m2_1444 -> m2_1446  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1444 -> m2_1447  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1444 -> m2_1448  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1444 -> m2_1449  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1444 -> m2_1450  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1444 -> m2_1451  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1444 -> m2_1452  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1444 -> m2_1453  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1444 -> m2_1454  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1444 -> m2_1455  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1444 -> m2_1456  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1444 -> m2_1457  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1444 -> m2_1458  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1444 -> m2_1459  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1444 -> m2_1460  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1444 -> m2_1461  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1444 -> m2_1462  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1444 -> m2_1463  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1445 -> m2_1446  [key=0, style=solid];
m2_1445 -> m2_15  [key=2, style=dotted];
m2_1445 -> m2_16  [key=2, style=dotted];
m2_1446 -> m2_1447  [key=0, style=solid];
m2_1446 -> m2_17  [key=2, style=dotted];
m2_1447 -> m2_1448  [key=0, style=solid];
m2_1447 -> m2_15  [key=2, style=dotted];
m2_1447 -> m2_16  [key=2, style=dotted];
m2_1448 -> m2_1449  [key=0, style=solid];
m2_1448 -> m2_17  [key=2, style=dotted];
m2_1449 -> m2_1450  [key=0, style=solid];
m2_1449 -> m2_15  [key=2, style=dotted];
m2_1449 -> m2_16  [key=2, style=dotted];
m2_1450 -> m2_1451  [key=0, style=solid];
m2_1450 -> m2_17  [key=2, style=dotted];
m2_1451 -> m2_1452  [key=0, style=solid];
m2_1451 -> m2_15  [key=2, style=dotted];
m2_1451 -> m2_16  [key=2, style=dotted];
m2_1452 -> m2_1453  [key=0, style=solid];
m2_1452 -> m2_17  [key=2, style=dotted];
m2_1453 -> m2_1454  [key=0, style=solid];
m2_1453 -> m2_15  [key=2, style=dotted];
m2_1453 -> m2_16  [key=2, style=dotted];
m2_1454 -> m2_1455  [key=0, style=solid];
m2_1454 -> m2_17  [key=2, style=dotted];
m2_1455 -> m2_1456  [key=0, style=solid];
m2_1455 -> m2_15  [key=2, style=dotted];
m2_1455 -> m2_16  [key=2, style=dotted];
m2_1456 -> m2_1457  [key=0, style=solid];
m2_1456 -> m2_17  [key=2, style=dotted];
m2_1457 -> m2_1458  [key=0, style=solid];
m2_1457 -> m2_15  [key=2, style=dotted];
m2_1457 -> m2_16  [key=2, style=dotted];
m2_1458 -> m2_1459  [key=0, style=solid];
m2_1458 -> m2_17  [key=2, style=dotted];
m2_1459 -> m2_1460  [key=0, style=solid];
m2_1459 -> m2_15  [key=2, style=dotted];
m2_1459 -> m2_16  [key=2, style=dotted];
m2_1460 -> m2_1461  [key=0, style=solid];
m2_1460 -> m2_17  [key=2, style=dotted];
m2_1461 -> m2_1462  [key=0, style=solid];
m2_1461 -> m2_15  [key=2, style=dotted];
m2_1461 -> m2_16  [key=2, style=dotted];
m2_1462 -> m2_1463  [key=0, style=solid];
m2_1462 -> m2_17  [key=2, style=dotted];
m2_1463 -> m2_1464  [key=0, style=solid];
m2_1463 -> m2_15  [key=2, style=dotted];
m2_1463 -> m2_131  [key=2, style=dotted];
m2_1464 -> m2_1442  [key=0, style=bold, color=blue];
m2_1752 -> m2_1789  [key=0, style=solid];
m2_1789 -> m2_1790  [key=0, style=solid];
m2_1790 -> m2_1752  [key=0, style=bold, color=blue];
m2_435 -> m2_436  [key=0, style=solid];
m2_436 -> m2_437  [key=0, style=solid];
m2_436 -> m2_442  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_436 -> m2_436  [key=3, color=darkorchid, style=bold, label="Local variable long i"];
m2_437 -> m2_438  [key=0, style=solid];
m2_437 -> m2_13  [key=2, style=dotted];
m2_437 -> m2_14  [key=2, style=dotted];
m2_437 -> m2_446  [key=2, style=dotted];
m2_437 -> m2_439  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_437 -> m2_443  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_442 -> m2_443  [key=0, style=solid];
m2_442 -> m2_448  [key=1, style=dashed, color=darkseagreen4, label=total];
m2_438 -> m2_439  [key=0, style=solid];
m2_438 -> m2_15  [key=2, style=dotted];
m2_439 -> m2_440  [key=0, style=solid];
m2_439 -> m2_17  [key=2, style=dotted];
m2_443 -> m2_444  [key=0, style=solid];
m2_443 -> m2_18  [key=2, style=dotted];
m2_443 -> m2_447  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_440 -> m2_441  [key=0, style=solid];
m2_440 -> m2_442  [key=1, style=dashed, color=darkseagreen4, label=j];
m2_440 -> m2_444  [key=1, style=dashed, color=darkseagreen4, label=j];
m2_440 -> m2_440  [key=3, color=darkorchid, style=bold, label="Local variable int j"];
m2_441 -> m2_442  [key=0, style=solid];
m2_441 -> m2_445  [key=0, style=solid];
m2_444 -> m2_441  [key=0, style=solid];
m2_444 -> m2_444  [key=1, style=dashed, color=darkseagreen4, label=j];
m2_445 -> m2_435  [key=0, style=bold, color=blue];
m2_140 -> m2_141  [key=0, style=solid];
m2_141 -> m2_142  [key=0, style=solid];
m2_141 -> m2_141  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_142 -> m2_143  [key=0, style=solid];
m2_142 -> m2_13  [key=2, style=dotted];
m2_142 -> m2_116  [key=2, style=dotted];
m2_142 -> m2_157  [key=2, style=dotted];
m2_142 -> m2_158  [key=2, style=dotted];
m2_142 -> m2_144  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_142 -> m2_145  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_142 -> m2_146  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_142 -> m2_147  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_142 -> m2_148  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_142 -> m2_149  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_142 -> m2_150  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_142 -> m2_151  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_142 -> m2_152  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_142 -> m2_153  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_142 -> m2_154  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_142 -> m2_155  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_143 -> m2_144  [key=0, style=solid];
m2_143 -> m2_138  [key=2, style=dotted];
m2_143 -> m2_16  [key=2, style=dotted];
m2_144 -> m2_145  [key=0, style=solid];
m2_144 -> m2_138  [key=2, style=dotted];
m2_144 -> m2_16  [key=2, style=dotted];
m2_145 -> m2_146  [key=0, style=solid];
m2_145 -> m2_138  [key=2, style=dotted];
m2_145 -> m2_16  [key=2, style=dotted];
m2_146 -> m2_147  [key=0, style=solid];
m2_146 -> m2_17  [key=2, style=dotted];
m2_147 -> m2_148  [key=0, style=solid];
m2_147 -> m2_17  [key=2, style=dotted];
m2_148 -> m2_149  [key=0, style=solid];
m2_148 -> m2_138  [key=2, style=dotted];
m2_148 -> m2_16  [key=2, style=dotted];
m2_149 -> m2_150  [key=0, style=solid];
m2_149 -> m2_17  [key=2, style=dotted];
m2_150 -> m2_151  [key=0, style=solid];
m2_150 -> m2_138  [key=2, style=dotted];
m2_150 -> m2_16  [key=2, style=dotted];
m2_151 -> m2_152  [key=0, style=solid];
m2_151 -> m2_17  [key=2, style=dotted];
m2_152 -> m2_153  [key=0, style=solid];
m2_152 -> m2_138  [key=2, style=dotted];
m2_152 -> m2_16  [key=2, style=dotted];
m2_153 -> m2_154  [key=0, style=solid];
m2_153 -> m2_17  [key=2, style=dotted];
m2_154 -> m2_155  [key=0, style=solid];
m2_154 -> m2_138  [key=2, style=dotted];
m2_154 -> m2_16  [key=2, style=dotted];
m2_155 -> m2_156  [key=0, style=solid];
m2_155 -> m2_17  [key=2, style=dotted];
m2_156 -> m2_140  [key=0, style=bold, color=blue];
m2_552 -> m2_553  [key=0, style=solid];
m2_553 -> m2_554  [key=0, style=solid];
m2_553 -> m2_13  [key=2, style=dotted];
m2_553 -> m2_14  [key=2, style=dotted];
m2_553 -> m2_555  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_553 -> m2_558  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_554 -> m2_555  [key=0, style=solid];
m2_554 -> m2_138  [key=2, style=dotted];
m2_554 -> m2_16  [key=2, style=dotted];
m2_555 -> m2_556  [key=0, style=solid];
m2_555 -> m2_18  [key=2, style=dotted];
m2_555 -> m2_557  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_556 -> m2_552  [key=0, style=bold, color=blue];
m2_795 -> m2_796  [key=0, style=solid];
m2_796 -> m2_797  [key=0, style=solid];
m2_796 -> m2_796  [key=3, color=darkorchid, style=bold, label="Local variable int length"];
m2_797 -> m2_798  [key=0, style=solid];
m2_797 -> m2_366  [key=2, style=dotted];
m2_798 -> m2_799  [key=0, style=solid];
m2_798 -> m2_13  [key=2, style=dotted];
m2_798 -> m2_14  [key=2, style=dotted];
m2_798 -> m2_800  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_798 -> m2_801  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_798 -> m2_802  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_798 -> m2_803  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_798 -> m2_804  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_798 -> m2_805  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_798 -> m2_806  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_798 -> m2_807  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_798 -> m2_808  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_799 -> m2_800  [key=0, style=solid];
m2_799 -> m2_15  [key=2, style=dotted];
m2_800 -> m2_801  [key=0, style=solid];
m2_800 -> m2_17  [key=2, style=dotted];
m2_801 -> m2_802  [key=0, style=solid];
m2_801 -> m2_15  [key=2, style=dotted];
m2_802 -> m2_803  [key=0, style=solid];
m2_802 -> m2_17  [key=2, style=dotted];
m2_803 -> m2_804  [key=0, style=solid];
m2_803 -> m2_17  [key=2, style=dotted];
m2_804 -> m2_805  [key=0, style=solid];
m2_804 -> m2_91  [key=2, style=dotted];
m2_804 -> m2_17  [key=2, style=dotted];
m2_805 -> m2_806  [key=0, style=solid];
m2_805 -> m2_15  [key=2, style=dotted];
m2_805 -> m2_16  [key=2, style=dotted];
m2_806 -> m2_807  [key=0, style=solid];
m2_806 -> m2_17  [key=2, style=dotted];
m2_807 -> m2_808  [key=0, style=solid];
m2_807 -> m2_15  [key=2, style=dotted];
m2_807 -> m2_131  [key=2, style=dotted];
m2_808 -> m2_809  [key=0, style=solid];
m2_808 -> m2_17  [key=2, style=dotted];
m2_809 -> m2_795  [key=0, style=bold, color=blue];
m2_681 -> m2_682  [key=0, style=solid];
m2_682 -> m2_683  [key=0, style=solid];
m2_682 -> m2_682  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.JsonTextReader reader"];
m2_683 -> m2_684  [key=0, style=solid];
m2_683 -> m2_13  [key=2, style=dotted];
m2_683 -> m2_14  [key=2, style=dotted];
m2_684 -> m2_685  [key=0, style=solid];
m2_684 -> m2_451  [key=2, style=dotted];
m2_684 -> m2_17  [key=2, style=dotted];
m2_685 -> m2_686  [key=0, style=solid];
m2_685 -> m2_13  [key=2, style=dotted];
m2_685 -> m2_14  [key=2, style=dotted];
m2_686 -> m2_687  [key=0, style=solid];
m2_686 -> m2_451  [key=2, style=dotted];
m2_686 -> m2_17  [key=2, style=dotted];
m2_687 -> m2_688  [key=0, style=solid];
m2_687 -> m2_13  [key=2, style=dotted];
m2_687 -> m2_14  [key=2, style=dotted];
m2_688 -> m2_689  [key=0, style=solid];
m2_688 -> m2_451  [key=2, style=dotted];
m2_688 -> m2_17  [key=2, style=dotted];
m2_689 -> m2_690  [key=0, style=solid];
m2_689 -> m2_13  [key=2, style=dotted];
m2_689 -> m2_14  [key=2, style=dotted];
m2_690 -> m2_691  [key=0, style=solid];
m2_690 -> m2_451  [key=2, style=dotted];
m2_690 -> m2_17  [key=2, style=dotted];
m2_691 -> m2_692  [key=0, style=solid];
m2_691 -> m2_13  [key=2, style=dotted];
m2_691 -> m2_14  [key=2, style=dotted];
m2_691 -> m2_708  [key=2, style=dotted];
m2_692 -> m2_693  [key=0, style=solid];
m2_692 -> m2_451  [key=2, style=dotted];
m2_692 -> m2_17  [key=2, style=dotted];
m2_693 -> m2_694  [key=0, style=solid];
m2_693 -> m2_13  [key=2, style=dotted];
m2_693 -> m2_14  [key=2, style=dotted];
m2_693 -> m2_708  [key=2, style=dotted];
m2_694 -> m2_695  [key=0, style=solid];
m2_694 -> m2_451  [key=2, style=dotted];
m2_694 -> m2_17  [key=2, style=dotted];
m2_695 -> m2_696  [key=0, style=solid];
m2_695 -> m2_13  [key=2, style=dotted];
m2_695 -> m2_14  [key=2, style=dotted];
m2_695 -> m2_709  [key=2, style=dotted];
m2_695 -> m2_711  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_696 -> m2_697  [key=0, style=solid];
m2_696 -> m2_18  [key=2, style=dotted];
m2_696 -> m2_710  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_697 -> m2_698  [key=0, style=solid];
m2_697 -> m2_13  [key=2, style=dotted];
m2_697 -> m2_14  [key=2, style=dotted];
m2_697 -> m2_714  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_698 -> m2_699  [key=0, style=solid];
m2_698 -> m2_18  [key=2, style=dotted];
m2_698 -> m2_713  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_699 -> m2_700  [key=0, style=solid];
m2_699 -> m2_13  [key=2, style=dotted];
m2_699 -> m2_14  [key=2, style=dotted];
m2_699 -> m2_717  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_700 -> m2_701  [key=0, style=solid];
m2_700 -> m2_18  [key=2, style=dotted];
m2_700 -> m2_716  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_701 -> m2_702  [key=0, style=solid];
m2_701 -> m2_13  [key=2, style=dotted];
m2_701 -> m2_14  [key=2, style=dotted];
m2_701 -> m2_720  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_702 -> m2_703  [key=0, style=solid];
m2_702 -> m2_18  [key=2, style=dotted];
m2_702 -> m2_719  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_703 -> m2_704  [key=0, style=solid];
m2_703 -> m2_13  [key=2, style=dotted];
m2_703 -> m2_14  [key=2, style=dotted];
m2_704 -> m2_705  [key=0, style=solid];
m2_704 -> m2_451  [key=2, style=dotted];
m2_704 -> m2_17  [key=2, style=dotted];
m2_705 -> m2_706  [key=0, style=solid];
m2_705 -> m2_13  [key=2, style=dotted];
m2_705 -> m2_14  [key=2, style=dotted];
m2_705 -> m2_723  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_706 -> m2_707  [key=0, style=solid];
m2_706 -> m2_18  [key=2, style=dotted];
m2_706 -> m2_722  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_707 -> m2_681  [key=0, style=bold, color=blue];
m2_1534 -> m2_1535  [key=0, style=solid];
m2_1535 -> m2_1536  [key=0, style=solid];
m2_1535 -> m2_13  [key=2, style=dotted];
m2_1535 -> m2_14  [key=2, style=dotted];
m2_1535 -> m2_1537  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1535 -> m2_1538  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1535 -> m2_1541  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1536 -> m2_1537  [key=0, style=solid];
m2_1536 -> m2_138  [key=2, style=dotted];
m2_1536 -> m2_16  [key=2, style=dotted];
m2_1537 -> m2_1538  [key=0, style=solid];
m2_1537 -> m2_138  [key=2, style=dotted];
m2_1537 -> m2_16  [key=2, style=dotted];
m2_1538 -> m2_1539  [key=0, style=solid];
m2_1538 -> m2_18  [key=2, style=dotted];
m2_1538 -> m2_1540  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1539 -> m2_1534  [key=0, style=bold, color=blue];
m2_79 -> m2_80  [key=0, style=solid];
m2_80 -> m2_81  [key=0, style=solid];
m2_80 -> m2_80  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_81 -> m2_82  [key=0, style=solid];
m2_81 -> m2_13  [key=2, style=dotted];
m2_81 -> m2_14  [key=2, style=dotted];
m2_81 -> m2_83  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_81 -> m2_84  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_81 -> m2_85  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_81 -> m2_86  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_82 -> m2_83  [key=0, style=solid];
m2_82 -> m2_15  [key=2, style=dotted];
m2_82 -> m2_16  [key=2, style=dotted];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_15  [key=2, style=dotted];
m2_83 -> m2_16  [key=2, style=dotted];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_15  [key=2, style=dotted];
m2_84 -> m2_16  [key=2, style=dotted];
m2_85 -> m2_86  [key=0, style=solid];
m2_85 -> m2_17  [key=2, style=dotted];
m2_86 -> m2_87  [key=0, style=solid];
m2_86 -> m2_91  [key=2, style=dotted];
m2_86 -> m2_88  [key=1, style=dashed, color=darkseagreen4, label=s];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_17  [key=2, style=dotted];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_92  [key=2, style=dotted];
m2_89 -> m2_90  [key=0, style=solid];
m2_89 -> m2_17  [key=2, style=dotted];
m2_90 -> m2_79  [key=0, style=bold, color=blue];
m2_929 -> m2_930  [key=0, style=solid];
m2_930 -> m2_931  [key=0, style=solid];
m2_930 -> m2_14  [key=2, style=dotted];
m2_931 -> m2_932  [key=0, style=solid];
m2_931 -> m2_13  [key=2, style=dotted];
m2_931 -> m2_933  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_931 -> m2_934  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_931 -> m2_935  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_931 -> m2_936  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_931 -> m2_937  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_931 -> m2_938  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_931 -> m2_939  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_931 -> m2_940  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_931 -> m2_941  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_931 -> m2_942  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_931 -> m2_943  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_931 -> m2_944  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_931 -> m2_945  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_931 -> m2_946  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_931 -> m2_947  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_931 -> m2_948  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_932 -> m2_933  [key=0, style=solid];
m2_932 -> m2_15  [key=2, style=dotted];
m2_932 -> m2_16  [key=2, style=dotted];
m2_933 -> m2_934  [key=0, style=solid];
m2_933 -> m2_17  [key=2, style=dotted];
m2_934 -> m2_935  [key=0, style=solid];
m2_934 -> m2_15  [key=2, style=dotted];
m2_935 -> m2_936  [key=0, style=solid];
m2_935 -> m2_17  [key=2, style=dotted];
m2_936 -> m2_937  [key=0, style=solid];
m2_936 -> m2_17  [key=2, style=dotted];
m2_937 -> m2_938  [key=0, style=solid];
m2_937 -> m2_17  [key=2, style=dotted];
m2_938 -> m2_939  [key=0, style=solid];
m2_938 -> m2_15  [key=2, style=dotted];
m2_939 -> m2_940  [key=0, style=solid];
m2_939 -> m2_17  [key=2, style=dotted];
m2_940 -> m2_941  [key=0, style=solid];
m2_940 -> m2_17  [key=2, style=dotted];
m2_941 -> m2_942  [key=0, style=solid];
m2_941 -> m2_17  [key=2, style=dotted];
m2_942 -> m2_943  [key=0, style=solid];
m2_942 -> m2_15  [key=2, style=dotted];
m2_943 -> m2_944  [key=0, style=solid];
m2_943 -> m2_17  [key=2, style=dotted];
m2_944 -> m2_945  [key=0, style=solid];
m2_944 -> m2_17  [key=2, style=dotted];
m2_945 -> m2_946  [key=0, style=solid];
m2_945 -> m2_17  [key=2, style=dotted];
m2_946 -> m2_947  [key=0, style=solid];
m2_946 -> m2_15  [key=2, style=dotted];
m2_946 -> m2_16  [key=2, style=dotted];
m2_947 -> m2_948  [key=0, style=solid];
m2_947 -> m2_17  [key=2, style=dotted];
m2_948 -> m2_949  [key=0, style=solid];
m2_948 -> m2_15  [key=2, style=dotted];
m2_948 -> m2_131  [key=2, style=dotted];
m2_949 -> m2_929  [key=0, style=bold, color=blue];
m2_979 -> m2_980  [key=0, style=solid];
m2_980 -> m2_981  [key=0, style=solid];
m2_980 -> m2_13  [key=2, style=dotted];
m2_980 -> m2_14  [key=2, style=dotted];
m2_980 -> m2_982  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_981 -> m2_982  [key=0, style=solid];
m2_981 -> m2_984  [key=2, style=dotted];
m2_981 -> m2_551  [key=2, style=dotted];
m2_982 -> m2_983  [key=0, style=solid];
m2_982 -> m2_17  [key=2, style=dotted];
m2_983 -> m2_979  [key=0, style=bold, color=blue];
m2_497 -> m2_498  [key=0, style=solid];
m2_498 -> m2_499  [key=0, style=solid];
m2_498 -> m2_498  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_499 -> m2_500  [key=0, style=solid];
m2_499 -> m2_13  [key=2, style=dotted];
m2_499 -> m2_14  [key=2, style=dotted];
m2_499 -> m2_502  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_499 -> m2_504  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_499 -> m2_505  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_499 -> m2_506  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_500 -> m2_501  [key=0, style=solid];
m2_500 -> m2_503  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_500 -> m2_373  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m2_502 -> m2_503  [key=0, style=solid];
m2_502 -> m2_15  [key=2, style=dotted];
m2_502 -> m2_16  [key=2, style=dotted];
m2_504 -> m2_505  [key=0, style=solid];
m2_504 -> m2_15  [key=2, style=dotted];
m2_504 -> m2_16  [key=2, style=dotted];
m2_505 -> m2_506  [key=0, style=solid];
m2_505 -> m2_17  [key=2, style=dotted];
m2_506 -> m2_507  [key=0, style=solid];
m2_506 -> m2_17  [key=2, style=dotted];
m2_501 -> m2_502  [key=0, style=solid];
m2_501 -> m2_504  [key=0, style=solid];
m2_503 -> m2_501  [key=0, style=solid];
m2_503 -> m2_503  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_507 -> m2_497  [key=0, style=bold, color=blue];
m2_824 -> m2_825  [key=0, style=solid];
m2_825 -> m2_826  [key=0, style=solid];
m2_825 -> m2_825  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_826 -> m2_827  [key=0, style=solid];
m2_826 -> m2_13  [key=2, style=dotted];
m2_826 -> m2_14  [key=2, style=dotted];
m2_826 -> m2_828  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_829  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_830  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_831  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_832  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_833  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_834  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_835  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_836  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_837  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_838  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_839  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_840  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_841  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_842  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_843  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_844  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_845  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_846  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_847  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_848  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_849  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_850  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_851  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_852  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_853  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_854  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_855  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_856  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_857  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_858  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_859  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_860  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_861  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_862  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_863  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_864  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_865  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_866  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_867  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_868  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_869  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_870  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_871  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_872  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_873  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_874  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_875  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_876  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_877  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_878  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_879  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_880  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_881  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_882  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_883  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_826 -> m2_884  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_827 -> m2_828  [key=0, style=solid];
m2_827 -> m2_138  [key=2, style=dotted];
m2_828 -> m2_829  [key=0, style=solid];
m2_828 -> m2_17  [key=2, style=dotted];
m2_829 -> m2_830  [key=0, style=solid];
m2_829 -> m2_138  [key=2, style=dotted];
m2_830 -> m2_831  [key=0, style=solid];
m2_830 -> m2_17  [key=2, style=dotted];
m2_831 -> m2_832  [key=0, style=solid];
m2_831 -> m2_17  [key=2, style=dotted];
m2_832 -> m2_833  [key=0, style=solid];
m2_832 -> m2_138  [key=2, style=dotted];
m2_833 -> m2_834  [key=0, style=solid];
m2_833 -> m2_17  [key=2, style=dotted];
m2_834 -> m2_835  [key=0, style=solid];
m2_834 -> m2_17  [key=2, style=dotted];
m2_835 -> m2_836  [key=0, style=solid];
m2_835 -> m2_138  [key=2, style=dotted];
m2_836 -> m2_837  [key=0, style=solid];
m2_836 -> m2_17  [key=2, style=dotted];
m2_837 -> m2_838  [key=0, style=solid];
m2_837 -> m2_17  [key=2, style=dotted];
m2_838 -> m2_839  [key=0, style=solid];
m2_838 -> m2_138  [key=2, style=dotted];
m2_839 -> m2_840  [key=0, style=solid];
m2_839 -> m2_17  [key=2, style=dotted];
m2_840 -> m2_841  [key=0, style=solid];
m2_840 -> m2_17  [key=2, style=dotted];
m2_841 -> m2_842  [key=0, style=solid];
m2_841 -> m2_138  [key=2, style=dotted];
m2_842 -> m2_843  [key=0, style=solid];
m2_842 -> m2_17  [key=2, style=dotted];
m2_843 -> m2_844  [key=0, style=solid];
m2_843 -> m2_17  [key=2, style=dotted];
m2_844 -> m2_845  [key=0, style=solid];
m2_844 -> m2_138  [key=2, style=dotted];
m2_845 -> m2_846  [key=0, style=solid];
m2_845 -> m2_17  [key=2, style=dotted];
m2_846 -> m2_847  [key=0, style=solid];
m2_846 -> m2_17  [key=2, style=dotted];
m2_847 -> m2_848  [key=0, style=solid];
m2_847 -> m2_138  [key=2, style=dotted];
m2_848 -> m2_849  [key=0, style=solid];
m2_848 -> m2_17  [key=2, style=dotted];
m2_849 -> m2_850  [key=0, style=solid];
m2_849 -> m2_17  [key=2, style=dotted];
m2_850 -> m2_851  [key=0, style=solid];
m2_850 -> m2_138  [key=2, style=dotted];
m2_851 -> m2_852  [key=0, style=solid];
m2_851 -> m2_17  [key=2, style=dotted];
m2_852 -> m2_853  [key=0, style=solid];
m2_852 -> m2_17  [key=2, style=dotted];
m2_853 -> m2_854  [key=0, style=solid];
m2_853 -> m2_138  [key=2, style=dotted];
m2_854 -> m2_855  [key=0, style=solid];
m2_854 -> m2_17  [key=2, style=dotted];
m2_855 -> m2_856  [key=0, style=solid];
m2_855 -> m2_17  [key=2, style=dotted];
m2_856 -> m2_857  [key=0, style=solid];
m2_856 -> m2_138  [key=2, style=dotted];
m2_857 -> m2_858  [key=0, style=solid];
m2_857 -> m2_17  [key=2, style=dotted];
m2_858 -> m2_859  [key=0, style=solid];
m2_858 -> m2_17  [key=2, style=dotted];
m2_859 -> m2_860  [key=0, style=solid];
m2_859 -> m2_138  [key=2, style=dotted];
m2_860 -> m2_861  [key=0, style=solid];
m2_860 -> m2_17  [key=2, style=dotted];
m2_861 -> m2_862  [key=0, style=solid];
m2_861 -> m2_17  [key=2, style=dotted];
m2_862 -> m2_863  [key=0, style=solid];
m2_862 -> m2_138  [key=2, style=dotted];
m2_863 -> m2_864  [key=0, style=solid];
m2_863 -> m2_17  [key=2, style=dotted];
m2_864 -> m2_865  [key=0, style=solid];
m2_864 -> m2_17  [key=2, style=dotted];
m2_865 -> m2_866  [key=0, style=solid];
m2_865 -> m2_138  [key=2, style=dotted];
m2_866 -> m2_867  [key=0, style=solid];
m2_866 -> m2_17  [key=2, style=dotted];
m2_867 -> m2_868  [key=0, style=solid];
m2_867 -> m2_17  [key=2, style=dotted];
m2_868 -> m2_869  [key=0, style=solid];
m2_868 -> m2_138  [key=2, style=dotted];
m2_869 -> m2_870  [key=0, style=solid];
m2_869 -> m2_17  [key=2, style=dotted];
m2_870 -> m2_871  [key=0, style=solid];
m2_870 -> m2_17  [key=2, style=dotted];
m2_871 -> m2_872  [key=0, style=solid];
m2_871 -> m2_138  [key=2, style=dotted];
m2_872 -> m2_873  [key=0, style=solid];
m2_872 -> m2_17  [key=2, style=dotted];
m2_873 -> m2_874  [key=0, style=solid];
m2_873 -> m2_17  [key=2, style=dotted];
m2_874 -> m2_875  [key=0, style=solid];
m2_874 -> m2_138  [key=2, style=dotted];
m2_875 -> m2_876  [key=0, style=solid];
m2_875 -> m2_17  [key=2, style=dotted];
m2_876 -> m2_877  [key=0, style=solid];
m2_876 -> m2_17  [key=2, style=dotted];
m2_877 -> m2_878  [key=0, style=solid];
m2_877 -> m2_138  [key=2, style=dotted];
m2_878 -> m2_879  [key=0, style=solid];
m2_878 -> m2_17  [key=2, style=dotted];
m2_879 -> m2_880  [key=0, style=solid];
m2_879 -> m2_17  [key=2, style=dotted];
m2_880 -> m2_881  [key=0, style=solid];
m2_880 -> m2_138  [key=2, style=dotted];
m2_881 -> m2_882  [key=0, style=solid];
m2_881 -> m2_17  [key=2, style=dotted];
m2_882 -> m2_883  [key=0, style=solid];
m2_882 -> m2_17  [key=2, style=dotted];
m2_883 -> m2_884  [key=0, style=solid];
m2_883 -> m2_138  [key=2, style=dotted];
m2_884 -> m2_885  [key=0, style=solid];
m2_884 -> m2_17  [key=2, style=dotted];
m2_885 -> m2_824  [key=0, style=bold, color=blue];
m2_1178 -> m2_1179  [key=0, style=solid];
m2_1179 -> m2_1180  [key=0, style=solid];
m2_1179 -> m2_1179  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1180 -> m2_1181  [key=0, style=solid];
m2_1180 -> m2_13  [key=2, style=dotted];
m2_1180 -> m2_14  [key=2, style=dotted];
m2_1180 -> m2_1182  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1180 -> m2_1183  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1180 -> m2_1184  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1180 -> m2_1185  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1180 -> m2_1186  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1180 -> m2_1187  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1180 -> m2_1188  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1180 -> m2_1189  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1180 -> m2_1191  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1180 -> m2_1192  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1181 -> m2_1182  [key=0, style=solid];
m2_1181 -> m2_1177  [key=2, style=dotted];
m2_1182 -> m2_1183  [key=0, style=solid];
m2_1182 -> m2_15  [key=2, style=dotted];
m2_1182 -> m2_16  [key=2, style=dotted];
m2_1183 -> m2_1184  [key=0, style=solid];
m2_1183 -> m2_17  [key=2, style=dotted];
m2_1184 -> m2_1185  [key=0, style=solid];
m2_1184 -> m2_15  [key=2, style=dotted];
m2_1184 -> m2_16  [key=2, style=dotted];
m2_1185 -> m2_1186  [key=0, style=solid];
m2_1185 -> m2_17  [key=2, style=dotted];
m2_1186 -> m2_1187  [key=0, style=solid];
m2_1186 -> m2_1002  [key=2, style=dotted];
m2_1187 -> m2_1188  [key=0, style=solid];
m2_1187 -> m2_17  [key=2, style=dotted];
m2_1188 -> m2_1189  [key=0, style=solid];
m2_1188 -> m2_17  [key=2, style=dotted];
m2_1189 -> m2_1190  [key=0, style=solid];
m2_1191 -> m2_1192  [key=0, style=solid];
m2_1191 -> m2_15  [key=2, style=dotted];
m2_1191 -> m2_16  [key=2, style=dotted];
m2_1192 -> m2_1193  [key=0, style=solid];
m2_1192 -> m2_17  [key=2, style=dotted];
m2_1190 -> m2_1191  [key=0, style=solid];
m2_1190 -> m2_1160  [key=2, style=dotted];
m2_1190 -> m2_17  [key=2, style=dotted];
m2_1190 -> m2_1190  [key=1, style=dashed, color=darkseagreen4, label=dt];
m2_1193 -> m2_1178  [key=0, style=bold, color=blue];
m2_1371 -> m2_1372  [key=0, style=solid];
m2_1372 -> m2_1373  [key=0, style=solid];
m2_1372 -> m2_1372  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1373 -> m2_1374  [key=0, style=solid];
m2_1373 -> m2_13  [key=2, style=dotted];
m2_1373 -> m2_14  [key=2, style=dotted];
m2_1373 -> m2_1375  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1373 -> m2_1376  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1374 -> m2_1375  [key=0, style=solid];
m2_1374 -> m2_15  [key=2, style=dotted];
m2_1374 -> m2_16  [key=2, style=dotted];
m2_1375 -> m2_1376  [key=0, style=solid];
m2_1375 -> m2_15  [key=2, style=dotted];
m2_1375 -> m2_16  [key=2, style=dotted];
m2_1376 -> m2_1377  [key=0, style=solid];
m2_1376 -> m2_15  [key=2, style=dotted];
m2_1376 -> m2_131  [key=2, style=dotted];
m2_1377 -> m2_1371  [key=0, style=bold, color=blue];
m2_513 -> m2_514  [key=0, style=solid];
m2_514 -> m2_515  [key=0, style=solid];
m2_514 -> m2_13  [key=2, style=dotted];
m2_514 -> m2_14  [key=2, style=dotted];
m2_514 -> m2_518  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_515 -> m2_516  [key=0, style=solid];
m2_515 -> m2_18  [key=2, style=dotted];
m2_515 -> m2_517  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_516 -> m2_513  [key=0, style=bold, color=blue];
m2_48 -> m2_49  [key=0, style=solid];
m2_49 -> m2_50  [key=0, style=solid];
m2_49 -> m2_49  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_13  [key=2, style=dotted];
m2_50 -> m2_14  [key=2, style=dotted];
m2_50 -> m2_52  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_50 -> m2_53  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_50 -> m2_54  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_50 -> m2_57  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_51 -> m2_52  [key=0, style=solid];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_15  [key=2, style=dotted];
m2_52 -> m2_16  [key=2, style=dotted];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_17  [key=2, style=dotted];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_18  [key=2, style=dotted];
m2_54 -> m2_56  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_55 -> m2_48  [key=0, style=bold, color=blue];
m2_1798 -> m2_1799  [key=0, style=solid];
m2_1798 -> m2_1801  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_1799 -> m2_1800  [key=0, style=solid];
m2_1801 -> m2_1802  [key=0, style=solid];
m2_1800 -> m2_1801  [key=0, style=solid];
m2_1802 -> m2_1798  [key=0, style=bold, color=blue];
m2_394 -> m2_395  [key=0, style=solid];
m2_395 -> m2_396  [key=0, style=solid];
m2_395 -> m2_395  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_396 -> m2_397  [key=0, style=solid];
m2_396 -> m2_13  [key=2, style=dotted];
m2_396 -> m2_116  [key=2, style=dotted];
m2_396 -> m2_157  [key=2, style=dotted];
m2_396 -> m2_158  [key=2, style=dotted];
m2_396 -> m2_398  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_396 -> m2_399  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_396 -> m2_400  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_396 -> m2_401  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_396 -> m2_402  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_396 -> m2_403  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_396 -> m2_404  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_396 -> m2_405  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_396 -> m2_406  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_396 -> m2_407  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_396 -> m2_408  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_396 -> m2_409  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_396 -> m2_410  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_396 -> m2_411  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_396 -> m2_412  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_396 -> m2_413  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_396 -> m2_414  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_396 -> m2_415  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_396 -> m2_416  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_396 -> m2_417  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_396 -> m2_418  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_396 -> m2_419  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_396 -> m2_420  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_396 -> m2_421  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_396 -> m2_422  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_396 -> m2_423  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_397 -> m2_398  [key=0, style=solid];
m2_397 -> m2_15  [key=2, style=dotted];
m2_397 -> m2_16  [key=2, style=dotted];
m2_398 -> m2_399  [key=0, style=solid];
m2_398 -> m2_17  [key=2, style=dotted];
m2_399 -> m2_400  [key=0, style=solid];
m2_399 -> m2_15  [key=2, style=dotted];
m2_399 -> m2_16  [key=2, style=dotted];
m2_400 -> m2_401  [key=0, style=solid];
m2_400 -> m2_17  [key=2, style=dotted];
m2_401 -> m2_402  [key=0, style=solid];
m2_401 -> m2_15  [key=2, style=dotted];
m2_401 -> m2_16  [key=2, style=dotted];
m2_402 -> m2_403  [key=0, style=solid];
m2_402 -> m2_17  [key=2, style=dotted];
m2_403 -> m2_404  [key=0, style=solid];
m2_403 -> m2_15  [key=2, style=dotted];
m2_403 -> m2_16  [key=2, style=dotted];
m2_404 -> m2_405  [key=0, style=solid];
m2_404 -> m2_17  [key=2, style=dotted];
m2_405 -> m2_406  [key=0, style=solid];
m2_405 -> m2_15  [key=2, style=dotted];
m2_405 -> m2_16  [key=2, style=dotted];
m2_406 -> m2_407  [key=0, style=solid];
m2_406 -> m2_17  [key=2, style=dotted];
m2_407 -> m2_408  [key=0, style=solid];
m2_407 -> m2_15  [key=2, style=dotted];
m2_407 -> m2_16  [key=2, style=dotted];
m2_408 -> m2_409  [key=0, style=solid];
m2_408 -> m2_17  [key=2, style=dotted];
m2_409 -> m2_410  [key=0, style=solid];
m2_409 -> m2_15  [key=2, style=dotted];
m2_409 -> m2_16  [key=2, style=dotted];
m2_410 -> m2_411  [key=0, style=solid];
m2_410 -> m2_17  [key=2, style=dotted];
m2_411 -> m2_412  [key=0, style=solid];
m2_411 -> m2_15  [key=2, style=dotted];
m2_411 -> m2_16  [key=2, style=dotted];
m2_412 -> m2_413  [key=0, style=solid];
m2_412 -> m2_17  [key=2, style=dotted];
m2_413 -> m2_414  [key=0, style=solid];
m2_413 -> m2_15  [key=2, style=dotted];
m2_413 -> m2_16  [key=2, style=dotted];
m2_414 -> m2_415  [key=0, style=solid];
m2_414 -> m2_17  [key=2, style=dotted];
m2_415 -> m2_416  [key=0, style=solid];
m2_415 -> m2_15  [key=2, style=dotted];
m2_415 -> m2_16  [key=2, style=dotted];
m2_416 -> m2_417  [key=0, style=solid];
m2_416 -> m2_17  [key=2, style=dotted];
m2_417 -> m2_418  [key=0, style=solid];
m2_417 -> m2_15  [key=2, style=dotted];
m2_417 -> m2_16  [key=2, style=dotted];
m2_418 -> m2_419  [key=0, style=solid];
m2_418 -> m2_17  [key=2, style=dotted];
m2_419 -> m2_420  [key=0, style=solid];
m2_419 -> m2_17  [key=2, style=dotted];
m2_420 -> m2_421  [key=0, style=solid];
m2_420 -> m2_15  [key=2, style=dotted];
m2_420 -> m2_16  [key=2, style=dotted];
m2_421 -> m2_422  [key=0, style=solid];
m2_421 -> m2_17  [key=2, style=dotted];
m2_422 -> m2_423  [key=0, style=solid];
m2_422 -> m2_17  [key=2, style=dotted];
m2_423 -> m2_424  [key=0, style=solid];
m2_423 -> m2_15  [key=2, style=dotted];
m2_423 -> m2_131  [key=2, style=dotted];
m2_424 -> m2_394  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_1  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_13  [key=2, style=dotted];
m2_2 -> m2_14  [key=2, style=dotted];
m2_2 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_2 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_2 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_2 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_2 -> m2_8  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_2 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_2 -> m2_10  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_2 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_2 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_15  [key=2, style=dotted];
m2_3 -> m2_16  [key=2, style=dotted];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_17  [key=2, style=dotted];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_15  [key=2, style=dotted];
m2_5 -> m2_16  [key=2, style=dotted];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_17  [key=2, style=dotted];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_15  [key=2, style=dotted];
m2_7 -> m2_16  [key=2, style=dotted];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_17  [key=2, style=dotted];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_15  [key=2, style=dotted];
m2_9 -> m2_16  [key=2, style=dotted];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_17  [key=2, style=dotted];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_18  [key=2, style=dotted];
m2_11 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_12 -> m2_0  [key=0, style=bold, color=blue];
m2_676 -> m2_677  [key=0, style=solid];
m2_677 -> m2_678  [key=0, style=solid];
m2_677 -> m2_677  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_678 -> m2_679  [key=0, style=solid];
m2_678 -> m2_13  [key=2, style=dotted];
m2_678 -> m2_14  [key=2, style=dotted];
m2_679 -> m2_679  [key=0, style=solid];
m2_679 -> m2_680  [key=0, style=solid];
m2_679 -> m2_15  [key=2, style=dotted];
m2_680 -> m2_676  [key=0, style=bold, color=blue];
m2_1394 -> m2_1395  [key=0, style=solid];
m2_1395 -> m2_1396  [key=0, style=solid];
m2_1395 -> m2_1395  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1396 -> m2_1397  [key=0, style=solid];
m2_1396 -> m2_13  [key=2, style=dotted];
m2_1396 -> m2_14  [key=2, style=dotted];
m2_1396 -> m2_1398  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1396 -> m2_1399  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1396 -> m2_1400  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1397 -> m2_1398  [key=0, style=solid];
m2_1397 -> m2_15  [key=2, style=dotted];
m2_1397 -> m2_16  [key=2, style=dotted];
m2_1398 -> m2_1399  [key=0, style=solid];
m2_1398 -> m2_15  [key=2, style=dotted];
m2_1398 -> m2_16  [key=2, style=dotted];
m2_1399 -> m2_1400  [key=0, style=solid];
m2_1399 -> m2_15  [key=2, style=dotted];
m2_1399 -> m2_16  [key=2, style=dotted];
m2_1400 -> m2_1401  [key=0, style=solid];
m2_1400 -> m2_15  [key=2, style=dotted];
m2_1400 -> m2_131  [key=2, style=dotted];
m2_1401 -> m2_1394  [key=0, style=bold, color=blue];
m2_347 -> m2_348  [key=0, style=solid];
m2_348 -> m2_349  [key=0, style=solid];
m2_348 -> m2_18  [key=2, style=dotted];
m2_348 -> m2_350  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_349 -> m2_347  [key=0, style=bold, color=blue];
m2_545 -> m2_546  [key=0, style=solid];
m2_546 -> m2_547  [key=0, style=solid];
m2_546 -> m2_13  [key=2, style=dotted];
m2_546 -> m2_14  [key=2, style=dotted];
m2_546 -> m2_548  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_546 -> m2_549  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_547 -> m2_548  [key=0, style=solid];
m2_547 -> m2_138  [key=2, style=dotted];
m2_547 -> m2_16  [key=2, style=dotted];
m2_548 -> m2_549  [key=0, style=solid];
m2_548 -> m2_534  [key=2, style=dotted];
m2_548 -> m2_551  [key=2, style=dotted];
m2_549 -> m2_550  [key=0, style=solid];
m2_549 -> m2_17  [key=2, style=dotted];
m2_550 -> m2_545  [key=0, style=bold, color=blue];
m2_185 -> m2_186  [key=0, style=solid];
m2_186 -> m2_187  [key=0, style=solid];
m2_186 -> m2_186  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_187 -> m2_188  [key=0, style=solid];
m2_187 -> m2_13  [key=2, style=dotted];
m2_187 -> m2_14  [key=2, style=dotted];
m2_188 -> m2_188  [key=0, style=solid];
m2_188 -> m2_189  [key=0, style=solid];
m2_188 -> m2_15  [key=2, style=dotted];
m2_189 -> m2_185  [key=0, style=bold, color=blue];
m2_1246 -> m2_1247  [key=0, style=solid];
m2_1247 -> m2_1248  [key=0, style=solid];
m2_1247 -> m2_13  [key=2, style=dotted];
m2_1247 -> m2_14  [key=2, style=dotted];
m2_1247 -> m2_1251  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1248 -> m2_1249  [key=0, style=solid];
m2_1248 -> m2_18  [key=2, style=dotted];
m2_1248 -> m2_1250  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1249 -> m2_1246  [key=0, style=bold, color=blue];
m2_198 -> m2_199  [key=0, style=solid];
m2_199 -> m2_200  [key=0, style=solid];
m2_199 -> m2_199  [key=3, color=darkorchid, style=bold, label="Local variable string input"];
m2_200 -> m2_201  [key=0, style=solid];
m2_200 -> m2_14  [key=2, style=dotted];
m2_201 -> m2_202  [key=0, style=solid];
m2_201 -> m2_13  [key=2, style=dotted];
m2_201 -> m2_203  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_204  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_205  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_206  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_207  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_208  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_209  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_210  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_211  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_212  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_213  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_214  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_215  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_216  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_217  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_218  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_219  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_220  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_221  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_222  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_223  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_224  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_225  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_226  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_227  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_228  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_229  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_230  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_231  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_232  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_233  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_234  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_235  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_236  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_237  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_238  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_239  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_240  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_241  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_242  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_243  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_244  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_245  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_246  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_247  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_201 -> m2_248  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_202 -> m2_203  [key=0, style=solid];
m2_202 -> m2_17  [key=2, style=dotted];
m2_203 -> m2_204  [key=0, style=solid];
m2_203 -> m2_17  [key=2, style=dotted];
m2_204 -> m2_205  [key=0, style=solid];
m2_204 -> m2_17  [key=2, style=dotted];
m2_205 -> m2_206  [key=0, style=solid];
m2_205 -> m2_15  [key=2, style=dotted];
m2_206 -> m2_207  [key=0, style=solid];
m2_206 -> m2_17  [key=2, style=dotted];
m2_207 -> m2_208  [key=0, style=solid];
m2_207 -> m2_17  [key=2, style=dotted];
m2_208 -> m2_209  [key=0, style=solid];
m2_208 -> m2_17  [key=2, style=dotted];
m2_209 -> m2_210  [key=0, style=solid];
m2_209 -> m2_15  [key=2, style=dotted];
m2_210 -> m2_211  [key=0, style=solid];
m2_210 -> m2_17  [key=2, style=dotted];
m2_211 -> m2_212  [key=0, style=solid];
m2_211 -> m2_17  [key=2, style=dotted];
m2_212 -> m2_213  [key=0, style=solid];
m2_212 -> m2_17  [key=2, style=dotted];
m2_213 -> m2_214  [key=0, style=solid];
m2_213 -> m2_17  [key=2, style=dotted];
m2_214 -> m2_215  [key=0, style=solid];
m2_214 -> m2_15  [key=2, style=dotted];
m2_215 -> m2_216  [key=0, style=solid];
m2_215 -> m2_17  [key=2, style=dotted];
m2_216 -> m2_217  [key=0, style=solid];
m2_216 -> m2_17  [key=2, style=dotted];
m2_217 -> m2_218  [key=0, style=solid];
m2_217 -> m2_17  [key=2, style=dotted];
m2_218 -> m2_219  [key=0, style=solid];
m2_218 -> m2_17  [key=2, style=dotted];
m2_219 -> m2_220  [key=0, style=solid];
m2_219 -> m2_15  [key=2, style=dotted];
m2_220 -> m2_221  [key=0, style=solid];
m2_220 -> m2_17  [key=2, style=dotted];
m2_221 -> m2_222  [key=0, style=solid];
m2_221 -> m2_17  [key=2, style=dotted];
m2_222 -> m2_223  [key=0, style=solid];
m2_222 -> m2_17  [key=2, style=dotted];
m2_223 -> m2_224  [key=0, style=solid];
m2_223 -> m2_17  [key=2, style=dotted];
m2_224 -> m2_225  [key=0, style=solid];
m2_224 -> m2_15  [key=2, style=dotted];
m2_225 -> m2_226  [key=0, style=solid];
m2_225 -> m2_17  [key=2, style=dotted];
m2_226 -> m2_227  [key=0, style=solid];
m2_226 -> m2_17  [key=2, style=dotted];
m2_227 -> m2_228  [key=0, style=solid];
m2_227 -> m2_17  [key=2, style=dotted];
m2_228 -> m2_229  [key=0, style=solid];
m2_228 -> m2_15  [key=2, style=dotted];
m2_229 -> m2_230  [key=0, style=solid];
m2_229 -> m2_17  [key=2, style=dotted];
m2_230 -> m2_231  [key=0, style=solid];
m2_230 -> m2_17  [key=2, style=dotted];
m2_231 -> m2_232  [key=0, style=solid];
m2_231 -> m2_17  [key=2, style=dotted];
m2_232 -> m2_233  [key=0, style=solid];
m2_232 -> m2_17  [key=2, style=dotted];
m2_233 -> m2_234  [key=0, style=solid];
m2_233 -> m2_17  [key=2, style=dotted];
m2_234 -> m2_235  [key=0, style=solid];
m2_234 -> m2_15  [key=2, style=dotted];
m2_235 -> m2_236  [key=0, style=solid];
m2_235 -> m2_17  [key=2, style=dotted];
m2_236 -> m2_237  [key=0, style=solid];
m2_236 -> m2_17  [key=2, style=dotted];
m2_237 -> m2_238  [key=0, style=solid];
m2_237 -> m2_17  [key=2, style=dotted];
m2_238 -> m2_239  [key=0, style=solid];
m2_238 -> m2_17  [key=2, style=dotted];
m2_239 -> m2_240  [key=0, style=solid];
m2_239 -> m2_17  [key=2, style=dotted];
m2_240 -> m2_241  [key=0, style=solid];
m2_240 -> m2_15  [key=2, style=dotted];
m2_241 -> m2_242  [key=0, style=solid];
m2_241 -> m2_17  [key=2, style=dotted];
m2_242 -> m2_243  [key=0, style=solid];
m2_242 -> m2_17  [key=2, style=dotted];
m2_243 -> m2_244  [key=0, style=solid];
m2_243 -> m2_17  [key=2, style=dotted];
m2_244 -> m2_245  [key=0, style=solid];
m2_244 -> m2_15  [key=2, style=dotted];
m2_245 -> m2_246  [key=0, style=solid];
m2_245 -> m2_17  [key=2, style=dotted];
m2_246 -> m2_247  [key=0, style=solid];
m2_246 -> m2_17  [key=2, style=dotted];
m2_247 -> m2_248  [key=0, style=solid];
m2_247 -> m2_17  [key=2, style=dotted];
m2_248 -> m2_249  [key=0, style=solid];
m2_248 -> m2_15  [key=2, style=dotted];
m2_248 -> m2_131  [key=2, style=dotted];
m2_249 -> m2_198  [key=0, style=bold, color=blue];
m2_159 -> m2_160  [key=0, style=solid];
m2_160 -> m2_161  [key=0, style=solid];
m2_160 -> m2_160  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_161 -> m2_162  [key=0, style=solid];
m2_161 -> m2_13  [key=2, style=dotted];
m2_161 -> m2_14  [key=2, style=dotted];
m2_161 -> m2_165  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_162 -> m2_163  [key=0, style=solid];
m2_162 -> m2_18  [key=2, style=dotted];
m2_162 -> m2_164  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_163 -> m2_159  [key=0, style=bold, color=blue];
m2_1239 -> m2_1240  [key=0, style=solid];
m2_1240 -> m2_1241  [key=0, style=solid];
m2_1240 -> m2_13  [key=2, style=dotted];
m2_1240 -> m2_14  [key=2, style=dotted];
m2_1240 -> m2_1244  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1241 -> m2_1242  [key=0, style=solid];
m2_1241 -> m2_18  [key=2, style=dotted];
m2_1241 -> m2_1243  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1242 -> m2_1239  [key=0, style=bold, color=blue];
m2_1267 -> m2_1268  [key=0, style=solid];
m2_1268 -> m2_1269  [key=0, style=solid];
m2_1268 -> m2_1268  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1269 -> m2_1270  [key=0, style=solid];
m2_1269 -> m2_13  [key=2, style=dotted];
m2_1269 -> m2_14  [key=2, style=dotted];
m2_1269 -> m2_1271  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1269 -> m2_1272  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1269 -> m2_1273  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1269 -> m2_1274  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1269 -> m2_1275  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1269 -> m2_1276  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1269 -> m2_1277  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1269 -> m2_1279  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1269 -> m2_1280  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1270 -> m2_1271  [key=0, style=solid];
m2_1270 -> m2_1177  [key=2, style=dotted];
m2_1271 -> m2_1272  [key=0, style=solid];
m2_1271 -> m2_15  [key=2, style=dotted];
m2_1271 -> m2_16  [key=2, style=dotted];
m2_1272 -> m2_1273  [key=0, style=solid];
m2_1272 -> m2_17  [key=2, style=dotted];
m2_1273 -> m2_1274  [key=0, style=solid];
m2_1273 -> m2_15  [key=2, style=dotted];
m2_1273 -> m2_16  [key=2, style=dotted];
m2_1274 -> m2_1275  [key=0, style=solid];
m2_1274 -> m2_17  [key=2, style=dotted];
m2_1275 -> m2_1276  [key=0, style=solid];
m2_1275 -> m2_984  [key=2, style=dotted];
m2_1275 -> m2_1278  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_1276 -> m2_1277  [key=0, style=solid];
m2_1276 -> m2_17  [key=2, style=dotted];
m2_1277 -> m2_1278  [key=0, style=solid];
m2_1277 -> m2_17  [key=2, style=dotted];
m2_1279 -> m2_1280  [key=0, style=solid];
m2_1279 -> m2_15  [key=2, style=dotted];
m2_1279 -> m2_16  [key=2, style=dotted];
m2_1280 -> m2_1281  [key=0, style=solid];
m2_1280 -> m2_17  [key=2, style=dotted];
m2_1278 -> m2_1279  [key=0, style=solid];
m2_1278 -> m2_17  [key=2, style=dotted];
m2_1281 -> m2_1267  [key=0, style=bold, color=blue];
m2_1282 -> m2_1283  [key=0, style=solid];
m2_1283 -> m2_1284  [key=0, style=solid];
m2_1283 -> m2_1283  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1284 -> m2_1285  [key=0, style=solid];
m2_1284 -> m2_13  [key=2, style=dotted];
m2_1284 -> m2_14  [key=2, style=dotted];
m2_1284 -> m2_1287  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1284 -> m2_1289  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1284 -> m2_1290  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1285 -> m2_1286  [key=0, style=solid];
m2_1285 -> m2_1288  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_1285 -> m2_373  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m2_1287 -> m2_1288  [key=0, style=solid];
m2_1287 -> m2_15  [key=2, style=dotted];
m2_1289 -> m2_1290  [key=0, style=solid];
m2_1289 -> m2_15  [key=2, style=dotted];
m2_1289 -> m2_16  [key=2, style=dotted];
m2_1290 -> m2_1291  [key=0, style=solid];
m2_1290 -> m2_1292  [key=2, style=dotted];
m2_1290 -> m2_17  [key=2, style=dotted];
m2_1286 -> m2_1287  [key=0, style=solid];
m2_1286 -> m2_1289  [key=0, style=solid];
m2_1288 -> m2_1286  [key=0, style=solid];
m2_1288 -> m2_1288  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_1291 -> m2_1282  [key=0, style=bold, color=blue];
m2_1599 -> m2_1600  [key=0, style=solid];
m2_1600 -> m2_1601  [key=0, style=solid];
m2_1600 -> m2_1600  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1601 -> m2_1602  [key=0, style=solid];
m2_1601 -> m2_13  [key=2, style=dotted];
m2_1601 -> m2_14  [key=2, style=dotted];
m2_1601 -> m2_1603  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1601 -> m2_1604  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1601 -> m2_1629  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1601 -> m2_1605  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1601 -> m2_1606  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1601 -> m2_1607  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1601 -> m2_1608  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1601 -> m2_1609  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1601 -> m2_1610  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1601 -> m2_1611  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1601 -> m2_1612  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1601 -> m2_1613  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1601 -> m2_1614  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1601 -> m2_1615  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1601 -> m2_1616  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1601 -> m2_1632  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1601 -> m2_1617  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1601 -> m2_1618  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1601 -> m2_1619  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1601 -> m2_1620  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1601 -> m2_1621  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1601 -> m2_1622  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1601 -> m2_1623  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1601 -> m2_1624  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1601 -> m2_1625  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1601 -> m2_1626  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1602 -> m2_1603  [key=0, style=solid];
m2_1602 -> m2_15  [key=2, style=dotted];
m2_1602 -> m2_16  [key=2, style=dotted];
m2_1603 -> m2_1604  [key=0, style=solid];
m2_1603 -> m2_17  [key=2, style=dotted];
m2_1604 -> m2_1605  [key=0, style=solid];
m2_1604 -> m2_1438  [key=2, style=dotted];
m2_1604 -> m2_1628  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1605 -> m2_1606  [key=0, style=solid];
m2_1605 -> m2_17  [key=2, style=dotted];
m2_1606 -> m2_1607  [key=0, style=solid];
m2_1606 -> m2_15  [key=2, style=dotted];
m2_1606 -> m2_16  [key=2, style=dotted];
m2_1607 -> m2_1608  [key=0, style=solid];
m2_1607 -> m2_17  [key=2, style=dotted];
m2_1608 -> m2_1609  [key=0, style=solid];
m2_1608 -> m2_15  [key=2, style=dotted];
m2_1608 -> m2_16  [key=2, style=dotted];
m2_1609 -> m2_1610  [key=0, style=solid];
m2_1609 -> m2_17  [key=2, style=dotted];
m2_1610 -> m2_1611  [key=0, style=solid];
m2_1610 -> m2_15  [key=2, style=dotted];
m2_1610 -> m2_16  [key=2, style=dotted];
m2_1611 -> m2_1612  [key=0, style=solid];
m2_1611 -> m2_17  [key=2, style=dotted];
m2_1612 -> m2_1613  [key=0, style=solid];
m2_1612 -> m2_15  [key=2, style=dotted];
m2_1612 -> m2_16  [key=2, style=dotted];
m2_1613 -> m2_1614  [key=0, style=solid];
m2_1613 -> m2_17  [key=2, style=dotted];
m2_1614 -> m2_1615  [key=0, style=solid];
m2_1614 -> m2_15  [key=2, style=dotted];
m2_1614 -> m2_16  [key=2, style=dotted];
m2_1615 -> m2_1616  [key=0, style=solid];
m2_1615 -> m2_17  [key=2, style=dotted];
m2_1616 -> m2_1617  [key=0, style=solid];
m2_1616 -> m2_1438  [key=2, style=dotted];
m2_1616 -> m2_1631  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1617 -> m2_1618  [key=0, style=solid];
m2_1617 -> m2_17  [key=2, style=dotted];
m2_1618 -> m2_1619  [key=0, style=solid];
m2_1618 -> m2_15  [key=2, style=dotted];
m2_1618 -> m2_16  [key=2, style=dotted];
m2_1619 -> m2_1620  [key=0, style=solid];
m2_1619 -> m2_17  [key=2, style=dotted];
m2_1620 -> m2_1621  [key=0, style=solid];
m2_1620 -> m2_15  [key=2, style=dotted];
m2_1620 -> m2_16  [key=2, style=dotted];
m2_1621 -> m2_1622  [key=0, style=solid];
m2_1621 -> m2_17  [key=2, style=dotted];
m2_1622 -> m2_1623  [key=0, style=solid];
m2_1622 -> m2_15  [key=2, style=dotted];
m2_1622 -> m2_16  [key=2, style=dotted];
m2_1623 -> m2_1624  [key=0, style=solid];
m2_1623 -> m2_17  [key=2, style=dotted];
m2_1624 -> m2_1625  [key=0, style=solid];
m2_1624 -> m2_15  [key=2, style=dotted];
m2_1624 -> m2_16  [key=2, style=dotted];
m2_1625 -> m2_1626  [key=0, style=solid];
m2_1625 -> m2_17  [key=2, style=dotted];
m2_1626 -> m2_1627  [key=0, style=solid];
m2_1626 -> m2_15  [key=2, style=dotted];
m2_1626 -> m2_131  [key=2, style=dotted];
m2_1627 -> m2_1599  [key=0, style=bold, color=blue];
m2_1017 -> m2_1018  [key=0, style=solid];
m2_1018 -> m2_1019  [key=0, style=solid];
m2_1018 -> m2_13  [key=2, style=dotted];
m2_1018 -> m2_14  [key=2, style=dotted];
m2_1018 -> m2_1022  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1019 -> m2_1020  [key=0, style=solid];
m2_1019 -> m2_18  [key=2, style=dotted];
m2_1019 -> m2_1021  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1020 -> m2_1017  [key=0, style=bold, color=blue];
m2_107 -> m2_108  [key=0, style=solid];
m2_107 -> m2_94  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m2_107 -> m2_95  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m2_107 -> m2_96  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m2_107 -> m2_97  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m2_107 -> m2_98  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m2_107 -> m2_99  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m2_107 -> m2_100  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m2_107 -> m2_101  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m2_107 -> m2_102  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m2_107 -> m2_103  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m2_107 -> m2_104  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m2_107 -> m2_105  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m2_107 -> m2_111  [key=3, color=darkorchid, style=bold, label="method methodReturn string ReadString"];
m2_108 -> m2_109  [key=0, style=solid];
m2_108 -> m2_114  [key=2, style=dotted];
m2_108 -> m2_115  [key=2, style=dotted];
m2_109 -> m2_110  [key=0, style=solid];
m2_109 -> m2_13  [key=2, style=dotted];
m2_109 -> m2_116  [key=2, style=dotted];
m2_109 -> m2_111  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_110 -> m2_111  [key=0, style=solid];
m2_110 -> m2_15  [key=2, style=dotted];
m2_111 -> m2_112  [key=0, style=solid];
m2_112 -> m2_113  [key=0, style=solid];
m2_113 -> m2_107  [key=0, style=bold, color=blue];
m2_1253 -> m2_1254  [key=0, style=solid];
m2_1254 -> m2_1255  [key=0, style=solid];
m2_1254 -> m2_1254  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1255 -> m2_1256  [key=0, style=solid];
m2_1255 -> m2_13  [key=2, style=dotted];
m2_1255 -> m2_14  [key=2, style=dotted];
m2_1255 -> m2_1257  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1255 -> m2_1258  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1255 -> m2_1259  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1255 -> m2_1260  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1255 -> m2_1261  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1255 -> m2_1262  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1255 -> m2_1264  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1255 -> m2_1265  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1256 -> m2_1257  [key=0, style=solid];
m2_1256 -> m2_15  [key=2, style=dotted];
m2_1256 -> m2_16  [key=2, style=dotted];
m2_1257 -> m2_1258  [key=0, style=solid];
m2_1257 -> m2_17  [key=2, style=dotted];
m2_1258 -> m2_1259  [key=0, style=solid];
m2_1258 -> m2_15  [key=2, style=dotted];
m2_1258 -> m2_16  [key=2, style=dotted];
m2_1259 -> m2_1260  [key=0, style=solid];
m2_1259 -> m2_17  [key=2, style=dotted];
m2_1260 -> m2_1261  [key=0, style=solid];
m2_1260 -> m2_984  [key=2, style=dotted];
m2_1260 -> m2_1263  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_1261 -> m2_1262  [key=0, style=solid];
m2_1261 -> m2_17  [key=2, style=dotted];
m2_1262 -> m2_1263  [key=0, style=solid];
m2_1262 -> m2_17  [key=2, style=dotted];
m2_1264 -> m2_1265  [key=0, style=solid];
m2_1264 -> m2_15  [key=2, style=dotted];
m2_1264 -> m2_16  [key=2, style=dotted];
m2_1265 -> m2_1266  [key=0, style=solid];
m2_1265 -> m2_17  [key=2, style=dotted];
m2_1263 -> m2_1264  [key=0, style=solid];
m2_1263 -> m2_17  [key=2, style=dotted];
m2_1266 -> m2_1253  [key=0, style=bold, color=blue];
m2_725 -> m2_726  [key=0, style=solid];
m2_726 -> m2_727  [key=0, style=solid];
m2_726 -> m2_762  [key=2, style=dotted];
m2_726 -> m2_753  [key=1, style=dashed, color=darkseagreen4, label=sb];
m2_727 -> m2_728  [key=0, style=solid];
m2_727 -> m2_763  [key=2, style=dotted];
m2_753 -> m2_754  [key=0, style=solid];
m2_753 -> m2_773  [key=2, style=dotted];
m2_753 -> m2_755  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_753 -> m2_760  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_728 -> m2_729  [key=0, style=solid];
m2_728 -> m2_389  [key=2, style=dotted];
m2_728 -> m2_730  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m2_728 -> m2_731  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m2_728 -> m2_732  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m2_728 -> m2_733  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m2_728 -> m2_734  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m2_728 -> m2_735  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m2_728 -> m2_736  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m2_728 -> m2_737  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m2_728 -> m2_740  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m2_728 -> m2_742  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m2_728 -> m2_743  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m2_728 -> m2_744  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m2_728 -> m2_745  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m2_728 -> m2_746  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m2_728 -> m2_747  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m2_728 -> m2_748  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m2_728 -> m2_749  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m2_728 -> m2_750  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m2_728 -> m2_751  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m2_728 -> m2_752  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m2_729 -> m2_730  [key=0, style=solid];
m2_729 -> m2_764  [key=2, style=dotted];
m2_730 -> m2_731  [key=0, style=solid];
m2_730 -> m2_765  [key=2, style=dotted];
m2_731 -> m2_732  [key=0, style=solid];
m2_731 -> m2_766  [key=2, style=dotted];
m2_732 -> m2_733  [key=0, style=solid];
m2_732 -> m2_767  [key=2, style=dotted];
m2_733 -> m2_734  [key=0, style=solid];
m2_733 -> m2_768  [key=2, style=dotted];
m2_734 -> m2_735  [key=0, style=solid];
m2_734 -> m2_767  [key=2, style=dotted];
m2_735 -> m2_736  [key=0, style=solid];
m2_735 -> m2_769  [key=2, style=dotted];
m2_736 -> m2_737  [key=0, style=solid];
m2_736 -> m2_767  [key=2, style=dotted];
m2_737 -> m2_738  [key=0, style=solid];
m2_737 -> m2_764  [key=2, style=dotted];
m2_740 -> m2_741  [key=0, style=solid];
m2_740 -> m2_768  [key=2, style=dotted];
m2_742 -> m2_743  [key=0, style=solid];
m2_742 -> m2_766  [key=2, style=dotted];
m2_743 -> m2_744  [key=0, style=solid];
m2_743 -> m2_767  [key=2, style=dotted];
m2_744 -> m2_745  [key=0, style=solid];
m2_744 -> m2_770  [key=2, style=dotted];
m2_745 -> m2_746  [key=0, style=solid];
m2_745 -> m2_771  [key=2, style=dotted];
m2_746 -> m2_747  [key=0, style=solid];
m2_746 -> m2_768  [key=2, style=dotted];
m2_747 -> m2_748  [key=0, style=solid];
m2_747 -> m2_392  [key=2, style=dotted];
m2_748 -> m2_749  [key=0, style=solid];
m2_748 -> m2_771  [key=2, style=dotted];
m2_749 -> m2_750  [key=0, style=solid];
m2_749 -> m2_769  [key=2, style=dotted];
m2_750 -> m2_751  [key=0, style=solid];
m2_750 -> m2_772  [key=2, style=dotted];
m2_751 -> m2_752  [key=0, style=solid];
m2_751 -> m2_772  [key=2, style=dotted];
m2_752 -> m2_753  [key=0, style=solid];
m2_752 -> m2_392  [key=2, style=dotted];
m2_738 -> m2_739  [key=0, style=solid];
m2_738 -> m2_740  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_738 -> m2_741  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_738 -> m2_373  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m2_739 -> m2_740  [key=0, style=solid];
m2_739 -> m2_742  [key=0, style=solid];
m2_741 -> m2_739  [key=0, style=solid];
m2_741 -> m2_741  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_754 -> m2_755  [key=0, style=solid];
m2_754 -> m2_774  [key=2, style=dotted];
m2_754 -> m2_759  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_755 -> m2_756  [key=0, style=solid];
m2_755 -> m2_13  [key=2, style=dotted];
m2_755 -> m2_14  [key=2, style=dotted];
m2_755 -> m2_775  [key=2, style=dotted];
m2_755 -> m2_759  [key=1, style=dashed, color=darkseagreen4, label=jsonObject];
m2_760 -> m2_761  [key=0, style=solid];
m2_760 -> m2_773  [key=2, style=dotted];
m2_760 -> m2_17  [key=2, style=dotted];
m2_759 -> m2_760  [key=0, style=solid];
m2_759 -> n5  [key=2, style=dotted];
m2_756 -> m2_757  [key=0, style=solid];
m2_756 -> m2_762  [key=2, style=dotted];
m2_756 -> m2_760  [key=1, style=dashed, color=darkseagreen4, label=sb];
m2_757 -> m2_758  [key=0, style=solid];
m2_757 -> m2_763  [key=2, style=dotted];
m2_758 -> m2_759  [key=0, style=solid];
m2_758 -> m2_389  [key=2, style=dotted];
m2_761 -> m2_725  [key=0, style=bold, color=blue];
m2_1418 -> m2_1419  [key=0, style=solid];
m2_1419 -> m2_1420  [key=0, style=solid];
m2_1419 -> m2_13  [key=2, style=dotted];
m2_1419 -> m2_14  [key=2, style=dotted];
m2_1419 -> m2_1423  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1420 -> m2_1421  [key=0, style=solid];
m2_1420 -> m2_18  [key=2, style=dotted];
m2_1420 -> m2_1422  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1421 -> m2_1418  [key=0, style=bold, color=blue];
m2_1634 -> m2_1635  [key=0, style=solid];
m2_1635 -> m2_1636  [key=0, style=solid];
m2_1635 -> m2_1635  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1636 -> m2_1637  [key=0, style=solid];
m2_1636 -> m2_13  [key=2, style=dotted];
m2_1636 -> m2_116  [key=2, style=dotted];
m2_1636 -> m2_157  [key=2, style=dotted];
m2_1636 -> m2_158  [key=2, style=dotted];
m2_1636 -> m2_1638  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1636 -> m2_1639  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1636 -> m2_1640  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1636 -> m2_1641  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1636 -> m2_1642  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1636 -> m2_1643  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1636 -> m2_1644  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1636 -> m2_1645  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1636 -> m2_1646  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1636 -> m2_1647  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1636 -> m2_1648  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1636 -> m2_1649  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1636 -> m2_1650  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1636 -> m2_1651  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1636 -> m2_1652  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1636 -> m2_1653  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1636 -> m2_1654  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1636 -> m2_1655  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1636 -> m2_1656  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1636 -> m2_1657  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1636 -> m2_1658  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1636 -> m2_1659  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1636 -> m2_1660  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1636 -> m2_1661  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1636 -> m2_1662  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1636 -> m2_1663  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1636 -> m2_1664  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1636 -> m2_1665  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1636 -> m2_1666  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1636 -> m2_1667  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1636 -> m2_1668  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1636 -> m2_1669  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1636 -> m2_1670  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1636 -> m2_1671  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1636 -> m2_1672  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1636 -> m2_1673  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1637 -> m2_1638  [key=0, style=solid];
m2_1637 -> m2_15  [key=2, style=dotted];
m2_1637 -> m2_16  [key=2, style=dotted];
m2_1638 -> m2_1639  [key=0, style=solid];
m2_1638 -> m2_15  [key=2, style=dotted];
m2_1638 -> m2_16  [key=2, style=dotted];
m2_1639 -> m2_1640  [key=0, style=solid];
m2_1639 -> m2_17  [key=2, style=dotted];
m2_1640 -> m2_1641  [key=0, style=solid];
m2_1640 -> m2_15  [key=2, style=dotted];
m2_1640 -> m2_16  [key=2, style=dotted];
m2_1641 -> m2_1642  [key=0, style=solid];
m2_1641 -> m2_17  [key=2, style=dotted];
m2_1642 -> m2_1643  [key=0, style=solid];
m2_1642 -> m2_17  [key=2, style=dotted];
m2_1643 -> m2_1644  [key=0, style=solid];
m2_1643 -> m2_15  [key=2, style=dotted];
m2_1643 -> m2_16  [key=2, style=dotted];
m2_1644 -> m2_1645  [key=0, style=solid];
m2_1644 -> m2_17  [key=2, style=dotted];
m2_1645 -> m2_1646  [key=0, style=solid];
m2_1645 -> m2_17  [key=2, style=dotted];
m2_1646 -> m2_1647  [key=0, style=solid];
m2_1646 -> m2_15  [key=2, style=dotted];
m2_1646 -> m2_16  [key=2, style=dotted];
m2_1647 -> m2_1648  [key=0, style=solid];
m2_1647 -> m2_17  [key=2, style=dotted];
m2_1648 -> m2_1649  [key=0, style=solid];
m2_1648 -> m2_17  [key=2, style=dotted];
m2_1649 -> m2_1650  [key=0, style=solid];
m2_1649 -> m2_15  [key=2, style=dotted];
m2_1649 -> m2_16  [key=2, style=dotted];
m2_1650 -> m2_1651  [key=0, style=solid];
m2_1650 -> m2_17  [key=2, style=dotted];
m2_1651 -> m2_1652  [key=0, style=solid];
m2_1651 -> m2_17  [key=2, style=dotted];
m2_1652 -> m2_1653  [key=0, style=solid];
m2_1652 -> m2_15  [key=2, style=dotted];
m2_1652 -> m2_16  [key=2, style=dotted];
m2_1653 -> m2_1654  [key=0, style=solid];
m2_1653 -> m2_17  [key=2, style=dotted];
m2_1654 -> m2_1655  [key=0, style=solid];
m2_1654 -> m2_17  [key=2, style=dotted];
m2_1655 -> m2_1656  [key=0, style=solid];
m2_1655 -> m2_15  [key=2, style=dotted];
m2_1655 -> m2_16  [key=2, style=dotted];
m2_1656 -> m2_1657  [key=0, style=solid];
m2_1656 -> m2_17  [key=2, style=dotted];
m2_1657 -> m2_1658  [key=0, style=solid];
m2_1657 -> m2_17  [key=2, style=dotted];
m2_1658 -> m2_1659  [key=0, style=solid];
m2_1658 -> m2_15  [key=2, style=dotted];
m2_1658 -> m2_16  [key=2, style=dotted];
m2_1659 -> m2_1660  [key=0, style=solid];
m2_1659 -> m2_17  [key=2, style=dotted];
m2_1660 -> m2_1661  [key=0, style=solid];
m2_1660 -> m2_17  [key=2, style=dotted];
m2_1661 -> m2_1662  [key=0, style=solid];
m2_1661 -> m2_15  [key=2, style=dotted];
m2_1661 -> m2_16  [key=2, style=dotted];
m2_1662 -> m2_1663  [key=0, style=solid];
m2_1662 -> m2_17  [key=2, style=dotted];
m2_1663 -> m2_1664  [key=0, style=solid];
m2_1663 -> m2_17  [key=2, style=dotted];
m2_1664 -> m2_1665  [key=0, style=solid];
m2_1664 -> m2_15  [key=2, style=dotted];
m2_1664 -> m2_16  [key=2, style=dotted];
m2_1665 -> m2_1666  [key=0, style=solid];
m2_1665 -> m2_17  [key=2, style=dotted];
m2_1666 -> m2_1667  [key=0, style=solid];
m2_1666 -> m2_17  [key=2, style=dotted];
m2_1667 -> m2_1668  [key=0, style=solid];
m2_1667 -> m2_15  [key=2, style=dotted];
m2_1667 -> m2_16  [key=2, style=dotted];
m2_1668 -> m2_1669  [key=0, style=solid];
m2_1668 -> m2_17  [key=2, style=dotted];
m2_1669 -> m2_1670  [key=0, style=solid];
m2_1669 -> m2_17  [key=2, style=dotted];
m2_1670 -> m2_1671  [key=0, style=solid];
m2_1670 -> m2_15  [key=2, style=dotted];
m2_1670 -> m2_16  [key=2, style=dotted];
m2_1671 -> m2_1672  [key=0, style=solid];
m2_1671 -> m2_17  [key=2, style=dotted];
m2_1672 -> m2_1673  [key=0, style=solid];
m2_1672 -> m2_17  [key=2, style=dotted];
m2_1673 -> m2_1674  [key=0, style=solid];
m2_1673 -> m2_15  [key=2, style=dotted];
m2_1673 -> m2_16  [key=2, style=dotted];
m2_1674 -> m2_1634  [key=0, style=bold, color=blue];
m2_1304 -> m2_1305  [key=0, style=solid];
m2_1305 -> m2_1306  [key=0, style=solid];
m2_1305 -> m2_1305  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1306 -> m2_1307  [key=0, style=solid];
m2_1306 -> m2_13  [key=2, style=dotted];
m2_1306 -> m2_14  [key=2, style=dotted];
m2_1306 -> m2_1308  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1306 -> m2_1309  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1306 -> m2_1310  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1306 -> m2_1311  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1307 -> m2_1308  [key=0, style=solid];
m2_1307 -> m2_15  [key=2, style=dotted];
m2_1307 -> m2_16  [key=2, style=dotted];
m2_1308 -> m2_1309  [key=0, style=solid];
m2_1308 -> m2_17  [key=2, style=dotted];
m2_1309 -> m2_1310  [key=0, style=solid];
m2_1309 -> m2_17  [key=2, style=dotted];
m2_1310 -> m2_1311  [key=0, style=solid];
m2_1310 -> m2_15  [key=2, style=dotted];
m2_1310 -> m2_16  [key=2, style=dotted];
m2_1311 -> m2_1312  [key=0, style=solid];
m2_1311 -> m2_17  [key=2, style=dotted];
m2_1312 -> m2_1304  [key=0, style=bold, color=blue];
m2_1225 -> m2_1226  [key=0, style=solid];
m2_1226 -> m2_1227  [key=0, style=solid];
m2_1226 -> m2_13  [key=2, style=dotted];
m2_1226 -> m2_14  [key=2, style=dotted];
m2_1226 -> m2_1230  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1227 -> m2_1228  [key=0, style=solid];
m2_1227 -> m2_18  [key=2, style=dotted];
m2_1227 -> m2_1229  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1228 -> m2_1225  [key=0, style=bold, color=blue];
m2_508 -> m2_509  [key=0, style=solid];
m2_509 -> m2_510  [key=0, style=solid];
m2_509 -> m2_13  [key=2, style=dotted];
m2_509 -> m2_14  [key=2, style=dotted];
m2_509 -> m2_511  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_510 -> m2_511  [key=0, style=solid];
m2_510 -> m2_138  [key=2, style=dotted];
m2_510 -> m2_16  [key=2, style=dotted];
m2_511 -> m2_512  [key=0, style=solid];
m2_511 -> m2_17  [key=2, style=dotted];
m2_512 -> m2_508  [key=0, style=bold, color=blue];
m2_167 -> m2_168  [key=0, style=solid];
m2_168 -> m2_169  [key=0, style=solid];
m2_168 -> m2_168  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_169 -> m2_170  [key=0, style=solid];
m2_169 -> m2_13  [key=2, style=dotted];
m2_169 -> m2_14  [key=2, style=dotted];
m2_169 -> m2_171  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_169 -> m2_172  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_169 -> m2_173  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_169 -> m2_174  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_169 -> m2_175  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_169 -> m2_176  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_169 -> m2_177  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_169 -> m2_178  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_169 -> m2_179  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_169 -> m2_180  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_169 -> m2_183  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_170 -> m2_171  [key=0, style=solid];
m2_170 -> m2_15  [key=2, style=dotted];
m2_171 -> m2_172  [key=0, style=solid];
m2_171 -> m2_17  [key=2, style=dotted];
m2_172 -> m2_173  [key=0, style=solid];
m2_172 -> m2_15  [key=2, style=dotted];
m2_173 -> m2_174  [key=0, style=solid];
m2_173 -> m2_17  [key=2, style=dotted];
m2_174 -> m2_175  [key=0, style=solid];
m2_174 -> m2_15  [key=2, style=dotted];
m2_175 -> m2_176  [key=0, style=solid];
m2_175 -> m2_17  [key=2, style=dotted];
m2_176 -> m2_177  [key=0, style=solid];
m2_176 -> m2_15  [key=2, style=dotted];
m2_177 -> m2_178  [key=0, style=solid];
m2_177 -> m2_17  [key=2, style=dotted];
m2_178 -> m2_179  [key=0, style=solid];
m2_178 -> m2_15  [key=2, style=dotted];
m2_179 -> m2_180  [key=0, style=solid];
m2_179 -> m2_17  [key=2, style=dotted];
m2_180 -> m2_181  [key=0, style=solid];
m2_180 -> m2_18  [key=2, style=dotted];
m2_180 -> m2_182  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_181 -> m2_167  [key=0, style=bold, color=blue];
m2_810 -> m2_811  [key=0, style=solid];
m2_811 -> m2_812  [key=0, style=solid];
m2_811 -> m2_811  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_812 -> m2_813  [key=0, style=solid];
m2_812 -> m2_13  [key=2, style=dotted];
m2_812 -> m2_14  [key=2, style=dotted];
m2_812 -> m2_814  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_812 -> m2_815  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_812 -> m2_816  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_812 -> m2_817  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_812 -> m2_818  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_812 -> m2_819  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_812 -> m2_820  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_813 -> m2_814  [key=0, style=solid];
m2_813 -> m2_15  [key=2, style=dotted];
m2_814 -> m2_815  [key=0, style=solid];
m2_814 -> m2_17  [key=2, style=dotted];
m2_815 -> m2_816  [key=0, style=solid];
m2_815 -> m2_15  [key=2, style=dotted];
m2_816 -> m2_817  [key=0, style=solid];
m2_816 -> m2_17  [key=2, style=dotted];
m2_817 -> m2_818  [key=0, style=solid];
m2_817 -> m2_15  [key=2, style=dotted];
m2_818 -> m2_819  [key=0, style=solid];
m2_818 -> m2_822  [key=2, style=dotted];
m2_818 -> m2_823  [key=2, style=dotted];
m2_818 -> m2_17  [key=2, style=dotted];
m2_819 -> m2_820  [key=0, style=solid];
m2_819 -> m2_15  [key=2, style=dotted];
m2_820 -> m2_821  [key=0, style=solid];
m2_820 -> m2_17  [key=2, style=dotted];
m2_821 -> m2_810  [key=0, style=bold, color=blue];
m2_250 -> m2_251  [key=0, style=solid];
m2_251 -> m2_252  [key=0, style=solid];
m2_251 -> m2_251  [key=3, color=darkorchid, style=bold, label="Local variable string input"];
m2_252 -> m2_253  [key=0, style=solid];
m2_252 -> m2_14  [key=2, style=dotted];
m2_253 -> m2_254  [key=0, style=solid];
m2_253 -> m2_13  [key=2, style=dotted];
m2_253 -> m2_255  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_256  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_257  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_258  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_259  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_260  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_261  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_262  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_263  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_264  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_265  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_266  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_267  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_268  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_269  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_270  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_271  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_272  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_273  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_274  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_275  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_276  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_277  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_278  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_279  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_280  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_281  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_282  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_283  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_284  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_285  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_286  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_287  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_288  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_289  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_290  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_291  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_292  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_293  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_294  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_295  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_296  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_297  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_298  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_299  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_300  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_301  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_302  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_303  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_304  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_305  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_306  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_307  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_308  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_309  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_310  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_311  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_312  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_313  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_314  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_315  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_316  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_317  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_318  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_319  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_320  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_321  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_322  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_323  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_324  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_325  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_326  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_327  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_328  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_329  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_330  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_331  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_332  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_333  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_334  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_335  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_336  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_337  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_338  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_339  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_340  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_341  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_342  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_343  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_344  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_253 -> m2_345  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_254 -> m2_255  [key=0, style=solid];
m2_254 -> m2_17  [key=2, style=dotted];
m2_255 -> m2_256  [key=0, style=solid];
m2_255 -> m2_138  [key=2, style=dotted];
m2_256 -> m2_257  [key=0, style=solid];
m2_256 -> m2_17  [key=2, style=dotted];
m2_257 -> m2_258  [key=0, style=solid];
m2_257 -> m2_17  [key=2, style=dotted];
m2_258 -> m2_259  [key=0, style=solid];
m2_258 -> m2_17  [key=2, style=dotted];
m2_259 -> m2_260  [key=0, style=solid];
m2_259 -> m2_138  [key=2, style=dotted];
m2_260 -> m2_261  [key=0, style=solid];
m2_260 -> m2_17  [key=2, style=dotted];
m2_261 -> m2_262  [key=0, style=solid];
m2_261 -> m2_17  [key=2, style=dotted];
m2_262 -> m2_263  [key=0, style=solid];
m2_262 -> m2_17  [key=2, style=dotted];
m2_263 -> m2_264  [key=0, style=solid];
m2_263 -> m2_138  [key=2, style=dotted];
m2_264 -> m2_265  [key=0, style=solid];
m2_264 -> m2_17  [key=2, style=dotted];
m2_265 -> m2_266  [key=0, style=solid];
m2_265 -> m2_17  [key=2, style=dotted];
m2_266 -> m2_267  [key=0, style=solid];
m2_266 -> m2_17  [key=2, style=dotted];
m2_267 -> m2_268  [key=0, style=solid];
m2_267 -> m2_17  [key=2, style=dotted];
m2_268 -> m2_269  [key=0, style=solid];
m2_268 -> m2_17  [key=2, style=dotted];
m2_269 -> m2_270  [key=0, style=solid];
m2_269 -> m2_138  [key=2, style=dotted];
m2_270 -> m2_271  [key=0, style=solid];
m2_270 -> m2_17  [key=2, style=dotted];
m2_271 -> m2_272  [key=0, style=solid];
m2_271 -> m2_17  [key=2, style=dotted];
m2_272 -> m2_273  [key=0, style=solid];
m2_272 -> m2_17  [key=2, style=dotted];
m2_273 -> m2_274  [key=0, style=solid];
m2_273 -> m2_138  [key=2, style=dotted];
m2_274 -> m2_275  [key=0, style=solid];
m2_274 -> m2_17  [key=2, style=dotted];
m2_275 -> m2_276  [key=0, style=solid];
m2_275 -> m2_17  [key=2, style=dotted];
m2_276 -> m2_277  [key=0, style=solid];
m2_276 -> m2_17  [key=2, style=dotted];
m2_277 -> m2_278  [key=0, style=solid];
m2_277 -> m2_138  [key=2, style=dotted];
m2_278 -> m2_279  [key=0, style=solid];
m2_278 -> m2_17  [key=2, style=dotted];
m2_279 -> m2_280  [key=0, style=solid];
m2_279 -> m2_17  [key=2, style=dotted];
m2_280 -> m2_281  [key=0, style=solid];
m2_280 -> m2_17  [key=2, style=dotted];
m2_281 -> m2_282  [key=0, style=solid];
m2_281 -> m2_17  [key=2, style=dotted];
m2_282 -> m2_283  [key=0, style=solid];
m2_282 -> m2_138  [key=2, style=dotted];
m2_283 -> m2_284  [key=0, style=solid];
m2_283 -> m2_17  [key=2, style=dotted];
m2_284 -> m2_285  [key=0, style=solid];
m2_284 -> m2_17  [key=2, style=dotted];
m2_285 -> m2_286  [key=0, style=solid];
m2_285 -> m2_17  [key=2, style=dotted];
m2_286 -> m2_287  [key=0, style=solid];
m2_286 -> m2_17  [key=2, style=dotted];
m2_287 -> m2_288  [key=0, style=solid];
m2_287 -> m2_138  [key=2, style=dotted];
m2_288 -> m2_289  [key=0, style=solid];
m2_288 -> m2_17  [key=2, style=dotted];
m2_289 -> m2_290  [key=0, style=solid];
m2_289 -> m2_17  [key=2, style=dotted];
m2_290 -> m2_291  [key=0, style=solid];
m2_290 -> m2_17  [key=2, style=dotted];
m2_291 -> m2_292  [key=0, style=solid];
m2_291 -> m2_17  [key=2, style=dotted];
m2_292 -> m2_293  [key=0, style=solid];
m2_292 -> m2_138  [key=2, style=dotted];
m2_293 -> m2_294  [key=0, style=solid];
m2_293 -> m2_17  [key=2, style=dotted];
m2_294 -> m2_295  [key=0, style=solid];
m2_294 -> m2_17  [key=2, style=dotted];
m2_295 -> m2_296  [key=0, style=solid];
m2_295 -> m2_17  [key=2, style=dotted];
m2_296 -> m2_297  [key=0, style=solid];
m2_296 -> m2_17  [key=2, style=dotted];
m2_297 -> m2_298  [key=0, style=solid];
m2_297 -> m2_138  [key=2, style=dotted];
m2_298 -> m2_299  [key=0, style=solid];
m2_298 -> m2_17  [key=2, style=dotted];
m2_299 -> m2_300  [key=0, style=solid];
m2_299 -> m2_17  [key=2, style=dotted];
m2_300 -> m2_301  [key=0, style=solid];
m2_300 -> m2_17  [key=2, style=dotted];
m2_301 -> m2_302  [key=0, style=solid];
m2_301 -> m2_17  [key=2, style=dotted];
m2_302 -> m2_303  [key=0, style=solid];
m2_302 -> m2_138  [key=2, style=dotted];
m2_303 -> m2_304  [key=0, style=solid];
m2_303 -> m2_17  [key=2, style=dotted];
m2_304 -> m2_305  [key=0, style=solid];
m2_304 -> m2_17  [key=2, style=dotted];
m2_305 -> m2_306  [key=0, style=solid];
m2_305 -> m2_17  [key=2, style=dotted];
m2_306 -> m2_307  [key=0, style=solid];
m2_306 -> m2_138  [key=2, style=dotted];
m2_307 -> m2_308  [key=0, style=solid];
m2_307 -> m2_17  [key=2, style=dotted];
m2_308 -> m2_309  [key=0, style=solid];
m2_308 -> m2_17  [key=2, style=dotted];
m2_309 -> m2_310  [key=0, style=solid];
m2_309 -> m2_17  [key=2, style=dotted];
m2_310 -> m2_311  [key=0, style=solid];
m2_310 -> m2_138  [key=2, style=dotted];
m2_311 -> m2_312  [key=0, style=solid];
m2_311 -> m2_17  [key=2, style=dotted];
m2_312 -> m2_313  [key=0, style=solid];
m2_312 -> m2_17  [key=2, style=dotted];
m2_313 -> m2_314  [key=0, style=solid];
m2_313 -> m2_17  [key=2, style=dotted];
m2_314 -> m2_315  [key=0, style=solid];
m2_314 -> m2_138  [key=2, style=dotted];
m2_315 -> m2_316  [key=0, style=solid];
m2_315 -> m2_17  [key=2, style=dotted];
m2_316 -> m2_317  [key=0, style=solid];
m2_316 -> m2_17  [key=2, style=dotted];
m2_317 -> m2_318  [key=0, style=solid];
m2_317 -> m2_17  [key=2, style=dotted];
m2_318 -> m2_319  [key=0, style=solid];
m2_318 -> m2_138  [key=2, style=dotted];
m2_319 -> m2_320  [key=0, style=solid];
m2_319 -> m2_17  [key=2, style=dotted];
m2_320 -> m2_321  [key=0, style=solid];
m2_320 -> m2_17  [key=2, style=dotted];
m2_321 -> m2_322  [key=0, style=solid];
m2_321 -> m2_17  [key=2, style=dotted];
m2_322 -> m2_323  [key=0, style=solid];
m2_322 -> m2_138  [key=2, style=dotted];
m2_323 -> m2_324  [key=0, style=solid];
m2_323 -> m2_17  [key=2, style=dotted];
m2_324 -> m2_325  [key=0, style=solid];
m2_324 -> m2_17  [key=2, style=dotted];
m2_325 -> m2_326  [key=0, style=solid];
m2_325 -> m2_17  [key=2, style=dotted];
m2_326 -> m2_327  [key=0, style=solid];
m2_326 -> m2_138  [key=2, style=dotted];
m2_327 -> m2_328  [key=0, style=solid];
m2_327 -> m2_17  [key=2, style=dotted];
m2_328 -> m2_329  [key=0, style=solid];
m2_328 -> m2_17  [key=2, style=dotted];
m2_329 -> m2_330  [key=0, style=solid];
m2_329 -> m2_17  [key=2, style=dotted];
m2_330 -> m2_331  [key=0, style=solid];
m2_330 -> m2_138  [key=2, style=dotted];
m2_331 -> m2_332  [key=0, style=solid];
m2_331 -> m2_17  [key=2, style=dotted];
m2_332 -> m2_333  [key=0, style=solid];
m2_332 -> m2_17  [key=2, style=dotted];
m2_333 -> m2_334  [key=0, style=solid];
m2_333 -> m2_17  [key=2, style=dotted];
m2_334 -> m2_335  [key=0, style=solid];
m2_334 -> m2_138  [key=2, style=dotted];
m2_335 -> m2_336  [key=0, style=solid];
m2_335 -> m2_17  [key=2, style=dotted];
m2_336 -> m2_337  [key=0, style=solid];
m2_336 -> m2_17  [key=2, style=dotted];
m2_337 -> m2_338  [key=0, style=solid];
m2_337 -> m2_17  [key=2, style=dotted];
m2_338 -> m2_339  [key=0, style=solid];
m2_338 -> m2_138  [key=2, style=dotted];
m2_339 -> m2_340  [key=0, style=solid];
m2_339 -> m2_17  [key=2, style=dotted];
m2_340 -> m2_341  [key=0, style=solid];
m2_340 -> m2_17  [key=2, style=dotted];
m2_341 -> m2_342  [key=0, style=solid];
m2_341 -> m2_17  [key=2, style=dotted];
m2_342 -> m2_343  [key=0, style=solid];
m2_342 -> m2_138  [key=2, style=dotted];
m2_343 -> m2_344  [key=0, style=solid];
m2_343 -> m2_17  [key=2, style=dotted];
m2_344 -> m2_345  [key=0, style=solid];
m2_344 -> m2_17  [key=2, style=dotted];
m2_345 -> m2_346  [key=0, style=solid];
m2_345 -> m2_17  [key=2, style=dotted];
m2_346 -> m2_250  [key=0, style=bold, color=blue];
m2_535 -> m2_536  [key=0, style=solid];
m2_536 -> m2_537  [key=0, style=solid];
m2_536 -> m2_536  [key=3, color=darkorchid, style=bold, label="Local variable string helloWorld"];
m2_537 -> m2_538  [key=0, style=solid];
m2_537 -> m2_115  [key=2, style=dotted];
m2_538 -> m2_539  [key=0, style=solid];
m2_538 -> m2_13  [key=2, style=dotted];
m2_538 -> m2_14  [key=2, style=dotted];
m2_538 -> m2_541  [key=2, style=dotted];
m2_538 -> m2_543  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_539 -> m2_540  [key=0, style=solid];
m2_539 -> m2_18  [key=2, style=dotted];
m2_539 -> m2_542  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_540 -> m2_535  [key=0, style=bold, color=blue];
m2_1425 -> m2_1426  [key=0, style=solid];
m2_1426 -> m2_1427  [key=0, style=solid];
m2_1426 -> m2_1426  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1427 -> m2_1428  [key=0, style=solid];
m2_1427 -> m2_13  [key=2, style=dotted];
m2_1427 -> m2_14  [key=2, style=dotted];
m2_1427 -> m2_1429  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1427 -> m2_1430  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1427 -> m2_1431  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1428 -> m2_1429  [key=0, style=solid];
m2_1428 -> m2_15  [key=2, style=dotted];
m2_1428 -> m2_16  [key=2, style=dotted];
m2_1429 -> m2_1430  [key=0, style=solid];
m2_1429 -> m2_17  [key=2, style=dotted];
m2_1430 -> m2_1431  [key=0, style=solid];
m2_1430 -> m2_15  [key=2, style=dotted];
m2_1430 -> m2_16  [key=2, style=dotted];
m2_1431 -> m2_1432  [key=0, style=solid];
m2_1431 -> m2_17  [key=2, style=dotted];
m2_1432 -> m2_1425  [key=0, style=bold, color=blue];
m2_468 -> m2_469  [key=0, style=solid];
m2_469 -> m2_470  [key=0, style=solid];
m2_469 -> m2_481  [key=2, style=dotted];
m2_469 -> m2_475  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_470 -> m2_471  [key=0, style=solid];
m2_470 -> m2_13  [key=2, style=dotted];
m2_470 -> m2_482  [key=2, style=dotted];
m2_470 -> m2_483  [key=2, style=dotted];
m2_470 -> m2_472  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_475 -> m2_476  [key=0, style=solid];
m2_471 -> m2_472  [key=0, style=solid];
m2_471 -> m2_15  [key=2, style=dotted];
m2_472 -> m2_473  [key=0, style=solid];
m2_472 -> m2_17  [key=2, style=dotted];
m2_473 -> m2_474  [key=0, style=solid];
m2_473 -> m2_475  [key=1, style=dashed, color=darkseagreen4, label=j];
m2_473 -> m2_479  [key=1, style=dashed, color=darkseagreen4, label=j];
m2_473 -> m2_440  [key=3, color=darkorchid, style=bold, label="Local variable int j"];
m2_474 -> m2_475  [key=0, style=solid];
m2_474 -> m2_480  [key=0, style=solid];
m2_479 -> m2_474  [key=0, style=solid];
m2_479 -> m2_479  [key=1, style=dashed, color=darkseagreen4, label=j];
m2_476 -> m2_477  [key=0, style=solid];
m2_476 -> m2_13  [key=2, style=dotted];
m2_476 -> m2_482  [key=2, style=dotted];
m2_476 -> m2_483  [key=2, style=dotted];
m2_476 -> m2_478  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_477 -> m2_478  [key=0, style=solid];
m2_477 -> m2_15  [key=2, style=dotted];
m2_478 -> m2_479  [key=0, style=solid];
m2_478 -> m2_17  [key=2, style=dotted];
m2_480 -> m2_468  [key=0, style=bold, color=blue];
m2_1073 -> m2_1074  [key=0, style=solid];
m2_1074 -> m2_1075  [key=0, style=solid];
m2_1074 -> m2_1074  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1075 -> m2_1076  [key=0, style=solid];
m2_1075 -> m2_13  [key=2, style=dotted];
m2_1075 -> m2_14  [key=2, style=dotted];
m2_1075 -> m2_1077  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1075 -> m2_1078  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1075 -> m2_1079  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1075 -> m2_1080  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1075 -> m2_1081  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1075 -> m2_1082  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1075 -> m2_1083  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1075 -> m2_1084  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1075 -> m2_1085  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1076 -> m2_1077  [key=0, style=solid];
m2_1076 -> m2_15  [key=2, style=dotted];
m2_1076 -> m2_16  [key=2, style=dotted];
m2_1077 -> m2_1078  [key=0, style=solid];
m2_1077 -> m2_17  [key=2, style=dotted];
m2_1078 -> m2_1079  [key=0, style=solid];
m2_1078 -> m2_15  [key=2, style=dotted];
m2_1078 -> m2_16  [key=2, style=dotted];
m2_1079 -> m2_1080  [key=0, style=solid];
m2_1079 -> m2_17  [key=2, style=dotted];
m2_1080 -> m2_1081  [key=0, style=solid];
m2_1080 -> m2_1002  [key=2, style=dotted];
m2_1081 -> m2_1082  [key=0, style=solid];
m2_1081 -> m2_17  [key=2, style=dotted];
m2_1082 -> m2_1083  [key=0, style=solid];
m2_1082 -> m2_17  [key=2, style=dotted];
m2_1083 -> m2_1084  [key=0, style=solid];
m2_1083 -> m2_1087  [key=2, style=dotted];
m2_1083 -> m2_1088  [key=2, style=dotted];
m2_1083 -> m2_1089  [key=2, style=dotted];
m2_1083 -> m2_17  [key=2, style=dotted];
m2_1084 -> m2_1085  [key=0, style=solid];
m2_1084 -> m2_15  [key=2, style=dotted];
m2_1084 -> m2_16  [key=2, style=dotted];
m2_1085 -> m2_1086  [key=0, style=solid];
m2_1085 -> m2_17  [key=2, style=dotted];
m2_1086 -> m2_1073  [key=0, style=bold, color=blue];
m2_651 -> m2_652  [key=0, style=solid];
m2_652 -> m2_653  [key=0, style=solid];
m2_652 -> m2_652  [key=3, color=darkorchid, style=bold, label="Local variable string input"];
m2_653 -> m2_654  [key=0, style=solid];
m2_653 -> m2_14  [key=2, style=dotted];
m2_654 -> m2_655  [key=0, style=solid];
m2_654 -> m2_13  [key=2, style=dotted];
m2_654 -> m2_656  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_654 -> m2_657  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_654 -> m2_658  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_654 -> m2_659  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_654 -> m2_660  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_654 -> m2_661  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_654 -> m2_662  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_654 -> m2_663  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_654 -> m2_664  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_654 -> m2_665  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_654 -> m2_666  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_654 -> m2_667  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_654 -> m2_668  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_654 -> m2_669  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_655 -> m2_656  [key=0, style=solid];
m2_655 -> m2_17  [key=2, style=dotted];
m2_656 -> m2_657  [key=0, style=solid];
m2_656 -> m2_138  [key=2, style=dotted];
m2_657 -> m2_658  [key=0, style=solid];
m2_657 -> m2_17  [key=2, style=dotted];
m2_658 -> m2_659  [key=0, style=solid];
m2_658 -> m2_17  [key=2, style=dotted];
m2_659 -> m2_660  [key=0, style=solid];
m2_659 -> m2_138  [key=2, style=dotted];
m2_660 -> m2_661  [key=0, style=solid];
m2_660 -> m2_17  [key=2, style=dotted];
m2_661 -> m2_662  [key=0, style=solid];
m2_661 -> m2_17  [key=2, style=dotted];
m2_662 -> m2_663  [key=0, style=solid];
m2_662 -> m2_138  [key=2, style=dotted];
m2_663 -> m2_664  [key=0, style=solid];
m2_663 -> m2_17  [key=2, style=dotted];
m2_664 -> m2_665  [key=0, style=solid];
m2_664 -> m2_17  [key=2, style=dotted];
m2_665 -> m2_666  [key=0, style=solid];
m2_665 -> m2_17  [key=2, style=dotted];
m2_666 -> m2_667  [key=0, style=solid];
m2_666 -> m2_17  [key=2, style=dotted];
m2_667 -> m2_668  [key=0, style=solid];
m2_667 -> m2_138  [key=2, style=dotted];
m2_668 -> m2_669  [key=0, style=solid];
m2_668 -> m2_17  [key=2, style=dotted];
m2_669 -> m2_670  [key=0, style=solid];
m2_669 -> m2_17  [key=2, style=dotted];
m2_670 -> m2_651  [key=0, style=bold, color=blue];
m2_1511 -> m2_1512  [key=0, style=solid];
m2_1512 -> m2_1513  [key=0, style=solid];
m2_1512 -> m2_1512  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1513 -> m2_1514  [key=0, style=solid];
m2_1513 -> m2_13  [key=2, style=dotted];
m2_1513 -> m2_14  [key=2, style=dotted];
m2_1513 -> m2_1515  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1513 -> m2_1516  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1514 -> m2_1515  [key=0, style=solid];
m2_1514 -> m2_984  [key=2, style=dotted];
m2_1515 -> m2_1516  [key=0, style=solid];
m2_1515 -> m2_17  [key=2, style=dotted];
m2_1516 -> m2_1517  [key=0, style=solid];
m2_1516 -> m2_17  [key=2, style=dotted];
m2_1517 -> m2_1511  [key=0, style=bold, color=blue];
m2_452 -> m2_453  [key=0, style=solid];
m2_453 -> m2_454  [key=0, style=solid];
m2_453 -> m2_457  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_453 -> m2_460  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_453 -> m2_453  [key=3, color=darkorchid, style=bold, label="Local variable long i"];
m2_454 -> m2_455  [key=0, style=solid];
m2_454 -> m2_13  [key=2, style=dotted];
m2_454 -> m2_14  [key=2, style=dotted];
m2_454 -> m2_446  [key=2, style=dotted];
m2_454 -> m2_456  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_454 -> m2_457  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_454 -> m2_461  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_457 -> m2_458  [key=0, style=solid];
m2_457 -> m2_17  [key=2, style=dotted];
m2_460 -> m2_461  [key=0, style=solid];
m2_460 -> m2_465  [key=1, style=dashed, color=darkseagreen4, label=total];
m2_455 -> m2_456  [key=0, style=solid];
m2_455 -> m2_15  [key=2, style=dotted];
m2_456 -> m2_457  [key=0, style=solid];
m2_456 -> m2_17  [key=2, style=dotted];
m2_461 -> m2_462  [key=0, style=solid];
m2_461 -> m2_18  [key=2, style=dotted];
m2_461 -> m2_464  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_458 -> m2_459  [key=0, style=solid];
m2_458 -> m2_460  [key=1, style=dashed, color=darkseagreen4, label=j];
m2_458 -> m2_462  [key=1, style=dashed, color=darkseagreen4, label=j];
m2_458 -> m2_440  [key=3, color=darkorchid, style=bold, label="Local variable int j"];
m2_459 -> m2_460  [key=0, style=solid];
m2_459 -> m2_463  [key=0, style=solid];
m2_462 -> m2_459  [key=0, style=solid];
m2_462 -> m2_462  [key=1, style=dashed, color=darkseagreen4, label=j];
m2_463 -> m2_452  [key=0, style=bold, color=blue];
m2_1791 -> m2_1792  [key=0, style=solid];
m2_1791 -> m2_1794  [key=1, style=dashed, color=darkseagreen4, label="char[]"];
m2_1792 -> m2_1793  [key=0, style=solid];
m2_1792 -> m2_1794  [key=0, style=solid];
m2_1794 -> m2_1795  [key=0, style=solid];
m2_1794 -> m2_1797  [key=2, style=dotted];
m2_1793 -> m2_1795  [key=0, style=solid];
m2_1793 -> m2_1796  [key=2, style=dotted];
m2_1795 -> m2_1791  [key=0, style=bold, color=blue];
m2_605 -> m2_606  [key=0, style=solid];
m2_606 -> m2_607  [key=0, style=solid];
m2_606 -> m2_13  [key=2, style=dotted];
m2_606 -> m2_14  [key=2, style=dotted];
m2_606 -> m2_608  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_606 -> m2_609  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_606 -> m2_610  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_606 -> m2_611  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_606 -> m2_612  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_606 -> m2_613  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_606 -> m2_614  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_606 -> m2_615  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_606 -> m2_616  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_607 -> m2_608  [key=0, style=solid];
m2_607 -> m2_138  [key=2, style=dotted];
m2_607 -> m2_16  [key=2, style=dotted];
m2_608 -> m2_609  [key=0, style=solid];
m2_608 -> m2_138  [key=2, style=dotted];
m2_608 -> m2_16  [key=2, style=dotted];
m2_609 -> m2_610  [key=0, style=solid];
m2_609 -> m2_17  [key=2, style=dotted];
m2_610 -> m2_611  [key=0, style=solid];
m2_610 -> m2_17  [key=2, style=dotted];
m2_611 -> m2_612  [key=0, style=solid];
m2_611 -> m2_138  [key=2, style=dotted];
m2_611 -> m2_16  [key=2, style=dotted];
m2_612 -> m2_613  [key=0, style=solid];
m2_612 -> m2_17  [key=2, style=dotted];
m2_613 -> m2_614  [key=0, style=solid];
m2_613 -> m2_17  [key=2, style=dotted];
m2_614 -> m2_615  [key=0, style=solid];
m2_614 -> m2_138  [key=2, style=dotted];
m2_614 -> m2_16  [key=2, style=dotted];
m2_615 -> m2_616  [key=0, style=solid];
m2_615 -> m2_17  [key=2, style=dotted];
m2_616 -> m2_617  [key=0, style=solid];
m2_616 -> m2_138  [key=2, style=dotted];
m2_616 -> m2_131  [key=2, style=dotted];
m2_617 -> m2_605  [key=0, style=bold, color=blue];
m2_1232 -> m2_1233  [key=0, style=solid];
m2_1233 -> m2_1234  [key=0, style=solid];
m2_1233 -> m2_13  [key=2, style=dotted];
m2_1233 -> m2_14  [key=2, style=dotted];
m2_1233 -> m2_1237  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1234 -> m2_1235  [key=0, style=solid];
m2_1234 -> m2_18  [key=2, style=dotted];
m2_1234 -> m2_1236  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1235 -> m2_1232  [key=0, style=bold, color=blue];
m2_1402 -> m2_1403  [key=0, style=solid];
m2_1403 -> m2_1404  [key=0, style=solid];
m2_1403 -> m2_1403  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1404 -> m2_1405  [key=0, style=solid];
m2_1404 -> m2_13  [key=2, style=dotted];
m2_1404 -> m2_14  [key=2, style=dotted];
m2_1404 -> m2_1406  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1404 -> m2_1407  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1404 -> m2_1408  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1405 -> m2_1406  [key=0, style=solid];
m2_1405 -> m2_15  [key=2, style=dotted];
m2_1405 -> m2_16  [key=2, style=dotted];
m2_1406 -> m2_1407  [key=0, style=solid];
m2_1406 -> m2_17  [key=2, style=dotted];
m2_1407 -> m2_1408  [key=0, style=solid];
m2_1407 -> m2_15  [key=2, style=dotted];
m2_1407 -> m2_16  [key=2, style=dotted];
m2_1408 -> m2_1409  [key=0, style=solid];
m2_1408 -> m2_17  [key=2, style=dotted];
m2_1409 -> m2_1402  [key=0, style=bold, color=blue];
m2_1386 -> m2_1387  [key=0, style=solid];
m2_1387 -> m2_1388  [key=0, style=solid];
m2_1387 -> m2_1387  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1388 -> m2_1389  [key=0, style=solid];
m2_1388 -> m2_13  [key=2, style=dotted];
m2_1388 -> m2_14  [key=2, style=dotted];
m2_1388 -> m2_1392  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1389 -> m2_1390  [key=0, style=solid];
m2_1389 -> m2_18  [key=2, style=dotted];
m2_1389 -> m2_1391  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1390 -> m2_1386  [key=0, style=bold, color=blue];
m2_157 -> m2_1803  [key=0, style=solid];
m2_1803 -> m2_157  [key=0, style=bold, color=blue];
m2_425 -> m2_426  [key=0, style=solid];
m2_426 -> m2_427  [key=0, style=solid];
m2_426 -> m2_426  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_427 -> m2_428  [key=0, style=solid];
m2_427 -> m2_13  [key=2, style=dotted];
m2_427 -> m2_14  [key=2, style=dotted];
m2_427 -> m2_430  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_427 -> m2_432  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_427 -> m2_433  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_428 -> m2_429  [key=0, style=solid];
m2_428 -> m2_431  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_428 -> m2_373  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m2_430 -> m2_431  [key=0, style=solid];
m2_430 -> m2_15  [key=2, style=dotted];
m2_432 -> m2_433  [key=0, style=solid];
m2_432 -> m2_15  [key=2, style=dotted];
m2_433 -> m2_434  [key=0, style=solid];
m2_433 -> m2_17  [key=2, style=dotted];
m2_429 -> m2_430  [key=0, style=solid];
m2_429 -> m2_432  [key=0, style=solid];
m2_431 -> m2_429  [key=0, style=solid];
m2_431 -> m2_431  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_434 -> m2_425  [key=0, style=bold, color=blue];
m2_671 -> m2_672  [key=0, style=solid];
m2_672 -> m2_673  [key=0, style=solid];
m2_673 -> m2_674  [key=0, style=solid];
m2_673 -> m2_675  [key=2, style=dotted];
m2_674 -> m2_671  [key=0, style=bold, color=blue];
m2_1206 -> m2_1207  [key=0, style=solid];
m2_1207 -> m2_1208  [key=0, style=solid];
m2_1207 -> m2_1207  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1208 -> m2_1209  [key=0, style=solid];
m2_1208 -> m2_13  [key=2, style=dotted];
m2_1208 -> m2_14  [key=2, style=dotted];
m2_1208 -> m2_1210  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1208 -> m2_1211  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1208 -> m2_1212  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1208 -> m2_1213  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1208 -> m2_1216  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1209 -> m2_1210  [key=0, style=solid];
m2_1209 -> m2_15  [key=2, style=dotted];
m2_1209 -> m2_16  [key=2, style=dotted];
m2_1210 -> m2_1211  [key=0, style=solid];
m2_1210 -> m2_17  [key=2, style=dotted];
m2_1211 -> m2_1212  [key=0, style=solid];
m2_1211 -> m2_15  [key=2, style=dotted];
m2_1211 -> m2_16  [key=2, style=dotted];
m2_1212 -> m2_1213  [key=0, style=solid];
m2_1212 -> m2_17  [key=2, style=dotted];
m2_1213 -> m2_1214  [key=0, style=solid];
m2_1213 -> m2_18  [key=2, style=dotted];
m2_1213 -> m2_1215  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1214 -> m2_1206  [key=0, style=bold, color=blue];
m2_1340 -> m2_1341  [key=0, style=solid];
m2_1341 -> m2_1342  [key=0, style=solid];
m2_1341 -> m2_13  [key=2, style=dotted];
m2_1341 -> m2_14  [key=2, style=dotted];
m2_1341 -> m2_1343  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1341 -> m2_1344  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1341 -> m2_1345  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1341 -> m2_1346  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1341 -> m2_1347  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1341 -> m2_1348  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1341 -> m2_1349  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1341 -> m2_1350  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1341 -> m2_1351  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1341 -> m2_1352  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1341 -> m2_1353  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1341 -> m2_1354  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1341 -> m2_1355  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1341 -> m2_1356  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1341 -> m2_1357  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1341 -> m2_1358  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1341 -> m2_1359  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1341 -> m2_1360  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1341 -> m2_1361  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1341 -> m2_1362  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1341 -> m2_1363  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1341 -> m2_1364  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1341 -> m2_1365  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1341 -> m2_1366  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1341 -> m2_1367  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1341 -> m2_1368  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1341 -> m2_1369  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1342 -> m2_1343  [key=0, style=solid];
m2_1343 -> m2_1344  [key=0, style=solid];
m2_1343 -> m2_15  [key=2, style=dotted];
m2_1343 -> m2_16  [key=2, style=dotted];
m2_1344 -> m2_1345  [key=0, style=solid];
m2_1344 -> m2_17  [key=2, style=dotted];
m2_1345 -> m2_1346  [key=0, style=solid];
m2_1345 -> m2_15  [key=2, style=dotted];
m2_1345 -> m2_16  [key=2, style=dotted];
m2_1346 -> m2_1347  [key=0, style=solid];
m2_1346 -> m2_17  [key=2, style=dotted];
m2_1347 -> m2_1348  [key=0, style=solid];
m2_1347 -> m2_15  [key=2, style=dotted];
m2_1347 -> m2_16  [key=2, style=dotted];
m2_1348 -> m2_1349  [key=0, style=solid];
m2_1348 -> m2_17  [key=2, style=dotted];
m2_1349 -> m2_1350  [key=0, style=solid];
m2_1349 -> m2_15  [key=2, style=dotted];
m2_1349 -> m2_16  [key=2, style=dotted];
m2_1350 -> m2_1351  [key=0, style=solid];
m2_1350 -> m2_17  [key=2, style=dotted];
m2_1351 -> m2_1352  [key=0, style=solid];
m2_1351 -> m2_15  [key=2, style=dotted];
m2_1351 -> m2_16  [key=2, style=dotted];
m2_1352 -> m2_1353  [key=0, style=solid];
m2_1352 -> m2_17  [key=2, style=dotted];
m2_1353 -> m2_1354  [key=0, style=solid];
m2_1353 -> m2_15  [key=2, style=dotted];
m2_1353 -> m2_16  [key=2, style=dotted];
m2_1354 -> m2_1355  [key=0, style=solid];
m2_1354 -> m2_17  [key=2, style=dotted];
m2_1355 -> m2_1356  [key=0, style=solid];
m2_1355 -> m2_15  [key=2, style=dotted];
m2_1355 -> m2_16  [key=2, style=dotted];
m2_1356 -> m2_1357  [key=0, style=solid];
m2_1356 -> m2_17  [key=2, style=dotted];
m2_1357 -> m2_1358  [key=0, style=solid];
m2_1357 -> m2_15  [key=2, style=dotted];
m2_1357 -> m2_16  [key=2, style=dotted];
m2_1358 -> m2_1359  [key=0, style=solid];
m2_1358 -> m2_17  [key=2, style=dotted];
m2_1359 -> m2_1360  [key=0, style=solid];
m2_1359 -> m2_15  [key=2, style=dotted];
m2_1359 -> m2_16  [key=2, style=dotted];
m2_1360 -> m2_1361  [key=0, style=solid];
m2_1360 -> m2_17  [key=2, style=dotted];
m2_1361 -> m2_1362  [key=0, style=solid];
m2_1361 -> m2_15  [key=2, style=dotted];
m2_1361 -> m2_16  [key=2, style=dotted];
m2_1362 -> m2_1363  [key=0, style=solid];
m2_1362 -> m2_17  [key=2, style=dotted];
m2_1363 -> m2_1364  [key=0, style=solid];
m2_1363 -> m2_15  [key=2, style=dotted];
m2_1363 -> m2_16  [key=2, style=dotted];
m2_1364 -> m2_1365  [key=0, style=solid];
m2_1364 -> m2_17  [key=2, style=dotted];
m2_1365 -> m2_1366  [key=0, style=solid];
m2_1365 -> m2_15  [key=2, style=dotted];
m2_1365 -> m2_16  [key=2, style=dotted];
m2_1366 -> m2_1367  [key=0, style=solid];
m2_1366 -> m2_17  [key=2, style=dotted];
m2_1367 -> m2_1368  [key=0, style=solid];
m2_1367 -> m2_15  [key=2, style=dotted];
m2_1367 -> m2_16  [key=2, style=dotted];
m2_1368 -> m2_1369  [key=0, style=solid];
m2_1368 -> m2_17  [key=2, style=dotted];
m2_1369 -> m2_1370  [key=0, style=solid];
m2_1369 -> m2_15  [key=2, style=dotted];
m2_1369 -> m2_131  [key=2, style=dotted];
m2_1370 -> m2_1340  [key=0, style=bold, color=blue];
m2_1816 -> m2_1817  [key=0, style=solid];
m2_1817 -> m2_1818  [key=0, style=solid];
m2_1817 -> m2_1819  [key=2, style=dotted];
m2_1818 -> m2_1816  [key=0, style=bold, color=blue];
m2_1504 -> m2_1505  [key=0, style=solid];
m2_1505 -> m2_1506  [key=0, style=solid];
m2_1505 -> m2_1505  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1506 -> m2_1507  [key=0, style=solid];
m2_1506 -> m2_13  [key=2, style=dotted];
m2_1506 -> m2_14  [key=2, style=dotted];
m2_1506 -> m2_1508  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1506 -> m2_1509  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1507 -> m2_1508  [key=0, style=solid];
m2_1507 -> m2_984  [key=2, style=dotted];
m2_1508 -> m2_1509  [key=0, style=solid];
m2_1508 -> m2_17  [key=2, style=dotted];
m2_1509 -> m2_1510  [key=0, style=solid];
m2_1509 -> m2_17  [key=2, style=dotted];
m2_1510 -> m2_1504  [key=0, style=bold, color=blue];
m2_886 -> m2_887  [key=0, style=solid];
m2_887 -> m2_888  [key=0, style=solid];
m2_887 -> m2_887  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_888 -> m2_889  [key=0, style=solid];
m2_888 -> m2_13  [key=2, style=dotted];
m2_888 -> m2_14  [key=2, style=dotted];
m2_888 -> m2_890  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_888 -> m2_891  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_888 -> m2_892  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_888 -> m2_893  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_888 -> m2_894  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_888 -> m2_895  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_888 -> m2_898  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_889 -> m2_890  [key=0, style=solid];
m2_889 -> m2_15  [key=2, style=dotted];
m2_890 -> m2_891  [key=0, style=solid];
m2_890 -> m2_17  [key=2, style=dotted];
m2_891 -> m2_892  [key=0, style=solid];
m2_891 -> m2_15  [key=2, style=dotted];
m2_892 -> m2_893  [key=0, style=solid];
m2_892 -> m2_17  [key=2, style=dotted];
m2_893 -> m2_894  [key=0, style=solid];
m2_893 -> m2_15  [key=2, style=dotted];
m2_894 -> m2_895  [key=0, style=solid];
m2_894 -> m2_17  [key=2, style=dotted];
m2_895 -> m2_896  [key=0, style=solid];
m2_895 -> m2_18  [key=2, style=dotted];
m2_895 -> m2_897  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_896 -> m2_886  [key=0, style=bold, color=blue];
m2_1410 -> m2_1411  [key=0, style=solid];
m2_1411 -> m2_1412  [key=0, style=solid];
m2_1411 -> m2_1411  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1412 -> m2_1413  [key=0, style=solid];
m2_1412 -> m2_13  [key=2, style=dotted];
m2_1412 -> m2_14  [key=2, style=dotted];
m2_1412 -> m2_1414  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1412 -> m2_1415  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1412 -> m2_1416  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1413 -> m2_1414  [key=0, style=solid];
m2_1413 -> m2_15  [key=2, style=dotted];
m2_1413 -> m2_16  [key=2, style=dotted];
m2_1414 -> m2_1415  [key=0, style=solid];
m2_1414 -> m2_17  [key=2, style=dotted];
m2_1415 -> m2_1416  [key=0, style=solid];
m2_1415 -> m2_15  [key=2, style=dotted];
m2_1415 -> m2_16  [key=2, style=dotted];
m2_1416 -> m2_1417  [key=0, style=solid];
m2_1416 -> m2_17  [key=2, style=dotted];
m2_1417 -> m2_1410  [key=0, style=bold, color=blue];
m2_900 -> m2_901  [key=0, style=solid];
m2_901 -> m2_902  [key=0, style=solid];
m2_901 -> m2_14  [key=2, style=dotted];
m2_902 -> m2_903  [key=0, style=solid];
m2_902 -> m2_13  [key=2, style=dotted];
m2_903 -> m2_904  [key=0, style=solid];
m2_903 -> m2_908  [key=2, style=dotted];
m2_903 -> m2_905  [key=1, style=dashed, color=darkseagreen4, label=data];
m2_904 -> m2_905  [key=0, style=solid];
m2_904 -> m2_909  [key=2, style=dotted];
m2_905 -> m2_906  [key=0, style=solid];
m2_905 -> m2_910  [key=2, style=dotted];
m2_906 -> m2_907  [key=0, style=solid];
m2_906 -> m2_17  [key=2, style=dotted];
m2_907 -> m2_900  [key=0, style=bold, color=blue];
m2_360 -> m2_361  [key=0, style=solid];
m2_361 -> m2_362  [key=0, style=solid];
m2_361 -> m2_366  [key=2, style=dotted];
m2_361 -> m2_364  [key=1, style=dashed, color=darkseagreen4, label=s];
m2_362 -> m2_363  [key=0, style=solid];
m2_362 -> m2_13  [key=2, style=dotted];
m2_362 -> m2_14  [key=2, style=dotted];
m2_362 -> m2_364  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_364 -> m2_365  [key=0, style=solid];
m2_364 -> m2_17  [key=2, style=dotted];
m2_363 -> m2_364  [key=0, style=solid];
m2_363 -> m2_138  [key=2, style=dotted];
m2_365 -> m2_360  [key=0, style=bold, color=blue];
m2_1820 -> m2_1821  [key=0, style=solid];
m2_1821 -> m2_1822  [key=0, style=solid];
m2_1821 -> m2_1819  [key=2, style=dotted];
m2_1822 -> m2_1820  [key=0, style=bold, color=blue];
m2_990 -> m2_991  [key=0, style=solid];
m2_991 -> m2_992  [key=0, style=solid];
m2_991 -> m2_13  [key=2, style=dotted];
m2_991 -> m2_14  [key=2, style=dotted];
m2_991 -> m2_995  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_992 -> m2_993  [key=0, style=solid];
m2_992 -> m2_18  [key=2, style=dotted];
m2_992 -> m2_994  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_993 -> m2_990  [key=0, style=bold, color=blue];
m2_618 -> m2_619  [key=0, style=solid];
m2_619 -> m2_620  [key=0, style=solid];
m2_619 -> m2_536  [key=3, color=darkorchid, style=bold, label="Local variable string helloWorld"];
m2_620 -> m2_621  [key=0, style=solid];
m2_620 -> m2_115  [key=2, style=dotted];
m2_620 -> m2_627  [key=1, style=dashed, color=darkseagreen4, label=helloWorldData];
m2_621 -> m2_622  [key=0, style=solid];
m2_621 -> m2_13  [key=2, style=dotted];
m2_621 -> m2_14  [key=2, style=dotted];
m2_621 -> m2_541  [key=2, style=dotted];
m2_621 -> m2_623  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_621 -> m2_624  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_621 -> m2_625  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_621 -> m2_626  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_621 -> m2_628  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_621 -> m2_629  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_621 -> m2_630  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_621 -> m2_631  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_627 -> m2_628  [key=0, style=solid];
m2_627 -> m2_633  [key=2, style=dotted];
m2_622 -> m2_623  [key=0, style=solid];
m2_622 -> m2_138  [key=2, style=dotted];
m2_622 -> m2_16  [key=2, style=dotted];
m2_623 -> m2_624  [key=0, style=solid];
m2_623 -> m2_17  [key=2, style=dotted];
m2_624 -> m2_625  [key=0, style=solid];
m2_624 -> m2_138  [key=2, style=dotted];
m2_624 -> m2_16  [key=2, style=dotted];
m2_625 -> m2_626  [key=0, style=solid];
m2_625 -> m2_17  [key=2, style=dotted];
m2_626 -> m2_627  [key=0, style=solid];
m2_626 -> m2_534  [key=2, style=dotted];
m2_628 -> m2_629  [key=0, style=solid];
m2_628 -> m2_17  [key=2, style=dotted];
m2_629 -> m2_630  [key=0, style=solid];
m2_629 -> m2_138  [key=2, style=dotted];
m2_629 -> m2_16  [key=2, style=dotted];
m2_630 -> m2_631  [key=0, style=solid];
m2_630 -> m2_17  [key=2, style=dotted];
m2_631 -> m2_632  [key=0, style=solid];
m2_631 -> m2_138  [key=2, style=dotted];
m2_631 -> m2_131  [key=2, style=dotted];
m2_632 -> m2_618  [key=0, style=bold, color=blue];
m2_59 -> m2_60  [key=0, style=solid];
m2_60 -> m2_61  [key=0, style=solid];
m2_60 -> m2_60  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_13  [key=2, style=dotted];
m2_61 -> m2_14  [key=2, style=dotted];
m2_61 -> m2_63  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_61 -> m2_64  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_61 -> m2_65  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_61 -> m2_66  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_61 -> m2_67  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_61 -> m2_68  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_61 -> m2_69  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_61 -> m2_70  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_61 -> m2_71  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_61 -> m2_72  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_61 -> m2_73  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_61 -> m2_74  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_61 -> m2_75  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_61 -> m2_76  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_61 -> m2_77  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_15  [key=2, style=dotted];
m2_62 -> m2_16  [key=2, style=dotted];
m2_63 -> m2_64  [key=0, style=solid];
m2_63 -> m2_17  [key=2, style=dotted];
m2_64 -> m2_65  [key=0, style=solid];
m2_64 -> m2_15  [key=2, style=dotted];
m2_64 -> m2_16  [key=2, style=dotted];
m2_65 -> m2_66  [key=0, style=solid];
m2_65 -> m2_17  [key=2, style=dotted];
m2_66 -> m2_67  [key=0, style=solid];
m2_66 -> m2_15  [key=2, style=dotted];
m2_66 -> m2_16  [key=2, style=dotted];
m2_67 -> m2_68  [key=0, style=solid];
m2_67 -> m2_17  [key=2, style=dotted];
m2_68 -> m2_69  [key=0, style=solid];
m2_68 -> m2_15  [key=2, style=dotted];
m2_68 -> m2_16  [key=2, style=dotted];
m2_69 -> m2_70  [key=0, style=solid];
m2_69 -> m2_17  [key=2, style=dotted];
m2_70 -> m2_71  [key=0, style=solid];
m2_70 -> m2_15  [key=2, style=dotted];
m2_70 -> m2_16  [key=2, style=dotted];
m2_71 -> m2_72  [key=0, style=solid];
m2_71 -> m2_17  [key=2, style=dotted];
m2_72 -> m2_73  [key=0, style=solid];
m2_72 -> m2_15  [key=2, style=dotted];
m2_72 -> m2_16  [key=2, style=dotted];
m2_73 -> m2_74  [key=0, style=solid];
m2_73 -> m2_17  [key=2, style=dotted];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_17  [key=2, style=dotted];
m2_75 -> m2_76  [key=0, style=solid];
m2_75 -> m2_15  [key=2, style=dotted];
m2_75 -> m2_16  [key=2, style=dotted];
m2_76 -> m2_77  [key=0, style=solid];
m2_76 -> m2_17  [key=2, style=dotted];
m2_77 -> m2_78  [key=0, style=solid];
m2_77 -> m2_17  [key=2, style=dotted];
m2_78 -> m2_59  [key=0, style=bold, color=blue];
m2_1771 -> m2_1772  [key=0, style=solid];
m2_1772 -> m2_1773  [key=0, style=solid];
m2_1772 -> m2_388  [key=2, style=dotted];
m2_1772 -> m2_1778  [key=1, style=dashed, color=darkseagreen4, label=sw];
m2_1773 -> m2_1774  [key=0, style=solid];
m2_1773 -> m2_389  [key=2, style=dotted];
m2_1773 -> m2_1775  [key=1, style=dashed, color=darkseagreen4, label=writer];
m2_1773 -> m2_1776  [key=1, style=dashed, color=darkseagreen4, label=writer];
m2_1773 -> m2_1777  [key=1, style=dashed, color=darkseagreen4, label=writer];
m2_1778 -> m2_1779  [key=0, style=solid];
m2_1778 -> m2_393  [key=2, style=dotted];
m2_1774 -> m2_1775  [key=0, style=solid];
m2_1774 -> m2_390  [key=2, style=dotted];
m2_1775 -> m2_1776  [key=0, style=solid];
m2_1775 -> m2_1788  [key=2, style=dotted];
m2_1776 -> m2_1777  [key=0, style=solid];
m2_1776 -> m2_1788  [key=2, style=dotted];
m2_1777 -> m2_1778  [key=0, style=solid];
m2_1777 -> m2_392  [key=2, style=dotted];
m2_1779 -> m2_1780  [key=0, style=solid];
m2_1779 -> m2_14  [key=2, style=dotted];
m2_1780 -> m2_1781  [key=0, style=solid];
m2_1780 -> m2_13  [key=2, style=dotted];
m2_1780 -> m2_1782  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1780 -> m2_1784  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1780 -> m2_1786  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1781 -> m2_1782  [key=0, style=solid];
m2_1781 -> m2_15  [key=2, style=dotted];
m2_1781 -> m2_16  [key=2, style=dotted];
m2_1782 -> m2_1783  [key=0, style=solid];
m2_1782 -> m2_984  [key=2, style=dotted];
m2_1784 -> m2_1785  [key=0, style=solid];
m2_1784 -> m2_984  [key=2, style=dotted];
m2_1786 -> m2_1787  [key=0, style=solid];
m2_1786 -> m2_15  [key=2, style=dotted];
m2_1786 -> m2_16  [key=2, style=dotted];
m2_1783 -> m2_1784  [key=0, style=solid];
m2_1783 -> m2_17  [key=2, style=dotted];
m2_1785 -> m2_1786  [key=0, style=solid];
m2_1785 -> m2_17  [key=2, style=dotted];
m2_1787 -> m2_1771  [key=0, style=bold, color=blue];
m2_1768 -> m2_1769  [key=0, style=solid];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_15  [key=2, style=dotted];
m2_19 -> m2_20  [key=0, style=solid];
m2_21 -> m2_19  [key=0, style=bold, color=blue];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_15  [key=2, style=dotted];
m2_56 -> m2_57  [key=0, style=solid];
m2_58 -> m2_56  [key=0, style=bold, color=blue];
m2_165 -> m2_165  [key=0, style=solid];
m2_165 -> m2_166  [key=0, style=solid];
m2_165 -> m2_15  [key=2, style=dotted];
m2_164 -> m2_165  [key=0, style=solid];
m2_166 -> m2_164  [key=0, style=bold, color=blue];
m2_183 -> m2_184  [key=0, style=solid];
m2_183 -> m2_15  [key=2, style=dotted];
m2_182 -> m2_183  [key=0, style=solid];
m2_184 -> m2_182  [key=0, style=bold, color=blue];
m2_196 -> m2_196  [key=0, style=solid];
m2_196 -> m2_197  [key=0, style=solid];
m2_196 -> m2_15  [key=2, style=dotted];
m2_195 -> m2_196  [key=0, style=solid];
m2_197 -> m2_195  [key=0, style=bold, color=blue];
m2_350 -> m2_351  [key=0, style=solid];
m2_351 -> m2_352  [key=0, style=solid];
m2_351 -> m2_13  [key=2, style=dotted];
m2_352 -> m2_350  [key=0, style=bold, color=blue];
m2_358 -> m2_359  [key=0, style=solid];
m2_358 -> m2_138  [key=2, style=dotted];
m2_357 -> m2_358  [key=0, style=solid];
m2_359 -> m2_357  [key=0, style=bold, color=blue];
m2_448 -> m2_449  [key=0, style=solid];
m2_448 -> m2_13  [key=2, style=dotted];
m2_448 -> m2_14  [key=2, style=dotted];
m2_448 -> m2_446  [key=2, style=dotted];
m2_447 -> m2_448  [key=0, style=solid];
m2_449 -> m2_450  [key=0, style=solid];
m2_449 -> m2_451  [key=2, style=dotted];
m2_450 -> m2_447  [key=0, style=bold, color=blue];
m2_465 -> m2_466  [key=0, style=solid];
m2_465 -> m2_13  [key=2, style=dotted];
m2_465 -> m2_14  [key=2, style=dotted];
m2_465 -> m2_446  [key=2, style=dotted];
m2_464 -> m2_465  [key=0, style=solid];
m2_466 -> m2_467  [key=0, style=solid];
m2_466 -> m2_451  [key=2, style=dotted];
m2_467 -> m2_464  [key=0, style=bold, color=blue];
m2_518 -> m2_519  [key=0, style=solid];
m2_518 -> m2_138  [key=2, style=dotted];
m2_517 -> m2_518  [key=0, style=solid];
m2_519 -> m2_517  [key=0, style=bold, color=blue];
m2_525 -> m2_526  [key=0, style=solid];
m2_525 -> m2_138  [key=2, style=dotted];
m2_524 -> m2_525  [key=0, style=solid];
m2_526 -> m2_524  [key=0, style=bold, color=blue];
m2_532 -> m2_533  [key=0, style=solid];
m2_532 -> m2_534  [key=2, style=dotted];
m2_531 -> m2_532  [key=0, style=solid];
m2_533 -> m2_531  [key=0, style=bold, color=blue];
m2_543 -> m2_544  [key=0, style=solid];
m2_543 -> m2_534  [key=2, style=dotted];
m2_542 -> m2_543  [key=0, style=solid];
m2_544 -> m2_542  [key=0, style=bold, color=blue];
m2_558 -> m2_559  [key=0, style=solid];
m2_558 -> m2_138  [key=2, style=dotted];
m2_557 -> m2_558  [key=0, style=solid];
m2_559 -> m2_557  [key=0, style=bold, color=blue];
m2_711 -> m2_712  [key=0, style=solid];
m2_711 -> m2_451  [key=2, style=dotted];
m2_710 -> m2_711  [key=0, style=solid];
m2_714 -> m2_715  [key=0, style=solid];
m2_714 -> m2_451  [key=2, style=dotted];
m2_713 -> m2_714  [key=0, style=solid];
m2_717 -> m2_718  [key=0, style=solid];
m2_717 -> m2_451  [key=2, style=dotted];
m2_716 -> m2_717  [key=0, style=solid];
m2_720 -> m2_721  [key=0, style=solid];
m2_720 -> m2_451  [key=2, style=dotted];
m2_719 -> m2_720  [key=0, style=solid];
m2_723 -> m2_724  [key=0, style=solid];
m2_723 -> m2_451  [key=2, style=dotted];
m2_722 -> m2_723  [key=0, style=solid];
m2_712 -> m2_710  [key=0, style=bold, color=blue];
m2_715 -> m2_713  [key=0, style=bold, color=blue];
m2_718 -> m2_716  [key=0, style=bold, color=blue];
m2_721 -> m2_719  [key=0, style=bold, color=blue];
m2_724 -> m2_722  [key=0, style=bold, color=blue];
m2_898 -> m2_899  [key=0, style=solid];
m2_898 -> m2_15  [key=2, style=dotted];
m2_897 -> m2_898  [key=0, style=solid];
m2_899 -> m2_897  [key=0, style=bold, color=blue];
m2_977 -> m2_978  [key=0, style=solid];
m2_977 -> m2_15  [key=2, style=dotted];
m2_976 -> m2_977  [key=0, style=solid];
m2_978 -> m2_976  [key=0, style=bold, color=blue];
m2_995 -> m2_996  [key=0, style=solid];
m2_995 -> m2_908  [key=2, style=dotted];
m2_994 -> m2_995  [key=0, style=solid];
m2_996 -> m2_994  [key=0, style=bold, color=blue];
m2_1008 -> m2_1009  [key=0, style=solid];
m2_1008 -> m2_984  [key=2, style=dotted];
m2_1007 -> m2_1008  [key=0, style=solid];
m2_1009 -> m2_1007  [key=0, style=bold, color=blue];
m2_1015 -> m2_1016  [key=0, style=solid];
m2_1015 -> m2_908  [key=2, style=dotted];
m2_1014 -> m2_1015  [key=0, style=solid];
m2_1016 -> m2_1014  [key=0, style=bold, color=blue];
m2_1022 -> m2_1023  [key=0, style=solid];
m2_1022 -> m2_1002  [key=2, style=dotted];
m2_1021 -> m2_1022  [key=0, style=solid];
m2_1023 -> m2_1021  [key=0, style=bold, color=blue];
m2_1036 -> m2_1037  [key=0, style=solid];
m2_1036 -> m2_908  [key=2, style=dotted];
m2_1035 -> m2_1036  [key=0, style=solid];
m2_1037 -> m2_1035  [key=0, style=bold, color=blue];
m2_1043 -> m2_1044  [key=0, style=solid];
m2_1043 -> m2_908  [key=2, style=dotted];
m2_1042 -> m2_1043  [key=0, style=solid];
m2_1044 -> m2_1042  [key=0, style=bold, color=blue];
m2_1114 -> m2_1115  [key=0, style=solid];
m2_1114 -> m2_1002  [key=2, style=dotted];
m2_1113 -> m2_1114  [key=0, style=solid];
m2_1115 -> m2_1113  [key=0, style=bold, color=blue];
m2_1216 -> m2_1217  [key=0, style=solid];
m2_1216 -> m2_451  [key=2, style=dotted];
m2_1215 -> m2_1216  [key=0, style=solid];
m2_1217 -> m2_1215  [key=0, style=bold, color=blue];
m2_1223 -> m2_1224  [key=0, style=solid];
m2_1223 -> m2_15  [key=2, style=dotted];
m2_1222 -> m2_1223  [key=0, style=solid];
m2_1224 -> m2_1222  [key=0, style=bold, color=blue];
m2_1230 -> m2_1231  [key=0, style=solid];
m2_1230 -> m2_15  [key=2, style=dotted];
m2_1229 -> m2_1230  [key=0, style=solid];
m2_1231 -> m2_1229  [key=0, style=bold, color=blue];
m2_1237 -> m2_1238  [key=0, style=solid];
m2_1237 -> m2_15  [key=2, style=dotted];
m2_1236 -> m2_1237  [key=0, style=solid];
m2_1238 -> m2_1236  [key=0, style=bold, color=blue];
m2_1244 -> m2_1245  [key=0, style=solid];
m2_1244 -> m2_15  [key=2, style=dotted];
m2_1243 -> m2_1244  [key=0, style=solid];
m2_1245 -> m2_1243  [key=0, style=bold, color=blue];
m2_1251 -> m2_1252  [key=0, style=solid];
m2_1251 -> m2_15  [key=2, style=dotted];
m2_1250 -> m2_1251  [key=0, style=solid];
m2_1252 -> m2_1250  [key=0, style=bold, color=blue];
m2_1384 -> m2_1385  [key=0, style=solid];
m2_1384 -> m2_15  [key=2, style=dotted];
m2_1383 -> m2_1384  [key=0, style=solid];
m2_1385 -> m2_1383  [key=0, style=bold, color=blue];
m2_1392 -> m2_1393  [key=0, style=solid];
m2_1392 -> m2_15  [key=2, style=dotted];
m2_1391 -> m2_1392  [key=0, style=solid];
m2_1393 -> m2_1391  [key=0, style=bold, color=blue];
m2_1423 -> m2_1424  [key=0, style=solid];
m2_1423 -> m2_15  [key=2, style=dotted];
m2_1422 -> m2_1423  [key=0, style=solid];
m2_1424 -> m2_1422  [key=0, style=bold, color=blue];
m2_1440 -> m2_1441  [key=0, style=solid];
m2_1440 -> m2_15  [key=2, style=dotted];
m2_1440 -> m2_16  [key=2, style=dotted];
m2_1439 -> m2_1440  [key=0, style=solid];
m2_1441 -> m2_1439  [key=0, style=bold, color=blue];
m2_1541 -> m2_1542  [key=0, style=solid];
m2_1541 -> m2_138  [key=2, style=dotted];
m2_1540 -> m2_1541  [key=0, style=solid];
m2_1542 -> m2_1540  [key=0, style=bold, color=blue];
m2_1597 -> m2_1598  [key=0, style=solid];
m2_1597 -> m2_15  [key=2, style=dotted];
m2_1597 -> m2_16  [key=2, style=dotted];
m2_1596 -> m2_1597  [key=0, style=solid];
m2_1598 -> m2_1596  [key=0, style=bold, color=blue];
m2_1629 -> m2_1630  [key=0, style=solid];
m2_1629 -> m2_15  [key=2, style=dotted];
m2_1629 -> m2_16  [key=2, style=dotted];
m2_1632 -> m2_1633  [key=0, style=solid];
m2_1632 -> m2_15  [key=2, style=dotted];
m2_1632 -> m2_16  [key=2, style=dotted];
m2_1628 -> m2_1629  [key=0, style=solid];
m2_1631 -> m2_1632  [key=0, style=solid];
m2_1630 -> m2_1628  [key=0, style=bold, color=blue];
m2_1633 -> m2_1631  [key=0, style=bold, color=blue];
m2_1754 -> m2_1755  [key=0, style=solid];
m2_1754 -> m2_15  [key=2, style=dotted];
m2_1757 -> m2_1758  [key=0, style=solid];
m2_1757 -> m2_15  [key=2, style=dotted];
m2_1760 -> m2_1761  [key=0, style=solid];
m2_1760 -> m2_15  [key=2, style=dotted];
m2_1763 -> m2_1764  [key=0, style=solid];
m2_1763 -> m2_15  [key=2, style=dotted];
m2_1766 -> m2_1767  [key=0, style=solid];
m2_1766 -> m2_15  [key=2, style=dotted];
m2_1769 -> m2_1770  [key=0, style=solid];
m2_1769 -> m2_15  [key=2, style=dotted];
m2_1753 -> m2_1754  [key=0, style=solid];
m2_1756 -> m2_1757  [key=0, style=solid];
m2_1759 -> m2_1760  [key=0, style=solid];
m2_1762 -> m2_1763  [key=0, style=solid];
m2_1765 -> m2_1766  [key=0, style=solid];
m2_1755 -> m2_1753  [key=0, style=bold, color=blue];
m2_1758 -> m2_1756  [key=0, style=bold, color=blue];
m2_1761 -> m2_1759  [key=0, style=bold, color=blue];
m2_1764 -> m2_1762  [key=0, style=bold, color=blue];
m2_1767 -> m2_1765  [key=0, style=bold, color=blue];
m2_1770 -> m2_1768  [key=0, style=bold, color=blue];
m2_1293 -> m2_1294  [key=0, style=solid];
m2_1294 -> m2_1295  [key=0, style=solid];
m2_1294 -> m2_1294  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1295 -> m2_1296  [key=0, style=solid];
m2_1295 -> m2_13  [key=2, style=dotted];
m2_1295 -> m2_14  [key=2, style=dotted];
m2_1295 -> m2_1298  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1295 -> m2_1300  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1295 -> m2_1301  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1295 -> m2_1302  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1296 -> m2_1297  [key=0, style=solid];
m2_1296 -> m2_1299  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_1296 -> m2_373  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m2_1298 -> m2_1299  [key=0, style=solid];
m2_1298 -> m2_15  [key=2, style=dotted];
m2_1298 -> m2_16  [key=2, style=dotted];
m2_1300 -> m2_1301  [key=0, style=solid];
m2_1300 -> m2_15  [key=2, style=dotted];
m2_1300 -> m2_16  [key=2, style=dotted];
m2_1301 -> m2_1302  [key=0, style=solid];
m2_1301 -> m2_17  [key=2, style=dotted];
m2_1302 -> m2_1303  [key=0, style=solid];
m2_1302 -> m2_15  [key=2, style=dotted];
m2_1302 -> m2_131  [key=2, style=dotted];
m2_1297 -> m2_1298  [key=0, style=solid];
m2_1297 -> m2_1300  [key=0, style=solid];
m2_1299 -> m2_1297  [key=0, style=solid];
m2_1299 -> m2_1299  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_1303 -> m2_1293  [key=0, style=bold, color=blue];
m2_1465 -> m2_1466  [key=0, style=solid];
m2_1466 -> m2_1467  [key=0, style=solid];
m2_1467 -> m2_1468  [key=0, style=solid];
m2_1467 -> m2_13  [key=2, style=dotted];
m2_1467 -> m2_116  [key=2, style=dotted];
m2_1467 -> m2_157  [key=2, style=dotted];
m2_1467 -> m2_158  [key=2, style=dotted];
m2_1467 -> m2_1469  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1467 -> m2_1470  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1467 -> m2_1471  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1467 -> m2_1472  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1467 -> m2_1473  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1467 -> m2_1474  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1467 -> m2_1475  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1467 -> m2_1476  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1467 -> m2_1477  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1467 -> m2_1478  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1467 -> m2_1479  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1467 -> m2_1480  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1467 -> m2_1481  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1467 -> m2_1482  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1467 -> m2_1483  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1467 -> m2_1484  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1467 -> m2_1485  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1467 -> m2_1486  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1467 -> m2_1487  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1467 -> m2_1488  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1467 -> m2_1489  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1467 -> m2_1490  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1467 -> m2_1491  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1467 -> m2_1492  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1467 -> m2_1493  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1467 -> m2_1494  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1467 -> m2_1495  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1467 -> m2_1496  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1467 -> m2_1497  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1467 -> m2_1498  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1467 -> m2_1499  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1467 -> m2_1500  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1467 -> m2_1501  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1467 -> m2_1502  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1468 -> m2_1469  [key=0, style=solid];
m2_1468 -> m2_15  [key=2, style=dotted];
m2_1468 -> m2_16  [key=2, style=dotted];
m2_1469 -> m2_1470  [key=0, style=solid];
m2_1469 -> m2_17  [key=2, style=dotted];
m2_1470 -> m2_1471  [key=0, style=solid];
m2_1470 -> m2_15  [key=2, style=dotted];
m2_1470 -> m2_16  [key=2, style=dotted];
m2_1471 -> m2_1472  [key=0, style=solid];
m2_1471 -> m2_17  [key=2, style=dotted];
m2_1472 -> m2_1473  [key=0, style=solid];
m2_1472 -> m2_15  [key=2, style=dotted];
m2_1472 -> m2_16  [key=2, style=dotted];
m2_1473 -> m2_1474  [key=0, style=solid];
m2_1473 -> m2_17  [key=2, style=dotted];
m2_1474 -> m2_1475  [key=0, style=solid];
m2_1474 -> m2_15  [key=2, style=dotted];
m2_1474 -> m2_16  [key=2, style=dotted];
m2_1475 -> m2_1476  [key=0, style=solid];
m2_1475 -> m2_17  [key=2, style=dotted];
m2_1476 -> m2_1477  [key=0, style=solid];
m2_1476 -> m2_17  [key=2, style=dotted];
m2_1477 -> m2_1478  [key=0, style=solid];
m2_1477 -> m2_15  [key=2, style=dotted];
m2_1477 -> m2_16  [key=2, style=dotted];
m2_1478 -> m2_1479  [key=0, style=solid];
m2_1478 -> m2_17  [key=2, style=dotted];
m2_1479 -> m2_1480  [key=0, style=solid];
m2_1479 -> m2_15  [key=2, style=dotted];
m2_1479 -> m2_16  [key=2, style=dotted];
m2_1480 -> m2_1481  [key=0, style=solid];
m2_1480 -> m2_17  [key=2, style=dotted];
m2_1481 -> m2_1482  [key=0, style=solid];
m2_1481 -> m2_17  [key=2, style=dotted];
m2_1482 -> m2_1483  [key=0, style=solid];
m2_1482 -> m2_15  [key=2, style=dotted];
m2_1482 -> m2_16  [key=2, style=dotted];
m2_1483 -> m2_1484  [key=0, style=solid];
m2_1483 -> m2_17  [key=2, style=dotted];
m2_1484 -> m2_1485  [key=0, style=solid];
m2_1484 -> m2_15  [key=2, style=dotted];
m2_1484 -> m2_16  [key=2, style=dotted];
m2_1485 -> m2_1486  [key=0, style=solid];
m2_1485 -> m2_17  [key=2, style=dotted];
m2_1486 -> m2_1487  [key=0, style=solid];
m2_1486 -> m2_15  [key=2, style=dotted];
m2_1486 -> m2_16  [key=2, style=dotted];
m2_1487 -> m2_1488  [key=0, style=solid];
m2_1487 -> m2_17  [key=2, style=dotted];
m2_1488 -> m2_1489  [key=0, style=solid];
m2_1488 -> m2_17  [key=2, style=dotted];
m2_1489 -> m2_1490  [key=0, style=solid];
m2_1489 -> m2_15  [key=2, style=dotted];
m2_1489 -> m2_16  [key=2, style=dotted];
m2_1490 -> m2_1491  [key=0, style=solid];
m2_1490 -> m2_17  [key=2, style=dotted];
m2_1491 -> m2_1492  [key=0, style=solid];
m2_1491 -> m2_15  [key=2, style=dotted];
m2_1491 -> m2_16  [key=2, style=dotted];
m2_1492 -> m2_1493  [key=0, style=solid];
m2_1492 -> m2_17  [key=2, style=dotted];
m2_1493 -> m2_1494  [key=0, style=solid];
m2_1493 -> m2_17  [key=2, style=dotted];
m2_1494 -> m2_1495  [key=0, style=solid];
m2_1494 -> m2_17  [key=2, style=dotted];
m2_1495 -> m2_1496  [key=0, style=solid];
m2_1495 -> m2_15  [key=2, style=dotted];
m2_1495 -> m2_16  [key=2, style=dotted];
m2_1496 -> m2_1497  [key=0, style=solid];
m2_1496 -> m2_17  [key=2, style=dotted];
m2_1497 -> m2_1498  [key=0, style=solid];
m2_1497 -> m2_15  [key=2, style=dotted];
m2_1497 -> m2_16  [key=2, style=dotted];
m2_1498 -> m2_1499  [key=0, style=solid];
m2_1498 -> m2_17  [key=2, style=dotted];
m2_1499 -> m2_1500  [key=0, style=solid];
m2_1499 -> m2_15  [key=2, style=dotted];
m2_1499 -> m2_16  [key=2, style=dotted];
m2_1500 -> m2_1501  [key=0, style=solid];
m2_1500 -> m2_17  [key=2, style=dotted];
m2_1501 -> m2_1502  [key=0, style=solid];
m2_1501 -> m2_15  [key=2, style=dotted];
m2_1501 -> m2_16  [key=2, style=dotted];
m2_1502 -> m2_1503  [key=0, style=solid];
m2_1502 -> m2_17  [key=2, style=dotted];
m2_1503 -> m2_1465  [key=0, style=bold, color=blue];
m2_1031 -> m2_1032  [key=0, style=solid];
m2_1032 -> m2_1033  [key=0, style=solid];
m2_1032 -> m2_13  [key=2, style=dotted];
m2_1032 -> m2_14  [key=2, style=dotted];
m2_1032 -> m2_1036  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1033 -> m2_1034  [key=0, style=solid];
m2_1033 -> m2_18  [key=2, style=dotted];
m2_1033 -> m2_1035  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1034 -> m2_1031  [key=0, style=bold, color=blue];
m2_1543 -> m2_1544  [key=0, style=solid];
m2_1544 -> m2_1545  [key=0, style=solid];
m2_1545 -> m2_1546  [key=0, style=solid];
m2_1545 -> m2_1586  [key=2, style=dotted];
m2_1545 -> m2_1547  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_1546 -> m2_1547  [key=0, style=solid];
m2_1546 -> m2_1177  [key=2, style=dotted];
m2_1546 -> m2_1587  [key=2, style=dotted];
m2_1546 -> m2_1588  [key=2, style=dotted];
m2_1547 -> m2_1548  [key=0, style=solid];
m2_1547 -> m2_1589  [key=2, style=dotted];
m2_1547 -> m2_1588  [key=2, style=dotted];
m2_1548 -> m2_1549  [key=0, style=solid];
m2_1548 -> m2_1567  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1548 -> m2_1548  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1549 -> m2_1550  [key=0, style=solid];
m2_1549 -> m2_13  [key=2, style=dotted];
m2_1549 -> m2_14  [key=2, style=dotted];
m2_1549 -> m2_1551  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1549 -> m2_1552  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1549 -> m2_1553  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1549 -> m2_1554  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1549 -> m2_1555  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1549 -> m2_1556  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1549 -> m2_1557  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1549 -> m2_1558  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1549 -> m2_1559  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1549 -> m2_1560  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1549 -> m2_1561  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1549 -> m2_1562  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1549 -> m2_1563  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1549 -> m2_1564  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1549 -> m2_1565  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1549 -> m2_1566  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1567 -> m2_1568  [key=0, style=solid];
m2_1567 -> m2_13  [key=2, style=dotted];
m2_1567 -> m2_14  [key=2, style=dotted];
m2_1567 -> m2_1569  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1567 -> m2_1570  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1567 -> m2_1571  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1567 -> m2_1572  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1567 -> m2_1573  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1567 -> m2_1574  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1567 -> m2_1575  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1567 -> m2_1576  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1567 -> m2_1577  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1567 -> m2_1578  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1567 -> m2_1579  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1567 -> m2_1580  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1567 -> m2_1581  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1567 -> m2_1582  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1567 -> m2_1583  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1567 -> m2_1584  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1550 -> m2_1551  [key=0, style=solid];
m2_1550 -> m2_15  [key=2, style=dotted];
m2_1551 -> m2_1552  [key=0, style=solid];
m2_1551 -> m2_15  [key=2, style=dotted];
m2_1552 -> m2_1553  [key=0, style=solid];
m2_1552 -> m2_17  [key=2, style=dotted];
m2_1553 -> m2_1554  [key=0, style=solid];
m2_1553 -> m2_17  [key=2, style=dotted];
m2_1554 -> m2_1555  [key=0, style=solid];
m2_1554 -> m2_15  [key=2, style=dotted];
m2_1555 -> m2_1556  [key=0, style=solid];
m2_1555 -> m2_17  [key=2, style=dotted];
m2_1556 -> m2_1557  [key=0, style=solid];
m2_1556 -> m2_17  [key=2, style=dotted];
m2_1557 -> m2_1558  [key=0, style=solid];
m2_1557 -> m2_15  [key=2, style=dotted];
m2_1558 -> m2_1559  [key=0, style=solid];
m2_1558 -> m2_17  [key=2, style=dotted];
m2_1559 -> m2_1560  [key=0, style=solid];
m2_1559 -> m2_17  [key=2, style=dotted];
m2_1560 -> m2_1561  [key=0, style=solid];
m2_1560 -> m2_15  [key=2, style=dotted];
m2_1561 -> m2_1562  [key=0, style=solid];
m2_1561 -> m2_17  [key=2, style=dotted];
m2_1562 -> m2_1563  [key=0, style=solid];
m2_1562 -> m2_17  [key=2, style=dotted];
m2_1563 -> m2_1564  [key=0, style=solid];
m2_1563 -> m2_15  [key=2, style=dotted];
m2_1564 -> m2_1565  [key=0, style=solid];
m2_1564 -> m2_17  [key=2, style=dotted];
m2_1565 -> m2_1566  [key=0, style=solid];
m2_1565 -> m2_17  [key=2, style=dotted];
m2_1566 -> m2_1567  [key=0, style=solid];
m2_1566 -> m2_15  [key=2, style=dotted];
m2_1568 -> m2_1569  [key=0, style=solid];
m2_1568 -> m2_15  [key=2, style=dotted];
m2_1569 -> m2_1570  [key=0, style=solid];
m2_1569 -> m2_984  [key=2, style=dotted];
m2_1570 -> m2_1571  [key=0, style=solid];
m2_1570 -> m2_17  [key=2, style=dotted];
m2_1571 -> m2_1572  [key=0, style=solid];
m2_1571 -> m2_17  [key=2, style=dotted];
m2_1572 -> m2_1573  [key=0, style=solid];
m2_1572 -> m2_984  [key=2, style=dotted];
m2_1573 -> m2_1574  [key=0, style=solid];
m2_1573 -> m2_17  [key=2, style=dotted];
m2_1574 -> m2_1575  [key=0, style=solid];
m2_1574 -> m2_17  [key=2, style=dotted];
m2_1575 -> m2_1576  [key=0, style=solid];
m2_1575 -> m2_984  [key=2, style=dotted];
m2_1576 -> m2_1577  [key=0, style=solid];
m2_1576 -> m2_17  [key=2, style=dotted];
m2_1577 -> m2_1578  [key=0, style=solid];
m2_1577 -> m2_17  [key=2, style=dotted];
m2_1578 -> m2_1579  [key=0, style=solid];
m2_1578 -> m2_984  [key=2, style=dotted];
m2_1579 -> m2_1580  [key=0, style=solid];
m2_1579 -> m2_17  [key=2, style=dotted];
m2_1580 -> m2_1581  [key=0, style=solid];
m2_1580 -> m2_17  [key=2, style=dotted];
m2_1581 -> m2_1582  [key=0, style=solid];
m2_1581 -> m2_984  [key=2, style=dotted];
m2_1582 -> m2_1583  [key=0, style=solid];
m2_1582 -> m2_17  [key=2, style=dotted];
m2_1583 -> m2_1584  [key=0, style=solid];
m2_1583 -> m2_17  [key=2, style=dotted];
m2_1584 -> m2_1585  [key=0, style=solid];
m2_1584 -> m2_15  [key=2, style=dotted];
m2_1585 -> m2_1543  [key=0, style=bold, color=blue];
m2_1823 -> m2_1824  [key=0, style=solid];
m2_1824 -> m2_1825  [key=0, style=solid];
m2_1824 -> m2_1819  [key=2, style=dotted];
m2_1825 -> m2_1823  [key=0, style=bold, color=blue];
m2_971 -> m2_972  [key=0, style=solid];
m2_972 -> m2_973  [key=0, style=solid];
m2_972 -> m2_13  [key=2, style=dotted];
m2_972 -> m2_14  [key=2, style=dotted];
m2_972 -> m2_974  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_972 -> m2_977  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_973 -> m2_974  [key=0, style=solid];
m2_973 -> m2_15  [key=2, style=dotted];
m2_974 -> m2_975  [key=0, style=solid];
m2_974 -> m2_18  [key=2, style=dotted];
m2_974 -> m2_976  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_975 -> m2_971  [key=0, style=bold, color=blue];
m2_1130 -> m2_1131  [key=0, style=solid];
m2_1131 -> m2_1132  [key=0, style=solid];
m2_1131 -> m2_1131  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1132 -> m2_1133  [key=0, style=solid];
m2_1132 -> m2_13  [key=2, style=dotted];
m2_1132 -> m2_14  [key=2, style=dotted];
m2_1132 -> m2_1134  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1132 -> m2_1135  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1132 -> m2_1136  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1132 -> m2_1137  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1132 -> m2_1138  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1132 -> m2_1139  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1132 -> m2_1140  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1132 -> m2_1141  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1132 -> m2_1142  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1133 -> m2_1134  [key=0, style=solid];
m2_1133 -> m2_15  [key=2, style=dotted];
m2_1133 -> m2_16  [key=2, style=dotted];
m2_1134 -> m2_1135  [key=0, style=solid];
m2_1134 -> m2_17  [key=2, style=dotted];
m2_1135 -> m2_1136  [key=0, style=solid];
m2_1135 -> m2_15  [key=2, style=dotted];
m2_1135 -> m2_16  [key=2, style=dotted];
m2_1136 -> m2_1137  [key=0, style=solid];
m2_1136 -> m2_17  [key=2, style=dotted];
m2_1137 -> m2_1138  [key=0, style=solid];
m2_1137 -> m2_1002  [key=2, style=dotted];
m2_1138 -> m2_1139  [key=0, style=solid];
m2_1138 -> m2_17  [key=2, style=dotted];
m2_1139 -> m2_1140  [key=0, style=solid];
m2_1139 -> m2_17  [key=2, style=dotted];
m2_1140 -> m2_1141  [key=0, style=solid];
m2_1140 -> m2_1087  [key=2, style=dotted];
m2_1140 -> m2_1088  [key=2, style=dotted];
m2_1140 -> m2_1089  [key=2, style=dotted];
m2_1140 -> m2_1144  [key=2, style=dotted];
m2_1140 -> m2_1145  [key=2, style=dotted];
m2_1140 -> m2_17  [key=2, style=dotted];
m2_1141 -> m2_1142  [key=0, style=solid];
m2_1141 -> m2_15  [key=2, style=dotted];
m2_1141 -> m2_16  [key=2, style=dotted];
m2_1142 -> m2_1143  [key=0, style=solid];
m2_1142 -> m2_17  [key=2, style=dotted];
m2_1143 -> m2_1130  [key=0, style=bold, color=blue];
m2_190 -> m2_191  [key=0, style=solid];
m2_191 -> m2_192  [key=0, style=solid];
m2_191 -> m2_191  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_192 -> m2_193  [key=0, style=solid];
m2_192 -> m2_13  [key=2, style=dotted];
m2_192 -> m2_14  [key=2, style=dotted];
m2_192 -> m2_196  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_193 -> m2_194  [key=0, style=solid];
m2_193 -> m2_18  [key=2, style=dotted];
m2_193 -> m2_195  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_194 -> m2_190  [key=0, style=bold, color=blue];
m2_367 -> m2_368  [key=0, style=solid];
m2_368 -> m2_369  [key=0, style=solid];
m2_368 -> m2_373  [key=1, style=dashed, color=darkseagreen4, label=valueCount];
m2_368 -> m2_381  [key=1, style=dashed, color=darkseagreen4, label=valueCount];
m2_368 -> m2_368  [key=3, color=darkorchid, style=bold, label="Local variable int valueCount"];
m2_369 -> m2_370  [key=0, style=solid];
m2_369 -> m2_388  [key=2, style=dotted];
m2_369 -> m2_377  [key=1, style=dashed, color=darkseagreen4, label=sw];
m2_373 -> m2_374  [key=0, style=solid];
m2_373 -> m2_376  [key=0, style=solid];
m2_373 -> m2_373  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m2_381 -> m2_382  [key=0, style=solid];
m2_381 -> m2_385  [key=0, style=solid];
m2_381 -> m2_373  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m2_370 -> m2_371  [key=0, style=solid];
m2_370 -> m2_389  [key=2, style=dotted];
m2_370 -> m2_374  [key=1, style=dashed, color=darkseagreen4, label=writer];
m2_370 -> m2_376  [key=1, style=dashed, color=darkseagreen4, label=writer];
m2_377 -> m2_378  [key=0, style=solid];
m2_377 -> m2_393  [key=2, style=dotted];
m2_371 -> m2_372  [key=0, style=solid];
m2_371 -> m2_390  [key=2, style=dotted];
m2_374 -> m2_375  [key=0, style=solid];
m2_374 -> m2_391  [key=2, style=dotted];
m2_376 -> m2_377  [key=0, style=solid];
m2_376 -> m2_392  [key=2, style=dotted];
m2_372 -> m2_373  [key=0, style=solid];
m2_372 -> m2_374  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_372 -> m2_375  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_375 -> m2_373  [key=0, style=solid];
m2_375 -> m2_375  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_378 -> m2_379  [key=0, style=solid];
m2_378 -> m2_13  [key=2, style=dotted];
m2_378 -> m2_14  [key=2, style=dotted];
m2_378 -> m2_382  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_378 -> m2_383  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_378 -> m2_385  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_378 -> m2_386  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_379 -> m2_380  [key=0, style=solid];
m2_379 -> m2_15  [key=2, style=dotted];
m2_379 -> m2_16  [key=2, style=dotted];
m2_382 -> m2_383  [key=0, style=solid];
m2_382 -> m2_15  [key=2, style=dotted];
m2_382 -> m2_16  [key=2, style=dotted];
m2_383 -> m2_384  [key=0, style=solid];
m2_383 -> m2_17  [key=2, style=dotted];
m2_385 -> m2_386  [key=0, style=solid];
m2_385 -> m2_15  [key=2, style=dotted];
m2_385 -> m2_16  [key=2, style=dotted];
m2_386 -> m2_387  [key=0, style=solid];
m2_386 -> m2_15  [key=2, style=dotted];
m2_386 -> m2_131  [key=2, style=dotted];
m2_380 -> m2_381  [key=0, style=solid];
m2_380 -> m2_383  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_380 -> m2_384  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_384 -> m2_381  [key=0, style=solid];
m2_384 -> m2_384  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_387 -> m2_367  [key=0, style=bold, color=blue];
m2_1104 -> m2_1105  [key=0, style=solid];
m2_1105 -> m2_1106  [key=0, style=solid];
m2_1105 -> m2_1105  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1106 -> m2_1107  [key=0, style=solid];
m2_1106 -> m2_13  [key=2, style=dotted];
m2_1106 -> m2_14  [key=2, style=dotted];
m2_1106 -> m2_1108  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1106 -> m2_1109  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1106 -> m2_1110  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1106 -> m2_1111  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1106 -> m2_1114  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1107 -> m2_1108  [key=0, style=solid];
m2_1107 -> m2_15  [key=2, style=dotted];
m2_1107 -> m2_16  [key=2, style=dotted];
m2_1108 -> m2_1109  [key=0, style=solid];
m2_1108 -> m2_17  [key=2, style=dotted];
m2_1109 -> m2_1110  [key=0, style=solid];
m2_1109 -> m2_15  [key=2, style=dotted];
m2_1109 -> m2_16  [key=2, style=dotted];
m2_1110 -> m2_1111  [key=0, style=solid];
m2_1110 -> m2_17  [key=2, style=dotted];
m2_1111 -> m2_1112  [key=0, style=solid];
m2_1111 -> m2_18  [key=2, style=dotted];
m2_1111 -> m2_1113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1112 -> m2_1104  [key=0, style=bold, color=blue];
m2_1003 -> m2_1004  [key=0, style=solid];
m2_1004 -> m2_1005  [key=0, style=solid];
m2_1004 -> m2_13  [key=2, style=dotted];
m2_1004 -> m2_14  [key=2, style=dotted];
m2_1004 -> m2_1008  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1005 -> m2_1006  [key=0, style=solid];
m2_1005 -> m2_18  [key=2, style=dotted];
m2_1005 -> m2_1007  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1006 -> m2_1003  [key=0, style=bold, color=blue];
m2_117 -> m2_118  [key=0, style=solid];
m2_118 -> m2_119  [key=0, style=solid];
m2_118 -> m2_129  [key=2, style=dotted];
m2_118 -> m2_120  [key=1, style=dashed, color=darkseagreen4, label=ms];
m2_118 -> m2_122  [key=1, style=dashed, color=darkseagreen4, label=ms];
m2_119 -> m2_120  [key=0, style=solid];
m2_119 -> m2_13  [key=2, style=dotted];
m2_119 -> m2_116  [key=2, style=dotted];
m2_119 -> m2_121  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_120 -> m2_121  [key=0, style=solid];
m2_120 -> m2_16  [key=2, style=dotted];
m2_122 -> m2_123  [key=0, style=solid];
m2_122 -> m2_131  [key=2, style=dotted];
m2_121 -> m2_122  [key=0, style=solid];
m2_121 -> m2_130  [key=2, style=dotted];
m2_123 -> m2_124  [key=0, style=solid];
m2_123 -> m2_129  [key=2, style=dotted];
m2_123 -> m2_125  [key=1, style=dashed, color=darkseagreen4, label=ms];
m2_123 -> m2_127  [key=1, style=dashed, color=darkseagreen4, label=ms];
m2_124 -> m2_125  [key=0, style=solid];
m2_124 -> m2_13  [key=2, style=dotted];
m2_124 -> m2_116  [key=2, style=dotted];
m2_124 -> m2_126  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_125 -> m2_126  [key=0, style=solid];
m2_125 -> m2_16  [key=2, style=dotted];
m2_127 -> m2_128  [key=0, style=solid];
m2_127 -> m2_16  [key=2, style=dotted];
m2_126 -> m2_127  [key=0, style=solid];
m2_126 -> m2_130  [key=2, style=dotted];
m2_128 -> m2_117  [key=0, style=bold, color=blue];
m2_1060 -> m2_1061  [key=0, style=solid];
m2_1061 -> m2_1062  [key=0, style=solid];
m2_1061 -> m2_1061  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1062 -> m2_1063  [key=0, style=solid];
m2_1062 -> m2_13  [key=2, style=dotted];
m2_1062 -> m2_14  [key=2, style=dotted];
m2_1062 -> m2_1064  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1062 -> m2_1065  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1062 -> m2_1066  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1062 -> m2_1067  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1062 -> m2_1068  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1062 -> m2_1069  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1062 -> m2_1070  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1062 -> m2_1071  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1063 -> m2_1064  [key=0, style=solid];
m2_1063 -> m2_15  [key=2, style=dotted];
m2_1063 -> m2_16  [key=2, style=dotted];
m2_1064 -> m2_1065  [key=0, style=solid];
m2_1064 -> m2_17  [key=2, style=dotted];
m2_1065 -> m2_1066  [key=0, style=solid];
m2_1065 -> m2_15  [key=2, style=dotted];
m2_1065 -> m2_16  [key=2, style=dotted];
m2_1066 -> m2_1067  [key=0, style=solid];
m2_1066 -> m2_17  [key=2, style=dotted];
m2_1067 -> m2_1068  [key=0, style=solid];
m2_1067 -> m2_15  [key=2, style=dotted];
m2_1067 -> m2_16  [key=2, style=dotted];
m2_1068 -> m2_1069  [key=0, style=solid];
m2_1068 -> m2_17  [key=2, style=dotted];
m2_1069 -> m2_1070  [key=0, style=solid];
m2_1069 -> m2_17  [key=2, style=dotted];
m2_1070 -> m2_1071  [key=0, style=solid];
m2_1070 -> m2_15  [key=2, style=dotted];
m2_1070 -> m2_16  [key=2, style=dotted];
m2_1071 -> m2_1072  [key=0, style=solid];
m2_1071 -> m2_17  [key=2, style=dotted];
m2_1072 -> m2_1060  [key=0, style=bold, color=blue];
m2_1116 -> m2_1117  [key=0, style=solid];
m2_1117 -> m2_1118  [key=0, style=solid];
m2_1117 -> m2_1117  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1118 -> m2_1119  [key=0, style=solid];
m2_1118 -> m2_13  [key=2, style=dotted];
m2_1118 -> m2_14  [key=2, style=dotted];
m2_1118 -> m2_1120  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1118 -> m2_1121  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1118 -> m2_1122  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1118 -> m2_1123  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1118 -> m2_1124  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1118 -> m2_1125  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1118 -> m2_1126  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1118 -> m2_1127  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1118 -> m2_1128  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1119 -> m2_1120  [key=0, style=solid];
m2_1119 -> m2_15  [key=2, style=dotted];
m2_1119 -> m2_16  [key=2, style=dotted];
m2_1120 -> m2_1121  [key=0, style=solid];
m2_1120 -> m2_17  [key=2, style=dotted];
m2_1121 -> m2_1122  [key=0, style=solid];
m2_1121 -> m2_15  [key=2, style=dotted];
m2_1121 -> m2_16  [key=2, style=dotted];
m2_1122 -> m2_1123  [key=0, style=solid];
m2_1122 -> m2_17  [key=2, style=dotted];
m2_1123 -> m2_1124  [key=0, style=solid];
m2_1123 -> m2_1002  [key=2, style=dotted];
m2_1124 -> m2_1125  [key=0, style=solid];
m2_1124 -> m2_17  [key=2, style=dotted];
m2_1125 -> m2_1126  [key=0, style=solid];
m2_1125 -> m2_17  [key=2, style=dotted];
m2_1126 -> m2_1127  [key=0, style=solid];
m2_1126 -> m2_1087  [key=2, style=dotted];
m2_1126 -> m2_1088  [key=2, style=dotted];
m2_1126 -> m2_1089  [key=2, style=dotted];
m2_1126 -> m2_17  [key=2, style=dotted];
m2_1127 -> m2_1128  [key=0, style=solid];
m2_1127 -> m2_15  [key=2, style=dotted];
m2_1127 -> m2_16  [key=2, style=dotted];
m2_1128 -> m2_1129  [key=0, style=solid];
m2_1128 -> m2_17  [key=2, style=dotted];
m2_1129 -> m2_1116  [key=0, style=bold, color=blue];
m2_353 -> m2_354  [key=0, style=solid];
m2_354 -> m2_355  [key=0, style=solid];
m2_354 -> m2_13  [key=2, style=dotted];
m2_354 -> m2_14  [key=2, style=dotted];
m2_354 -> m2_358  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_355 -> m2_356  [key=0, style=solid];
m2_355 -> m2_18  [key=2, style=dotted];
m2_355 -> m2_357  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_356 -> m2_353  [key=0, style=bold, color=blue];
m2_1378 -> m2_1379  [key=0, style=solid];
m2_1379 -> m2_1380  [key=0, style=solid];
m2_1379 -> m2_1379  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1380 -> m2_1381  [key=0, style=solid];
m2_1380 -> m2_13  [key=2, style=dotted];
m2_1380 -> m2_14  [key=2, style=dotted];
m2_1380 -> m2_1384  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1381 -> m2_1382  [key=0, style=solid];
m2_1381 -> m2_18  [key=2, style=dotted];
m2_1381 -> m2_1383  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1382 -> m2_1378  [key=0, style=bold, color=blue];
m2_1675 -> m2_1676  [key=0, style=solid];
m2_1676 -> m2_1677  [key=0, style=solid];
m2_1676 -> m2_1687  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1676 -> m2_1697  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1676 -> m2_1707  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1676 -> m2_1717  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1676 -> m2_1676  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1677 -> m2_1678  [key=0, style=solid];
m2_1677 -> m2_13  [key=2, style=dotted];
m2_1677 -> m2_14  [key=2, style=dotted];
m2_1677 -> m2_1679  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1677 -> m2_1680  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1677 -> m2_1681  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1677 -> m2_1682  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1677 -> m2_1683  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1677 -> m2_1684  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1677 -> m2_1685  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1677 -> m2_1686  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1687 -> m2_1688  [key=0, style=solid];
m2_1687 -> m2_13  [key=2, style=dotted];
m2_1687 -> m2_14  [key=2, style=dotted];
m2_1687 -> m2_1689  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1687 -> m2_1690  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1687 -> m2_1691  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1687 -> m2_1692  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1687 -> m2_1693  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1687 -> m2_1694  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1687 -> m2_1695  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1687 -> m2_1696  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1697 -> m2_1698  [key=0, style=solid];
m2_1697 -> m2_13  [key=2, style=dotted];
m2_1697 -> m2_14  [key=2, style=dotted];
m2_1697 -> m2_1699  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1697 -> m2_1700  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1697 -> m2_1701  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1697 -> m2_1702  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1697 -> m2_1703  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1697 -> m2_1704  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1697 -> m2_1705  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1697 -> m2_1706  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1707 -> m2_1708  [key=0, style=solid];
m2_1707 -> m2_13  [key=2, style=dotted];
m2_1707 -> m2_14  [key=2, style=dotted];
m2_1707 -> m2_1709  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1707 -> m2_1710  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1707 -> m2_1711  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1707 -> m2_1712  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1707 -> m2_1713  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1707 -> m2_1714  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1707 -> m2_1715  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1707 -> m2_1716  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1717 -> m2_1718  [key=0, style=solid];
m2_1717 -> m2_13  [key=2, style=dotted];
m2_1717 -> m2_14  [key=2, style=dotted];
m2_1717 -> m2_1719  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1717 -> m2_1720  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1717 -> m2_1721  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1717 -> m2_1722  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1717 -> m2_1723  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1717 -> m2_1724  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1717 -> m2_1725  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1717 -> m2_1726  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1678 -> m2_1679  [key=0, style=solid];
m2_1679 -> m2_1680  [key=0, style=solid];
m2_1679 -> m2_15  [key=2, style=dotted];
m2_1679 -> m2_16  [key=2, style=dotted];
m2_1680 -> m2_1681  [key=0, style=solid];
m2_1680 -> m2_15  [key=2, style=dotted];
m2_1680 -> m2_16  [key=2, style=dotted];
m2_1681 -> m2_1682  [key=0, style=solid];
m2_1681 -> m2_1728  [key=2, style=dotted];
m2_1681 -> m2_17  [key=2, style=dotted];
m2_1682 -> m2_1683  [key=0, style=solid];
m2_1682 -> m2_17  [key=2, style=dotted];
m2_1683 -> m2_1684  [key=0, style=solid];
m2_1683 -> m2_15  [key=2, style=dotted];
m2_1683 -> m2_16  [key=2, style=dotted];
m2_1684 -> m2_1685  [key=0, style=solid];
m2_1684 -> m2_1728  [key=2, style=dotted];
m2_1684 -> m2_17  [key=2, style=dotted];
m2_1685 -> m2_1686  [key=0, style=solid];
m2_1685 -> m2_17  [key=2, style=dotted];
m2_1686 -> m2_1687  [key=0, style=solid];
m2_1686 -> m2_15  [key=2, style=dotted];
m2_1686 -> m2_16  [key=2, style=dotted];
m2_1688 -> m2_1689  [key=0, style=solid];
m2_1689 -> m2_1690  [key=0, style=solid];
m2_1689 -> m2_15  [key=2, style=dotted];
m2_1689 -> m2_16  [key=2, style=dotted];
m2_1690 -> m2_1691  [key=0, style=solid];
m2_1690 -> m2_15  [key=2, style=dotted];
m2_1690 -> m2_16  [key=2, style=dotted];
m2_1691 -> m2_1692  [key=0, style=solid];
m2_1691 -> m2_1729  [key=2, style=dotted];
m2_1691 -> m2_17  [key=2, style=dotted];
m2_1692 -> m2_1693  [key=0, style=solid];
m2_1692 -> m2_17  [key=2, style=dotted];
m2_1693 -> m2_1694  [key=0, style=solid];
m2_1693 -> m2_15  [key=2, style=dotted];
m2_1693 -> m2_16  [key=2, style=dotted];
m2_1694 -> m2_1695  [key=0, style=solid];
m2_1694 -> m2_1729  [key=2, style=dotted];
m2_1694 -> m2_17  [key=2, style=dotted];
m2_1695 -> m2_1696  [key=0, style=solid];
m2_1695 -> m2_17  [key=2, style=dotted];
m2_1696 -> m2_1697  [key=0, style=solid];
m2_1696 -> m2_15  [key=2, style=dotted];
m2_1696 -> m2_16  [key=2, style=dotted];
m2_1698 -> m2_1699  [key=0, style=solid];
m2_1699 -> m2_1700  [key=0, style=solid];
m2_1699 -> m2_15  [key=2, style=dotted];
m2_1699 -> m2_16  [key=2, style=dotted];
m2_1700 -> m2_1701  [key=0, style=solid];
m2_1700 -> m2_15  [key=2, style=dotted];
m2_1700 -> m2_16  [key=2, style=dotted];
m2_1701 -> m2_1702  [key=0, style=solid];
m2_1701 -> m2_17  [key=2, style=dotted];
m2_1702 -> m2_1703  [key=0, style=solid];
m2_1702 -> m2_17  [key=2, style=dotted];
m2_1703 -> m2_1704  [key=0, style=solid];
m2_1703 -> m2_15  [key=2, style=dotted];
m2_1703 -> m2_16  [key=2, style=dotted];
m2_1704 -> m2_1705  [key=0, style=solid];
m2_1704 -> m2_17  [key=2, style=dotted];
m2_1705 -> m2_1706  [key=0, style=solid];
m2_1705 -> m2_17  [key=2, style=dotted];
m2_1706 -> m2_1707  [key=0, style=solid];
m2_1706 -> m2_15  [key=2, style=dotted];
m2_1706 -> m2_16  [key=2, style=dotted];
m2_1708 -> m2_1709  [key=0, style=solid];
m2_1709 -> m2_1710  [key=0, style=solid];
m2_1709 -> m2_15  [key=2, style=dotted];
m2_1709 -> m2_16  [key=2, style=dotted];
m2_1710 -> m2_1711  [key=0, style=solid];
m2_1710 -> m2_1002  [key=2, style=dotted];
m2_1711 -> m2_1712  [key=0, style=solid];
m2_1711 -> m2_1729  [key=2, style=dotted];
m2_1711 -> m2_17  [key=2, style=dotted];
m2_1712 -> m2_1713  [key=0, style=solid];
m2_1712 -> m2_17  [key=2, style=dotted];
m2_1713 -> m2_1714  [key=0, style=solid];
m2_1713 -> m2_1002  [key=2, style=dotted];
m2_1714 -> m2_1715  [key=0, style=solid];
m2_1714 -> m2_1729  [key=2, style=dotted];
m2_1714 -> m2_17  [key=2, style=dotted];
m2_1715 -> m2_1716  [key=0, style=solid];
m2_1715 -> m2_17  [key=2, style=dotted];
m2_1716 -> m2_1717  [key=0, style=solid];
m2_1716 -> m2_15  [key=2, style=dotted];
m2_1716 -> m2_16  [key=2, style=dotted];
m2_1718 -> m2_1719  [key=0, style=solid];
m2_1719 -> m2_1720  [key=0, style=solid];
m2_1719 -> m2_15  [key=2, style=dotted];
m2_1719 -> m2_16  [key=2, style=dotted];
m2_1720 -> m2_1721  [key=0, style=solid];
m2_1720 -> m2_1730  [key=2, style=dotted];
m2_1721 -> m2_1722  [key=0, style=solid];
m2_1721 -> m2_1728  [key=2, style=dotted];
m2_1721 -> m2_17  [key=2, style=dotted];
m2_1722 -> m2_1723  [key=0, style=solid];
m2_1722 -> m2_17  [key=2, style=dotted];
m2_1723 -> m2_1724  [key=0, style=solid];
m2_1723 -> m2_1730  [key=2, style=dotted];
m2_1724 -> m2_1725  [key=0, style=solid];
m2_1724 -> m2_1728  [key=2, style=dotted];
m2_1724 -> m2_17  [key=2, style=dotted];
m2_1725 -> m2_1726  [key=0, style=solid];
m2_1725 -> m2_17  [key=2, style=dotted];
m2_1726 -> m2_1727  [key=0, style=solid];
m2_1726 -> m2_15  [key=2, style=dotted];
m2_1726 -> m2_16  [key=2, style=dotted];
m2_1727 -> m2_1675  [key=0, style=bold, color=blue];
m2_93 -> m2_94  [key=0, style=solid];
m2_94 -> m2_95  [key=0, style=solid];
m2_94 -> m2_107  [key=2, style=dotted];
m2_94 -> m2_17  [key=2, style=dotted];
m2_95 -> m2_96  [key=0, style=solid];
m2_95 -> m2_107  [key=2, style=dotted];
m2_95 -> m2_17  [key=2, style=dotted];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_107  [key=2, style=dotted];
m2_96 -> m2_17  [key=2, style=dotted];
m2_97 -> m2_98  [key=0, style=solid];
m2_97 -> m2_107  [key=2, style=dotted];
m2_97 -> m2_17  [key=2, style=dotted];
m2_98 -> m2_99  [key=0, style=solid];
m2_98 -> m2_107  [key=2, style=dotted];
m2_98 -> m2_17  [key=2, style=dotted];
m2_99 -> m2_100  [key=0, style=solid];
m2_99 -> m2_107  [key=2, style=dotted];
m2_99 -> m2_17  [key=2, style=dotted];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_107  [key=2, style=dotted];
m2_100 -> m2_17  [key=2, style=dotted];
m2_101 -> m2_102  [key=0, style=solid];
m2_101 -> m2_107  [key=2, style=dotted];
m2_101 -> m2_17  [key=2, style=dotted];
m2_102 -> m2_103  [key=0, style=solid];
m2_102 -> m2_107  [key=2, style=dotted];
m2_102 -> m2_17  [key=2, style=dotted];
m2_103 -> m2_104  [key=0, style=solid];
m2_103 -> m2_107  [key=2, style=dotted];
m2_103 -> m2_17  [key=2, style=dotted];
m2_104 -> m2_105  [key=0, style=solid];
m2_104 -> m2_107  [key=2, style=dotted];
m2_104 -> m2_17  [key=2, style=dotted];
m2_105 -> m2_106  [key=0, style=solid];
m2_105 -> m2_107  [key=2, style=dotted];
m2_105 -> m2_17  [key=2, style=dotted];
m2_106 -> m2_93  [key=0, style=bold, color=blue];
m2_997 -> m2_998  [key=0, style=solid];
m2_998 -> m2_999  [key=0, style=solid];
m2_998 -> m2_13  [key=2, style=dotted];
m2_998 -> m2_14  [key=2, style=dotted];
m2_998 -> m2_1000  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_999 -> m2_1000  [key=0, style=solid];
m2_999 -> m2_1002  [key=2, style=dotted];
m2_999 -> m2_551  [key=2, style=dotted];
m2_1000 -> m2_1001  [key=0, style=solid];
m2_1000 -> m2_17  [key=2, style=dotted];
m2_1001 -> m2_997  [key=0, style=bold, color=blue];
m2_1806 -> m2_1807  [key=0, style=solid];
m2_1806 -> m2_1810  [key=1, style=dashed, color=darkseagreen4, label="byte[]"];
m2_1807 -> m2_1808  [key=0, style=solid];
m2_1807 -> m2_1814  [key=2, style=dotted];
m2_1810 -> m2_1811  [key=0, style=solid];
m2_1810 -> m2_1815  [key=2, style=dotted];
m2_1808 -> m2_1809  [key=0, style=solid];
m2_1808 -> m2_1814  [key=2, style=dotted];
m2_1808 -> m2_1808  [key=1, style=dashed, color=darkseagreen4, label=toReturn];
m2_1808 -> m2_1810  [key=1, style=dashed, color=darkseagreen4, label=toReturn];
m2_1808 -> m2_1811  [key=1, style=dashed, color=darkseagreen4, label=toReturn];
m2_1808 -> m2_1812  [key=1, style=dashed, color=darkseagreen4, label=toReturn];
m2_1809 -> m2_1810  [key=0, style=solid];
m2_1809 -> m2_1811  [key=0, style=solid];
m2_1811 -> m2_1812  [key=0, style=solid];
m2_1812 -> m2_1813  [key=0, style=solid];
m2_1813 -> m2_1806  [key=0, style=bold, color=blue];
m2_1518 -> m2_1519  [key=0, style=solid];
m2_1519 -> m2_1520  [key=0, style=solid];
m2_1519 -> m2_1519  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1520 -> m2_1521  [key=0, style=solid];
m2_1520 -> m2_13  [key=2, style=dotted];
m2_1520 -> m2_14  [key=2, style=dotted];
m2_1520 -> m2_1522  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1520 -> m2_1523  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1520 -> m2_1524  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1520 -> m2_1525  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1520 -> m2_1526  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1520 -> m2_1527  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1520 -> m2_1528  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1520 -> m2_1529  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1520 -> m2_1530  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1520 -> m2_1531  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1520 -> m2_1532  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1521 -> m2_1522  [key=0, style=solid];
m2_1521 -> m2_15  [key=2, style=dotted];
m2_1522 -> m2_1523  [key=0, style=solid];
m2_1522 -> m2_17  [key=2, style=dotted];
m2_1523 -> m2_1524  [key=0, style=solid];
m2_1523 -> m2_15  [key=2, style=dotted];
m2_1524 -> m2_1525  [key=0, style=solid];
m2_1524 -> m2_17  [key=2, style=dotted];
m2_1525 -> m2_1526  [key=0, style=solid];
m2_1525 -> m2_15  [key=2, style=dotted];
m2_1526 -> m2_1527  [key=0, style=solid];
m2_1526 -> m2_17  [key=2, style=dotted];
m2_1527 -> m2_1528  [key=0, style=solid];
m2_1527 -> m2_15  [key=2, style=dotted];
m2_1528 -> m2_1529  [key=0, style=solid];
m2_1528 -> m2_17  [key=2, style=dotted];
m2_1529 -> m2_1530  [key=0, style=solid];
m2_1529 -> m2_15  [key=2, style=dotted];
m2_1530 -> m2_1531  [key=0, style=solid];
m2_1530 -> m2_17  [key=2, style=dotted];
m2_1531 -> m2_1532  [key=0, style=solid];
m2_1531 -> m2_15  [key=2, style=dotted];
m2_1532 -> m2_1533  [key=0, style=solid];
m2_1532 -> m2_17  [key=2, style=dotted];
m2_1533 -> m2_1518  [key=0, style=bold, color=blue];
m2_22 -> m2_23  [key=0, style=solid];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_23  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_13  [key=2, style=dotted];
m2_24 -> m2_14  [key=2, style=dotted];
m2_24 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_24 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_24 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_24 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_24 -> m2_30  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_24 -> m2_31  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_24 -> m2_32  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_24 -> m2_33  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_24 -> m2_34  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_24 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_24 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_24 -> m2_37  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_24 -> m2_38  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_24 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_24 -> m2_40  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_24 -> m2_41  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_24 -> m2_42  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_24 -> m2_43  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_24 -> m2_44  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_24 -> m2_45  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_25 -> m2_26  [key=0, style=solid];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_15  [key=2, style=dotted];
m2_26 -> m2_16  [key=2, style=dotted];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_17  [key=2, style=dotted];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_15  [key=2, style=dotted];
m2_28 -> m2_16  [key=2, style=dotted];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_17  [key=2, style=dotted];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_17  [key=2, style=dotted];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_17  [key=2, style=dotted];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_15  [key=2, style=dotted];
m2_32 -> m2_16  [key=2, style=dotted];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_17  [key=2, style=dotted];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_17  [key=2, style=dotted];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_17  [key=2, style=dotted];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_15  [key=2, style=dotted];
m2_36 -> m2_16  [key=2, style=dotted];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_17  [key=2, style=dotted];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_17  [key=2, style=dotted];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_17  [key=2, style=dotted];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_15  [key=2, style=dotted];
m2_40 -> m2_16  [key=2, style=dotted];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_47  [key=2, style=dotted];
m2_41 -> m2_17  [key=2, style=dotted];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_17  [key=2, style=dotted];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_17  [key=2, style=dotted];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_15  [key=2, style=dotted];
m2_44 -> m2_16  [key=2, style=dotted];
m2_45 -> m2_46  [key=0, style=solid];
m2_45 -> m2_17  [key=2, style=dotted];
m2_46 -> m2_22  [key=0, style=bold, color=blue];
m2_1024 -> m2_1025  [key=0, style=solid];
m2_1025 -> m2_1026  [key=0, style=solid];
m2_1025 -> m2_13  [key=2, style=dotted];
m2_1025 -> m2_14  [key=2, style=dotted];
m2_1026 -> m2_1027  [key=0, style=solid];
m2_1026 -> m2_908  [key=2, style=dotted];
m2_1026 -> m2_1028  [key=1, style=dashed, color=darkseagreen4, label=data];
m2_1026 -> m2_1029  [key=1, style=dashed, color=darkseagreen4, label=data];
m2_1027 -> m2_1028  [key=0, style=solid];
m2_1027 -> m2_17  [key=2, style=dotted];
m2_1028 -> m2_1029  [key=0, style=solid];
m2_1028 -> m2_17  [key=2, style=dotted];
m2_1029 -> m2_1030  [key=0, style=solid];
m2_1029 -> m2_17  [key=2, style=dotted];
m2_1030 -> m2_1024  [key=0, style=bold, color=blue];
m2_911 -> m2_912  [key=0, style=solid];
m2_912 -> m2_913  [key=0, style=solid];
m2_912 -> m2_14  [key=2, style=dotted];
m2_913 -> m2_914  [key=0, style=solid];
m2_913 -> m2_13  [key=2, style=dotted];
m2_913 -> m2_915  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_913 -> m2_916  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_913 -> m2_917  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_913 -> m2_918  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_913 -> m2_919  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_913 -> m2_920  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_913 -> m2_921  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_913 -> m2_922  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_913 -> m2_923  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_913 -> m2_924  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_913 -> m2_925  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_913 -> m2_926  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_913 -> m2_927  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_914 -> m2_915  [key=0, style=solid];
m2_914 -> m2_15  [key=2, style=dotted];
m2_914 -> m2_16  [key=2, style=dotted];
m2_915 -> m2_916  [key=0, style=solid];
m2_915 -> m2_17  [key=2, style=dotted];
m2_916 -> m2_917  [key=0, style=solid];
m2_916 -> m2_15  [key=2, style=dotted];
m2_916 -> m2_16  [key=2, style=dotted];
m2_917 -> m2_918  [key=0, style=solid];
m2_917 -> m2_17  [key=2, style=dotted];
m2_918 -> m2_919  [key=0, style=solid];
m2_918 -> m2_17  [key=2, style=dotted];
m2_919 -> m2_920  [key=0, style=solid];
m2_919 -> m2_15  [key=2, style=dotted];
m2_919 -> m2_16  [key=2, style=dotted];
m2_920 -> m2_921  [key=0, style=solid];
m2_920 -> m2_17  [key=2, style=dotted];
m2_921 -> m2_922  [key=0, style=solid];
m2_921 -> m2_17  [key=2, style=dotted];
m2_922 -> m2_923  [key=0, style=solid];
m2_922 -> m2_15  [key=2, style=dotted];
m2_922 -> m2_16  [key=2, style=dotted];
m2_923 -> m2_924  [key=0, style=solid];
m2_923 -> m2_17  [key=2, style=dotted];
m2_924 -> m2_925  [key=0, style=solid];
m2_924 -> m2_17  [key=2, style=dotted];
m2_925 -> m2_926  [key=0, style=solid];
m2_925 -> m2_15  [key=2, style=dotted];
m2_925 -> m2_16  [key=2, style=dotted];
m2_926 -> m2_927  [key=0, style=solid];
m2_926 -> m2_17  [key=2, style=dotted];
m2_927 -> m2_928  [key=0, style=solid];
m2_927 -> m2_15  [key=2, style=dotted];
m2_927 -> m2_131  [key=2, style=dotted];
m2_928 -> m2_911  [key=0, style=bold, color=blue];
m2_1313 -> m2_1314  [key=0, style=solid];
m2_1314 -> m2_1315  [key=0, style=solid];
m2_1314 -> m2_1314  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1315 -> m2_1316  [key=0, style=solid];
m2_1315 -> m2_13  [key=2, style=dotted];
m2_1315 -> m2_14  [key=2, style=dotted];
m2_1315 -> m2_1317  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1315 -> m2_1318  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1315 -> m2_1319  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1315 -> m2_1320  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1316 -> m2_1317  [key=0, style=solid];
m2_1316 -> m2_15  [key=2, style=dotted];
m2_1316 -> m2_16  [key=2, style=dotted];
m2_1317 -> m2_1318  [key=0, style=solid];
m2_1317 -> m2_17  [key=2, style=dotted];
m2_1318 -> m2_1319  [key=0, style=solid];
m2_1318 -> m2_17  [key=2, style=dotted];
m2_1319 -> m2_1320  [key=0, style=solid];
m2_1319 -> m2_15  [key=2, style=dotted];
m2_1319 -> m2_16  [key=2, style=dotted];
m2_1320 -> m2_1321  [key=0, style=solid];
m2_1320 -> m2_17  [key=2, style=dotted];
m2_1321 -> m2_1313  [key=0, style=bold, color=blue];
m2_634 -> m2_635  [key=0, style=solid];
m2_635 -> m2_636  [key=0, style=solid];
m2_635 -> m2_536  [key=3, color=darkorchid, style=bold, label="Local variable string helloWorld"];
m2_636 -> m2_637  [key=0, style=solid];
m2_636 -> m2_115  [key=2, style=dotted];
m2_636 -> m2_645  [key=1, style=dashed, color=darkseagreen4, label=helloWorldData];
m2_637 -> m2_638  [key=0, style=solid];
m2_637 -> m2_13  [key=2, style=dotted];
m2_637 -> m2_14  [key=2, style=dotted];
m2_637 -> m2_541  [key=2, style=dotted];
m2_637 -> m2_639  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_637 -> m2_640  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_637 -> m2_641  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_637 -> m2_642  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_637 -> m2_643  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_637 -> m2_644  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_637 -> m2_646  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_637 -> m2_647  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_637 -> m2_648  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_637 -> m2_649  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_645 -> m2_646  [key=0, style=solid];
m2_645 -> m2_633  [key=2, style=dotted];
m2_638 -> m2_639  [key=0, style=solid];
m2_638 -> m2_138  [key=2, style=dotted];
m2_638 -> m2_16  [key=2, style=dotted];
m2_639 -> m2_640  [key=0, style=solid];
m2_639 -> m2_17  [key=2, style=dotted];
m2_640 -> m2_641  [key=0, style=solid];
m2_640 -> m2_138  [key=2, style=dotted];
m2_640 -> m2_16  [key=2, style=dotted];
m2_641 -> m2_642  [key=0, style=solid];
m2_641 -> m2_138  [key=2, style=dotted];
m2_641 -> m2_16  [key=2, style=dotted];
m2_642 -> m2_643  [key=0, style=solid];
m2_642 -> m2_17  [key=2, style=dotted];
m2_643 -> m2_644  [key=0, style=solid];
m2_643 -> m2_138  [key=2, style=dotted];
m2_643 -> m2_16  [key=2, style=dotted];
m2_644 -> m2_645  [key=0, style=solid];
m2_644 -> m2_534  [key=2, style=dotted];
m2_646 -> m2_647  [key=0, style=solid];
m2_646 -> m2_17  [key=2, style=dotted];
m2_647 -> m2_648  [key=0, style=solid];
m2_647 -> m2_138  [key=2, style=dotted];
m2_647 -> m2_16  [key=2, style=dotted];
m2_648 -> m2_649  [key=0, style=solid];
m2_648 -> m2_17  [key=2, style=dotted];
m2_649 -> m2_650  [key=0, style=solid];
m2_649 -> m2_138  [key=2, style=dotted];
m2_649 -> m2_131  [key=2, style=dotted];
m2_650 -> m2_634  [key=0, style=bold, color=blue];
m2_484 -> m2_485  [key=0, style=solid];
m2_485 -> m2_486  [key=0, style=solid];
m2_485 -> m2_481  [key=2, style=dotted];
m2_485 -> m2_491  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_486 -> m2_487  [key=0, style=solid];
m2_486 -> m2_13  [key=2, style=dotted];
m2_486 -> m2_482  [key=2, style=dotted];
m2_486 -> m2_483  [key=2, style=dotted];
m2_486 -> m2_488  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_491 -> m2_492  [key=0, style=solid];
m2_487 -> m2_488  [key=0, style=solid];
m2_487 -> m2_15  [key=2, style=dotted];
m2_488 -> m2_489  [key=0, style=solid];
m2_488 -> m2_17  [key=2, style=dotted];
m2_489 -> m2_490  [key=0, style=solid];
m2_489 -> m2_491  [key=1, style=dashed, color=darkseagreen4, label=j];
m2_489 -> m2_495  [key=1, style=dashed, color=darkseagreen4, label=j];
m2_489 -> m2_440  [key=3, color=darkorchid, style=bold, label="Local variable int j"];
m2_490 -> m2_491  [key=0, style=solid];
m2_490 -> m2_496  [key=0, style=solid];
m2_495 -> m2_490  [key=0, style=solid];
m2_495 -> m2_495  [key=1, style=dashed, color=darkseagreen4, label=j];
m2_492 -> m2_493  [key=0, style=solid];
m2_492 -> m2_13  [key=2, style=dotted];
m2_492 -> m2_482  [key=2, style=dotted];
m2_492 -> m2_483  [key=2, style=dotted];
m2_492 -> m2_494  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_493 -> m2_494  [key=0, style=solid];
m2_493 -> m2_15  [key=2, style=dotted];
m2_494 -> m2_495  [key=0, style=solid];
m2_494 -> m2_17  [key=2, style=dotted];
m2_496 -> m2_484  [key=0, style=bold, color=blue];
m2_985 -> m2_986  [key=0, style=solid];
m2_986 -> m2_987  [key=0, style=solid];
m2_986 -> m2_13  [key=2, style=dotted];
m2_986 -> m2_14  [key=2, style=dotted];
m2_986 -> m2_988  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_987 -> m2_988  [key=0, style=solid];
m2_987 -> m2_908  [key=2, style=dotted];
m2_987 -> m2_551  [key=2, style=dotted];
m2_988 -> m2_989  [key=0, style=solid];
m2_988 -> m2_17  [key=2, style=dotted];
m2_989 -> m2_985  [key=0, style=bold, color=blue];
m2_1322 -> m2_1323  [key=0, style=solid];
m2_1323 -> m2_1324  [key=0, style=solid];
m2_1323 -> m2_1323  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1324 -> m2_1325  [key=0, style=solid];
m2_1324 -> m2_13  [key=2, style=dotted];
m2_1324 -> m2_14  [key=2, style=dotted];
m2_1324 -> m2_1326  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1324 -> m2_1327  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1324 -> m2_1328  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1324 -> m2_1329  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1324 -> m2_1330  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1324 -> m2_1331  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1324 -> m2_1332  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1324 -> m2_1333  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1324 -> m2_1334  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1324 -> m2_1335  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1324 -> m2_1336  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1324 -> m2_1337  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1324 -> m2_1338  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1325 -> m2_1326  [key=0, style=solid];
m2_1325 -> m2_15  [key=2, style=dotted];
m2_1325 -> m2_16  [key=2, style=dotted];
m2_1326 -> m2_1327  [key=0, style=solid];
m2_1326 -> m2_17  [key=2, style=dotted];
m2_1327 -> m2_1328  [key=0, style=solid];
m2_1327 -> m2_15  [key=2, style=dotted];
m2_1327 -> m2_16  [key=2, style=dotted];
m2_1328 -> m2_1329  [key=0, style=solid];
m2_1328 -> m2_17  [key=2, style=dotted];
m2_1329 -> m2_1330  [key=0, style=solid];
m2_1329 -> m2_15  [key=2, style=dotted];
m2_1329 -> m2_16  [key=2, style=dotted];
m2_1330 -> m2_1331  [key=0, style=solid];
m2_1330 -> m2_17  [key=2, style=dotted];
m2_1331 -> m2_1332  [key=0, style=solid];
m2_1331 -> m2_15  [key=2, style=dotted];
m2_1331 -> m2_16  [key=2, style=dotted];
m2_1332 -> m2_1333  [key=0, style=solid];
m2_1332 -> m2_17  [key=2, style=dotted];
m2_1333 -> m2_1334  [key=0, style=solid];
m2_1333 -> m2_15  [key=2, style=dotted];
m2_1333 -> m2_16  [key=2, style=dotted];
m2_1334 -> m2_1335  [key=0, style=solid];
m2_1334 -> m2_17  [key=2, style=dotted];
m2_1335 -> m2_1336  [key=0, style=solid];
m2_1335 -> m2_15  [key=2, style=dotted];
m2_1335 -> m2_16  [key=2, style=dotted];
m2_1336 -> m2_1337  [key=0, style=solid];
m2_1336 -> m2_17  [key=2, style=dotted];
m2_1337 -> m2_1338  [key=0, style=solid];
m2_1337 -> m2_15  [key=2, style=dotted];
m2_1337 -> m2_16  [key=2, style=dotted];
m2_1338 -> m2_1339  [key=0, style=solid];
m2_1338 -> m2_17  [key=2, style=dotted];
m2_1339 -> m2_1322  [key=0, style=bold, color=blue];
m2_1161 -> m2_1162  [key=0, style=solid];
m2_1162 -> m2_1163  [key=0, style=solid];
m2_1162 -> m2_1162  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1163 -> m2_1164  [key=0, style=solid];
m2_1163 -> m2_13  [key=2, style=dotted];
m2_1163 -> m2_14  [key=2, style=dotted];
m2_1163 -> m2_1165  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1163 -> m2_1166  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1163 -> m2_1167  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1163 -> m2_1168  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1163 -> m2_1169  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1163 -> m2_1170  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1163 -> m2_1171  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1163 -> m2_1172  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1163 -> m2_1174  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1163 -> m2_1175  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1164 -> m2_1165  [key=0, style=solid];
m2_1164 -> m2_1177  [key=2, style=dotted];
m2_1165 -> m2_1166  [key=0, style=solid];
m2_1165 -> m2_15  [key=2, style=dotted];
m2_1165 -> m2_16  [key=2, style=dotted];
m2_1166 -> m2_1167  [key=0, style=solid];
m2_1166 -> m2_17  [key=2, style=dotted];
m2_1167 -> m2_1168  [key=0, style=solid];
m2_1167 -> m2_15  [key=2, style=dotted];
m2_1167 -> m2_16  [key=2, style=dotted];
m2_1168 -> m2_1169  [key=0, style=solid];
m2_1168 -> m2_17  [key=2, style=dotted];
m2_1169 -> m2_1170  [key=0, style=solid];
m2_1169 -> m2_1002  [key=2, style=dotted];
m2_1170 -> m2_1171  [key=0, style=solid];
m2_1170 -> m2_17  [key=2, style=dotted];
m2_1171 -> m2_1172  [key=0, style=solid];
m2_1171 -> m2_17  [key=2, style=dotted];
m2_1172 -> m2_1173  [key=0, style=solid];
m2_1174 -> m2_1175  [key=0, style=solid];
m2_1174 -> m2_15  [key=2, style=dotted];
m2_1174 -> m2_16  [key=2, style=dotted];
m2_1175 -> m2_1176  [key=0, style=solid];
m2_1175 -> m2_17  [key=2, style=dotted];
m2_1173 -> m2_1174  [key=0, style=solid];
m2_1173 -> m2_1160  [key=2, style=dotted];
m2_1173 -> m2_17  [key=2, style=dotted];
m2_1173 -> m2_1173  [key=1, style=dashed, color=darkseagreen4, label=dt];
m2_1176 -> m2_1161  [key=0, style=bold, color=blue];
m2_1804 -> m2_1805  [key=0, style=solid];
m2_1805 -> m2_1804  [key=0, style=bold, color=blue];
m2_1010 -> m2_1011  [key=0, style=solid];
m2_1011 -> m2_1012  [key=0, style=solid];
m2_1011 -> m2_13  [key=2, style=dotted];
m2_1011 -> m2_14  [key=2, style=dotted];
m2_1011 -> m2_1015  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1012 -> m2_1013  [key=0, style=solid];
m2_1012 -> m2_18  [key=2, style=dotted];
m2_1012 -> m2_1014  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1013 -> m2_1010  [key=0, style=bold, color=blue];
m2_1090 -> m2_1091  [key=0, style=solid];
m2_1091 -> m2_1092  [key=0, style=solid];
m2_1091 -> m2_1091  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1092 -> m2_1093  [key=0, style=solid];
m2_1092 -> m2_13  [key=2, style=dotted];
m2_1092 -> m2_14  [key=2, style=dotted];
m2_1092 -> m2_1094  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1092 -> m2_1095  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1092 -> m2_1096  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1092 -> m2_1097  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1092 -> m2_1098  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1092 -> m2_1099  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1092 -> m2_1100  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1092 -> m2_1101  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1092 -> m2_1102  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1093 -> m2_1094  [key=0, style=solid];
m2_1093 -> m2_15  [key=2, style=dotted];
m2_1093 -> m2_16  [key=2, style=dotted];
m2_1094 -> m2_1095  [key=0, style=solid];
m2_1094 -> m2_17  [key=2, style=dotted];
m2_1095 -> m2_1096  [key=0, style=solid];
m2_1095 -> m2_15  [key=2, style=dotted];
m2_1095 -> m2_16  [key=2, style=dotted];
m2_1096 -> m2_1097  [key=0, style=solid];
m2_1096 -> m2_17  [key=2, style=dotted];
m2_1097 -> m2_1098  [key=0, style=solid];
m2_1097 -> m2_1002  [key=2, style=dotted];
m2_1098 -> m2_1099  [key=0, style=solid];
m2_1098 -> m2_17  [key=2, style=dotted];
m2_1099 -> m2_1100  [key=0, style=solid];
m2_1099 -> m2_17  [key=2, style=dotted];
m2_1100 -> m2_1101  [key=0, style=solid];
m2_1100 -> m2_1087  [key=2, style=dotted];
m2_1100 -> m2_1088  [key=2, style=dotted];
m2_1100 -> m2_1089  [key=2, style=dotted];
m2_1100 -> m2_17  [key=2, style=dotted];
m2_1101 -> m2_1102  [key=0, style=solid];
m2_1101 -> m2_15  [key=2, style=dotted];
m2_1101 -> m2_16  [key=2, style=dotted];
m2_1102 -> m2_1103  [key=0, style=solid];
m2_1102 -> m2_17  [key=2, style=dotted];
m2_1103 -> m2_1090  [key=0, style=bold, color=blue];
m2_1218 -> m2_1219  [key=0, style=solid];
m2_1219 -> m2_1220  [key=0, style=solid];
m2_1219 -> m2_13  [key=2, style=dotted];
m2_1219 -> m2_14  [key=2, style=dotted];
m2_1219 -> m2_1223  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1220 -> m2_1221  [key=0, style=solid];
m2_1220 -> m2_18  [key=2, style=dotted];
m2_1220 -> m2_1222  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1221 -> m2_1218  [key=0, style=bold, color=blue];
m2_1045 -> m2_1046  [key=0, style=solid];
m2_1046 -> m2_1047  [key=0, style=solid];
m2_1046 -> m2_1046  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1047 -> m2_1048  [key=0, style=solid];
m2_1047 -> m2_13  [key=2, style=dotted];
m2_1047 -> m2_14  [key=2, style=dotted];
m2_1047 -> m2_1049  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1047 -> m2_1050  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1047 -> m2_1051  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1047 -> m2_1052  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1047 -> m2_1053  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1047 -> m2_1054  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1047 -> m2_1055  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1047 -> m2_1056  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1047 -> m2_1057  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1047 -> m2_1058  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1048 -> m2_1049  [key=0, style=solid];
m2_1048 -> m2_15  [key=2, style=dotted];
m2_1048 -> m2_16  [key=2, style=dotted];
m2_1049 -> m2_1050  [key=0, style=solid];
m2_1049 -> m2_17  [key=2, style=dotted];
m2_1050 -> m2_1051  [key=0, style=solid];
m2_1050 -> m2_15  [key=2, style=dotted];
m2_1050 -> m2_16  [key=2, style=dotted];
m2_1051 -> m2_1052  [key=0, style=solid];
m2_1051 -> m2_17  [key=2, style=dotted];
m2_1052 -> m2_1053  [key=0, style=solid];
m2_1052 -> m2_17  [key=2, style=dotted];
m2_1053 -> m2_1054  [key=0, style=solid];
m2_1053 -> m2_15  [key=2, style=dotted];
m2_1053 -> m2_16  [key=2, style=dotted];
m2_1054 -> m2_1055  [key=0, style=solid];
m2_1054 -> m2_17  [key=2, style=dotted];
m2_1055 -> m2_1056  [key=0, style=solid];
m2_1055 -> m2_17  [key=2, style=dotted];
m2_1056 -> m2_1057  [key=0, style=solid];
m2_1056 -> m2_15  [key=2, style=dotted];
m2_1056 -> m2_16  [key=2, style=dotted];
m2_1057 -> m2_1058  [key=0, style=solid];
m2_1057 -> m2_17  [key=2, style=dotted];
m2_1058 -> m2_1059  [key=0, style=solid];
m2_1058 -> m2_15  [key=2, style=dotted];
m2_1058 -> m2_131  [key=2, style=dotted];
m2_1059 -> m2_1045  [key=0, style=bold, color=blue];
m2_1826 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1827 -> m2_57  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1828 -> m2_94  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m2_1828 -> m2_95  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m2_1828 -> m2_96  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m2_1828 -> m2_97  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m2_1828 -> m2_98  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m2_1828 -> m2_99  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m2_1828 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m2_1828 -> m2_101  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m2_1828 -> m2_102  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m2_1828 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m2_1828 -> m2_104  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m2_1828 -> m2_105  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m2_1829 -> m2_165  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1830 -> m2_183  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1831 -> m2_196  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1832 -> m2_358  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1833 -> m2_448  [key=1, style=dashed, color=darkseagreen4, label=total];
m2_1834 -> m2_465  [key=1, style=dashed, color=darkseagreen4, label=total];
m2_1835 -> m2_518  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1836 -> m2_525  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1837 -> m2_532  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1838 -> m2_543  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1839 -> m2_558  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1840 -> m2_711  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1840 -> m2_714  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1840 -> m2_717  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1840 -> m2_720  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1840 -> m2_723  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1841 -> m2_898  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1842 -> m2_977  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1843 -> m2_995  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1844 -> m2_1008  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1845 -> m2_1015  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1846 -> m2_1022  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1847 -> m2_1036  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1848 -> m2_1043  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1849 -> m2_1114  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1850 -> m2_1216  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1851 -> m2_1223  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1852 -> m2_1230  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1853 -> m2_1237  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1854 -> m2_1244  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1855 -> m2_1251  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1856 -> m2_1384  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1857 -> m2_1392  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1858 -> m2_1423  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1859 -> m2_1440  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1860 -> m2_1541  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1861 -> m2_1597  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1862 -> m2_1629  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1862 -> m2_1632  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_1863 -> m2_1754  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m2_1863 -> m2_1757  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m2_1863 -> m2_1760  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m2_1863 -> m2_1763  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m2_1863 -> m2_1766  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m2_1863 -> m2_1769  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m2_1864 -> m2_1789  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.ToggleReaderError"];
m2_1864 -> m2_1792  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.ToggleReaderError"];
m2_1864 -> m2_1794  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.ToggleReaderError"];
m2_1865 -> m2_1799  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.SlowStream"];
m2_1865 -> m2_1800  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.SlowStream"];
m2_1865 -> m2_1801  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.SlowStream"];
m2_1865 -> m2_1807  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.SlowStream"];
m2_1865 -> m2_1808  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.SlowStream"];
m2_1865 -> m2_1810  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.SlowStream"];
m2_1865 -> m2_1811  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.SlowStream"];
m3_125 -> m3_126  [key=0, style=solid];
m3_126 -> m3_127  [key=0, style=solid];
m3_126 -> m3_128  [key=2, style=dotted];
m3_126 -> m3_129  [key=2, style=dotted];
m3_126 -> m3_126  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m3_127 -> m3_125  [key=0, style=bold, color=blue];
m3_358 -> m3_359  [key=0, style=solid];
m3_358 -> m3_360  [key=1, style=dashed, color=darkseagreen4, label=XObject];
m3_359 -> m3_360  [key=0, style=solid];
m3_359 -> m3_334  [key=2, style=dotted];
m3_360 -> m3_361  [key=0, style=solid];
m3_360 -> m3_335  [key=2, style=dotted];
m3_361 -> m3_358  [key=0, style=bold, color=blue];
m3_254 -> m3_255  [key=0, style=solid];
m3_255 -> m3_256  [key=0, style=solid];
m3_255 -> m3_250  [key=2, style=dotted];
m3_256 -> m3_254  [key=0, style=bold, color=blue];
m3_30 -> m3_31  [key=0, style=solid];
m3_31 -> m3_32  [key=0, style=solid];
m3_31 -> m3_33  [key=2, style=dotted];
m3_31 -> m3_34  [key=2, style=dotted];
m3_32 -> m3_30  [key=0, style=bold, color=blue];
m3_352 -> m3_353  [key=0, style=solid];
m3_353 -> m3_354  [key=0, style=solid];
m3_353 -> m3_355  [key=2, style=dotted];
m3_354 -> m3_352  [key=0, style=bold, color=blue];
m3_365 -> m3_366  [key=0, style=solid];
m3_366 -> m3_367  [key=0, style=solid];
m3_366 -> m3_368  [key=2, style=dotted];
m3_367 -> m3_365  [key=0, style=bold, color=blue];
m3_72 -> m3_73  [key=0, style=solid];
m3_73 -> m3_74  [key=0, style=solid];
m3_73 -> m3_70  [key=2, style=dotted];
m3_73 -> m3_71  [key=2, style=dotted];
m3_73 -> m3_75  [key=2, style=dotted];
m3_74 -> m3_72  [key=0, style=bold, color=blue];
m3_51 -> m3_52  [key=0, style=solid];
m3_52 -> m3_53  [key=0, style=solid];
m3_52 -> m3_54  [key=2, style=dotted];
m3_53 -> m3_51  [key=0, style=bold, color=blue];
m3_88 -> m3_89  [key=0, style=solid];
m3_89 -> m3_90  [key=0, style=solid];
m3_89 -> m3_87  [key=2, style=dotted];
m3_89 -> m3_71  [key=2, style=dotted];
m3_89 -> m3_75  [key=2, style=dotted];
m3_90 -> m3_88  [key=0, style=bold, color=blue];
m3_210 -> m3_211  [key=0, style=solid];
m3_210 -> m3_212  [key=1, style=dashed, color=darkseagreen4, label=object];
m3_211 -> m3_212  [key=0, style=solid];
m3_211 -> m3_214  [key=2, style=dotted];
m3_212 -> m3_213  [key=0, style=solid];
m3_212 -> m3_203  [key=2, style=dotted];
m3_213 -> m3_210  [key=0, style=bold, color=blue];
m3_34 -> m3_139  [key=0, style=solid];
m3_139 -> m3_140  [key=0, style=solid];
m3_139 -> m3_129  [key=2, style=dotted];
m3_140 -> m3_34  [key=0, style=bold, color=blue];
m3_101 -> m3_102  [key=0, style=solid];
m3_102 -> m3_103  [key=0, style=solid];
m3_102 -> m3_104  [key=2, style=dotted];
m3_103 -> m3_101  [key=0, style=bold, color=blue];
m3_129 -> m3_141  [key=0, style=solid];
m3_129 -> m3_143  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_141 -> m3_142  [key=0, style=solid];
m3_141 -> m3_143  [key=0, style=solid];
m3_143 -> m3_144  [key=0, style=solid];
m3_143 -> m3_146  [key=2, style=dotted];
m3_142 -> m3_144  [key=0, style=solid];
m3_142 -> m3_145  [key=2, style=dotted];
m3_144 -> m3_129  [key=0, style=bold, color=blue];
m3_340 -> m3_341  [key=0, style=solid];
m3_341 -> m3_342  [key=0, style=solid];
m3_341 -> m3_343  [key=2, style=dotted];
m3_342 -> m3_340  [key=0, style=bold, color=blue];
m3_16 -> m3_17  [key=0, style=solid];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_19  [key=2, style=dotted];
m3_18 -> m3_16  [key=0, style=bold, color=blue];
m3_75 -> m3_76  [key=0, style=solid];
m3_75 -> m3_77  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_75 -> m3_78  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.FloatFormatHandling"];
m3_75 -> m3_79  [key=1, style=dashed, color=darkseagreen4, label=bool];
m3_75 -> m3_80  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_76 -> m3_77  [key=0, style=solid];
m3_76 -> m3_78  [key=0, style=solid];
m3_76 -> m3_82  [key=2, style=dotted];
m3_76 -> m3_83  [key=2, style=dotted];
m3_77 -> m3_81  [key=0, style=solid];
m3_78 -> m3_79  [key=0, style=solid];
m3_78 -> m3_80  [key=0, style=solid];
m3_79 -> m3_81  [key=0, style=solid];
m3_80 -> m3_81  [key=0, style=solid];
m3_81 -> m3_75  [key=0, style=bold, color=blue];
m3_238 -> m3_239  [key=0, style=solid];
m3_239 -> m3_240  [key=0, style=solid];
m3_239 -> m3_237  [key=2, style=dotted];
m3_240 -> m3_238  [key=0, style=bold, color=blue];
m3_261 -> m3_262  [key=0, style=solid];
m3_262 -> m3_263  [key=0, style=solid];
m3_262 -> m3_257  [key=2, style=dotted];
m3_263 -> m3_261  [key=0, style=bold, color=blue];
m3_270 -> m3_273  [key=0, style=solid];
m3_270 -> m3_274  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_273 -> m3_274  [key=0, style=solid];
m3_273 -> m3_214  [key=2, style=dotted];
m3_274 -> m3_275  [key=0, style=solid];
m3_274 -> m3_250  [key=2, style=dotted];
m3_275 -> m3_270  [key=0, style=bold, color=blue];
m3_237 -> m3_241  [key=0, style=solid];
m3_237 -> m3_245  [key=1, style=dashed, color=darkseagreen4, label=object];
m3_241 -> m3_242  [key=0, style=solid];
m3_241 -> m3_243  [key=2, style=dotted];
m3_241 -> m3_244  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_242 -> m3_237  [key=0, style=bold, color=blue];
m3_109 -> m3_110  [key=0, style=solid];
m3_110 -> m3_111  [key=0, style=solid];
m3_110 -> m3_112  [key=2, style=dotted];
m3_110 -> m3_96  [key=2, style=dotted];
m3_111 -> m3_109  [key=0, style=bold, color=blue];
m3_35 -> m3_36  [key=0, style=solid];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> m3_38  [key=2, style=dotted];
m3_37 -> m3_35  [key=0, style=bold, color=blue];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.DateFormatHandling"];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_11  [key=2, style=dotted];
m3_4 -> m3_7  [key=1, style=dashed, color=darkseagreen4, label=updatedDateTime];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_14  [key=2, style=dotted];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_12  [key=2, style=dotted];
m3_5 -> m3_7  [key=1, style=dashed, color=darkseagreen4, label=writer];
m3_5 -> m3_8  [key=1, style=dashed, color=darkseagreen4, label=writer];
m3_5 -> m3_9  [key=1, style=dashed, color=darkseagreen4, label=writer];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_13  [key=2, style=dotted];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_13  [key=2, style=dotted];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_15  [key=2, style=dotted];
m3_10 -> m3_3  [key=0, style=bold, color=blue];
m3_247 -> m3_248  [key=0, style=solid];
m3_248 -> m3_249  [key=0, style=solid];
m3_248 -> m3_250  [key=2, style=dotted];
m3_249 -> m3_247  [key=0, style=bold, color=blue];
m3_267 -> m3_268  [key=0, style=solid];
m3_268 -> m3_269  [key=0, style=solid];
m3_268 -> m3_270  [key=2, style=dotted];
m3_269 -> m3_267  [key=0, style=bold, color=blue];
m3_320 -> m3_321  [key=0, style=solid];
m3_320 -> m3_325  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_321 -> m3_322  [key=0, style=solid];
m3_321 -> m3_323  [key=2, style=dotted];
m3_321 -> m3_324  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_322 -> m3_320  [key=0, style=bold, color=blue];
m3_55 -> m3_56  [key=0, style=solid];
m3_56 -> m3_57  [key=0, style=solid];
m3_56 -> m3_58  [key=2, style=dotted];
m3_57 -> m3_55  [key=0, style=bold, color=blue];
m3_113 -> m3_114  [key=0, style=solid];
m3_114 -> m3_115  [key=0, style=solid];
m3_114 -> m3_116  [key=2, style=dotted];
m3_115 -> m3_113  [key=0, style=bold, color=blue];
m3_309 -> m3_310  [key=0, style=solid];
m3_309 -> m3_311  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m3_309 -> m3_313  [key=1, style=dashed, color=darkseagreen4, label=object];
m3_310 -> m3_311  [key=0, style=solid];
m3_310 -> m3_284  [key=2, style=dotted];
m3_310 -> m3_312  [key=1, style=dashed, color=darkseagreen4, label=sr];
m3_311 -> m3_312  [key=0, style=solid];
m3_311 -> m3_229  [key=2, style=dotted];
m3_311 -> m3_313  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m3_313 -> m3_314  [key=0, style=solid];
m3_313 -> m3_317  [key=2, style=dotted];
m3_312 -> m3_313  [key=0, style=solid];
m3_312 -> m3_286  [key=2, style=dotted];
m3_312 -> m3_314  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_314 -> m3_315  [key=0, style=solid];
m3_314 -> m3_316  [key=0, style=solid];
m3_314 -> m3_318  [key=2, style=dotted];
m3_315 -> m3_316  [key=0, style=solid];
m3_315 -> m3_319  [key=2, style=dotted];
m3_316 -> m3_309  [key=0, style=bold, color=blue];
m3_362 -> m3_363  [key=0, style=solid];
m3_363 -> m3_364  [key=0, style=solid];
m3_363 -> m3_365  [key=2, style=dotted];
m3_364 -> m3_362  [key=0, style=bold, color=blue];
m3_251 -> m3_252  [key=0, style=solid];
m3_252 -> m3_253  [key=0, style=solid];
m3_252 -> m3_250  [key=2, style=dotted];
m3_253 -> m3_251  [key=0, style=bold, color=blue];
m3_355 -> m3_356  [key=0, style=solid];
m3_356 -> m3_357  [key=0, style=solid];
m3_356 -> m3_358  [key=2, style=dotted];
m3_357 -> m3_355  [key=0, style=bold, color=blue];
m3_250 -> m3_276  [key=0, style=solid];
m3_250 -> m3_277  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_250 -> m3_278  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m3_250 -> m3_281  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m3_276 -> m3_277  [key=0, style=solid];
m3_276 -> m3_283  [key=2, style=dotted];
m3_277 -> m3_278  [key=0, style=solid];
m3_277 -> m3_284  [key=2, style=dotted];
m3_277 -> m3_281  [key=1, style=dashed, color=darkseagreen4, label=sr];
m3_278 -> m3_279  [key=0, style=solid];
m3_278 -> m3_229  [key=2, style=dotted];
m3_278 -> m3_280  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m3_278 -> m3_281  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m3_281 -> m3_282  [key=0, style=solid];
m3_281 -> m3_286  [key=2, style=dotted];
m3_281 -> m3_287  [key=2, style=dotted];
m3_279 -> m3_280  [key=0, style=solid];
m3_279 -> m3_281  [key=0, style=solid];
m3_279 -> m3_285  [key=2, style=dotted];
m3_280 -> m3_281  [key=0, style=solid];
m3_282 -> m3_250  [key=0, style=bold, color=blue];
m3_147 -> m3_148  [key=0, style=solid];
m3_147 -> m3_150  [key=1, style=dashed, color=darkseagreen4, label=object];
m3_147 -> m3_153  [key=1, style=dashed, color=darkseagreen4, label=object];
m3_147 -> m3_155  [key=1, style=dashed, color=darkseagreen4, label=object];
m3_147 -> m3_157  [key=1, style=dashed, color=darkseagreen4, label=object];
m3_147 -> m3_159  [key=1, style=dashed, color=darkseagreen4, label=object];
m3_147 -> m3_161  [key=1, style=dashed, color=darkseagreen4, label=object];
m3_147 -> m3_163  [key=1, style=dashed, color=darkseagreen4, label=object];
m3_147 -> m3_165  [key=1, style=dashed, color=darkseagreen4, label=object];
m3_147 -> m3_167  [key=1, style=dashed, color=darkseagreen4, label=object];
m3_147 -> m3_169  [key=1, style=dashed, color=darkseagreen4, label=object];
m3_147 -> m3_171  [key=1, style=dashed, color=darkseagreen4, label=object];
m3_147 -> m3_173  [key=1, style=dashed, color=darkseagreen4, label=object];
m3_147 -> m3_175  [key=1, style=dashed, color=darkseagreen4, label=object];
m3_147 -> m3_177  [key=1, style=dashed, color=darkseagreen4, label=object];
m3_147 -> m3_179  [key=1, style=dashed, color=darkseagreen4, label=object];
m3_147 -> m3_181  [key=1, style=dashed, color=darkseagreen4, label=object];
m3_147 -> m3_185  [key=1, style=dashed, color=darkseagreen4, label=object];
m3_147 -> m3_187  [key=1, style=dashed, color=darkseagreen4, label=object];
m3_147 -> m3_189  [key=1, style=dashed, color=darkseagreen4, label=object];
m3_147 -> m3_191  [key=1, style=dashed, color=darkseagreen4, label=object];
m3_147 -> m3_193  [key=1, style=dashed, color=darkseagreen4, label=object];
m3_147 -> m3_195  [key=1, style=dashed, color=darkseagreen4, label=object];
m3_148 -> m3_149  [key=0, style=solid];
m3_148 -> m3_150  [key=0, style=solid];
m3_150 -> m3_151  [key=0, style=solid];
m3_150 -> m3_196  [key=2, style=dotted];
m3_153 -> m3_194  [key=0, style=solid];
m3_153 -> m3_34  [key=2, style=dotted];
m3_155 -> m3_194  [key=0, style=solid];
m3_155 -> m3_30  [key=2, style=dotted];
m3_157 -> m3_194  [key=0, style=solid];
m3_157 -> m3_27  [key=2, style=dotted];
m3_159 -> m3_194  [key=0, style=solid];
m3_159 -> m3_105  [key=2, style=dotted];
m3_161 -> m3_194  [key=0, style=solid];
m3_161 -> m3_43  [key=2, style=dotted];
m3_161 -> m3_167  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Schema.JsonSchemaType? ProcessType"];
m3_161 -> m3_184  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Schema.JsonSchemaType? ProcessType"];
m3_163 -> m3_194  [key=0, style=solid];
m3_163 -> m3_47  [key=2, style=dotted];
m3_165 -> m3_194  [key=0, style=solid];
m3_165 -> m3_39  [key=2, style=dotted];
m3_167 -> m3_194  [key=0, style=solid];
m3_167 -> m3_101  [key=2, style=dotted];
m3_169 -> m3_194  [key=0, style=solid];
m3_169 -> m3_51  [key=2, style=dotted];
m3_171 -> m3_194  [key=0, style=solid];
m3_171 -> m3_55  [key=2, style=dotted];
m3_173 -> m3_194  [key=0, style=solid];
m3_173 -> m3_63  [key=2, style=dotted];
m3_175 -> m3_194  [key=0, style=solid];
m3_175 -> m3_67  [key=2, style=dotted];
m3_177 -> m3_194  [key=0, style=solid];
m3_177 -> m3_84  [key=2, style=dotted];
m3_179 -> m3_194  [key=0, style=solid];
m3_179 -> m3_0  [key=2, style=dotted];
m3_181 -> m3_194  [key=0, style=solid];
m3_181 -> m3_109  [key=2, style=dotted];
m3_185 -> m3_194  [key=0, style=solid];
m3_185 -> m3_16  [key=2, style=dotted];
m3_187 -> m3_194  [key=0, style=solid];
m3_187 -> m3_113  [key=2, style=dotted];
m3_189 -> m3_194  [key=0, style=solid];
m3_189 -> m3_130  [key=2, style=dotted];
m3_191 -> m3_194  [key=0, style=solid];
m3_191 -> m3_122  [key=2, style=dotted];
m3_193 -> m3_194  [key=0, style=solid];
m3_193 -> m3_59  [key=2, style=dotted];
m3_195 -> m3_194  [key=0, style=solid];
m3_195 -> m3_197  [key=2, style=dotted];
m3_195 -> n10  [key=2, style=dotted];
m3_195 -> m3_199  [key=2, style=dotted];
m3_149 -> m3_194  [key=0, style=solid];
m3_151 -> m3_152  [key=0, style=solid];
m3_151 -> m3_154  [key=0, style=solid];
m3_151 -> m3_156  [key=0, style=solid];
m3_151 -> m3_158  [key=0, style=solid];
m3_151 -> m3_160  [key=0, style=solid];
m3_151 -> m3_162  [key=0, style=solid];
m3_151 -> m3_164  [key=0, style=solid];
m3_151 -> m3_166  [key=0, style=solid];
m3_151 -> m3_168  [key=0, style=solid];
m3_151 -> m3_170  [key=0, style=solid];
m3_151 -> m3_172  [key=0, style=solid];
m3_151 -> m3_174  [key=0, style=solid];
m3_151 -> m3_176  [key=0, style=solid];
m3_151 -> m3_178  [key=0, style=solid];
m3_151 -> m3_180  [key=0, style=solid];
m3_151 -> m3_182  [key=0, style=solid];
m3_151 -> m3_184  [key=0, style=solid];
m3_151 -> m3_186  [key=0, style=solid];
m3_151 -> m3_188  [key=0, style=solid];
m3_151 -> m3_190  [key=0, style=solid];
m3_151 -> m3_192  [key=0, style=solid];
m3_152 -> m3_153  [key=0, style=solid];
m3_154 -> m3_155  [key=0, style=solid];
m3_156 -> m3_157  [key=0, style=solid];
m3_158 -> m3_159  [key=0, style=solid];
m3_160 -> m3_161  [key=0, style=solid];
m3_162 -> m3_163  [key=0, style=solid];
m3_164 -> m3_165  [key=0, style=solid];
m3_166 -> m3_167  [key=0, style=solid];
m3_168 -> m3_169  [key=0, style=solid];
m3_170 -> m3_171  [key=0, style=solid];
m3_172 -> m3_173  [key=0, style=solid];
m3_174 -> m3_175  [key=0, style=solid];
m3_176 -> m3_177  [key=0, style=solid];
m3_178 -> m3_179  [key=0, style=solid];
m3_180 -> m3_181  [key=0, style=solid];
m3_182 -> m3_183  [key=0, style=solid];
m3_184 -> m3_185  [key=0, style=solid];
m3_184 -> m3_169  [key=3, color=darkorchid, style=bold, label="Parameter variable string type"];
m3_184 -> m3_161  [key=3, color=darkorchid, style=bold, label="Parameter variable string type"];
m3_186 -> m3_187  [key=0, style=solid];
m3_188 -> m3_189  [key=0, style=solid];
m3_190 -> m3_191  [key=0, style=solid];
m3_192 -> m3_193  [key=0, style=solid];
m3_183 -> m3_194  [key=0, style=solid];
m3_194 -> m3_147  [key=0, style=bold, color=blue];
m3_306 -> m3_307  [key=0, style=solid];
m3_307 -> m3_308  [key=0, style=solid];
m3_307 -> m3_309  [key=2, style=dotted];
m3_308 -> m3_306  [key=0, style=bold, color=blue];
m3_336 -> m3_337  [key=0, style=solid];
m3_336 -> m3_338  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m3_337 -> m3_338  [key=0, style=solid];
m3_337 -> m3_334  [key=2, style=dotted];
m3_338 -> m3_339  [key=0, style=solid];
m3_338 -> m3_335  [key=2, style=dotted];
m3_339 -> m3_336  [key=0, style=bold, color=blue];
m3_63 -> m3_64  [key=0, style=solid];
m3_64 -> m3_65  [key=0, style=solid];
m3_64 -> m3_66  [key=2, style=dotted];
m3_65 -> m3_63  [key=0, style=bold, color=blue];
m3_116 -> m3_117  [key=0, style=solid];
m3_116 -> m3_118  [key=1, style=dashed, color=darkseagreen4, label="System.Guid"];
m3_116 -> m3_119  [key=1, style=dashed, color=darkseagreen4, label=char];
m3_117 -> m3_118  [key=0, style=solid];
m3_118 -> m3_119  [key=0, style=solid];
m3_118 -> m3_121  [key=2, style=dotted];
m3_118 -> m3_118  [key=1, style=dashed, color=darkseagreen4, label="System.Guid"];
m3_119 -> m3_120  [key=0, style=solid];
m3_120 -> m3_116  [key=0, style=bold, color=blue];
m3_300 -> m3_301  [key=0, style=solid];
m3_300 -> m3_304  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_301 -> m3_302  [key=0, style=solid];
m3_301 -> m3_243  [key=2, style=dotted];
m3_301 -> m3_303  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_302 -> m3_300  [key=0, style=bold, color=blue];
m3_260 -> m3_271  [key=0, style=solid];
m3_271 -> m3_272  [key=0, style=solid];
m3_271 -> m3_250  [key=2, style=dotted];
m3_272 -> m3_260  [key=0, style=bold, color=blue];
m3_368 -> m3_369  [key=0, style=solid];
m3_368 -> m3_370  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_368 -> m3_371  [key=1, style=dashed, color=darkseagreen4, label=bool];
m3_368 -> m3_372  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_369 -> m3_370  [key=0, style=solid];
m3_369 -> m3_334  [key=2, style=dotted];
m3_369 -> m3_371  [key=1, style=dashed, color=darkseagreen4, label=converter];
m3_369 -> m3_372  [key=1, style=dashed, color=darkseagreen4, label=converter];
m3_370 -> m3_371  [key=0, style=solid];
m3_371 -> m3_372  [key=0, style=solid];
m3_372 -> m3_373  [key=0, style=solid];
m3_372 -> m3_270  [key=2, style=dotted];
m3_373 -> m3_368  [key=0, style=bold, color=blue];
m3_215 -> m3_216  [key=0, style=solid];
m3_216 -> m3_217  [key=0, style=solid];
m3_216 -> m3_203  [key=2, style=dotted];
m3_217 -> m3_215  [key=0, style=bold, color=blue];
m3_43 -> m3_44  [key=0, style=solid];
m3_44 -> m3_45  [key=0, style=solid];
m3_44 -> m3_46  [key=2, style=dotted];
m3_45 -> m3_43  [key=0, style=bold, color=blue];
m3_330 -> m3_331  [key=0, style=solid];
m3_330 -> m3_332  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m3_331 -> m3_332  [key=0, style=solid];
m3_331 -> m3_334  [key=2, style=dotted];
m3_332 -> m3_333  [key=0, style=solid];
m3_332 -> m3_335  [key=2, style=dotted];
m3_333 -> m3_330  [key=0, style=bold, color=blue];
m3_203 -> m3_218  [key=0, style=solid];
m3_218 -> m3_219  [key=0, style=solid];
m3_218 -> m3_220  [key=2, style=dotted];
m3_219 -> m3_203  [key=0, style=bold, color=blue];
m3_234 -> m3_235  [key=0, style=solid];
m3_235 -> m3_236  [key=0, style=solid];
m3_235 -> m3_237  [key=2, style=dotted];
m3_236 -> m3_234  [key=0, style=bold, color=blue];
m3_71 -> m3_91  [key=0, style=solid];
m3_71 -> m3_92  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_71 -> m3_93  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_91 -> m3_92  [key=0, style=solid];
m3_91 -> m3_93  [key=0, style=solid];
m3_91 -> m3_83  [key=2, style=dotted];
m3_91 -> m3_82  [key=2, style=dotted];
m3_91 -> m3_95  [key=2, style=dotted];
m3_92 -> m3_94  [key=0, style=solid];
m3_93 -> m3_94  [key=0, style=solid];
m3_94 -> m3_71  [key=0, style=bold, color=blue];
m3_288 -> m3_289  [key=0, style=solid];
m3_289 -> m3_290  [key=0, style=solid];
m3_289 -> m3_291  [key=2, style=dotted];
m3_290 -> m3_288  [key=0, style=bold, color=blue];
m3_135 -> m3_136  [key=0, style=solid];
m3_136 -> m3_137  [key=0, style=solid];
m3_136 -> m3_138  [key=2, style=dotted];
m3_136 -> m3_129  [key=2, style=dotted];
m3_137 -> m3_135  [key=0, style=bold, color=blue];
m3_346 -> m3_347  [key=0, style=solid];
m3_346 -> m3_348  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_346 -> m3_349  [key=1, style=dashed, color=darkseagreen4, label=bool];
m3_346 -> m3_350  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_347 -> m3_348  [key=0, style=solid];
m3_347 -> m3_334  [key=2, style=dotted];
m3_347 -> m3_349  [key=1, style=dashed, color=darkseagreen4, label=converter];
m3_347 -> m3_350  [key=1, style=dashed, color=darkseagreen4, label=converter];
m3_348 -> m3_349  [key=0, style=solid];
m3_349 -> m3_350  [key=0, style=solid];
m3_350 -> m3_351  [key=0, style=solid];
m3_350 -> m3_270  [key=2, style=dotted];
m3_351 -> m3_346  [key=0, style=bold, color=blue];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_22  [key=1, style=dashed, color=darkseagreen4, label="System.DateTimeOffset"];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_12  [key=2, style=dotted];
m3_20 -> m3_22  [key=1, style=dashed, color=darkseagreen4, label=writer];
m3_20 -> m3_23  [key=1, style=dashed, color=darkseagreen4, label=writer];
m3_20 -> m3_24  [key=1, style=dashed, color=darkseagreen4, label=writer];
m3_22 -> m3_23  [key=0, style=solid];
m3_22 -> m3_26  [key=2, style=dotted];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_13  [key=2, style=dotted];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_13  [key=2, style=dotted];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_15  [key=2, style=dotted];
m3_25 -> m3_19  [key=0, style=bold, color=blue];
m3_220 -> m3_221  [key=0, style=solid];
m3_220 -> m3_225  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Formatting"];
m3_220 -> m3_226  [key=1, style=dashed, color=darkseagreen4, label=object];
m3_221 -> m3_222  [key=0, style=solid];
m3_221 -> m3_229  [key=2, style=dotted];
m3_221 -> m3_226  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m3_225 -> m3_226  [key=0, style=solid];
m3_226 -> m3_227  [key=0, style=solid];
m3_226 -> m3_233  [key=2, style=dotted];
m3_222 -> m3_223  [key=0, style=solid];
m3_222 -> m3_230  [key=2, style=dotted];
m3_223 -> m3_224  [key=0, style=solid];
m3_223 -> m3_231  [key=2, style=dotted];
m3_223 -> m3_227  [key=1, style=dashed, color=darkseagreen4, label=sw];
m3_224 -> m3_225  [key=0, style=solid];
m3_224 -> m3_232  [key=2, style=dotted];
m3_224 -> m3_226  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_227 -> m3_228  [key=0, style=solid];
m3_227 -> m3_15  [key=2, style=dotted];
m3_228 -> m3_220  [key=0, style=bold, color=blue];
m3_39 -> m3_40  [key=0, style=solid];
m3_40 -> m3_41  [key=0, style=solid];
m3_40 -> m3_42  [key=2, style=dotted];
m3_41 -> m3_39  [key=0, style=bold, color=blue];
m3_130 -> m3_131  [key=0, style=solid];
m3_130 -> m3_133  [key=1, style=dashed, color=darkseagreen4, label="System.Uri"];
m3_131 -> m3_132  [key=0, style=solid];
m3_131 -> m3_133  [key=0, style=solid];
m3_133 -> m3_134  [key=0, style=solid];
m3_133 -> m3_135  [key=2, style=dotted];
m3_132 -> m3_134  [key=0, style=solid];
m3_134 -> m3_130  [key=0, style=bold, color=blue];
m3_84 -> m3_85  [key=0, style=solid];
m3_85 -> m3_86  [key=0, style=solid];
m3_85 -> m3_87  [key=2, style=dotted];
m3_85 -> m3_71  [key=2, style=dotted];
m3_86 -> m3_84  [key=0, style=bold, color=blue];
m3_264 -> m3_265  [key=0, style=solid];
m3_265 -> m3_266  [key=0, style=solid];
m3_265 -> m3_260  [key=2, style=dotted];
m3_266 -> m3_264  [key=0, style=bold, color=blue];
m3_343 -> m3_344  [key=0, style=solid];
m3_344 -> m3_345  [key=0, style=solid];
m3_344 -> m3_346  [key=2, style=dotted];
m3_345 -> m3_343  [key=0, style=bold, color=blue];
m3_324 -> m3_325  [key=0, style=solid];
m3_245 -> m3_246  [key=0, style=solid];
m3_245 -> m3_203  [key=2, style=dotted];
m3_244 -> m3_245  [key=0, style=solid];
m3_246 -> m3_244  [key=0, style=bold, color=blue];
m3_295 -> m3_296  [key=0, style=solid];
m3_295 -> m3_260  [key=2, style=dotted];
m3_294 -> m3_295  [key=0, style=solid];
m3_296 -> m3_294  [key=0, style=bold, color=blue];
m3_304 -> m3_305  [key=0, style=solid];
m3_304 -> m3_250  [key=2, style=dotted];
m3_303 -> m3_304  [key=0, style=solid];
m3_305 -> m3_303  [key=0, style=bold, color=blue];
m3_325 -> m3_326  [key=0, style=solid];
m3_325 -> m3_309  [key=2, style=dotted];
m3_326 -> m3_324  [key=0, style=bold, color=blue];
m3_105 -> m3_106  [key=0, style=solid];
m3_106 -> m3_107  [key=0, style=solid];
m3_106 -> m3_108  [key=2, style=dotted];
m3_107 -> m3_105  [key=0, style=bold, color=blue];
m3_297 -> m3_298  [key=0, style=solid];
m3_298 -> m3_299  [key=0, style=solid];
m3_298 -> m3_300  [key=2, style=dotted];
m3_299 -> m3_297  [key=0, style=bold, color=blue];
m3_96 -> m3_97  [key=0, style=solid];
m3_96 -> m3_98  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_96 -> m3_99  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_97 -> m3_98  [key=0, style=solid];
m3_97 -> m3_99  [key=0, style=solid];
m3_97 -> m3_95  [key=2, style=dotted];
m3_98 -> m3_100  [key=0, style=solid];
m3_99 -> m3_100  [key=0, style=solid];
m3_100 -> m3_96  [key=0, style=bold, color=blue];
m3_67 -> m3_68  [key=0, style=solid];
m3_68 -> m3_69  [key=0, style=solid];
m3_68 -> m3_70  [key=2, style=dotted];
m3_68 -> m3_71  [key=2, style=dotted];
m3_69 -> m3_67  [key=0, style=bold, color=blue];
m3_47 -> m3_48  [key=0, style=solid];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_50  [key=2, style=dotted];
m3_49 -> m3_47  [key=0, style=bold, color=blue];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_27  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m3_28 -> m3_29  [key=0, style=solid];
m3_29 -> m3_27  [key=0, style=bold, color=blue];
m3_59 -> m3_60  [key=0, style=solid];
m3_60 -> m3_61  [key=0, style=solid];
m3_60 -> m3_62  [key=2, style=dotted];
m3_61 -> m3_59  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=2, style=dotted];
m3_2 -> m3_0  [key=0, style=bold, color=blue];
m3_122 -> m3_123  [key=0, style=solid];
m3_123 -> m3_124  [key=0, style=solid];
m3_123 -> m3_125  [key=2, style=dotted];
m3_124 -> m3_122  [key=0, style=bold, color=blue];
m3_291 -> m3_292  [key=0, style=solid];
m3_291 -> m3_295  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_292 -> m3_293  [key=0, style=solid];
m3_292 -> m3_243  [key=2, style=dotted];
m3_292 -> m3_294  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_293 -> m3_291  [key=0, style=bold, color=blue];
m3_204 -> m3_205  [key=0, style=solid];
m3_205 -> m3_206  [key=0, style=solid];
m3_205 -> m3_203  [key=2, style=dotted];
m3_206 -> m3_204  [key=0, style=bold, color=blue];
m3_200 -> m3_201  [key=0, style=solid];
m3_201 -> m3_202  [key=0, style=solid];
m3_201 -> m3_203  [key=2, style=dotted];
m3_202 -> m3_200  [key=0, style=bold, color=blue];
m3_257 -> m3_258  [key=0, style=solid];
m3_258 -> m3_259  [key=0, style=solid];
m3_258 -> m3_260  [key=2, style=dotted];
m3_259 -> m3_257  [key=0, style=bold, color=blue];
m3_207 -> m3_208  [key=0, style=solid];
m3_208 -> m3_209  [key=0, style=solid];
m3_208 -> m3_210  [key=2, style=dotted];
m3_209 -> m3_207  [key=0, style=bold, color=blue];
m3_327 -> m3_328  [key=0, style=solid];
m3_328 -> m3_329  [key=0, style=solid];
m3_328 -> m3_330  [key=2, style=dotted];
m3_329 -> m3_327  [key=0, style=bold, color=blue];
m3_374 -> m3_245  [key=1, style=dashed, color=darkseagreen4, label=object];
m3_375 -> m3_245  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Formatting"];
m3_376 -> m3_245  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m3_377 -> m3_295  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_378 -> m3_295  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m3_379 -> m3_304  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_380 -> m3_304  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m3_381 -> m3_304  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m3_382 -> m3_325  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_383 -> m3_325  [key=1, style=dashed, color=darkseagreen4, label=object];
m3_384 -> m3_325  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m6_0 -> m6_1  [key=0, style=solid, color=green];
m6_1 -> m6_2  [key=0, style=solid, color=green];
m6_1 -> m6_7  [key=2, style=dotted];
m6_1 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_1 -> m6_4  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_1 -> m6_5  [key=1, style=dashed, color=green, label=schemaJson];
m6_1 -> m6_1  [key=3, color=green, style=bold, label="Local variable string schemaJson"];
m6_2 -> m6_3  [key=0, style=solid, color=red];
m6_2 -> m6_8  [key=2, style=dotted, color=red];
m6_2 -> m6_9  [key=2, style=dotted, color=red];
m6_2 -> m6_2  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_10  [key=2, style=dotted];
m6_3 -> m6_9  [key=2, style=dotted];
m6_3 -> m6_14  [key=2, style=dotted];
m6_3 -> m6_15  [key=2, style=dotted];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_11  [key=2, style=dotted];
m6_4 -> m6_10  [key=2, style=dotted];
m6_4 -> m6_9  [key=2, style=dotted];
m6_4 -> m6_16  [key=2, style=dotted];
m6_4 -> m6_7  [key=1, style=dashed, color=darkseagreen4, label=validatingReader];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_11  [key=2, style=dotted];
m6_5 -> m6_10  [key=2, style=dotted];
m6_5 -> m6_12  [key=2, style=dotted];
m6_5 -> m6_17  [key=2, style=dotted];
m6_6 -> m6_0  [key=0, style=bold, color=blue];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_18  [key=2, style=dotted];
m6_6 -> m6_24  [key=1, style=dashed, color=darkseagreen4, label=messages];
m6_6 -> m6_11  [key=1, style=dashed, color=darkseagreen4, label=messages];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_21  [key=2, style=dotted];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_22  [key=2, style=dotted];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_24  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.ValidationEventArgs"];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_20  [key=2, style=dotted];
m6_11 -> m6_12  [key=0, style=solid];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> n4  [key=2, style=dotted];
m6_13 -> m6_0  [key=0, style=bold, color=blue];
m6_23 -> m6_24  [key=0, style=solid];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> m6_26  [key=2, style=dotted];
m6_25 -> m6_23  [key=0, style=bold, color=blue];
m6_27 -> m6_24  [key=1, style=dashed, color=darkseagreen4, label=messages];
m7_23 -> m7_24  [key=0, style=solid];
m7_24 -> m7_25  [key=0, style=solid];
m7_24 -> m7_36  [key=2, style=dotted];
m7_24 -> m7_29  [key=1, style=dashed, color=darkseagreen4, label=ignoreAttributeOnClassTestClass];
m7_25 -> m7_26  [key=0, style=solid];
m7_29 -> m7_30  [key=0, style=solid];
m7_29 -> n5  [key=2, style=dotted];
m7_26 -> m7_27  [key=0, style=solid];
m7_26 -> m7_37  [key=2, style=dotted];
m7_26 -> m7_29  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m7_27 -> m7_28  [key=0, style=solid];
m7_27 -> m7_17  [key=2, style=dotted];
m7_28 -> m7_29  [key=0, style=solid];
m7_28 -> m7_38  [key=2, style=dotted];
m7_28 -> m7_30  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_30 -> m7_31  [key=0, style=solid];
m7_30 -> m7_34  [key=1, style=dashed, color=darkseagreen4, label=o];
m7_31 -> m7_32  [key=0, style=solid];
m7_31 -> m7_40  [key=2, style=dotted];
m7_31 -> m7_33  [key=1, style=dashed, color=darkseagreen4, label=p];
m7_34 -> m7_35  [key=0, style=solid];
m7_34 -> m7_42  [key=2, style=dotted];
m7_32 -> m7_33  [key=0, style=solid];
m7_32 -> m7_41  [key=2, style=dotted];
m7_33 -> m7_34  [key=0, style=solid];
m7_33 -> m7_21  [key=2, style=dotted];
m7_35 -> m7_23  [key=0, style=bold, color=blue];
m7_55 -> m7_56  [key=0, style=solid];
m7_56 -> m7_57  [key=0, style=solid];
m7_56 -> m7_60  [key=2, style=dotted];
m7_56 -> m7_15  [key=2, style=dotted];
m7_57 -> m7_58  [key=0, style=solid];
m7_57 -> m7_16  [key=2, style=dotted];
m7_57 -> m7_17  [key=2, style=dotted];
m7_57 -> m7_18  [key=2, style=dotted];
m7_58 -> m7_59  [key=0, style=solid];
m7_58 -> m7_19  [key=2, style=dotted];
m7_59 -> m7_55  [key=0, style=bold, color=blue];
m7_69 -> m7_70  [key=0, style=solid];
m7_70 -> m7_71  [key=0, style=solid];
m7_70 -> m7_74  [key=2, style=dotted];
m7_71 -> m7_72  [key=0, style=solid];
m7_71 -> m7_16  [key=2, style=dotted];
m7_71 -> m7_17  [key=2, style=dotted];
m7_71 -> m7_18  [key=2, style=dotted];
m7_72 -> m7_73  [key=0, style=solid];
m7_72 -> m7_19  [key=2, style=dotted];
m7_73 -> m7_69  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_14  [key=2, style=dotted];
m7_1 -> m7_3  [key=1, style=dashed, color=darkseagreen4, label=person];
m7_1 -> m7_4  [key=1, style=dashed, color=darkseagreen4, label=person];
m7_1 -> m7_5  [key=1, style=dashed, color=darkseagreen4, label=person];
m7_1 -> m7_8  [key=1, style=dashed, color=darkseagreen4, label=person];
m7_1 -> m7_9  [key=1, style=dashed, color=darkseagreen4, label=person];
m7_1 -> m7_10  [key=1, style=dashed, color=darkseagreen4, label=person];
m7_1 -> m7_11  [key=1, style=dashed, color=darkseagreen4, label=person];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_15  [key=2, style=dotted];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_15  [key=2, style=dotted];
m7_4 -> m7_5  [key=0, style=solid];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_16  [key=2, style=dotted];
m7_5 -> m7_17  [key=2, style=dotted];
m7_5 -> m7_18  [key=2, style=dotted];
m7_5 -> m7_7  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_21  [key=2, style=dotted];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_21  [key=2, style=dotted];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_21  [key=2, style=dotted];
m7_11 -> m7_12  [key=0, style=solid];
m7_11 -> m7_22  [key=2, style=dotted];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_19  [key=2, style=dotted];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_16  [key=2, style=dotted];
m7_7 -> m7_17  [key=2, style=dotted];
m7_7 -> m7_20  [key=2, style=dotted];
m7_7 -> m7_9  [key=1, style=dashed, color=darkseagreen4, label=deserializedPerson];
m7_7 -> m7_10  [key=1, style=dashed, color=darkseagreen4, label=deserializedPerson];
m7_12 -> m7_13  [key=0, style=solid];
m7_12 -> m7_19  [key=2, style=dotted];
m7_13 -> m7_0  [key=0, style=bold, color=blue];
m7_61 -> m7_62  [key=0, style=solid];
m7_62 -> m7_63  [key=0, style=solid];
m7_62 -> m7_68  [key=2, style=dotted];
m7_62 -> m7_64  [key=1, style=dashed, color=darkseagreen4, label=o];
m7_62 -> m7_65  [key=1, style=dashed, color=darkseagreen4, label=o];
m7_63 -> m7_64  [key=0, style=solid];
m7_64 -> m7_65  [key=0, style=solid];
m7_65 -> m7_66  [key=0, style=solid];
m7_65 -> m7_16  [key=2, style=dotted];
m7_65 -> m7_17  [key=2, style=dotted];
m7_65 -> m7_18  [key=2, style=dotted];
m7_66 -> m7_67  [key=0, style=solid];
m7_66 -> m7_19  [key=2, style=dotted];
m7_67 -> m7_61  [key=0, style=bold, color=blue];
m7_43 -> m7_44  [key=0, style=solid];
m7_44 -> m7_45  [key=0, style=solid];
m7_44 -> m7_52  [key=2, style=dotted];
m7_45 -> m7_46  [key=0, style=solid];
m7_45 -> m7_16  [key=2, style=dotted];
m7_45 -> m7_17  [key=2, style=dotted];
m7_45 -> m7_18  [key=2, style=dotted];
m7_46 -> m7_47  [key=0, style=solid];
m7_46 -> m7_19  [key=2, style=dotted];
m7_47 -> m7_48  [key=0, style=solid];
m7_47 -> m7_16  [key=2, style=dotted];
m7_47 -> m7_17  [key=2, style=dotted];
m7_47 -> m7_20  [key=2, style=dotted];
m7_47 -> m7_49  [key=1, style=dashed, color=darkseagreen4, label=deserializedPrivateMembersClass];
m7_47 -> m7_50  [key=1, style=dashed, color=darkseagreen4, label=deserializedPrivateMembersClass];
m7_48 -> m7_49  [key=0, style=solid];
m7_48 -> m7_53  [key=2, style=dotted];
m7_48 -> m7_54  [key=2, style=dotted];
m7_48 -> m7_21  [key=2, style=dotted];
m7_49 -> m7_50  [key=0, style=solid];
m7_49 -> m7_53  [key=2, style=dotted];
m7_49 -> m7_54  [key=2, style=dotted];
m7_49 -> m7_21  [key=2, style=dotted];
m7_50 -> m7_51  [key=0, style=solid];
m7_50 -> m7_53  [key=2, style=dotted];
m7_50 -> m7_54  [key=2, style=dotted];
m7_50 -> m7_21  [key=2, style=dotted];
m7_51 -> m7_43  [key=0, style=bold, color=blue];
m8_10 -> m8_69  [key=0, style=solid];
m8_10 -> m8_70  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m8_10 -> m8_72  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m8_10 -> m8_73  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m8_10 -> m8_74  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m8_10 -> m8_78  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m8_10 -> m8_82  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m8_10 -> m8_86  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m8_10 -> m8_87  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m8_10 -> m8_88  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m8_10 -> m8_89  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m8_69 -> m8_70  [key=0, style=solid];
m8_70 -> m8_71  [key=0, style=solid];
m8_70 -> m8_72  [key=0, style=solid];
m8_70 -> m8_92  [key=2, style=dotted];
m8_72 -> m8_73  [key=0, style=solid];
m8_72 -> m8_93  [key=2, style=dotted];
m8_72 -> m8_75  [key=1, style=dashed, color=darkseagreen4, label=model];
m8_72 -> m8_76  [key=1, style=dashed, color=darkseagreen4, label=model];
m8_72 -> m8_77  [key=1, style=dashed, color=darkseagreen4, label=model];
m8_72 -> m8_79  [key=1, style=dashed, color=darkseagreen4, label=model];
m8_72 -> m8_80  [key=1, style=dashed, color=darkseagreen4, label=model];
m8_72 -> m8_81  [key=1, style=dashed, color=darkseagreen4, label=model];
m8_72 -> m8_83  [key=1, style=dashed, color=darkseagreen4, label=model];
m8_72 -> m8_84  [key=1, style=dashed, color=darkseagreen4, label=model];
m8_72 -> m8_85  [key=1, style=dashed, color=darkseagreen4, label=model];
m8_72 -> m8_87  [key=1, style=dashed, color=darkseagreen4, label=model];
m8_72 -> m8_89  [key=1, style=dashed, color=darkseagreen4, label=model];
m8_72 -> m8_90  [key=1, style=dashed, color=darkseagreen4, label=model];
m8_73 -> m8_74  [key=0, style=solid];
m8_74 -> m8_75  [key=0, style=solid];
m8_74 -> m8_78  [key=0, style=solid];
m8_74 -> m8_77  [key=1, style=dashed, color=darkseagreen4, label=property];
m8_78 -> m8_79  [key=0, style=solid];
m8_78 -> m8_82  [key=0, style=solid];
m8_78 -> m8_81  [key=1, style=dashed, color=darkseagreen4, label=property];
m8_82 -> m8_83  [key=0, style=solid];
m8_82 -> m8_86  [key=0, style=solid];
m8_82 -> m8_85  [key=1, style=dashed, color=darkseagreen4, label=t];
m8_86 -> m8_87  [key=0, style=solid];
m8_86 -> m8_88  [key=0, style=solid];
m8_87 -> m8_88  [key=0, style=solid];
m8_87 -> m8_10  [key=2, style=dotted];
m8_88 -> m8_89  [key=0, style=solid];
m8_88 -> m8_90  [key=0, style=solid];
m8_89 -> m8_90  [key=0, style=solid];
m8_89 -> m8_10  [key=2, style=dotted];
m8_71 -> m8_91  [key=0, style=solid];
m8_75 -> m8_76  [key=0, style=solid];
m8_75 -> m8_77  [key=0, style=solid];
m8_76 -> m8_77  [key=0, style=solid];
m8_76 -> m8_9  [key=2, style=dotted];
m8_77 -> m8_74  [key=0, style=solid];
m8_77 -> m8_10  [key=2, style=dotted];
m8_77 -> m8_77  [key=1, style=dashed, color=darkseagreen4, label=property];
m8_79 -> m8_80  [key=0, style=solid];
m8_79 -> m8_81  [key=0, style=solid];
m8_80 -> m8_81  [key=0, style=solid];
m8_80 -> m8_9  [key=2, style=dotted];
m8_81 -> m8_78  [key=0, style=solid];
m8_81 -> m8_10  [key=2, style=dotted];
m8_81 -> m8_81  [key=1, style=dashed, color=darkseagreen4, label=property];
m8_83 -> m8_84  [key=0, style=solid];
m8_83 -> m8_85  [key=0, style=solid];
m8_84 -> m8_85  [key=0, style=solid];
m8_84 -> m8_94  [key=2, style=dotted];
m8_85 -> m8_82  [key=0, style=solid];
m8_85 -> m8_10  [key=2, style=dotted];
m8_85 -> m8_95  [key=2, style=dotted];
m8_90 -> m8_91  [key=0, style=solid];
m8_91 -> m8_10  [key=0, style=bold, color=blue];
m8_8 -> m8_11  [key=0, style=solid];
m8_8 -> m8_12  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m8_8 -> m8_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m8_8 -> m8_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m8_8 -> m8_15  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m8_8 -> m8_16  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m8_8 -> m8_19  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m8_8 -> m8_21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m8_8 -> m8_22  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m8_8 -> m8_23  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m8_8 -> m8_25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m8_8 -> m8_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m8_8 -> m8_28  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m8_8 -> m8_29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m8_8 -> m8_30  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m8_8 -> m8_31  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m8_8 -> m8_32  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m8_8 -> m8_33  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m8_8 -> m8_2  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Schema.JsonSchemaNode existingNode"];
m8_8 -> m8_53  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Schema.JsonSchemaNode existingNode"];
m8_8 -> m8_58  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Schema.JsonSchemaNode existingNode"];
m8_8 -> m8_0  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Schema.JsonSchema schema"];
m8_8 -> m8_52  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Schema.JsonSchema schema"];
m8_8 -> m8_45  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Schema.JsonSchema schema"];
m8_8 -> m8_47  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Schema.JsonSchema schema"];
m8_8 -> m8_46  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Schema.JsonSchema schema"];
m8_8 -> m8_8  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Schema.JsonSchemaNode AddSchema"];
m8_11 -> m8_12  [key=0, style=solid];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_16  [key=0, style=solid];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_15  [key=0, style=solid];
m8_13 -> m8_37  [key=2, style=dotted];
m8_14 -> m8_36  [key=0, style=solid];
m8_15 -> m8_17  [key=0, style=solid];
m8_15 -> m8_38  [key=2, style=dotted];
m8_15 -> m8_39  [key=2, style=dotted];
m8_15 -> m8_18  [key=1, style=dashed, color=darkseagreen4, label=newId];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_39  [key=2, style=dotted];
m8_16 -> m8_18  [key=1, style=dashed, color=darkseagreen4, label=newId];
m8_19 -> m8_20  [key=0, style=solid];
m8_19 -> m8_41  [key=2, style=dotted];
m8_19 -> m8_42  [key=2, style=dotted];
m8_19 -> m8_21  [key=1, style=dashed, color=darkseagreen4, label=currentNode];
m8_19 -> m8_22  [key=1, style=dashed, color=darkseagreen4, label=currentNode];
m8_19 -> m8_26  [key=1, style=dashed, color=darkseagreen4, label=currentNode];
m8_19 -> m8_29  [key=1, style=dashed, color=darkseagreen4, label=currentNode];
m8_19 -> m8_31  [key=1, style=dashed, color=darkseagreen4, label=currentNode];
m8_19 -> m8_34  [key=1, style=dashed, color=darkseagreen4, label=currentNode];
m8_19 -> m8_35  [key=1, style=dashed, color=darkseagreen4, label=currentNode];
m8_19 -> m8_8  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Schema.JsonSchemaNode currentNode"];
m8_21 -> m8_22  [key=0, style=solid];
m8_21 -> m8_44  [key=2, style=dotted];
m8_22 -> m8_23  [key=0, style=solid];
m8_22 -> m8_44  [key=2, style=dotted];
m8_23 -> m8_24  [key=0, style=solid];
m8_23 -> m8_28  [key=0, style=solid];
m8_25 -> m8_26  [key=0, style=solid];
m8_25 -> m8_28  [key=0, style=solid];
m8_25 -> m8_25  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m8_26 -> m8_27  [key=0, style=solid];
m8_26 -> m8_45  [key=2, style=dotted];
m8_28 -> m8_29  [key=0, style=solid];
m8_28 -> m8_30  [key=0, style=solid];
m8_29 -> m8_30  [key=0, style=solid];
m8_29 -> m8_46  [key=2, style=dotted];
m8_30 -> m8_31  [key=0, style=solid];
m8_30 -> m8_32  [key=0, style=solid];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_47  [key=2, style=dotted];
m8_32 -> m8_33  [key=0, style=solid];
m8_32 -> m8_35  [key=0, style=solid];
m8_33 -> m8_34  [key=0, style=solid];
m8_33 -> m8_35  [key=0, style=solid];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_19  [key=0, style=solid];
m8_17 -> m8_40  [key=2, style=dotted];
m8_18 -> m8_36  [key=0, style=solid];
m8_20 -> m8_21  [key=0, style=solid];
m8_20 -> m8_43  [key=2, style=dotted];
m8_34 -> m8_33  [key=0, style=solid];
m8_34 -> m8_8  [key=2, style=dotted];
m8_34 -> m8_34  [key=1, style=dashed, color=darkseagreen4, label=currentNode];
m8_34 -> m8_35  [key=1, style=dashed, color=darkseagreen4, label=currentNode];
m8_35 -> m8_36  [key=0, style=solid];
m8_24 -> m8_25  [key=0, style=solid];
m8_24 -> m8_26  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_24 -> m8_27  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_27 -> m8_25  [key=0, style=solid];
m8_27 -> m8_27  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_36 -> m8_8  [key=0, style=bold, color=blue];
m8_47 -> m8_65  [key=0, style=solid];
m8_47 -> m8_19  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Schema.JsonSchemaNode parentNode"];
m8_65 -> m8_66  [key=0, style=solid];
m8_65 -> m8_8  [key=2, style=dotted];
m8_66 -> m8_47  [key=0, style=bold, color=blue];
m8_45 -> m8_58  [key=0, style=solid];
m8_45 -> m8_59  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m8_45 -> m8_60  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m8_45 -> m8_61  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m8_45 -> m8_62  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m8_45 -> m8_19  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Schema.JsonSchemaNode parentNode"];
m8_45 -> m8_25  [key=3, color=darkorchid, style=bold, label="Parameter variable int index"];
m8_58 -> m8_59  [key=0, style=solid];
m8_59 -> m8_60  [key=0, style=solid];
m8_59 -> m8_8  [key=2, style=dotted];
m8_59 -> m8_61  [key=1, style=dashed, color=darkseagreen4, label=newItemNode];
m8_59 -> m8_62  [key=1, style=dashed, color=darkseagreen4, label=newItemNode];
m8_60 -> m8_61  [key=0, style=solid];
m8_60 -> m8_62  [key=0, style=solid];
m8_61 -> m8_63  [key=0, style=solid];
m8_61 -> m8_64  [key=2, style=dotted];
m8_62 -> m8_63  [key=0, style=solid];
m8_63 -> m8_45  [key=0, style=bold, color=blue];
m8_46 -> m8_67  [key=0, style=solid];
m8_46 -> m8_19  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Schema.JsonSchemaNode parentNode"];
m8_67 -> m8_68  [key=0, style=solid];
m8_67 -> m8_8  [key=2, style=dotted];
m8_68 -> m8_46  [key=0, style=bold, color=blue];
m8_44 -> m8_48  [key=0, style=solid];
m8_44 -> m8_49  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchema>"];
m8_44 -> m8_50  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchemaNode>"];
m8_48 -> m8_49  [key=0, style=solid];
m8_48 -> m8_51  [key=0, style=solid];
m8_49 -> m8_50  [key=0, style=solid];
m8_49 -> m8_51  [key=0, style=solid];
m8_50 -> m8_49  [key=0, style=solid];
m8_50 -> m8_52  [key=2, style=dotted];
m8_50 -> m8_50  [key=1, style=dashed, color=darkseagreen4, label=property];
m8_51 -> m8_44  [key=0, style=bold, color=blue];
m8_52 -> m8_53  [key=0, style=solid];
m8_52 -> m8_54  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchemaNode>"];
m8_52 -> m8_55  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchemaNode>"];
m8_52 -> m8_44  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchemaNode> target"];
m8_53 -> m8_54  [key=0, style=solid];
m8_54 -> m8_55  [key=0, style=solid];
m8_54 -> m8_57  [key=2, style=dotted];
m8_55 -> m8_56  [key=0, style=solid];
m8_55 -> m8_8  [key=2, style=dotted];
m8_56 -> m8_52  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m8_0 -> m8_4  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Schema.JsonSchemaModel Build"];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_7  [key=2, style=dotted];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_8  [key=2, style=dotted];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_9  [key=2, style=dotted];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_10  [key=2, style=dotted];
m8_5 -> m8_6  [key=0, style=solid];
m8_6 -> m8_0  [key=0, style=bold, color=blue];
m8_96 -> m8_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder"];
m8_96 -> m8_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder"];
m8_96 -> m8_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder"];
m8_96 -> m8_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder"];
m8_96 -> m8_17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder"];
m8_96 -> m8_18  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder"];
m8_96 -> m8_20  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder"];
m8_96 -> m8_21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder"];
m8_96 -> m8_22  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder"];
m8_96 -> m8_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder"];
m8_96 -> m8_29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder"];
m8_96 -> m8_31  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder"];
m8_96 -> m8_34  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder"];
m8_96 -> m8_50  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder"];
m8_96 -> m8_55  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder"];
m8_96 -> m8_59  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder"];
m8_96 -> m8_65  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder"];
m8_96 -> m8_67  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder"];
m8_96 -> m8_70  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder"];
m8_96 -> m8_73  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder"];
m8_96 -> m8_77  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder"];
m8_96 -> m8_81  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder"];
m8_96 -> m8_85  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder"];
m8_96 -> m8_87  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder"];
m8_96 -> m8_89  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder"];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_2 -> m10_0  [key=0, style=bold, color=blue];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_3  [key=2, style=dotted];
m11_2 -> m11_0  [key=0, style=bold, color=blue];
m11_15 -> m11_16  [key=0, style=solid];
m11_12 -> m11_13  [key=0, style=solid];
m11_12 -> m11_14  [key=2, style=dotted];
m11_16 -> m11_17  [key=0, style=solid];
m11_16 -> m11_14  [key=2, style=dotted];
m11_11 -> m11_12  [key=0, style=solid];
m11_13 -> m11_11  [key=0, style=bold, color=blue];
m11_17 -> m11_15  [key=0, style=bold, color=blue];
m11_4 -> m11_5  [key=0, style=solid];
m11_4 -> m11_12  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_4 -> m11_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_4 -> m11_16  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_5 -> m11_6  [key=0, style=solid];
m11_5 -> m11_10  [key=2, style=dotted];
m11_5 -> m11_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_5 -> m11_8  [key=1, style=dashed, color=darkseagreen4, label=schema];
m11_7 -> m11_8  [key=0, style=solid];
m11_7 -> m11_10  [key=2, style=dotted];
m11_7 -> m11_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_6 -> m11_7  [key=0, style=solid];
m11_6 -> m11_8  [key=0, style=solid];
m11_8 -> m11_9  [key=0, style=solid];
m11_9 -> m11_4  [key=0, style=bold, color=blue];
m11_18 -> m11_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaResolver"];
m11_18 -> m11_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaResolver"];
m11_18 -> m11_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaResolver"];
m11_19 -> m11_12  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_19 -> m11_16  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_2  [key=0, style=solid];
m13_1 -> m13_13  [key=2, style=dotted];
m13_2 -> m13_3  [key=0, style=solid];
m13_2 -> m13_13  [key=2, style=dotted];
m13_2 -> m13_4  [key=1, style=dashed, color=darkseagreen4, label=documents];
m13_2 -> m13_5  [key=1, style=dashed, color=darkseagreen4, label=documents];
m13_2 -> m13_7  [key=1, style=dashed, color=darkseagreen4, label=documents];
m13_2 -> m13_9  [key=1, style=dashed, color=darkseagreen4, label=documents];
m13_3 -> m13_4  [key=0, style=solid];
m13_3 -> m13_14  [key=2, style=dotted];
m13_4 -> m13_5  [key=0, style=solid];
m13_4 -> m13_15  [key=2, style=dotted];
m13_5 -> m13_6  [key=0, style=solid];
m13_5 -> m13_7  [key=0, style=solid];
m13_5 -> m13_16  [key=2, style=dotted];
m13_7 -> m13_8  [key=0, style=solid];
m13_7 -> m13_17  [key=2, style=dotted];
m13_7 -> m13_18  [key=2, style=dotted];
m13_9 -> m13_10  [key=0, style=solid];
m13_9 -> m13_17  [key=2, style=dotted];
m13_9 -> m13_18  [key=2, style=dotted];
m13_9 -> m13_11  [key=1, style=dashed, color=darkseagreen4, label=preserveReferenacesObjects];
m13_6 -> m13_7  [key=0, style=solid];
m13_8 -> m13_9  [key=0, style=solid];
m13_8 -> m13_19  [key=2, style=dotted];
m13_10 -> m13_11  [key=0, style=solid];
m13_10 -> m13_19  [key=2, style=dotted];
m13_11 -> m13_12  [key=0, style=solid];
m13_11 -> m13_20  [key=2, style=dotted];
m13_12 -> m13_0  [key=0, style=bold, color=blue];
m14_23 -> m14_24  [key=0, style=solid];
m14_24 -> m14_25  [key=0, style=solid];
m14_24 -> m14_26  [key=0, style=solid];
m14_24 -> m14_15  [key=3, color=darkorchid, style=bold, label="Local variable string id"];
m14_25 -> m14_27  [key=0, style=solid];
m14_25 -> m14_22  [key=2, style=dotted];
m14_26 -> m14_27  [key=0, style=solid];
m14_27 -> m14_23  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_3  [key=2, style=dotted];
m14_2 -> m14_0  [key=0, style=bold, color=blue];
m14_4 -> m14_5  [key=0, style=solid];
m14_5 -> m14_6  [key=0, style=solid];
m14_5 -> m14_7  [key=2, style=dotted];
m14_6 -> m14_4  [key=0, style=bold, color=blue];
m14_14 -> m14_15  [key=0, style=solid];
m14_14 -> m14_16  [key=1, style=dashed, color=darkseagreen4, label=object];
m14_14 -> m14_17  [key=1, style=dashed, color=darkseagreen4, label="System.Exception"];
m14_15 -> m14_16  [key=0, style=solid];
m14_15 -> m14_17  [key=0, style=solid];
m14_16 -> m14_17  [key=0, style=solid];
m14_16 -> m14_21  [key=2, style=dotted];
m14_17 -> m14_18  [key=0, style=solid];
m14_17 -> m14_19  [key=0, style=solid];
m14_18 -> m14_20  [key=0, style=solid];
m14_18 -> m14_22  [key=2, style=dotted];
m14_19 -> m14_20  [key=0, style=solid];
m14_20 -> m14_14  [key=0, style=bold, color=blue];
m14_28 -> m14_29  [key=0, style=solid];
m14_28 -> m14_33  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m14_28 -> m14_34  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m14_28 -> m14_35  [key=1, style=dashed, color=darkseagreen4, label="System.Exception"];
m14_28 -> m14_36  [key=1, style=dashed, color=darkseagreen4, label="System.Exception"];
m14_28 -> m14_37  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.IJsonLineInfo"];
m14_28 -> m14_38  [key=1, style=dashed, color=darkseagreen4, label="System.Exception"];
m14_28 -> m14_39  [key=1, style=dashed, color=darkseagreen4, label=object];
m14_28 -> m14_40  [key=1, style=dashed, color=darkseagreen4, label=object];
m14_28 -> m14_42  [key=1, style=dashed, color=darkseagreen4, label=object];
m14_29 -> m14_30  [key=0, style=solid];
m14_29 -> m14_14  [key=2, style=dotted];
m14_29 -> m14_31  [key=1, style=dashed, color=darkseagreen4, label=errorContext];
m14_29 -> m14_40  [key=1, style=dashed, color=darkseagreen4, label=errorContext];
m14_29 -> m14_41  [key=1, style=dashed, color=darkseagreen4, label=errorContext];
m14_29 -> m14_42  [key=1, style=dashed, color=darkseagreen4, label=errorContext];
m14_29 -> m14_43  [key=1, style=dashed, color=darkseagreen4, label=errorContext];
m14_33 -> m14_34  [key=0, style=solid];
m14_33 -> m14_35  [key=0, style=solid];
m14_34 -> m14_35  [key=0, style=solid];
m14_34 -> m14_34  [key=1, style=dashed, color=darkseagreen4, label=message];
m14_35 -> m14_36  [key=0, style=solid];
m14_35 -> m14_35  [key=1, style=dashed, color=darkseagreen4, label=message];
m14_35 -> m14_37  [key=1, style=dashed, color=darkseagreen4, label=message];
m14_35 -> m14_38  [key=1, style=dashed, color=darkseagreen4, label=message];
m14_36 -> m14_37  [key=0, style=solid];
m14_36 -> m14_38  [key=0, style=solid];
m14_37 -> m14_38  [key=0, style=solid];
m14_37 -> m14_46  [key=2, style=dotted];
m14_37 -> m14_37  [key=1, style=dashed, color=darkseagreen4, label=message];
m14_38 -> m14_39  [key=0, style=solid];
m14_38 -> m14_47  [key=2, style=dotted];
m14_39 -> m14_40  [key=0, style=solid];
m14_39 -> m14_41  [key=0, style=solid];
m14_40 -> m14_41  [key=0, style=solid];
m14_40 -> m14_48  [key=2, style=dotted];
m14_40 -> m14_15  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract GetContractSafe"];
m14_42 -> m14_43  [key=0, style=solid];
m14_42 -> m14_49  [key=2, style=dotted];
m14_42 -> m14_50  [key=2, style=dotted];
m14_30 -> m14_31  [key=0, style=solid];
m14_30 -> m14_39  [key=0, style=solid];
m14_31 -> m14_32  [key=0, style=solid];
m14_41 -> m14_42  [key=0, style=solid];
m14_41 -> m14_43  [key=0, style=solid];
m14_43 -> m14_44  [key=0, style=solid];
m14_32 -> m14_33  [key=0, style=solid];
m14_32 -> n10  [key=2, style=dotted];
m14_32 -> m14_34  [key=1, style=dashed, color=darkseagreen4, label=message];
m14_32 -> m14_35  [key=1, style=dashed, color=darkseagreen4, label=message];
m14_44 -> m14_28  [key=0, style=bold, color=blue];
m14_8 -> m14_9  [key=0, style=solid];
m14_8 -> m14_10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m14_8 -> m14_11  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m14_9 -> m14_10  [key=0, style=solid];
m14_9 -> m14_13  [key=2, style=dotted];
m14_10 -> m14_11  [key=0, style=solid];
m14_11 -> m14_12  [key=0, style=solid];
m14_12 -> m14_8  [key=0, style=bold, color=blue];
m14_51 -> m14_10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalBase"];
m14_51 -> m14_11  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalBase"];
m14_51 -> m14_15  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalBase"];
m14_51 -> m14_16  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalBase"];
m14_51 -> m14_17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalBase"];
m14_51 -> m14_19  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalBase"];
m14_51 -> m14_24  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalBase"];
m14_51 -> m14_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalBase"];
m14_51 -> m14_29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalBase"];
m14_51 -> m14_30  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalBase"];
m14_51 -> m14_32  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalBase"];
m14_51 -> m14_38  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalBase"];
m14_51 -> m14_40  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalBase"];
m14_51 -> m14_42  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalBase"];
m17_55 -> m17_56  [key=0, style=solid];
m17_55 -> m17_57  [key=1, style=dashed, color=darkseagreen4, label=p];
m17_55 -> m17_58  [key=1, style=dashed, color=darkseagreen4, label=p];
m17_55 -> m17_34  [key=2, style=dotted];
m17_91 -> m17_92  [key=0, style=solid];
m17_91 -> m17_144  [key=2, style=dotted];
m17_91 -> m17_93  [key=1, style=dashed, color=darkseagreen4, label=b1];
m17_138 -> m17_52  [key=2, style=dotted];
m17_138 -> m17_139  [key=0, style=solid];
m17_453 -> m17_454  [key=0, style=solid];
m17_453 -> m17_455  [key=1, style=dashed, color=darkseagreen4, label="System.Dynamic.BinaryOperationBinder"];
m17_453 -> m17_457  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_453 -> m17_460  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_453 -> m17_463  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_453 -> m17_466  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_453 -> m17_469  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_453 -> m17_472  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_453 -> m17_482  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_454 -> m17_455  [key=0, style=solid];
m17_454 -> m17_457  [key=1, style=dashed, color=darkseagreen4, label=compareValue];
m17_454 -> m17_460  [key=1, style=dashed, color=darkseagreen4, label=compareValue];
m17_454 -> m17_463  [key=1, style=dashed, color=darkseagreen4, label=compareValue];
m17_454 -> m17_466  [key=1, style=dashed, color=darkseagreen4, label=compareValue];
m17_454 -> m17_469  [key=1, style=dashed, color=darkseagreen4, label=compareValue];
m17_454 -> m17_472  [key=1, style=dashed, color=darkseagreen4, label=compareValue];
m17_454 -> m17_482  [key=1, style=dashed, color=darkseagreen4, label=compareValue];
m17_455 -> m17_456  [key=0, style=solid];
m17_455 -> m17_459  [key=0, style=solid];
m17_455 -> m17_462  [key=0, style=solid];
m17_455 -> m17_465  [key=0, style=solid];
m17_455 -> m17_468  [key=0, style=solid];
m17_455 -> m17_471  [key=0, style=solid];
m17_455 -> m17_474  [key=0, style=solid];
m17_457 -> m17_458  [key=0, style=solid];
m17_457 -> m17_60  [key=2, style=dotted];
m17_460 -> m17_461  [key=0, style=solid];
m17_460 -> m17_60  [key=2, style=dotted];
m17_463 -> m17_464  [key=0, style=solid];
m17_463 -> m17_60  [key=2, style=dotted];
m17_466 -> m17_467  [key=0, style=solid];
m17_466 -> m17_60  [key=2, style=dotted];
m17_469 -> m17_470  [key=0, style=solid];
m17_469 -> m17_60  [key=2, style=dotted];
m17_472 -> m17_473  [key=0, style=solid];
m17_472 -> m17_60  [key=2, style=dotted];
m17_482 -> m17_483  [key=0, style=solid];
m17_482 -> m17_485  [key=0, style=solid];
m17_482 -> m17_165  [key=2, style=dotted];
m17_456 -> m17_457  [key=0, style=solid];
m17_459 -> m17_460  [key=0, style=solid];
m17_462 -> m17_463  [key=0, style=solid];
m17_465 -> m17_466  [key=0, style=solid];
m17_468 -> m17_469  [key=0, style=solid];
m17_471 -> m17_472  [key=0, style=solid];
m17_474 -> m17_475  [key=0, style=solid];
m17_458 -> m17_487  [key=0, style=solid];
m17_461 -> m17_487  [key=0, style=solid];
m17_464 -> m17_487  [key=0, style=solid];
m17_467 -> m17_487  [key=0, style=solid];
m17_470 -> m17_487  [key=0, style=solid];
m17_473 -> m17_487  [key=0, style=solid];
m17_475 -> m17_476  [key=0, style=solid];
m17_476 -> m17_477  [key=0, style=solid];
m17_477 -> m17_478  [key=0, style=solid];
m17_478 -> m17_479  [key=0, style=solid];
m17_479 -> m17_480  [key=0, style=solid];
m17_480 -> m17_481  [key=0, style=solid];
m17_481 -> m17_482  [key=0, style=solid];
m17_483 -> m17_484  [key=0, style=solid];
m17_483 -> m17_28  [key=2, style=dotted];
m17_483 -> m17_483  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m17_485 -> m17_486  [key=0, style=solid];
m17_485 -> m17_487  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m17_484 -> m17_487  [key=0, style=solid];
m17_486 -> m17_487  [key=0, style=solid];
m17_487 -> m17_453  [key=0, style=bold, color=blue];
m17_530 -> m17_531  [key=0, style=solid];
m17_531 -> m17_532  [key=0, style=solid];
m17_532 -> m17_530  [key=0, style=bold, color=blue];
m17_512 -> m17_513  [key=0, style=solid];
m17_513 -> m17_514  [key=0, style=solid];
m17_514 -> m17_512  [key=0, style=bold, color=blue];
m17_125 -> m17_126  [key=0, style=solid];
m17_125 -> m17_127  [key=0, style=solid];
m17_127 -> m17_131  [key=2, style=dotted];
m17_127 -> m17_128  [key=0, style=solid];
m17_127 -> m17_129  [key=1, style=dashed, color=darkseagreen4, label=uri1];
m17_126 -> m17_127  [key=0, style=solid];
m17_126 -> m17_126  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m17_126 -> m17_137  [key=0, style=solid];
m17_126 -> m17_150  [key=2, style=dotted];
m17_128 -> m17_128  [key=3, color=darkorchid, style=bold, label="Local variable string s"];
m17_128 -> m17_129  [key=0, style=solid];
m17_129 -> m17_129  [key=1, style=dashed, color=darkseagreen4, label=s];
m17_129 -> m17_130  [key=0, style=solid];
m17_129 -> m17_137  [key=0, style=solid];
m17_129 -> m17_153  [key=2, style=dotted];
m17_129 -> m17_154  [key=2, style=dotted];
m17_130 -> m17_125  [key=0, style=bold, color=blue];
m17_130 -> m17_131  [key=0, style=solid];
m17_272 -> m17_273  [key=0, style=solid];
m17_273 -> m17_274  [key=0, style=solid];
m17_273 -> m17_0  [key=2, style=dotted];
m17_274 -> m17_272  [key=0, style=bold, color=blue];
m17_274 -> m17_25  [key=2, style=dotted];
m17_274 -> m17_275  [key=0, style=solid];
m17_274 -> m17_283  [key=2, style=dotted];
m17_274 -> m17_278  [key=1, style=dashed, color=darkseagreen4, label=collection];
m17_274 -> m17_281  [key=1, style=dashed, color=darkseagreen4, label=collection];
m17_110 -> m17_137  [key=0, style=solid];
m17_110 -> m17_150  [key=2, style=dotted];
m17_152 -> m17_33  [key=2, style=dotted];
m17_152 -> m17_153  [key=0, style=solid];
m17_152 -> m17_154  [key=2, style=dotted];
m17_157 -> m17_158  [key=0, style=solid];
m17_158 -> m17_159  [key=0, style=solid];
m17_158 -> m17_56  [key=2, style=dotted];
m17_158 -> m17_160  [key=1, style=dashed, color=darkseagreen4, label=d1];
m17_158 -> m17_162  [key=1, style=dashed, color=darkseagreen4, label=d1];
m17_159 -> m17_157  [key=0, style=bold, color=blue];
m17_159 -> m17_160  [key=0, style=solid];
m17_159 -> m17_56  [key=2, style=dotted];
m17_159 -> m17_162  [key=1, style=dashed, color=darkseagreen4, label=d2];
m17_536 -> m17_537  [key=0, style=solid];
m17_537 -> m17_538  [key=0, style=solid];
m17_538 -> m17_536  [key=0, style=bold, color=blue];
m17_275 -> m17_276  [key=0, style=solid];
m17_275 -> n4  [key=2, style=dotted];
m17_275 -> m17_278  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_275 -> m17_280  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_275 -> m17_281  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenType?"];
m17_275 -> m17_282  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_275 -> m17_284  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_275 -> m17_286  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_275 -> m17_288  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_275 -> m17_290  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_275 -> m17_292  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_275 -> m17_294  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_275 -> m17_296  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_275 -> m17_298  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_275 -> m17_300  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_275 -> m17_302  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_275 -> m17_304  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_278 -> m17_279  [key=0, style=solid];
m17_278 -> m17_285  [key=2, style=dotted];
m17_278 -> m17_280  [key=0, style=solid];
m17_281 -> m17_282  [key=0, style=solid];
m17_281 -> m17_52  [key=2, style=dotted];
m17_281 -> m17_305  [key=0, style=solid];
m17_281 -> m17_306  [key=2, style=dotted];
m17_276 -> m17_277  [key=0, style=solid];
m17_276 -> m17_278  [key=0, style=solid];
m17_280 -> m17_281  [key=0, style=solid];
m17_280 -> m17_208  [key=2, style=dotted];
m17_280 -> m17_209  [key=2, style=dotted];
m17_280 -> m17_286  [key=2, style=dotted];
m17_280 -> m17_287  [key=2, style=dotted];
m17_280 -> m17_210  [key=2, style=dotted];
m17_280 -> m17_282  [key=0, style=solid];
m17_277 -> m17_278  [key=0, style=solid];
m17_277 -> m17_280  [key=1, style=dashed, color=darkseagreen4, label=sw];
m17_277 -> m17_284  [key=2, style=dotted];
m17_277 -> m17_279  [key=1, style=dashed, color=darkseagreen4, label=sw];
m17_277 -> m17_305  [key=0, style=solid];
m17_279 -> m17_52  [key=2, style=dotted];
m17_279 -> m17_280  [key=0, style=solid];
m17_279 -> m17_286  [key=2, style=dotted];
m17_279 -> m17_287  [key=2, style=dotted];
m17_279 -> m17_305  [key=0, style=solid];
m17_282 -> m17_273  [key=0, style=bold, color=blue];
m17_282 -> m17_283  [key=0, style=solid];
m17_282 -> m17_284  [key=0, style=solid];
m17_27 -> m17_28  [key=0, style=solid];
m17_27 -> m17_26  [key=0, style=bold, color=blue];
m17_28 -> m17_11  [key=2, style=dotted];
m17_28 -> m17_29  [key=0, style=solid];
m17_29 -> m17_33  [key=2, style=dotted];
m17_29 -> m17_30  [key=0, style=solid];
m17_29 -> m17_31  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m17_29 -> m17_28  [key=0, style=bold, color=blue];
m17_30 -> m17_31  [key=0, style=solid];
m17_30 -> m17_34  [key=2, style=dotted];
m17_31 -> m17_32  [key=0, style=solid];
m17_31 -> m17_35  [key=2, style=dotted];
m17_31 -> m17_34  [key=1, style=dashed, color=darkseagreen4, label=other];
m17_31 -> m17_36  [key=1, style=dashed, color=darkseagreen4, label=other];
m17_32 -> m17_27  [key=0, style=bold, color=blue];
m17_32 -> m17_33  [key=0, style=solid];
m17_32 -> m17_34  [key=0, style=solid];
m17_499 -> m17_500  [key=0, style=solid];
m17_500 -> m17_501  [key=0, style=solid];
m17_500 -> m17_502  [key=0, style=solid];
m17_501 -> m17_507  [key=0, style=solid];
m17_502 -> m17_503  [key=0, style=solid];
m17_502 -> m17_504  [key=0, style=solid];
m17_503 -> m17_507  [key=0, style=solid];
m17_504 -> m17_505  [key=0, style=solid];
m17_504 -> m17_506  [key=0, style=solid];
m17_505 -> m17_507  [key=0, style=solid];
m17_506 -> m17_507  [key=0, style=solid];
m17_506 -> m17_307  [key=2, style=dotted];
m17_506 -> m17_508  [key=2, style=dotted];
m17_507 -> m17_499  [key=0, style=bold, color=blue];
m17_4 -> m17_5  [key=0, style=solid];
m17_4 -> m17_409  [key=2, style=dotted];
m17_5 -> m17_4  [key=0, style=bold, color=blue];
m17_5 -> m17_0  [key=0, style=bold, color=blue];
m17_97 -> m17_98  [key=0, style=solid];
m17_265 -> m17_52  [key=2, style=dotted];
m17_265 -> m17_266  [key=0, style=solid];
m17_240 -> m17_241  [key=0, style=solid];
m17_240 -> m17_243  [key=0, style=solid];
m17_139 -> m17_158  [key=0, style=solid];
m17_139 -> m17_159  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_139 -> m17_132  [key=0, style=bold, color=blue];
m17_160 -> m17_161  [key=0, style=solid];
m17_160 -> m17_162  [key=0, style=solid];
m17_160 -> m17_164  [key=2, style=dotted];
m17_162 -> m17_163  [key=0, style=solid];
m17_162 -> m17_59  [key=2, style=dotted];
m17_162 -> m17_165  [key=1, style=dashed, color=darkseagreen4, label=a2];
m17_162 -> m17_157  [key=2, style=dotted];
m17_161 -> m17_163  [key=0, style=solid];
m17_161 -> m17_164  [key=1, style=dashed, color=darkseagreen4, label=a1];
m17_161 -> m17_162  [key=0, style=solid];
m17_161 -> m17_157  [key=2, style=dotted];
m17_163 -> m17_139  [key=0, style=bold, color=blue];
m17_163 -> m17_164  [key=0, style=solid];
m17_163 -> m17_165  [key=1, style=dashed, color=darkseagreen4, label=articles1];
m17_163 -> m17_171  [key=2, style=dotted];
m17_163 -> m17_166  [key=1, style=dashed, color=darkseagreen4, label=articles1];
m17_163 -> m17_168  [key=1, style=dashed, color=darkseagreen4, label=articles1];
m17_163 -> m17_169  [key=1, style=dashed, color=darkseagreen4, label=articles1];
m17_61 -> m17_62  [key=0, style=solid];
m17_61 -> m17_63  [key=0, style=solid];
m17_65 -> m17_33  [key=2, style=dotted];
m17_65 -> m17_66  [key=0, style=solid];
m17_65 -> m17_70  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m17_65 -> m17_72  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m17_65 -> m17_67  [key=0, style=solid];
m17_68 -> m17_52  [key=2, style=dotted];
m17_68 -> m17_69  [key=0, style=solid];
m17_63 -> m17_65  [key=1, style=dashed, color=darkseagreen4, label=testDictionary];
m17_63 -> m17_64  [key=0, style=solid];
m17_63 -> m17_74  [key=2, style=dotted];
m17_64 -> m17_65  [key=0, style=solid];
m17_64 -> m17_137  [key=0, style=solid];
m17_66 -> m17_67  [key=0, style=solid];
m17_66 -> m17_34  [key=2, style=dotted];
m17_66 -> m17_137  [key=0, style=solid];
m17_70 -> m17_71  [key=0, style=solid];
m17_70 -> m17_35  [key=2, style=dotted];
m17_70 -> m17_137  [key=0, style=solid];
m17_70 -> m17_39  [key=2, style=dotted];
m17_72 -> m17_73  [key=0, style=solid];
m17_72 -> m17_35  [key=2, style=dotted];
m17_72 -> m17_137  [key=0, style=solid];
m17_72 -> m17_39  [key=2, style=dotted];
m17_62 -> m17_51  [key=2, style=dotted];
m17_62 -> m17_68  [key=1, style=dashed, color=darkseagreen4, label=dateValue];
m17_62 -> m17_63  [key=0, style=solid];
m17_62 -> m17_64  [key=1, style=dashed, color=darkseagreen4, label=dateValue];
m17_62 -> m17_137  [key=0, style=solid];
m17_67 -> m17_68  [key=0, style=solid];
m17_67 -> m17_78  [key=0, style=solid];
m17_67 -> m17_84  [key=0, style=solid];
m17_67 -> m17_90  [key=0, style=solid];
m17_67 -> m17_94  [key=0, style=solid];
m17_67 -> m17_108  [key=0, style=solid];
m17_67 -> m17_118  [key=0, style=solid];
m17_67 -> m17_124  [key=0, style=solid];
m17_67 -> m17_130  [key=0, style=solid];
m17_67 -> m17_136  [key=0, style=solid];
m17_69 -> m17_70  [key=0, style=solid];
m17_69 -> m17_35  [key=2, style=dotted];
m17_69 -> m17_71  [key=0, style=solid];
m17_71 -> m17_72  [key=0, style=solid];
m17_71 -> m17_75  [key=2, style=dotted];
m17_71 -> m17_73  [key=0, style=solid];
m17_73 -> m17_61  [key=0, style=bold, color=blue];
m17_73 -> m17_74  [key=0, style=solid];
m17_73 -> m17_75  [key=0, style=solid];
m17_92 -> m17_93  [key=0, style=solid];
m17_92 -> m17_144  [key=2, style=dotted];
m17_95 -> m17_52  [key=2, style=dotted];
m17_95 -> m17_96  [key=0, style=solid];
m17_95 -> m17_97  [key=2, style=dotted];
m17_95 -> m17_102  [key=0, style=solid];
m17_94 -> m17_95  [key=0, style=solid];
m17_94 -> m17_34  [key=2, style=dotted];
m17_93 -> m17_94  [key=0, style=solid];
m17_93 -> m17_54  [key=3, color=darkorchid, style=bold, label="Local variable string value"];
m17_93 -> m17_137  [key=0, style=solid];
m17_93 -> m17_145  [key=2, style=dotted];
m17_96 -> m17_92  [key=0, style=bold, color=blue];
m17_96 -> m17_97  [key=0, style=solid];
m17_96 -> m17_101  [key=1, style=dashed, color=darkseagreen4, label=date1];
m17_16 -> m17_17  [key=0, style=solid, color=green];
m17_16 -> m17_25  [key=2, style=dotted];
m17_16 -> m17_18  [key=1, style=dashed, color=darkseagreen4, label=rocket];
m17_16 -> m17_21  [key=1, style=dashed, color=darkseagreen4, label=rocket];
m17_17 -> m17_16  [key=0, style=bold, color=blue];
m17_17 -> m17_18  [key=0, style=solid, color=green];
m17_60 -> m17_61  [key=0, style=solid];
m17_60 -> m17_63  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_65  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_67  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenType"];
m17_60 -> m17_69  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_70  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_71  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_72  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_73  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_74  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_75  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_76  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_77  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_79  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_80  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_81  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_82  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_83  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_87  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_88  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_91  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_92  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_95  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_96  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_98  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_99  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_100  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_102  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_104  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_105  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_106  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_109  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_111  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_112  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_119  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_121  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_122  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_125  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_127  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_128  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_131  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_133  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_134  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_60 -> m17_136  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenType"];
m17_22 -> m17_23  [key=0, style=solid];
m17_22 -> m17_24  [key=2, style=dotted];
m17_23 -> m17_22  [key=0, style=bold, color=blue];
m17_23 -> m17_11  [key=0, style=bold, color=blue];
m17_26 -> m17_27  [key=0, style=solid];
m17_141 -> m17_144  [key=1, style=dashed, color=darkseagreen4, label=test];
m17_141 -> m17_147  [key=1, style=dashed, color=darkseagreen4, label=test];
m17_141 -> m17_148  [key=1, style=dashed, color=darkseagreen4, label=test];
m17_141 -> m17_142  [key=0, style=solid];
m17_141 -> m17_150  [key=2, style=dotted];
m17_141 -> m17_143  [key=1, style=dashed, color=darkseagreen4, label=test];
m17_542 -> m17_543  [key=0, style=solid];
m17_543 -> m17_544  [key=0, style=solid];
m17_544 -> m17_542  [key=0, style=bold, color=blue];
m17_396 -> m17_397  [key=0, style=solid];
m17_396 -> m17_399  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_397 -> m17_398  [key=0, style=solid];
m17_397 -> m17_399  [key=0, style=solid];
m17_399 -> m17_400  [key=0, style=solid];
m17_399 -> m17_38  [key=2, style=dotted];
m17_398 -> m17_400  [key=0, style=solid];
m17_400 -> m17_396  [key=0, style=bold, color=blue];
m17_146 -> m17_110  [key=2, style=dotted];
m17_146 -> m17_147  [key=0, style=solid];
m17_146 -> m17_148  [key=1, style=dashed, color=darkseagreen4, label=test2];
m17_10 -> m17_11  [key=0, style=solid];
m17_539 -> m17_540  [key=0, style=solid];
m17_540 -> m17_541  [key=0, style=solid];
m17_541 -> m17_539  [key=0, style=bold, color=blue];
m17_210 -> m17_211  [key=0, style=solid];
m17_57 -> m17_52  [key=2, style=dotted];
m17_57 -> m17_58  [key=0, style=solid];
m17_57 -> m17_60  [key=2, style=dotted];
m17_98 -> m17_99  [key=0, style=solid];
m17_98 -> m17_100  [key=0, style=solid];
m17_101 -> m17_52  [key=2, style=dotted];
m17_101 -> m17_102  [key=0, style=solid];
m17_101 -> m17_97  [key=2, style=dotted];
m17_101 -> m17_137  [key=0, style=solid];
m17_101 -> m17_147  [key=2, style=dotted];
m17_100 -> m17_101  [key=0, style=solid];
m17_100 -> m17_34  [key=2, style=dotted];
m17_100 -> m17_146  [key=2, style=dotted];
m17_99 -> m17_100  [key=0, style=solid];
m17_99 -> m17_99  [key=3, color=darkorchid, style=bold, label="Local variable string value"];
m17_99 -> m17_101  [key=0, style=solid];
m17_102 -> m17_98  [key=0, style=bold, color=blue];
m17_102 -> m17_103  [key=0, style=solid];
m17_102 -> m17_107  [key=1, style=dashed, color=darkseagreen4, label=date1];
m17_527 -> m17_528  [key=0, style=solid];
m17_528 -> m17_529  [key=0, style=solid];
m17_529 -> m17_527  [key=0, style=bold, color=blue];
m17_284 -> m17_285  [key=0, style=solid];
m17_284 -> m17_286  [key=0, style=solid];
m17_286 -> m17_287  [key=0, style=solid];
m17_286 -> m17_288  [key=0, style=solid];
m17_288 -> m17_289  [key=0, style=solid];
m17_288 -> m17_290  [key=0, style=solid];
m17_290 -> m17_291  [key=0, style=solid];
m17_290 -> m17_292  [key=0, style=solid];
m17_290 -> n4  [key=2, style=dotted];
m17_290 -> m17_293  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m17_290 -> m17_295  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m17_290 -> m17_297  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m17_290 -> m17_299  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m17_292 -> m17_293  [key=0, style=solid];
m17_292 -> m17_294  [key=0, style=solid];
m17_292 -> m17_284  [key=2, style=dotted];
m17_294 -> m17_295  [key=0, style=solid];
m17_294 -> m17_296  [key=0, style=solid];
m17_294 -> m17_52  [key=2, style=dotted];
m17_294 -> m17_286  [key=2, style=dotted];
m17_294 -> m17_287  [key=2, style=dotted];
m17_296 -> m17_297  [key=0, style=solid];
m17_296 -> m17_298  [key=0, style=solid];
m17_296 -> m17_52  [key=2, style=dotted];
m17_298 -> m17_299  [key=0, style=solid];
m17_298 -> m17_300  [key=0, style=solid];
m17_298 -> m17_52  [key=2, style=dotted];
m17_300 -> m17_301  [key=0, style=solid];
m17_300 -> m17_302  [key=0, style=solid];
m17_300 -> m17_52  [key=2, style=dotted];
m17_302 -> m17_303  [key=0, style=solid];
m17_302 -> m17_304  [key=0, style=solid];
m17_302 -> m17_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Product"];
m17_302 -> m17_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Product"];
m17_302 -> m17_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Product"];
m17_304 -> m17_305  [key=0, style=solid];
m17_304 -> m17_150  [key=2, style=dotted];
m17_304 -> m17_307  [key=2, style=dotted];
m17_304 -> m17_156  [key=2, style=dotted];
m17_304 -> m17_158  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonSerializerTest.Article"];
m17_283 -> m17_305  [key=0, style=solid];
m17_285 -> m17_305  [key=0, style=solid];
m17_287 -> m17_305  [key=0, style=solid];
m17_289 -> m17_305  [key=0, style=solid];
m17_289 -> m17_11  [key=2, style=dotted];
m17_289 -> m17_290  [key=0, style=solid];
m17_289 -> m17_293  [key=1, style=dashed, color=darkseagreen4, label=s1];
m17_289 -> m17_300  [key=1, style=dashed, color=darkseagreen4, label=s1];
m17_291 -> m17_305  [key=0, style=solid];
m17_291 -> m17_292  [key=0, style=solid];
m17_293 -> m17_305  [key=0, style=solid];
m17_293 -> m17_294  [key=0, style=solid];
m17_293 -> m17_285  [key=2, style=dotted];
m17_295 -> m17_305  [key=0, style=solid];
m17_295 -> m17_296  [key=0, style=solid];
m17_295 -> m17_208  [key=2, style=dotted];
m17_295 -> m17_209  [key=2, style=dotted];
m17_295 -> m17_210  [key=2, style=dotted];
m17_297 -> m17_305  [key=0, style=solid];
m17_297 -> m17_300  [key=1, style=dashed, color=darkseagreen4, label=s3];
m17_297 -> m17_298  [key=0, style=solid];
m17_297 -> m17_208  [key=2, style=dotted];
m17_297 -> m17_209  [key=2, style=dotted];
m17_297 -> m17_210  [key=2, style=dotted];
m17_299 -> m17_305  [key=0, style=solid];
m17_299 -> m17_300  [key=0, style=solid];
m17_299 -> m17_208  [key=2, style=dotted];
m17_299 -> m17_209  [key=2, style=dotted];
m17_299 -> m17_210  [key=2, style=dotted];
m17_301 -> m17_305  [key=0, style=solid];
m17_301 -> m17_288  [key=0, style=bold, color=blue];
m17_303 -> m17_305  [key=0, style=solid];
m17_303 -> m17_14  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Tests.Store"];
m17_303 -> m17_12  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Store"];
m17_303 -> m17_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Store"];
m17_303 -> m17_15  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Store"];
m17_303 -> m17_21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Store"];
m17_303 -> m17_22  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Store"];
m17_305 -> m17_275  [key=0, style=bold, color=blue];
m17_0 -> m17_1  [key=0, style=solid, color=green];
m17_0 -> m17_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenType"];
m17_0 -> m17_4  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_1 -> m17_2  [key=0, style=solid, color=green];
m17_1 -> m17_4  [key=0, style=solid, color=green];
m17_2 -> m17_3  [key=0, style=solid];
m17_3 -> m17_5  [key=0, style=solid];
m17_3 -> m17_0  [key=0, style=bold, color=blue];
m17_74 -> m17_137  [key=0, style=solid];
m17_74 -> m17_138  [key=2, style=dotted];
m17_74 -> m17_55  [key=2, style=dotted];
m17_75 -> m17_76  [key=0, style=solid];
m17_75 -> m17_77  [key=0, style=solid];
m17_76 -> m17_137  [key=0, style=solid];
m17_76 -> m17_139  [key=2, style=dotted];
m17_76 -> m17_77  [key=0, style=solid];
m17_77 -> m17_137  [key=0, style=solid];
m17_77 -> m17_140  [key=2, style=dotted];
m17_77 -> m17_141  [key=2, style=dotted];
m17_77 -> m17_81  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m17_77 -> m17_78  [key=0, style=solid];
m17_77 -> m17_89  [key=2, style=dotted];
m17_77 -> m17_79  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m17_77 -> m17_80  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m17_77 -> m17_83  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m17_79 -> m17_80  [key=0, style=solid];
m17_79 -> m17_81  [key=0, style=solid];
m17_80 -> m17_137  [key=0, style=solid];
m17_80 -> m17_39  [key=2, style=dotted];
m17_80 -> m17_81  [key=0, style=solid];
m17_81 -> m17_82  [key=0, style=solid];
m17_81 -> m17_83  [key=0, style=solid];
m17_81 -> m17_33  [key=2, style=dotted];
m17_82 -> m17_137  [key=0, style=solid];
m17_82 -> m17_39  [key=2, style=dotted];
m17_82 -> m17_84  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m17_82 -> m17_85  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m17_82 -> m17_87  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m17_82 -> m17_83  [key=0, style=solid];
m17_82 -> m17_34  [key=2, style=dotted];
m17_82 -> m17_86  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m17_83 -> m17_137  [key=0, style=solid];
m17_83 -> m17_139  [key=2, style=dotted];
m17_83 -> m17_84  [key=0, style=solid];
m17_83 -> m17_90  [key=2, style=dotted];
m17_87 -> m17_88  [key=0, style=solid];
m17_87 -> m17_142  [key=2, style=dotted];
m17_87 -> m17_89  [key=1, style=dashed, color=darkseagreen4, label=s1];
m17_87 -> m17_52  [key=2, style=dotted];
m17_88 -> m17_89  [key=0, style=solid];
m17_88 -> m17_142  [key=2, style=dotted];
m17_88 -> m17_76  [key=0, style=bold, color=blue];
m17_104 -> m17_105  [key=0, style=solid];
m17_104 -> m17_106  [key=0, style=solid];
m17_104 -> m17_33  [key=2, style=dotted];
m17_104 -> m17_109  [key=2, style=dotted];
m17_105 -> m17_107  [key=0, style=solid];
m17_105 -> m17_110  [key=2, style=dotted];
m17_105 -> m17_106  [key=0, style=solid];
m17_106 -> m17_107  [key=0, style=solid];
m17_106 -> m17_148  [key=2, style=dotted];
m17_106 -> m17_146  [key=2, style=dotted];
m17_106 -> m17_52  [key=2, style=dotted];
m17_109 -> m17_110  [key=0, style=solid];
m17_109 -> m17_111  [key=0, style=solid];
m17_111 -> m17_112  [key=0, style=solid];
m17_111 -> m17_113  [key=1, style=dashed, color=darkseagreen4, label=bytes1];
m17_111 -> m17_117  [key=1, style=dashed, color=darkseagreen4, label=bytes1];
m17_112 -> m17_113  [key=0, style=solid];
m17_112 -> m17_115  [key=1, style=dashed, color=darkseagreen4, label=bytes2];
m17_112 -> m17_117  [key=1, style=dashed, color=darkseagreen4, label=bytes2];
m17_112 -> m17_33  [key=2, style=dotted];
m17_112 -> m17_116  [key=2, style=dotted];
m17_119 -> m17_120  [key=0, style=solid];
m17_119 -> m17_121  [key=0, style=solid];
m17_119 -> m17_52  [key=2, style=dotted];
m17_121 -> m17_122  [key=0, style=solid];
m17_121 -> m17_123  [key=1, style=dashed, color=darkseagreen4, label=guid1];
m17_121 -> m17_52  [key=2, style=dotted];
m17_122 -> m17_123  [key=0, style=solid];
m17_122 -> m17_52  [key=2, style=dotted];
m17_131 -> m17_132  [key=0, style=solid];
m17_131 -> m17_133  [key=0, style=solid];
m17_133 -> m17_134  [key=0, style=solid];
m17_133 -> m17_135  [key=1, style=dashed, color=darkseagreen4, label=ts1];
m17_133 -> m17_133  [key=3, color=darkorchid, style=bold, label="Local variable string jsonText"];
m17_134 -> m17_135  [key=0, style=solid];
m17_134 -> m17_131  [key=2, style=dotted];
m17_134 -> m17_136  [key=1, style=dashed, color=darkseagreen4, label=o];
m17_136 -> m17_137  [key=0, style=solid];
m17_136 -> m17_156  [key=2, style=dotted];
m17_136 -> m17_157  [key=2, style=dotted];
m17_78 -> m17_79  [key=0, style=solid];
m17_84 -> m17_85  [key=0, style=solid];
m17_84 -> m17_52  [key=2, style=dotted];
m17_90 -> m17_91  [key=0, style=solid];
m17_108 -> m17_109  [key=0, style=solid];
m17_108 -> m17_103  [key=0, style=bold, color=blue];
m17_118 -> m17_119  [key=0, style=solid];
m17_118 -> m17_33  [key=2, style=dotted];
m17_118 -> m17_124  [key=2, style=dotted];
m17_124 -> m17_125  [key=0, style=solid];
m17_85 -> m17_86  [key=0, style=solid];
m17_85 -> m17_52  [key=2, style=dotted];
m17_86 -> m17_87  [key=0, style=solid];
m17_86 -> m17_91  [key=2, style=dotted];
m17_89 -> m17_137  [key=0, style=solid];
m17_89 -> m17_143  [key=2, style=dotted];
m17_103 -> m17_104  [key=0, style=solid];
m17_107 -> m17_137  [key=0, style=solid];
m17_107 -> m17_149  [key=2, style=dotted];
m17_107 -> m17_107  [key=1, style=dashed, color=darkseagreen4, label=date1];
m17_107 -> m17_52  [key=2, style=dotted];
m17_107 -> m17_108  [key=0, style=solid];
m17_113 -> m17_114  [key=0, style=solid];
m17_113 -> m17_115  [key=0, style=solid];
m17_113 -> m17_110  [key=2, style=dotted];
m17_117 -> m17_137  [key=0, style=solid];
m17_117 -> m17_151  [key=2, style=dotted];
m17_117 -> m17_118  [key=0, style=solid];
m17_115 -> m17_116  [key=0, style=solid];
m17_115 -> m17_117  [key=0, style=solid];
m17_115 -> m17_111  [key=0, style=bold, color=blue];
m17_114 -> m17_137  [key=0, style=solid];
m17_114 -> m17_52  [key=2, style=dotted];
m17_114 -> m17_115  [key=0, style=solid];
m17_116 -> m17_137  [key=0, style=solid];
m17_120 -> m17_137  [key=0, style=solid];
m17_120 -> m17_150  [key=2, style=dotted];
m17_120 -> m17_110  [key=2, style=dotted];
m17_120 -> m17_121  [key=0, style=solid];
m17_120 -> m17_122  [key=1, style=dashed, color=darkseagreen4, label=c];
m17_123 -> m17_137  [key=0, style=solid];
m17_123 -> m17_152  [key=2, style=dotted];
m17_123 -> m17_123  [key=1, style=dashed, color=darkseagreen4, label=guid1];
m17_123 -> m17_117  [key=0, style=bold, color=blue];
m17_132 -> m17_137  [key=0, style=solid];
m17_132 -> m17_150  [key=2, style=dotted];
m17_132 -> m17_133  [key=0, style=solid];
m17_135 -> m17_137  [key=0, style=solid];
m17_135 -> m17_155  [key=2, style=dotted];
m17_135 -> m17_135  [key=1, style=dashed, color=darkseagreen4, label=ts1];
m17_135 -> m17_52  [key=2, style=dotted];
m17_135 -> m17_136  [key=0, style=solid];
m17_137 -> m17_60  [key=0, style=bold, color=blue];
m17_137 -> m17_138  [key=0, style=solid];
m17_140 -> m17_141  [key=0, style=solid];
m17_151 -> m17_152  [key=0, style=solid];
m17_153 -> m17_151  [key=0, style=bold, color=blue];
m17_423 -> m17_427  [key=0, style=solid];
m17_423 -> m17_431  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_427 -> m17_428  [key=0, style=solid];
m17_427 -> m17_429  [key=0, style=solid];
m17_431 -> m17_433  [key=0, style=solid];
m17_431 -> m17_434  [key=2, style=dotted];
m17_428 -> m17_433  [key=0, style=solid];
m17_429 -> m17_430  [key=0, style=solid];
m17_429 -> m17_431  [key=1, style=dashed, color=darkseagreen4, label=formattable];
m17_430 -> m17_431  [key=0, style=solid];
m17_430 -> m17_432  [key=0, style=solid];
m17_432 -> m17_433  [key=0, style=solid];
m17_432 -> m17_265  [key=2, style=dotted];
m17_433 -> m17_423  [key=0, style=bold, color=blue];
m17_545 -> m17_546  [key=0, style=solid];
m17_546 -> m17_547  [key=0, style=solid];
m17_547 -> m17_545  [key=0, style=bold, color=blue];
m17_11 -> m17_10  [key=0, style=bold, color=blue];
m17_11 -> m17_12  [key=0, style=solid];
m17_306 -> m17_308  [key=0, style=solid];
m17_306 -> m17_310  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenType?"];
m17_306 -> m17_314  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenType?"];
m17_308 -> m17_309  [key=0, style=solid];
m17_308 -> m17_310  [key=0, style=solid];
m17_310 -> m17_311  [key=0, style=solid];
m17_310 -> m17_315  [key=0, style=solid];
m17_314 -> m17_316  [key=0, style=solid];
m17_309 -> m17_316  [key=0, style=solid];
m17_311 -> m17_312  [key=0, style=solid];
m17_315 -> m17_316  [key=0, style=solid];
m17_312 -> m17_313  [key=0, style=solid];
m17_313 -> m17_314  [key=0, style=solid];
m17_316 -> m17_306  [key=0, style=bold, color=blue];
m17_246 -> m17_247  [key=0, style=solid];
m17_148 -> m17_52  [key=2, style=dotted];
m17_148 -> m17_149  [key=0, style=solid];
m17_56 -> m17_52  [key=2, style=dotted];
m17_56 -> m17_57  [key=0, style=solid];
m17_410 -> m17_411  [key=0, style=solid];
m17_411 -> m17_412  [key=0, style=solid];
m17_411 -> m17_413  [key=0, style=solid];
m17_412 -> m17_414  [key=0, style=solid];
m17_413 -> m17_414  [key=0, style=solid];
m17_413 -> m17_392  [key=2, style=dotted];
m17_414 -> m17_410  [key=0, style=bold, color=blue];
m17_34 -> m17_35  [key=0, style=solid];
m17_34 -> m17_36  [key=0, style=solid];
m17_208 -> m17_209  [key=0, style=solid];
m17_171 -> m17_172  [key=0, style=solid];
m17_171 -> m17_174  [key=0, style=solid];
m17_258 -> m17_259  [key=0, style=solid];
m17_25 -> m17_24  [key=0, style=bold, color=blue];
m17_147 -> m17_52  [key=2, style=dotted];
m17_147 -> m17_148  [key=0, style=solid];
m17_38 -> m17_394  [key=0, style=solid];
m17_38 -> m17_39  [key=0, style=solid];
m17_394 -> m17_395  [key=0, style=solid];
m17_394 -> m17_60  [key=2, style=dotted];
m17_395 -> m17_38  [key=0, style=bold, color=blue];
m17_435 -> m17_436  [key=0, style=solid];
m17_436 -> m17_437  [key=0, style=solid];
m17_436 -> m17_438  [key=2, style=dotted];
m17_436 -> m17_439  [key=2, style=dotted];
m17_437 -> m17_435  [key=0, style=bold, color=blue];
m17_14 -> m17_15  [key=0, style=solid, color=green];
m17_14 -> m17_24  [key=2, style=dotted, color=green];
m17_15 -> m17_14  [key=0, style=bold, color=blue];
m17_15 -> m17_16  [key=0, style=solid];
m17_15 -> m17_24  [key=2, style=dotted];
m17_144 -> m17_33  [key=2, style=dotted];
m17_144 -> m17_145  [key=0, style=solid];
m17_144 -> m17_146  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m17_236 -> m17_237  [key=0, style=solid];
m17_548 -> m17_549  [key=0, style=solid];
m17_549 -> m17_550  [key=0, style=solid];
m17_550 -> m17_548  [key=0, style=bold, color=blue];
m17_164 -> m17_24  [key=2, style=dotted];
m17_164 -> m17_165  [key=0, style=solid];
m17_165 -> m17_24  [key=2, style=dotted];
m17_165 -> m17_166  [key=0, style=solid];
m17_165 -> m17_167  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.ExpressionType"];
m17_165 -> m17_168  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_165 -> m17_170  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_165 -> m17_171  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_165 -> m17_174  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_165 -> m17_175  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_165 -> m17_176  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.ExpressionType"];
m17_165 -> m17_193  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_165 -> m17_194  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_165 -> m17_197  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_165 -> m17_198  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_165 -> m17_199  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.ExpressionType"];
m17_165 -> m17_216  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_165 -> m17_217  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_165 -> m17_220  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_165 -> m17_221  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_165 -> m17_222  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.ExpressionType"];
m17_165 -> m17_239  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_165 -> m17_240  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_165 -> m17_243  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_165 -> m17_244  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_165 -> m17_245  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.ExpressionType"];
m17_166 -> m17_167  [key=0, style=solid];
m17_166 -> m17_33  [key=2, style=dotted];
m17_166 -> m17_170  [key=0, style=solid];
m17_168 -> m17_169  [key=0, style=solid];
m17_168 -> m17_52  [key=2, style=dotted];
m17_168 -> m17_265  [key=2, style=dotted];
m17_169 -> m17_170  [key=0, style=solid];
m17_169 -> m17_52  [key=2, style=dotted];
m17_169 -> m17_264  [key=0, style=solid];
m17_167 -> m17_168  [key=0, style=solid];
m17_167 -> m17_169  [key=1, style=dashed, color=darkseagreen4, label=articles2];
m17_167 -> m17_110  [key=2, style=dotted];
m17_167 -> m17_170  [key=0, style=solid];
m17_170 -> m17_160  [key=0, style=bold, color=blue];
m17_170 -> m17_171  [key=0, style=solid];
m17_170 -> m17_193  [key=0, style=solid];
m17_145 -> m17_52  [key=2, style=dotted];
m17_145 -> m17_146  [key=0, style=solid];
m17_53 -> m17_54  [key=0, style=solid];
m17_58 -> m17_52  [key=2, style=dotted];
m17_58 -> m17_59  [key=0, style=solid];
m17_54 -> m17_55  [key=0, style=solid];
m17_54 -> m17_54  [key=3, color=darkorchid, style=bold, label="Local variable string value"];
m17_59 -> m17_53  [key=0, style=bold, color=blue];
m17_238 -> m17_264  [key=0, style=solid];
m17_188 -> m17_189  [key=0, style=solid];
m17_188 -> m17_264  [key=0, style=solid];
m17_189 -> m17_25  [key=2, style=dotted];
m17_189 -> m17_190  [key=0, style=solid];
m17_189 -> m17_191  [key=1, style=dashed, color=darkseagreen4, label=product];
m17_189 -> m17_192  [key=1, style=dashed, color=darkseagreen4, label=product];
m17_189 -> m17_193  [key=1, style=dashed, color=darkseagreen4, label=product];
m17_189 -> m17_194  [key=1, style=dashed, color=darkseagreen4, label=product];
m17_190 -> m17_191  [key=0, style=solid];
m17_191 -> m17_192  [key=0, style=solid];
m17_191 -> m17_51  [key=2, style=dotted];
m17_192 -> m17_193  [key=0, style=solid];
m17_192 -> m17_264  [key=0, style=solid];
m17_193 -> m17_194  [key=0, style=solid];
m17_193 -> m17_216  [key=0, style=solid];
m17_194 -> m17_33  [key=2, style=dotted];
m17_194 -> m17_195  [key=0, style=solid];
m17_194 -> m17_198  [key=1, style=dashed, color=darkseagreen4, label=output];
m17_194 -> m17_197  [key=0, style=solid];
m17_195 -> m17_196  [key=0, style=solid];
m17_195 -> n4  [key=2, style=dotted];
m17_195 -> m17_199  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m17_198 -> m17_199  [key=0, style=solid];
m17_198 -> m17_208  [key=2, style=dotted];
m17_198 -> m17_209  [key=2, style=dotted];
m17_198 -> m17_138  [key=2, style=dotted];
m17_198 -> m17_202  [key=1, style=dashed, color=darkseagreen4, label=d2];
m17_198 -> m17_206  [key=1, style=dashed, color=darkseagreen4, label=d2];
m17_198 -> m17_210  [key=1, style=dashed, color=darkseagreen4, label=d2];
m17_198 -> m17_214  [key=1, style=dashed, color=darkseagreen4, label=d2];
m17_201 -> m17_52  [key=2, style=dotted];
m17_201 -> m17_202  [key=0, style=solid];
m17_202 -> m17_52  [key=2, style=dotted];
m17_202 -> m17_51  [key=2, style=dotted];
m17_202 -> m17_203  [key=0, style=solid];
m17_203 -> m17_52  [key=2, style=dotted];
m17_203 -> m17_204  [key=0, style=solid];
m17_203 -> m17_264  [key=0, style=solid];
m17_204 -> m17_52  [key=2, style=dotted];
m17_204 -> m17_205  [key=0, style=solid];
m17_205 -> m17_52  [key=2, style=dotted];
m17_205 -> m17_206  [key=0, style=solid];
m17_196 -> m17_197  [key=0, style=solid];
m17_196 -> m17_264  [key=0, style=solid];
m17_199 -> m17_200  [key=0, style=solid];
m17_199 -> m17_210  [key=2, style=dotted];
m17_199 -> m17_204  [key=0, style=solid];
m17_199 -> m17_208  [key=0, style=solid];
m17_199 -> m17_212  [key=0, style=solid];
m17_197 -> m17_198  [key=0, style=solid];
m17_197 -> m17_138  [key=2, style=dotted];
m17_197 -> m17_202  [key=1, style=dashed, color=darkseagreen4, label=d1];
m17_197 -> m17_206  [key=1, style=dashed, color=darkseagreen4, label=d1];
m17_197 -> m17_210  [key=1, style=dashed, color=darkseagreen4, label=d1];
m17_197 -> m17_214  [key=1, style=dashed, color=darkseagreen4, label=d1];
m17_200 -> m17_201  [key=0, style=solid];
m17_200 -> m17_202  [key=1, style=dashed, color=darkseagreen4, label=deserializedProductShort];
m17_200 -> m17_203  [key=1, style=dashed, color=darkseagreen4, label=deserializedProductShort];
m17_200 -> m17_204  [key=1, style=dashed, color=darkseagreen4, label=deserializedProductShort];
m17_200 -> m17_205  [key=1, style=dashed, color=darkseagreen4, label=deserializedProductShort];
m17_206 -> m17_188  [key=0, style=bold, color=blue];
m17_206 -> m17_207  [key=0, style=solid];
m17_6 -> m17_7  [key=0, style=solid];
m17_7 -> m17_6  [key=0, style=bold, color=blue];
m17_7 -> m17_8  [key=0, style=solid];
m17_524 -> m17_525  [key=0, style=solid];
m17_525 -> m17_526  [key=0, style=solid];
m17_526 -> m17_524  [key=0, style=bold, color=blue];
m17_509 -> m17_510  [key=0, style=solid];
m17_510 -> m17_511  [key=0, style=solid];
m17_511 -> m17_509  [key=0, style=bold, color=blue];
m17_174 -> m17_175  [key=0, style=solid];
m17_174 -> m17_51  [key=2, style=dotted];
m17_174 -> m17_179  [key=1, style=dashed, color=darkseagreen4, label=i1];
m17_174 -> m17_183  [key=1, style=dashed, color=darkseagreen4, label=i1];
m17_174 -> m17_187  [key=1, style=dashed, color=darkseagreen4, label=i1];
m17_174 -> m17_191  [key=1, style=dashed, color=darkseagreen4, label=i1];
m17_174 -> m17_33  [key=2, style=dotted];
m17_175 -> m17_176  [key=0, style=solid];
m17_175 -> m17_51  [key=2, style=dotted];
m17_175 -> m17_179  [key=1, style=dashed, color=darkseagreen4, label=i2];
m17_175 -> m17_183  [key=1, style=dashed, color=darkseagreen4, label=i2];
m17_175 -> m17_187  [key=1, style=dashed, color=darkseagreen4, label=i2];
m17_175 -> m17_191  [key=1, style=dashed, color=darkseagreen4, label=i2];
m17_175 -> m17_110  [key=2, style=dotted];
m17_176 -> m17_177  [key=0, style=solid];
m17_176 -> m17_181  [key=0, style=solid];
m17_176 -> m17_185  [key=0, style=solid];
m17_176 -> m17_189  [key=0, style=solid];
m17_176 -> m17_52  [key=2, style=dotted];
m17_216 -> m17_217  [key=0, style=solid];
m17_216 -> m17_239  [key=0, style=solid];
m17_216 -> m17_52  [key=2, style=dotted];
m17_217 -> m17_218  [key=0, style=solid];
m17_217 -> m17_220  [key=0, style=solid];
m17_217 -> m17_52  [key=2, style=dotted];
m17_220 -> m17_221  [key=0, style=solid];
m17_220 -> m17_56  [key=2, style=dotted];
m17_220 -> m17_225  [key=1, style=dashed, color=darkseagreen4, label=d1];
m17_220 -> m17_229  [key=1, style=dashed, color=darkseagreen4, label=d1];
m17_220 -> m17_233  [key=1, style=dashed, color=darkseagreen4, label=d1];
m17_220 -> m17_237  [key=1, style=dashed, color=darkseagreen4, label=d1];
m17_221 -> m17_222  [key=0, style=solid];
m17_221 -> m17_56  [key=2, style=dotted];
m17_221 -> m17_225  [key=1, style=dashed, color=darkseagreen4, label=d2];
m17_221 -> m17_229  [key=1, style=dashed, color=darkseagreen4, label=d2];
m17_221 -> m17_233  [key=1, style=dashed, color=darkseagreen4, label=d2];
m17_221 -> m17_237  [key=1, style=dashed, color=darkseagreen4, label=d2];
m17_222 -> m17_223  [key=0, style=solid];
m17_222 -> m17_227  [key=0, style=solid];
m17_222 -> m17_231  [key=0, style=solid];
m17_222 -> m17_235  [key=0, style=solid];
m17_239 -> m17_240  [key=0, style=solid];
m17_239 -> m17_262  [key=0, style=solid];
m17_243 -> m17_244  [key=0, style=solid];
m17_243 -> m17_140  [key=2, style=dotted];
m17_243 -> m17_248  [key=1, style=dashed, color=darkseagreen4, label=l1];
m17_243 -> m17_252  [key=1, style=dashed, color=darkseagreen4, label=l1];
m17_243 -> m17_256  [key=1, style=dashed, color=darkseagreen4, label=l1];
m17_243 -> m17_260  [key=1, style=dashed, color=darkseagreen4, label=l1];
m17_243 -> m17_33  [key=2, style=dotted];
m17_244 -> m17_245  [key=0, style=solid];
m17_244 -> m17_140  [key=2, style=dotted];
m17_244 -> m17_248  [key=1, style=dashed, color=darkseagreen4, label=l2];
m17_244 -> m17_252  [key=1, style=dashed, color=darkseagreen4, label=l2];
m17_244 -> m17_256  [key=1, style=dashed, color=darkseagreen4, label=l2];
m17_244 -> m17_260  [key=1, style=dashed, color=darkseagreen4, label=l2];
m17_244 -> m17_52  [key=2, style=dotted];
m17_245 -> m17_246  [key=0, style=solid];
m17_245 -> m17_250  [key=0, style=solid];
m17_245 -> m17_254  [key=0, style=solid];
m17_245 -> m17_258  [key=0, style=solid];
m17_245 -> m17_241  [key=0, style=bold, color=blue];
m17_172 -> m17_173  [key=0, style=solid];
m17_173 -> m17_264  [key=0, style=solid];
m17_173 -> m17_174  [key=0, style=solid];
m17_173 -> m17_176  [key=1, style=dashed, color=darkseagreen4, label=r1];
m17_173 -> m17_178  [key=2, style=dotted];
m17_179 -> m17_180  [key=0, style=solid];
m17_183 -> m17_184  [key=0, style=solid];
m17_187 -> m17_188  [key=0, style=solid];
m17_187 -> m17_179  [key=0, style=bold, color=blue];
m17_177 -> m17_178  [key=0, style=solid];
m17_177 -> m17_172  [key=0, style=bold, color=blue];
m17_181 -> m17_182  [key=0, style=solid];
m17_185 -> m17_186  [key=0, style=solid];
m17_185 -> m17_33  [key=2, style=dotted];
m17_178 -> m17_179  [key=0, style=solid];
m17_180 -> m17_264  [key=0, style=solid];
m17_180 -> m17_25  [key=2, style=dotted];
m17_180 -> m17_181  [key=0, style=solid];
m17_180 -> m17_182  [key=1, style=dashed, color=darkseagreen4, label=product];
m17_180 -> m17_183  [key=1, style=dashed, color=darkseagreen4, label=product];
m17_180 -> m17_184  [key=1, style=dashed, color=darkseagreen4, label=product];
m17_180 -> m17_185  [key=1, style=dashed, color=darkseagreen4, label=product];
m17_182 -> m17_183  [key=0, style=solid];
m17_182 -> m17_51  [key=2, style=dotted];
m17_184 -> m17_264  [key=0, style=solid];
m17_184 -> m17_185  [key=0, style=solid];
m17_186 -> m17_187  [key=0, style=solid];
m17_186 -> m17_34  [key=2, style=dotted];
m17_214 -> m17_215  [key=0, style=solid];
m17_214 -> m17_217  [key=1, style=dashed, color=darkseagreen4, label=dataContractResult];
m17_214 -> m17_220  [key=2, style=dotted];
m17_214 -> m17_221  [key=2, style=dotted];
m17_214 -> m17_222  [key=2, style=dotted];
m17_212 -> m17_213  [key=0, style=solid];
m17_212 -> m17_215  [key=1, style=dashed, color=darkseagreen4, label=json];
m17_212 -> m17_214  [key=1, style=dashed, color=darkseagreen4, label=json];
m17_212 -> m17_212  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m17_207 -> m17_264  [key=0, style=solid];
m17_209 -> m17_210  [key=0, style=solid];
m17_211 -> m17_264  [key=0, style=solid];
m17_211 -> m17_212  [key=0, style=solid];
m17_213 -> m17_214  [key=0, style=solid];
m17_213 -> m17_219  [key=2, style=dotted];
m17_215 -> m17_264  [key=0, style=solid];
m17_215 -> m17_110  [key=2, style=dotted];
m17_215 -> m17_217  [key=1, style=dashed, color=darkseagreen4, label=jsonNetResult];
m17_215 -> m17_216  [key=0, style=solid];
m17_218 -> m17_219  [key=0, style=solid];
m17_218 -> m17_211  [key=0, style=bold, color=blue];
m17_219 -> m17_264  [key=0, style=solid];
m17_225 -> m17_226  [key=0, style=solid];
m17_229 -> m17_230  [key=0, style=solid];
m17_229 -> m17_238  [key=2, style=dotted];
m17_233 -> m17_234  [key=0, style=solid];
m17_233 -> m17_52  [key=2, style=dotted];
m17_237 -> m17_238  [key=0, style=solid];
m17_223 -> m17_224  [key=0, style=solid];
m17_227 -> m17_228  [key=0, style=solid];
m17_227 -> m17_219  [key=2, style=dotted];
m17_231 -> m17_232  [key=0, style=solid];
m17_231 -> m17_240  [key=2, style=dotted];
m17_231 -> m17_233  [key=1, style=dashed, color=darkseagreen4, label=expected];
m17_235 -> m17_236  [key=0, style=solid];
m17_224 -> m17_225  [key=0, style=solid];
m17_224 -> m17_26  [key=2, style=dotted];
m17_224 -> m17_235  [key=2, style=dotted];
m17_224 -> m17_228  [key=1, style=dashed, color=darkseagreen4, label=testDates];
m17_224 -> m17_232  [key=1, style=dashed, color=darkseagreen4, label=testDates];
m17_226 -> m17_264  [key=0, style=solid];
m17_226 -> m17_228  [key=1, style=dashed, color=darkseagreen4, label=ms];
m17_226 -> m17_227  [key=0, style=solid];
m17_226 -> m17_236  [key=2, style=dotted];
m17_226 -> m17_229  [key=1, style=dashed, color=darkseagreen4, label=ms];
m17_226 -> m17_230  [key=1, style=dashed, color=darkseagreen4, label=ms];
m17_228 -> m17_229  [key=0, style=solid];
m17_228 -> m17_237  [key=2, style=dotted];
m17_230 -> m17_264  [key=0, style=solid];
m17_230 -> m17_231  [key=0, style=solid];
m17_230 -> m17_239  [key=2, style=dotted];
m17_232 -> m17_233  [key=0, style=solid];
m17_232 -> m17_33  [key=2, style=dotted];
m17_234 -> m17_264  [key=0, style=solid];
m17_234 -> m17_223  [key=0, style=bold, color=blue];
m17_262 -> m17_263  [key=0, style=solid];
m17_262 -> m17_264  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m17_262 -> m17_52  [key=2, style=dotted];
m17_241 -> m17_242  [key=0, style=solid];
m17_242 -> m17_264  [key=0, style=solid];
m17_242 -> m17_26  [key=2, style=dotted];
m17_242 -> m17_243  [key=0, style=solid];
m17_242 -> m17_235  [key=2, style=dotted];
m17_242 -> m17_246  [key=2, style=dotted];
m17_242 -> m17_247  [key=2, style=dotted];
m17_242 -> m17_248  [key=2, style=dotted];
m17_248 -> m17_249  [key=0, style=solid];
m17_252 -> m17_253  [key=0, style=solid];
m17_252 -> m17_258  [key=2, style=dotted];
m17_256 -> m17_257  [key=0, style=solid];
m17_256 -> m17_52  [key=2, style=dotted];
m17_260 -> m17_261  [key=0, style=solid];
m17_260 -> m17_25  [key=2, style=dotted];
m17_260 -> m17_263  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m17_250 -> m17_251  [key=0, style=solid];
m17_250 -> m17_253  [key=1, style=dashed, color=darkseagreen4, label=values];
m17_250 -> m17_256  [key=1, style=dashed, color=darkseagreen4, label=values];
m17_250 -> m17_74  [key=2, style=dotted];
m17_250 -> m17_252  [key=1, style=dashed, color=darkseagreen4, label=values];
m17_254 -> m17_255  [key=0, style=solid];
m17_254 -> m17_52  [key=2, style=dotted];
m17_247 -> m17_248  [key=0, style=solid];
m17_249 -> m17_264  [key=0, style=solid];
m17_249 -> m17_250  [key=0, style=solid];
m17_251 -> m17_252  [key=0, style=solid];
m17_251 -> m17_258  [key=2, style=dotted];
m17_253 -> m17_264  [key=0, style=solid];
m17_253 -> m17_33  [key=2, style=dotted];
m17_253 -> m17_254  [key=0, style=solid];
m17_253 -> m17_255  [key=1, style=dashed, color=darkseagreen4, label=json];
m17_255 -> m17_256  [key=0, style=solid];
m17_255 -> m17_110  [key=2, style=dotted];
m17_257 -> m17_264  [key=0, style=solid];
m17_257 -> m17_249  [key=0, style=bold, color=blue];
m17_259 -> m17_260  [key=0, style=solid];
m17_261 -> m17_264  [key=0, style=solid];
m17_261 -> m17_33  [key=2, style=dotted];
m17_261 -> m17_262  [key=0, style=solid];
m17_261 -> m17_263  [key=1, style=dashed, color=darkseagreen4, label=json];
m17_263 -> m17_264  [key=0, style=solid];
m17_263 -> m17_263  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m17_263 -> m17_272  [key=2, style=dotted];
m17_263 -> m17_265  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m17_263 -> m17_266  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m17_263 -> m17_267  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m17_263 -> m17_268  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m17_263 -> m17_269  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m17_263 -> m17_270  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m17_264 -> m17_165  [key=0, style=bold, color=blue];
m17_264 -> m17_52  [key=2, style=dotted];
m17_264 -> m17_265  [key=0, style=solid];
m17_266 -> m17_267  [key=0, style=solid];
m17_266 -> m17_52  [key=2, style=dotted];
m17_267 -> m17_268  [key=0, style=solid];
m17_267 -> m17_4  [key=2, style=dotted];
m17_267 -> m17_52  [key=2, style=dotted];
m17_268 -> m17_266  [key=0, style=bold, color=blue];
m17_268 -> m17_52  [key=2, style=dotted];
m17_268 -> m17_269  [key=0, style=solid];
m17_440 -> m17_441  [key=0, style=solid];
m17_440 -> m17_442  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_440 -> m17_444  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_440 -> m17_447  [key=1, style=dashed, color=darkseagreen4, label="System.Dynamic.ConvertBinder"];
m17_440 -> m17_448  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_441 -> m17_442  [key=0, style=solid];
m17_441 -> m17_444  [key=0, style=solid];
m17_442 -> m17_443  [key=0, style=solid];
m17_444 -> m17_445  [key=0, style=solid];
m17_447 -> m17_450  [key=0, style=solid];
m17_447 -> m17_451  [key=2, style=dotted];
m17_448 -> m17_449  [key=0, style=solid];
m17_448 -> m17_452  [key=2, style=dotted];
m17_448 -> m17_450  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m17_443 -> m17_450  [key=0, style=solid];
m17_445 -> m17_446  [key=0, style=solid];
m17_445 -> m17_448  [key=0, style=solid];
m17_446 -> m17_447  [key=0, style=solid];
m17_449 -> m17_450  [key=0, style=solid];
m17_450 -> m17_440  [key=0, style=bold, color=blue];
m17_20 -> m17_21  [key=0, style=solid];
m17_21 -> m17_20  [key=0, style=bold, color=blue];
m17_21 -> m17_24  [key=2, style=dotted];
m17_21 -> m17_22  [key=0, style=solid];
m17_24 -> m17_25  [key=0, style=solid];
m17_515 -> m17_516  [key=0, style=solid];
m17_516 -> m17_517  [key=0, style=solid];
m17_517 -> m17_515  [key=0, style=bold, color=blue];
m17_35 -> m17_37  [key=0, style=solid];
m17_420 -> m17_421  [key=0, style=solid];
m17_421 -> m17_422  [key=0, style=solid];
m17_421 -> m17_423  [key=2, style=dotted];
m17_422 -> m17_420  [key=0, style=bold, color=blue];
m17_533 -> m17_534  [key=0, style=solid];
m17_534 -> m17_535  [key=0, style=solid];
m17_535 -> m17_533  [key=0, style=bold, color=blue];
m17_13 -> m17_14  [key=0, style=solid, color=green];
m17_13 -> m17_24  [key=2, style=dotted];
m17_13 -> m17_12  [key=0, style=bold, color=blue];
m17_18 -> m17_19  [key=0, style=solid];
m17_18 -> m17_26  [key=2, style=dotted];
m17_12 -> m17_13  [key=0, style=solid];
m17_12 -> m17_24  [key=2, style=dotted];
m17_19 -> m17_22  [key=1, style=dashed, color=darkseagreen4, label=alien];
m17_19 -> m17_25  [key=2, style=dotted];
m17_19 -> m17_20  [key=0, style=solid];
m17_19 -> m17_18  [key=0, style=bold, color=blue];
m17_143 -> m17_144  [key=0, style=solid];
m17_142 -> m17_143  [key=0, style=solid];
m17_149 -> m17_140  [key=0, style=bold, color=blue];
m17_317 -> m17_318  [key=0, style=solid];
m17_317 -> m17_319  [key=1, style=dashed, color=darkseagreen4, label="params Newtonsoft.Json.JsonConverter[]"];
m17_317 -> m17_321  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_317 -> m17_325  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_317 -> m17_328  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_317 -> m17_331  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_317 -> m17_334  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_317 -> m17_338  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_317 -> m17_339  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_317 -> m17_343  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_317 -> m17_345  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_317 -> m17_347  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_317 -> m17_348  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_317 -> m17_351  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_317 -> m17_354  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_317 -> m17_358  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_317 -> m17_359  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_317 -> m17_362  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_317 -> m17_367  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_318 -> m17_319  [key=0, style=solid];
m17_318 -> m17_323  [key=0, style=solid];
m17_319 -> m17_320  [key=0, style=solid];
m17_319 -> m17_307  [key=2, style=dotted];
m17_319 -> m17_371  [key=2, style=dotted];
m17_319 -> m17_321  [key=1, style=dashed, color=darkseagreen4, label=matchingConverter];
m17_321 -> m17_322  [key=0, style=solid];
m17_321 -> m17_372  [key=2, style=dotted];
m17_321 -> m17_373  [key=2, style=dotted];
m17_325 -> m17_326  [key=0, style=solid];
m17_325 -> m17_265  [key=2, style=dotted];
m17_325 -> m17_374  [key=2, style=dotted];
m17_328 -> m17_329  [key=0, style=solid];
m17_328 -> m17_265  [key=2, style=dotted];
m17_328 -> m17_375  [key=2, style=dotted];
m17_331 -> m17_332  [key=0, style=solid];
m17_331 -> m17_376  [key=2, style=dotted];
m17_334 -> m17_335  [key=0, style=solid];
m17_334 -> m17_377  [key=2, style=dotted];
m17_338 -> m17_340  [key=0, style=solid];
m17_338 -> m17_378  [key=2, style=dotted];
m17_339 -> m17_340  [key=0, style=solid];
m17_339 -> m17_140  [key=2, style=dotted];
m17_339 -> m17_379  [key=2, style=dotted];
m17_343 -> m17_349  [key=0, style=solid];
m17_343 -> m17_380  [key=2, style=dotted];
m17_345 -> m17_349  [key=0, style=solid];
m17_345 -> m17_381  [key=2, style=dotted];
m17_347 -> m17_349  [key=0, style=solid];
m17_347 -> m17_382  [key=2, style=dotted];
m17_348 -> m17_349  [key=0, style=solid];
m17_348 -> m17_56  [key=2, style=dotted];
m17_348 -> m17_381  [key=2, style=dotted];
m17_351 -> m17_352  [key=0, style=solid];
m17_351 -> m17_265  [key=2, style=dotted];
m17_351 -> m17_383  [key=2, style=dotted];
m17_354 -> m17_355  [key=0, style=solid];
m17_354 -> m17_144  [key=2, style=dotted];
m17_354 -> m17_384  [key=2, style=dotted];
m17_358 -> m17_360  [key=0, style=solid];
m17_358 -> m17_385  [key=2, style=dotted];
m17_359 -> m17_360  [key=0, style=solid];
m17_359 -> m17_146  [key=2, style=dotted];
m17_359 -> m17_386  [key=2, style=dotted];
m17_362 -> m17_363  [key=0, style=solid];
m17_362 -> m17_387  [key=2, style=dotted];
m17_367 -> m17_368  [key=0, style=solid];
m17_367 -> m17_265  [key=2, style=dotted];
m17_367 -> m17_383  [key=2, style=dotted];
m17_323 -> m17_324  [key=0, style=solid];
m17_323 -> m17_327  [key=0, style=solid];
m17_323 -> m17_330  [key=0, style=solid];
m17_323 -> m17_333  [key=0, style=solid];
m17_323 -> m17_336  [key=0, style=solid];
m17_323 -> m17_341  [key=0, style=solid];
m17_323 -> m17_350  [key=0, style=solid];
m17_323 -> m17_353  [key=0, style=solid];
m17_323 -> m17_356  [key=0, style=solid];
m17_323 -> m17_361  [key=0, style=solid];
m17_323 -> m17_364  [key=0, style=solid];
m17_320 -> m17_321  [key=0, style=solid];
m17_320 -> m17_323  [key=0, style=solid];
m17_322 -> m17_369  [key=0, style=solid];
m17_324 -> m17_325  [key=0, style=solid];
m17_327 -> m17_328  [key=0, style=solid];
m17_330 -> m17_331  [key=0, style=solid];
m17_333 -> m17_334  [key=0, style=solid];
m17_336 -> m17_337  [key=0, style=solid];
m17_341 -> m17_342  [key=0, style=solid];
m17_350 -> m17_351  [key=0, style=solid];
m17_353 -> m17_354  [key=0, style=solid];
m17_356 -> m17_357  [key=0, style=solid];
m17_361 -> m17_362  [key=0, style=solid];
m17_364 -> m17_365  [key=0, style=solid];
m17_326 -> m17_369  [key=0, style=solid];
m17_329 -> m17_369  [key=0, style=solid];
m17_332 -> m17_369  [key=0, style=solid];
m17_335 -> m17_369  [key=0, style=solid];
m17_337 -> m17_338  [key=0, style=solid];
m17_337 -> m17_339  [key=0, style=solid];
m17_340 -> m17_369  [key=0, style=solid];
m17_342 -> m17_343  [key=0, style=solid];
m17_342 -> m17_344  [key=0, style=solid];
m17_344 -> m17_345  [key=0, style=solid];
m17_344 -> m17_346  [key=0, style=solid];
m17_346 -> m17_347  [key=0, style=solid];
m17_346 -> m17_348  [key=0, style=solid];
m17_349 -> m17_369  [key=0, style=solid];
m17_352 -> m17_369  [key=0, style=solid];
m17_355 -> m17_369  [key=0, style=solid];
m17_357 -> m17_358  [key=0, style=solid];
m17_357 -> m17_359  [key=0, style=solid];
m17_360 -> m17_369  [key=0, style=solid];
m17_363 -> m17_369  [key=0, style=solid];
m17_365 -> m17_366  [key=0, style=solid];
m17_366 -> m17_367  [key=0, style=solid];
m17_368 -> m17_369  [key=0, style=solid];
m17_370 -> m17_369  [key=0, style=solid];
m17_370 -> m17_157  [key=2, style=dotted];
m17_369 -> m17_317  [key=0, style=bold, color=blue];
m17_39 -> m17_40  [key=0, style=solid];
m17_39 -> m17_43  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_39 -> m17_44  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_39 -> m17_46  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_39 -> m17_47  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_39 -> m17_51  [key=2, style=dotted];
m17_40 -> m17_41  [key=0, style=solid];
m17_40 -> m17_51  [key=2, style=dotted];
m17_40 -> m17_52  [key=2, style=dotted];
m17_40 -> m17_42  [key=1, style=dashed, color=darkseagreen4, label=result];
m17_40 -> m17_49  [key=1, style=dashed, color=darkseagreen4, label=result];
m17_43 -> m17_44  [key=0, style=solid];
m17_43 -> m17_46  [key=0, style=solid];
m17_43 -> m17_34  [key=2, style=dotted];
m17_43 -> m17_45  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m17_43 -> m17_47  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m17_43 -> m17_48  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m17_43 -> m17_49  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m17_44 -> m17_45  [key=0, style=solid];
m17_44 -> m17_52  [key=2, style=dotted];
m17_46 -> m17_47  [key=0, style=solid];
m17_46 -> m17_49  [key=0, style=solid];
m17_46 -> m17_52  [key=2, style=dotted];
m17_47 -> m17_48  [key=0, style=solid];
m17_47 -> m17_56  [key=2, style=dotted];
m17_47 -> m17_52  [key=2, style=dotted];
m17_41 -> m17_42  [key=0, style=solid];
m17_41 -> m17_43  [key=0, style=solid];
m17_42 -> m17_50  [key=0, style=solid];
m17_42 -> m17_33  [key=2, style=dotted];
m17_42 -> m17_43  [key=0, style=solid];
m17_49 -> m17_50  [key=0, style=solid];
m17_49 -> m17_52  [key=2, style=dotted];
m17_45 -> m17_50  [key=0, style=solid];
m17_45 -> m17_53  [key=2, style=dotted];
m17_45 -> m17_54  [key=2, style=dotted];
m17_45 -> m17_55  [key=2, style=dotted];
m17_45 -> m17_52  [key=2, style=dotted];
m17_45 -> m17_51  [key=2, style=dotted];
m17_45 -> m17_46  [key=0, style=solid];
m17_48 -> m17_50  [key=0, style=solid];
m17_48 -> m17_57  [key=2, style=dotted];
m17_48 -> m17_58  [key=2, style=dotted];
m17_48 -> m17_59  [key=2, style=dotted];
m17_48 -> m17_52  [key=2, style=dotted];
m17_48 -> m17_49  [key=0, style=solid];
m17_50 -> m17_39  [key=0, style=bold, color=blue];
m17_50 -> m17_36  [key=0, style=bold, color=blue];
m17_8 -> m17_9  [key=0, style=solid];
m17_8 -> m17_10  [key=2, style=dotted];
m17_9 -> m17_8  [key=0, style=bold, color=blue];
m17_9 -> m17_7  [key=0, style=bold, color=blue];
m17_269 -> m17_52  [key=2, style=dotted];
m17_269 -> m17_270  [key=0, style=solid];
m17_270 -> m17_52  [key=2, style=dotted];
m17_270 -> m17_271  [key=0, style=solid];
m17_270 -> m17_0  [key=2, style=dotted];
m17_271 -> m17_259  [key=0, style=bold, color=blue];
m17_271 -> m17_269  [key=0, style=bold, color=blue];
m17_521 -> m17_522  [key=0, style=solid];
m17_522 -> m17_523  [key=0, style=solid];
m17_523 -> m17_521  [key=0, style=bold, color=blue];
m17_424 -> m17_425  [key=0, style=solid];
m17_425 -> m17_426  [key=0, style=solid];
m17_425 -> m17_423  [key=2, style=dotted];
m17_426 -> m17_424  [key=0, style=bold, color=blue];
m17_388 -> m17_389  [key=0, style=solid];
m17_389 -> m17_390  [key=0, style=solid];
m17_389 -> m17_392  [key=2, style=dotted];
m17_390 -> m17_391  [key=0, style=solid];
m17_390 -> m17_393  [key=2, style=dotted];
m17_391 -> m17_388  [key=0, style=bold, color=blue];
m17_551 -> m17_552  [key=0, style=solid];
m17_552 -> m17_553  [key=0, style=solid];
m17_552 -> m17_554  [key=2, style=dotted];
m17_553 -> m17_551  [key=0, style=bold, color=blue];
m17_518 -> m17_519  [key=0, style=solid];
m17_519 -> m17_520  [key=0, style=solid];
m17_520 -> m17_518  [key=0, style=bold, color=blue];
m17_494 -> m17_495  [key=0, style=solid];
m17_494 -> m17_497  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_495 -> m17_496  [key=0, style=solid];
m17_495 -> m17_497  [key=0, style=solid];
m17_497 -> m17_498  [key=0, style=solid];
m17_497 -> m17_60  [key=2, style=dotted];
m17_496 -> m17_498  [key=0, style=solid];
m17_498 -> m17_494  [key=0, style=bold, color=blue];
m17_36 -> m17_37  [key=0, style=solid];
m17_36 -> m17_38  [key=2, style=dotted];
m17_37 -> m17_25  [key=2, style=dotted];
m17_37 -> m17_38  [key=0, style=solid];
m17_37 -> m17_39  [key=1, style=dashed, color=darkseagreen4, label=product];
m17_37 -> m17_40  [key=1, style=dashed, color=darkseagreen4, label=product];
m17_37 -> m17_41  [key=1, style=dashed, color=darkseagreen4, label=product];
m17_37 -> m17_42  [key=1, style=dashed, color=darkseagreen4, label=product];
m17_37 -> m17_30  [key=0, style=bold, color=blue];
m17_33 -> m17_37  [key=0, style=solid];
m17_401 -> m17_402  [key=0, style=solid];
m17_401 -> m17_404  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_401 -> m17_407  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_402 -> m17_403  [key=0, style=solid];
m17_402 -> m17_404  [key=0, style=solid];
m17_404 -> m17_405  [key=0, style=solid];
m17_404 -> m17_406  [key=1, style=dashed, color=darkseagreen4, label=otherValue];
m17_407 -> m17_408  [key=0, style=solid];
m17_407 -> m17_409  [key=2, style=dotted];
m17_403 -> m17_408  [key=0, style=solid];
m17_405 -> m17_406  [key=0, style=solid];
m17_405 -> m17_407  [key=0, style=solid];
m17_406 -> m17_408  [key=0, style=solid];
m17_406 -> m17_396  [key=2, style=dotted];
m17_408 -> m17_401  [key=0, style=bold, color=blue];
m17_415 -> m17_416  [key=0, style=solid];
m17_416 -> m17_417  [key=0, style=solid];
m17_416 -> m17_418  [key=0, style=solid];
m17_417 -> m17_419  [key=0, style=solid];
m17_418 -> m17_419  [key=0, style=solid];
m17_418 -> m17_265  [key=2, style=dotted];
m17_419 -> m17_415  [key=0, style=bold, color=blue];
m17_488 -> m17_489  [key=0, style=solid];
m17_488 -> m17_491  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_489 -> m17_490  [key=0, style=solid];
m17_489 -> m17_491  [key=0, style=solid];
m17_491 -> m17_492  [key=0, style=solid];
m17_490 -> m17_493  [key=0, style=solid];
m17_492 -> m17_493  [key=0, style=solid];
m17_492 -> m17_60  [key=2, style=dotted];
m17_493 -> m17_488  [key=0, style=bold, color=blue];
m17_555 -> m17_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_34  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_36  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_267  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_318  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_319  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_321  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_323  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_325  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_328  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_337  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_338  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_339  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_342  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_343  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_344  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_345  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_346  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_347  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_348  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_351  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_354  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_357  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_358  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_359  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_362  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_367  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_370  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_389  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_390  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_399  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_406  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_407  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_411  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_413  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_416  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_418  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_421  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_425  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_427  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_429  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_432  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_436  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_492  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_497  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_500  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_502  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_504  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_506  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_510  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_513  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_516  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_519  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_522  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_525  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_528  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_531  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_534  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_537  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_540  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_543  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_546  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_549  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_555 -> m17_552  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m18_80 -> m18_81  [key=0, style=solid];
m18_81 -> m18_5  [key=2, style=dotted];
m18_81 -> m18_82  [key=0, style=solid];
m18_81 -> m18_58  [key=2, style=dotted];
m18_82 -> m18_83  [key=0, style=solid];
m18_82 -> m18_84  [key=2, style=dotted];
m18_83 -> m18_80  [key=0, style=bold, color=blue];
m18_85 -> m18_86  [key=0, style=solid];
m18_86 -> m18_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_86 -> m18_19  [key=2, style=dotted];
m18_86 -> m18_87  [key=0, style=solid];
m18_87 -> m18_85  [key=0, style=bold, color=blue];
m18_66 -> m18_67  [key=0, style=solid];
m18_68 -> m18_7  [key=2, style=dotted];
m18_68 -> m18_69  [key=0, style=solid];
m18_68 -> m18_39  [key=2, style=dotted];
m18_67 -> m18_5  [key=2, style=dotted];
m18_67 -> m18_68  [key=0, style=solid];
m18_67 -> m18_58  [key=2, style=dotted];
m18_69 -> m18_66  [key=0, style=bold, color=blue];
m18_41 -> m18_42  [key=0, style=solid];
m18_45 -> m18_7  [key=2, style=dotted];
m18_45 -> m18_46  [key=0, style=solid];
m18_48 -> m18_7  [key=2, style=dotted];
m18_48 -> m18_49  [key=0, style=solid];
m18_43 -> m18_5  [key=2, style=dotted];
m18_43 -> m18_44  [key=0, style=solid];
m18_43 -> m18_47  [key=1, style=dashed, color=darkseagreen4, label=converter];
m18_44 -> m18_6  [key=2, style=dotted];
m18_44 -> m18_45  [key=0, style=solid];
m18_47 -> m18_6  [key=2, style=dotted];
m18_47 -> m18_48  [key=0, style=solid];
m18_46 -> m18_47  [key=0, style=solid];
m18_46 -> m18_50  [key=2, style=dotted];
m18_46 -> m18_51  [key=2, style=dotted];
m18_46 -> m18_39  [key=2, style=dotted];
m18_42 -> m18_43  [key=0, style=solid];
m18_42 -> m18_44  [key=1, style=dashed, color=darkseagreen4, label=t];
m18_42 -> m18_50  [key=2, style=dotted];
m18_49 -> m18_41  [key=0, style=bold, color=blue];
m18_8 -> m18_9  [key=0, style=solid];
m18_10 -> m18_11  [key=0, style=solid, color=green];
m18_10 -> m18_14  [key=2, style=dotted, color=green];
m18_10 -> m18_15  [key=2, style=dotted, color=green];
m18_10 -> m18_12  [key=1, style=dashed, color=green, label=nowTicks];
m18_9 -> m18_10  [key=0, style=solid, color=green];
m18_9 -> m18_11  [key=1, style=dashed, color=darkseagreen4, label=now];
m18_11 -> m18_12  [key=0, style=solid, color=green];
m18_11 -> m18_5  [key=2, style=dotted];
m18_11 -> m18_6  [key=2, style=dotted];
m18_12 -> m18_13  [key=0, style=solid, color=green];
m18_12 -> m18_7  [key=2, style=dotted, color=green];
m18_13 -> m18_8  [key=0, style=bold, color=blue];
m18_5 -> m18_0  [key=0, style=bold, color=blue];
m18_59 -> m18_60  [key=0, style=solid];
m18_64 -> m18_7  [key=2, style=dotted];
m18_64 -> m18_65  [key=0, style=solid];
m18_64 -> m18_39  [key=2, style=dotted];
m18_60 -> m18_5  [key=2, style=dotted];
m18_60 -> m18_61  [key=0, style=solid];
m18_60 -> m18_62  [key=1, style=dashed, color=darkseagreen4, label=converter];
m18_60 -> m18_63  [key=1, style=dashed, color=darkseagreen4, label=converter];
m18_62 -> m18_6  [key=2, style=dotted];
m18_62 -> m18_63  [key=0, style=solid];
m18_63 -> m18_64  [key=0, style=solid];
m18_63 -> m18_58  [key=2, style=dotted];
m18_61 -> m18_62  [key=0, style=solid];
m18_61 -> m18_39  [key=2, style=dotted];
m18_65 -> m18_59  [key=0, style=bold, color=blue];
m18_0 -> m18_1  [key=0, style=solid, color=red];
m18_3 -> m18_7  [key=2, style=dotted];
m18_3 -> m18_4  [key=0, style=solid];
m18_3 -> m18_9  [key=2, style=dotted];
m18_2 -> m18_5  [key=2, style=dotted];
m18_2 -> m18_6  [key=2, style=dotted];
m18_2 -> m18_3  [key=0, style=solid];
m18_2 -> m18_8  [key=2, style=dotted];
m18_2 -> m18_4  [key=1, style=dashed, color=darkseagreen4, label=json];
m18_1 -> m18_2  [key=0, style=solid, color=red];
m18_1 -> m18_6  [key=2, style=dotted, color=red];
m18_1 -> m18_7  [key=2, style=dotted, color=red];
m18_4 -> m18_0  [key=0, style=bold, color=blue];
m18_4 -> m18_5  [key=0, style=solid];
m18_4 -> m18_10  [key=2, style=dotted];
m18_23 -> m18_24  [key=0, style=solid];
m18_24 -> m18_5  [key=2, style=dotted];
m18_24 -> m18_25  [key=0, style=solid];
m18_24 -> m18_28  [key=1, style=dashed, color=darkseagreen4, label=converter];
m18_25 -> m18_26  [key=0, style=solid];
m18_25 -> m18_19  [key=2, style=dotted];
m18_25 -> m18_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_26 -> m18_23  [key=0, style=bold, color=blue];
m18_16 -> m18_17  [key=0, style=solid];
m18_17 -> m18_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_17 -> m18_18  [key=0, style=solid];
m18_17 -> m18_19  [key=2, style=dotted];
m18_18 -> m18_16  [key=0, style=bold, color=blue];
m18_76 -> m18_77  [key=0, style=solid];
m18_78 -> m18_7  [key=2, style=dotted];
m18_78 -> m18_79  [key=0, style=solid];
m18_78 -> m18_51  [key=2, style=dotted];
m18_77 -> m18_5  [key=2, style=dotted];
m18_77 -> m18_78  [key=0, style=solid];
m18_77 -> m18_58  [key=2, style=dotted];
m18_79 -> m18_76  [key=0, style=bold, color=blue];
m18_111 -> m18_112  [key=0, style=solid];
m18_117 -> m18_7  [key=2, style=dotted];
m18_117 -> m18_118  [key=0, style=solid];
m18_117 -> m18_51  [key=2, style=dotted];
m18_118 -> m18_7  [key=2, style=dotted];
m18_118 -> m18_119  [key=0, style=solid];
m18_118 -> m18_51  [key=2, style=dotted];
m18_115 -> m18_117  [key=1, style=dashed, color=darkseagreen4, label=l2];
m18_115 -> m18_118  [key=1, style=dashed, color=darkseagreen4, label=l2];
m18_115 -> m18_116  [key=0, style=solid];
m18_115 -> m18_109  [key=2, style=dotted];
m18_116 -> m18_117  [key=0, style=solid];
m18_116 -> m18_110  [key=2, style=dotted];
m18_112 -> m18_51  [key=2, style=dotted];
m18_112 -> m18_113  [key=0, style=solid];
m18_112 -> m18_120  [key=2, style=dotted];
m18_113 -> m18_115  [key=1, style=dashed, color=darkseagreen4, label=json];
m18_113 -> m18_114  [key=0, style=solid];
m18_113 -> m18_107  [key=2, style=dotted];
m18_114 -> m18_115  [key=0, style=solid];
m18_114 -> m18_108  [key=2, style=dotted];
m18_119 -> m18_111  [key=0, style=bold, color=blue];
m18_34 -> m18_35  [key=0, style=solid];
m18_37 -> m18_7  [key=2, style=dotted];
m18_37 -> m18_38  [key=0, style=solid];
m18_36 -> m18_5  [key=2, style=dotted];
m18_36 -> m18_6  [key=2, style=dotted];
m18_36 -> m18_37  [key=0, style=solid];
m18_35 -> m18_36  [key=0, style=solid];
m18_35 -> m18_39  [key=2, style=dotted];
m18_35 -> m18_40  [key=2, style=dotted];
m18_38 -> m18_34  [key=0, style=bold, color=blue];
m18_121 -> m18_122  [key=0, style=solid];
m18_127 -> m18_7  [key=2, style=dotted];
m18_127 -> m18_128  [key=0, style=solid];
m18_127 -> m18_51  [key=2, style=dotted];
m18_129 -> m18_7  [key=2, style=dotted];
m18_129 -> m18_130  [key=0, style=solid];
m18_129 -> m18_51  [key=2, style=dotted];
m18_125 -> m18_127  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m18_125 -> m18_129  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m18_125 -> m18_126  [key=0, style=solid];
m18_125 -> m18_109  [key=2, style=dotted];
m18_125 -> m18_128  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m18_126 -> m18_127  [key=0, style=solid];
m18_126 -> m18_110  [key=2, style=dotted];
m18_128 -> m18_129  [key=0, style=solid];
m18_128 -> m18_84  [key=2, style=dotted];
m18_122 -> m18_51  [key=2, style=dotted];
m18_122 -> m18_123  [key=0, style=solid];
m18_122 -> m18_131  [key=2, style=dotted];
m18_123 -> m18_125  [key=1, style=dashed, color=darkseagreen4, label=json];
m18_123 -> m18_124  [key=0, style=solid];
m18_123 -> m18_107  [key=2, style=dotted];
m18_124 -> m18_125  [key=0, style=solid];
m18_124 -> m18_108  [key=2, style=dotted];
m18_130 -> m18_121  [key=0, style=bold, color=blue];
m18_52 -> m18_53  [key=0, style=solid];
m18_53 -> m18_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_53 -> m18_19  [key=2, style=dotted];
m18_53 -> m18_54  [key=0, style=solid];
m18_54 -> m18_52  [key=0, style=bold, color=blue];
m18_91 -> m18_92  [key=0, style=solid];
m18_92 -> m18_94  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_92 -> m18_19  [key=2, style=dotted];
m18_92 -> m18_93  [key=0, style=solid];
m18_93 -> m18_91  [key=0, style=bold, color=blue];
m18_27 -> m18_28  [key=0, style=solid];
m18_21 -> m18_15  [key=2, style=dotted];
m18_21 -> m18_5  [key=2, style=dotted];
m18_21 -> m18_6  [key=2, style=dotted];
m18_21 -> m18_22  [key=0, style=solid];
m18_56 -> m18_5  [key=2, style=dotted];
m18_56 -> m18_57  [key=0, style=solid];
m18_56 -> m18_58  [key=2, style=dotted];
m18_74 -> m18_5  [key=2, style=dotted];
m18_74 -> m18_75  [key=0, style=solid];
m18_74 -> m18_58  [key=2, style=dotted];
m18_89 -> m18_5  [key=2, style=dotted];
m18_89 -> m18_90  [key=0, style=solid];
m18_89 -> m18_58  [key=2, style=dotted];
m18_95 -> m18_5  [key=2, style=dotted];
m18_95 -> m18_96  [key=0, style=solid];
m18_95 -> m18_58  [key=2, style=dotted];
m18_20 -> m18_21  [key=0, style=solid];
m18_22 -> m18_20  [key=0, style=bold, color=blue];
m18_28 -> m18_29  [key=0, style=solid];
m18_28 -> m18_30  [key=2, style=dotted];
m18_28 -> m18_31  [key=2, style=dotted];
m18_28 -> n4  [key=2, style=dotted];
m18_28 -> m18_33  [key=2, style=dotted];
m18_55 -> m18_56  [key=0, style=solid];
m18_57 -> m18_55  [key=0, style=bold, color=blue];
m18_73 -> m18_74  [key=0, style=solid];
m18_75 -> m18_73  [key=0, style=bold, color=blue];
m18_88 -> m18_89  [key=0, style=solid];
m18_90 -> m18_88  [key=0, style=bold, color=blue];
m18_94 -> m18_95  [key=0, style=solid];
m18_96 -> m18_94  [key=0, style=bold, color=blue];
m18_29 -> m18_27  [key=0, style=bold, color=blue];
m18_70 -> m18_71  [key=0, style=solid];
m18_71 -> m18_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_71 -> m18_19  [key=2, style=dotted];
m18_71 -> m18_72  [key=0, style=solid];
m18_72 -> m18_70  [key=0, style=bold, color=blue];
m18_97 -> m18_98  [key=0, style=solid];
m18_103 -> m18_7  [key=2, style=dotted];
m18_103 -> m18_104  [key=0, style=solid];
m18_103 -> m18_51  [key=2, style=dotted];
m18_104 -> m18_7  [key=2, style=dotted];
m18_104 -> m18_105  [key=0, style=solid];
m18_104 -> m18_51  [key=2, style=dotted];
m18_101 -> m18_103  [key=1, style=dashed, color=darkseagreen4, label=l2];
m18_101 -> m18_104  [key=1, style=dashed, color=darkseagreen4, label=l2];
m18_101 -> m18_102  [key=0, style=solid];
m18_101 -> m18_109  [key=2, style=dotted];
m18_102 -> m18_103  [key=0, style=solid];
m18_102 -> m18_110  [key=2, style=dotted];
m18_98 -> m18_51  [key=2, style=dotted];
m18_98 -> m18_99  [key=0, style=solid];
m18_98 -> m18_106  [key=2, style=dotted];
m18_99 -> m18_101  [key=1, style=dashed, color=darkseagreen4, label=json];
m18_99 -> m18_100  [key=0, style=solid];
m18_99 -> m18_107  [key=2, style=dotted];
m18_100 -> m18_101  [key=0, style=solid];
m18_100 -> m18_108  [key=2, style=dotted];
m18_105 -> m18_97  [key=0, style=bold, color=blue];
m18_132 -> m18_28  [key=1, style=dashed, color=darkseagreen4, label=converter];
m19_0 -> m19_1  [key=0, style=solid];
m19_0 -> m19_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaException"];
m19_1 -> m19_2  [key=0, style=solid];
m19_1 -> m19_4  [key=2, style=dotted];
m19_1 -> m19_5  [key=2, style=dotted];
m19_2 -> m19_3  [key=0, style=solid];
m19_3 -> m19_0  [key=0, style=bold, color=blue];
m19_6 -> m19_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.ValidationEventArgs"];
}
