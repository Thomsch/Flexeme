digraph  {
d167 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", color=green, community=0, label="-1: initialValue is string", span="456-456"];
d127 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", span="399-399"];
d164 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="initialValue is Guid && targetType == typeof(byte[])", span="450-450"];
d168 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="targetType == typeof(Guid)", span="458-458"];
d183 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", color=green, community=0, label="-1: targetType == typeof(BigInteger)", span="486-486"];
d181 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", color=green, community=0, label="-1: value = Type.GetType((string)initialValue, true)", span="480-480"];
d180 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="typeof(Type).IsAssignableFrom(targetType)", span="478-478"];
d182 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", color=green, community=0, label="-1: return ConvertResult.Success;", span="481-481"];
d223 [cluster="System.Type.GetType(string, bool)", label="Entry System.Type.GetType(string, bool)", span="0-0"];
d143 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="targetType = Nullable.GetUnderlyingType(targetType)", span="405-405"];
d184 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", color=green, community=0, label="-1: value = ToBigInteger(initialValue)", span="488-488"];
d186 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="initialValue is BigInteger", span="491-491"];
d185 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", color=green, community=0, label="-1: return ConvertResult.Success;", span="489-489"];
d71 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", span="307-307"];
d170 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", color=green, community=0, label="-1: return ConvertResult.Success;", span="461-461"];
d169 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = new Guid((string)initialValue)", span="460-460"];
d211 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", span="399-399"];
d173 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", color=green, community=0, label="-1: return ConvertResult.Success;", span="466-466"];
d172 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = new Uri((string)initialValue, UriKind.RelativeOrAbsolute)", span="465-465"];
d176 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", color=green, community=0, label="-1: return ConvertResult.Success;", span="471-471"];
d175 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = ParseTimeSpan((string)initialValue)", span="470-470"];
d179 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", color=green, community=0, label="-1: return ConvertResult.Success;", span="476-476"];
d178 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = System.Convert.FromBase64String((string)initialValue)", span="475-475"];
d291 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", color=green, community=0, label="-1: return false;", span="642-642"];
d281 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", label="GetTypeCode(value.GetType())", span="630-630"];
d292 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", span="628-628"];
d290 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", color=green, community=0, label="-1: return true;", span="640-640"];
d289 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", label="PrimitiveTypeCode.UInt64", span="639-639"];
d294 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", color=green, community=0, label="-1: value = 0", span="648-648"];
d293 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", span="646-646"];
d295 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", color=green, community=0, label="-1: length == 0", span="650-650"];
d317 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="int newValue = (10 * value) - c", span="691-691"];
d318 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="newValue > value", span="694-694"];
d329 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="value == int.MinValue", span="719-719"];
d331 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="value = -value", span="722-722"];
d333 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", span="646-646"];
d296 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", color=green, community=0, label="-1: return ParseResult.Invalid;", span="651-651"];
d297 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", color=green, community=0, label="-1: bool isNegative = (chars[start] == '-')", span="653-653"];
d298 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", color=green, community=0, label="-1: isNegative", span="655-655"];
d328 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="!isNegative", span="716-716"];
d299 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", color=green, community=0, label="-1: length == 1", span="658-658"];
d300 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="return ParseResult.Invalid;", span="659-659"];
d301 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="start++", span="661-661"];
d303 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="int end = start + length", span="665-665"];
d32 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsConvertible(System.Type)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.IsConvertible(System.Type)", span="229-229"];
d36 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ParseTimeSpan(string)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ParseTimeSpan(string)", span="240-240"];
d99 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", span="333-333"];
d116 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", label="TryConvertInternal(initialValue, culture, targetType, out value)", span="367-367"];
d133 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", label="TryConvertInternal(initialValue, culture, targetType, out value) == ConvertResult.Success", span="386-386"];
d215 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", span="628-628"];
d224 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", span="622-622"];
d230 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", span="579-579"];
d231 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", span="602-602"];
d140 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="initialValue == null", span="401-401"];
d142 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="ReflectionUtils.IsNullableType(targetType)", span="404-404"];
d144 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="Type initialType = initialValue.GetType()", span="407-407"];
d145 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="targetType == initialType", span="409-409"];
d146 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = initialValue", span="411-411"];
d148 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="ConvertUtils.IsConvertible(initialValue.GetType()) && ConvertUtils.IsConvertible(targetType)", span="416-416"];
d149 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="targetType.IsEnum()", span="418-418"];
d150 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="initialValue is string", span="420-420"];
d151 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = Enum.Parse(targetType, initialValue.ToString(), true)", span="422-422"];
d153 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="IsInteger(initialValue)", span="425-425"];
d154 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = Enum.ToObject(targetType, initialValue)", span="427-427"];
d156 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = System.Convert.ChangeType(initialValue, targetType, culture)", span="432-432"];
d158 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="initialValue is DateTime && targetType == typeof(DateTimeOffset)", span="437-437"];
d159 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = new DateTimeOffset((DateTime)initialValue)", span="439-439"];
d161 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="initialValue is byte[] && targetType == typeof(Guid)", span="444-444"];
d162 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = new Guid((byte[])initialValue)", span="446-446"];
d165 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = ((Guid)initialValue).ToByteArray()", span="452-452"];
d171 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="targetType == typeof(Uri)", span="463-463"];
d174 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="targetType == typeof(TimeSpan)", span="468-468"];
d177 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="targetType == typeof(byte[])", span="473-473"];
d187 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = FromBigInteger((BigInteger)initialValue, targetType)", span="493-493"];
d190 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="toConverter != null && toConverter.CanConvertTo(targetType)", span="502-502"];
d191 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = toConverter.ConvertTo(null, culture, initialValue, targetType)", span="504-504"];
d193 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="TypeConverter fromConverter = GetConverter(targetType)", span="508-508"];
d195 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = fromConverter.ConvertFrom(null, culture, initialValue)", span="512-512"];
d197 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="initialValue == DBNull.Value", span="518-518"];
d198 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="ReflectionUtils.IsNullable(targetType)", span="520-520"];
d199 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = EnsureTypeAssignable(null, initialType, targetType)", span="522-522"];
d203 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="initialValue is INullable", span="532-532"];
d204 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = EnsureTypeAssignable(ToValue((INullable)initialValue), initialType, targetType)", span="534-534"];
d206 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="targetType.IsInterface() || targetType.IsGenericTypeDefinition() || targetType.IsAbstract()", span="539-539"];
d114 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", span="364-364"];
d132 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", span="382-382"];
d115 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", label="object value", span="366-366"];
d147 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="return ConvertResult.Success;", span="412-412"];
d19 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", label="return PrimitiveTypeCode.Object;", span="218-218"];
d208 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="return ConvertResult.NotInstantiableType;", span="542-542"];
d210 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="return ConvertResult.NoValidConversion;", span="546-546"];
d35 [cluster="System.Type.IsAssignableFrom(System.Type)", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
d25 [cluster="System.Nullable.GetUnderlyingType(System.Type)", label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0"];
d189 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="TypeConverter toConverter = GetConverter(initialType)", span="500-500"];
d93 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", span="307-307"];
d72 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="value is BigInteger", span="309-309"];
d73 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="return (BigInteger)value;", span="310-310"];
d74 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="value is string", span="311-311"];
d75 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="return BigInteger.Parse((string)value, CultureInfo.InvariantCulture);", span="312-312"];
d76 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="value is float", span="313-313"];
d77 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="return new BigInteger((float)value);", span="314-314"];
d78 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="value is double", span="315-315"];
d79 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="return new BigInteger((double)value);", span="316-316"];
d80 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="value is decimal", span="317-317"];
d81 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="return new BigInteger((decimal)value);", span="318-318"];
d82 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="value is int", span="319-319"];
d83 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="return new BigInteger((int)value);", span="320-320"];
d84 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="value is long", span="321-321"];
d85 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="return new BigInteger((long)value);", span="322-322"];
d86 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="value is uint", span="323-323"];
d87 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="return new BigInteger((uint)value);", span="324-324"];
d88 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="value is ulong", span="325-325"];
d89 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="return new BigInteger((ulong)value);", span="326-326"];
d90 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="value is byte[]", span="327-327"];
d91 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="return new BigInteger((byte[])value);", span="328-328"];
d92 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", label="throw new InvalidCastException(''Cannot convert {0} to BigInteger.''.FormatWith(CultureInfo.InvariantCulture, value.GetType()));", span="330-330"];
d220 [cluster="System.Guid.Guid(string)", label="Entry System.Guid.Guid(string)", span="0-0"];
d141 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="throw new ArgumentNullException(''initialValue'');", span="402-402"];
d152 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="return ConvertResult.Success;", span="423-423"];
d155 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="return ConvertResult.Success;", span="428-428"];
d157 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="return ConvertResult.Success;", span="433-433"];
d160 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="return ConvertResult.Success;", span="440-440"];
d163 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="return ConvertResult.Success;", span="447-447"];
d166 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="return ConvertResult.Success;", span="453-453"];
d188 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="return ConvertResult.Success;", span="494-494"];
d192 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="return ConvertResult.Success;", span="505-505"];
d196 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="return ConvertResult.Success;", span="513-513"];
d200 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="return ConvertResult.Success;", span="523-523"];
d202 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="return ConvertResult.CannotConvertNull;", span="528-528"];
d205 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="return ConvertResult.Success;", span="535-535"];
d209 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = null", span="545-545"];
d221 [cluster="System.Uri.Uri(string, System.UriKind)", label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0"];
d222 [cluster="System.Convert.FromBase64String(string)", label="Entry System.Convert.FromBase64String(string)", span="0-0"];
d282 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", label="PrimitiveTypeCode.SByte", span="632-632"];
d97 [cluster="object.GetType()", label="Entry object.GetType()", span="0-0"];
d0 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", span="184-184"];
d288 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", label="PrimitiveTypeCode.Int64", span="638-638"];
d305 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="int i = start", span="673-673"];
d312 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="int i = start", span="684-684"];
d302 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="length--", span="662-662"];
d304 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="length > 10 || (length == 10 && chars[start] - '0' > 2)", span="670-670"];
d307 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="int c = chars[i] - '0'", span="675-675"];
d314 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="int c = chars[i] - '0'", span="686-686"];
d321 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="c = chars[i] - '0'", span="702-702"];
d315 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="c < 0 || c > 9", span="688-688"];
d326 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="value = newValue", span="711-711"];
d319 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="i++", span="696-696"];
d330 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="return ParseResult.Overflow;", span="720-720"];
d332 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="return ParseResult.Success;", span="725-725"];
d311 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="return ParseResult.Overflow;", span="681-681"];
d309 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="return ParseResult.Invalid;", span="678-678"];
d316 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="return ParseResult.Invalid;", span="689-689"];
d325 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="return ParseResult.Overflow;", span="708-708"];
d323 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="return ParseResult.Invalid;", span="705-705"];
d313 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="i < end", span="684-684"];
d306 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="i < end", span="673-673"];
d320 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="i < end", span="700-700"];
d34 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsConvertible(System.Type)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.IsConvertible(System.Type)", span="229-229"];
d33 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsConvertible(System.Type)", label="return typeof(IConvertible).IsAssignableFrom(t);", span="232-232"];
d38 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ParseTimeSpan(string)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.ParseTimeSpan(string)", span="240-240"];
d37 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ParseTimeSpan(string)", label="return TimeSpan.Parse(input, CultureInfo.InvariantCulture);", span="243-243"];
d111 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", span="333-333"];
d100 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", label="targetType == typeof(decimal)", span="335-335"];
d101 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", label="return (decimal)i;", span="336-336"];
d102 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", label="targetType == typeof(double)", span="337-337"];
d103 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", label="return (double)i;", span="338-338"];
d104 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", label="targetType == typeof(float)", span="339-339"];
d105 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", label="return (float)i;", span="340-340"];
d106 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", label="targetType == typeof(ulong)", span="341-341"];
d107 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", label="return (ulong)i;", span="342-342"];
d108 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", label="return System.Convert.ChangeType((long)i, targetType, CultureInfo.InvariantCulture);", span="346-346"];
d110 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", label="throw new InvalidOperationException(''Can not convert from BigInteger to {0}.''.FormatWith(CultureInfo.InvariantCulture, targetType), ex);", span="350-350"];
d117 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", label="ConvertResult.Success", span="369-369"];
d119 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", label="ConvertResult.CannotConvertNull", span="371-371"];
d121 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", label="ConvertResult.NotInstantiableType", span="373-373"];
d123 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", label="ConvertResult.NoValidConversion", span="375-375"];
d125 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", label="throw new InvalidOperationException(''Unexpected conversion result.'');", span="378-378"];
d118 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", label="return value;", span="370-370"];
d134 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", label="return true;", span="387-387"];
d135 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = null", span="389-389"];
d50 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(object)", label="return false;", span="278-278"];
d279 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", span="622-622"];
d278 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", label="return JsonTypeReflector.GetTypeConverter(t);", span="624-624"];
d235 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", span="562-562"];
d243 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", label="return EnsureTypeAssignable(initialValue, ReflectionUtils.GetObjectType(initialValue), targetType);", span="575-575"];
d256 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", span="579-579"];
d246 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", label="Type valueType = (value != null) ? value.GetType() : null", span="581-581"];
d247 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", label="value != null", span="583-583"];
d248 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", label="targetType.IsAssignableFrom(valueType)", span="585-585"];
d249 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", label="return value;", span="586-586"];
d250 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", label="Func<object, object> castConverter = CastConverters.Get(new TypeConvertKey(valueType, targetType))", span="588-588"];
d252 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", label="return castConverter(value);", span="590-590"];
d253 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", label="ReflectionUtils.IsNullable(targetType)", span="594-594"];
d255 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", label="throw new ArgumentException(''Could not cast or convert from {0} to {1}.''.FormatWith(CultureInfo.InvariantCulture, (initialType != null) ? initialType.ToString() : ''{null}'', targetType));", span="598-598"];
d61 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", label="return null;", span="299-299"];
d274 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", span="602-602"];
d261 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", label="nullableValue == null", span="604-604"];
d263 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", label="nullableValue is SqlInt32", span="606-606"];
d264 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", label="return ToValue((SqlInt32)nullableValue);", span="607-607"];
d265 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", label="nullableValue is SqlInt64", span="608-608"];
d266 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", label="return ToValue((SqlInt64)nullableValue);", span="609-609"];
d267 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", label="nullableValue is SqlBoolean", span="610-610"];
d268 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", label="return ToValue((SqlBoolean)nullableValue);", span="611-611"];
d269 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", label="nullableValue is SqlString", span="612-612"];
d270 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", label="return ToValue((SqlString)nullableValue);", span="613-613"];
d271 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", label="nullableValue is SqlDateTime", span="614-614"];
d272 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", label="return ToValue((SqlDateTime)nullableValue);", span="615-615"];
d273 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", label="throw new ArgumentException(''Unsupported INullable type: {0}''.FormatWith(CultureInfo.InvariantCulture, nullableValue.GetType()));", span="617-617"];
d24 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="247-247"];
d194 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="fromConverter != null && fromConverter.CanConvertFrom(initialType)", span="510-510"];
d22 [cluster="System.Type.IsEnum()", label="Entry System.Type.IsEnum()", span="173-173"];
d213 [cluster="object.ToString()", label="Entry object.ToString()", span="0-0"];
d214 [cluster="System.Enum.Parse(System.Type, string, bool)", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
d216 [cluster="System.Enum.ToObject(System.Type, object)", label="Entry System.Enum.ToObject(System.Type, object)", span="0-0"];
d112 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
d217 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0"];
d218 [cluster="System.Guid.Guid(byte[])", label="Entry System.Guid.Guid(byte[])", span="0-0"];
d219 [cluster="System.Guid.ToByteArray()", label="Entry System.Guid.ToByteArray()", span="0-0"];
d225 [cluster="System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", label="Entry System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", span="0-0"];
d226 [cluster="System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", label="Entry System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", span="0-0"];
d228 [cluster="System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", label="Entry System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", span="0-0"];
d201 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = null", span="527-527"];
d229 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="237-237"];
d207 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = null", span="541-541"];
d232 [cluster="System.Type.IsInterface()", label="Entry System.Type.IsInterface()", span="128-128"];
d233 [cluster="System.Type.IsGenericTypeDefinition()", label="Entry System.Type.IsGenericTypeDefinition()", span="146-146"];
d234 [cluster="System.Type.IsAbstract()", label="Entry System.Type.IsAbstract()", span="492-492"];
d126 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", span="364-364"];
d120 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", label="throw new Exception(''Can not convert null {0} into non-nullable {1}.''.FormatWith(CultureInfo.InvariantCulture, initialValue.GetType(), targetType));", span="372-372"];
d122 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", label="throw new ArgumentException(''Target type {0} is not a value type or a non-abstract class.''.FormatWith(CultureInfo.InvariantCulture, targetType), ''targetType'');", span="374-374"];
d124 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", label="throw new InvalidOperationException(''Can not convert from {0} to {1}.''.FormatWith(CultureInfo.InvariantCulture, initialValue.GetType(), targetType));", span="376-376"];
d139 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", span="382-382"];
d241 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", label="TryConvert(initialValue, culture, targetType, out convertedValue)", span="572-572"];
d236 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", label="object convertedValue", span="564-564"];
d4 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", span="190-190"];
d18 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", label="isEnum = false", span="217-217"];
d334 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", span="728-728"];
d20 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", span="190-190"];
d13 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", label="Type nonNullable = Nullable.GetUnderlyingType(t)", span="208-208"];
d94 [cluster="Unk.Parse", label="Entry Unk.Parse", span=""];
d95 [cluster="BigInteger.cstr", label="Entry BigInteger.cstr", span=""];
d96 [cluster="System.InvalidCastException.InvalidCastException(string)", label="Entry System.InvalidCastException.InvalidCastException(string)", span="0-0"];
d98 [cluster="string.FormatWith(System.IFormatProvider, object)", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
d212 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
d283 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", label="PrimitiveTypeCode.Byte", span="633-633"];
d3 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", span="184-184"];
d11 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", label="return GetTypeCode(Enum.GetUnderlyingType(t));", span="202-202"];
d17 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", label="return GetTypeCode(nullableUnderlyingType);", span="213-213"];
d1 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", label="bool isEnum", span="186-186"];
d2 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", label="return GetTypeCode(t, out isEnum);", span="187-187"];
d15 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", label="Type nullableUnderlyingType = typeof(Nullable<>).MakeGenericType(Enum.GetUnderlyingType(nonNullable))", span="211-211"];
d287 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", label="PrimitiveTypeCode.UInt32", span="637-637"];
d310 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="i++", span="673-673"];
d327 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="i++", span="684-684"];
d308 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="c < 0 || c > 9", span="677-677"];
d322 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="c < 0 || c > 9", span="704-704"];
d324 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", label="i++", span="700-700"];
d39 [cluster="System.TimeSpan.Parse(string, System.IFormatProvider)", label="Entry System.TimeSpan.Parse(string, System.IFormatProvider)", span="0-0"];
d109 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", label=Exception, span="348-348"];
d113 [cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0"];
d131 [cluster="System.InvalidOperationException.InvalidOperationException(string)", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
d136 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", label="return false;", span="390-390"];
d48 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(object)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(object)", span="275-275"];
d49 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(object)", label="!(obj is TypeConvertKey)", span="277-277"];
d52 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(object)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(object)", span="275-275"];
d280 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetTypeConverter(System.Type)", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetTypeConverter(System.Type)", span="217-217"];
d244 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", span="562-562"];
d237 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", label="targetType == typeof(object)", span="566-566"];
d238 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", label="return initialValue;", span="567-567"];
d239 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", label="initialValue == null && ReflectionUtils.IsNullable(targetType)", span="569-569"];
d245 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", span="136-136"];
d254 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", label="return null;", span="595-595"];
d251 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", label="castConverter != null", span="589-589"];
d40 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.TypeConvertKey(System.Type, System.Type)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.TypeConvertKey(System.Type, System.Type)", span="264-264"];
d257 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", label="Entry Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", span="50-50"];
d258 [cluster="System.Func<T, TResult>.Invoke(T)", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
d259 [cluster="System.ArgumentException.ArgumentException(string)", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
d260 [cluster="System.Type.ToString()", label="Entry System.Type.ToString()", span="0-0"];
d129 [cluster="string.FormatWith(System.IFormatProvider, object, object)", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
d56 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", span="292-292"];
d60 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", label="castMethodInfo == null", span="298-298"];
d64 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", span="292-292"];
d262 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", label="return null;", span="605-605"];
d275 [cluster="Unk.ToValue", label="Entry Unk.ToValue", span=""];
d276 [cluster="Unk.GetType", label="Entry Unk.GetType", span=""];
d277 [cluster="Unk.FormatWith", label="Entry Unk.FormatWith", span=""];
d12 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", label="ReflectionUtils.IsNullableType(t)", span="206-206"];
d227 [cluster="System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)", label="Entry System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)", span="0-0"];
d9 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", label="t.IsEnum()", span="199-199"];
d14 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", label="nonNullable.IsEnum()", span="209-209"];
d128 [cluster="System.Exception.Exception(string)", label="Entry System.Exception.Exception(string)", span="0-0"];
d130 [cluster="System.ArgumentException.ArgumentException(string, string)", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
d137 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", label="value = null", span="394-394"];
d138 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", label="return false;", span="395-395"];
d242 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", label="return convertedValue;", span="573-573"];
d5 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", label="PrimitiveTypeCode typeCode", span="192-192"];
d6 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", label="TypeCodeMap.TryGetValue(t, out typeCode)", span="193-193"];
d346 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="int i = start", span="753-753"];
d353 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="int i = start", span="764-764"];
d374 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", span="728-728"];
d335 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="value = 0", span="730-730"];
d336 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="length == 0", span="732-732"];
d338 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="bool isNegative = (chars[start] == '-')", span="735-735"];
d340 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="length == 1", span="740-740"];
d342 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="start++", span="743-743"];
d343 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="length--", span="744-744"];
d344 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="int end = start + length", span="747-747"];
d345 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="length > 19", span="750-750"];
d348 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="int c = chars[i] - '0'", span="755-755"];
d355 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="int c = chars[i] - '0'", span="766-766"];
d362 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="c = chars[i] - '0'", span="782-782"];
d358 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="long newValue = (10 * value) - c", span="771-771"];
d8 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", label="return typeCode;", span="196-196"];
d284 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", label="PrimitiveTypeCode.Int16", span="634-634"];
d10 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", label="isEnum = true", span="201-201"];
d23 [cluster="System.Enum.GetUnderlyingType(System.Type)", label="Entry System.Enum.GetUnderlyingType(System.Type)", span="0-0"];
d16 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", label="isEnum = true", span="212-212"];
d26 [cluster="System.Type.MakeGenericType(params System.Type[])", label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0"];
d286 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", label="PrimitiveTypeCode.Int32", span="636-636"];
d53 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", span="283-283"];
d51 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(object)", label="return Equals((TypeConvertKey)obj);", span="280-280"];
d381 [label="ref Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", span=""];
d240 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", label="return null;", span="570-570"];
d43 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.TypeConvertKey(System.Type, System.Type)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.TypeConvertKey(System.Type, System.Type)", span="264-264"];
d41 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.TypeConvertKey(System.Type, System.Type)", label="_initialType = initialType", span="266-266"];
d42 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.TypeConvertKey(System.Type, System.Type)", label="_targetType = targetType", span="267-267"];
d57 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", label="MethodInfo castMethodInfo = t.TargetType.GetMethod(''op_Implicit'', new[] { t.InitialType })", span="294-294"];
d63 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", label="return o => call(null, o);", span="303-303"];
d58 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", label="castMethodInfo == null", span="295-295"];
d59 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", label="castMethodInfo = t.TargetType.GetMethod(''op_Explicit'', new[] { t.InitialType })", span="296-296"];
d62 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", label="MethodCall<object, object> call = JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(castMethodInfo)", span="301-301"];
d7 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", label="isEnum = false", span="195-195"];
d21 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
d347 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="i < end", span="753-753"];
d351 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="i++", span="753-753"];
d354 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="i < end", span="764-764"];
d360 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="i++", span="776-776"];
d368 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="i++", span="764-764"];
d372 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="value = -value", span="802-802"];
d337 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="return ParseResult.Invalid;", span="733-733"];
d341 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="return ParseResult.Invalid;", span="741-741"];
d352 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="return ParseResult.Overflow;", span="761-761"];
d350 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="return ParseResult.Invalid;", span="758-758"];
d357 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="return ParseResult.Invalid;", span="769-769"];
d367 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="value = newValue", span="791-791"];
d366 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="return ParseResult.Overflow;", span="788-788"];
d364 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="return ParseResult.Invalid;", span="785-785"];
d373 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="return ParseResult.Success;", span="805-805"];
d371 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="return ParseResult.Overflow;", span="800-800"];
d359 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="newValue > value", span="774-774"];
d370 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="value == long.MinValue", span="799-799"];
d339 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label=isNegative, span="737-737"];
d369 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="!isNegative", span="796-796"];
d361 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="i < end", span="780-780"];
d349 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="c < 0 || c > 9", span="757-757"];
d356 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="c < 0 || c > 9", span="768-768"];
d363 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="c < 0 || c > 9", span="784-784"];
d285 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", label="PrimitiveTypeCode.UInt16", span="635-635"];
d55 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", span="283-283"];
d54 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", label="return (_initialType == other._initialType && _targetType == other._targetType);", span="285-285"];
d380 [label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", span=""];
d379 [label="out Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", span=""];
d65 [cluster="System.Type.GetMethod(string, System.Type[])", label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0"];
d68 [cluster="lambda expression", label="call(null, o)", span="303-303"];
d66 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", span="64-64"];
d365 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", label="i++", span="780-780"];
d45 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.GetHashCode()", label="return _initialType.GetHashCode() ^ _targetType.GetHashCode();", span="272-272"];
d382 [label=call, span=""];
d67 [cluster="lambda expression", label="Entry lambda expression", span="303-303"];
d69 [cluster="lambda expression", label="Exit lambda expression", span="303-303"];
d70 [cluster="Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", label="Entry Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", span="27-27"];
d44 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.GetHashCode()", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.GetHashCode()", span="270-270"];
d46 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.GetHashCode()", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.GetHashCode()", span="270-270"];
d47 [cluster="System.Type.GetHashCode()", label="Entry System.Type.GetHashCode()", span="0-0"];
m1_18 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonProperty.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="407-407"];
m1_12 [cluster="Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", file="JsonProperty.cs", label="Entry Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", span="285-285"];
m1_13 [cluster="Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", file="JsonProperty.cs", label=_skipPropertyNameEscape, span="287-287"];
m1_14 [cluster="Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", file="JsonProperty.cs", label="writer.WritePropertyName(PropertyName, false)", span="288-288"];
m1_15 [cluster="Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", file="JsonProperty.cs", label="writer.WritePropertyName(PropertyName)", span="290-290"];
m1_16 [cluster="Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", file="JsonProperty.cs", label="Exit Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", span="285-285"];
m1_9 [cluster="Newtonsoft.Json.Serialization.JsonProperty.ToString()", file="JsonProperty.cs", label="Entry Newtonsoft.Json.Serialization.JsonProperty.ToString()", span="256-256"];
m1_10 [cluster="Newtonsoft.Json.Serialization.JsonProperty.ToString()", file="JsonProperty.cs", label="return PropertyName;", span="258-258"];
m1_11 [cluster="Newtonsoft.Json.Serialization.JsonProperty.ToString()", file="JsonProperty.cs", label="Exit Newtonsoft.Json.Serialization.JsonProperty.ToString()", span="256-256"];
m1_0 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonProperty.cs", label="Entry Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", span="170-170"];
m1_1 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonProperty.cs", label="_propertyType == null", span="172-172"];
m1_2 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonProperty.cs", label="return null;", span="173-173"];
m1_3 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonProperty.cs", label="!_hasExplicitDefaultValue && !_hasGeneratedDefaultValue", span="175-175"];
m1_4 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonProperty.cs", label="_defaultValue = ReflectionUtils.GetDefaultValue(PropertyType)", span="177-177"];
m1_6 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonProperty.cs", label="return _defaultValue;", span="181-181"];
m1_5 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonProperty.cs", label="_hasGeneratedDefaultValue = true", span="178-178"];
m1_7 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonProperty.cs", label="Exit Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", span="170-170"];
m1_17 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string, bool)", file="JsonProperty.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string, bool)", span="417-417"];
m1_8 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="JsonProperty.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", span="992-992"];
m1_19 [file="JsonProperty.cs", label="Newtonsoft.Json.Serialization.JsonProperty", span=""];
m2_59 [cluster="decimal.CompareTo(decimal)", file="JValue.cs", label="Entry decimal.CompareTo(decimal)", span="0-0"];
m2_142 [cluster="System.Convert.ToDecimal(object, System.IFormatProvider)", file="JValue.cs", label="Entry System.Convert.ToDecimal(object, System.IFormatProvider)", span="0-0"];
m2_473 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", span="887-887"];
m2_474 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="object compareValue = (arg is JValue) ? ((JValue)arg).Value : arg", span="889-889"];
m2_475 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="binder.Operation", span="891-891"];
m2_477 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) == 0)", span="894-894"];
m2_480 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) != 0)", span="897-897"];
m2_483 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) > 0)", span="900-900"];
m2_486 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) >= 0)", span="903-903"];
m2_489 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) < 0)", span="906-906"];
m2_492 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) <= 0)", span="909-909"];
m2_502 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="Operation(binder.Operation, instance.Value, compareValue, out result)", span="919-919"];
m2_476 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.Equal", span="893-893"];
m2_479 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.NotEqual", span="896-896"];
m2_482 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.GreaterThan", span="899-899"];
m2_485 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.GreaterThanOrEqual", span="902-902"];
m2_488 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.LessThan", span="905-905"];
m2_491 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.LessThanOrEqual", span="908-908"];
m2_494 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.Add", span="911-911"];
m2_478 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="return true;", span="895-895"];
m2_481 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="return true;", span="898-898"];
m2_484 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="return true;", span="901-901"];
m2_487 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="return true;", span="904-904"];
m2_490 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="return true;", span="907-907"];
m2_493 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="return true;", span="910-910"];
m2_495 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.AddAssign", span="912-912"];
m2_496 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.Subtract", span="913-913"];
m2_497 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.SubtractAssign", span="914-914"];
m2_498 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.Multiply", span="915-915"];
m2_499 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.MultiplyAssign", span="916-916"];
m2_500 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.Divide", span="917-917"];
m2_501 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.DivideAssign", span="918-918"];
m2_503 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="result = new JValue(result)", span="921-921"];
m2_505 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="result = null", span="927-927"];
m2_504 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="return true;", span="922-922"];
m2_506 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="return false;", span="928-928"];
m2_507 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", span="887-887"];
m2_553 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt32(System.IFormatProvider)", span="1027-1027"];
m2_554 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JValue.cs", label="return (uint)this;", span="1029-1029"];
m2_555 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt32(System.IFormatProvider)", span="1027-1027"];
m2_535 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToChar(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToChar(System.IFormatProvider)", span="997-997"];
m2_536 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToChar(System.IFormatProvider)", file="JValue.cs", label="return (char)this;", span="999-999"];
m2_537 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToChar(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToChar(System.IFormatProvider)", span="997-997"];
m2_276 [cluster="Newtonsoft.Json.Linq.JValue.CreateString(string)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.CreateString(string)", span="538-538"];
m2_277 [cluster="Newtonsoft.Json.Linq.JValue.CreateString(string)", file="JValue.cs", label="return new JValue(value, JTokenType.String);", span="540-540"];
m2_278 [cluster="Newtonsoft.Json.Linq.JValue.CreateString(string)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.CreateString(string)", span="538-538"];
m2_156 [cluster="System.Guid.CompareTo(System.Guid)", file="JValue.cs", label="Entry System.Guid.CompareTo(System.Guid)", span="0-0"];
m2_393 [cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteRawValue(string)", span="814-814"];
m2_413 [cluster="int.GetHashCode()", file="JValue.cs", label="Entry int.GetHashCode()", span="0-0"];
m2_400 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="947-947"];
m2_389 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", span="981-981"];
m2_559 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt64(System.IFormatProvider)", span="1037-1037"];
m2_560 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JValue.cs", label="return (ulong)this;", span="1039-1039"];
m2_561 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt64(System.IFormatProvider)", span="1037-1037"];
m2_402 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(float)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(float)", span="873-873"];
m2_519 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", span="970-970"];
m2_520 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="JValue.cs", label="_value == null", span="972-972"];
m2_521 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="JValue.cs", label="return TypeCode.Empty;", span="973-973"];
m2_522 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", color=red, community=0, file="JValue.cs", label="-1: _value is DateTimeOffset", span="976-976"];
m2_523 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", color=red, community=0, file="JValue.cs", label="-1: return TypeCode.DateTime;", span="977-977"];
m2_524 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", color=red, community=0, file="JValue.cs", label="-1: _value is BigInteger", span="980-980"];
m2_525 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", color=red, community=0, file="JValue.cs", label="-1: return TypeCode.Object;", span="981-981"];
m2_526 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="JValue.cs", label="IConvertible convertable = _value as IConvertible", span="984-984"];
m2_527 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="JValue.cs", label="convertable == null", span="986-986"];
m2_529 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="JValue.cs", label="return convertable.GetTypeCode();", span="989-989"];
m2_528 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="JValue.cs", label="return TypeCode.Object;", span="987-987"];
m2_530 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", span="970-970"];
m2_4 [cluster="Newtonsoft.Json.Linq.JValue.JValue(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(Newtonsoft.Json.Linq.JValue)", span="61-61"];
m2_5 [cluster="Newtonsoft.Json.Linq.JValue.JValue(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(Newtonsoft.Json.Linq.JValue)", span="61-61"];
m2_143 [cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", span="358-358"];
m2_162 [cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="JValue.cs", label="double d1 = Convert.ToDouble(objA, CultureInfo.InvariantCulture)", span="360-360"];
m2_163 [cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="JValue.cs", label="double d2 = Convert.ToDouble(objB, CultureInfo.InvariantCulture)", span="361-361"];
m2_164 [cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="JValue.cs", label="MathUtils.ApproxEquals(d1, d2)", span="364-364"];
m2_166 [cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="JValue.cs", label="return d1.CompareTo(d2);", span="367-367"];
m2_165 [cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="JValue.cs", label="return 0;", span="365-365"];
m2_167 [cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", span="358-358"];
m2_18 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", span="125-125"];
m2_19 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", span="125-125"];
m2_26 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Guid)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.Guid)", span="163-163"];
m2_27 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Guid)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(System.Guid)", span="163-163"];
m2_30 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", span="181-181"];
m2_31 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", span="181-181"];
m2_145 [cluster="long.CompareTo(long)", file="JValue.cs", label="Entry long.CompareTo(long)", span="0-0"];
m2_565 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDouble(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDouble(System.IFormatProvider)", span="1047-1047"];
m2_566 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDouble(System.IFormatProvider)", file="JValue.cs", label="return (double)this;", span="1049-1049"];
m2_567 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDouble(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDouble(System.IFormatProvider)", span="1047-1047"];
m2_416 [cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", span="750-750"];
m2_417 [cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="other == null", span="752-752"];
m2_419 [cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="return ValuesEquals(this, other);", span="755-755"];
m2_418 [cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="return false;", span="753-753"];
m2_420 [cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", span="750-750"];
m2_150 [cluster="System.Convert.ToDateTime(object, System.IFormatProvider)", file="JValue.cs", label="Entry System.Convert.ToDateTime(object, System.IFormatProvider)", span="0-0"];
m2_562 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSingle(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSingle(System.IFormatProvider)", span="1042-1042"];
m2_563 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSingle(System.IFormatProvider)", file="JValue.cs", label="return (float)this;", span="1044-1044"];
m2_564 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSingle(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSingle(System.IFormatProvider)", span="1042-1042"];
m2_61 [cluster="System.Math.Truncate(double)", file="JValue.cs", label="Entry System.Math.Truncate(double)", span="0-0"];
m2_20 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTimeOffset)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.DateTimeOffset)", span="135-135"];
m2_21 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTimeOffset)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(System.DateTimeOffset)", span="135-135"];
m2_397 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(long)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long)", span="854-854"];
m2_398 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ulong)", span="864-864"];
m2_550 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt32(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt32(System.IFormatProvider)", span="1022-1022"];
m2_551 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt32(System.IFormatProvider)", file="JValue.cs", label="return (int)this;", span="1024-1024"];
m2_552 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt32(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt32(System.IFormatProvider)", span="1022-1022"];
m2_285 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", span="561-561"];
m2_286 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value == null", span="563-563"];
m2_288 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value == DBNull.Value", span="566-566"];
m2_290 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is string", span="569-569"];
m2_291 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return GetStringValueType(current);", span="570-570"];
m2_292 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is long || value is int || value is short || value is sbyte\r\n                     || value is ulong || value is uint || value is ushort || value is byte", span="571-572"];
m2_294 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is Enum", span="574-574"];
m2_296 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is BigInteger", span="577-577"];
m2_298 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is double || value is float || value is decimal", span="580-580"];
m2_300 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is DateTime", span="582-582"];
m2_302 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is DateTimeOffset", span="585-585"];
m2_304 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is byte[]", span="588-588"];
m2_306 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is bool", span="590-590"];
m2_308 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is Guid", span="592-592"];
m2_310 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is Uri", span="594-594"];
m2_312 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is TimeSpan", span="596-596"];
m2_314 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="throw new ArgumentException(''Could not determine JSON object type for type {0}.''.FormatWith(CultureInfo.InvariantCulture, value.GetType()));", span="599-599"];
m2_287 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Null;", span="564-564"];
m2_289 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Null;", span="567-567"];
m2_293 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Integer;", span="573-573"];
m2_295 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Integer;", span="575-575"];
m2_297 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Integer;", span="578-578"];
m2_299 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Float;", span="581-581"];
m2_301 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Date;", span="583-583"];
m2_303 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Date;", span="586-586"];
m2_305 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Bytes;", span="589-589"];
m2_307 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Boolean;", span="591-591"];
m2_309 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Guid;", span="593-593"];
m2_311 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Uri;", span="595-595"];
m2_313 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.TimeSpan;", span="597-597"];
m2_315 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", span="561-561"];
m2_64 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", span="242-242"];
m2_65 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objA == null && objB == null", span="244-244"];
m2_67 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objA != null && objB == null", span="246-246"];
m2_69 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objA == null && objB != null", span="248-248"];
m2_71 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label=valueType, span="251-251"];
m2_73 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objA is BigInteger", span="255-255"];
m2_74 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return CompareBigInteger((BigInteger)objA, objB);", span="256-256"];
m2_75 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objB is BigInteger", span="257-257"];
m2_76 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return -CompareBigInteger((BigInteger)objB, objA);", span="258-258"];
m2_77 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objA is ulong || objB is ulong || objA is decimal || objB is decimal", span="260-260"];
m2_78 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return Convert.ToDecimal(objA, CultureInfo.InvariantCulture).CompareTo(Convert.ToDecimal(objB, CultureInfo.InvariantCulture));", span="261-261"];
m2_79 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objA is float || objB is float || objA is double || objB is double", span="262-262"];
m2_80 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return CompareFloat(objA, objB);", span="263-263"];
m2_81 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return Convert.ToInt64(objA, CultureInfo.InvariantCulture).CompareTo(Convert.ToInt64(objB, CultureInfo.InvariantCulture));", span="265-265"];
m2_83 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objA is BigInteger", span="268-268"];
m2_84 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return CompareBigInteger((BigInteger)objA, objB);", span="269-269"];
m2_85 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objB is BigInteger", span="270-270"];
m2_86 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return -CompareBigInteger((BigInteger)objB, objA);", span="271-271"];
m2_87 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return CompareFloat(objA, objB);", span="273-273"];
m2_91 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="string s1 = Convert.ToString(objA, CultureInfo.InvariantCulture)", span="277-277"];
m2_92 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="string s2 = Convert.ToString(objB, CultureInfo.InvariantCulture)", span="278-278"];
m2_95 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="bool b1 = Convert.ToBoolean(objA, CultureInfo.InvariantCulture)", span="282-282"];
m2_96 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="bool b2 = Convert.ToBoolean(objB, CultureInfo.InvariantCulture)", span="283-283"];
m2_99 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objA is DateTime", span="288-288"];
m2_100 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="DateTime date1 = (DateTime)objA", span="291-291"];
m2_102 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objB is DateTimeOffset", span="295-295"];
m2_103 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="date2 = ((DateTimeOffset)objB).DateTime", span="296-296"];
m2_104 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="date2 = Convert.ToDateTime(objB, CultureInfo.InvariantCulture)", span="299-299"];
m2_106 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="DateTimeOffset date1 = (DateTimeOffset)objA", span="306-306"];
m2_108 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objB is DateTimeOffset", span="309-309"];
m2_109 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="date2 = (DateTimeOffset)objB", span="310-310"];
m2_110 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="date2 = new DateTimeOffset(Convert.ToDateTime(objB, CultureInfo.InvariantCulture))", span="312-312"];
m2_113 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="!(objB is byte[])", span="318-318"];
m2_115 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="byte[] bytes1 = objA as byte[]", span="321-321"];
m2_116 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="byte[] bytes2 = objB as byte[]", span="322-322"];
m2_123 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="!(objB is Guid)", span="330-330"];
m2_125 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="Guid guid1 = (Guid)objA", span="333-333"];
m2_126 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="Guid guid2 = (Guid)objB", span="334-334"];
m2_129 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="!(objB is Uri)", span="338-338"];
m2_131 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="Uri uri1 = (Uri)objA", span="341-341"];
m2_132 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="Uri uri2 = (Uri)objB", span="342-342"];
m2_135 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="!(objB is TimeSpan)", span="346-346"];
m2_137 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="TimeSpan ts1 = (TimeSpan)objA", span="349-349"];
m2_138 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="TimeSpan ts2 = (TimeSpan)objB", span="350-350"];
m2_140 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="throw MiscellaneousUtils.CreateArgumentOutOfRangeException(''valueType'', valueType, ''Unexpected value type: {0}''.FormatWith(CultureInfo.InvariantCulture, valueType));", span="354-354"];
m2_66 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return 0;", span="245-245"];
m2_68 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return 1;", span="247-247"];
m2_70 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return -1;", span="249-249"];
m2_72 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="JTokenType.Integer", span="253-253"];
m2_82 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="JTokenType.Float", span="266-266"];
m2_88 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="JTokenType.Comment", span="274-274"];
m2_94 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="JTokenType.Boolean", span="281-281"];
m2_98 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="JTokenType.Date", span="286-286"];
m2_112 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="JTokenType.Bytes", span="317-317"];
m2_122 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="JTokenType.Guid", span="329-329"];
m2_128 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="JTokenType.Uri", span="337-337"];
m2_134 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="JTokenType.TimeSpan", span="345-345"];
m2_89 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="JTokenType.String", span="275-275"];
m2_90 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="JTokenType.Raw", span="276-276"];
m2_93 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return string.CompareOrdinal(s1, s2);", span="280-280"];
m2_97 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return b1.CompareTo(b2);", span="285-285"];
m2_101 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="DateTime date2", span="292-292"];
m2_105 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return date1.CompareTo(date2);", span="301-301"];
m2_107 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="DateTimeOffset date2", span="307-307"];
m2_111 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return date1.CompareTo(date2);", span="314-314"];
m2_114 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="throw new ArgumentException(''Object must be of type byte[].'');", span="319-319"];
m2_117 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="bytes1 == null", span="323-323"];
m2_121 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return MiscellaneousUtils.ByteArrayCompare(bytes1, bytes2);", span="328-328"];
m2_119 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="bytes2 == null", span="325-325"];
m2_118 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return -1;", span="324-324"];
m2_120 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return 1;", span="326-326"];
m2_124 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="throw new ArgumentException(''Object must be of type Guid.'');", span="331-331"];
m2_127 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return guid1.CompareTo(guid2);", span="336-336"];
m2_130 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="throw new ArgumentException(''Object must be of type Uri.'');", span="339-339"];
m2_133 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return Comparer<string>.Default.Compare(uri1.ToString(), uri2.ToString());", span="344-344"];
m2_136 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="throw new ArgumentException(''Object must be of type TimeSpan.'');", span="347-347"];
m2_139 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return ts1.CompareTo(ts2);", span="352-352"];
m2_141 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", span="242-242"];
m2_454 [cluster="System.IFormattable.ToString(string, System.IFormatProvider)", file="JValue.cs", label="Entry System.IFormattable.ToString(string, System.IFormatProvider)", span="0-0"];
m2_144 [cluster="System.Convert.ToInt64(object, System.IFormatProvider)", file="JValue.cs", label="Entry System.Convert.ToInt64(object, System.IFormatProvider)", span="0-0"];
m2_443 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", span="840-840"];
m2_447 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="JValue.cs", label="_value == null", span="842-842"];
m2_451 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="JValue.cs", label="return formattable.ToString(format, formatProvider);", span="847-847"];
m2_448 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="JValue.cs", label="return string.Empty;", span="843-843"];
m2_449 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="JValue.cs", label="IFormattable formattable = _value as IFormattable", span="845-845"];
m2_450 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="JValue.cs", label="formattable != null", span="846-846"];
m2_452 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="JValue.cs", label="return _value.ToString();", span="849-849"];
m2_453 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", span="840-840"];
m2_568 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", span="1052-1052"];
m2_569 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JValue.cs", label="return (decimal)this;", span="1054-1054"];
m2_570 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", span="1052-1052"];
m2_12 [cluster="Newtonsoft.Json.Linq.JValue.JValue(ulong)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(ulong)", span="98-98"];
m2_13 [cluster="Newtonsoft.Json.Linq.JValue.JValue(ulong)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(ulong)", span="98-98"];
m2_316 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", span="602-602"];
m2_318 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JValue.cs", label="current == null", span="604-604"];
m2_320 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JValue.cs", label="current.Value", span="607-607"];
m2_324 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JValue.cs", label="return current.Value;", span="612-612"];
m2_319 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JValue.cs", label="return JTokenType.String;", span="605-605"];
m2_321 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JValue.cs", label="JTokenType.Comment", span="609-609"];
m2_325 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JValue.cs", label="return JTokenType.String;", span="614-614"];
m2_322 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JValue.cs", label="JTokenType.String", span="610-610"];
m2_323 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JValue.cs", label="JTokenType.Raw", span="611-611"];
m2_326 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", span="602-602"];
m2_405 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)", span="966-966"];
m2_159 [cluster="System.TimeSpan.CompareTo(System.TimeSpan)", file="JValue.cs", label="Entry System.TimeSpan.CompareTo(System.TimeSpan)", span="0-0"];
m2_152 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="JValue.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0"];
m2_60 [cluster="System.Convert.ToDouble(object, System.IFormatProvider)", file="JValue.cs", label="Entry System.Convert.ToDouble(object, System.IFormatProvider)", span="0-0"];
m2_430 [cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.GetHashCode()", span="786-786"];
m2_431 [cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="JValue.cs", label="_value == null", span="788-788"];
m2_432 [cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="JValue.cs", label="return 0;", span="789-789"];
m2_433 [cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="JValue.cs", label="return _value.GetHashCode();", span="791-791"];
m2_434 [cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.GetHashCode()", span="786-786"];
m2_155 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.ByteArrayCompare(byte[], byte[])", file="JValue.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.ByteArrayCompare(byte[], byte[])", span="78-78"];
m2_151 [cluster="System.DateTime.CompareTo(System.DateTime)", file="JValue.cs", label="Entry System.DateTime.CompareTo(System.DateTime)", span="0-0"];
m2_42 [cluster="Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", span="738-738"];
m2_414 [cluster="Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="return (v1 == v2 || (v1._valueType == v2._valueType && Compare(v1._valueType, v1._value, v2._value) == 0));", span="740-740"];
m2_415 [cluster="Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", span="738-738"];
m2_455 [cluster="Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", span="860-860"];
m2_456 [cluster="Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", file="JValue.cs", label="return new DynamicProxyMetaObject<JValue>(parameter, this, new JValueDynamicProxy(), true);", span="862-862"];
m2_457 [cluster="Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", span="860-860"];
m2_458 [cluster="Newtonsoft.Json.Utilities.DynamicProxyMetaObject<T>.DynamicProxyMetaObject(System.Linq.Expressions.Expression, T, Newtonsoft.Json.Utilities.DynamicProxy<T>, bool)", file="JValue.cs", label="Entry Newtonsoft.Json.Utilities.DynamicProxyMetaObject<T>.DynamicProxyMetaObject(System.Linq.Expressions.Expression, T, Newtonsoft.Json.Utilities.DynamicProxy<T>, bool)", span="40-40"];
m2_16 [cluster="Newtonsoft.Json.Linq.JValue.JValue(float)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(float)", span="116-116"];
m2_17 [cluster="Newtonsoft.Json.Linq.JValue.JValue(float)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(float)", span="116-116"];
m2_148 [cluster="System.Convert.ToBoolean(object, System.IFormatProvider)", file="JValue.cs", label="Entry System.Convert.ToBoolean(object, System.IFormatProvider)", span="0-0"];
m2_157 [cluster="System.Uri.ToString()", file="JValue.cs", label="Entry System.Uri.ToString()", span="0-0"];
m2_571 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", span="1057-1057"];
m2_572 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JValue.cs", label="return (DateTime)this;", span="1059-1059"];
m2_573 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", span="1057-1057"];
m2_149 [cluster="bool.CompareTo(bool)", file="JValue.cs", label="Entry bool.CompareTo(bool)", span="0-0"];
m2_394 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="788-788"];
m2_399 [cluster="Unk.WriteValue", file="JValue.cs", label="Entry Unk.WriteValue", span=""];
m2_56 [cluster="Unk.CompareTo", file="JValue.cs", label="Entry Unk.CompareTo", span=""];
m2_404 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="891-891"];
m2_6 [cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(long)", span="70-70"];
m2_7 [cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(long)", span="70-70"];
m2_160 [cluster="string.FormatWith(System.IFormatProvider, object)", file="JValue.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m2_547 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16(System.IFormatProvider)", span="1017-1017"];
m2_548 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JValue.cs", label="return (ushort)this;", span="1019-1019"];
m2_549 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16(System.IFormatProvider)", span="1017-1017"];
m2_532 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToBoolean(System.IFormatProvider)", span="992-992"];
m2_533 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JValue.cs", label="return (bool)this;", span="994-994"];
m2_534 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToBoolean(System.IFormatProvider)", span="992-992"];
m2_459 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.JValueDynamicProxy()", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.JValueDynamicProxy()", span="865-865"];
m2_32 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(object)", span="190-190"];
m2_33 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(object)", span="190-190"];
m2_169 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", span="371-371"];
m2_170 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="objA is string || objB is string", span="373-373"];
m2_171 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="operation == ExpressionType.Add || operation == ExpressionType.AddAssign", span="375-375"];
m2_172 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = ((objA != null) ? objA.ToString() : null) + ((objB != null) ? objB.ToString() : null)", span="377-377"];
m2_174 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="objA is BigInteger || objB is BigInteger", span="383-383"];
m2_175 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="objA == null || objB == null", span="385-385"];
m2_178 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="BigInteger i1 = ConvertUtils.ToBigInteger(objA)", span="393-393"];
m2_179 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="BigInteger i2 = ConvertUtils.ToBigInteger(objB)", span="394-394"];
m2_180 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label=operation, span="396-396"];
m2_197 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="objA is ulong || objB is ulong || objA is decimal || objB is decimal", span="418-418"];
m2_198 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="objA == null || objB == null", span="420-420"];
m2_201 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="decimal d1 = Convert.ToDecimal(objA, CultureInfo.InvariantCulture)", span="426-426"];
m2_202 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="decimal d2 = Convert.ToDecimal(objB, CultureInfo.InvariantCulture)", span="427-427"];
m2_203 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label=operation, span="429-429"];
m2_220 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="objA is float || objB is float || objA is double || objB is double", span="449-449"];
m2_221 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="objA == null || objB == null", span="451-451"];
m2_224 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="double d1 = Convert.ToDouble(objA, CultureInfo.InvariantCulture)", span="457-457"];
m2_225 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="double d2 = Convert.ToDouble(objB, CultureInfo.InvariantCulture)", span="458-458"];
m2_226 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label=operation, span="460-460"];
m2_243 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="objA is int || objA is uint || objA is long || objA is short || objA is ushort || objA is sbyte || objA is byte ||\r\n                         objB is int || objB is uint || objB is long || objB is short || objB is ushort || objB is sbyte || objB is byte", span="480-481"];
m2_244 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="objA == null || objB == null", span="483-483"];
m2_247 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="long l1 = Convert.ToInt64(objA, CultureInfo.InvariantCulture)", span="489-489"];
m2_248 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="long l2 = Convert.ToInt64(objB, CultureInfo.InvariantCulture)", span="490-490"];
m2_249 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label=operation, span="492-492"];
m2_173 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="378-378"];
m2_176 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = null", span="387-387"];
m2_177 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="388-388"];
m2_183 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = i1 + i2", span="400-400"];
m2_187 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = i1 - i2", span="404-404"];
m2_191 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = i1 * i2", span="408-408"];
m2_195 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = i1 / i2", span="412-412"];
m2_181 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Add", span="398-398"];
m2_185 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Subtract", span="402-402"];
m2_189 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Multiply", span="406-406"];
m2_193 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Divide", span="410-410"];
m2_182 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.AddAssign", span="399-399"];
m2_184 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="401-401"];
m2_186 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.SubtractAssign", span="403-403"];
m2_188 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="405-405"];
m2_190 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.MultiplyAssign", span="407-407"];
m2_192 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="409-409"];
m2_194 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.DivideAssign", span="411-411"];
m2_196 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="413-413"];
m2_199 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = null", span="422-422"];
m2_200 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="423-423"];
m2_206 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = d1 + d2", span="433-433"];
m2_210 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = d1 - d2", span="437-437"];
m2_214 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = d1 * d2", span="441-441"];
m2_218 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = d1 / d2", span="445-445"];
m2_204 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Add", span="431-431"];
m2_208 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Subtract", span="435-435"];
m2_212 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Multiply", span="439-439"];
m2_216 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Divide", span="443-443"];
m2_205 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.AddAssign", span="432-432"];
m2_207 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="434-434"];
m2_209 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.SubtractAssign", span="436-436"];
m2_211 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="438-438"];
m2_213 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.MultiplyAssign", span="440-440"];
m2_215 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="442-442"];
m2_217 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.DivideAssign", span="444-444"];
m2_219 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="446-446"];
m2_222 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = null", span="453-453"];
m2_223 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="454-454"];
m2_229 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = d1 + d2", span="464-464"];
m2_233 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = d1 - d2", span="468-468"];
m2_237 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = d1 * d2", span="472-472"];
m2_241 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = d1 / d2", span="476-476"];
m2_227 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Add", span="462-462"];
m2_231 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Subtract", span="466-466"];
m2_235 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Multiply", span="470-470"];
m2_239 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Divide", span="474-474"];
m2_228 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.AddAssign", span="463-463"];
m2_230 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="465-465"];
m2_232 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.SubtractAssign", span="467-467"];
m2_234 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="469-469"];
m2_236 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.MultiplyAssign", span="471-471"];
m2_238 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="473-473"];
m2_240 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.DivideAssign", span="475-475"];
m2_242 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="477-477"];
m2_266 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = null", span="513-513"];
m2_245 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = null", span="485-485"];
m2_246 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="486-486"];
m2_252 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = l1 + l2", span="496-496"];
m2_256 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = l1 - l2", span="500-500"];
m2_260 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = l1 * l2", span="504-504"];
m2_264 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = l1 / l2", span="508-508"];
m2_250 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Add", span="494-494"];
m2_254 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Subtract", span="498-498"];
m2_258 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Multiply", span="502-502"];
m2_262 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Divide", span="506-506"];
m2_251 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.AddAssign", span="495-495"];
m2_253 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="497-497"];
m2_255 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.SubtractAssign", span="499-499"];
m2_257 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="501-501"];
m2_259 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.MultiplyAssign", span="503-503"];
m2_261 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="505-505"];
m2_263 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.DivideAssign", span="507-507"];
m2_265 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="509-509"];
m2_267 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return false;", span="514-514"];
m2_268 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", span="371-371"];
m2_55 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="JValue.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", span="307-307"];
m2_429 [cluster="object.Equals(object)", file="JValue.cs", label="Entry object.Equals(object)", span="0-0"];
m2_391 [cluster="Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="44-44"];
m2_577 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", span="1705-1705"];
m2_57 [cluster="System.Math.Truncate(decimal)", file="JValue.cs", label="Entry System.Math.Truncate(decimal)", span="0-0"];
m2_154 [cluster="System.ArgumentException.ArgumentException(string)", file="JValue.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m2_270 [cluster="Newtonsoft.Json.Linq.JValue.CloneToken()", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.CloneToken()", span="518-518"];
m2_271 [cluster="Newtonsoft.Json.Linq.JValue.CloneToken()", file="JValue.cs", label="return new JValue(this);", span="520-520"];
m2_272 [cluster="Newtonsoft.Json.Linq.JValue.CloneToken()", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.CloneToken()", span="518-518"];
m2_390 [cluster="Newtonsoft.Json.JsonSerializer.CreateDefault()", file="JValue.cs", label="Entry Newtonsoft.Json.JsonSerializer.CreateDefault()", span="509-509"];
m2_161 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.CreateArgumentOutOfRangeException(string, object, string)", file="JValue.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.CreateArgumentOutOfRangeException(string, object, string)", span="63-63"];
m2_460 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", span="867-867"];
m2_461 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="binder.Type == typeof(JValue)", span="869-869"];
m2_462 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="result = instance", span="871-871"];
m2_464 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="object value = instance.Value", span="875-875"];
m2_467 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="return ReflectionUtils.IsNullable(binder.Type);", span="880-880"];
m2_468 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="result = ConvertUtils.Convert(value, CultureInfo.InvariantCulture, binder.Type)", span="883-883"];
m2_463 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="return true;", span="872-872"];
m2_465 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="value == null", span="877-877"];
m2_466 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="result = null", span="879-879"];
m2_469 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="return true;", span="884-884"];
m2_470 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", span="867-867"];
m2_24 [cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="154-154"];
m2_25 [cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(string)", span="154-154"];
m2_538 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSByte(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSByte(System.IFormatProvider)", span="1002-1002"];
m2_539 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSByte(System.IFormatProvider)", file="JValue.cs", label="return (sbyte)this;", span="1004-1004"];
m2_540 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSByte(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSByte(System.IFormatProvider)", span="1002-1002"];
m2_392 [cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1253-1253"];
m2_395 [cluster="Newtonsoft.Json.JsonWriter.WriteUndefined()", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteUndefined()", span="796-796"];
m2_403 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="826-826"];
m2_407 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte[])", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(byte[])", span="1204-1204"];
m2_28 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", span="172-172"];
m2_29 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", span="172-172"];
m2_406 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", span="956-956"];
m2_440 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString(string)", span="815-815"];
m2_441 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string)", file="JValue.cs", label="return ToString(format, CultureInfo.CurrentCulture);", span="817-817"];
m2_442 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.ToString(string)", span="815-815"];
m2_556 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", span="1032-1032"];
m2_557 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", file="JValue.cs", label="return (long)this;", span="1034-1034"];
m2_558 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", span="1032-1032"];
m2_327 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="651-651"];
m2_328 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="converters != null && converters.Length > 0 && _value != null", span="653-653"];
m2_329 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JsonConverter matchingConverter = JsonSerializer.GetMatchingConverter(converters, _value.GetType())", span="655-655"];
m2_331 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="matchingConverter.WriteJson(writer, _value, JsonSerializer.CreateDefault())", span="658-658"];
m2_335 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteComment((_value != null) ? _value.ToString() : null)", span="666-666"];
m2_338 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteRawValue((_value != null) ? _value.ToString() : null)", span="669-669"];
m2_341 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteNull()", span="672-672"];
m2_344 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteUndefined()", span="675-675"];
m2_348 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((int)_value)", span="679-679"];
m2_350 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((long)_value)", span="681-681"];
m2_352 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((ulong)_value)", span="683-683"];
m2_354 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((BigInteger)_value)", span="686-686"];
m2_355 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue(Convert.ToInt64(_value, CultureInfo.InvariantCulture))", span="689-689"];
m2_359 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((decimal)_value)", span="693-693"];
m2_361 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((double)_value)", span="695-695"];
m2_363 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((float)_value)", span="697-697"];
m2_364 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue(Convert.ToDouble(_value, CultureInfo.InvariantCulture))", span="699-699"];
m2_367 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((_value != null) ? _value.ToString() : null)", span="702-702"];
m2_370 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue(Convert.ToBoolean(_value, CultureInfo.InvariantCulture))", span="705-705"];
m2_374 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((DateTimeOffset)_value)", span="710-710"];
m2_375 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue(Convert.ToDateTime(_value, CultureInfo.InvariantCulture))", span="713-713"];
m2_378 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((byte[])_value)", span="716-716"];
m2_382 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((_value != null) ? _value.ToString() : null)", span="720-720"];
m2_385 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((_value != null) ? ((Uri) _value).OriginalString : null)", span="723-723"];
m2_333 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label=_valueType, span="663-663"];
m2_330 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="matchingConverter != null && matchingConverter.CanWrite", span="656-656"];
m2_332 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="659-659"];
m2_334 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Comment", span="665-665"];
m2_337 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Raw", span="668-668"];
m2_340 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Null", span="671-671"];
m2_343 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Undefined", span="674-674"];
m2_346 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Integer", span="677-677"];
m2_357 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Float", span="691-691"];
m2_366 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.String", span="701-701"];
m2_369 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Boolean", span="704-704"];
m2_372 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Date", span="707-707"];
m2_377 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Bytes", span="715-715"];
m2_380 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Guid", span="718-718"];
m2_384 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Uri", span="722-722"];
m2_336 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="667-667"];
m2_339 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="670-670"];
m2_342 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="673-673"];
m2_345 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="676-676"];
m2_347 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="_value is int", span="678-678"];
m2_349 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="_value is long", span="680-680"];
m2_351 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="_value is ulong", span="682-682"];
m2_353 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="_value is BigInteger", span="685-685"];
m2_356 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="690-690"];
m2_358 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="_value is decimal", span="692-692"];
m2_360 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="_value is double", span="694-694"];
m2_362 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="_value is float", span="696-696"];
m2_365 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="700-700"];
m2_368 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="703-703"];
m2_371 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="706-706"];
m2_373 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="_value is DateTimeOffset", span="709-709"];
m2_376 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="714-714"];
m2_379 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="717-717"];
m2_381 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.TimeSpan", span="719-719"];
m2_383 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="721-721"];
m2_386 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="724-724"];
m2_388 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="throw MiscellaneousUtils.CreateArgumentOutOfRangeException(''TokenType'', _valueType, ''Unexpected token type.'');", span="727-727"];
m2_387 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="651-651"];
m2_471 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="JValue.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="237-237"];
m2_22 [cluster="Newtonsoft.Json.Linq.JValue.JValue(bool)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(bool)", span="145-145"];
m2_23 [cluster="Newtonsoft.Json.Linq.JValue.JValue(bool)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(bool)", span="145-145"];
m2_531 [cluster="System.IConvertible.GetTypeCode()", file="JValue.cs", label="Entry System.IConvertible.GetTypeCode()", span="0-0"];
m2_62 [cluster="System.Math.Abs(double)", file="JValue.cs", label="Entry System.Math.Abs(double)", span="0-0"];
m2_317 [cluster="object.GetType()", file="JValue.cs", label="Entry object.GetType()", span="0-0"];
m2_43 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", span="218-218"];
m2_44 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="int result = i1.CompareTo(ConvertUtils.ToBigInteger(i2))", span="220-220"];
m2_47 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="i2 is decimal", span="227-227"];
m2_48 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="decimal d = (decimal)i2", span="229-229"];
m2_50 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="i2 is double || i2 is float", span="232-232"];
m2_51 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="double d = Convert.ToDouble(i2, CultureInfo.InvariantCulture)", span="234-234"];
m2_45 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="result != 0", span="222-222"];
m2_46 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="return result;", span="223-223"];
m2_53 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="return result;", span="238-238"];
m2_49 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="return (0m).CompareTo(Math.Abs(d - Math.Truncate(d)));", span="230-230"];
m2_52 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="return (0d).CompareTo(Math.Abs(d - Math.Truncate(d)));", span="235-235"];
m2_54 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", span="218-218"];
m2_10 [cluster="Newtonsoft.Json.Linq.JValue.JValue(char)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(char)", span="88-88"];
m2_11 [cluster="Newtonsoft.Json.Linq.JValue.JValue(char)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(char)", span="88-88"];
m2_168 [cluster="Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", file="JValue.cs", label="Entry Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", span="103-103"];
m2_63 [cluster="double.CompareTo(double)", file="JValue.cs", label="Entry double.CompareTo(double)", span="0-0"];
m2_147 [cluster="string.CompareOrdinal(string, string)", file="JValue.cs", label="Entry string.CompareOrdinal(string, string)", span="0-0"];
m2_14 [cluster="Newtonsoft.Json.Linq.JValue.JValue(double)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(double)", span="107-107"];
m2_15 [cluster="Newtonsoft.Json.Linq.JValue.JValue(double)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(double)", span="107-107"];
m2_58 [cluster="System.Math.Abs(decimal)", file="JValue.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m2_0 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", span="51-51"];
m2_1 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="JValue.cs", label="_value = value", span="53-53"];
m2_2 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="JValue.cs", label="_valueType = type", span="54-54"];
m2_3 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", span="51-51"];
m2_146 [cluster="System.Convert.ToString(object, System.IFormatProvider)", file="JValue.cs", label="Entry System.Convert.ToString(object, System.IFormatProvider)", span="0-0"];
m2_412 [cluster="object.GetHashCode()", file="JValue.cs", label="Entry object.GetHashCode()", span="0-0"];
m2_544 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", span="1012-1012"];
m2_545 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", file="JValue.cs", label="return (short)this;", span="1014-1014"];
m2_546 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", span="1012-1012"];
m2_273 [cluster="Newtonsoft.Json.Linq.JValue.CreateComment(string)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.CreateComment(string)", span="528-528"];
m2_274 [cluster="Newtonsoft.Json.Linq.JValue.CreateComment(string)", file="JValue.cs", label="return new JValue(value, JTokenType.Comment);", span="530-530"];
m2_275 [cluster="Newtonsoft.Json.Linq.JValue.CreateComment(string)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.CreateComment(string)", span="528-528"];
m2_444 [cluster="Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", span="827-827"];
m2_445 [cluster="Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", file="JValue.cs", label="return ToString(null, formatProvider);", span="829-829"];
m2_446 [cluster="Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", span="827-827"];
m2_408 [cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", span="730-730"];
m2_409 [cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="JValue.cs", label="int valueHashCode = (_value != null) ? _value.GetHashCode() : 0", span="732-732"];
m2_410 [cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="JValue.cs", label="return ((int)_valueType).GetHashCode() ^ valueHashCode;", span="735-735"];
m2_411 [cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", span="730-730"];
m2_574 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="1062-1062"];
m2_575 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JValue.cs", label="return ToObject(conversionType);", span="1064-1064"];
m2_576 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="1062-1062"];
m2_541 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", span="1007-1007"];
m2_542 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", file="JValue.cs", label="return (byte)this;", span="1009-1009"];
m2_543 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", span="1007-1007"];
m2_158 [cluster="System.Collections.Generic.Comparer<T>.Compare(T, T)", file="JValue.cs", label="Entry System.Collections.Generic.Comparer<T>.Compare(T, T)", span="0-0"];
m2_514 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", span="961-961"];
m2_515 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="obj == null", span="963-963"];
m2_517 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="return Compare(_valueType, _value, obj._value);", span="966-966"];
m2_516 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="return 1;", span="964-964"];
m2_518 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", span="961-961"];
m2_401 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double)", span="882-882"];
m2_34 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="195-195"];
m2_35 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs", label="JValue other = node as JValue", span="197-197"];
m2_36 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs", label="other == null", span="198-198"];
m2_38 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs", label="other == this", span="200-200"];
m2_40 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs", label="return ValuesEquals(this, other);", span="203-203"];
m2_37 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs", label="return false;", span="199-199"];
m2_39 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs", label="return true;", span="201-201"];
m2_41 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="195-195"];
m2_279 [cluster="Newtonsoft.Json.Linq.JValue.CreateNull()", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.CreateNull()", span="547-547"];
m2_280 [cluster="Newtonsoft.Json.Linq.JValue.CreateNull()", file="JValue.cs", label="return new JValue(null, JTokenType.Null);", span="549-549"];
m2_281 [cluster="Newtonsoft.Json.Linq.JValue.CreateNull()", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.CreateNull()", span="547-547"];
m2_153 [cluster="System.DateTimeOffset.CompareTo(System.DateTimeOffset)", file="JValue.cs", label="Entry System.DateTimeOffset.CompareTo(System.DateTimeOffset)", span="0-0"];
m2_421 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.Equals(object)", span="768-768"];
m2_422 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="JValue.cs", label="obj == null", span="770-770"];
m2_424 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="JValue.cs", label="JValue otherValue = obj as JValue", span="773-773"];
m2_427 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="JValue.cs", label="return base.Equals(obj);", span="777-777"];
m2_423 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="JValue.cs", label="return false;", span="771-771"];
m2_425 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="JValue.cs", label="otherValue != null", span="774-774"];
m2_426 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="JValue.cs", label="return Equals(otherValue);", span="775-775"];
m2_428 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.Equals(object)", span="768-768"];
m2_8 [cluster="Newtonsoft.Json.Linq.JValue.JValue(decimal)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(decimal)", span="79-79"];
m2_9 [cluster="Newtonsoft.Json.Linq.JValue.JValue(decimal)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(decimal)", span="79-79"];
m2_435 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString()", span="800-800"];
m2_436 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JValue.cs", label="_value == null", span="802-802"];
m2_437 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JValue.cs", label="return string.Empty;", span="803-803"];
m2_438 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JValue.cs", label="return _value.ToString();", span="805-805"];
m2_439 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.ToString()", span="800-800"];
m2_472 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JValue.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", span="364-364"];
m2_508 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", span="933-933"];
m2_509 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="JValue.cs", label="obj == null", span="935-935"];
m2_511 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="JValue.cs", label="object otherValue = (obj is JValue) ? ((JValue)obj).Value : obj", span="938-938"];
m2_510 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="JValue.cs", label="return 1;", span="936-936"];
m2_512 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="JValue.cs", label="return Compare(_valueType, _value, otherValue);", span="940-940"];
m2_513 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", span="933-933"];
m2_396 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="835-835"];
m2_282 [cluster="Newtonsoft.Json.Linq.JValue.CreateUndefined()", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.CreateUndefined()", span="556-556"];
m2_283 [cluster="Newtonsoft.Json.Linq.JValue.CreateUndefined()", file="JValue.cs", label="return new JValue(null, JTokenType.Undefined);", span="558-558"];
m2_284 [cluster="Newtonsoft.Json.Linq.JValue.CreateUndefined()", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.CreateUndefined()", span="556-556"];
m2_578 [file="JValue.cs", label="Newtonsoft.Json.Linq.JValue", span=""];
m3_5 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonObjectAttributeOptIn.File.File()", file="JValueTests.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonObjectAttributeOptIn.File.File()", span="11-11"];
m3_7 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JValueTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="710-710"];
m3_6 [cluster="System.Guid.NewGuid()", file="JValueTests.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m3_8 [cluster="System.Console.WriteLine(string)", file="JValueTests.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m3_0 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonObjectAttributeOptIn.Example()", file="JValueTests.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonObjectAttributeOptIn.Example()", span="24-24"];
m3_1 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonObjectAttributeOptIn.Example()", file="JValueTests.cs", label="File file = new File\r\n        {\r\n          Id = Guid.NewGuid(),\r\n          Name = ''ImportantLegalDocuments.docx'',\r\n          Size = 50 * 1024\r\n        }", span="27-32"];
m3_2 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonObjectAttributeOptIn.Example()", file="JValueTests.cs", label="string json = JsonConvert.SerializeObject(file, Formatting.Indented)", span="34-34"];
m3_3 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonObjectAttributeOptIn.Example()", file="JValueTests.cs", label="Console.WriteLine(json)", span="36-36"];
m3_4 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonObjectAttributeOptIn.Example()", file="JValueTests.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonObjectAttributeOptIn.Example()", span="24-24"];
m4_305 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Post.Post()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Post.Post()", span="689-689"];
m4_61 [cluster="System.Collections.IEnumerable.Cast<TResult>()", file="LinqToJsonTest.cs", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
m4_260 [cluster="Newtonsoft.Json.Linq.JContainer.Descendants()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Descendants()", span="279-279"];
m4_492 [cluster="Newtonsoft.Json.Tests.TestObjects.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", span="29-29"];
m4_57 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableAsEnumerable()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableAsEnumerable()", span="133-133"];
m4_58 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableAsEnumerable()", file="LinqToJsonTest.cs", label="IEnumerable tokens = new JEnumerable<JToken>()", span="135-135"];
m4_59 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableAsEnumerable()", file="LinqToJsonTest.cs", label="Assert.AreEqual(0, tokens.Cast<JToken>().Count())", span="137-137"];
m4_60 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableAsEnumerable()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableAsEnumerable()", span="133-133"];
m4_299 [cluster="Newtonsoft.Json.Linq.JArray.JArray(params object[])", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray(params object[])", span="82-82"];
m4_137 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="304-304"];
m4_461 [cluster="Unk.IsNull", file="LinqToJsonTest.cs", label="Entry Unk.IsNull", span=""];
m4_31 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.IncompleteContainers()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.IncompleteContainers()", span="105-105"];
m4_32 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.IncompleteContainers()", file="LinqToJsonTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => JArray.Parse(''[1,''),\r\n                ''Unexpected end of content while loading JArray. Path '[0]', line 1, position 3.'')", span="107-109"];
m4_33 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.IncompleteContainers()", file="LinqToJsonTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => JArray.Parse(''[1''),\r\n                ''Unexpected end of content while loading JArray. Path '[0]', line 1, position 2.'')", span="111-113"];
m4_34 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.IncompleteContainers()", file="LinqToJsonTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => JObject.Parse(''{'key':1,''),\r\n                ''Unexpected end of content while loading JObject. Path 'key', line 1, position 9.'')", span="115-117"];
m4_35 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.IncompleteContainers()", file="LinqToJsonTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => JObject.Parse(''{'key':1''),\r\n                ''Unexpected end of content while loading JObject. Path 'key', line 1, position 8.'')", span="119-121"];
m4_36 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.IncompleteContainers()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.IncompleteContainers()", span="105-105"];
m4_392 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", span="942-942"];
m4_393 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs", label="JObject o =\r\n                new JObject(\r\n                    new JProperty(''Test1'', new DateTime(2000, 10, 15, 5, 5, 5, DateTimeKind.Utc)),\r\n                    new JProperty(''Test2'', new DateTimeOffset(2000, 10, 15, 5, 5, 5, new TimeSpan(11, 11, 0))),\r\n                    new JProperty(''Test3'', ''Test3Value''),\r\n                    new JProperty(''Test4'', null)\r\n                    )", span="944-950"];
m4_394 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="952-952"];
m4_399 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs", label="serializer.Serialize(writer, o)", span="957-957"];
m4_395 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs", label="serializer.Converters.Add(new JavaScriptDateTimeConverter())", span="953-953"];
m4_396 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs", label="StringWriter sw = new StringWriter()", span="954-954"];
m4_397 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs", label="JsonWriter writer = new JsonTextWriter(sw)", span="955-955"];
m4_400 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs", label="string json = sw.ToString()", span="959-959"];
m4_398 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs", label="writer.Formatting = Formatting.Indented", span="956-956"];
m4_401 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Test1'''': new Date(\r\n    971586305000\r\n  ),\r\n  ''''Test2'''': new Date(\r\n    971546045000\r\n  ),\r\n  ''''Test3'''': ''''Test3Value'''',\r\n  ''''Test4'''': null\r\n}'', json)", span="961-970"];
m4_402 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", span="942-942"];
m4_274 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", span="598-598"];
m4_275 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs", label="string json = @''{''''Color'''':2,''''Establised'''':new Date(1264118400000),''''Width'''':1.1,''''Employees'''':999,''''RoomsPerFloor'''':[1,2,3,4,5,6,7,8,9],''''Open'''':false,''''Symbol'''':''''@'''',''''Mottos'''':[''''Hello World'''',''''öäüÖÄÜ\\'{new Date(12345);}[222]_µ@²³~'''',null,'''' ''''],''''Cost'''':100980.1,''''Escape'''':''''\r\n\t\f\b?{\\r\\n\''''''''',''''product'''':[{''''Name'''':''''Rocket'''',''''ExpiryDate'''':new Date(949532490000),''''Price'''':0},{''''Name'''':''''Alien'''',''''ExpiryDate'''':new Date(-62135596800000),''''Price'''':0}]}''", span="600-600"];
m4_276 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs", label="JObject o = JObject.Parse(json)", span="602-602"];
m4_277 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs", label="StringAssert.AreEqual(@''''''Establised'''': new Date(\r\n  1264118400000\r\n)'', o.Property(''Establised'').ToString())", span="604-606"];
m4_278 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs", label="StringAssert.AreEqual(@''new Date(\r\n  1264118400000\r\n)'', o.Property(''Establised'').Value.ToString())", span="607-609"];
m4_279 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs", label="Assert.AreEqual(@''''''Width'''': 1.1'', o.Property(''Width'').ToString())", span="610-610"];
m4_280 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs", label="Assert.AreEqual(@''1.1'', ((JValue)o.Property(''Width'').Value).ToString(CultureInfo.InvariantCulture))", span="611-611"];
m4_281 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs", label="Assert.AreEqual(@''''''Open'''': false'', o.Property(''Open'').ToString())", span="612-612"];
m4_282 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs", label="Assert.AreEqual(@''False'', o.Property(''Open'').Value.ToString())", span="613-613"];
m4_283 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs", label="json = @''[null,undefined]''", span="615-615"];
m4_284 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs", label="JArray a = JArray.Parse(json)", span="617-617"];
m4_285 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs", label="StringAssert.AreEqual(@''[\r\n  null,\r\n  undefined\r\n]'', a.ToString())", span="618-621"];
m4_286 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs", label="Assert.AreEqual(@'''', a.Children().ElementAt(0).ToString())", span="622-622"];
m4_287 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs", label="Assert.AreEqual(@'''', a.Children().ElementAt(1).ToString())", span="623-623"];
m4_288 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", span="598-598"];
m4_162 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathAssert(string, string)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathAssert(string, string)", span="338-338"];
m4_163 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathAssert(string, string)", file="LinqToJsonTest.cs", label="int v1 = int.MaxValue", span="340-340"];
m4_165 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathAssert(string, string)", file="LinqToJsonTest.cs", label="JObject o = new JObject(new JProperty(propertyName, value))", span="343-343"];
m4_166 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathAssert(string, string)", file="LinqToJsonTest.cs", label="Assert.AreEqual(expectedPath, value.Path)", span="345-345"];
m4_164 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathAssert(string, string)", file="LinqToJsonTest.cs", label="JValue value = new JValue(v1)", span="341-341"];
m4_167 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathAssert(string, string)", file="LinqToJsonTest.cs", label="JValue selectedValue = (JValue)o.SelectToken(value.Path)", span="347-347"];
m4_168 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathAssert(string, string)", file="LinqToJsonTest.cs", label="Assert.AreEqual(value, selectedValue)", span="349-349"];
m4_169 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathAssert(string, string)", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathAssert(string, string)", span="338-338"];
m4_493 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", span="1269-1269"];
m4_494 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs", label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass\r\n            {\r\n                Guid = new Guid(''1924129C-F7E0-40F3-9607-9939C531395A''),\r\n                NullableGuid = new Guid(''9E9F3ADF-E017-4F72-91E0-617EBE85967D''),\r\n                TimeSpan = TimeSpan.FromDays(1),\r\n                NullableTimeSpan = TimeSpan.FromHours(1),\r\n                Uri = new Uri(''http://testuri.com'')\r\n            }", span="1271-1278"];
m4_495 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs", label="JObject o = JObject.FromObject(c1)", span="1279-1279"];
m4_498 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs", label="Assert.AreEqual(c1.Guid, c2.Guid)", span="1290-1290"];
m4_499 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs", label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="1291-1291"];
m4_500 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs", label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="1292-1292"];
m4_501 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs", label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="1293-1293"];
m4_502 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs", label="Assert.AreEqual(c1.Uri, c2.Uri)", span="1294-1294"];
m4_503 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs", label="string j = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="1296-1296"];
m4_496 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Guid'''': ''''1924129c-f7e0-40f3-9607-9939c531395a'''',\r\n  ''''NullableGuid'''': ''''9e9f3adf-e017-4f72-91e0-617ebe85967d'''',\r\n  ''''TimeSpan'''': ''''1.00:00:00'''',\r\n  ''''NullableTimeSpan'''': ''''01:00:00'''',\r\n  ''''Uri'''': ''''http://testuri.com''''\r\n}'', o.ToString())", span="1281-1287"];
m4_497 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs", label="UriGuidTimeSpanTestClass c2 = o.ToObject<UriGuidTimeSpanTestClass>()", span="1289-1289"];
m4_504 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs", label="StringAssert.AreEqual(j, o.ToString())", span="1298-1298"];
m4_505 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", span="1269-1269"];
m4_566 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="489-489"];
m4_228 [cluster="Unk.ToList", file="LinqToJsonTest.cs", label="Entry Unk.ToList", span=""];
m4_71 [cluster="Unk.IsTrue", file="LinqToJsonTest.cs", label="Entry Unk.IsTrue", span=""];
m4_25 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="371-371"];
m4_55 [cluster="Newtonsoft.Json.Linq.JEnumerable<T>.JEnumerable()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JEnumerable<T>.JEnumerable()", span="41-41"];
m4_198 [cluster="Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", span="330-330"];
m4_272 [cluster="Newtonsoft.Json.Linq.JToken.Value<T>(object)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.Value<T>(object)", span="319-319"];
m4_526 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="LinqToJsonTest.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m4_209 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", span="409-409"];
m4_210 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs", label="string json = @''{\r\n        CPU: 'Intel',\r\n        Drives: [\r\n          'DVD read/writer',\r\n          ''''500 gigabyte hard drive''''\r\n        ]\r\n      }''", span="411-417"];
m4_211 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs", label="JObject o = JObject.Parse(json)", span="419-419"];
m4_212 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs", label="IList<JProperty> properties = o.Properties().ToList()", span="420-420"];
m4_220 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs", label="List<object> parameterValues =\r\n                (from p in o.Properties()\r\n                    where p.Value is JValue\r\n                    select ((JValue)p.Value).Value).ToList()", span="431-434"];
m4_213 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''CPU'', properties[0].Name)", span="422-422"];
m4_214 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''Intel'', (string)properties[0].Value)", span="423-423"];
m4_215 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''Drives'', properties[1].Name)", span="424-424"];
m4_216 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs", label="JArray list = (JArray)properties[1].Value", span="426-426"];
m4_217 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs", label="Assert.AreEqual(2, list.Children().Count())", span="427-427"];
m4_218 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''DVD read/writer'', (string)list.Children().ElementAt(0))", span="428-428"];
m4_219 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''500 gigabyte hard drive'', (string)list.Children().ElementAt(1))", span="429-429"];
m4_221 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs", label="Assert.AreEqual(1, parameterValues.Count)", span="436-436"];
m4_222 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''Intel'', parameterValues[0])", span="437-437"];
m4_223 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", span="409-409"];
m4_568 [cluster="Newtonsoft.Json.Linq.JToken.Remove()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.Remove()", span="377-377"];
m4_5 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.TestClass_ULong.TestClass_ULong()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.TestClass_ULong.TestClass_ULong()", span="56-56"];
m4_141 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JPropertyPath()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JPropertyPath()", span="286-286"];
m4_142 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JPropertyPath()", file="LinqToJsonTest.cs", label="JObject o = new JObject\r\n            {\r\n                {\r\n                    ''person'',\r\n                    new JObject\r\n                    {\r\n                        { ''$id'', 1 }\r\n                    }\r\n                }\r\n            }", span="288-297"];
m4_143 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JPropertyPath()", file="LinqToJsonTest.cs", label="JContainer idProperty = o[''person''][''$id''].Parent", span="299-299"];
m4_144 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JPropertyPath()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''person.$id'', idProperty.Path)", span="300-300"];
m4_145 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JPropertyPath()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JPropertyPath()", span="286-286"];
m4_130 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingEndArrayAndReadFrom()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingEndArrayAndReadFrom()", span="274-274"];
m4_131 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingEndArrayAndReadFrom()", file="LinqToJsonTest.cs", label="StringReader textReader = new StringReader(@''[]'')", span="276-276"];
m4_132 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingEndArrayAndReadFrom()", file="LinqToJsonTest.cs", label="JsonTextReader jsonReader = new JsonTextReader(textReader)", span="278-278"];
m4_133 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingEndArrayAndReadFrom()", file="LinqToJsonTest.cs", label="jsonReader.Read()", span="279-279"];
m4_134 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingEndArrayAndReadFrom()", file="LinqToJsonTest.cs", label="jsonReader.Read()", span="280-280"];
m4_135 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingEndArrayAndReadFrom()", file="LinqToJsonTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => JToken.ReadFrom(jsonReader), @''Error reading JToken from JsonReader. Unexpected token: EndArray. Path '', line 1, position 2.'')", span="282-282"];
m4_136 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingEndArrayAndReadFrom()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingEndArrayAndReadFrom()", span="274-274"];
m4_236 [cluster="Newtonsoft.Json.Linq.JContainer.Values<T>()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Values<T>()", span="270-270"];
m4_196 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", span="125-125"];
m4_41 [cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JArray.Parse(string)", span="156-156"];
m4_205 [cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="104-104"];
m4_410 [cluster="System.IO.StringWriter.ToString()", file="LinqToJsonTest.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m4_9 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject_ByteMaxValue()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject_ByteMaxValue()", span="78-78"];
m4_10 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject_ByteMaxValue()", file="LinqToJsonTest.cs", label="TestClass_Byte instance = new TestClass_Byte { Value = byte.MaxValue }", span="80-80"];
m4_11 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject_ByteMaxValue()", file="LinqToJsonTest.cs", label="JObject output = JObject.FromObject(instance)", span="81-81"];
m4_12 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject_ByteMaxValue()", file="LinqToJsonTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Value'''': 255\r\n}'', output.ToString())", span="83-85"];
m4_13 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject_ByteMaxValue()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject_ByteMaxValue()", span="78-78"];
m4_156 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathTests()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathTests()", span="330-330"];
m4_157 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathTests()", file="LinqToJsonTest.cs", label="EscapedPathAssert(''this has spaces'', ''['this has spaces']'')", span="332-332"];
m4_158 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathTests()", file="LinqToJsonTest.cs", label="EscapedPathAssert(''(RoundBraces)'', ''['(RoundBraces)']'')", span="333-333"];
m4_159 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathTests()", file="LinqToJsonTest.cs", label="EscapedPathAssert(''[SquareBraces]'', ''['[SquareBraces]']'')", span="334-334"];
m4_160 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathTests()", file="LinqToJsonTest.cs", label="EscapedPathAssert(''this.has.dots'', ''['this.has.dots']'')", span="335-335"];
m4_161 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathTests()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathTests()", span="330-330"];
m4_171 [cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="113-113"];
m4_507 [cluster="System.Uri.Uri(string)", file="LinqToJsonTest.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m4_258 [cluster="Newtonsoft.Json.Linq.JToken.Children()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="349-349"];
m4_99 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom()", span="202-202"];
m4_100 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom()", file="LinqToJsonTest.cs", label="StringReader textReader = new StringReader(@''\r\n// hi\r\n[\r\n    1,\r\n    2,\r\n    3\r\n]'')", span="204-210"];
m4_101 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom()", file="LinqToJsonTest.cs", label="JsonTextReader jsonReader = new JsonTextReader(textReader)", span="212-212"];
m4_102 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom()", file="LinqToJsonTest.cs", label="JValue v = (JValue)JToken.ReadFrom(jsonReader, new JsonLoadSettings\r\n            {\r\n                CommentHandling = CommentHandling.Load\r\n            })", span="213-216"];
m4_103 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom()", file="LinqToJsonTest.cs", label="Assert.AreEqual(JTokenType.Comment, v.Type)", span="218-218"];
m4_104 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom()", file="LinqToJsonTest.cs", label="IJsonLineInfo lineInfo = v", span="220-220"];
m4_105 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom()", file="LinqToJsonTest.cs", label="Assert.AreEqual(true, lineInfo.HasLineInfo())", span="221-221"];
m4_106 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom()", file="LinqToJsonTest.cs", label="Assert.AreEqual(3, lineInfo.LineNumber)", span="222-222"];
m4_107 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom()", file="LinqToJsonTest.cs", label="Assert.AreEqual(0, lineInfo.LinePosition)", span="223-223"];
m4_108 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom()", span="202-202"];
m4_323 [cluster="Unk.Where", file="LinqToJsonTest.cs", label="Entry Unk.Where", span=""];
m4_208 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="708-708"];
m4_14 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.TestClass_Byte.TestClass_Byte()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.TestClass_Byte.TestClass_Byte()", span="72-72"];
m4_517 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ExceptionFromOverloadWithJValue()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ExceptionFromOverloadWithJValue()", span="1315-1315"];
m4_518 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ExceptionFromOverloadWithJValue()", file="LinqToJsonTest.cs", label="dynamic name = new JValue(''Matthew Doig'')", span="1317-1317"];
m4_519 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ExceptionFromOverloadWithJValue()", file="LinqToJsonTest.cs", label="IDictionary<string, string> users = new Dictionary<string, string>()", span="1319-1319"];
m4_520 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ExceptionFromOverloadWithJValue()", file="LinqToJsonTest.cs", label="ExceptionAssert.Throws<Microsoft.CSharp.RuntimeBinder.RuntimeBinderException>(() =>\r\n            {\r\n                users.Add(''name2'', name);\r\n\r\n                Assert.AreEqual(users[''name2''], ''Matthew Doig'');\r\n            }, ''The best overloaded method match for 'System.Collections.Generic.IDictionary<string,string>.Add(string, string)' has some invalid arguments'')", span="1322-1327"];
m4_521 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ExceptionFromOverloadWithJValue()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ExceptionFromOverloadWithJValue()", span="1315-1315"];
m4_62 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableEquals()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableEquals()", span="141-141"];
m4_63 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableEquals()", file="LinqToJsonTest.cs", label="JEnumerable<JToken> tokens1 = new JEnumerable<JToken>()", span="143-143"];
m4_64 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableEquals()", file="LinqToJsonTest.cs", label="JEnumerable<JToken> tokens2 = new JEnumerable<JToken>()", span="144-144"];
m4_65 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableEquals()", file="LinqToJsonTest.cs", label="Assert.IsTrue(tokens1.Equals(tokens2))", span="146-146"];
m4_66 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableEquals()", file="LinqToJsonTest.cs", label="object o1 = new JEnumerable<JToken>()", span="148-148"];
m4_67 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableEquals()", file="LinqToJsonTest.cs", label="object o2 = new JEnumerable<JToken>()", span="149-149"];
m4_68 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableEquals()", file="LinqToJsonTest.cs", label="Assert.IsTrue(o1.Equals(o2))", span="151-151"];
m4_69 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableEquals()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableEquals()", span="141-141"];
m4_565 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="382-382"];
m4_146 [cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87"];
m4_567 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="LinqToJsonTest.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m4_56 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="LinqToJsonTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m4_70 [cluster="Newtonsoft.Json.Linq.JEnumerable<T>.Equals(Newtonsoft.Json.Linq.JEnumerable<T>)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JEnumerable<T>.Equals(Newtonsoft.Json.Linq.JEnumerable<T>)", span="108-108"];
m4_27 [cluster="System.Convert.FromBase64String(string)", file="LinqToJsonTest.cs", label="Entry System.Convert.FromBase64String(string)", span="0-0"];
m4_255 [cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values(object)", file="LinqToJsonTest.cs", label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values(object)", span="113-113"];
m4_302 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GetPosts()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GetPosts()", span="697-697"];
m4_303 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GetPosts()", file="LinqToJsonTest.cs", label="return new List<Post>()\r\n            {\r\n                new Post()\r\n                {\r\n                    Title = ''LINQ to JSON beta'',\r\n                    Description = ''Annoucing LINQ to JSON'',\r\n                    Link = ''http://james.newtonking.com/projects/json-net.aspx'',\r\n                    Categories = new List<string>() { ''Json.NET'', ''LINQ'' }\r\n                },\r\n                new Post()\r\n                {\r\n                    Title = ''Json.NET 1.3 + New license + Now on CodePlex'',\r\n                    Description = ''Annoucing the release of Json.NET 1.3, the MIT license and being available on CodePlex'',\r\n                    Link = ''http://james.newtonking.com/projects/json-net.aspx'',\r\n                    Categories = new List<string>() { ''Json.NET'', ''CodePlex'' }\r\n                }\r\n            };", span="699-715"];
m4_304 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GetPosts()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GetPosts()", span="697-697"];
m4_353 [cluster="JArray.cstr", file="LinqToJsonTest.cs", label="Entry JArray.cstr", span=""];
m4_368 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="LinqToJsonTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m4_481 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", span="1247-1247"];
m4_482 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs", label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass()", span="1249-1249"];
m4_483 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs", label="JObject o = JObject.FromObject(c1)", span="1250-1250"];
m4_486 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs", label="Assert.AreEqual(c1.Guid, c2.Guid)", span="1261-1261"];
m4_487 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs", label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="1262-1262"];
m4_488 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs", label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="1263-1263"];
m4_489 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs", label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="1264-1264"];
m4_490 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs", label="Assert.AreEqual(c1.Uri, c2.Uri)", span="1265-1265"];
m4_484 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Guid'''': ''''00000000-0000-0000-0000-000000000000'''',\r\n  ''''NullableGuid'''': null,\r\n  ''''TimeSpan'''': ''''00:00:00'''',\r\n  ''''NullableTimeSpan'''': null,\r\n  ''''Uri'''': null\r\n}'', o.ToString())", span="1252-1258"];
m4_485 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs", label="UriGuidTimeSpanTestClass c2 = o.ToObject<UriGuidTimeSpanTestClass>()", span="1260-1260"];
m4_491 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", span="1247-1247"];
m4_77 [cluster="Newtonsoft.Json.Linq.JEnumerable<T>.GetHashCode()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JEnumerable<T>.GetHashCode()", span="134-134"];
m4_90 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom_IgnoreComments()", span="184-184"];
m4_91 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs", label="StringReader textReader = new StringReader(@''[\r\n    // hi\r\n    1,\r\n    2,\r\n    3\r\n]'')", span="186-191"];
m4_92 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs", label="JsonTextReader jsonReader = new JsonTextReader(textReader)", span="193-193"];
m4_93 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs", label="JArray a = (JArray)JToken.ReadFrom(jsonReader)", span="194-194"];
m4_94 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs", label="Assert.AreEqual(3, a.Count)", span="196-196"];
m4_95 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs", label="Assert.AreEqual(JTokenType.Integer, a[0].Type)", span="197-197"];
m4_96 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom_IgnoreComments()", color=red, community=0, file="LinqToJsonTest.cs", label="-1: Assert.AreEqual(1, ((JValue)a[0]).Value)", span="198-198"];
m4_97 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom_IgnoreComments()", span="184-184"];
m4_419 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="LinqToJsonTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0"];
m4_254 [cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values()", file="LinqToJsonTest.cs", label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values()", span="123-123"];
m4_546 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="LinqToJsonTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m4_301 [cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor(string, params object[])", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor(string, params object[])", span="102-102"];
m4_172 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="293-293"];
m4_411 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", span="974-974"];
m4_412 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", file="LinqToJsonTest.cs", label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n            {\r\n                new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n            }", span="976-982"];
m4_413 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", file="LinqToJsonTest.cs", label="JsonSerializer jsonSerializer = new JsonSerializer()", span="984-984"];
m4_416 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", file="LinqToJsonTest.cs", label="jsonSerializer.Serialize(jsonWriter, testDates)", span="989-989"];
m4_414 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", file="LinqToJsonTest.cs", label="JTokenWriter jsonWriter", span="986-986"];
m4_415 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", file="LinqToJsonTest.cs", label="jsonWriter = new JTokenWriter()", span="987-987"];
m4_417 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", file="LinqToJsonTest.cs", label="Assert.AreEqual(4, jsonWriter.Token.Children().Count())", span="992-992"];
m4_418 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", span="974-974"];
m4_120 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", span="252-252"];
m4_121 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", file="LinqToJsonTest.cs", label="StringReader textReader = new StringReader(@''\r\nundefined\r\n[\r\n    1,\r\n    2,\r\n    3\r\n]'')", span="254-260"];
m4_122 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", file="LinqToJsonTest.cs", label="JsonTextReader jsonReader = new JsonTextReader(textReader)", span="262-262"];
m4_123 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", file="LinqToJsonTest.cs", label="JValue v = (JValue)JToken.ReadFrom(jsonReader)", span="263-263"];
m4_124 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", file="LinqToJsonTest.cs", label="Assert.AreEqual(JTokenType.Undefined, v.Type)", span="265-265"];
m4_125 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", file="LinqToJsonTest.cs", label="IJsonLineInfo lineInfo = v", span="267-267"];
m4_126 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", file="LinqToJsonTest.cs", label="Assert.AreEqual(true, lineInfo.HasLineInfo())", span="268-268"];
m4_127 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", file="LinqToJsonTest.cs", label="Assert.AreEqual(2, lineInfo.LineNumber)", span="269-269"];
m4_128 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", file="LinqToJsonTest.cs", label="Assert.AreEqual(9, lineInfo.LinePosition)", span="270-270"];
m4_129 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", span="252-252"];
m4_313 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.QueryingExample()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.QueryingExample()", span="754-754"];
m4_314 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.QueryingExample()", file="LinqToJsonTest.cs", label="JArray posts = JArray.Parse(@''[\r\n              {\r\n                'Title': 'JSON Serializer Basics',\r\n                'Date': '2013-12-21T00:00:00',\r\n                'Categories': []\r\n              },\r\n              {\r\n                'Title': 'Querying LINQ to JSON',\r\n                'Date': '2014-06-03T00:00:00',\r\n                'Categories': [\r\n                  'LINQ to JSON'\r\n                ]\r\n              }\r\n            ]'')", span="756-769"];
m4_315 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.QueryingExample()", file="LinqToJsonTest.cs", label="JToken serializerBasics = posts\r\n                .Single(p => (string)p[''Title''] == ''JSON Serializer Basics'')", span="771-772"];
m4_316 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.QueryingExample()", file="LinqToJsonTest.cs", label="IList<JToken> since2012 = posts\r\n                .Where(p => (DateTime)p[''Date''] > new DateTime(2012, 1, 1)).ToList()", span="775-776"];
m4_317 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.QueryingExample()", file="LinqToJsonTest.cs", label="IList<JToken> linqToJson = posts\r\n                .Where(p => p[''Categories''].Any(c => (string)c == ''LINQ to JSON'')).ToList()", span="780-781"];
m4_318 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.QueryingExample()", file="LinqToJsonTest.cs", label="Assert.IsNotNull(serializerBasics)", span="784-784"];
m4_319 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.QueryingExample()", file="LinqToJsonTest.cs", label="Assert.AreEqual(2, since2012.Count)", span="785-785"];
m4_320 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.QueryingExample()", file="LinqToJsonTest.cs", label="Assert.AreEqual(1, linqToJson.Count)", span="786-786"];
m4_321 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.QueryingExample()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.QueryingExample()", span="754-754"];
m4_334 [cluster="Unk.Any", file="LinqToJsonTest.cs", label="Entry Unk.Any", span=""];
m4_227 [cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="LinqToJsonTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0"];
m4_468 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqCast()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqCast()", span="1166-1166"];
m4_469 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqCast()", file="LinqToJsonTest.cs", label="JToken olist = JArray.Parse(''[12,55]'')", span="1168-1168"];
m4_470 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqCast()", file="LinqToJsonTest.cs", label="List<int> list1 = olist.AsEnumerable().Values<int>().ToList()", span="1170-1170"];
m4_471 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqCast()", file="LinqToJsonTest.cs", label="Assert.AreEqual(12, list1[0])", span="1172-1172"];
m4_472 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqCast()", file="LinqToJsonTest.cs", label="Assert.AreEqual(55, list1[1])", span="1173-1173"];
m4_473 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqCast()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqCast()", span="1166-1166"];
m4_259 [cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values<U>(object)", file="LinqToJsonTest.cs", label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values<U>(object)", span="135-135"];
m4_384 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JConstructorStringIndex()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JConstructorStringIndex()", span="931-931"];
m4_385 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JConstructorStringIndex()", file="LinqToJsonTest.cs", label="ExceptionAssert.Throws<ArgumentException>(() =>\r\n            {\r\n                JConstructor c = new JConstructor(''ConstructorValue'');\r\n                Assert.AreEqual(null, c[''purple'']);\r\n            }, @''Accessed JConstructor values with invalid key value: ''''purple''''. Argument position index expected.'')", span="933-937"];
m4_386 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JConstructorStringIndex()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JConstructorStringIndex()", span="931-931"];
m4_87 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72"];
m4_89 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", span="1865-1865"];
m4_434 [cluster="Newtonsoft.Json.Linq.JArray.FromObject(object)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JArray.FromObject(object)", span="189-189"];
m4_229 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", span="441-441"];
m4_230 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="LinqToJsonTest.cs", label="string json = @''[0,1,2,3,4,5,6,7,8,9]''", span="443-443"];
m4_231 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="LinqToJsonTest.cs", label="JArray a = JArray.Parse(json)", span="445-445"];
m4_232 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="LinqToJsonTest.cs", label="List<int> list = a.Values<int>().ToList()", span="446-446"];
m4_233 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="LinqToJsonTest.cs", label="List<int> expected = new List<int>() { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }", span="448-448"];
m4_234 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="LinqToJsonTest.cs", label="CollectionAssert.AreEqual(expected, list)", span="450-450"];
m4_235 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", span="441-441"];
m4_178 [cluster="Newtonsoft.Json.Linq.JArray.JArray(object)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray(object)", span="91-91"];
m4_170 [cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(long)", span="70-70"];
m4_110 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom_IgnoreComments()", span="227-227"];
m4_111 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs", label="StringReader textReader = new StringReader(@''\r\n// hi\r\n[\r\n    1,\r\n    2,\r\n    3\r\n]'')", span="229-235"];
m4_112 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs", label="JsonTextReader jsonReader = new JsonTextReader(textReader)", span="237-237"];
m4_113 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs", label="JArray a = (JArray)JToken.ReadFrom(jsonReader, new JsonLoadSettings\r\n            {\r\n                CommentHandling = CommentHandling.Ignore\r\n            })", span="238-241"];
m4_114 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs", label="Assert.AreEqual(JTokenType.Array, a.Type)", span="243-243"];
m4_115 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs", label="IJsonLineInfo lineInfo = a", span="245-245"];
m4_116 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs", label="Assert.AreEqual(true, lineInfo.HasLineInfo())", span="246-246"];
m4_117 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs", label="Assert.AreEqual(3, lineInfo.LineNumber)", span="247-247"];
m4_118 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs", label="Assert.AreEqual(1, lineInfo.LinePosition)", span="248-248"];
m4_119 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom_IgnoreComments()", span="227-227"];
m4_179 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", span="366-366"];
m4_180 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", file="LinqToJsonTest.cs", label="JArray j = JArray.Parse(''[-1E+4,100.0e-2]'')", span="368-368"];
m4_181 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", file="LinqToJsonTest.cs", label="double value = (double)j[0]", span="370-370"];
m4_183 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", file="LinqToJsonTest.cs", label="value = (double)j[1]", span="373-373"];
m4_182 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", file="LinqToJsonTest.cs", label="Assert.AreEqual(-10000d, value)", span="371-371"];
m4_184 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", file="LinqToJsonTest.cs", label="Assert.AreEqual(1d, value)", span="374-374"];
m4_185 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", span="366-366"];
m4_372 [cluster="Unk.>", file="LinqToJsonTest.cs", label="Entry Unk.>", span=""];
m4_448 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", span="1125-1125"];
m4_449 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs", label="JObject o = null", span="1127-1127"];
m4_450 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs", label="IJEnumerable<JToken> enumerable = null", span="1128-1128"];
m4_451 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs", label="enumerable = o.AsJEnumerable()", span="1130-1130"];
m4_452 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs", label="Assert.IsNull(enumerable)", span="1131-1131"];
m4_453 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs", label="o =\r\n                new JObject(\r\n                    new JProperty(''Test1'', new DateTime(2000, 10, 15, 5, 5, 5, DateTimeKind.Utc)),\r\n                    new JProperty(''Test2'', ''Test2Value''),\r\n                    new JProperty(''Test3'', null)\r\n                    )", span="1133-1138"];
m4_454 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs", label="enumerable = o.AsJEnumerable()", span="1140-1140"];
m4_456 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs", label="Assert.AreEqual(o, enumerable)", span="1142-1142"];
m4_455 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs", label="Assert.IsNotNull(enumerable)", span="1141-1141"];
m4_457 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs", label="DateTime d = enumerable[''Test1''].Value<DateTime>()", span="1144-1144"];
m4_458 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs", label="Assert.AreEqual(new DateTime(2000, 10, 15, 5, 5, 5, DateTimeKind.Utc), d)", span="1146-1146"];
m4_459 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", span="1125-1125"];
m4_391 [cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor(string)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor(string)", span="122-122"];
m4_460 [cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.AsJEnumerable()", file="LinqToJsonTest.cs", label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.AsJEnumerable()", span="293-293"];
m4_509 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", span="1302-1302"];
m4_510 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", file="LinqToJsonTest.cs", label="string json = @''/* blah */ {'hi':'hi!'}''", span="1304-1304"];
m4_511 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", file="LinqToJsonTest.cs", label="JObject o = JObject.Parse(json)", span="1305-1305"];
m4_512 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''hi!'', (string)o[''hi''])", span="1306-1306"];
m4_513 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", file="LinqToJsonTest.cs", label="json = @''/* blah */ ['hi!']''", span="1308-1308"];
m4_514 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", file="LinqToJsonTest.cs", label="JArray a = JArray.Parse(json)", span="1309-1309"];
m4_515 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''hi!'', (string)a[0])", span="1310-1310"];
m4_516 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", span="1302-1302"];
m4_26 [cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToObject<T>()", span="1695-1695"];
m4_224 [cluster="Newtonsoft.Json.Linq.JObject.Properties()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.Properties()", span="229-229"];
m4_298 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, params object[])", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, params object[])", span="283-283"];
m4_506 [cluster="System.TimeSpan.FromDays(double)", file="LinqToJsonTest.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m4_72 [cluster="object.Equals(object)", file="LinqToJsonTest.cs", label="Entry object.Equals(object)", span="0-0"];
m4_51 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableCount()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableCount()", span="125-125"];
m4_52 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableCount()", file="LinqToJsonTest.cs", label="JEnumerable<JToken> tokens = new JEnumerable<JToken>()", span="127-127"];
m4_53 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableCount()", file="LinqToJsonTest.cs", label="Assert.AreEqual(0, tokens.Count())", span="129-129"];
m4_54 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableCount()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableCount()", span="125-125"];
m4_404 [cluster="System.TimeSpan.TimeSpan(int, int, int)", file="LinqToJsonTest.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0"];
m4_435 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", span="1060-1060"];
m4_436 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs", label="List<Post> posts = GetPosts()", span="1062-1062"];
m4_437 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs", label="JObject o = JObject.FromObject(new\r\n            {\r\n                channel = new Dictionary<string, object>\r\n                {\r\n                    { ''title'', ''James Newton-King'' },\r\n                    { ''link'', ''http://james.newtonking.com'' },\r\n                    { ''description'', ''James Newton-King's blog.'' },\r\n                    {\r\n                        ''item'',\r\n                        (from p in posts\r\n                            orderby p.Title\r\n                            select new\r\n                            {\r\n                                title = p.Title,\r\n                                description = p.Description,\r\n                                link = p.Link,\r\n                                category = p.Categories\r\n                            })\r\n                    }\r\n                }\r\n            })", span="1064-1084"];
m4_438 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''channel'''': {\r\n    ''''title'''': ''''James Newton-King'''',\r\n    ''''link'''': ''''http://james.newtonking.com'''',\r\n    ''''description'''': ''''James Newton-King's blog.'''',\r\n    ''''item'''': [\r\n      {\r\n        ''''title'''': ''''Json.NET 1.3 + New license + Now on CodePlex'''',\r\n        ''''description'''': ''''Annoucing the release of Json.NET 1.3, the MIT license and being available on CodePlex'''',\r\n        ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n        ''''category'''': [\r\n          ''''Json.NET'''',\r\n          ''''CodePlex''''\r\n        ]\r\n      },\r\n      {\r\n        ''''title'''': ''''LINQ to JSON beta'''',\r\n        ''''description'''': ''''Annoucing LINQ to JSON'''',\r\n        ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n        ''''category'''': [\r\n          ''''Json.NET'''',\r\n          ''''LINQ''''\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}'', o.ToString())", span="1086-1112"];
m4_439 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs", label="CustomAssert.IsInstanceOfType(typeof(JObject), o)", span="1114-1114"];
m4_440 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs", label="CustomAssert.IsInstanceOfType(typeof(JObject), o[''channel''])", span="1115-1115"];
m4_441 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''James Newton-King'', (string)o[''channel''][''title''])", span="1116-1116"];
m4_442 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs", label="Assert.AreEqual(2, o[''channel''][''item''].Children().Count())", span="1117-1117"];
m4_443 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs", label="JArray a = JArray.FromObject(new List<int>() { 0, 1, 2, 3, 4 })", span="1119-1119"];
m4_444 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs", label="CustomAssert.IsInstanceOfType(typeof(JArray), a)", span="1120-1120"];
m4_445 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs", label="Assert.AreEqual(5, a.Count())", span="1121-1121"];
m4_446 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", span="1060-1060"];
m4_7 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="410-410"];
m4_155 [cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.SelectToken(string)", span="2045-2045"];
m4_409 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="882-882"];
m4_206 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="445-445"];
m4_422 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", span="997-997"];
m4_423 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs", label="List<Post> posts = GetPosts()", span="999-999"];
m4_424 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs", label="JObject o = JObject.FromObject(new\r\n            {\r\n                channel = new\r\n                {\r\n                    title = ''James Newton-King'',\r\n                    link = ''http://james.newtonking.com'',\r\n                    description = ''James Newton-King's blog.'',\r\n                    item =\r\n                        from p in posts\r\n                        orderby p.Title\r\n                        select new\r\n                        {\r\n                            title = p.Title,\r\n                            description = p.Description,\r\n                            link = p.Link,\r\n                            category = p.Categories\r\n                        }\r\n                }\r\n            })", span="1001-1019"];
m4_425 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''channel'''': {\r\n    ''''title'''': ''''James Newton-King'''',\r\n    ''''link'''': ''''http://james.newtonking.com'''',\r\n    ''''description'''': ''''James Newton-King's blog.'''',\r\n    ''''item'''': [\r\n      {\r\n        ''''title'''': ''''Json.NET 1.3 + New license + Now on CodePlex'''',\r\n        ''''description'''': ''''Annoucing the release of Json.NET 1.3, the MIT license and being available on CodePlex'''',\r\n        ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n        ''''category'''': [\r\n          ''''Json.NET'''',\r\n          ''''CodePlex''''\r\n        ]\r\n      },\r\n      {\r\n        ''''title'''': ''''LINQ to JSON beta'''',\r\n        ''''description'''': ''''Annoucing LINQ to JSON'''',\r\n        ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n        ''''category'''': [\r\n          ''''Json.NET'''',\r\n          ''''LINQ''''\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}'', o.ToString())", span="1021-1047"];
m4_426 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs", label="CustomAssert.IsInstanceOfType(typeof(JObject), o)", span="1049-1049"];
m4_427 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs", label="CustomAssert.IsInstanceOfType(typeof(JObject), o[''channel''])", span="1050-1050"];
m4_428 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''James Newton-King'', (string)o[''channel''][''title''])", span="1051-1051"];
m4_429 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs", label="Assert.AreEqual(2, o[''channel''][''item''].Children().Count())", span="1052-1052"];
m4_430 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs", label="JArray a = JArray.FromObject(new List<int>() { 0, 1, 2, 3, 4 })", span="1054-1054"];
m4_431 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs", label="CustomAssert.IsInstanceOfType(typeof(JArray), a)", span="1055-1055"];
m4_432 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs", label="Assert.AreEqual(5, a.Count())", span="1056-1056"];
m4_433 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", span="997-997"];
m4_195 [cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="154-154"];
m4_6 [cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="404-404"];
m4_406 [cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="LinqToJsonTest.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0"];
m4_475 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", span="1178-1178"];
m4_476 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", file="LinqToJsonTest.cs", label="string json = @''[\r\n                        {\r\n                          ''''title'''': ''''James Newton-King'''',\r\n                          ''''link'''': ''''http://james.newtonking.com'''',\r\n                          ''''description'''': ''''James Newton-King's blog.'''',\r\n                          ''''item'''': [\r\n                            {\r\n                              ''''title'''': ''''Json.NET 1.3 + New license + Now on CodePlex'''',\r\n                              ''''description'''': ''''Annoucing the release of Json.NET 1.3, the MIT license and being available on CodePlex'''',\r\n                              ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n                              ''''category'''': [\r\n                                ''''Json.NET'''',\r\n                                ''''CodePlex''''\r\n                              ]\r\n                            },\r\n                            {\r\n                              ''''title'''': ''''LINQ to JSON beta'''',\r\n                              ''''description'''': ''''Annoucing LINQ to JSON'''',\r\n                              ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n                              ''''category'''': [\r\n                                ''''Json.NET'''',\r\n                                ''''LINQ''''\r\n                              ]\r\n                            }\r\n                          ]\r\n                        },\r\n                        {\r\n                          ''''title'''': ''''James Newton-King'''',\r\n                          ''''link'''': ''''http://james.newtonking.com'''',\r\n                          ''''description'''': ''''James Newton-King's blog.'''',\r\n                          ''''item'''': [\r\n                            {\r\n                              ''''title'''': ''''Json.NET 1.3 + New license + Now on CodePlex'''',\r\n                              ''''description'''': ''''Annoucing the release of Json.NET 1.3, the MIT license and being available on CodePlex'''',\r\n                              ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n                              ''''category'''': [\r\n                                ''''Json.NET'''',\r\n                                ''''CodePlex''''\r\n                              ]\r\n                            },\r\n                            {\r\n                              ''''title'''': ''''LINQ to JSON beta'''',\r\n                              ''''description'''': ''''Annoucing LINQ to JSON'''',\r\n                              ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n                              ''''category'''': [\r\n                                ''''Json.NET'''',\r\n                                ''''LINQ''''\r\n                              ]\r\n                            }\r\n                          ]\r\n                        }\r\n                      ]''", span="1180-1231"];
m4_477 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", file="LinqToJsonTest.cs", label="JArray o = JArray.Parse(json)", span="1233-1233"];
m4_478 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", file="LinqToJsonTest.cs", label="Assert.AreEqual(4, o.Children()[''item''].Children()[''title''].Count())", span="1235-1235"];
m4_479 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", file="LinqToJsonTest.cs", label="CollectionAssert.AreEqual(new string[]\r\n            {\r\n                ''Json.NET 1.3 + New license + Now on CodePlex'',\r\n                ''LINQ to JSON beta'',\r\n                ''Json.NET 1.3 + New license + Now on CodePlex'',\r\n                ''LINQ to JSON beta''\r\n            },\r\n                o.Children()[''item''].Children()[''title''].Values<string>().ToArray())", span="1236-1243"];
m4_480 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", span="1178-1178"];
m4_547 [cluster="System.Collections.Generic.List<T>.Add(T)", file="LinqToJsonTest.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m4_173 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ForEach()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ForEach()", span="353-353"];
m4_174 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ForEach()", file="LinqToJsonTest.cs", label="JArray items = new JArray(new JObject(new JProperty(''name'', ''value!'')))", span="355-355"];
m4_175 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ForEach()", file="LinqToJsonTest.cs", label=items, span="357-357"];
m4_176 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ForEach()", file="LinqToJsonTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''name'''': ''''value!''''\r\n}'', friend.ToString())", span="359-361"];
m4_177 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ForEach()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ForEach()", span="353-353"];
m4_377 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JArrayStringIndex()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JArrayStringIndex()", span="921-921"];
m4_378 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JArrayStringIndex()", file="LinqToJsonTest.cs", label="ExceptionAssert.Throws<ArgumentException>(() =>\r\n            {\r\n                JArray a = new JArray();\r\n                Assert.AreEqual(null, a[''purple'']);\r\n            }, @''Accessed JArray values with invalid key value: ''''purple''''. Array position index expected.'')", span="923-927"];
m4_379 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JArrayStringIndex()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JArrayStringIndex()", span="921-921"];
m4_447 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="LinqToJsonTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m4_28 [cluster="Unk.AreEqual", file="LinqToJsonTest.cs", label="Entry Unk.AreEqual", span=""];
m4_15 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", span="89-89"];
m4_16 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", file="LinqToJsonTest.cs", label="JObject o = JObject.Parse(''{'responseArray':'AAAAAAAAAAAAAAAAAAAAAAAAAAABAAAA'}'')", span="91-91"];
m4_17 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", file="LinqToJsonTest.cs", label="byte[] data = o[''responseArray''].ToObject<byte[]>()", span="92-92"];
m4_18 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", file="LinqToJsonTest.cs", label="byte[] expected = Convert.FromBase64String(''AAAAAAAAAAAAAAAAAAAAAAAAAAABAAAA'')", span="93-93"];
m4_19 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", file="LinqToJsonTest.cs", label="CollectionAssert.AreEqual(expected, data)", span="95-95"];
m4_20 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", file="LinqToJsonTest.cs", label="o = JObject.Parse(''{'responseArray':'AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAABAAAA'}'')", span="97-97"];
m4_21 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", file="LinqToJsonTest.cs", label="data = o[''responseArray''].ToObject<byte[]>()", span="98-98"];
m4_22 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", file="LinqToJsonTest.cs", label="expected = new Guid(''AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAABAAAA'').ToByteArray()", span="99-99"];
m4_23 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", file="LinqToJsonTest.cs", label="CollectionAssert.AreEqual(expected, data)", span="101-101"];
m4_24 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", span="89-89"];
m4_197 [cluster="System.DateTime.DateTime(int, int, int)", file="LinqToJsonTest.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m4_324 [cluster="Unk.IsNotNull", file="LinqToJsonTest.cs", label="Entry Unk.IsNotNull", span=""];
m4_147 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPath()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPath()", span="304-304"];
m4_148 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPath()", file="LinqToJsonTest.cs", label="string json = @''{\r\n  ''''frameworks'''': {\r\n    ''''dnxcore50'''': {\r\n      ''''dependencies'''': {\r\n        ''''System.Xml.ReaderWriter'''': {\r\n          ''''source'''': ''''NuGet''''\r\n        }\r\n      }\r\n    }\r\n  }\r\n}''", span="306-316"];
m4_149 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPath()", file="LinqToJsonTest.cs", label="JObject o = JObject.Parse(json)", span="318-318"];
m4_150 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPath()", file="LinqToJsonTest.cs", label="JToken v1 = o[''frameworks''][''dnxcore50''][''dependencies''][''System.Xml.ReaderWriter''][''source'']", span="320-320"];
m4_152 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPath()", file="LinqToJsonTest.cs", label="JToken v2 = o.SelectToken(v1.Path)", span="324-324"];
m4_151 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPath()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''frameworks.dnxcore50.dependencies['System.Xml.ReaderWriter'].source'', v1.Path)", span="322-322"];
m4_153 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPath()", file="LinqToJsonTest.cs", label="Assert.AreEqual(v1, v2)", span="326-326"];
m4_154 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPath()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPath()", span="304-304"];
m4_257 [cluster="System.Collections.Generic.IEnumerable<T>.Children<T>()", file="LinqToJsonTest.cs", label="Entry System.Collections.Generic.IEnumerable<T>.Children<T>()", span="221-221"];
m4_355 [cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values<U>()", file="LinqToJsonTest.cs", label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values<U>()", span="146-146"];
m4_403 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="LinqToJsonTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m4_356 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", span="865-865"];
m4_357 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs", label="string json = @''{\r\n                        ''''channel'''': {\r\n                          ''''title'''': ''''James Newton-King'''',\r\n                          ''''link'''': ''''http://james.newtonking.com'''',\r\n                          ''''description'''': ''''James Newton-King's blog.'''',\r\n                          ''''item'''': [\r\n                            {\r\n                              ''''title'''': ''''Json.NET 1.3 + New license + Now on CodePlex'''',\r\n                              ''''description'''': ''''Annoucing the release of Json.NET 1.3, the MIT license and being available on CodePlex'''',\r\n                              ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n                              ''''category'''': [\r\n                                ''''Json.NET'''',\r\n                                ''''CodePlex''''\r\n                              ]\r\n                            },\r\n                            {\r\n                              ''''title'''': ''''LINQ to JSON beta'''',\r\n                              ''''description'''': ''''Annoucing LINQ to JSON'''',\r\n                              ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n                              ''''category'''': [\r\n                                ''''Json.NET'''',\r\n                                ''''LINQ''''\r\n                              ]\r\n                            }\r\n                          ]\r\n                        }\r\n                      }''", span="867-893"];
m4_358 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs", label="JObject o = JObject.Parse(json)", span="895-895"];
m4_359 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs", label="Assert.AreEqual(null, o[''purple''])", span="897-897"];
m4_360 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs", label="Assert.AreEqual(null, o.Value<string>(''purple''))", span="898-898"];
m4_361 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs", label="CustomAssert.IsInstanceOfType(typeof(JArray), o[''channel''][''item''])", span="900-900"];
m4_362 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs", label="Assert.AreEqual(2, o[''channel''][''item''].Children()[''title''].Count())", span="902-902"];
m4_363 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs", label="Assert.AreEqual(0, o[''channel''][''item''].Children()[''monkey''].Count())", span="903-903"];
m4_364 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''Json.NET 1.3 + New license + Now on CodePlex'', (string)o[''channel''][''item''][0][''title''])", span="905-905"];
m4_365 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs", label="CollectionAssert.AreEqual(new string[] { ''Json.NET 1.3 + New license + Now on CodePlex'', ''LINQ to JSON beta'' }, o[''channel''][''item''].Children().Values<string>(''title'').ToArray())", span="907-907"];
m4_366 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", span="865-865"];
m4_408 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="124-124"];
m4_226 [cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="258-258"];
m4_8 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="331-331"];
m4_575 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="1406-1406"];
m4_38 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="108-108"];
m4_42 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="112-112"];
m4_45 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="116-116"];
m4_48 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="120-120"];
m4_39 [cluster="lambda expression", file="LinqToJsonTest.cs", label="JArray.Parse(''[1,'')", span="108-108"];
m4_40 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="108-108"];
m4_43 [cluster="lambda expression", file="LinqToJsonTest.cs", label="JArray.Parse(''[1'')", span="112-112"];
m4_44 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="112-112"];
m4_46 [cluster="lambda expression", file="LinqToJsonTest.cs", label="JObject.Parse(''{'key':1,'')", span="116-116"];
m4_47 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="116-116"];
m4_49 [cluster="lambda expression", file="LinqToJsonTest.cs", label="JObject.Parse(''{'key':1'')", span="120-120"];
m4_50 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="120-120"];
m4_139 [cluster="lambda expression", file="LinqToJsonTest.cs", label="JToken.ReadFrom(jsonReader)", span="282-282"];
m4_138 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="282-282"];
m4_140 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="282-282"];
m4_325 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="772-772"];
m4_328 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="776-776"];
m4_331 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="781-781"];
m4_326 [cluster="lambda expression", file="LinqToJsonTest.cs", label="(string)p[''Title''] == ''JSON Serializer Basics''", span="772-772"];
m4_327 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="772-772"];
m4_329 [cluster="lambda expression", file="LinqToJsonTest.cs", label="(DateTime)p[''Date''] > new DateTime(2012, 1, 1)", span="776-776"];
m4_330 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="776-776"];
m4_332 [cluster="lambda expression", file="LinqToJsonTest.cs", label="p[''Categories''].Any(c => (string)c == ''LINQ to JSON'')", span="781-781"];
m4_333 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="781-781"];
m4_335 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="781-781"];
m4_336 [cluster="lambda expression", file="LinqToJsonTest.cs", label="(string)c == ''LINQ to JSON''", span="781-781"];
m4_337 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="781-781"];
m4_373 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="913-917"];
m4_374 [cluster="lambda expression", file="LinqToJsonTest.cs", label="JObject o = new JObject()", span="915-915"];
m4_375 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Assert.AreEqual(null, o[0])", span="916-916"];
m4_376 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="913-917"];
m4_380 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="923-927"];
m4_381 [cluster="lambda expression", file="LinqToJsonTest.cs", label="JArray a = new JArray()", span="925-925"];
m4_382 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Assert.AreEqual(null, a[''purple''])", span="926-926"];
m4_383 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="923-927"];
m4_387 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="933-937"];
m4_388 [cluster="lambda expression", file="LinqToJsonTest.cs", label="JConstructor c = new JConstructor(''ConstructorValue'')", span="935-935"];
m4_389 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Assert.AreEqual(null, c[''purple''])", span="936-936"];
m4_390 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="933-937"];
m4_523 [cluster="lambda expression", file="LinqToJsonTest.cs", label="users.Add(''name2'', name)", span="1324-1324"];
m4_524 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Assert.AreEqual(users[''name2''], ''Matthew Doig'')", span="1326-1326"];
m4_522 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="1322-1327"];
m4_525 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="1322-1327"];
m4_569 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="1396-1396"];
m4_572 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="1401-1401"];
m4_576 [cluster="lambda expression", file="LinqToJsonTest.cs", label="idProperty.Value.ToString() == r.Value.ToString()", span="1406-1406"];
m4_570 [cluster="lambda expression", file="LinqToJsonTest.cs", label="d.Name == ''$id''", span="1396-1396"];
m4_571 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="1396-1396"];
m4_573 [cluster="lambda expression", file="LinqToJsonTest.cs", label="d.Name == ''$ref''", span="1401-1401"];
m4_574 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="1401-1401"];
m4_577 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="1406-1406"];
m4_98 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="1849-1849"];
m4_194 [cluster="Newtonsoft.Json.Linq.JArray.JArray()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray()", span="65-65"];
m4_548 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", span="1379-1379"];
m4_549 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs", label="JTokenWriter writer = new JTokenWriter()", span="1381-1381"];
m4_551 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs", label="serializer.Serialize(writer, o)", span="1387-1387"];
m4_550 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs", label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                Formatting = Formatting.Indented,\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="1382-1386"];
m4_552 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs", label="JToken t = writer.Token", span="1389-1389"];
m4_553 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs", label="t is JContainer", span="1391-1391"];
m4_554 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs", label="JContainer c = t as JContainer", span="1393-1393"];
m4_562 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs", label="string json = t.ToString()", span="1417-1417"];
m4_555 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs", label="IList<JProperty> ids = c.Descendants().OfType<JProperty>().Where(d => d.Name == ''$id'').ToList()", span="1396-1396"];
m4_557 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs", label="IList<JProperty> refs = c.Descendants().OfType<JProperty>().Where(d => d.Name == ''$ref'').ToList()", span="1401-1401"];
m4_556 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs", label="ids.Count > 0", span="1398-1398"];
m4_558 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs", label=ids, span="1403-1403"];
m4_559 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs", label="bool idUsed = refs.Any(r => idProperty.Value.ToString() == r.Value.ToString())", span="1406-1406"];
m4_561 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs", label="idProperty.Remove()", span="1411-1411"];
m4_560 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs", label="!idUsed", span="1408-1408"];
m4_563 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs", label="return json;", span="1418-1418"];
m4_564 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", span="1379-1379"];
m4_225 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="LinqToJsonTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m4_290 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", span="627-627"];
m4_291 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs", label="JObject o =\r\n                new JObject(\r\n                    new JProperty(''Test1'', ''Test1Value''),\r\n                    new JProperty(''Test2'', ''Test2Value''),\r\n                    new JProperty(''Test3'', ''Test3Value''),\r\n                    new JProperty(''Test4'', null)\r\n                    )", span="629-635"];
m4_292 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs", label="Assert.AreEqual(4, o.Properties().Count())", span="637-637"];
m4_293 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Test1'''': ''''Test1Value'''',\r\n  ''''Test2'''': ''''Test2Value'''',\r\n  ''''Test3'''': ''''Test3Value'''',\r\n  ''''Test4'''': null\r\n}'', o.ToString())", span="639-644"];
m4_294 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs", label="JArray a =\r\n                new JArray(\r\n                    o,\r\n                    new DateTime(2000, 10, 10, 0, 0, 0, DateTimeKind.Utc),\r\n                    55,\r\n                    new JArray(\r\n                        ''1'',\r\n                        2,\r\n                        3.0,\r\n                        new DateTime(4, 5, 6, 7, 8, 9, DateTimeKind.Utc)\r\n                        ),\r\n                    new JConstructor(\r\n                        ''ConstructorName'',\r\n                        ''param1'',\r\n                        2,\r\n                        3.0\r\n                        )\r\n                    )", span="646-663"];
m4_295 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs", label="Assert.AreEqual(5, a.Count())", span="665-665"];
m4_296 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs", label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''Test1'''': ''''Test1Value'''',\r\n    ''''Test2'''': ''''Test2Value'''',\r\n    ''''Test3'''': ''''Test3Value'''',\r\n    ''''Test4'''': null\r\n  },\r\n  ''''2000-10-10T00:00:00Z'''',\r\n  55,\r\n  [\r\n    ''''1'''',\r\n    2,\r\n    3.0,\r\n    ''''0004-05-06T07:08:09Z''''\r\n  ],\r\n  new ConstructorName(\r\n    ''''param1'''',\r\n    2,\r\n    3.0\r\n  )\r\n]'', a.ToString())", span="666-686"];
m4_297 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", span="627-627"];
m4_367 [cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="301-301"];
m4_86 [cluster="System.IO.StringReader.StringReader(string)", file="LinqToJsonTest.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m4_462 [cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Value<U>()", file="LinqToJsonTest.cs", label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Value<U>()", span="157-157"];
m4_322 [cluster="Unk.Single", file="LinqToJsonTest.cs", label="Entry Unk.Single", span=""];
m4_527 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", span="1332-1332"];
m4_528 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs", label="Dictionary<string, object> dic1 = new Dictionary<string, object>()", span="1334-1334"];
m4_529 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs", label="Dictionary<string, object> dic2 = new Dictionary<string, object>()", span="1335-1335"];
m4_533 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs", label="dic1.Add(''list1'', list1)", span="1340-1340"];
m4_534 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs", label="dic1.Add(''list2'', list2)", span="1341-1341"];
m4_535 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs", label="dic1.Add(''dic1'', dic1)", span="1342-1342"];
m4_536 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs", label="dic1.Add(''dic2'', dic2)", span="1343-1343"];
m4_537 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs", label="dic1.Add(''dic3'', dic3)", span="1344-1344"];
m4_538 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs", label="dic1.Add(''integer'', 12345)", span="1345-1345"];
m4_540 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs", label="list1.Add(dic1)", span="1348-1348"];
m4_543 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs", label="var json = SerializeWithNoRedundentIdProperties(dic1)", span="1353-1353"];
m4_530 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs", label="Dictionary<string, object> dic3 = new Dictionary<string, object>()", span="1336-1336"];
m4_531 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs", label="List<object> list1 = new List<object>()", span="1337-1337"];
m4_542 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs", label="dic3.Add(''dic3'', dic3)", span="1351-1351"];
m4_532 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs", label="List<object> list2 = new List<object>()", span="1338-1338"];
m4_539 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs", label="list1.Add(''A string!'')", span="1347-1347"];
m4_541 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs", label="list1.Add(new List<object>())", span="1349-1349"];
m4_544 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''list1'''': [\r\n    ''''A string!'''',\r\n    {\r\n      ''''$ref'''': ''''1''''\r\n    },\r\n    []\r\n  ],\r\n  ''''list2'''': [],\r\n  ''''dic1'''': {\r\n    ''''$ref'''': ''''1''''\r\n  },\r\n  ''''dic2'''': {},\r\n  ''''dic3'''': {\r\n    ''''$id'''': ''''3'''',\r\n    ''''dic3'''': {\r\n      ''''$ref'''': ''''3''''\r\n    }\r\n  },\r\n  ''''integer'''': 12345\r\n}'', json)", span="1355-1376"];
m4_545 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", span="1332-1332"];
m4_207 [cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", span="52-52"];
m4_237 [cluster="System.Collections.Generic.List<T>.List()", file="LinqToJsonTest.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m4_273 [cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.Property(string)", span="239-239"];
m4_73 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableGetHashCode()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableGetHashCode()", span="155-155"];
m4_74 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableGetHashCode()", file="LinqToJsonTest.cs", label="JEnumerable<JToken> tokens = new JEnumerable<JToken>()", span="157-157"];
m4_75 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableGetHashCode()", file="LinqToJsonTest.cs", label="Assert.AreEqual(0, tokens.GetHashCode())", span="159-159"];
m4_76 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableGetHashCode()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableGetHashCode()", span="155-155"];
m4_78 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", span="163-163"];
m4_79 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", file="LinqToJsonTest.cs", label="StringReader textReader = new StringReader(@''[\r\n    // hi\r\n    1,\r\n    2,\r\n    3\r\n]'')", span="165-170"];
m4_80 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", file="LinqToJsonTest.cs", label="JsonTextReader jsonReader = new JsonTextReader(textReader)", span="172-172"];
m4_81 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", file="LinqToJsonTest.cs", label="JArray a = (JArray)JToken.ReadFrom(jsonReader, new JsonLoadSettings\r\n            {\r\n                CommentHandling = CommentHandling.Load\r\n            })", span="173-176"];
m4_82 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", file="LinqToJsonTest.cs", label="Assert.AreEqual(4, a.Count)", span="178-178"];
m4_83 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", file="LinqToJsonTest.cs", label="Assert.AreEqual(JTokenType.Comment, a[0].Type)", span="179-179"];
m4_84 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", file="LinqToJsonTest.cs", label="Assert.AreEqual('' hi'', ((JValue)a[0]).Value)", span="180-180"];
m4_85 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", span="163-163"];
m4_420 [cluster="System.TimeSpan.FromHours(double)", file="LinqToJsonTest.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m4_338 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", span="790-790"];
m4_339 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs", label="List<Post> posts = GetPosts()", span="792-792"];
m4_340 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs", label="JObject rss =\r\n                new JObject(\r\n                    new JProperty(''channel'',\r\n                        new JObject(\r\n                            new JProperty(''title'', ''James Newton-King''),\r\n                            new JProperty(''link'', ''http://james.newtonking.com''),\r\n                            new JProperty(''description'', ''James Newton-King's blog.''),\r\n                            new JProperty(''item'',\r\n                                new JArray(\r\n                                    from p in posts\r\n                                    orderby p.Title\r\n                                    select new JObject(\r\n                                        new JProperty(''title'', p.Title),\r\n                                        new JProperty(''description'', p.Description),\r\n                                        new JProperty(''link'', p.Link),\r\n                                        new JProperty(''category'',\r\n                                            new JArray(\r\n                                                from c in p.Categories\r\n                                                select new JValue(c)))))))))", span="794-812"];
m4_341 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''channel'''': {\r\n    ''''title'''': ''''James Newton-King'''',\r\n    ''''link'''': ''''http://james.newtonking.com'''',\r\n    ''''description'''': ''''James Newton-King's blog.'''',\r\n    ''''item'''': [\r\n      {\r\n        ''''title'''': ''''Json.NET 1.3 + New license + Now on CodePlex'''',\r\n        ''''description'''': ''''Annoucing the release of Json.NET 1.3, the MIT license and being available on CodePlex'''',\r\n        ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n        ''''category'''': [\r\n          ''''Json.NET'''',\r\n          ''''CodePlex''''\r\n        ]\r\n      },\r\n      {\r\n        ''''title'''': ''''LINQ to JSON beta'''',\r\n        ''''description'''': ''''Annoucing LINQ to JSON'''',\r\n        ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n        ''''category'''': [\r\n          ''''Json.NET'''',\r\n          ''''LINQ''''\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}'', rss.ToString())", span="814-840"];
m4_342 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs", label="var postTitles =\r\n                from p in rss[''channel''][''item'']\r\n                select p.Value<string>(''title'')", span="842-844"];
m4_345 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs", label="var categories =\r\n                from c in rss[''channel''][''item''].Children()[''category''].Values<string>()\r\n                group c by c\r\n                into g\r\n                orderby g.Count() descending\r\n                select new { Category = g.Key, Count = g.Count() }", span="849-854"];
m4_343 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''Json.NET 1.3 + New license + Now on CodePlex'', postTitles.ElementAt(0))", span="846-846"];
m4_344 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''LINQ to JSON beta'', postTitles.ElementAt(1))", span="847-847"];
m4_346 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''Json.NET'', categories.ElementAt(0).Category)", span="856-856"];
m4_347 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs", label="Assert.AreEqual(2, categories.ElementAt(0).Count)", span="857-857"];
m4_348 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''CodePlex'', categories.ElementAt(1).Category)", span="858-858"];
m4_349 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs", label="Assert.AreEqual(1, categories.ElementAt(1).Count)", span="859-859"];
m4_350 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''LINQ'', categories.ElementAt(2).Category)", span="860-860"];
m4_351 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs", label="Assert.AreEqual(1, categories.ElementAt(2).Count)", span="861-861"];
m4_352 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", span="790-790"];
m4_261 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", span="560-560"];
m4_262 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs", label="string json = @''{\r\n  CPU: 'Intel',\r\n  Drives: [\r\n    'DVD read/writer',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}''", span="562-568"];
m4_263 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs", label="JObject o = JObject.Parse(json)", span="570-570"];
m4_264 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''CPU'''': ''''Intel'''',\r\n  ''''Drives'''': [\r\n    ''''DVD read/writer'''',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}'', o.ToString())", span="572-578"];
m4_265 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs", label="JArray list = o.Value<JArray>(''Drives'')", span="580-580"];
m4_267 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs", label="JProperty cpuProperty = o.Property(''CPU'')", span="587-587"];
m4_269 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs", label="JProperty drivesProperty = o.Property(''Drives'')", span="590-590"];
m4_266 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs", label="StringAssert.AreEqual(@''[\r\n  ''''DVD read/writer'''',\r\n  ''''500 gigabyte hard drive''''\r\n]'', list.ToString())", span="582-585"];
m4_268 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs", label="Assert.AreEqual(@''''''CPU'''': ''''Intel'''''', cpuProperty.ToString())", span="588-588"];
m4_270 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs", label="StringAssert.AreEqual(@''''''Drives'''': [\r\n  ''''DVD read/writer'''',\r\n  ''''500 gigabyte hard drive''''\r\n]'', drivesProperty.ToString())", span="591-594"];
m4_271 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", span="560-560"];
m4_88 [cluster="Newtonsoft.Json.Linq.JsonLoadSettings.JsonLoadSettings()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JsonLoadSettings.JsonLoadSettings()", span="7-7"];
m4_407 [cluster="System.IO.StringWriter.StringWriter()", file="LinqToJsonTest.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m4_306 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectExample()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectExample()", span="719-719"];
m4_307 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectExample()", file="LinqToJsonTest.cs", label="Post p = new Post\r\n            {\r\n                Title = ''How to use FromObject'',\r\n                Categories = new [] { ''LINQ to JSON'' }\r\n            }", span="721-725"];
m4_308 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectExample()", file="LinqToJsonTest.cs", label="JObject o = JObject.FromObject(p)", span="731-731"];
m4_309 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectExample()", file="LinqToJsonTest.cs", label="o[''Title''] = o[''Title''] + '' - Super effective!''", span="733-733"];
m4_310 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectExample()", file="LinqToJsonTest.cs", label="string json = o.ToString()", span="735-735"];
m4_311 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectExample()", file="LinqToJsonTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Title'''': ''''How to use FromObject - Super effective!'''',\r\n  ''''Description'''': null,\r\n  ''''Link'''': null,\r\n  ''''Categories'''': [\r\n    ''''LINQ to JSON''''\r\n  ]\r\n}'', json)", span="743-750"];
m4_312 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectExample()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectExample()", span="719-719"];
m4_252 [cluster="Newtonsoft.Json.Linq.JToken.Children<T>()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.Children<T>()", span="359-359"];
m4_109 [cluster="Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", span="38-38"];
m4_289 [cluster="Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", span="827-827"];
m4_354 [cluster="Unk.ElementAt", file="LinqToJsonTest.cs", label="Entry Unk.ElementAt", span=""];
m4_463 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CovariantIJEnumerable()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CovariantIJEnumerable()", span="1151-1151"];
m4_464 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CovariantIJEnumerable()", file="LinqToJsonTest.cs", label="IEnumerable<JObject> o = new[]\r\n            {\r\n                JObject.FromObject(new { First = 1, Second = 2 }),\r\n                JObject.FromObject(new { First = 1, Second = 2 })\r\n            }", span="1153-1157"];
m4_465 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CovariantIJEnumerable()", file="LinqToJsonTest.cs", label="IJEnumerable<JToken> values = o.Properties()", span="1159-1159"];
m4_466 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CovariantIJEnumerable()", file="LinqToJsonTest.cs", label="Assert.AreEqual(4, values.Count())", span="1160-1160"];
m4_467 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CovariantIJEnumerable()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CovariantIJEnumerable()", span="1151-1151"];
m4_199 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", span="395-395"];
m4_200 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", file="LinqToJsonTest.cs", label="JObject o = new JObject(\r\n                new JProperty(''Name'', ''John Smith''),\r\n                new JProperty(''BirthDate'', new DateTime(1983, 3, 20))\r\n                )", span="397-400"];
m4_201 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", file="LinqToJsonTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="402-402"];
m4_202 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", file="LinqToJsonTest.cs", label="Person p = (Person)serializer.Deserialize(new JTokenReader(o), typeof(Person))", span="403-403"];
m4_203 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''John Smith'', p.Name)", span="405-405"];
m4_204 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", span="395-395"];
m4_253 [cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JObject>.Properties()", file="LinqToJsonTest.cs", label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JObject>.Properties()", span="100-100"];
m4_508 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="525-525"];
m4_369 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JObjectIntIndex()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JObjectIntIndex()", span="911-911"];
m4_370 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JObjectIntIndex()", file="LinqToJsonTest.cs", label="ExceptionAssert.Throws<ArgumentException>(() =>\r\n            {\r\n                JObject o = new JObject();\r\n                Assert.AreEqual(null, o[0]);\r\n            }, ''Accessed JObject values with invalid key value: 0. Object property name expected.'')", span="913-917"];
m4_371 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JObjectIntIndex()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JObjectIntIndex()", span="911-911"];
m4_405 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="34-34"];
m4_30 [cluster="System.Guid.ToByteArray()", file="LinqToJsonTest.cs", label="Entry System.Guid.ToByteArray()", span="0-0"];
m4_474 [cluster="System.Collections.Generic.IEnumerable<TSource>.AsEnumerable<TSource>()", file="LinqToJsonTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.AsEnumerable<TSource>()", span="0-0"];
m4_186 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", span="378-378"];
m4_187 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="LinqToJsonTest.cs", label="JArray array = new JArray()", span="380-380"];
m4_188 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="LinqToJsonTest.cs", label="JValue text = new JValue(''Manual text'')", span="381-381"];
m4_190 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="LinqToJsonTest.cs", label="array.Add(text)", span="384-384"];
m4_191 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="LinqToJsonTest.cs", label="array.Add(date)", span="385-385"];
m4_192 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="LinqToJsonTest.cs", label="string json = array.ToString()", span="387-387"];
m4_189 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="LinqToJsonTest.cs", label="JValue date = new JValue(new DateTime(2000, 5, 23))", span="382-382"];
m4_193 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", span="378-378"];
m4_300 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="LinqToJsonTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m4_421 [cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", span="83-83"];
m4_0 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject_ULongMaxValue()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject_ULongMaxValue()", span="62-62"];
m4_1 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject_ULongMaxValue()", file="LinqToJsonTest.cs", label="TestClass_ULong instance = new TestClass_ULong { Value = ulong.MaxValue }", span="64-64"];
m4_2 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject_ULongMaxValue()", file="LinqToJsonTest.cs", label="JObject output = JObject.FromObject(instance)", span="65-65"];
m4_3 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject_ULongMaxValue()", file="LinqToJsonTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Value'''': 18446744073709551615\r\n}'', output.ToString())", span="67-69"];
m4_4 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject_ULongMaxValue()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject_ULongMaxValue()", span="62-62"];
m4_238 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", span="454-454"];
m4_239 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs", label="string json = @''{\r\n    results:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://www.google.com/'''',\r\n                url : ''''http://www.google.com/'''',\r\n                visibleUrl : ''''www.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:zhool8dxBV4J:www.google.com'''',\r\n                title : ''''Google'''',\r\n                titleNoFormatting : ''''Google'''',\r\n                content : ''''Enables users to search the Web, Usenet, and \r\nimages. Features include PageRank,   caching and translation of \r\nresults, and an option to find similar pages.''''\r\n            },\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://news.google.com/'''',\r\n                url : ''''http://news.google.com/'''',\r\n                visibleUrl : ''''news.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:Va_XShOz_twJ:news.google.com'''',\r\n                title : ''''Google News'''',\r\n                titleNoFormatting : ''''Google News'''',\r\n                content : ''''Aggregated headlines and a search engine of many of the world's news sources.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://groups.google.com/'''',\r\n                url : ''''http://groups.google.com/'''',\r\n                visibleUrl : ''''groups.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:x2uPD3hfkn0J:groups.google.com'''',\r\n                title : ''''Google Groups'''',\r\n                titleNoFormatting : ''''Google Groups'''',\r\n                content : ''''Enables users to search and browse the Usenet \r\narchives which consist of over 700   million messages, and post new \r\ncomments.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://maps.google.com/'''',\r\n                url : ''''http://maps.google.com/'''',\r\n                visibleUrl : ''''maps.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:dkf5u2twBXIJ:maps.google.com'''',\r\n                title : ''''Google Maps'''',\r\n                titleNoFormatting : ''''Google Maps'''',\r\n                content : ''''Provides directions, interactive maps, and \r\nsatellite/aerial imagery of the United   States. Can also search by \r\nkeyword such as type of business.''''\r\n            }\r\n        ],\r\n        \r\n    adResults:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch.ad'''',\r\n                title : ''''Gartner Symposium/ITxpo'''',\r\n                content1 : ''''Meet brilliant Gartner IT analysts'''',\r\n                content2 : ''''20-23 May 2007- Barcelona, Spain'''',\r\n                url : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                impressionUrl : \r\n''''http://www.google.com/uds/css/ad-indicator-on.gif?ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB'''', \r\n\r\n                unescapedUrl : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                visibleUrl : ''''www.gartner.com''''\r\n            }\r\n        ]\r\n}\r\n''", span="457-534"];
m4_240 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs", label="JObject o = JObject.Parse(json)", span="537-537"];
m4_241 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs", label="List<JObject> resultObjects = o[''results''].Children<JObject>().ToList()", span="539-539"];
m4_245 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs", label="Assert.AreEqual(5, o.PropertyValues().Cast<JArray>().Children().Count())", span="547-547"];
m4_246 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs", label="List<string> resultUrls = o[''results''].Children().Values<string>(''url'').ToList()", span="549-549"];
m4_249 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs", label="List<JToken> descendants = o.Descendants().ToList()", span="555-555"];
m4_242 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs", label="Assert.AreEqual(32, resultObjects.Properties().Count())", span="541-541"];
m4_243 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs", label="Assert.AreEqual(32, resultObjects.Cast<JToken>().Values().Count())", span="543-543"];
m4_244 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs", label="Assert.AreEqual(4, resultObjects.Cast<JToken>().Values(''GsearchResultClass'').Count())", span="545-545"];
m4_247 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs", label="List<string> expectedUrls = new List<string>() { ''http://www.google.com/'', ''http://news.google.com/'', ''http://groups.google.com/'', ''http://maps.google.com/'' }", span="551-551"];
m4_248 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs", label="CollectionAssert.AreEqual(expectedUrls, resultUrls)", span="553-553"];
m4_250 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs", label="Assert.AreEqual(89, descendants.Count)", span="556-556"];
m4_251 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", span="454-454"];
m4_37 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="358-358"];
m4_256 [cluster="Newtonsoft.Json.Linq.JObject.PropertyValues()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.PropertyValues()", span="253-253"];
m4_578 [file="LinqToJsonTest.cs", label=jsonReader, span=""];
m4_579 [file="LinqToJsonTest.cs", label="Newtonsoft.Json.Tests.Linq.LinqToJsonTest", span=""];
m4_580 [file="LinqToJsonTest.cs", label=name, span=""];
m4_581 [file="LinqToJsonTest.cs", label=users, span=""];
m4_582 [file="LinqToJsonTest.cs", label=idProperty, span=""];
d167 -> d168  [color=green, key=0, style=solid];
d167 -> d183  [color=green, key=0, style=solid];
d127 -> d167  [color=green, key=1, label=object, style=dashed];
d127 -> d181  [color=green, key=1, label=object, style=dashed];
d127 -> d183  [color=green, key=1, label="System.Type", style=dashed];
d127 -> d184  [color=green, key=1, label=object, style=dashed];
d127 -> d127  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
d127 -> d140  [key=0, style=solid];
d127 -> d142  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d127 -> d143  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d127 -> d144  [color=darkseagreen4, key=1, label=object, style=dashed];
d127 -> d145  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d127 -> d146  [color=darkseagreen4, key=1, label=object, style=dashed];
d127 -> d148  [color=darkseagreen4, key=1, label=object, style=dashed];
d127 -> d149  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d127 -> d150  [color=darkseagreen4, key=1, label=object, style=dashed];
d127 -> d151  [color=darkseagreen4, key=1, label=object, style=dashed];
d127 -> d153  [color=darkseagreen4, key=1, label=object, style=dashed];
d127 -> d154  [color=darkseagreen4, key=1, label=object, style=dashed];
d127 -> d156  [color=darkseagreen4, key=1, label=object, style=dashed];
d127 -> d158  [color=darkseagreen4, key=1, label=object, style=dashed];
d127 -> d159  [color=darkseagreen4, key=1, label=object, style=dashed];
d127 -> d161  [color=darkseagreen4, key=1, label=object, style=dashed];
d127 -> d162  [color=darkseagreen4, key=1, label=object, style=dashed];
d127 -> d164  [color=darkseagreen4, key=1, label=object, style=dashed];
d127 -> d165  [color=darkseagreen4, key=1, label=object, style=dashed];
d127 -> d168  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d127 -> d169  [color=darkseagreen4, key=1, label=object, style=dashed];
d127 -> d171  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d127 -> d172  [color=darkseagreen4, key=1, label=object, style=dashed];
d127 -> d174  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d127 -> d175  [color=darkseagreen4, key=1, label=object, style=dashed];
d127 -> d177  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d127 -> d178  [color=darkseagreen4, key=1, label=object, style=dashed];
d127 -> d180  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d127 -> d186  [color=darkseagreen4, key=1, label=object, style=dashed];
d127 -> d187  [color=darkseagreen4, key=1, label=object, style=dashed];
d127 -> d190  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d127 -> d191  [color=darkseagreen4, key=1, label=object, style=dashed];
d127 -> d193  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d127 -> d195  [color=darkseagreen4, key=1, label=object, style=dashed];
d127 -> d197  [color=darkseagreen4, key=1, label=object, style=dashed];
d127 -> d198  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d127 -> d199  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d127 -> d203  [color=darkseagreen4, key=1, label=object, style=dashed];
d127 -> d204  [color=darkseagreen4, key=1, label=object, style=dashed];
d127 -> d206  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d127 -> d114  [color=darkorchid, key=3, label="Parameter variable System.Type targetType", style=bold];
d127 -> d132  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
d127 -> d115  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
d127 -> d36  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
d127 -> d71  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
d127 -> d99  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
d127 -> d230  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
d127 -> d147  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Utilities.ConvertUtils.ConvertResult TryConvertInternal", style=bold];
d127 -> d19  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Utilities.ConvertUtils.ConvertResult TryConvertInternal", style=bold];
d127 -> d208  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Utilities.ConvertUtils.ConvertResult TryConvertInternal", style=bold];
d127 -> d210  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Utilities.ConvertUtils.ConvertResult TryConvertInternal", style=bold];
d164 -> d167  [color=green, key=0, style=solid];
d164 -> d165  [key=0, style=solid];
d168 -> d169  [key=0, style=solid];
d168 -> d171  [key=0, style=solid];
d183 -> d184  [color=green, key=0, style=solid];
d183 -> d186  [color=green, key=0, style=solid];
d181 -> d182  [color=green, key=0, style=solid];
d181 -> d223  [color=green, key=2, style=dotted];
d180 -> d181  [color=green, key=0, style=solid];
d180 -> d183  [color=green, key=0, style=solid];
d180 -> d35  [key=2, style=dotted];
d182 -> d211  [color=green, key=0, style=solid];
d143 -> d183  [color=green, key=1, label="System.Type", style=dashed];
d143 -> d164  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d143 -> d168  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d143 -> d180  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d143 -> d143  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d143 -> d144  [key=0, style=solid];
d143 -> d25  [key=2, style=dotted];
d143 -> d145  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d143 -> d148  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d143 -> d149  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d143 -> d151  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d143 -> d154  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d143 -> d156  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d143 -> d158  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d143 -> d161  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d143 -> d171  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d143 -> d174  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d143 -> d177  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d143 -> d187  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d143 -> d190  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d143 -> d191  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d143 -> d193  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d143 -> d198  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d143 -> d199  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d143 -> d204  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d143 -> d206  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d184 -> d185  [color=green, key=0, style=solid];
d184 -> d71  [color=green, key=2, style=dotted];
d186 -> d187  [key=0, style=solid];
d186 -> d189  [key=0, style=solid];
d185 -> d211  [color=green, key=0, style=solid];
d71 -> d127  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
d71 -> d71  [color=darkorchid, key=3, label="method methodReturn BigInteger ToBigInteger", style=bold];
d71 -> d72  [key=0, style=solid];
d71 -> d73  [color=darkseagreen4, key=1, label=object, style=dashed];
d71 -> d74  [color=darkseagreen4, key=1, label=object, style=dashed];
d71 -> d75  [color=darkseagreen4, key=1, label=object, style=dashed];
d71 -> d76  [color=darkseagreen4, key=1, label=object, style=dashed];
d71 -> d77  [color=darkseagreen4, key=1, label=object, style=dashed];
d71 -> d78  [color=darkseagreen4, key=1, label=object, style=dashed];
d71 -> d79  [color=darkseagreen4, key=1, label=object, style=dashed];
d71 -> d80  [color=darkseagreen4, key=1, label=object, style=dashed];
d71 -> d81  [color=darkseagreen4, key=1, label=object, style=dashed];
d71 -> d82  [color=darkseagreen4, key=1, label=object, style=dashed];
d71 -> d83  [color=darkseagreen4, key=1, label=object, style=dashed];
d71 -> d84  [color=darkseagreen4, key=1, label=object, style=dashed];
d71 -> d85  [color=darkseagreen4, key=1, label=object, style=dashed];
d71 -> d86  [color=darkseagreen4, key=1, label=object, style=dashed];
d71 -> d87  [color=darkseagreen4, key=1, label=object, style=dashed];
d71 -> d88  [color=darkseagreen4, key=1, label=object, style=dashed];
d71 -> d89  [color=darkseagreen4, key=1, label=object, style=dashed];
d71 -> d90  [color=darkseagreen4, key=1, label=object, style=dashed];
d71 -> d91  [color=darkseagreen4, key=1, label=object, style=dashed];
d71 -> d92  [color=darkseagreen4, key=1, label=object, style=dashed];
d170 -> d211  [color=green, key=0, style=solid];
d169 -> d170  [color=green, key=0, style=solid];
d169 -> d220  [key=2, style=dotted];
d211 -> d127  [color=blue, key=0, style=bold];
d173 -> d211  [color=green, key=0, style=solid];
d172 -> d173  [color=green, key=0, style=solid];
d172 -> d221  [key=2, style=dotted];
d176 -> d211  [color=green, key=0, style=solid];
d175 -> d176  [color=green, key=0, style=solid];
d175 -> d36  [key=2, style=dotted];
d179 -> d211  [color=green, key=0, style=solid];
d178 -> d179  [color=green, key=0, style=solid];
d178 -> d222  [key=2, style=dotted];
d291 -> d292  [color=green, key=0, style=solid];
d281 -> d291  [color=green, key=0, style=solid];
d281 -> d282  [key=0, style=solid];
d281 -> d97  [key=2, style=dotted];
d281 -> d0  [key=2, style=dotted];
d292 -> d215  [color=blue, key=0, style=bold];
d290 -> d292  [color=green, key=0, style=solid];
d289 -> d290  [color=green, key=0, style=solid];
d294 -> d295  [color=green, key=0, style=solid];
d294 -> d317  [color=green, key=1, label="out int", style=dashed];
d294 -> d318  [color=green, key=1, label="out int", style=dashed];
d294 -> d329  [color=green, key=1, label="out int", style=dashed];
d294 -> d331  [color=green, key=1, label="out int", style=dashed];
d294 -> d333  [color=green, key=1, label="out int", style=dashed];
d293 -> d294  [color=green, key=0, style=solid];
d293 -> d295  [color=green, key=1, label=int, style=dashed];
d293 -> d297  [color=green, key=1, label="char[]", style=dashed];
d293 -> d299  [color=green, key=1, label=int, style=dashed];
d293 -> d301  [color=darkseagreen4, key=1, label=int, style=dashed];
d293 -> d302  [color=darkseagreen4, key=1, label=int, style=dashed];
d293 -> d303  [color=darkseagreen4, key=1, label=int, style=dashed];
d293 -> d304  [color=darkseagreen4, key=1, label="char[]", style=dashed];
d293 -> d305  [color=darkseagreen4, key=1, label=int, style=dashed];
d293 -> d307  [color=darkseagreen4, key=1, label="char[]", style=dashed];
d293 -> d312  [color=darkseagreen4, key=1, label=int, style=dashed];
d293 -> d314  [color=darkseagreen4, key=1, label="char[]", style=dashed];
d293 -> d321  [color=darkseagreen4, key=1, label="char[]", style=dashed];
d293 -> d210  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Utilities.ParseResult Int32TryParse", style=bold];
d293 -> d208  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Utilities.ParseResult Int32TryParse", style=bold];
d293 -> d19  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Utilities.ParseResult Int32TryParse", style=bold];
d293 -> d317  [color=darkorchid, key=3, label="Parameter variable int value", style=bold];
d295 -> d296  [color=green, key=0, style=solid];
d295 -> d297  [color=green, key=0, style=solid];
d317 -> d318  [key=0, style=solid];
d317 -> d326  [color=darkseagreen4, key=1, label=newValue, style=dashed];
d318 -> d319  [key=0, style=solid];
d318 -> d326  [key=0, style=solid];
d329 -> d330  [key=0, style=solid];
d329 -> d331  [key=0, style=solid];
d331 -> d331  [color=darkseagreen4, key=1, label="out int", style=dashed];
d331 -> d332  [key=0, style=solid];
d331 -> d333  [color=darkseagreen4, key=1, label="out int", style=dashed];
d333 -> d293  [color=blue, key=0, style=bold];
d296 -> d333  [color=green, key=0, style=solid];
d297 -> d298  [color=green, key=0, style=solid];
d297 -> d328  [color=green, key=1, label=isNegative, style=dashed];
d298 -> d299  [color=green, key=0, style=solid];
d298 -> d303  [color=green, key=0, style=solid];
d328 -> d329  [key=0, style=solid];
d328 -> d332  [key=0, style=solid];
d299 -> d300  [color=green, key=0, style=solid];
d299 -> d301  [color=green, key=0, style=solid];
d300 -> d333  [key=0, style=solid];
d301 -> d301  [color=darkseagreen4, key=1, label=int, style=dashed];
d301 -> d302  [key=0, style=solid];
d301 -> d303  [color=darkseagreen4, key=1, label=int, style=dashed];
d301 -> d304  [color=darkseagreen4, key=1, label=int, style=dashed];
d301 -> d305  [color=darkseagreen4, key=1, label=int, style=dashed];
d301 -> d312  [color=darkseagreen4, key=1, label=int, style=dashed];
d303 -> d304  [key=0, style=solid];
d303 -> d306  [color=darkseagreen4, key=1, label=end, style=dashed];
d303 -> d313  [color=darkseagreen4, key=1, label=end, style=dashed];
d303 -> d320  [color=darkseagreen4, key=1, label=end, style=dashed];
d32 -> d127  [color=darkorchid, key=3, label="Parameter variable System.Type t", style=bold];
d32 -> d33  [key=0, style=solid];
d36 -> d127  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
d36 -> d37  [key=0, style=solid];
d99 -> d127  [color=darkorchid, key=3, label="Parameter variable System.Type targetType", style=bold];
d99 -> d99  [color=darkorchid, key=3, label="method methodReturn object FromBigInteger", style=bold];
d99 -> d100  [key=0, style=solid];
d99 -> d101  [color=darkseagreen4, key=1, label=BigInteger, style=dashed];
d99 -> d102  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d99 -> d103  [color=darkseagreen4, key=1, label=BigInteger, style=dashed];
d99 -> d104  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d99 -> d105  [color=darkseagreen4, key=1, label=BigInteger, style=dashed];
d99 -> d106  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d99 -> d107  [color=darkseagreen4, key=1, label=BigInteger, style=dashed];
d99 -> d108  [color=darkseagreen4, key=1, label=BigInteger, style=dashed];
d99 -> d110  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d116 -> d127  [key=2, style=dotted];
d116 -> d117  [key=0, style=solid];
d116 -> d119  [key=0, style=solid];
d116 -> d121  [key=0, style=solid];
d116 -> d123  [key=0, style=solid];
d116 -> d125  [key=0, style=solid];
d116 -> d118  [color=darkseagreen4, key=1, label=value, style=dashed];
d133 -> d127  [key=2, style=dotted];
d133 -> d134  [key=0, style=solid];
d133 -> d135  [key=0, style=solid];
d215 -> d127  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
d215 -> d281  [key=0, style=solid];
d215 -> d134  [color=darkorchid, key=3, label="method methodReturn bool IsInteger", style=bold];
d215 -> d50  [color=darkorchid, key=3, label="method methodReturn bool IsInteger", style=bold];
d224 -> d127  [color=darkorchid, key=3, label="Parameter variable System.Type t", style=bold];
d224 -> d278  [key=0, style=solid];
d224 -> d144  [color=darkorchid, key=3, label="Parameter variable System.Type t", style=bold];
d230 -> d127  [color=darkorchid, key=3, label="Parameter variable System.Type targetType", style=bold];
d230 -> d230  [color=darkorchid, key=3, label="method methodReturn object EnsureTypeAssignable", style=bold];
d230 -> d246  [key=0, style=solid];
d230 -> d247  [color=darkseagreen4, key=1, label=object, style=dashed];
d230 -> d248  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d230 -> d249  [color=darkseagreen4, key=1, label=object, style=dashed];
d230 -> d250  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d230 -> d252  [color=darkseagreen4, key=1, label=object, style=dashed];
d230 -> d253  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d230 -> d255  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d230 -> d61  [color=darkorchid, key=3, label="method methodReturn object EnsureTypeAssignable", style=bold];
d230 -> d231  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
d230 -> d235  [color=darkorchid, key=3, label="Parameter variable System.Type targetType", style=bold];
d230 -> d144  [color=darkorchid, key=3, label="Parameter variable System.Type initialType", style=bold];
d231 -> d127  [color=darkorchid, key=3, label="Parameter variable INullable nullableValue", style=bold];
d231 -> d261  [key=0, style=solid];
d231 -> d263  [color=darkseagreen4, key=1, label=INullable, style=dashed];
d231 -> d264  [color=darkseagreen4, key=1, label=INullable, style=dashed];
d231 -> d265  [color=darkseagreen4, key=1, label=INullable, style=dashed];
d231 -> d266  [color=darkseagreen4, key=1, label=INullable, style=dashed];
d231 -> d267  [color=darkseagreen4, key=1, label=INullable, style=dashed];
d231 -> d268  [color=darkseagreen4, key=1, label=INullable, style=dashed];
d231 -> d269  [color=darkseagreen4, key=1, label=INullable, style=dashed];
d231 -> d270  [color=darkseagreen4, key=1, label=INullable, style=dashed];
d231 -> d271  [color=darkseagreen4, key=1, label=INullable, style=dashed];
d231 -> d272  [color=darkseagreen4, key=1, label=INullable, style=dashed];
d231 -> d273  [color=darkseagreen4, key=1, label=INullable, style=dashed];
d231 -> d61  [color=darkorchid, key=3, label="method methodReturn object ToValue", style=bold];
d140 -> d141  [key=0, style=solid];
d140 -> d142  [key=0, style=solid];
d142 -> d143  [key=0, style=solid];
d142 -> d144  [key=0, style=solid];
d142 -> d24  [key=2, style=dotted];
d144 -> d145  [key=0, style=solid];
d144 -> d97  [key=2, style=dotted];
d144 -> d189  [color=darkseagreen4, key=1, label=initialType, style=dashed];
d144 -> d194  [color=darkseagreen4, key=1, label=initialType, style=dashed];
d144 -> d199  [color=darkseagreen4, key=1, label=initialType, style=dashed];
d144 -> d204  [color=darkseagreen4, key=1, label=initialType, style=dashed];
d145 -> d146  [key=0, style=solid];
d145 -> d148  [key=0, style=solid];
d146 -> d147  [key=0, style=solid];
d148 -> d32  [key=2, style=dotted];
d148 -> d149  [key=0, style=solid];
d148 -> d158  [key=0, style=solid];
d148 -> d97  [key=2, style=dotted];
d149 -> d150  [key=0, style=solid];
d149 -> d156  [key=0, style=solid];
d149 -> d22  [key=2, style=dotted];
d150 -> d151  [key=0, style=solid];
d150 -> d153  [key=0, style=solid];
d151 -> d152  [key=0, style=solid];
d151 -> d213  [key=2, style=dotted];
d151 -> d214  [key=2, style=dotted];
d153 -> d215  [key=2, style=dotted];
d153 -> d154  [key=0, style=solid];
d153 -> d156  [key=0, style=solid];
d154 -> d155  [key=0, style=solid];
d154 -> d216  [key=2, style=dotted];
d156 -> d157  [key=0, style=solid];
d156 -> d112  [key=2, style=dotted];
d158 -> d159  [key=0, style=solid];
d158 -> d161  [key=0, style=solid];
d159 -> d160  [key=0, style=solid];
d159 -> d217  [key=2, style=dotted];
d161 -> d164  [key=0, style=solid];
d161 -> d162  [key=0, style=solid];
d162 -> d163  [key=0, style=solid];
d162 -> d218  [key=2, style=dotted];
d165 -> d166  [key=0, style=solid];
d165 -> d219  [key=2, style=dotted];
d171 -> d172  [key=0, style=solid];
d171 -> d174  [key=0, style=solid];
d174 -> d175  [key=0, style=solid];
d174 -> d177  [key=0, style=solid];
d177 -> d180  [key=0, style=solid];
d177 -> d178  [key=0, style=solid];
d187 -> d99  [key=2, style=dotted];
d187 -> d188  [key=0, style=solid];
d190 -> d191  [key=0, style=solid];
d190 -> d193  [key=0, style=solid];
d190 -> d225  [key=2, style=dotted];
d191 -> d192  [key=0, style=solid];
d191 -> d226  [key=2, style=dotted];
d193 -> d224  [key=2, style=dotted];
d193 -> d194  [key=0, style=solid];
d193 -> d195  [color=darkseagreen4, key=1, label=fromConverter, style=dashed];
d195 -> d196  [key=0, style=solid];
d195 -> d228  [key=2, style=dotted];
d197 -> d198  [key=0, style=solid];
d197 -> d203  [key=0, style=solid];
d198 -> d199  [key=0, style=solid];
d198 -> d201  [key=0, style=solid];
d198 -> d229  [key=2, style=dotted];
d199 -> d230  [key=2, style=dotted];
d199 -> d200  [key=0, style=solid];
d203 -> d204  [key=0, style=solid];
d203 -> d206  [key=0, style=solid];
d204 -> d230  [key=2, style=dotted];
d204 -> d231  [key=2, style=dotted];
d204 -> d205  [key=0, style=solid];
d206 -> d207  [key=0, style=solid];
d206 -> d209  [key=0, style=solid];
d206 -> d232  [key=2, style=dotted];
d206 -> d233  [key=2, style=dotted];
d206 -> d234  [key=2, style=dotted];
d114 -> d116  [color=darkseagreen4, key=1, label=object, style=dashed];
d114 -> d115  [key=0, style=solid];
d114 -> d120  [color=darkseagreen4, key=1, label=object, style=dashed];
d114 -> d122  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d114 -> d124  [color=darkseagreen4, key=1, label=object, style=dashed];
d132 -> d133  [key=0, style=solid];
d132 -> d134  [color=darkorchid, key=3, label="method methodReturn bool TryConvert", style=bold];
d132 -> d50  [color=darkorchid, key=3, label="method methodReturn bool TryConvert", style=bold];
d132 -> d235  [color=darkorchid, key=3, label="Parameter variable System.Type targetType", style=bold];
d132 -> d236  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
d115 -> d116  [key=0, style=solid];
d147 -> d211  [key=0, style=solid];
d19 -> d20  [key=0, style=solid];
d208 -> d211  [key=0, style=solid];
d210 -> d211  [key=0, style=solid];
d189 -> d224  [key=2, style=dotted];
d189 -> d190  [key=0, style=solid];
d189 -> d191  [color=darkseagreen4, key=1, label=toConverter, style=dashed];
d93 -> d71  [color=blue, key=0, style=bold];
d72 -> d73  [key=0, style=solid];
d72 -> d74  [key=0, style=solid];
d73 -> d93  [key=0, style=solid];
d74 -> d75  [key=0, style=solid];
d74 -> d76  [key=0, style=solid];
d75 -> d93  [key=0, style=solid];
d75 -> d94  [key=2, style=dotted];
d76 -> d77  [key=0, style=solid];
d76 -> d78  [key=0, style=solid];
d77 -> d93  [key=0, style=solid];
d77 -> d95  [key=2, style=dotted];
d78 -> d79  [key=0, style=solid];
d78 -> d80  [key=0, style=solid];
d79 -> d93  [key=0, style=solid];
d79 -> d95  [key=2, style=dotted];
d80 -> d81  [key=0, style=solid];
d80 -> d82  [key=0, style=solid];
d81 -> d93  [key=0, style=solid];
d81 -> d95  [key=2, style=dotted];
d82 -> d83  [key=0, style=solid];
d82 -> d84  [key=0, style=solid];
d83 -> d93  [key=0, style=solid];
d83 -> d95  [key=2, style=dotted];
d84 -> d85  [key=0, style=solid];
d84 -> d86  [key=0, style=solid];
d85 -> d93  [key=0, style=solid];
d85 -> d95  [key=2, style=dotted];
d86 -> d87  [key=0, style=solid];
d86 -> d88  [key=0, style=solid];
d87 -> d93  [key=0, style=solid];
d87 -> d95  [key=2, style=dotted];
d88 -> d89  [key=0, style=solid];
d88 -> d90  [key=0, style=solid];
d89 -> d93  [key=0, style=solid];
d89 -> d95  [key=2, style=dotted];
d90 -> d91  [key=0, style=solid];
d90 -> d92  [key=0, style=solid];
d91 -> d93  [key=0, style=solid];
d91 -> d95  [key=2, style=dotted];
d92 -> d93  [key=0, style=solid];
d92 -> d96  [key=2, style=dotted];
d92 -> d97  [key=2, style=dotted];
d92 -> d98  [key=2, style=dotted];
d141 -> d211  [key=0, style=solid];
d141 -> d212  [key=2, style=dotted];
d152 -> d211  [key=0, style=solid];
d155 -> d211  [key=0, style=solid];
d157 -> d211  [key=0, style=solid];
d160 -> d211  [key=0, style=solid];
d163 -> d211  [key=0, style=solid];
d166 -> d211  [key=0, style=solid];
d188 -> d211  [key=0, style=solid];
d192 -> d211  [key=0, style=solid];
d196 -> d211  [key=0, style=solid];
d200 -> d211  [key=0, style=solid];
d202 -> d211  [key=0, style=solid];
d205 -> d211  [key=0, style=solid];
d209 -> d211  [color=darkseagreen4, key=1, label="out object", style=dashed];
d209 -> d210  [key=0, style=solid];
d282 -> d283  [key=0, style=solid];
d0 -> d1  [key=0, style=solid];
d0 -> d2  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d0 -> d4  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Utilities.PrimitiveTypeCode GetTypeCode", style=bold];
d0 -> d15  [color=darkorchid, key=3, label="Parameter variable System.Type t", style=bold];
d288 -> d289  [key=0, style=solid];
d305 -> d293  [color=darkorchid, key=3, label="Local variable int i", style=bold];
d305 -> d306  [key=0, style=solid];
d305 -> d307  [color=darkseagreen4, key=1, label=i, style=dashed];
d305 -> d310  [color=darkseagreen4, key=1, label=i, style=dashed];
d312 -> d293  [color=darkorchid, key=3, label="Local variable int i", style=bold];
d312 -> d313  [key=0, style=solid];
d312 -> d314  [color=darkseagreen4, key=1, label=i, style=dashed];
d312 -> d319  [color=darkseagreen4, key=1, label=i, style=dashed];
d312 -> d327  [color=darkseagreen4, key=1, label=i, style=dashed];
d302 -> d303  [key=0, style=solid];
d302 -> d302  [color=darkseagreen4, key=1, label=int, style=dashed];
d302 -> d304  [color=darkseagreen4, key=1, label=int, style=dashed];
d304 -> d305  [key=0, style=solid];
d304 -> d312  [key=0, style=solid];
d307 -> d308  [key=0, style=solid];
d314 -> d317  [color=darkseagreen4, key=1, label=c, style=dashed];
d314 -> d315  [key=0, style=solid];
d321 -> d322  [key=0, style=solid];
d315 -> d317  [key=0, style=solid];
d315 -> d316  [key=0, style=solid];
d326 -> d329  [color=darkseagreen4, key=1, label="out int", style=dashed];
d326 -> d331  [color=darkseagreen4, key=1, label="out int", style=dashed];
d326 -> d333  [color=darkseagreen4, key=1, label="out int", style=dashed];
d326 -> d327  [key=0, style=solid];
d319 -> d321  [color=darkseagreen4, key=1, label=i, style=dashed];
d319 -> d319  [color=darkseagreen4, key=1, label=i, style=dashed];
d319 -> d320  [key=0, style=solid];
d319 -> d324  [color=darkseagreen4, key=1, label=i, style=dashed];
d319 -> d327  [color=darkseagreen4, key=1, label=i, style=dashed];
d330 -> d333  [key=0, style=solid];
d332 -> d333  [key=0, style=solid];
d311 -> d333  [key=0, style=solid];
d309 -> d333  [key=0, style=solid];
d316 -> d333  [key=0, style=solid];
d325 -> d333  [key=0, style=solid];
d323 -> d333  [key=0, style=solid];
d313 -> d328  [key=0, style=solid];
d313 -> d314  [key=0, style=solid];
d306 -> d307  [key=0, style=solid];
d306 -> d311  [key=0, style=solid];
d320 -> d321  [key=0, style=solid];
d320 -> d325  [key=0, style=solid];
d34 -> d32  [color=blue, key=0, style=bold];
d33 -> d35  [key=2, style=dotted];
d33 -> d34  [key=0, style=solid];
d38 -> d36  [color=blue, key=0, style=bold];
d37 -> d38  [key=0, style=solid];
d37 -> d39  [key=2, style=dotted];
d111 -> d99  [color=blue, key=0, style=bold];
d100 -> d101  [key=0, style=solid];
d100 -> d102  [key=0, style=solid];
d101 -> d111  [key=0, style=solid];
d102 -> d103  [key=0, style=solid];
d102 -> d104  [key=0, style=solid];
d103 -> d111  [key=0, style=solid];
d104 -> d105  [key=0, style=solid];
d104 -> d106  [key=0, style=solid];
d105 -> d111  [key=0, style=solid];
d106 -> d107  [key=0, style=solid];
d106 -> d108  [key=0, style=solid];
d107 -> d111  [key=0, style=solid];
d108 -> d111  [key=0, style=solid];
d108 -> d112  [key=2, style=dotted];
d110 -> d111  [key=0, style=solid];
d110 -> d113  [key=2, style=dotted];
d110 -> d98  [key=2, style=dotted];
d117 -> d118  [key=0, style=solid];
d119 -> d120  [key=0, style=solid];
d121 -> d122  [key=0, style=solid];
d123 -> d124  [key=0, style=solid];
d125 -> d126  [key=0, style=solid];
d125 -> d131  [key=2, style=dotted];
d118 -> d126  [key=0, style=solid];
d134 -> d139  [key=0, style=solid];
d135 -> d136  [key=0, style=solid];
d50 -> d52  [key=0, style=solid];
d279 -> d224  [color=blue, key=0, style=bold];
d278 -> d279  [key=0, style=solid];
d278 -> d280  [key=2, style=dotted];
d235 -> d230  [color=darkorchid, key=3, label="method methodReturn object ConvertOrCast", style=bold];
d235 -> d235  [color=darkorchid, key=3, label="method methodReturn object ConvertOrCast", style=bold];
d235 -> d236  [key=0, style=solid];
d235 -> d237  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d235 -> d238  [color=darkseagreen4, key=1, label=object, style=dashed];
d235 -> d239  [color=darkseagreen4, key=1, label=object, style=dashed];
d235 -> d241  [color=darkseagreen4, key=1, label=object, style=dashed];
d235 -> d243  [color=darkseagreen4, key=1, label=object, style=dashed];
d235 -> d61  [color=darkorchid, key=3, label="method methodReturn object ConvertOrCast", style=bold];
d243 -> d230  [key=2, style=dotted];
d243 -> d244  [key=0, style=solid];
d243 -> d245  [key=2, style=dotted];
d256 -> d230  [color=blue, key=0, style=bold];
d246 -> d97  [key=2, style=dotted];
d246 -> d247  [key=0, style=solid];
d246 -> d248  [color=darkseagreen4, key=1, label=valueType, style=dashed];
d246 -> d250  [color=darkseagreen4, key=1, label=valueType, style=dashed];
d247 -> d248  [key=0, style=solid];
d247 -> d253  [key=0, style=solid];
d248 -> d35  [key=2, style=dotted];
d248 -> d249  [key=0, style=solid];
d248 -> d250  [key=0, style=solid];
d249 -> d256  [key=0, style=solid];
d250 -> d251  [key=0, style=solid];
d250 -> d40  [key=2, style=dotted];
d250 -> d257  [key=2, style=dotted];
d250 -> d252  [color=darkseagreen4, key=1, label=castConverter, style=dashed];
d252 -> d256  [key=0, style=solid];
d252 -> d258  [key=2, style=dotted];
d253 -> d254  [key=0, style=solid];
d253 -> d255  [key=0, style=solid];
d253 -> d229  [key=2, style=dotted];
d255 -> d256  [key=0, style=solid];
d255 -> d259  [key=2, style=dotted];
d255 -> d260  [key=2, style=dotted];
d255 -> d129  [key=2, style=dotted];
d61 -> d64  [key=0, style=solid];
d274 -> d231  [color=blue, key=0, style=bold];
d261 -> d262  [key=0, style=solid];
d261 -> d263  [key=0, style=solid];
d263 -> d264  [key=0, style=solid];
d263 -> d265  [key=0, style=solid];
d264 -> d274  [key=0, style=solid];
d264 -> d275  [key=2, style=dotted];
d265 -> d266  [key=0, style=solid];
d265 -> d267  [key=0, style=solid];
d266 -> d274  [key=0, style=solid];
d266 -> d275  [key=2, style=dotted];
d267 -> d268  [key=0, style=solid];
d267 -> d269  [key=0, style=solid];
d268 -> d274  [key=0, style=solid];
d268 -> d275  [key=2, style=dotted];
d269 -> d270  [key=0, style=solid];
d269 -> d271  [key=0, style=solid];
d270 -> d274  [key=0, style=solid];
d270 -> d275  [key=2, style=dotted];
d271 -> d272  [key=0, style=solid];
d271 -> d273  [key=0, style=solid];
d272 -> d274  [key=0, style=solid];
d272 -> d275  [key=2, style=dotted];
d273 -> d274  [key=0, style=solid];
d273 -> d259  [key=2, style=dotted];
d273 -> d276  [key=2, style=dotted];
d273 -> d277  [key=2, style=dotted];
d194 -> d195  [key=0, style=solid];
d194 -> d197  [key=0, style=solid];
d194 -> d227  [key=2, style=dotted];
d201 -> d202  [key=0, style=solid];
d207 -> d208  [key=0, style=solid];
d126 -> d114  [color=blue, key=0, style=bold];
d120 -> d97  [key=2, style=dotted];
d120 -> d126  [key=0, style=solid];
d120 -> d128  [key=2, style=dotted];
d120 -> d129  [key=2, style=dotted];
d122 -> d126  [key=0, style=solid];
d122 -> d130  [key=2, style=dotted];
d122 -> d98  [key=2, style=dotted];
d124 -> d97  [key=2, style=dotted];
d124 -> d126  [key=0, style=solid];
d124 -> d131  [key=2, style=dotted];
d124 -> d129  [key=2, style=dotted];
d139 -> d132  [color=blue, key=0, style=bold];
d241 -> d132  [key=2, style=dotted];
d241 -> d243  [key=0, style=solid];
d241 -> d242  [key=0, style=solid];
d236 -> d237  [key=0, style=solid];
d4 -> d19  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Utilities.PrimitiveTypeCode GetTypeCode", style=bold];
d4 -> d0  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Utilities.PrimitiveTypeCode GetTypeCode", style=bold];
d4 -> d5  [key=0, style=solid];
d4 -> d6  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d4 -> d9  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d4 -> d11  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d4 -> d12  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d4 -> d13  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d4 -> d1  [color=darkorchid, key=3, label="Parameter variable bool isEnum", style=bold];
d18 -> d19  [key=0, style=solid];
d18 -> d20  [color=darkseagreen4, key=1, label="out bool", style=dashed];
d334 -> d19  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Utilities.ParseResult Int64TryParse", style=bold];
d334 -> d208  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Utilities.ParseResult Int64TryParse", style=bold];
d334 -> d210  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Utilities.ParseResult Int64TryParse", style=bold];
d334 -> d335  [key=0, style=solid];
d334 -> d336  [color=darkseagreen4, key=1, label=int, style=dashed];
d334 -> d338  [color=darkseagreen4, key=1, label="char[]", style=dashed];
d334 -> d340  [color=darkseagreen4, key=1, label=int, style=dashed];
d334 -> d342  [color=darkseagreen4, key=1, label=int, style=dashed];
d334 -> d343  [color=darkseagreen4, key=1, label=int, style=dashed];
d334 -> d344  [color=darkseagreen4, key=1, label=int, style=dashed];
d334 -> d345  [color=darkseagreen4, key=1, label=int, style=dashed];
d334 -> d346  [color=darkseagreen4, key=1, label=int, style=dashed];
d334 -> d348  [color=darkseagreen4, key=1, label="char[]", style=dashed];
d334 -> d353  [color=darkseagreen4, key=1, label=int, style=dashed];
d334 -> d355  [color=darkseagreen4, key=1, label="char[]", style=dashed];
d334 -> d362  [color=darkseagreen4, key=1, label="char[]", style=dashed];
d334 -> d358  [color=darkorchid, key=3, label="Parameter variable long value", style=bold];
d20 -> d4  [color=blue, key=0, style=bold];
d13 -> d25  [key=2, style=dotted];
d13 -> d14  [key=0, style=solid];
d13 -> d15  [color=darkseagreen4, key=1, label=nonNullable, style=dashed];
d283 -> d284  [key=0, style=solid];
d3 -> d0  [color=blue, key=0, style=bold];
d11 -> d0  [key=2, style=dotted];
d11 -> d20  [key=0, style=solid];
d11 -> d23  [key=2, style=dotted];
d17 -> d0  [key=2, style=dotted];
d17 -> d20  [key=0, style=solid];
d1 -> d2  [key=0, style=solid];
d2 -> d4  [key=2, style=dotted];
d2 -> d3  [key=0, style=solid];
d15 -> d17  [color=darkseagreen4, key=1, label=nullableUnderlyingType, style=dashed];
d15 -> d16  [key=0, style=solid];
d15 -> d23  [key=2, style=dotted];
d15 -> d26  [key=2, style=dotted];
d287 -> d288  [key=0, style=solid];
d310 -> d306  [key=0, style=solid];
d310 -> d310  [color=darkseagreen4, key=1, label=i, style=dashed];
d327 -> d313  [key=0, style=solid];
d327 -> d327  [color=darkseagreen4, key=1, label=i, style=dashed];
d308 -> d309  [key=0, style=solid];
d308 -> d310  [key=0, style=solid];
d322 -> d323  [key=0, style=solid];
d322 -> d324  [key=0, style=solid];
d324 -> d320  [key=0, style=solid];
d324 -> d327  [color=darkseagreen4, key=1, label=i, style=dashed];
d324 -> d324  [color=darkseagreen4, key=1, label=i, style=dashed];
d109 -> d110  [key=0, style=solid];
d136 -> d139  [key=0, style=solid];
d48 -> d50  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
d48 -> d49  [key=0, style=solid];
d48 -> d51  [color=darkseagreen4, key=1, label=object, style=dashed];
d48 -> d53  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
d49 -> d50  [key=0, style=solid];
d49 -> d51  [key=0, style=solid];
d52 -> d48  [color=blue, key=0, style=bold];
d244 -> d235  [color=blue, key=0, style=bold];
d237 -> d238  [key=0, style=solid];
d237 -> d239  [key=0, style=solid];
d238 -> d244  [key=0, style=solid];
d239 -> d229  [key=2, style=dotted];
d239 -> d241  [key=0, style=solid];
d239 -> d240  [key=0, style=solid];
d254 -> d256  [key=0, style=solid];
d251 -> d252  [key=0, style=solid];
d251 -> d255  [key=0, style=solid];
d40 -> d41  [key=0, style=solid];
d40 -> d42  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d56 -> d61  [color=darkorchid, key=3, label="method methodReturn System.Func<object, object> CreateCastConverter", style=bold];
d56 -> d57  [key=0, style=solid];
d56 -> d63  [color=darkorchid, key=3, label="method methodReturn System.Func<object, object> CreateCastConverter", style=bold];
d60 -> d61  [key=0, style=solid];
d60 -> d62  [key=0, style=solid];
d64 -> d56  [color=blue, key=0, style=bold];
d262 -> d274  [key=0, style=solid];
d12 -> d24  [key=2, style=dotted];
d12 -> d18  [key=0, style=solid];
d12 -> d13  [key=0, style=solid];
d9 -> d22  [key=2, style=dotted];
d9 -> d12  [key=0, style=solid];
d9 -> d10  [key=0, style=solid];
d14 -> d22  [key=2, style=dotted];
d14 -> d18  [key=0, style=solid];
d14 -> d15  [key=0, style=solid];
d137 -> d139  [color=darkseagreen4, key=1, label="out object", style=dashed];
d137 -> d138  [key=0, style=solid];
d138 -> d139  [key=0, style=solid];
d242 -> d244  [key=0, style=solid];
d5 -> d6  [key=0, style=solid];
d6 -> d9  [key=0, style=solid];
d6 -> d7  [key=0, style=solid];
d6 -> d21  [key=2, style=dotted];
d6 -> d8  [color=darkseagreen4, key=1, label=typeCode, style=dashed];
d346 -> d334  [color=darkorchid, key=3, label="Local variable int i", style=bold];
d346 -> d347  [key=0, style=solid];
d346 -> d348  [color=darkseagreen4, key=1, label=i, style=dashed];
d346 -> d351  [color=darkseagreen4, key=1, label=i, style=dashed];
d353 -> d334  [color=darkorchid, key=3, label="Local variable int i", style=bold];
d353 -> d354  [key=0, style=solid];
d353 -> d355  [color=darkseagreen4, key=1, label=i, style=dashed];
d353 -> d360  [color=darkseagreen4, key=1, label=i, style=dashed];
d353 -> d368  [color=darkseagreen4, key=1, label=i, style=dashed];
d374 -> d334  [color=blue, key=0, style=bold];
d335 -> d374  [color=darkseagreen4, key=1, label="out long", style=dashed];
d335 -> d336  [key=0, style=solid];
d335 -> d358  [color=darkseagreen4, key=1, label="out long", style=dashed];
d335 -> d359  [color=darkseagreen4, key=1, label="out long", style=dashed];
d335 -> d370  [color=darkseagreen4, key=1, label="out long", style=dashed];
d335 -> d372  [color=darkseagreen4, key=1, label="out long", style=dashed];
d336 -> d337  [key=0, style=solid];
d336 -> d338  [key=0, style=solid];
d338 -> d339  [key=0, style=solid];
d338 -> d369  [color=darkseagreen4, key=1, label=isNegative, style=dashed];
d340 -> d341  [key=0, style=solid];
d340 -> d342  [key=0, style=solid];
d342 -> d346  [color=darkseagreen4, key=1, label=int, style=dashed];
d342 -> d353  [color=darkseagreen4, key=1, label=int, style=dashed];
d342 -> d342  [color=darkseagreen4, key=1, label=int, style=dashed];
d342 -> d343  [key=0, style=solid];
d342 -> d344  [color=darkseagreen4, key=1, label=int, style=dashed];
d343 -> d343  [color=darkseagreen4, key=1, label=int, style=dashed];
d343 -> d344  [key=0, style=solid];
d343 -> d345  [color=darkseagreen4, key=1, label=int, style=dashed];
d344 -> d345  [key=0, style=solid];
d344 -> d347  [color=darkseagreen4, key=1, label=end, style=dashed];
d344 -> d354  [color=darkseagreen4, key=1, label=end, style=dashed];
d344 -> d361  [color=darkseagreen4, key=1, label=end, style=dashed];
d345 -> d346  [key=0, style=solid];
d345 -> d353  [key=0, style=solid];
d348 -> d349  [key=0, style=solid];
d355 -> d356  [key=0, style=solid];
d355 -> d358  [color=darkseagreen4, key=1, label=c, style=dashed];
d362 -> d363  [key=0, style=solid];
d358 -> d359  [key=0, style=solid];
d358 -> d367  [color=darkseagreen4, key=1, label=newValue, style=dashed];
d8 -> d20  [key=0, style=solid];
d284 -> d285  [key=0, style=solid];
d10 -> d11  [key=0, style=solid];
d16 -> d17  [key=0, style=solid];
d286 -> d287  [key=0, style=solid];
d53 -> d48  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey other", style=bold];
d53 -> d54  [key=0, style=solid];
d51 -> d52  [key=0, style=solid];
d51 -> d53  [key=2, style=dotted];
d51 -> d381  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", style=dashed];
d381 -> d52  [color=darkseagreen4, key=1, label="ref Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", style=dashed];
d240 -> d244  [key=0, style=solid];
d43 -> d40  [color=blue, key=0, style=bold];
d41 -> d42  [key=0, style=solid];
d41 -> d379  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", style=dashed];
d42 -> d43  [key=0, style=solid];
d42 -> d379  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", style=dashed];
d57 -> d60  [color=darkseagreen4, key=1, label=castMethodInfo, style=dashed];
d57 -> d57  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", style=dashed];
d57 -> d58  [key=0, style=solid];
d57 -> d65  [key=2, style=dotted];
d57 -> d59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", style=dashed];
d57 -> d62  [color=darkseagreen4, key=1, label=castMethodInfo, style=dashed];
d63 -> d64  [key=0, style=solid];
d63 -> d68  [color=darkseagreen4, key=1, label=object, style=dashed];
d58 -> d60  [key=0, style=solid];
d58 -> d59  [key=0, style=solid];
d59 -> d60  [key=0, style=solid];
d59 -> d59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", style=dashed];
d59 -> d65  [key=2, style=dotted];
d59 -> d62  [color=darkseagreen4, key=1, label=castMethodInfo, style=dashed];
d62 -> d63  [key=0, style=solid];
d62 -> d66  [key=2, style=dotted];
d62 -> d68  [color=darkseagreen4, key=1, label=call, style=dashed];
d7 -> d8  [key=0, style=solid];
d347 -> d348  [key=0, style=solid];
d347 -> d352  [key=0, style=solid];
d351 -> d347  [key=0, style=solid];
d351 -> d351  [color=darkseagreen4, key=1, label=i, style=dashed];
d354 -> d355  [key=0, style=solid];
d354 -> d369  [key=0, style=solid];
d360 -> d362  [color=darkseagreen4, key=1, label=i, style=dashed];
d360 -> d360  [color=darkseagreen4, key=1, label=i, style=dashed];
d360 -> d361  [key=0, style=solid];
d360 -> d365  [color=darkseagreen4, key=1, label=i, style=dashed];
d360 -> d368  [color=darkseagreen4, key=1, label=i, style=dashed];
d368 -> d354  [key=0, style=solid];
d368 -> d368  [color=darkseagreen4, key=1, label=i, style=dashed];
d372 -> d374  [color=darkseagreen4, key=1, label="out long", style=dashed];
d372 -> d372  [color=darkseagreen4, key=1, label="out long", style=dashed];
d372 -> d373  [key=0, style=solid];
d337 -> d374  [key=0, style=solid];
d341 -> d374  [key=0, style=solid];
d352 -> d374  [key=0, style=solid];
d350 -> d374  [key=0, style=solid];
d357 -> d374  [key=0, style=solid];
d367 -> d374  [color=darkseagreen4, key=1, label="out long", style=dashed];
d367 -> d368  [key=0, style=solid];
d367 -> d372  [color=darkseagreen4, key=1, label="out long", style=dashed];
d367 -> d370  [color=darkseagreen4, key=1, label="out long", style=dashed];
d366 -> d374  [key=0, style=solid];
d364 -> d374  [key=0, style=solid];
d373 -> d374  [key=0, style=solid];
d371 -> d374  [key=0, style=solid];
d359 -> d360  [key=0, style=solid];
d359 -> d367  [key=0, style=solid];
d370 -> d372  [key=0, style=solid];
d370 -> d371  [key=0, style=solid];
d339 -> d340  [key=0, style=solid];
d339 -> d344  [key=0, style=solid];
d369 -> d373  [key=0, style=solid];
d369 -> d370  [key=0, style=solid];
d361 -> d362  [key=0, style=solid];
d361 -> d366  [key=0, style=solid];
d349 -> d351  [key=0, style=solid];
d349 -> d350  [key=0, style=solid];
d356 -> d358  [key=0, style=solid];
d356 -> d357  [key=0, style=solid];
d363 -> d364  [key=0, style=solid];
d363 -> d365  [key=0, style=solid];
d285 -> d286  [key=0, style=solid];
d55 -> d53  [color=blue, key=0, style=bold];
d54 -> d55  [key=0, style=solid];
d380 -> d51  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", style=dashed];
d380 -> d54  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", style=dashed];
d380 -> d45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", style=dashed];
d68 -> d69  [key=0, style=solid];
d68 -> d70  [key=2, style=dotted];
d365 -> d368  [color=darkseagreen4, key=1, label=i, style=dashed];
d365 -> d361  [key=0, style=solid];
d365 -> d365  [color=darkseagreen4, key=1, label=i, style=dashed];
d45 -> d46  [key=0, style=solid];
d45 -> d47  [key=2, style=dotted];
d382 -> d68  [color=darkseagreen4, key=1, label=call, style=dashed];
d67 -> d68  [key=0, style=solid];
d69 -> d67  [color=blue, key=0, style=bold];
d44 -> d45  [key=0, style=solid];
d46 -> d44  [color=blue, key=0, style=bold];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_12 -> m1_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_15  [key=0, style=solid];
m1_14 -> m1_16  [key=0, style=solid];
m1_14 -> m1_17  [key=2, style=dotted];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_18  [key=2, style=dotted];
m1_16 -> m1_12  [color=blue, key=0, style=bold];
m1_9 -> m1_10  [key=0, style=solid];
m1_10 -> m1_11  [key=0, style=solid];
m1_11 -> m1_9  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=0, style=solid];
m1_2 -> m1_7  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_6  [key=0, style=solid];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_8  [key=2, style=dotted];
m1_6 -> m1_7  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_7 -> m1_0  [color=blue, key=0, style=bold];
m1_19 -> m1_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m1_19 -> m1_3  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m1_19 -> m1_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m1_19 -> m1_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m1_19 -> m1_6  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m1_19 -> m1_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m1_19 -> m1_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m1_19 -> m1_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m1_19 -> m1_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m2_473 -> m2_474  [key=0, style=solid];
m2_473 -> m2_475  [color=darkseagreen4, key=1, label="System.Dynamic.BinaryOperationBinder", style=dashed];
m2_473 -> m2_477  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_473 -> m2_480  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_473 -> m2_483  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_473 -> m2_486  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_473 -> m2_489  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_473 -> m2_492  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_473 -> m2_502  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_473 -> m2_39  [color=darkorchid, key=3, label="method methodReturn bool TryBinaryOperation", style=bold];
m2_473 -> m2_37  [color=darkorchid, key=3, label="method methodReturn bool TryBinaryOperation", style=bold];
m2_474 -> m2_475  [key=0, style=solid];
m2_474 -> m2_477  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m2_474 -> m2_480  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m2_474 -> m2_483  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m2_474 -> m2_486  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m2_474 -> m2_489  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m2_474 -> m2_492  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m2_474 -> m2_502  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m2_475 -> m2_476  [key=0, style=solid];
m2_475 -> m2_479  [key=0, style=solid];
m2_475 -> m2_482  [key=0, style=solid];
m2_475 -> m2_485  [key=0, style=solid];
m2_475 -> m2_488  [key=0, style=solid];
m2_475 -> m2_491  [key=0, style=solid];
m2_475 -> m2_494  [key=0, style=solid];
m2_477 -> m2_478  [key=0, style=solid];
m2_477 -> m2_64  [key=2, style=dotted];
m2_480 -> m2_481  [key=0, style=solid];
m2_480 -> m2_64  [key=2, style=dotted];
m2_483 -> m2_484  [key=0, style=solid];
m2_483 -> m2_64  [key=2, style=dotted];
m2_486 -> m2_487  [key=0, style=solid];
m2_486 -> m2_64  [key=2, style=dotted];
m2_489 -> m2_490  [key=0, style=solid];
m2_489 -> m2_64  [key=2, style=dotted];
m2_492 -> m2_493  [key=0, style=solid];
m2_492 -> m2_64  [key=2, style=dotted];
m2_502 -> m2_503  [key=0, style=solid];
m2_502 -> m2_505  [key=0, style=solid];
m2_502 -> m2_169  [key=2, style=dotted];
m2_476 -> m2_477  [key=0, style=solid];
m2_479 -> m2_480  [key=0, style=solid];
m2_482 -> m2_483  [key=0, style=solid];
m2_485 -> m2_486  [key=0, style=solid];
m2_488 -> m2_489  [key=0, style=solid];
m2_491 -> m2_492  [key=0, style=solid];
m2_494 -> m2_495  [key=0, style=solid];
m2_478 -> m2_507  [key=0, style=solid];
m2_481 -> m2_507  [key=0, style=solid];
m2_484 -> m2_507  [key=0, style=solid];
m2_487 -> m2_507  [key=0, style=solid];
m2_490 -> m2_507  [key=0, style=solid];
m2_493 -> m2_507  [key=0, style=solid];
m2_495 -> m2_496  [key=0, style=solid];
m2_496 -> m2_497  [key=0, style=solid];
m2_497 -> m2_498  [key=0, style=solid];
m2_498 -> m2_499  [key=0, style=solid];
m2_499 -> m2_500  [key=0, style=solid];
m2_500 -> m2_501  [key=0, style=solid];
m2_501 -> m2_502  [key=0, style=solid];
m2_503 -> m2_504  [key=0, style=solid];
m2_503 -> m2_32  [key=2, style=dotted];
m2_503 -> m2_503  [color=darkseagreen4, key=1, label="out object", style=dashed];
m2_505 -> m2_506  [key=0, style=solid];
m2_505 -> m2_507  [color=darkseagreen4, key=1, label="out object", style=dashed];
m2_504 -> m2_507  [key=0, style=solid];
m2_506 -> m2_507  [key=0, style=solid];
m2_507 -> m2_473  [color=blue, key=0, style=bold];
m2_553 -> m2_554  [key=0, style=solid];
m2_554 -> m2_555  [key=0, style=solid];
m2_555 -> m2_553  [color=blue, key=0, style=bold];
m2_535 -> m2_536  [key=0, style=solid];
m2_536 -> m2_537  [key=0, style=solid];
m2_537 -> m2_535  [color=blue, key=0, style=bold];
m2_276 -> m2_277  [key=0, style=solid];
m2_277 -> m2_278  [key=0, style=solid];
m2_277 -> m2_0  [key=2, style=dotted];
m2_278 -> m2_276  [color=blue, key=0, style=bold];
m2_559 -> m2_560  [key=0, style=solid];
m2_560 -> m2_561  [key=0, style=solid];
m2_561 -> m2_559  [color=blue, key=0, style=bold];
m2_519 -> m2_520  [key=0, style=solid];
m2_519 -> m2_66  [color=darkorchid, key=3, label="method methodReturn System.TypeCode System.IConvertible.GetTypeCode", style=bold];
m2_519 -> m2_311  [color=darkorchid, key=3, label="method methodReturn System.TypeCode System.IConvertible.GetTypeCode", style=bold];
m2_519 -> m2_68  [color=darkorchid, key=3, label="method methodReturn System.TypeCode System.IConvertible.GetTypeCode", style=bold];
m2_520 -> m2_521  [key=0, style=solid];
m2_520 -> m2_522  [color=red, key=0, style=solid];
m2_521 -> m2_530  [key=0, style=solid];
m2_522 -> m2_523  [color=red, key=0, style=solid];
m2_522 -> m2_524  [color=red, key=0, style=solid];
m2_523 -> m2_530  [color=red, key=0, style=solid];
m2_524 -> m2_525  [color=red, key=0, style=solid];
m2_524 -> m2_526  [color=red, key=0, style=solid];
m2_525 -> m2_530  [color=red, key=0, style=solid];
m2_526 -> m2_527  [key=0, style=solid];
m2_526 -> m2_529  [color=darkseagreen4, key=1, label=convertable, style=dashed];
m2_527 -> m2_528  [key=0, style=solid];
m2_527 -> m2_529  [key=0, style=solid];
m2_529 -> m2_530  [key=0, style=solid];
m2_529 -> m2_531  [key=2, style=dotted];
m2_528 -> m2_530  [key=0, style=solid];
m2_530 -> m2_519  [color=blue, key=0, style=bold];
m2_4 -> m2_5  [key=0, style=solid];
m2_5 -> m2_4  [color=blue, key=0, style=bold];
m2_143 -> m2_162  [key=0, style=solid];
m2_143 -> m2_163  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_143 -> m2_64  [color=darkorchid, key=3, label="Parameter variable object objB", style=bold];
m2_143 -> m2_66  [color=darkorchid, key=3, label="method methodReturn int CompareFloat", style=bold];
m2_162 -> m2_163  [key=0, style=solid];
m2_162 -> m2_60  [key=2, style=dotted];
m2_162 -> m2_164  [color=darkseagreen4, key=1, label=d1, style=dashed];
m2_162 -> m2_166  [color=darkseagreen4, key=1, label=d1, style=dashed];
m2_163 -> m2_164  [key=0, style=solid];
m2_163 -> m2_60  [key=2, style=dotted];
m2_163 -> m2_166  [color=darkseagreen4, key=1, label=d2, style=dashed];
m2_164 -> m2_165  [key=0, style=solid];
m2_164 -> m2_166  [key=0, style=solid];
m2_164 -> m2_168  [key=2, style=dotted];
m2_166 -> m2_167  [key=0, style=solid];
m2_166 -> m2_63  [key=2, style=dotted];
m2_165 -> m2_167  [key=0, style=solid];
m2_167 -> m2_143  [color=blue, key=0, style=bold];
m2_18 -> m2_19  [key=0, style=solid];
m2_19 -> m2_18  [color=blue, key=0, style=bold];
m2_26 -> m2_27  [key=0, style=solid];
m2_27 -> m2_26  [color=blue, key=0, style=bold];
m2_30 -> m2_31  [key=0, style=solid];
m2_31 -> m2_30  [color=blue, key=0, style=bold];
m2_565 -> m2_566  [key=0, style=solid];
m2_566 -> m2_567  [key=0, style=solid];
m2_567 -> m2_565  [color=blue, key=0, style=bold];
m2_416 -> m2_417  [key=0, style=solid];
m2_416 -> m2_419  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_416 -> m2_37  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m2_416 -> m2_42  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m2_416 -> m2_424  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JValue other", style=bold];
m2_417 -> m2_418  [key=0, style=solid];
m2_417 -> m2_419  [key=0, style=solid];
m2_419 -> m2_420  [key=0, style=solid];
m2_419 -> m2_42  [key=2, style=dotted];
m2_418 -> m2_420  [key=0, style=solid];
m2_420 -> m2_416  [color=blue, key=0, style=bold];
m2_562 -> m2_563  [key=0, style=solid];
m2_563 -> m2_564  [key=0, style=solid];
m2_564 -> m2_562  [color=blue, key=0, style=bold];
m2_20 -> m2_21  [key=0, style=solid];
m2_21 -> m2_20  [color=blue, key=0, style=bold];
m2_550 -> m2_551  [key=0, style=solid];
m2_551 -> m2_552  [key=0, style=solid];
m2_552 -> m2_550  [color=blue, key=0, style=bold];
m2_285 -> m2_286  [key=0, style=solid];
m2_285 -> m2_288  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_285 -> m2_290  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_285 -> m2_291  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType?", style=dashed];
m2_285 -> m2_292  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_285 -> m2_294  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_285 -> m2_296  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_285 -> m2_298  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_285 -> m2_300  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_285 -> m2_302  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_285 -> m2_304  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_285 -> m2_306  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_285 -> m2_308  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_285 -> m2_310  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_285 -> m2_312  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_285 -> m2_314  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_285 -> m2_32  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m2_285 -> m2_287  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType", style=bold];
m2_285 -> m2_316  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType", style=bold];
m2_285 -> m2_293  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType", style=bold];
m2_285 -> m2_299  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType", style=bold];
m2_285 -> m2_301  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType", style=bold];
m2_285 -> m2_305  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType", style=bold];
m2_285 -> m2_307  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType", style=bold];
m2_285 -> m2_309  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType", style=bold];
m2_285 -> m2_311  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType", style=bold];
m2_285 -> m2_313  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType", style=bold];
m2_286 -> m2_287  [key=0, style=solid];
m2_286 -> m2_288  [key=0, style=solid];
m2_288 -> m2_289  [key=0, style=solid];
m2_288 -> m2_290  [key=0, style=solid];
m2_290 -> m2_291  [key=0, style=solid];
m2_290 -> m2_292  [key=0, style=solid];
m2_291 -> m2_315  [key=0, style=solid];
m2_291 -> m2_316  [key=2, style=dotted];
m2_292 -> m2_293  [key=0, style=solid];
m2_292 -> m2_294  [key=0, style=solid];
m2_294 -> m2_295  [key=0, style=solid];
m2_294 -> m2_296  [key=0, style=solid];
m2_296 -> m2_297  [key=0, style=solid];
m2_296 -> m2_298  [key=0, style=solid];
m2_298 -> m2_299  [key=0, style=solid];
m2_298 -> m2_300  [key=0, style=solid];
m2_300 -> m2_301  [key=0, style=solid];
m2_300 -> m2_302  [key=0, style=solid];
m2_302 -> m2_303  [key=0, style=solid];
m2_302 -> m2_304  [key=0, style=solid];
m2_304 -> m2_305  [key=0, style=solid];
m2_304 -> m2_306  [key=0, style=solid];
m2_306 -> m2_307  [key=0, style=solid];
m2_306 -> m2_308  [key=0, style=solid];
m2_308 -> m2_309  [key=0, style=solid];
m2_308 -> m2_310  [key=0, style=solid];
m2_310 -> m2_311  [key=0, style=solid];
m2_310 -> m2_312  [key=0, style=solid];
m2_312 -> m2_313  [key=0, style=solid];
m2_312 -> m2_314  [key=0, style=solid];
m2_314 -> m2_315  [key=0, style=solid];
m2_314 -> m2_154  [key=2, style=dotted];
m2_314 -> m2_317  [key=2, style=dotted];
m2_314 -> m2_160  [key=2, style=dotted];
m2_287 -> m2_315  [key=0, style=solid];
m2_289 -> m2_315  [key=0, style=solid];
m2_293 -> m2_315  [key=0, style=solid];
m2_295 -> m2_315  [key=0, style=solid];
m2_297 -> m2_315  [key=0, style=solid];
m2_299 -> m2_315  [key=0, style=solid];
m2_301 -> m2_315  [key=0, style=solid];
m2_303 -> m2_315  [key=0, style=solid];
m2_305 -> m2_315  [key=0, style=solid];
m2_307 -> m2_315  [key=0, style=solid];
m2_309 -> m2_315  [key=0, style=solid];
m2_311 -> m2_315  [key=0, style=solid];
m2_313 -> m2_315  [key=0, style=solid];
m2_315 -> m2_285  [color=blue, key=0, style=bold];
m2_64 -> m2_65  [key=0, style=solid];
m2_64 -> m2_67  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_69  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_71  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType", style=dashed];
m2_64 -> m2_73  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_74  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_75  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_76  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_77  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_78  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_79  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_80  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_81  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_83  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_84  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_85  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_86  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_87  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_91  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_92  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_95  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_96  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_99  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_100  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_102  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_103  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_104  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_106  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_108  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_109  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_110  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_113  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_115  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_116  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_123  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_125  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_126  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_129  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_131  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_132  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_135  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_137  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_138  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_140  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType", style=dashed];
m2_64 -> m2_66  [color=darkorchid, key=3, label="method methodReturn int Compare", style=bold];
m2_64 -> m2_68  [color=darkorchid, key=3, label="method methodReturn int Compare", style=bold];
m2_64 -> m2_70  [color=darkorchid, key=3, label="method methodReturn int Compare", style=bold];
m2_64 -> m2_43  [color=darkorchid, key=3, label="method methodReturn int Compare", style=bold];
m2_64 -> m2_143  [color=darkorchid, key=3, label="method methodReturn int Compare", style=bold];
m2_64 -> m2_474  [color=darkorchid, key=3, label="Parameter variable object objB", style=bold];
m2_64 -> m2_511  [color=darkorchid, key=3, label="Parameter variable object objB", style=bold];
m2_65 -> m2_66  [key=0, style=solid];
m2_65 -> m2_67  [key=0, style=solid];
m2_67 -> m2_68  [key=0, style=solid];
m2_67 -> m2_69  [key=0, style=solid];
m2_69 -> m2_70  [key=0, style=solid];
m2_69 -> m2_71  [key=0, style=solid];
m2_71 -> m2_72  [key=0, style=solid];
m2_71 -> m2_82  [key=0, style=solid];
m2_71 -> m2_88  [key=0, style=solid];
m2_71 -> m2_94  [key=0, style=solid];
m2_71 -> m2_98  [key=0, style=solid];
m2_71 -> m2_112  [key=0, style=solid];
m2_71 -> m2_122  [key=0, style=solid];
m2_71 -> m2_128  [key=0, style=solid];
m2_71 -> m2_134  [key=0, style=solid];
m2_71 -> m2_140  [key=0, style=solid];
m2_73 -> m2_74  [key=0, style=solid];
m2_73 -> m2_75  [key=0, style=solid];
m2_74 -> m2_141  [key=0, style=solid];
m2_74 -> m2_43  [key=2, style=dotted];
m2_75 -> m2_76  [key=0, style=solid];
m2_75 -> m2_77  [key=0, style=solid];
m2_76 -> m2_141  [key=0, style=solid];
m2_76 -> m2_43  [key=2, style=dotted];
m2_77 -> m2_78  [key=0, style=solid];
m2_77 -> m2_79  [key=0, style=solid];
m2_78 -> m2_141  [key=0, style=solid];
m2_78 -> m2_142  [key=2, style=dotted];
m2_78 -> m2_59  [key=2, style=dotted];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_81  [key=0, style=solid];
m2_80 -> m2_141  [key=0, style=solid];
m2_80 -> m2_143  [key=2, style=dotted];
m2_81 -> m2_141  [key=0, style=solid];
m2_81 -> m2_144  [key=2, style=dotted];
m2_81 -> m2_145  [key=2, style=dotted];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_85  [key=0, style=solid];
m2_84 -> m2_141  [key=0, style=solid];
m2_84 -> m2_43  [key=2, style=dotted];
m2_85 -> m2_86  [key=0, style=solid];
m2_85 -> m2_87  [key=0, style=solid];
m2_86 -> m2_141  [key=0, style=solid];
m2_86 -> m2_43  [key=2, style=dotted];
m2_87 -> m2_141  [key=0, style=solid];
m2_87 -> m2_143  [key=2, style=dotted];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_146  [key=2, style=dotted];
m2_91 -> m2_93  [color=darkseagreen4, key=1, label=s1, style=dashed];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_146  [key=2, style=dotted];
m2_95 -> m2_96  [key=0, style=solid];
m2_95 -> m2_148  [key=2, style=dotted];
m2_95 -> m2_97  [color=darkseagreen4, key=1, label=b1, style=dashed];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_148  [key=2, style=dotted];
m2_99 -> m2_100  [key=0, style=solid];
m2_99 -> m2_106  [key=0, style=solid];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_105  [color=darkseagreen4, key=1, label=date1, style=dashed];
m2_102 -> m2_103  [key=0, style=solid];
m2_102 -> m2_104  [key=0, style=solid];
m2_103 -> m2_105  [key=0, style=solid];
m2_104 -> m2_105  [key=0, style=solid];
m2_104 -> m2_150  [key=2, style=dotted];
m2_106 -> m2_107  [key=0, style=solid];
m2_106 -> m2_111  [color=darkseagreen4, key=1, label=date1, style=dashed];
m2_108 -> m2_109  [key=0, style=solid];
m2_108 -> m2_110  [key=0, style=solid];
m2_109 -> m2_111  [key=0, style=solid];
m2_110 -> m2_111  [key=0, style=solid];
m2_110 -> m2_152  [key=2, style=dotted];
m2_110 -> m2_150  [key=2, style=dotted];
m2_113 -> m2_114  [key=0, style=solid];
m2_113 -> m2_115  [key=0, style=solid];
m2_115 -> m2_116  [key=0, style=solid];
m2_115 -> m2_117  [color=darkseagreen4, key=1, label=bytes1, style=dashed];
m2_115 -> m2_121  [color=darkseagreen4, key=1, label=bytes1, style=dashed];
m2_116 -> m2_117  [key=0, style=solid];
m2_116 -> m2_119  [color=darkseagreen4, key=1, label=bytes2, style=dashed];
m2_116 -> m2_121  [color=darkseagreen4, key=1, label=bytes2, style=dashed];
m2_123 -> m2_124  [key=0, style=solid];
m2_123 -> m2_125  [key=0, style=solid];
m2_125 -> m2_126  [key=0, style=solid];
m2_125 -> m2_127  [color=darkseagreen4, key=1, label=guid1, style=dashed];
m2_126 -> m2_127  [key=0, style=solid];
m2_129 -> m2_130  [key=0, style=solid];
m2_129 -> m2_131  [key=0, style=solid];
m2_131 -> m2_132  [key=0, style=solid];
m2_131 -> m2_133  [color=darkseagreen4, key=1, label=uri1, style=dashed];
m2_132 -> m2_133  [key=0, style=solid];
m2_135 -> m2_136  [key=0, style=solid];
m2_135 -> m2_137  [key=0, style=solid];
m2_137 -> m2_138  [key=0, style=solid];
m2_137 -> m2_139  [color=darkseagreen4, key=1, label=ts1, style=dashed];
m2_138 -> m2_139  [key=0, style=solid];
m2_140 -> m2_141  [key=0, style=solid];
m2_140 -> m2_160  [key=2, style=dotted];
m2_140 -> m2_161  [key=2, style=dotted];
m2_66 -> m2_141  [key=0, style=solid];
m2_68 -> m2_141  [key=0, style=solid];
m2_70 -> m2_141  [key=0, style=solid];
m2_72 -> m2_73  [key=0, style=solid];
m2_82 -> m2_83  [key=0, style=solid];
m2_88 -> m2_89  [key=0, style=solid];
m2_94 -> m2_95  [key=0, style=solid];
m2_98 -> m2_99  [key=0, style=solid];
m2_112 -> m2_113  [key=0, style=solid];
m2_122 -> m2_123  [key=0, style=solid];
m2_128 -> m2_129  [key=0, style=solid];
m2_134 -> m2_135  [key=0, style=solid];
m2_89 -> m2_90  [key=0, style=solid];
m2_90 -> m2_91  [key=0, style=solid];
m2_93 -> m2_141  [key=0, style=solid];
m2_93 -> m2_147  [key=2, style=dotted];
m2_97 -> m2_141  [key=0, style=solid];
m2_97 -> m2_149  [key=2, style=dotted];
m2_101 -> m2_102  [key=0, style=solid];
m2_105 -> m2_141  [key=0, style=solid];
m2_105 -> m2_151  [key=2, style=dotted];
m2_107 -> m2_108  [key=0, style=solid];
m2_111 -> m2_141  [key=0, style=solid];
m2_111 -> m2_153  [key=2, style=dotted];
m2_111 -> m2_111  [color=darkseagreen4, key=1, label=date1, style=dashed];
m2_114 -> m2_141  [key=0, style=solid];
m2_114 -> m2_154  [key=2, style=dotted];
m2_117 -> m2_118  [key=0, style=solid];
m2_117 -> m2_119  [key=0, style=solid];
m2_121 -> m2_141  [key=0, style=solid];
m2_121 -> m2_155  [key=2, style=dotted];
m2_119 -> m2_120  [key=0, style=solid];
m2_119 -> m2_121  [key=0, style=solid];
m2_118 -> m2_141  [key=0, style=solid];
m2_120 -> m2_141  [key=0, style=solid];
m2_124 -> m2_141  [key=0, style=solid];
m2_124 -> m2_154  [key=2, style=dotted];
m2_127 -> m2_141  [key=0, style=solid];
m2_127 -> m2_156  [key=2, style=dotted];
m2_127 -> m2_127  [color=darkseagreen4, key=1, label=guid1, style=dashed];
m2_130 -> m2_141  [key=0, style=solid];
m2_130 -> m2_154  [key=2, style=dotted];
m2_133 -> m2_141  [key=0, style=solid];
m2_133 -> m2_157  [key=2, style=dotted];
m2_133 -> m2_158  [key=2, style=dotted];
m2_136 -> m2_141  [key=0, style=solid];
m2_136 -> m2_154  [key=2, style=dotted];
m2_139 -> m2_141  [key=0, style=solid];
m2_139 -> m2_159  [key=2, style=dotted];
m2_139 -> m2_139  [color=darkseagreen4, key=1, label=ts1, style=dashed];
m2_141 -> m2_64  [color=blue, key=0, style=bold];
m2_443 -> m2_447  [key=0, style=solid];
m2_443 -> m2_451  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_443 -> m2_440  [color=darkorchid, key=3, label="Parameter variable string format", style=bold];
m2_443 -> m2_444  [color=darkorchid, key=3, label="Parameter variable System.IFormatProvider formatProvider", style=bold];
m2_447 -> m2_448  [key=0, style=solid];
m2_447 -> m2_449  [key=0, style=solid];
m2_451 -> m2_453  [key=0, style=solid];
m2_451 -> m2_454  [key=2, style=dotted];
m2_448 -> m2_453  [key=0, style=solid];
m2_449 -> m2_450  [key=0, style=solid];
m2_449 -> m2_451  [color=darkseagreen4, key=1, label=formattable, style=dashed];
m2_450 -> m2_451  [key=0, style=solid];
m2_450 -> m2_452  [key=0, style=solid];
m2_452 -> m2_453  [key=0, style=solid];
m2_452 -> d213  [key=2, style=dotted];
m2_453 -> m2_443  [color=blue, key=0, style=bold];
m2_568 -> m2_569  [key=0, style=solid];
m2_569 -> m2_570  [key=0, style=solid];
m2_570 -> m2_568  [color=blue, key=0, style=bold];
m2_12 -> m2_13  [key=0, style=solid];
m2_13 -> m2_12  [color=blue, key=0, style=bold];
m2_316 -> m2_318  [key=0, style=solid];
m2_316 -> m2_320  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType?", style=dashed];
m2_316 -> m2_324  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType?", style=dashed];
m2_316 -> m2_285  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JTokenType? current", style=bold];
m2_316 -> m2_319  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetStringValueType", style=bold];
m2_318 -> m2_319  [key=0, style=solid];
m2_318 -> m2_320  [key=0, style=solid];
m2_320 -> m2_321  [key=0, style=solid];
m2_320 -> m2_325  [key=0, style=solid];
m2_324 -> m2_326  [key=0, style=solid];
m2_319 -> m2_326  [key=0, style=solid];
m2_321 -> m2_322  [key=0, style=solid];
m2_325 -> m2_326  [key=0, style=solid];
m2_322 -> m2_323  [key=0, style=solid];
m2_323 -> m2_324  [key=0, style=solid];
m2_326 -> m2_316  [color=blue, key=0, style=bold];
m2_430 -> m2_431  [key=0, style=solid];
m2_430 -> m2_66  [color=darkorchid, key=3, label="method methodReturn int GetHashCode", style=bold];
m2_431 -> m2_432  [key=0, style=solid];
m2_431 -> m2_433  [key=0, style=solid];
m2_432 -> m2_434  [key=0, style=solid];
m2_433 -> m2_434  [key=0, style=solid];
m2_433 -> m2_412  [key=2, style=dotted];
m2_434 -> m2_430  [color=blue, key=0, style=bold];
m2_42 -> m2_414  [key=0, style=solid];
m2_42 -> m2_35  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JValue v2", style=bold];
m2_42 -> m2_416  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JValue v2", style=bold];
m2_414 -> m2_415  [key=0, style=solid];
m2_414 -> m2_64  [key=2, style=dotted];
m2_415 -> m2_42  [color=blue, key=0, style=bold];
m2_455 -> m2_456  [key=0, style=solid];
m2_456 -> m2_457  [key=0, style=solid];
m2_456 -> m2_458  [key=2, style=dotted];
m2_456 -> m2_459  [key=2, style=dotted];
m2_457 -> m2_455  [color=blue, key=0, style=bold];
m2_16 -> m2_17  [key=0, style=solid];
m2_17 -> m2_16  [color=blue, key=0, style=bold];
m2_571 -> m2_572  [key=0, style=solid];
m2_572 -> m2_573  [key=0, style=solid];
m2_573 -> m2_571  [color=blue, key=0, style=bold];
m2_6 -> m2_7  [key=0, style=solid];
m2_7 -> m2_6  [color=blue, key=0, style=bold];
m2_547 -> m2_548  [key=0, style=solid];
m2_548 -> m2_549  [key=0, style=solid];
m2_549 -> m2_547  [color=blue, key=0, style=bold];
m2_532 -> m2_533  [key=0, style=solid];
m2_533 -> m2_534  [key=0, style=solid];
m2_534 -> m2_532  [color=blue, key=0, style=bold];
m2_32 -> m2_33  [key=0, style=solid];
m2_33 -> m2_32  [color=blue, key=0, style=bold];
m2_169 -> m2_170  [key=0, style=solid];
m2_169 -> m2_171  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m2_169 -> m2_172  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_169 -> m2_174  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_169 -> m2_175  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_169 -> m2_178  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_169 -> m2_179  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_169 -> m2_180  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m2_169 -> m2_197  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_169 -> m2_198  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_169 -> m2_201  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_169 -> m2_202  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_169 -> m2_203  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m2_169 -> m2_220  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_169 -> m2_221  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_169 -> m2_224  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_169 -> m2_225  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_169 -> m2_226  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m2_169 -> m2_243  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_169 -> m2_244  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_169 -> m2_247  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_169 -> m2_248  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_169 -> m2_249  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m2_169 -> m2_39  [color=darkorchid, key=3, label="method methodReturn bool Operation", style=bold];
m2_169 -> m2_37  [color=darkorchid, key=3, label="method methodReturn bool Operation", style=bold];
m2_169 -> m2_474  [color=darkorchid, key=3, label="Parameter variable object objB", style=bold];
m2_169 -> m2_473  [color=darkorchid, key=3, label="Parameter variable object result", style=bold];
m2_170 -> m2_171  [key=0, style=solid];
m2_170 -> m2_174  [key=0, style=solid];
m2_171 -> m2_172  [key=0, style=solid];
m2_171 -> m2_174  [key=0, style=solid];
m2_172 -> m2_173  [key=0, style=solid];
m2_172 -> d213  [key=2, style=dotted];
m2_174 -> m2_175  [key=0, style=solid];
m2_174 -> m2_197  [key=0, style=solid];
m2_175 -> m2_176  [key=0, style=solid];
m2_175 -> m2_178  [key=0, style=solid];
m2_178 -> m2_179  [key=0, style=solid];
m2_178 -> m2_55  [key=2, style=dotted];
m2_178 -> m2_183  [color=darkseagreen4, key=1, label=i1, style=dashed];
m2_178 -> m2_187  [color=darkseagreen4, key=1, label=i1, style=dashed];
m2_178 -> m2_191  [color=darkseagreen4, key=1, label=i1, style=dashed];
m2_178 -> m2_195  [color=darkseagreen4, key=1, label=i1, style=dashed];
m2_179 -> m2_180  [key=0, style=solid];
m2_179 -> m2_55  [key=2, style=dotted];
m2_179 -> m2_183  [color=darkseagreen4, key=1, label=i2, style=dashed];
m2_179 -> m2_187  [color=darkseagreen4, key=1, label=i2, style=dashed];
m2_179 -> m2_191  [color=darkseagreen4, key=1, label=i2, style=dashed];
m2_179 -> m2_195  [color=darkseagreen4, key=1, label=i2, style=dashed];
m2_180 -> m2_181  [key=0, style=solid];
m2_180 -> m2_185  [key=0, style=solid];
m2_180 -> m2_189  [key=0, style=solid];
m2_180 -> m2_193  [key=0, style=solid];
m2_197 -> m2_198  [key=0, style=solid];
m2_197 -> m2_220  [key=0, style=solid];
m2_198 -> m2_199  [key=0, style=solid];
m2_198 -> m2_201  [key=0, style=solid];
m2_201 -> m2_202  [key=0, style=solid];
m2_201 -> m2_142  [key=2, style=dotted];
m2_201 -> m2_206  [color=darkseagreen4, key=1, label=d1, style=dashed];
m2_201 -> m2_210  [color=darkseagreen4, key=1, label=d1, style=dashed];
m2_201 -> m2_214  [color=darkseagreen4, key=1, label=d1, style=dashed];
m2_201 -> m2_218  [color=darkseagreen4, key=1, label=d1, style=dashed];
m2_202 -> m2_203  [key=0, style=solid];
m2_202 -> m2_142  [key=2, style=dotted];
m2_202 -> m2_206  [color=darkseagreen4, key=1, label=d2, style=dashed];
m2_202 -> m2_210  [color=darkseagreen4, key=1, label=d2, style=dashed];
m2_202 -> m2_214  [color=darkseagreen4, key=1, label=d2, style=dashed];
m2_202 -> m2_218  [color=darkseagreen4, key=1, label=d2, style=dashed];
m2_203 -> m2_204  [key=0, style=solid];
m2_203 -> m2_208  [key=0, style=solid];
m2_203 -> m2_212  [key=0, style=solid];
m2_203 -> m2_216  [key=0, style=solid];
m2_220 -> m2_221  [key=0, style=solid];
m2_220 -> m2_243  [key=0, style=solid];
m2_221 -> m2_222  [key=0, style=solid];
m2_221 -> m2_224  [key=0, style=solid];
m2_224 -> m2_225  [key=0, style=solid];
m2_224 -> m2_60  [key=2, style=dotted];
m2_224 -> m2_229  [color=darkseagreen4, key=1, label=d1, style=dashed];
m2_224 -> m2_233  [color=darkseagreen4, key=1, label=d1, style=dashed];
m2_224 -> m2_237  [color=darkseagreen4, key=1, label=d1, style=dashed];
m2_224 -> m2_241  [color=darkseagreen4, key=1, label=d1, style=dashed];
m2_225 -> m2_226  [key=0, style=solid];
m2_225 -> m2_60  [key=2, style=dotted];
m2_225 -> m2_229  [color=darkseagreen4, key=1, label=d2, style=dashed];
m2_225 -> m2_233  [color=darkseagreen4, key=1, label=d2, style=dashed];
m2_225 -> m2_237  [color=darkseagreen4, key=1, label=d2, style=dashed];
m2_225 -> m2_241  [color=darkseagreen4, key=1, label=d2, style=dashed];
m2_226 -> m2_227  [key=0, style=solid];
m2_226 -> m2_231  [key=0, style=solid];
m2_226 -> m2_235  [key=0, style=solid];
m2_226 -> m2_239  [key=0, style=solid];
m2_243 -> m2_244  [key=0, style=solid];
m2_243 -> m2_266  [key=0, style=solid];
m2_244 -> m2_245  [key=0, style=solid];
m2_244 -> m2_247  [key=0, style=solid];
m2_247 -> m2_248  [key=0, style=solid];
m2_247 -> m2_144  [key=2, style=dotted];
m2_247 -> m2_252  [color=darkseagreen4, key=1, label=l1, style=dashed];
m2_247 -> m2_256  [color=darkseagreen4, key=1, label=l1, style=dashed];
m2_247 -> m2_260  [color=darkseagreen4, key=1, label=l1, style=dashed];
m2_247 -> m2_264  [color=darkseagreen4, key=1, label=l1, style=dashed];
m2_248 -> m2_249  [key=0, style=solid];
m2_248 -> m2_144  [key=2, style=dotted];
m2_248 -> m2_252  [color=darkseagreen4, key=1, label=l2, style=dashed];
m2_248 -> m2_256  [color=darkseagreen4, key=1, label=l2, style=dashed];
m2_248 -> m2_260  [color=darkseagreen4, key=1, label=l2, style=dashed];
m2_248 -> m2_264  [color=darkseagreen4, key=1, label=l2, style=dashed];
m2_249 -> m2_250  [key=0, style=solid];
m2_249 -> m2_254  [key=0, style=solid];
m2_249 -> m2_258  [key=0, style=solid];
m2_249 -> m2_262  [key=0, style=solid];
m2_173 -> m2_268  [key=0, style=solid];
m2_176 -> m2_177  [key=0, style=solid];
m2_177 -> m2_268  [key=0, style=solid];
m2_183 -> m2_184  [key=0, style=solid];
m2_187 -> m2_188  [key=0, style=solid];
m2_191 -> m2_192  [key=0, style=solid];
m2_195 -> m2_196  [key=0, style=solid];
m2_181 -> m2_182  [key=0, style=solid];
m2_185 -> m2_186  [key=0, style=solid];
m2_189 -> m2_190  [key=0, style=solid];
m2_193 -> m2_194  [key=0, style=solid];
m2_182 -> m2_183  [key=0, style=solid];
m2_184 -> m2_268  [key=0, style=solid];
m2_186 -> m2_187  [key=0, style=solid];
m2_188 -> m2_268  [key=0, style=solid];
m2_190 -> m2_191  [key=0, style=solid];
m2_192 -> m2_268  [key=0, style=solid];
m2_194 -> m2_195  [key=0, style=solid];
m2_196 -> m2_268  [key=0, style=solid];
m2_199 -> m2_200  [key=0, style=solid];
m2_200 -> m2_268  [key=0, style=solid];
m2_206 -> m2_207  [key=0, style=solid];
m2_210 -> m2_211  [key=0, style=solid];
m2_214 -> m2_215  [key=0, style=solid];
m2_218 -> m2_219  [key=0, style=solid];
m2_204 -> m2_205  [key=0, style=solid];
m2_208 -> m2_209  [key=0, style=solid];
m2_212 -> m2_213  [key=0, style=solid];
m2_216 -> m2_217  [key=0, style=solid];
m2_205 -> m2_206  [key=0, style=solid];
m2_207 -> m2_268  [key=0, style=solid];
m2_209 -> m2_210  [key=0, style=solid];
m2_211 -> m2_268  [key=0, style=solid];
m2_213 -> m2_214  [key=0, style=solid];
m2_215 -> m2_268  [key=0, style=solid];
m2_217 -> m2_218  [key=0, style=solid];
m2_219 -> m2_268  [key=0, style=solid];
m2_222 -> m2_223  [key=0, style=solid];
m2_223 -> m2_268  [key=0, style=solid];
m2_229 -> m2_230  [key=0, style=solid];
m2_233 -> m2_234  [key=0, style=solid];
m2_237 -> m2_238  [key=0, style=solid];
m2_241 -> m2_242  [key=0, style=solid];
m2_227 -> m2_228  [key=0, style=solid];
m2_231 -> m2_232  [key=0, style=solid];
m2_235 -> m2_236  [key=0, style=solid];
m2_239 -> m2_240  [key=0, style=solid];
m2_228 -> m2_229  [key=0, style=solid];
m2_230 -> m2_268  [key=0, style=solid];
m2_232 -> m2_233  [key=0, style=solid];
m2_234 -> m2_268  [key=0, style=solid];
m2_236 -> m2_237  [key=0, style=solid];
m2_238 -> m2_268  [key=0, style=solid];
m2_240 -> m2_241  [key=0, style=solid];
m2_242 -> m2_268  [key=0, style=solid];
m2_266 -> m2_267  [key=0, style=solid];
m2_266 -> m2_268  [color=darkseagreen4, key=1, label="out object", style=dashed];
m2_245 -> m2_246  [key=0, style=solid];
m2_246 -> m2_268  [key=0, style=solid];
m2_252 -> m2_253  [key=0, style=solid];
m2_256 -> m2_257  [key=0, style=solid];
m2_260 -> m2_261  [key=0, style=solid];
m2_264 -> m2_265  [key=0, style=solid];
m2_250 -> m2_251  [key=0, style=solid];
m2_254 -> m2_255  [key=0, style=solid];
m2_258 -> m2_259  [key=0, style=solid];
m2_262 -> m2_263  [key=0, style=solid];
m2_251 -> m2_252  [key=0, style=solid];
m2_253 -> m2_268  [key=0, style=solid];
m2_255 -> m2_256  [key=0, style=solid];
m2_257 -> m2_268  [key=0, style=solid];
m2_259 -> m2_260  [key=0, style=solid];
m2_261 -> m2_268  [key=0, style=solid];
m2_263 -> m2_264  [key=0, style=solid];
m2_265 -> m2_268  [key=0, style=solid];
m2_267 -> m2_268  [key=0, style=solid];
m2_268 -> m2_169  [color=blue, key=0, style=bold];
m2_270 -> m2_271  [key=0, style=solid];
m2_271 -> m2_272  [key=0, style=solid];
m2_271 -> m2_4  [key=2, style=dotted];
m2_272 -> m2_270  [color=blue, key=0, style=bold];
m2_460 -> m2_461  [key=0, style=solid];
m2_460 -> m2_462  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_460 -> m2_464  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_460 -> m2_467  [color=darkseagreen4, key=1, label="System.Dynamic.ConvertBinder", style=dashed];
m2_460 -> m2_468  [color=darkseagreen4, key=1, label="System.Dynamic.ConvertBinder", style=dashed];
m2_460 -> m2_460  [color=darkorchid, key=3, label="Parameter variable object result", style=bold];
m2_460 -> m2_39  [color=darkorchid, key=3, label="method methodReturn bool TryConvert", style=bold];
m2_461 -> m2_462  [key=0, style=solid];
m2_461 -> m2_464  [key=0, style=solid];
m2_462 -> m2_463  [key=0, style=solid];
m2_464 -> m2_465  [key=0, style=solid];
m2_464 -> m2_468  [color=darkseagreen4, key=1, label=value, style=dashed];
m2_467 -> m2_470  [key=0, style=solid];
m2_467 -> m2_471  [key=2, style=dotted];
m2_468 -> m2_469  [key=0, style=solid];
m2_468 -> m2_472  [key=2, style=dotted];
m2_468 -> m2_470  [color=darkseagreen4, key=1, label="out object", style=dashed];
m2_463 -> m2_470  [key=0, style=solid];
m2_465 -> m2_466  [key=0, style=solid];
m2_465 -> m2_468  [key=0, style=solid];
m2_466 -> m2_467  [key=0, style=solid];
m2_469 -> m2_470  [key=0, style=solid];
m2_470 -> m2_460  [color=blue, key=0, style=bold];
m2_24 -> m2_25  [key=0, style=solid];
m2_25 -> m2_24  [color=blue, key=0, style=bold];
m2_538 -> m2_539  [key=0, style=solid];
m2_539 -> m2_540  [key=0, style=solid];
m2_540 -> m2_538  [color=blue, key=0, style=bold];
m2_28 -> m2_29  [key=0, style=solid];
m2_29 -> m2_28  [color=blue, key=0, style=bold];
m2_440 -> m2_441  [key=0, style=solid];
m2_440 -> m2_443  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m2_441 -> m2_442  [key=0, style=solid];
m2_441 -> m2_443  [key=2, style=dotted];
m2_442 -> m2_440  [color=blue, key=0, style=bold];
m2_556 -> m2_557  [key=0, style=solid];
m2_557 -> m2_558  [key=0, style=solid];
m2_558 -> m2_556  [color=blue, key=0, style=bold];
m2_327 -> m2_328  [key=0, style=solid];
m2_327 -> m2_329  [color=darkseagreen4, key=1, label="params Newtonsoft.Json.JsonConverter[]", style=dashed];
m2_327 -> m2_331  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_327 -> m2_335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_327 -> m2_338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_327 -> m2_341  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_327 -> m2_344  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_327 -> m2_348  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_327 -> m2_350  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_327 -> m2_352  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_327 -> m2_354  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_327 -> m2_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_327 -> m2_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_327 -> m2_361  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_327 -> m2_363  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_327 -> m2_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_327 -> m2_367  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_327 -> m2_370  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_327 -> m2_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_327 -> m2_375  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_327 -> m2_378  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_327 -> m2_382  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_327 -> m2_385  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_328 -> m2_329  [key=0, style=solid];
m2_328 -> m2_333  [key=0, style=solid];
m2_329 -> m2_330  [key=0, style=solid];
m2_329 -> m2_317  [key=2, style=dotted];
m2_329 -> m2_389  [key=2, style=dotted];
m2_329 -> m2_331  [color=darkseagreen4, key=1, label=matchingConverter, style=dashed];
m2_331 -> m2_332  [key=0, style=solid];
m2_331 -> m2_390  [key=2, style=dotted];
m2_331 -> m2_391  [key=2, style=dotted];
m2_335 -> m2_336  [key=0, style=solid];
m2_335 -> d213  [key=2, style=dotted];
m2_335 -> m2_392  [key=2, style=dotted];
m2_338 -> m2_339  [key=0, style=solid];
m2_338 -> d213  [key=2, style=dotted];
m2_338 -> m2_393  [key=2, style=dotted];
m2_341 -> m2_342  [key=0, style=solid];
m2_341 -> m2_394  [key=2, style=dotted];
m2_344 -> m2_345  [key=0, style=solid];
m2_344 -> m2_395  [key=2, style=dotted];
m2_348 -> m2_356  [key=0, style=solid];
m2_348 -> m2_396  [key=2, style=dotted];
m2_350 -> m2_356  [key=0, style=solid];
m2_350 -> m2_397  [key=2, style=dotted];
m2_352 -> m2_356  [key=0, style=solid];
m2_352 -> m2_398  [key=2, style=dotted];
m2_354 -> m2_356  [key=0, style=solid];
m2_354 -> m2_399  [key=2, style=dotted];
m2_355 -> m2_356  [key=0, style=solid];
m2_355 -> m2_144  [key=2, style=dotted];
m2_355 -> m2_397  [key=2, style=dotted];
m2_359 -> m2_365  [key=0, style=solid];
m2_359 -> m2_400  [key=2, style=dotted];
m2_361 -> m2_365  [key=0, style=solid];
m2_361 -> m2_401  [key=2, style=dotted];
m2_363 -> m2_365  [key=0, style=solid];
m2_363 -> m2_402  [key=2, style=dotted];
m2_364 -> m2_365  [key=0, style=solid];
m2_364 -> m2_60  [key=2, style=dotted];
m2_364 -> m2_401  [key=2, style=dotted];
m2_367 -> m2_368  [key=0, style=solid];
m2_367 -> d213  [key=2, style=dotted];
m2_367 -> m2_403  [key=2, style=dotted];
m2_370 -> m2_371  [key=0, style=solid];
m2_370 -> m2_148  [key=2, style=dotted];
m2_370 -> m2_404  [key=2, style=dotted];
m2_374 -> m2_376  [key=0, style=solid];
m2_374 -> m2_405  [key=2, style=dotted];
m2_375 -> m2_376  [key=0, style=solid];
m2_375 -> m2_150  [key=2, style=dotted];
m2_375 -> m2_406  [key=2, style=dotted];
m2_378 -> m2_379  [key=0, style=solid];
m2_378 -> m2_407  [key=2, style=dotted];
m2_382 -> m2_383  [key=0, style=solid];
m2_382 -> d213  [key=2, style=dotted];
m2_382 -> m2_403  [key=2, style=dotted];
m2_385 -> m2_386  [key=0, style=solid];
m2_385 -> m2_403  [key=2, style=dotted];
m2_333 -> m2_334  [key=0, style=solid];
m2_333 -> m2_337  [key=0, style=solid];
m2_333 -> m2_340  [key=0, style=solid];
m2_333 -> m2_343  [key=0, style=solid];
m2_333 -> m2_346  [key=0, style=solid];
m2_333 -> m2_357  [key=0, style=solid];
m2_333 -> m2_366  [key=0, style=solid];
m2_333 -> m2_369  [key=0, style=solid];
m2_333 -> m2_372  [key=0, style=solid];
m2_333 -> m2_377  [key=0, style=solid];
m2_333 -> m2_380  [key=0, style=solid];
m2_333 -> m2_384  [key=0, style=solid];
m2_330 -> m2_331  [key=0, style=solid];
m2_330 -> m2_333  [key=0, style=solid];
m2_332 -> m2_387  [key=0, style=solid];
m2_334 -> m2_335  [key=0, style=solid];
m2_337 -> m2_338  [key=0, style=solid];
m2_340 -> m2_341  [key=0, style=solid];
m2_343 -> m2_344  [key=0, style=solid];
m2_346 -> m2_347  [key=0, style=solid];
m2_357 -> m2_358  [key=0, style=solid];
m2_366 -> m2_367  [key=0, style=solid];
m2_369 -> m2_370  [key=0, style=solid];
m2_372 -> m2_373  [key=0, style=solid];
m2_377 -> m2_378  [key=0, style=solid];
m2_380 -> m2_381  [key=0, style=solid];
m2_384 -> m2_385  [key=0, style=solid];
m2_336 -> m2_387  [key=0, style=solid];
m2_339 -> m2_387  [key=0, style=solid];
m2_342 -> m2_387  [key=0, style=solid];
m2_345 -> m2_387  [key=0, style=solid];
m2_347 -> m2_348  [key=0, style=solid];
m2_347 -> m2_349  [key=0, style=solid];
m2_349 -> m2_350  [key=0, style=solid];
m2_349 -> m2_351  [key=0, style=solid];
m2_351 -> m2_352  [key=0, style=solid];
m2_351 -> m2_353  [key=0, style=solid];
m2_353 -> m2_354  [key=0, style=solid];
m2_353 -> m2_355  [key=0, style=solid];
m2_356 -> m2_387  [key=0, style=solid];
m2_358 -> m2_359  [key=0, style=solid];
m2_358 -> m2_360  [key=0, style=solid];
m2_360 -> m2_361  [key=0, style=solid];
m2_360 -> m2_362  [key=0, style=solid];
m2_362 -> m2_363  [key=0, style=solid];
m2_362 -> m2_364  [key=0, style=solid];
m2_365 -> m2_387  [key=0, style=solid];
m2_368 -> m2_387  [key=0, style=solid];
m2_371 -> m2_387  [key=0, style=solid];
m2_373 -> m2_374  [key=0, style=solid];
m2_373 -> m2_375  [key=0, style=solid];
m2_376 -> m2_387  [key=0, style=solid];
m2_379 -> m2_387  [key=0, style=solid];
m2_381 -> m2_382  [key=0, style=solid];
m2_383 -> m2_387  [key=0, style=solid];
m2_386 -> m2_387  [key=0, style=solid];
m2_388 -> m2_387  [key=0, style=solid];
m2_388 -> m2_161  [key=2, style=dotted];
m2_387 -> m2_327  [color=blue, key=0, style=bold];
m2_22 -> m2_23  [key=0, style=solid];
m2_23 -> m2_22  [color=blue, key=0, style=bold];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_47  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_43 -> m2_48  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_43 -> m2_50  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_43 -> m2_51  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_43 -> m2_64  [color=darkorchid, key=3, label="Parameter variable object i2", style=bold];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_55  [key=2, style=dotted];
m2_44 -> m2_56  [key=2, style=dotted];
m2_44 -> m2_46  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_44 -> m2_53  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_50  [key=0, style=solid];
m2_48 -> m2_49  [key=0, style=solid];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_53  [key=0, style=solid];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_60  [key=2, style=dotted];
m2_45 -> m2_46  [key=0, style=solid];
m2_45 -> m2_47  [key=0, style=solid];
m2_46 -> m2_54  [key=0, style=solid];
m2_53 -> m2_54  [key=0, style=solid];
m2_49 -> m2_54  [key=0, style=solid];
m2_49 -> m2_57  [key=2, style=dotted];
m2_49 -> m2_58  [key=2, style=dotted];
m2_49 -> m2_59  [key=2, style=dotted];
m2_52 -> m2_54  [key=0, style=solid];
m2_52 -> m2_61  [key=2, style=dotted];
m2_52 -> m2_62  [key=2, style=dotted];
m2_52 -> m2_63  [key=2, style=dotted];
m2_54 -> m2_43  [color=blue, key=0, style=bold];
m2_10 -> m2_11  [key=0, style=solid];
m2_11 -> m2_10  [color=blue, key=0, style=bold];
m2_14 -> m2_15  [key=0, style=solid];
m2_15 -> m2_14  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType", style=dashed];
m2_1 -> m2_2  [key=0, style=solid];
m2_2 -> m2_3  [key=0, style=solid];
m2_3 -> m2_0  [color=blue, key=0, style=bold];
m2_544 -> m2_545  [key=0, style=solid];
m2_545 -> m2_546  [key=0, style=solid];
m2_546 -> m2_544  [color=blue, key=0, style=bold];
m2_273 -> m2_274  [key=0, style=solid];
m2_274 -> m2_275  [key=0, style=solid];
m2_274 -> m2_0  [key=2, style=dotted];
m2_275 -> m2_273  [color=blue, key=0, style=bold];
m2_444 -> m2_445  [key=0, style=solid];
m2_444 -> m2_443  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m2_445 -> m2_446  [key=0, style=solid];
m2_445 -> m2_443  [key=2, style=dotted];
m2_446 -> m2_444  [color=blue, key=0, style=bold];
m2_408 -> m2_409  [key=0, style=solid];
m2_409 -> m2_410  [key=0, style=solid];
m2_409 -> m2_412  [key=2, style=dotted];
m2_410 -> m2_411  [key=0, style=solid];
m2_410 -> m2_413  [key=2, style=dotted];
m2_411 -> m2_408  [color=blue, key=0, style=bold];
m2_574 -> m2_575  [key=0, style=solid];
m2_575 -> m2_576  [key=0, style=solid];
m2_575 -> m2_577  [key=2, style=dotted];
m2_576 -> m2_574  [color=blue, key=0, style=bold];
m2_541 -> m2_542  [key=0, style=solid];
m2_542 -> m2_543  [key=0, style=solid];
m2_543 -> m2_541  [color=blue, key=0, style=bold];
m2_514 -> m2_515  [key=0, style=solid];
m2_514 -> m2_517  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_514 -> m2_68  [color=darkorchid, key=3, label="method methodReturn int CompareTo", style=bold];
m2_514 -> m2_64  [color=darkorchid, key=3, label="method methodReturn int CompareTo", style=bold];
m2_515 -> m2_516  [key=0, style=solid];
m2_515 -> m2_517  [key=0, style=solid];
m2_517 -> m2_518  [key=0, style=solid];
m2_517 -> m2_64  [key=2, style=dotted];
m2_516 -> m2_518  [key=0, style=solid];
m2_518 -> m2_514  [color=blue, key=0, style=bold];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_37  [color=darkorchid, key=3, label="method methodReturn bool DeepEquals", style=bold];
m2_34 -> m2_39  [color=darkorchid, key=3, label="method methodReturn bool DeepEquals", style=bold];
m2_34 -> m2_42  [color=darkorchid, key=3, label="method methodReturn bool DeepEquals", style=bold];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_38  [color=darkseagreen4, key=1, label=other, style=dashed];
m2_35 -> m2_40  [color=darkseagreen4, key=1, label=other, style=dashed];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_38  [key=0, style=solid];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_40  [key=0, style=solid];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_42  [key=2, style=dotted];
m2_37 -> m2_41  [key=0, style=solid];
m2_39 -> m2_41  [key=0, style=solid];
m2_41 -> m2_34  [color=blue, key=0, style=bold];
m2_279 -> m2_280  [key=0, style=solid];
m2_280 -> m2_281  [key=0, style=solid];
m2_280 -> m2_0  [key=2, style=dotted];
m2_281 -> m2_279  [color=blue, key=0, style=bold];
m2_421 -> m2_422  [key=0, style=solid];
m2_421 -> m2_424  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_421 -> m2_427  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_421 -> m2_37  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m2_421 -> m2_416  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m2_422 -> m2_423  [key=0, style=solid];
m2_422 -> m2_424  [key=0, style=solid];
m2_424 -> m2_425  [key=0, style=solid];
m2_424 -> m2_426  [color=darkseagreen4, key=1, label=otherValue, style=dashed];
m2_427 -> m2_428  [key=0, style=solid];
m2_427 -> m2_429  [key=2, style=dotted];
m2_423 -> m2_428  [key=0, style=solid];
m2_425 -> m2_426  [key=0, style=solid];
m2_425 -> m2_427  [key=0, style=solid];
m2_426 -> m2_428  [key=0, style=solid];
m2_426 -> m2_416  [key=2, style=dotted];
m2_428 -> m2_421  [color=blue, key=0, style=bold];
m2_8 -> m2_9  [key=0, style=solid];
m2_9 -> m2_8  [color=blue, key=0, style=bold];
m2_435 -> m2_436  [key=0, style=solid];
m2_436 -> m2_437  [key=0, style=solid];
m2_436 -> m2_438  [key=0, style=solid];
m2_437 -> m2_439  [key=0, style=solid];
m2_438 -> m2_439  [key=0, style=solid];
m2_438 -> d213  [key=2, style=dotted];
m2_439 -> m2_435  [color=blue, key=0, style=bold];
m2_508 -> m2_509  [key=0, style=solid];
m2_508 -> m2_511  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_508 -> m2_68  [color=darkorchid, key=3, label="method methodReturn int System.IComparable.CompareTo", style=bold];
m2_508 -> m2_64  [color=darkorchid, key=3, label="method methodReturn int System.IComparable.CompareTo", style=bold];
m2_509 -> m2_510  [key=0, style=solid];
m2_509 -> m2_511  [key=0, style=solid];
m2_511 -> m2_512  [key=0, style=solid];
m2_510 -> m2_513  [key=0, style=solid];
m2_512 -> m2_513  [key=0, style=solid];
m2_512 -> m2_64  [key=2, style=dotted];
m2_513 -> m2_508  [color=blue, key=0, style=bold];
m2_282 -> m2_283  [key=0, style=solid];
m2_283 -> m2_284  [key=0, style=solid];
m2_283 -> m2_0  [key=2, style=dotted];
m2_284 -> m2_282  [color=blue, key=0, style=bold];
m2_578 -> m2_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_40  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_271  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_328  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_329  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_331  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_333  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_347  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_348  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_349  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_350  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_351  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_352  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_353  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_354  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_360  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_361  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_362  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_363  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_367  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_370  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_375  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_378  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_382  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_385  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_388  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_409  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_410  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_419  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_426  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_427  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_431  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_433  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_436  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_438  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_441  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_445  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_447  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_449  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_452  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_456  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_512  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_517  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_520  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_522  [color=red, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_524  [color=red, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_526  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_533  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_536  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_539  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_542  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_545  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_548  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_551  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_554  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_557  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_560  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_563  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_566  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_569  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_572  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_578 -> m2_575  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_5  [key=2, style=dotted];
m3_1 -> m3_6  [key=2, style=dotted];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_7  [key=2, style=dotted];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_8  [key=2, style=dotted];
m3_4 -> m3_0  [color=blue, key=0, style=bold];
m4_57 -> m4_58  [key=0, style=solid];
m4_58 -> m4_59  [key=0, style=solid];
m4_58 -> m4_55  [key=2, style=dotted];
m4_59 -> m4_60  [key=0, style=solid];
m4_59 -> m4_61  [key=2, style=dotted];
m4_59 -> m4_56  [key=2, style=dotted];
m4_59 -> m4_28  [key=2, style=dotted];
m4_60 -> m4_57  [color=blue, key=0, style=bold];
m4_31 -> m4_32  [key=0, style=solid];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_37  [key=2, style=dotted];
m4_32 -> m4_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_37  [key=2, style=dotted];
m4_33 -> m4_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_34 -> m4_35  [key=0, style=solid];
m4_34 -> m4_37  [key=2, style=dotted];
m4_34 -> m4_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_35 -> m4_36  [key=0, style=solid];
m4_35 -> m4_37  [key=2, style=dotted];
m4_35 -> m4_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_36 -> m4_31  [color=blue, key=0, style=bold];
m4_392 -> m4_393  [key=0, style=solid];
m4_393 -> m4_394  [key=0, style=solid];
m4_393 -> m4_205  [key=2, style=dotted];
m4_393 -> m4_172  [key=2, style=dotted];
m4_393 -> m4_300  [key=2, style=dotted];
m4_393 -> m4_403  [key=2, style=dotted];
m4_393 -> m4_404  [key=2, style=dotted];
m4_393 -> m4_298  [key=2, style=dotted];
m4_393 -> m4_399  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_394 -> m4_395  [key=0, style=solid];
m4_394 -> m4_206  [key=2, style=dotted];
m4_394 -> m4_399  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m4_399 -> m4_400  [key=0, style=solid];
m4_399 -> m4_409  [key=2, style=dotted];
m4_395 -> m4_396  [key=0, style=solid];
m4_395 -> m4_405  [key=2, style=dotted];
m4_395 -> m4_406  [key=2, style=dotted];
m4_396 -> m4_397  [key=0, style=solid];
m4_396 -> m4_407  [key=2, style=dotted];
m4_396 -> m4_400  [color=darkseagreen4, key=1, label=sw, style=dashed];
m4_397 -> m4_398  [key=0, style=solid];
m4_397 -> m4_408  [key=2, style=dotted];
m4_397 -> m4_399  [color=darkseagreen4, key=1, label=writer, style=dashed];
m4_400 -> m4_401  [key=0, style=solid];
m4_400 -> m4_410  [key=2, style=dotted];
m4_398 -> m4_399  [key=0, style=solid];
m4_401 -> m4_402  [key=0, style=solid];
m4_401 -> m4_8  [key=2, style=dotted];
m4_402 -> m4_392  [color=blue, key=0, style=bold];
m4_274 -> m4_275  [key=0, style=solid];
m4_275 -> m4_276  [key=0, style=solid];
m4_275 -> m4_275  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_276 -> m4_277  [key=0, style=solid];
m4_276 -> m4_25  [key=2, style=dotted];
m4_276 -> m4_278  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_276 -> m4_279  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_276 -> m4_280  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_276 -> m4_281  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_276 -> m4_282  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_277 -> m4_278  [key=0, style=solid];
m4_277 -> m4_273  [key=2, style=dotted];
m4_277 -> m4_7  [key=2, style=dotted];
m4_277 -> m4_8  [key=2, style=dotted];
m4_278 -> m4_279  [key=0, style=solid];
m4_278 -> m4_273  [key=2, style=dotted];
m4_278 -> m4_7  [key=2, style=dotted];
m4_278 -> m4_8  [key=2, style=dotted];
m4_279 -> m4_280  [key=0, style=solid];
m4_279 -> m4_273  [key=2, style=dotted];
m4_279 -> m4_7  [key=2, style=dotted];
m4_279 -> m4_28  [key=2, style=dotted];
m4_280 -> m4_281  [key=0, style=solid];
m4_280 -> m4_273  [key=2, style=dotted];
m4_280 -> m4_289  [key=2, style=dotted];
m4_280 -> m4_28  [key=2, style=dotted];
m4_281 -> m4_282  [key=0, style=solid];
m4_281 -> m4_273  [key=2, style=dotted];
m4_281 -> m4_7  [key=2, style=dotted];
m4_281 -> m4_28  [key=2, style=dotted];
m4_282 -> m4_283  [key=0, style=solid];
m4_282 -> m4_273  [key=2, style=dotted];
m4_282 -> m4_7  [key=2, style=dotted];
m4_282 -> m4_28  [key=2, style=dotted];
m4_283 -> m4_284  [key=0, style=solid];
m4_284 -> m4_285  [key=0, style=solid];
m4_284 -> m4_41  [key=2, style=dotted];
m4_284 -> m4_286  [color=darkseagreen4, key=1, label=a, style=dashed];
m4_284 -> m4_287  [color=darkseagreen4, key=1, label=a, style=dashed];
m4_285 -> m4_286  [key=0, style=solid];
m4_285 -> m4_7  [key=2, style=dotted];
m4_285 -> m4_8  [key=2, style=dotted];
m4_286 -> m4_287  [key=0, style=solid];
m4_286 -> m4_226  [key=2, style=dotted];
m4_286 -> m4_227  [key=2, style=dotted];
m4_286 -> m4_7  [key=2, style=dotted];
m4_286 -> m4_28  [key=2, style=dotted];
m4_287 -> m4_288  [key=0, style=solid];
m4_287 -> m4_226  [key=2, style=dotted];
m4_287 -> m4_227  [key=2, style=dotted];
m4_287 -> m4_7  [key=2, style=dotted];
m4_287 -> m4_28  [key=2, style=dotted];
m4_288 -> m4_274  [color=blue, key=0, style=bold];
m4_162 -> m4_163  [key=0, style=solid];
m4_162 -> m4_165  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_162 -> m4_166  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_162 -> m4_157  [color=darkorchid, key=3, label="Parameter variable string expectedPath", style=bold];
m4_162 -> m4_158  [color=darkorchid, key=3, label="Parameter variable string expectedPath", style=bold];
m4_162 -> m4_159  [color=darkorchid, key=3, label="Parameter variable string expectedPath", style=bold];
m4_162 -> m4_160  [color=darkorchid, key=3, label="Parameter variable string expectedPath", style=bold];
m4_163 -> m4_164  [key=0, style=solid];
m4_163 -> m4_163  [color=darkorchid, key=3, label="Local variable int v1", style=bold];
m4_165 -> m4_166  [key=0, style=solid];
m4_165 -> m4_171  [key=2, style=dotted];
m4_165 -> m4_172  [key=2, style=dotted];
m4_165 -> m4_167  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_166 -> m4_167  [key=0, style=solid];
m4_166 -> m4_28  [key=2, style=dotted];
m4_164 -> m4_165  [key=0, style=solid];
m4_164 -> m4_170  [key=2, style=dotted];
m4_164 -> m4_166  [color=darkseagreen4, key=1, label=value, style=dashed];
m4_164 -> m4_167  [color=darkseagreen4, key=1, label=value, style=dashed];
m4_164 -> m4_168  [color=darkseagreen4, key=1, label=value, style=dashed];
m4_167 -> m4_168  [key=0, style=solid];
m4_167 -> m4_155  [key=2, style=dotted];
m4_168 -> m4_169  [key=0, style=solid];
m4_168 -> m4_28  [key=2, style=dotted];
m4_169 -> m4_162  [color=blue, key=0, style=bold];
m4_493 -> m4_494  [key=0, style=solid];
m4_494 -> m4_495  [key=0, style=solid];
m4_494 -> m4_492  [key=2, style=dotted];
m4_494 -> d220  [key=2, style=dotted];
m4_494 -> m4_506  [key=2, style=dotted];
m4_494 -> m4_420  [key=2, style=dotted];
m4_494 -> m4_507  [key=2, style=dotted];
m4_494 -> m4_498  [color=darkseagreen4, key=1, label=c1, style=dashed];
m4_494 -> m4_499  [color=darkseagreen4, key=1, label=c1, style=dashed];
m4_494 -> m4_500  [color=darkseagreen4, key=1, label=c1, style=dashed];
m4_494 -> m4_501  [color=darkseagreen4, key=1, label=c1, style=dashed];
m4_494 -> m4_502  [color=darkseagreen4, key=1, label=c1, style=dashed];
m4_494 -> m4_503  [color=darkseagreen4, key=1, label=c1, style=dashed];
m4_495 -> m4_496  [key=0, style=solid];
m4_495 -> m4_6  [key=2, style=dotted];
m4_495 -> m4_497  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_495 -> m4_504  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_498 -> m4_499  [key=0, style=solid];
m4_498 -> m4_28  [key=2, style=dotted];
m4_499 -> m4_500  [key=0, style=solid];
m4_499 -> m4_28  [key=2, style=dotted];
m4_500 -> m4_501  [key=0, style=solid];
m4_500 -> m4_28  [key=2, style=dotted];
m4_501 -> m4_502  [key=0, style=solid];
m4_501 -> m4_28  [key=2, style=dotted];
m4_502 -> m4_503  [key=0, style=solid];
m4_502 -> m4_28  [key=2, style=dotted];
m4_503 -> m4_504  [key=0, style=solid];
m4_503 -> m4_508  [key=2, style=dotted];
m4_496 -> m4_497  [key=0, style=solid];
m4_496 -> m4_7  [key=2, style=dotted];
m4_496 -> m4_8  [key=2, style=dotted];
m4_497 -> m4_498  [key=0, style=solid];
m4_497 -> m4_26  [key=2, style=dotted];
m4_497 -> m4_499  [color=darkseagreen4, key=1, label=c2, style=dashed];
m4_497 -> m4_500  [color=darkseagreen4, key=1, label=c2, style=dashed];
m4_497 -> m4_501  [color=darkseagreen4, key=1, label=c2, style=dashed];
m4_497 -> m4_502  [color=darkseagreen4, key=1, label=c2, style=dashed];
m4_504 -> m4_505  [key=0, style=solid];
m4_504 -> m4_7  [key=2, style=dotted];
m4_504 -> m4_8  [key=2, style=dotted];
m4_505 -> m4_493  [color=blue, key=0, style=bold];
m4_209 -> m4_210  [key=0, style=solid];
m4_210 -> m4_211  [key=0, style=solid];
m4_210 -> m4_210  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_211 -> m4_212  [key=0, style=solid];
m4_211 -> m4_25  [key=2, style=dotted];
m4_211 -> m4_220  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_212 -> m4_213  [key=0, style=solid];
m4_212 -> m4_224  [key=2, style=dotted];
m4_212 -> m4_225  [key=2, style=dotted];
m4_212 -> m4_214  [color=darkseagreen4, key=1, label=properties, style=dashed];
m4_212 -> m4_215  [color=darkseagreen4, key=1, label=properties, style=dashed];
m4_212 -> m4_216  [color=darkseagreen4, key=1, label=properties, style=dashed];
m4_220 -> m4_221  [key=0, style=solid];
m4_220 -> m4_224  [key=2, style=dotted];
m4_220 -> m4_228  [key=2, style=dotted];
m4_220 -> m4_220  [color=darkseagreen4, key=1, label=p, style=dashed];
m4_220 -> m4_222  [color=darkseagreen4, key=1, label=parameterValues, style=dashed];
m4_213 -> m4_214  [key=0, style=solid];
m4_213 -> m4_28  [key=2, style=dotted];
m4_214 -> m4_215  [key=0, style=solid];
m4_214 -> m4_28  [key=2, style=dotted];
m4_215 -> m4_216  [key=0, style=solid];
m4_215 -> m4_28  [key=2, style=dotted];
m4_216 -> m4_217  [key=0, style=solid];
m4_216 -> m4_218  [color=darkseagreen4, key=1, label=list, style=dashed];
m4_216 -> m4_219  [color=darkseagreen4, key=1, label=list, style=dashed];
m4_217 -> m4_218  [key=0, style=solid];
m4_217 -> m4_226  [key=2, style=dotted];
m4_217 -> m4_56  [key=2, style=dotted];
m4_217 -> m4_28  [key=2, style=dotted];
m4_218 -> m4_219  [key=0, style=solid];
m4_218 -> m4_226  [key=2, style=dotted];
m4_218 -> m4_227  [key=2, style=dotted];
m4_218 -> m4_28  [key=2, style=dotted];
m4_219 -> m4_220  [key=0, style=solid];
m4_219 -> m4_226  [key=2, style=dotted];
m4_219 -> m4_227  [key=2, style=dotted];
m4_219 -> m4_28  [key=2, style=dotted];
m4_221 -> m4_222  [key=0, style=solid];
m4_221 -> m4_28  [key=2, style=dotted];
m4_222 -> m4_223  [key=0, style=solid];
m4_222 -> m4_28  [key=2, style=dotted];
m4_223 -> m4_209  [color=blue, key=0, style=bold];
m4_141 -> m4_142  [key=0, style=solid];
m4_142 -> m4_143  [key=0, style=solid];
m4_142 -> m4_146  [key=2, style=dotted];
m4_143 -> m4_144  [key=0, style=solid];
m4_144 -> m4_145  [key=0, style=solid];
m4_144 -> m4_28  [key=2, style=dotted];
m4_145 -> m4_141  [color=blue, key=0, style=bold];
m4_130 -> m4_131  [key=0, style=solid];
m4_131 -> m4_132  [key=0, style=solid];
m4_131 -> m4_86  [key=2, style=dotted];
m4_132 -> m4_133  [key=0, style=solid];
m4_132 -> m4_87  [key=2, style=dotted];
m4_132 -> m4_134  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_132 -> m4_135  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_132 -> m4_139  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_133 -> m4_134  [key=0, style=solid];
m4_133 -> m4_137  [key=2, style=dotted];
m4_134 -> m4_135  [key=0, style=solid];
m4_134 -> m4_137  [key=2, style=dotted];
m4_135 -> m4_136  [key=0, style=solid];
m4_135 -> m4_37  [key=2, style=dotted];
m4_135 -> m4_138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_136 -> m4_130  [color=blue, key=0, style=bold];
m4_9 -> m4_10  [key=0, style=solid];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_14  [key=2, style=dotted];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_6  [key=2, style=dotted];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_7  [key=2, style=dotted];
m4_12 -> m4_8  [key=2, style=dotted];
m4_13 -> m4_9  [color=blue, key=0, style=bold];
m4_156 -> m4_157  [key=0, style=solid];
m4_157 -> m4_158  [key=0, style=solid];
m4_157 -> m4_162  [key=2, style=dotted];
m4_158 -> m4_159  [key=0, style=solid];
m4_158 -> m4_162  [key=2, style=dotted];
m4_159 -> m4_160  [key=0, style=solid];
m4_159 -> m4_162  [key=2, style=dotted];
m4_160 -> m4_161  [key=0, style=solid];
m4_160 -> m4_162  [key=2, style=dotted];
m4_161 -> m4_156  [color=blue, key=0, style=bold];
m4_99 -> m4_100  [key=0, style=solid];
m4_100 -> m4_101  [key=0, style=solid];
m4_100 -> m4_86  [key=2, style=dotted];
m4_101 -> m4_102  [key=0, style=solid];
m4_101 -> m4_87  [key=2, style=dotted];
m4_102 -> m4_103  [key=0, style=solid];
m4_102 -> m4_88  [key=2, style=dotted];
m4_102 -> m4_89  [key=2, style=dotted];
m4_102 -> m4_104  [color=darkseagreen4, key=1, label=v, style=dashed];
m4_103 -> m4_104  [key=0, style=solid];
m4_103 -> m4_28  [key=2, style=dotted];
m4_104 -> m4_105  [key=0, style=solid];
m4_104 -> m4_106  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m4_104 -> m4_107  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m4_104 -> m4_102  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.IJsonLineInfo lineInfo", style=bold];
m4_105 -> m4_106  [key=0, style=solid];
m4_105 -> m4_109  [key=2, style=dotted];
m4_105 -> m4_28  [key=2, style=dotted];
m4_106 -> m4_107  [key=0, style=solid];
m4_106 -> m4_28  [key=2, style=dotted];
m4_107 -> m4_108  [key=0, style=solid];
m4_107 -> m4_28  [key=2, style=dotted];
m4_108 -> m4_99  [color=blue, key=0, style=bold];
m4_517 -> m4_518  [key=0, style=solid];
m4_518 -> m4_519  [key=0, style=solid];
m4_518 -> m4_195  [key=2, style=dotted];
m4_518 -> m4_520  [color=darkseagreen4, key=1, label=name, style=dashed];
m4_518 -> m4_523  [color=darkseagreen4, key=1, label=name, style=dashed];
m4_519 -> m4_520  [key=0, style=solid];
m4_519 -> m4_447  [key=2, style=dotted];
m4_519 -> m4_523  [color=darkseagreen4, key=1, label=users, style=dashed];
m4_519 -> m4_524  [color=darkseagreen4, key=1, label=users, style=dashed];
m4_520 -> m4_521  [key=0, style=solid];
m4_520 -> m4_372  [key=2, style=dotted];
m4_520 -> m4_522  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_521 -> m4_517  [color=blue, key=0, style=bold];
m4_62 -> m4_63  [key=0, style=solid];
m4_63 -> m4_64  [key=0, style=solid];
m4_63 -> m4_55  [key=2, style=dotted];
m4_63 -> m4_65  [color=darkseagreen4, key=1, label=tokens1, style=dashed];
m4_64 -> m4_65  [key=0, style=solid];
m4_64 -> m4_55  [key=2, style=dotted];
m4_65 -> m4_66  [key=0, style=solid];
m4_65 -> m4_70  [key=2, style=dotted];
m4_65 -> m4_71  [key=2, style=dotted];
m4_65 -> m4_65  [color=darkseagreen4, key=1, label=tokens1, style=dashed];
m4_66 -> m4_67  [key=0, style=solid];
m4_66 -> m4_55  [key=2, style=dotted];
m4_66 -> m4_68  [color=darkseagreen4, key=1, label=o1, style=dashed];
m4_67 -> m4_68  [key=0, style=solid];
m4_67 -> m4_55  [key=2, style=dotted];
m4_68 -> m4_69  [key=0, style=solid];
m4_68 -> m4_72  [key=2, style=dotted];
m4_68 -> m4_71  [key=2, style=dotted];
m4_69 -> m4_62  [color=blue, key=0, style=bold];
m4_302 -> m4_303  [key=0, style=solid];
m4_303 -> m4_304  [key=0, style=solid];
m4_303 -> m4_237  [key=2, style=dotted];
m4_303 -> m4_305  [key=2, style=dotted];
m4_304 -> m4_302  [color=blue, key=0, style=bold];
m4_481 -> m4_482  [key=0, style=solid];
m4_482 -> m4_483  [key=0, style=solid];
m4_482 -> m4_492  [key=2, style=dotted];
m4_482 -> m4_486  [color=darkseagreen4, key=1, label=c1, style=dashed];
m4_482 -> m4_487  [color=darkseagreen4, key=1, label=c1, style=dashed];
m4_482 -> m4_488  [color=darkseagreen4, key=1, label=c1, style=dashed];
m4_482 -> m4_489  [color=darkseagreen4, key=1, label=c1, style=dashed];
m4_482 -> m4_490  [color=darkseagreen4, key=1, label=c1, style=dashed];
m4_483 -> m4_484  [key=0, style=solid];
m4_483 -> m4_6  [key=2, style=dotted];
m4_483 -> m4_485  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_486 -> m4_487  [key=0, style=solid];
m4_486 -> m4_28  [key=2, style=dotted];
m4_487 -> m4_488  [key=0, style=solid];
m4_487 -> m4_28  [key=2, style=dotted];
m4_488 -> m4_489  [key=0, style=solid];
m4_488 -> m4_28  [key=2, style=dotted];
m4_489 -> m4_490  [key=0, style=solid];
m4_489 -> m4_28  [key=2, style=dotted];
m4_490 -> m4_491  [key=0, style=solid];
m4_490 -> m4_28  [key=2, style=dotted];
m4_484 -> m4_485  [key=0, style=solid];
m4_484 -> m4_7  [key=2, style=dotted];
m4_484 -> m4_8  [key=2, style=dotted];
m4_485 -> m4_486  [key=0, style=solid];
m4_485 -> m4_26  [key=2, style=dotted];
m4_485 -> m4_487  [color=darkseagreen4, key=1, label=c2, style=dashed];
m4_485 -> m4_488  [color=darkseagreen4, key=1, label=c2, style=dashed];
m4_485 -> m4_489  [color=darkseagreen4, key=1, label=c2, style=dashed];
m4_485 -> m4_490  [color=darkseagreen4, key=1, label=c2, style=dashed];
m4_491 -> m4_481  [color=blue, key=0, style=bold];
m4_90 -> m4_91  [key=0, style=solid];
m4_91 -> m4_92  [key=0, style=solid];
m4_91 -> m4_86  [key=2, style=dotted];
m4_92 -> m4_93  [key=0, style=solid];
m4_92 -> m4_87  [key=2, style=dotted];
m4_93 -> m4_94  [key=0, style=solid];
m4_93 -> m4_98  [key=2, style=dotted];
m4_93 -> m4_95  [color=darkseagreen4, key=1, label=a, style=dashed];
m4_93 -> m4_96  [color=red, key=1, label=a, style=dashed];
m4_94 -> m4_95  [key=0, style=solid];
m4_94 -> m4_28  [key=2, style=dotted];
m4_95 -> m4_96  [color=red, key=0, style=solid];
m4_95 -> m4_28  [key=2, style=dotted];
m4_96 -> m4_97  [color=red, key=0, style=solid];
m4_96 -> m4_28  [color=red, key=2, style=dotted];
m4_97 -> m4_90  [color=blue, key=0, style=bold];
m4_411 -> m4_412  [key=0, style=solid];
m4_412 -> m4_413  [key=0, style=solid];
m4_412 -> m4_237  [key=2, style=dotted];
m4_412 -> m4_419  [key=2, style=dotted];
m4_412 -> m4_300  [key=2, style=dotted];
m4_412 -> m4_403  [key=2, style=dotted];
m4_412 -> m4_420  [key=2, style=dotted];
m4_412 -> m4_416  [color=darkseagreen4, key=1, label=testDates, style=dashed];
m4_413 -> m4_414  [key=0, style=solid];
m4_413 -> m4_206  [key=2, style=dotted];
m4_413 -> m4_416  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m4_416 -> m4_417  [key=0, style=solid];
m4_416 -> m4_409  [key=2, style=dotted];
m4_414 -> m4_415  [key=0, style=solid];
m4_415 -> m4_416  [key=0, style=solid];
m4_415 -> m4_421  [key=2, style=dotted];
m4_415 -> m4_417  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_417 -> m4_418  [key=0, style=solid];
m4_417 -> m4_258  [key=2, style=dotted];
m4_417 -> m4_56  [key=2, style=dotted];
m4_417 -> m4_28  [key=2, style=dotted];
m4_418 -> m4_411  [color=blue, key=0, style=bold];
m4_120 -> m4_121  [key=0, style=solid];
m4_121 -> m4_122  [key=0, style=solid];
m4_121 -> m4_86  [key=2, style=dotted];
m4_122 -> m4_123  [key=0, style=solid];
m4_122 -> m4_87  [key=2, style=dotted];
m4_123 -> m4_124  [key=0, style=solid];
m4_123 -> m4_98  [key=2, style=dotted];
m4_123 -> m4_125  [color=darkseagreen4, key=1, label=v, style=dashed];
m4_124 -> m4_125  [key=0, style=solid];
m4_124 -> m4_28  [key=2, style=dotted];
m4_125 -> m4_126  [key=0, style=solid];
m4_125 -> m4_127  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m4_125 -> m4_128  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m4_125 -> m4_123  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.IJsonLineInfo lineInfo", style=bold];
m4_126 -> m4_127  [key=0, style=solid];
m4_126 -> m4_109  [key=2, style=dotted];
m4_126 -> m4_28  [key=2, style=dotted];
m4_127 -> m4_128  [key=0, style=solid];
m4_127 -> m4_28  [key=2, style=dotted];
m4_128 -> m4_129  [key=0, style=solid];
m4_128 -> m4_28  [key=2, style=dotted];
m4_129 -> m4_120  [color=blue, key=0, style=bold];
m4_313 -> m4_314  [key=0, style=solid];
m4_314 -> m4_315  [key=0, style=solid];
m4_314 -> m4_41  [key=2, style=dotted];
m4_314 -> m4_316  [color=darkseagreen4, key=1, label=posts, style=dashed];
m4_314 -> m4_317  [color=darkseagreen4, key=1, label=posts, style=dashed];
m4_315 -> m4_316  [key=0, style=solid];
m4_315 -> m4_322  [key=2, style=dotted];
m4_315 -> m4_325  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_315 -> m4_318  [color=darkseagreen4, key=1, label=serializerBasics, style=dashed];
m4_316 -> m4_317  [key=0, style=solid];
m4_316 -> m4_323  [key=2, style=dotted];
m4_316 -> m4_228  [key=2, style=dotted];
m4_316 -> m4_328  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_316 -> m4_319  [color=darkseagreen4, key=1, label=since2012, style=dashed];
m4_317 -> m4_318  [key=0, style=solid];
m4_317 -> m4_323  [key=2, style=dotted];
m4_317 -> m4_228  [key=2, style=dotted];
m4_317 -> m4_331  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_317 -> m4_320  [color=darkseagreen4, key=1, label=linqToJson, style=dashed];
m4_318 -> m4_319  [key=0, style=solid];
m4_318 -> m4_324  [key=2, style=dotted];
m4_319 -> m4_320  [key=0, style=solid];
m4_319 -> m4_28  [key=2, style=dotted];
m4_320 -> m4_321  [key=0, style=solid];
m4_320 -> m4_28  [key=2, style=dotted];
m4_321 -> m4_313  [color=blue, key=0, style=bold];
m4_468 -> m4_469  [key=0, style=solid];
m4_469 -> m4_470  [key=0, style=solid];
m4_469 -> m4_41  [key=2, style=dotted];
m4_470 -> m4_471  [key=0, style=solid];
m4_470 -> m4_474  [key=2, style=dotted];
m4_470 -> m4_355  [key=2, style=dotted];
m4_470 -> m4_225  [key=2, style=dotted];
m4_470 -> m4_472  [color=darkseagreen4, key=1, label=list1, style=dashed];
m4_471 -> m4_472  [key=0, style=solid];
m4_471 -> m4_28  [key=2, style=dotted];
m4_472 -> m4_473  [key=0, style=solid];
m4_472 -> m4_28  [key=2, style=dotted];
m4_473 -> m4_468  [color=blue, key=0, style=bold];
m4_384 -> m4_385  [key=0, style=solid];
m4_385 -> m4_386  [key=0, style=solid];
m4_385 -> m4_372  [key=2, style=dotted];
m4_385 -> m4_387  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_386 -> m4_384  [color=blue, key=0, style=bold];
m4_229 -> m4_230  [key=0, style=solid];
m4_230 -> m4_231  [key=0, style=solid];
m4_230 -> m4_230  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_231 -> m4_232  [key=0, style=solid];
m4_231 -> m4_41  [key=2, style=dotted];
m4_232 -> m4_233  [key=0, style=solid];
m4_232 -> m4_236  [key=2, style=dotted];
m4_232 -> m4_225  [key=2, style=dotted];
m4_232 -> m4_234  [color=darkseagreen4, key=1, label=list, style=dashed];
m4_233 -> m4_234  [key=0, style=solid];
m4_233 -> m4_237  [key=2, style=dotted];
m4_234 -> m4_235  [key=0, style=solid];
m4_234 -> m4_28  [key=2, style=dotted];
m4_235 -> m4_229  [color=blue, key=0, style=bold];
m4_110 -> m4_111  [key=0, style=solid];
m4_111 -> m4_112  [key=0, style=solid];
m4_111 -> m4_86  [key=2, style=dotted];
m4_112 -> m4_113  [key=0, style=solid];
m4_112 -> m4_87  [key=2, style=dotted];
m4_113 -> m4_114  [key=0, style=solid];
m4_113 -> m4_88  [key=2, style=dotted];
m4_113 -> m4_89  [key=2, style=dotted];
m4_113 -> m4_115  [color=darkseagreen4, key=1, label=a, style=dashed];
m4_114 -> m4_115  [key=0, style=solid];
m4_114 -> m4_28  [key=2, style=dotted];
m4_115 -> m4_116  [key=0, style=solid];
m4_115 -> m4_117  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m4_115 -> m4_118  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m4_115 -> m4_113  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.IJsonLineInfo lineInfo", style=bold];
m4_116 -> m4_117  [key=0, style=solid];
m4_116 -> m4_109  [key=2, style=dotted];
m4_116 -> m4_28  [key=2, style=dotted];
m4_117 -> m4_118  [key=0, style=solid];
m4_117 -> m4_28  [key=2, style=dotted];
m4_118 -> m4_119  [key=0, style=solid];
m4_118 -> m4_28  [key=2, style=dotted];
m4_119 -> m4_110  [color=blue, key=0, style=bold];
m4_179 -> m4_180  [key=0, style=solid];
m4_180 -> m4_181  [key=0, style=solid];
m4_180 -> m4_41  [key=2, style=dotted];
m4_180 -> m4_183  [color=darkseagreen4, key=1, label=j, style=dashed];
m4_181 -> m4_182  [key=0, style=solid];
m4_183 -> m4_184  [key=0, style=solid];
m4_182 -> m4_183  [key=0, style=solid];
m4_182 -> m4_28  [key=2, style=dotted];
m4_184 -> m4_185  [key=0, style=solid];
m4_184 -> m4_28  [key=2, style=dotted];
m4_185 -> m4_179  [color=blue, key=0, style=bold];
m4_448 -> m4_449  [key=0, style=solid];
m4_449 -> m4_450  [key=0, style=solid];
m4_449 -> m4_451  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_449 -> m4_449  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.Linq.JObject o", style=bold];
m4_450 -> m4_451  [key=0, style=solid];
m4_450 -> m4_449  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.Linq.IJEnumerable<Newtonsoft.Json.Linq.JToken> enumerable", style=bold];
m4_451 -> m4_452  [key=0, style=solid];
m4_451 -> m4_460  [key=2, style=dotted];
m4_452 -> m4_453  [key=0, style=solid];
m4_452 -> m4_461  [key=2, style=dotted];
m4_453 -> m4_454  [key=0, style=solid];
m4_453 -> m4_205  [key=2, style=dotted];
m4_453 -> m4_172  [key=2, style=dotted];
m4_453 -> m4_300  [key=2, style=dotted];
m4_453 -> m4_298  [key=2, style=dotted];
m4_453 -> m4_456  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_454 -> m4_455  [key=0, style=solid];
m4_454 -> m4_460  [key=2, style=dotted];
m4_454 -> m4_456  [color=darkseagreen4, key=1, label=enumerable, style=dashed];
m4_454 -> m4_457  [color=darkseagreen4, key=1, label=enumerable, style=dashed];
m4_456 -> m4_457  [key=0, style=solid];
m4_456 -> m4_28  [key=2, style=dotted];
m4_455 -> m4_456  [key=0, style=solid];
m4_455 -> m4_324  [key=2, style=dotted];
m4_457 -> m4_458  [key=0, style=solid];
m4_457 -> m4_462  [key=2, style=dotted];
m4_458 -> m4_459  [key=0, style=solid];
m4_458 -> m4_300  [key=2, style=dotted];
m4_458 -> m4_28  [key=2, style=dotted];
m4_459 -> m4_448  [color=blue, key=0, style=bold];
m4_509 -> m4_510  [key=0, style=solid];
m4_510 -> m4_511  [key=0, style=solid];
m4_510 -> m4_510  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_511 -> m4_512  [key=0, style=solid];
m4_511 -> m4_25  [key=2, style=dotted];
m4_512 -> m4_513  [key=0, style=solid];
m4_512 -> m4_28  [key=2, style=dotted];
m4_513 -> m4_514  [key=0, style=solid];
m4_514 -> m4_515  [key=0, style=solid];
m4_514 -> m4_41  [key=2, style=dotted];
m4_515 -> m4_516  [key=0, style=solid];
m4_515 -> m4_28  [key=2, style=dotted];
m4_516 -> m4_509  [color=blue, key=0, style=bold];
m4_51 -> m4_52  [key=0, style=solid];
m4_52 -> m4_53  [key=0, style=solid];
m4_52 -> m4_55  [key=2, style=dotted];
m4_53 -> m4_54  [key=0, style=solid];
m4_53 -> m4_56  [key=2, style=dotted];
m4_53 -> m4_28  [key=2, style=dotted];
m4_54 -> m4_51  [color=blue, key=0, style=bold];
m4_435 -> m4_436  [key=0, style=solid];
m4_436 -> m4_437  [key=0, style=solid];
m4_436 -> m4_302  [key=2, style=dotted];
m4_437 -> m4_438  [key=0, style=solid];
m4_437 -> m4_447  [key=2, style=dotted];
m4_437 -> m4_6  [key=2, style=dotted];
m4_437 -> m4_437  [color=darkseagreen4, key=1, label=p, style=dashed];
m4_437 -> m4_439  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_437 -> m4_440  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_437 -> m4_441  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_437 -> m4_442  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_438 -> m4_439  [key=0, style=solid];
m4_438 -> m4_7  [key=2, style=dotted];
m4_438 -> m4_8  [key=2, style=dotted];
m4_439 -> m4_440  [key=0, style=solid];
m4_439 -> m4_367  [key=2, style=dotted];
m4_440 -> m4_441  [key=0, style=solid];
m4_440 -> m4_367  [key=2, style=dotted];
m4_441 -> m4_442  [key=0, style=solid];
m4_441 -> m4_28  [key=2, style=dotted];
m4_442 -> m4_443  [key=0, style=solid];
m4_442 -> m4_258  [key=2, style=dotted];
m4_442 -> m4_56  [key=2, style=dotted];
m4_442 -> m4_28  [key=2, style=dotted];
m4_443 -> m4_444  [key=0, style=solid];
m4_443 -> m4_237  [key=2, style=dotted];
m4_443 -> m4_434  [key=2, style=dotted];
m4_443 -> m4_445  [color=darkseagreen4, key=1, label=a, style=dashed];
m4_444 -> m4_445  [key=0, style=solid];
m4_444 -> m4_367  [key=2, style=dotted];
m4_445 -> m4_446  [key=0, style=solid];
m4_445 -> m4_56  [key=2, style=dotted];
m4_445 -> m4_28  [key=2, style=dotted];
m4_446 -> m4_435  [color=blue, key=0, style=bold];
m4_422 -> m4_423  [key=0, style=solid];
m4_423 -> m4_424  [key=0, style=solid];
m4_423 -> m4_302  [key=2, style=dotted];
m4_424 -> m4_425  [key=0, style=solid];
m4_424 -> m4_6  [key=2, style=dotted];
m4_424 -> m4_424  [color=darkseagreen4, key=1, label=p, style=dashed];
m4_424 -> m4_426  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_424 -> m4_427  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_424 -> m4_428  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_424 -> m4_429  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_425 -> m4_426  [key=0, style=solid];
m4_425 -> m4_7  [key=2, style=dotted];
m4_425 -> m4_8  [key=2, style=dotted];
m4_426 -> m4_427  [key=0, style=solid];
m4_426 -> m4_367  [key=2, style=dotted];
m4_427 -> m4_428  [key=0, style=solid];
m4_427 -> m4_367  [key=2, style=dotted];
m4_428 -> m4_429  [key=0, style=solid];
m4_428 -> m4_28  [key=2, style=dotted];
m4_429 -> m4_430  [key=0, style=solid];
m4_429 -> m4_258  [key=2, style=dotted];
m4_429 -> m4_56  [key=2, style=dotted];
m4_429 -> m4_28  [key=2, style=dotted];
m4_430 -> m4_431  [key=0, style=solid];
m4_430 -> m4_237  [key=2, style=dotted];
m4_430 -> m4_434  [key=2, style=dotted];
m4_430 -> m4_432  [color=darkseagreen4, key=1, label=a, style=dashed];
m4_431 -> m4_432  [key=0, style=solid];
m4_431 -> m4_367  [key=2, style=dotted];
m4_432 -> m4_433  [key=0, style=solid];
m4_432 -> m4_56  [key=2, style=dotted];
m4_432 -> m4_28  [key=2, style=dotted];
m4_433 -> m4_422  [color=blue, key=0, style=bold];
m4_475 -> m4_476  [key=0, style=solid];
m4_476 -> m4_477  [key=0, style=solid];
m4_476 -> m4_476  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_477 -> m4_478  [key=0, style=solid];
m4_477 -> m4_41  [key=2, style=dotted];
m4_477 -> m4_479  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_478 -> m4_479  [key=0, style=solid];
m4_478 -> m4_226  [key=2, style=dotted];
m4_478 -> m4_257  [key=2, style=dotted];
m4_478 -> m4_56  [key=2, style=dotted];
m4_478 -> m4_28  [key=2, style=dotted];
m4_479 -> m4_480  [key=0, style=solid];
m4_479 -> m4_226  [key=2, style=dotted];
m4_479 -> m4_257  [key=2, style=dotted];
m4_479 -> m4_355  [key=2, style=dotted];
m4_479 -> m4_368  [key=2, style=dotted];
m4_479 -> m4_28  [key=2, style=dotted];
m4_480 -> m4_475  [color=blue, key=0, style=bold];
m4_173 -> m4_174  [key=0, style=solid];
m4_174 -> m4_175  [key=0, style=solid];
m4_174 -> m4_178  [key=2, style=dotted];
m4_174 -> m4_171  [key=2, style=dotted];
m4_174 -> m4_172  [key=2, style=dotted];
m4_175 -> m4_176  [key=0, style=solid];
m4_175 -> m4_177  [key=0, style=solid];
m4_176 -> m4_175  [key=0, style=solid];
m4_176 -> m4_7  [key=2, style=dotted];
m4_176 -> m4_8  [key=2, style=dotted];
m4_177 -> m4_173  [color=blue, key=0, style=bold];
m4_377 -> m4_378  [key=0, style=solid];
m4_378 -> m4_379  [key=0, style=solid];
m4_378 -> m4_372  [key=2, style=dotted];
m4_378 -> m4_380  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_379 -> m4_377  [color=blue, key=0, style=bold];
m4_15 -> m4_16  [key=0, style=solid];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_25  [key=2, style=dotted];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_26  [key=2, style=dotted];
m4_17 -> m4_19  [color=darkseagreen4, key=1, label=data, style=dashed];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_27  [key=2, style=dotted];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_28  [key=2, style=dotted];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_25  [key=2, style=dotted];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_26  [key=2, style=dotted];
m4_21 -> m4_23  [color=darkseagreen4, key=1, label=data, style=dashed];
m4_22 -> m4_23  [key=0, style=solid];
m4_22 -> d220  [key=2, style=dotted];
m4_22 -> m4_30  [key=2, style=dotted];
m4_23 -> m4_24  [key=0, style=solid];
m4_23 -> m4_28  [key=2, style=dotted];
m4_24 -> m4_15  [color=blue, key=0, style=bold];
m4_147 -> m4_148  [key=0, style=solid];
m4_148 -> m4_149  [key=0, style=solid];
m4_148 -> m4_148  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_149 -> m4_150  [key=0, style=solid];
m4_149 -> m4_25  [key=2, style=dotted];
m4_149 -> m4_152  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_150 -> m4_151  [key=0, style=solid];
m4_150 -> m4_152  [color=darkseagreen4, key=1, label=v1, style=dashed];
m4_150 -> m4_153  [color=darkseagreen4, key=1, label=v1, style=dashed];
m4_152 -> m4_153  [key=0, style=solid];
m4_152 -> m4_155  [key=2, style=dotted];
m4_151 -> m4_152  [key=0, style=solid];
m4_151 -> m4_28  [key=2, style=dotted];
m4_153 -> m4_154  [key=0, style=solid];
m4_153 -> m4_28  [key=2, style=dotted];
m4_154 -> m4_147  [color=blue, key=0, style=bold];
m4_356 -> m4_357  [key=0, style=solid];
m4_357 -> m4_358  [key=0, style=solid];
m4_357 -> m4_357  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_358 -> m4_359  [key=0, style=solid];
m4_358 -> m4_25  [key=2, style=dotted];
m4_358 -> m4_360  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_358 -> m4_361  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_358 -> m4_362  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_358 -> m4_363  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_358 -> m4_364  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_358 -> m4_365  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_359 -> m4_360  [key=0, style=solid];
m4_359 -> m4_28  [key=2, style=dotted];
m4_360 -> m4_361  [key=0, style=solid];
m4_360 -> m4_272  [key=2, style=dotted];
m4_360 -> m4_28  [key=2, style=dotted];
m4_361 -> m4_362  [key=0, style=solid];
m4_361 -> m4_367  [key=2, style=dotted];
m4_362 -> m4_363  [key=0, style=solid];
m4_362 -> m4_258  [key=2, style=dotted];
m4_362 -> m4_56  [key=2, style=dotted];
m4_362 -> m4_28  [key=2, style=dotted];
m4_363 -> m4_364  [key=0, style=solid];
m4_363 -> m4_258  [key=2, style=dotted];
m4_363 -> m4_56  [key=2, style=dotted];
m4_363 -> m4_28  [key=2, style=dotted];
m4_364 -> m4_365  [key=0, style=solid];
m4_364 -> m4_28  [key=2, style=dotted];
m4_365 -> m4_366  [key=0, style=solid];
m4_365 -> m4_258  [key=2, style=dotted];
m4_365 -> m4_259  [key=2, style=dotted];
m4_365 -> m4_368  [key=2, style=dotted];
m4_365 -> m4_28  [key=2, style=dotted];
m4_366 -> m4_356  [color=blue, key=0, style=bold];
m4_575 -> m4_576  [key=0, style=solid];
m4_38 -> m4_39  [key=0, style=solid];
m4_42 -> m4_43  [key=0, style=solid];
m4_45 -> m4_46  [key=0, style=solid];
m4_48 -> m4_49  [key=0, style=solid];
m4_39 -> m4_40  [key=0, style=solid];
m4_39 -> m4_41  [key=2, style=dotted];
m4_40 -> m4_38  [color=blue, key=0, style=bold];
m4_43 -> m4_44  [key=0, style=solid];
m4_43 -> m4_41  [key=2, style=dotted];
m4_44 -> m4_42  [color=blue, key=0, style=bold];
m4_46 -> m4_47  [key=0, style=solid];
m4_46 -> m4_25  [key=2, style=dotted];
m4_47 -> m4_45  [color=blue, key=0, style=bold];
m4_49 -> m4_50  [key=0, style=solid];
m4_49 -> m4_25  [key=2, style=dotted];
m4_50 -> m4_48  [color=blue, key=0, style=bold];
m4_139 -> m4_140  [key=0, style=solid];
m4_139 -> m4_98  [key=2, style=dotted];
m4_138 -> m4_139  [key=0, style=solid];
m4_140 -> m4_138  [color=blue, key=0, style=bold];
m4_325 -> m4_326  [key=0, style=solid];
m4_328 -> m4_329  [key=0, style=solid];
m4_331 -> m4_332  [key=0, style=solid];
m4_326 -> m4_327  [key=0, style=solid];
m4_327 -> m4_325  [color=blue, key=0, style=bold];
m4_329 -> m4_330  [key=0, style=solid];
m4_329 -> m4_197  [key=2, style=dotted];
m4_330 -> m4_328  [color=blue, key=0, style=bold];
m4_332 -> m4_333  [key=0, style=solid];
m4_332 -> m4_334  [key=2, style=dotted];
m4_332 -> m4_335  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_333 -> m4_331  [color=blue, key=0, style=bold];
m4_335 -> m4_336  [key=0, style=solid];
m4_336 -> m4_337  [key=0, style=solid];
m4_337 -> m4_335  [color=blue, key=0, style=bold];
m4_373 -> m4_374  [key=0, style=solid];
m4_374 -> m4_375  [key=0, style=solid];
m4_374 -> m4_146  [key=2, style=dotted];
m4_375 -> m4_376  [key=0, style=solid];
m4_375 -> m4_28  [key=2, style=dotted];
m4_376 -> m4_373  [color=blue, key=0, style=bold];
m4_380 -> m4_381  [key=0, style=solid];
m4_381 -> m4_382  [key=0, style=solid];
m4_381 -> m4_194  [key=2, style=dotted];
m4_382 -> m4_383  [key=0, style=solid];
m4_382 -> m4_28  [key=2, style=dotted];
m4_383 -> m4_380  [color=blue, key=0, style=bold];
m4_387 -> m4_388  [key=0, style=solid];
m4_388 -> m4_389  [key=0, style=solid];
m4_388 -> m4_391  [key=2, style=dotted];
m4_389 -> m4_390  [key=0, style=solid];
m4_389 -> m4_28  [key=2, style=dotted];
m4_390 -> m4_387  [color=blue, key=0, style=bold];
m4_523 -> m4_524  [key=0, style=solid];
m4_523 -> m4_526  [key=2, style=dotted];
m4_524 -> m4_525  [key=0, style=solid];
m4_524 -> m4_28  [key=2, style=dotted];
m4_522 -> m4_523  [key=0, style=solid];
m4_525 -> m4_522  [color=blue, key=0, style=bold];
m4_569 -> m4_570  [key=0, style=solid];
m4_572 -> m4_573  [key=0, style=solid];
m4_576 -> m4_577  [key=0, style=solid];
m4_576 -> m4_7  [key=2, style=dotted];
m4_570 -> m4_571  [key=0, style=solid];
m4_571 -> m4_569  [color=blue, key=0, style=bold];
m4_573 -> m4_574  [key=0, style=solid];
m4_574 -> m4_572  [color=blue, key=0, style=bold];
m4_577 -> m4_575  [color=blue, key=0, style=bold];
m4_548 -> m4_549  [key=0, style=solid];
m4_548 -> m4_551  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_548 -> m4_528  [color=darkorchid, key=3, label="Parameter variable object o", style=bold];
m4_548 -> m4_562  [color=darkorchid, key=3, label="method methodReturn string SerializeWithNoRedundentIdProperties", style=bold];
m4_549 -> m4_550  [key=0, style=solid];
m4_549 -> m4_421  [key=2, style=dotted];
m4_549 -> m4_551  [color=darkseagreen4, key=1, label=writer, style=dashed];
m4_549 -> m4_552  [color=darkseagreen4, key=1, label=writer, style=dashed];
m4_551 -> m4_552  [key=0, style=solid];
m4_551 -> m4_409  [key=2, style=dotted];
m4_550 -> m4_551  [key=0, style=solid];
m4_550 -> m4_565  [key=2, style=dotted];
m4_550 -> m4_566  [key=2, style=dotted];
m4_552 -> m4_553  [key=0, style=solid];
m4_552 -> m4_554  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_552 -> m4_562  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_553 -> m4_554  [key=0, style=solid];
m4_553 -> m4_562  [key=0, style=solid];
m4_554 -> m4_555  [key=0, style=solid];
m4_554 -> m4_557  [color=darkseagreen4, key=1, label=c, style=dashed];
m4_562 -> m4_563  [key=0, style=solid];
m4_562 -> m4_7  [key=2, style=dotted];
m4_555 -> m4_556  [key=0, style=solid];
m4_555 -> m4_260  [key=2, style=dotted];
m4_555 -> m4_567  [key=2, style=dotted];
m4_555 -> m4_323  [key=2, style=dotted];
m4_555 -> m4_228  [key=2, style=dotted];
m4_555 -> m4_569  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_555 -> m4_558  [color=darkseagreen4, key=1, label=ids, style=dashed];
m4_557 -> m4_558  [key=0, style=solid];
m4_557 -> m4_260  [key=2, style=dotted];
m4_557 -> m4_567  [key=2, style=dotted];
m4_557 -> m4_323  [key=2, style=dotted];
m4_557 -> m4_228  [key=2, style=dotted];
m4_557 -> m4_572  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_557 -> m4_559  [color=darkseagreen4, key=1, label=refs, style=dashed];
m4_556 -> m4_557  [key=0, style=solid];
m4_556 -> m4_562  [key=0, style=solid];
m4_558 -> m4_559  [key=0, style=solid];
m4_558 -> m4_562  [key=0, style=solid];
m4_558 -> m4_576  [color=darkseagreen4, key=1, label=idProperty, style=dashed];
m4_558 -> m4_561  [color=darkseagreen4, key=1, label=idProperty, style=dashed];
m4_559 -> m4_560  [key=0, style=solid];
m4_559 -> m4_334  [key=2, style=dotted];
m4_559 -> m4_575  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_561 -> m4_558  [key=0, style=solid];
m4_561 -> m4_568  [key=2, style=dotted];
m4_560 -> m4_561  [key=0, style=solid];
m4_560 -> m4_558  [key=0, style=solid];
m4_563 -> m4_564  [key=0, style=solid];
m4_564 -> m4_548  [color=blue, key=0, style=bold];
m4_290 -> m4_291  [key=0, style=solid];
m4_291 -> m4_292  [key=0, style=solid];
m4_291 -> m4_205  [key=2, style=dotted];
m4_291 -> m4_172  [key=2, style=dotted];
m4_291 -> m4_298  [key=2, style=dotted];
m4_291 -> m4_293  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_291 -> m4_294  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_292 -> m4_293  [key=0, style=solid];
m4_292 -> m4_224  [key=2, style=dotted];
m4_292 -> m4_56  [key=2, style=dotted];
m4_292 -> m4_28  [key=2, style=dotted];
m4_293 -> m4_294  [key=0, style=solid];
m4_293 -> m4_7  [key=2, style=dotted];
m4_293 -> m4_8  [key=2, style=dotted];
m4_294 -> m4_295  [key=0, style=solid];
m4_294 -> m4_299  [key=2, style=dotted];
m4_294 -> m4_300  [key=2, style=dotted];
m4_294 -> m4_301  [key=2, style=dotted];
m4_294 -> m4_296  [color=darkseagreen4, key=1, label=a, style=dashed];
m4_295 -> m4_296  [key=0, style=solid];
m4_295 -> m4_56  [key=2, style=dotted];
m4_295 -> m4_28  [key=2, style=dotted];
m4_296 -> m4_297  [key=0, style=solid];
m4_296 -> m4_7  [key=2, style=dotted];
m4_296 -> m4_8  [key=2, style=dotted];
m4_297 -> m4_290  [color=blue, key=0, style=bold];
m4_527 -> m4_528  [key=0, style=solid];
m4_528 -> m4_529  [key=0, style=solid];
m4_528 -> m4_447  [key=2, style=dotted];
m4_528 -> m4_533  [color=darkseagreen4, key=1, label=dic1, style=dashed];
m4_528 -> m4_534  [color=darkseagreen4, key=1, label=dic1, style=dashed];
m4_528 -> m4_535  [color=darkseagreen4, key=1, label=dic1, style=dashed];
m4_528 -> m4_536  [color=darkseagreen4, key=1, label=dic1, style=dashed];
m4_528 -> m4_537  [color=darkseagreen4, key=1, label=dic1, style=dashed];
m4_528 -> m4_538  [color=darkseagreen4, key=1, label=dic1, style=dashed];
m4_528 -> m4_540  [color=darkseagreen4, key=1, label=dic1, style=dashed];
m4_528 -> m4_543  [color=darkseagreen4, key=1, label=dic1, style=dashed];
m4_529 -> m4_530  [key=0, style=solid];
m4_529 -> m4_447  [key=2, style=dotted];
m4_529 -> m4_536  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m4_533 -> m4_534  [key=0, style=solid];
m4_533 -> m4_546  [key=2, style=dotted];
m4_534 -> m4_535  [key=0, style=solid];
m4_534 -> m4_546  [key=2, style=dotted];
m4_535 -> m4_536  [key=0, style=solid];
m4_535 -> m4_546  [key=2, style=dotted];
m4_536 -> m4_537  [key=0, style=solid];
m4_536 -> m4_546  [key=2, style=dotted];
m4_537 -> m4_538  [key=0, style=solid];
m4_537 -> m4_546  [key=2, style=dotted];
m4_538 -> m4_539  [key=0, style=solid];
m4_538 -> m4_546  [key=2, style=dotted];
m4_540 -> m4_541  [key=0, style=solid];
m4_540 -> m4_547  [key=2, style=dotted];
m4_543 -> m4_544  [key=0, style=solid];
m4_543 -> m4_548  [key=2, style=dotted];
m4_530 -> m4_531  [key=0, style=solid];
m4_530 -> m4_447  [key=2, style=dotted];
m4_530 -> m4_537  [color=darkseagreen4, key=1, label=dic3, style=dashed];
m4_530 -> m4_542  [color=darkseagreen4, key=1, label=dic3, style=dashed];
m4_531 -> m4_532  [key=0, style=solid];
m4_531 -> m4_237  [key=2, style=dotted];
m4_531 -> m4_533  [color=darkseagreen4, key=1, label=list1, style=dashed];
m4_531 -> m4_539  [color=darkseagreen4, key=1, label=list1, style=dashed];
m4_531 -> m4_540  [color=darkseagreen4, key=1, label=list1, style=dashed];
m4_531 -> m4_541  [color=darkseagreen4, key=1, label=list1, style=dashed];
m4_542 -> m4_543  [key=0, style=solid];
m4_542 -> m4_546  [key=2, style=dotted];
m4_532 -> m4_533  [key=0, style=solid];
m4_532 -> m4_237  [key=2, style=dotted];
m4_532 -> m4_534  [color=darkseagreen4, key=1, label=list2, style=dashed];
m4_539 -> m4_540  [key=0, style=solid];
m4_539 -> m4_547  [key=2, style=dotted];
m4_541 -> m4_542  [key=0, style=solid];
m4_541 -> m4_237  [key=2, style=dotted];
m4_541 -> m4_547  [key=2, style=dotted];
m4_544 -> m4_545  [key=0, style=solid];
m4_544 -> m4_8  [key=2, style=dotted];
m4_545 -> m4_527  [color=blue, key=0, style=bold];
m4_73 -> m4_74  [key=0, style=solid];
m4_74 -> m4_75  [key=0, style=solid];
m4_74 -> m4_55  [key=2, style=dotted];
m4_75 -> m4_76  [key=0, style=solid];
m4_75 -> m4_77  [key=2, style=dotted];
m4_75 -> m4_28  [key=2, style=dotted];
m4_75 -> m4_75  [color=darkseagreen4, key=1, label=tokens, style=dashed];
m4_76 -> m4_73  [color=blue, key=0, style=bold];
m4_78 -> m4_79  [key=0, style=solid];
m4_79 -> m4_80  [key=0, style=solid];
m4_79 -> m4_86  [key=2, style=dotted];
m4_80 -> m4_81  [key=0, style=solid];
m4_80 -> m4_87  [key=2, style=dotted];
m4_81 -> m4_82  [key=0, style=solid];
m4_81 -> m4_88  [key=2, style=dotted];
m4_81 -> m4_89  [key=2, style=dotted];
m4_81 -> m4_83  [color=darkseagreen4, key=1, label=a, style=dashed];
m4_81 -> m4_84  [color=darkseagreen4, key=1, label=a, style=dashed];
m4_82 -> m4_83  [key=0, style=solid];
m4_82 -> m4_28  [key=2, style=dotted];
m4_83 -> m4_84  [key=0, style=solid];
m4_83 -> m4_28  [key=2, style=dotted];
m4_84 -> m4_85  [key=0, style=solid];
m4_84 -> m4_28  [key=2, style=dotted];
m4_85 -> m4_78  [color=blue, key=0, style=bold];
m4_338 -> m4_339  [key=0, style=solid];
m4_339 -> m4_340  [key=0, style=solid];
m4_339 -> m4_302  [key=2, style=dotted];
m4_340 -> m4_341  [key=0, style=solid];
m4_340 -> m4_171  [key=2, style=dotted];
m4_340 -> m4_172  [key=2, style=dotted];
m4_340 -> m4_205  [key=2, style=dotted];
m4_340 -> m4_353  [key=2, style=dotted];
m4_340 -> m4_195  [key=2, style=dotted];
m4_340 -> m4_340  [color=darkseagreen4, key=1, label=p, style=dashed];
m4_340 -> m4_342  [color=darkseagreen4, key=1, label=rss, style=dashed];
m4_340 -> m4_345  [color=darkseagreen4, key=1, label=rss, style=dashed];
m4_341 -> m4_342  [key=0, style=solid];
m4_341 -> m4_7  [key=2, style=dotted];
m4_341 -> m4_8  [key=2, style=dotted];
m4_342 -> m4_343  [key=0, style=solid];
m4_342 -> m4_272  [key=2, style=dotted];
m4_342 -> m4_342  [color=darkseagreen4, key=1, label=p, style=dashed];
m4_342 -> m4_344  [color=darkseagreen4, key=1, label=postTitles, style=dashed];
m4_345 -> m4_346  [key=0, style=solid];
m4_345 -> m4_258  [key=2, style=dotted];
m4_345 -> m4_355  [key=2, style=dotted];
m4_345 -> m4_56  [key=2, style=dotted];
m4_345 -> m4_345  [color=darkseagreen4, key=1, label=c, style=dashed];
m4_345 -> m4_347  [color=darkseagreen4, key=1, label=categories, style=dashed];
m4_345 -> m4_348  [color=darkseagreen4, key=1, label=categories, style=dashed];
m4_345 -> m4_349  [color=darkseagreen4, key=1, label=categories, style=dashed];
m4_345 -> m4_350  [color=darkseagreen4, key=1, label=categories, style=dashed];
m4_345 -> m4_351  [color=darkseagreen4, key=1, label=categories, style=dashed];
m4_343 -> m4_344  [key=0, style=solid];
m4_343 -> m4_354  [key=2, style=dotted];
m4_343 -> m4_28  [key=2, style=dotted];
m4_344 -> m4_345  [key=0, style=solid];
m4_344 -> m4_354  [key=2, style=dotted];
m4_344 -> m4_28  [key=2, style=dotted];
m4_346 -> m4_347  [key=0, style=solid];
m4_346 -> m4_354  [key=2, style=dotted];
m4_346 -> m4_28  [key=2, style=dotted];
m4_347 -> m4_348  [key=0, style=solid];
m4_347 -> m4_354  [key=2, style=dotted];
m4_347 -> m4_28  [key=2, style=dotted];
m4_348 -> m4_349  [key=0, style=solid];
m4_348 -> m4_354  [key=2, style=dotted];
m4_348 -> m4_28  [key=2, style=dotted];
m4_349 -> m4_350  [key=0, style=solid];
m4_349 -> m4_354  [key=2, style=dotted];
m4_349 -> m4_28  [key=2, style=dotted];
m4_350 -> m4_351  [key=0, style=solid];
m4_350 -> m4_354  [key=2, style=dotted];
m4_350 -> m4_28  [key=2, style=dotted];
m4_351 -> m4_352  [key=0, style=solid];
m4_351 -> m4_354  [key=2, style=dotted];
m4_351 -> m4_28  [key=2, style=dotted];
m4_352 -> m4_338  [color=blue, key=0, style=bold];
m4_261 -> m4_262  [key=0, style=solid];
m4_262 -> m4_263  [key=0, style=solid];
m4_262 -> m4_262  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_263 -> m4_264  [key=0, style=solid];
m4_263 -> m4_25  [key=2, style=dotted];
m4_263 -> m4_265  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_263 -> m4_267  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_263 -> m4_269  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_264 -> m4_265  [key=0, style=solid];
m4_264 -> m4_7  [key=2, style=dotted];
m4_264 -> m4_8  [key=2, style=dotted];
m4_265 -> m4_266  [key=0, style=solid];
m4_265 -> m4_272  [key=2, style=dotted];
m4_267 -> m4_268  [key=0, style=solid];
m4_267 -> m4_273  [key=2, style=dotted];
m4_269 -> m4_270  [key=0, style=solid];
m4_269 -> m4_273  [key=2, style=dotted];
m4_266 -> m4_267  [key=0, style=solid];
m4_266 -> m4_7  [key=2, style=dotted];
m4_266 -> m4_8  [key=2, style=dotted];
m4_268 -> m4_269  [key=0, style=solid];
m4_268 -> m4_7  [key=2, style=dotted];
m4_268 -> m4_28  [key=2, style=dotted];
m4_270 -> m4_271  [key=0, style=solid];
m4_270 -> m4_7  [key=2, style=dotted];
m4_270 -> m4_8  [key=2, style=dotted];
m4_271 -> m4_261  [color=blue, key=0, style=bold];
m4_306 -> m4_307  [key=0, style=solid];
m4_307 -> m4_308  [key=0, style=solid];
m4_307 -> m4_305  [key=2, style=dotted];
m4_308 -> m4_309  [key=0, style=solid];
m4_308 -> m4_6  [key=2, style=dotted];
m4_308 -> m4_310  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_309 -> m4_310  [key=0, style=solid];
m4_310 -> m4_311  [key=0, style=solid];
m4_310 -> m4_7  [key=2, style=dotted];
m4_311 -> m4_312  [key=0, style=solid];
m4_311 -> m4_8  [key=2, style=dotted];
m4_312 -> m4_306  [color=blue, key=0, style=bold];
m4_463 -> m4_464  [key=0, style=solid];
m4_464 -> m4_465  [key=0, style=solid];
m4_464 -> m4_6  [key=2, style=dotted];
m4_465 -> m4_466  [key=0, style=solid];
m4_465 -> m4_253  [key=2, style=dotted];
m4_466 -> m4_467  [key=0, style=solid];
m4_466 -> m4_56  [key=2, style=dotted];
m4_466 -> m4_28  [key=2, style=dotted];
m4_467 -> m4_463  [color=blue, key=0, style=bold];
m4_199 -> m4_200  [key=0, style=solid];
m4_200 -> m4_201  [key=0, style=solid];
m4_200 -> m4_205  [key=2, style=dotted];
m4_200 -> m4_172  [key=2, style=dotted];
m4_200 -> m4_197  [key=2, style=dotted];
m4_200 -> m4_202  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_201 -> m4_202  [key=0, style=solid];
m4_201 -> m4_206  [key=2, style=dotted];
m4_202 -> m4_203  [key=0, style=solid];
m4_202 -> m4_207  [key=2, style=dotted];
m4_202 -> m4_208  [key=2, style=dotted];
m4_203 -> m4_204  [key=0, style=solid];
m4_203 -> m4_28  [key=2, style=dotted];
m4_204 -> m4_199  [color=blue, key=0, style=bold];
m4_369 -> m4_370  [key=0, style=solid];
m4_370 -> m4_371  [key=0, style=solid];
m4_370 -> m4_372  [key=2, style=dotted];
m4_370 -> m4_373  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_371 -> m4_369  [color=blue, key=0, style=bold];
m4_186 -> m4_187  [key=0, style=solid];
m4_187 -> m4_188  [key=0, style=solid];
m4_187 -> m4_194  [key=2, style=dotted];
m4_187 -> m4_190  [color=darkseagreen4, key=1, label=array, style=dashed];
m4_187 -> m4_191  [color=darkseagreen4, key=1, label=array, style=dashed];
m4_187 -> m4_192  [color=darkseagreen4, key=1, label=array, style=dashed];
m4_188 -> m4_189  [key=0, style=solid];
m4_188 -> m4_195  [key=2, style=dotted];
m4_188 -> m4_190  [color=darkseagreen4, key=1, label=text, style=dashed];
m4_190 -> m4_191  [key=0, style=solid];
m4_190 -> m4_198  [key=2, style=dotted];
m4_191 -> m4_192  [key=0, style=solid];
m4_191 -> m4_198  [key=2, style=dotted];
m4_192 -> m4_193  [key=0, style=solid];
m4_192 -> m4_7  [key=2, style=dotted];
m4_189 -> m4_190  [key=0, style=solid];
m4_189 -> m4_196  [key=2, style=dotted];
m4_189 -> m4_197  [key=2, style=dotted];
m4_189 -> m4_191  [color=darkseagreen4, key=1, label=date, style=dashed];
m4_193 -> m4_186  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_5  [key=2, style=dotted];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_6  [key=2, style=dotted];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_7  [key=2, style=dotted];
m4_3 -> m4_8  [key=2, style=dotted];
m4_4 -> m4_0  [color=blue, key=0, style=bold];
m4_238 -> m4_239  [key=0, style=solid];
m4_239 -> m4_240  [key=0, style=solid];
m4_239 -> m4_239  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_240 -> m4_241  [key=0, style=solid];
m4_240 -> m4_25  [key=2, style=dotted];
m4_240 -> m4_245  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_240 -> m4_246  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_240 -> m4_249  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_241 -> m4_242  [key=0, style=solid];
m4_241 -> m4_252  [key=2, style=dotted];
m4_241 -> m4_225  [key=2, style=dotted];
m4_241 -> m4_243  [color=darkseagreen4, key=1, label=resultObjects, style=dashed];
m4_241 -> m4_244  [color=darkseagreen4, key=1, label=resultObjects, style=dashed];
m4_245 -> m4_246  [key=0, style=solid];
m4_245 -> m4_256  [key=2, style=dotted];
m4_245 -> m4_61  [key=2, style=dotted];
m4_245 -> m4_257  [key=2, style=dotted];
m4_245 -> m4_56  [key=2, style=dotted];
m4_245 -> m4_28  [key=2, style=dotted];
m4_246 -> m4_247  [key=0, style=solid];
m4_246 -> m4_258  [key=2, style=dotted];
m4_246 -> m4_259  [key=2, style=dotted];
m4_246 -> m4_225  [key=2, style=dotted];
m4_246 -> m4_248  [color=darkseagreen4, key=1, label=resultUrls, style=dashed];
m4_249 -> m4_250  [key=0, style=solid];
m4_249 -> m4_260  [key=2, style=dotted];
m4_249 -> m4_225  [key=2, style=dotted];
m4_242 -> m4_243  [key=0, style=solid];
m4_242 -> m4_253  [key=2, style=dotted];
m4_242 -> m4_56  [key=2, style=dotted];
m4_242 -> m4_28  [key=2, style=dotted];
m4_243 -> m4_244  [key=0, style=solid];
m4_243 -> m4_61  [key=2, style=dotted];
m4_243 -> m4_254  [key=2, style=dotted];
m4_243 -> m4_56  [key=2, style=dotted];
m4_243 -> m4_28  [key=2, style=dotted];
m4_244 -> m4_245  [key=0, style=solid];
m4_244 -> m4_61  [key=2, style=dotted];
m4_244 -> m4_255  [key=2, style=dotted];
m4_244 -> m4_56  [key=2, style=dotted];
m4_244 -> m4_28  [key=2, style=dotted];
m4_247 -> m4_248  [key=0, style=solid];
m4_247 -> m4_237  [key=2, style=dotted];
m4_248 -> m4_249  [key=0, style=solid];
m4_248 -> m4_28  [key=2, style=dotted];
m4_250 -> m4_251  [key=0, style=solid];
m4_250 -> m4_28  [key=2, style=dotted];
m4_251 -> m4_238  [color=blue, key=0, style=bold];
m4_578 -> m4_139  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_579 -> m4_157  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Linq.LinqToJsonTest", style=dashed];
m4_579 -> m4_158  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Linq.LinqToJsonTest", style=dashed];
m4_579 -> m4_159  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Linq.LinqToJsonTest", style=dashed];
m4_579 -> m4_160  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Linq.LinqToJsonTest", style=dashed];
m4_579 -> m4_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Linq.LinqToJsonTest", style=dashed];
m4_579 -> m4_423  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Linq.LinqToJsonTest", style=dashed];
m4_579 -> m4_436  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Linq.LinqToJsonTest", style=dashed];
m4_580 -> m4_523  [color=darkseagreen4, key=1, label=name, style=dashed];
m4_581 -> m4_523  [color=darkseagreen4, key=1, label=users, style=dashed];
m4_581 -> m4_524  [color=darkseagreen4, key=1, label=users, style=dashed];
m4_582 -> m4_576  [color=darkseagreen4, key=1, label=idProperty, style=dashed];
}
