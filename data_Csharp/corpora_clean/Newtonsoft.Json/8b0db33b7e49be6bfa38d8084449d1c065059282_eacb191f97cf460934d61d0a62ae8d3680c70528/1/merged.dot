digraph  {
n529 [label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", span=""];
n0 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.JsonSerializerInternalWriter(Newtonsoft.Json.JsonSerializer)", span="54-54", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.JsonSerializerInternalWriter(Newtonsoft.Json.JsonSerializer)"];
n1 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.JsonSerializerInternalWriter(Newtonsoft.Json.JsonSerializer)", span="54-54", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.JsonSerializerInternalWriter(Newtonsoft.Json.JsonSerializer)"];
n2 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", span="59-59", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)"];
n3 [label="jsonWriter == null", span="61-61", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)"];
n4 [label="throw new ArgumentNullException(nameof(jsonWriter));", span="63-63", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)"];
n5 [label="_rootType = objectType", span="66-66", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)"];
n7 [label="JsonContract contract = GetContractSafe(value)", span="69-69", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)"];
n8 [label="ShouldWriteReference(value, null, contract, null, null)", span="73-73", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)"];
n9 [label="WriteReference(jsonWriter, value)", span="75-75", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)"];
n10 [label="SerializeValue(jsonWriter, value, contract, null, null, null)", span="79-79", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)"];
n12 [label="IsErrorHandled(null, contract, null, null, jsonWriter.Path, ex)", span="84-84", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)"];
n13 [label="HandleError(jsonWriter, 0)", span="86-86", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)"];
n6 [label="_rootLevel = _serializeStack.Count + 1", span="67-67", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)"];
n19 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", span="115-115", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)"];
n20 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="239-239", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n11 [label=Exception, span="82-82", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)"];
n16 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", span="59-59", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)"];
n22 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="147-147", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n21 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", span="350-350", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)"];
n14 [label="ClearErrorContext()", span="93-93", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", color=red, community=0];
n23 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", span="108-108", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)"];
n15 [label="throw;", span="94-94", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)"];
n25 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", span="98-98", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()"];
n17 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
n18 [label="Entry Unk.nameof", span="", cluster="Unk.nameof"];
n24 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", span="1191-1191", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)"];
n26 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", span="105-105", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()"];
n27 [label="InternalSerializer == null", span="107-107", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()"];
n28 [label="InternalSerializer = new JsonSerializerProxy(this)", span="109-109", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()"];
n29 [label="return InternalSerializer;", span="112-112", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()"];
n31 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalWriter)", span="247-247", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalWriter)"];
n30 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", span="105-105", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()"];
n32 [label="value == null", span="117-117", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)"];
n34 [label="return Serializer._contractResolver.ResolveContract(value.GetType());", span="122-122", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)"];
n33 [label="return null;", span="119-119", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)"];
n35 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", span="115-115", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)"];
n36 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()"];
n37 [label="Entry Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", span="43-43", cluster="Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)"];
n38 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="125-125", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n39 [label="contract.TypeCode == PrimitiveTypeCode.Bytes", span="127-127", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n40 [label="bool includeTypeDetails = ShouldWriteType(TypeNameHandling.Objects, contract, member, containerContract, containerProperty)", span="130-130", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n42 [label="writer.WriteStartObject()", span="133-133", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n43 [label="WriteTypeProperty(writer, contract.CreatedType)", span="134-134", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n44 [label="writer.WritePropertyName(JsonTypeReflector.ValuePropertyName, false)", span="135-135", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n45 [label="JsonWriter.WriteValue(writer, contract.TypeCode, value)", span="137-137", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n46 [label="writer.WriteEndObject()", span="139-139", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n48 [label="JsonWriter.WriteValue(writer, contract.TypeCode, value)", span="144-144", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n41 [label=includeTypeDetails, span="131-131", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n50 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="999-999", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n51 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="418-418", cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()"];
n52 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", span="616-616", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)"];
n53 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string, bool)", span="478-478", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string, bool)"];
n54 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", span="1466-1466", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)"];
n47 [label="return;", span="140-140", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n55 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="426-426", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()"];
n49 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="125-125", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n56 [label="value == null", span="149-149", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n57 [label="writer.WriteNull()", span="151-151", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n59 [label="JsonConverter converter =\r\n                member?.Converter ??\r\n                containerProperty?.ItemConverter ??\r\n                containerContract?.ItemConverter ??\r\n                valueContract.Converter ??\r\n                Serializer.GetMatchingConverter(valueContract.UnderlyingType) ??\r\n                valueContract.InternalConverter", span="155-161", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n61 [label="SerializeConvertable(writer, converter, value, valueContract, containerContract, containerProperty)", span="165-165", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n63 [label="valueContract.ContractType", span="169-169", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n65 [label="SerializeObject(writer, value, (JsonObjectContract)valueContract, member, containerContract, containerProperty)", span="172-172", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n67 [label="JsonArrayContract arrayContract = (JsonArrayContract)valueContract", span="175-175", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n69 [label="SerializeList(writer, (IEnumerable)value, arrayContract, member, containerContract, containerProperty)", span="178-178", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n70 [label="SerializeMultidimensionalArray(writer, (Array)value, arrayContract, member, containerContract, containerProperty)", span="182-182", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n72 [label="SerializePrimitive(writer, value, (JsonPrimitiveContract)valueContract, member, containerContract, containerProperty)", span="186-186", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n74 [label="SerializeString(writer, value, (JsonStringContract)valueContract)", span="189-189", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n76 [label="JsonDictionaryContract dictionaryContract = (JsonDictionaryContract)valueContract", span="192-192", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n77 [label="SerializeDictionary(writer, (value is IDictionary) ? (IDictionary)value : dictionaryContract.CreateWrapper(value), dictionaryContract, member, containerContract, containerProperty)", span="193-193", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n79 [label="((JToken)value).WriteTo(writer, Serializer.Converters.ToArray())", span="206-206", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n58 [label="return;", span="152-152", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n81 [label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="891-891", cluster="Newtonsoft.Json.JsonWriter.WriteNull()"];
n60 [label="converter != null && converter.CanWrite", span="163-163", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n82 [label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", span="1154-1154", cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)"];
n62 [label="return;", span="166-166", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n83 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="644-644", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n64 [label="JsonContractType.Object", span="171-171", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n66 [label="JsonContractType.Array", span="174-174", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n71 [label="JsonContractType.Primitive", span="185-185", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n73 [label="JsonContractType.String", span="188-188", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n75 [label="JsonContractType.Dictionary", span="191-191", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n78 [label="JsonContractType.Linq", span="205-205", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n68 [label="!arrayContract.IsMultidimensionalArray", span="176-176", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n80 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="147-147", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n85 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="675-675", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n88 [label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", span="219-219", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)"];
n89 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="1043-1043", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n86 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="739-739", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n87 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", span="416-416", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)"];
n84 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="447-447", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n90 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="829-829", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()"];
n91 [label="Entry Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="414-414", cluster="Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])"];
n92 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="211-211", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n93 [label="bool? isReference = null", span="213-213", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n94 [label="property != null", span="216-216", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n95 [label="isReference = property.IsReference", span="218-218", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n96 [label="isReference == null && containerProperty != null", span="221-221", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n97 [label="isReference = containerProperty.ItemIsReference", span="223-223", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n98 [label="isReference == null && collectionContract != null", span="226-226", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n99 [label="isReference = collectionContract.ItemIsReference", span="228-228", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n101 [label="isReference = contract.IsReference", span="233-233", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n100 [label="isReference == null", span="231-231", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n102 [label="return isReference;", span="236-236", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n103 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="211-211", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n104 [label="value == null", span="241-241", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n106 [label="valueContract.ContractType == JsonContractType.Primitive || valueContract.ContractType == JsonContractType.String", span="245-245", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n108 [label="bool? isReference = ResolveIsReference(valueContract, property, collectionContract, containerProperty)", span="250-250", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n110 [label="valueContract.ContractType == JsonContractType.Array", span="254-254", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n115 [label="return Serializer.GetReferenceResolver().IsReferenced(this, value);", span="269-269", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n105 [label="return false;", span="243-243", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n107 [label="return false;", span="247-247", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n109 [label="isReference == null", span="252-252", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n113 [label="!isReference.GetValueOrDefault()", span="264-264", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n111 [label="isReference = HasFlag(Serializer._preserveReferencesHandling, PreserveReferencesHandling.Arrays)", span="256-256", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n112 [label="isReference = HasFlag(Serializer._preserveReferencesHandling, PreserveReferencesHandling.Objects)", span="260-260", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n117 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", span="634-634", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)"];
n114 [label="return false;", span="266-266", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n118 [label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0", cluster="System.Nullable<T>.GetValueOrDefault()"];
n116 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="239-239", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n119 [label="Entry Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", span="1144-1144", cluster="Newtonsoft.Json.JsonSerializer.GetReferenceResolver()"];
n120 [label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.IsReferenced(object, object)", span="56-56", cluster="Newtonsoft.Json.Serialization.IReferenceResolver.IsReferenced(object, object)"];
n121 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty(object, Newtonsoft.Json.Serialization.JsonProperty)", span="272-272", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty(object, Newtonsoft.Json.Serialization.JsonProperty)"];
n122 [label="property.NullValueHandling.GetValueOrDefault(Serializer._nullValueHandling) == NullValueHandling.Ignore &&\r\n                memberValue == null", span="274-275", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty(object, Newtonsoft.Json.Serialization.JsonProperty)"];
n124 [label="HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Ignore)\r\n                && MiscellaneousUtils.ValueEquals(memberValue, property.GetResolvedDefaultValue())", span="280-281", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty(object, Newtonsoft.Json.Serialization.JsonProperty)"];
n123 [label="return false;", span="277-277", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty(object, Newtonsoft.Json.Serialization.JsonProperty)"];
n128 [label="Entry System.Nullable<T>.GetValueOrDefault(T)", span="0-0", cluster="System.Nullable<T>.GetValueOrDefault(T)"];
n125 [label="return false;", span="283-283", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty(object, Newtonsoft.Json.Serialization.JsonProperty)"];
n126 [label="return true;", span="286-286", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty(object, Newtonsoft.Json.Serialization.JsonProperty)"];
n129 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", span="629-629", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)"];
n130 [label="Entry Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", span="172-172", cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()"];
n131 [label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.ValueEquals(object, object)", span="39-39", cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.ValueEquals(object, object)"];
n127 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty(object, Newtonsoft.Json.Serialization.JsonProperty)", span="272-272", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty(object, Newtonsoft.Json.Serialization.JsonProperty)"];
n132 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="289-289", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n133 [label="value == null || contract.ContractType == JsonContractType.Primitive || contract.ContractType == JsonContractType.String", span="291-291", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n136 [label="property != null", span="298-298", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n137 [label="referenceLoopHandling = property.ReferenceLoopHandling", span="300-300", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n138 [label="referenceLoopHandling == null && containerProperty != null", span="303-303", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n139 [label="referenceLoopHandling = containerProperty.ItemReferenceLoopHandling", span="305-305", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n140 [label="referenceLoopHandling == null && containerContract != null", span="308-308", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n141 [label="referenceLoopHandling = containerContract.ItemReferenceLoopHandling", span="310-310", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n142 [label="bool exists = (Serializer._equalityComparer != null)\r\n                ? _serializeStack.Contains(value, Serializer._equalityComparer)\r\n                : _serializeStack.Contains(value)", span="313-315", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n145 [label="property != null", span="320-320", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n146 [label="message += '' for property '{0}'''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName)", span="322-322", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n147 [label="message += '' with type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, value.GetType())", span="324-324", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n150 [label="throw JsonSerializationException.Create(null, writer.ContainerPath, message, null);", span="329-329", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n153 [label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, message + ''. Skipping serializing self referenced value.''), null)", span="333-333", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n157 [label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, message + ''. Serializing self referenced value.''), null)", span="340-340", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n134 [label="return true;", span="293-293", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n135 [label="ReferenceLoopHandling? referenceLoopHandling = null", span="296-296", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n148 [label="referenceLoopHandling.GetValueOrDefault(Serializer._referenceLoopHandling)", span="326-326", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n143 [label=exists, span="317-317", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n161 [label="Entry System.Collections.Generic.List<T>.Contains<T>(T, System.Collections.IEqualityComparer)", span="229-229", cluster="System.Collections.Generic.List<T>.Contains<T>(T, System.Collections.IEqualityComparer)"];
n162 [label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Contains(T)"];
n144 [label="string message = ''Self referencing loop detected''", span="319-319", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n159 [label="return true;", span="347-347", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n163 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)"];
n149 [label="ReferenceLoopHandling.Error", span="328-328", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n151 [label="ReferenceLoopHandling.Ignore", span="330-330", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n155 [label="ReferenceLoopHandling.Serialize", span="337-337", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n152 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="331-331", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n154 [label="return false;", span="336-336", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n165 [label="Entry Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", span="139-139", cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)"];
n166 [label="Entry Newtonsoft.Json.Serialization.ITraceWriter.Trace(Newtonsoft.Json.TraceLevel, string, System.Exception)", span="25-25", cluster="Newtonsoft.Json.Serialization.ITraceWriter.Trace(Newtonsoft.Json.TraceLevel, string, System.Exception)"];
n156 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="338-338", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n158 [label="return true;", span="343-343", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n160 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="289-289", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n164 [label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", span="92-92", cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)"];
n167 [label="string reference = GetReference(writer, value)", span="352-352", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)"];
n169 [label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(null, writer.Path, ''Writing object reference to Id '{0}' for {1}.''.FormatWith(CultureInfo.InvariantCulture, reference, value.GetType())), null)", span="356-356", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)"];
n170 [label="writer.WriteStartObject()", span="359-359", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)"];
n171 [label="writer.WritePropertyName(JsonTypeReflector.RefPropertyName, false)", span="360-360", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)"];
n172 [label="writer.WriteValue(reference)", span="361-361", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)"];
n173 [label="writer.WriteEndObject()", span="362-362", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)"];
n168 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="354-354", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)"];
n175 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)", span="365-365", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)"];
n176 [label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52", cluster="string.FormatWith(System.IFormatProvider, object, object)"];
n177 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="929-929", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)"];
n174 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", span="350-350", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)"];
n178 [label="string reference = Serializer.GetReferenceResolver().GetReference(this, value)", span="369-369", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)"];
n181 [label="throw JsonSerializationException.Create(null, writer.ContainerPath, ''Error writing object reference for '{0}'.''.FormatWith(CultureInfo.InvariantCulture, value.GetType()), ex);", span="375-375", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)"];
n179 [label="return reference;", span="371-371", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)"];
n183 [label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.GetReference(object, object)", span="46-46", cluster="Newtonsoft.Json.Serialization.IReferenceResolver.GetReference(object, object)"];
n180 [label=Exception, span="373-373", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)"];
n182 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)", span="365-365", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)"];
n184 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", span="379-379", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)"];
n185 [label="type = value as Type", span="405-405", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)"];
n186 [label="type != null", span="406-406", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)"];
n187 [label="s = type.AssemblyQualifiedName", span="408-408", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)"];
n189 [label="s = null", span="412-412", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)"];
n188 [label="return true;", span="409-409", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)"];
n190 [label="return false;", span="413-413", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)"];
n191 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", span="379-379", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)"];
n192 [label="OnSerializing(writer, contract, value)", span="418-418", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)"];
n194 [label="TryConvertToString(value, contract.UnderlyingType, out s)", span="421-421", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)"];
n195 [label="writer.WriteValue(s)", span="422-422", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)"];
n196 [label="OnSerialized(writer, contract, value)", span="424-424", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)"];
n193 [label="string s", span="420-420", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)"];
n198 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", span="427-427", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)"];
n197 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", span="416-416", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)"];
n199 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", span="437-437", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)"];
n200 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="429-429", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)"];
n201 [label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(null, writer.Path, ''Started serializing {0}''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="431-431", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)"];
n202 [label="contract.InvokeOnSerializing(value, Serializer._context)", span="434-434", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)"];
n203 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", span="427-427", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)"];
n204 [label="Entry Newtonsoft.Json.Serialization.JsonContract.InvokeOnSerializing(object, System.Runtime.Serialization.StreamingContext)", span="326-326", cluster="Newtonsoft.Json.Serialization.JsonContract.InvokeOnSerializing(object, System.Runtime.Serialization.StreamingContext)"];
n205 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="439-439", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)"];
n206 [label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(null, writer.Path, ''Finished serializing {0}''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="441-441", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)"];
n207 [label="contract.InvokeOnSerialized(value, Serializer._context)", span="444-444", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)"];
n208 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", span="437-437", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)"];
n209 [label="Entry Newtonsoft.Json.Serialization.JsonContract.InvokeOnSerialized(object, System.Runtime.Serialization.StreamingContext)", span="337-337", cluster="Newtonsoft.Json.Serialization.JsonContract.InvokeOnSerialized(object, System.Runtime.Serialization.StreamingContext)"];
n210 [label="OnSerializing(writer, contract, value)", span="449-449", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n211 [label="_serializeStack.Add(value)", span="451-451", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n212 [label="WriteObjectStart(writer, value, contract, member, collectionContract, containerProperty)", span="453-453", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n213 [label="int initialDepth = writer.Top", span="455-455", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n215 [label="index < contract.Properties.Count", span="457-457", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n216 [label="JsonProperty property = contract.Properties[index]", span="459-459", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n219 [label="!CalculatePropertyValues(writer, value, contract, member, property, out memberContract, out memberValue)", span="465-465", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n220 [label="property.WritePropertyName(writer)", span="470-470", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n221 [label="SerializeValue(writer, memberValue, memberContract, property, contract, member)", span="471-471", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n223 [label="IsErrorHandled(value, contract, property.PropertyName, null, writer.ContainerPath, ex)", span="475-475", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n224 [label="HandleError(writer, initialDepth)", span="477-477", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n227 [label="IEnumerable<KeyValuePair<object, object>> extensionData = contract.ExtensionDataGetter?.Invoke(value)", span="486-486", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n233 [label="string propertyName = GetPropertyName(writer, e.Key, keyContract, out escape)", span="495-495", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n234 [label="propertyName = (contract.ExtensionDataNameResolver != null)\r\n                        ? contract.ExtensionDataNameResolver(propertyName)\r\n                        : propertyName", span="497-499", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n235 [label="ShouldWriteReference(e.Value, null, valueContract, contract, member)", span="501-501", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n236 [label="writer.WritePropertyName(propertyName)", span="503-503", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n237 [label="WriteReference(writer, e.Value)", span="504-504", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n238 [label="!CheckForCircularReference(writer, e.Value, null, valueContract, contract, member)", span="508-508", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n239 [label="writer.WritePropertyName(propertyName)", span="513-513", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n240 [label="SerializeValue(writer, e.Value, valueContract, null, contract, member)", span="515-515", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n241 [label="writer.WriteEndObject()", span="520-520", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n243 [label="OnSerialized(writer, contract, value)", span="524-524", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n245 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)"];
n246 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="576-576", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n214 [label="int index = 0", span="457-457", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n226 [label="index++", span="457-457", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n217 [label="object memberValue", span="462-462", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n218 [label="JsonContract memberContract", span="463-463", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n247 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", span="527-527", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)"];
n248 [label="Entry Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", span="295-295", cluster="Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)"];
n222 [label=Exception, span="473-473", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n225 [label="throw;", span="481-481", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n228 [label="extensionData != null", span="487-487", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n249 [label="Entry Newtonsoft.Json.Serialization.ExtensionDataGetter.Invoke(object)", span="75-75", cluster="Newtonsoft.Json.Serialization.ExtensionDataGetter.Invoke(object)"];
n229 [label=extensionData, span="489-489", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n230 [label="JsonContract keyContract = GetContractSafe(e.Key)", span="491-491", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n231 [label="JsonContract valueContract = GetContractSafe(e.Value)", span="492-492", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n232 [label="bool escape", span="494-494", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n250 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", span="1127-1127", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)"];
n251 [label="Entry Newtonsoft.Json.Serialization.Func<T, TResult>.Invoke(T)", span="3040-3040", cluster="Newtonsoft.Json.Serialization.Func<T, TResult>.Invoke(T)"];
n252 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="468-468", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)"];
n242 [label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="522-522", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n253 [label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0", cluster="System.Collections.Generic.List<T>.RemoveAt(int)"];
n244 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="447-447", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n254 [label="!property.Ignored && property.Readable && ShouldSerialize(writer, property, value) && IsSpecified(writer, property, value)", span="529-529", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)"];
n255 [label="property.PropertyContract == null", span="531-531", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)"];
n256 [label="property.PropertyContract = Serializer._contractResolver.ResolveContract(property.PropertyType)", span="533-533", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)"];
n257 [label="memberValue = property.ValueProvider.GetValue(value)", span="536-536", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)"];
n258 [label="memberContract = (property.PropertyContract.IsSealed) ? property.PropertyContract : GetContractSafe(memberValue)", span="537-537", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)"];
n259 [label="ShouldWriteProperty(memberValue, property)", span="539-539", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)"];
n260 [label="ShouldWriteReference(memberValue, property, memberContract, contract, member)", span="541-541", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)"];
n261 [label="property.WritePropertyName(writer)", span="543-543", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)"];
n262 [label="WriteReference(writer, memberValue)", span="544-544", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)"];
n264 [label="!CheckForCircularReference(writer, memberValue, property, memberContract, contract, member)", span="548-548", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)"];
n267 [label="JsonObjectContract objectContract = contract as JsonObjectContract", span="555-555", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)"];
n268 [label="Required resolvedRequired = property._required ?? objectContract?.ItemRequired ?? Required.Default", span="556-556", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)"];
n270 [label="throw JsonSerializationException.Create(null, writer.ContainerPath, ''Cannot write a null value for property '{0}'. Property requires a value.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName), null);", span="559-559", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)"];
n272 [label="throw JsonSerializationException.Create(null, writer.ContainerPath, ''Cannot write a null value for property '{0}'. Property requires a non-null value.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName), null);", span="563-563", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)"];
n274 [label="memberContract = null", span="571-571", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)"];
n278 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", span="1206-1206", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)"];
n279 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", span="1223-1223", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)"];
n280 [label="Entry Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", span="44-44", cluster="Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)"];
n266 [label="memberValue == null", span="553-553", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)"];
n263 [label="return false;", span="545-545", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)"];
n265 [label="return false;", span="550-550", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)"];
n273 [label="return true;", span="567-567", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)"];
n269 [label="resolvedRequired == Required.Always", span="557-557", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)"];
n271 [label="resolvedRequired == Required.DisallowNull", span="561-561", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)"];
n275 [label="memberValue = null", span="572-572", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)"];
n277 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", span="527-527", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)"];
n276 [label="return false;", span="573-573", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)"];
n281 [label="writer.WriteStartObject()", span="578-578", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n282 [label="bool isReference = ResolveIsReference(contract, member, collectionContract, containerProperty) ?? HasFlag(Serializer._preserveReferencesHandling, PreserveReferencesHandling.Objects)", span="580-580", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n283 [label="isReference && (member == null || member.Writable || HasCreatorParameter(collectionContract, member))", span="582-582", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n284 [label="WriteReferenceIdProperty(writer, contract.UnderlyingType, value)", span="584-584", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n285 [label="ShouldWriteType(TypeNameHandling.Objects, contract, member, collectionContract, containerProperty)", span="586-586", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n286 [label="WriteTypeProperty(writer, contract.UnderlyingType)", span="588-588", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n288 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasCreatorParameter(Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="592-592", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasCreatorParameter(Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n289 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", span="603-603", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)"];
n287 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="576-576", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n290 [label="JsonObjectContract objectContract = contract as JsonObjectContract", span="594-594", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasCreatorParameter(Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n293 [label="return objectContract.CreatorParameters.Contains(property.PropertyName);", span="600-600", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasCreatorParameter(Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n291 [label="objectContract == null", span="595-595", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasCreatorParameter(Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n292 [label="return false;", span="597-597", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasCreatorParameter(Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n294 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasCreatorParameter(Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="592-592", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasCreatorParameter(Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n295 [label="Entry System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Contains(TKey)", span="0-0", cluster="System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Contains(TKey)"];
n296 [label="string reference = GetReference(writer, value)", span="605-605", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)"];
n298 [label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, ''Writing object reference Id '{0}' for {1}.''.FormatWith(CultureInfo.InvariantCulture, reference, type)), null)", span="609-609", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)"];
n299 [label="writer.WritePropertyName(JsonTypeReflector.IdPropertyName, false)", span="612-612", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)"];
n300 [label="writer.WriteValue(reference)", span="613-613", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)"];
n297 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="607-607", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)"];
n301 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", span="603-603", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)"];
n302 [label="string typeName = ReflectionUtils.GetTypeName(type, Serializer._typeNameAssemblyFormatHandling, Serializer._serializationBinder)", span="618-618", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)"];
n304 [label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, ''Writing type name '{0}' for {1}.''.FormatWith(CultureInfo.InvariantCulture, typeName, type)), null)", span="622-622", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)"];
n305 [label="writer.WritePropertyName(JsonTypeReflector.TypePropertyName, false)", span="625-625", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)"];
n306 [label="writer.WriteValue(typeName)", span="626-626", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)"];
n303 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="620-620", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)"];
n308 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)", span="147-147", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)"];
n307 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", span="616-616", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)"];
n309 [label="return ((value & flag) == flag);", span="631-631", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)"];
n310 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", span="629-629", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)"];
n311 [label="return ((value & flag) == flag);", span="636-636", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)"];
n312 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", span="634-634", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)"];
n313 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", span="639-639", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)"];
n314 [label="return ((value & flag) == flag);", span="641-641", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)"];
n315 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", span="639-639", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)"];
n316 [label="ShouldWriteReference(value, null, contract, collectionContract, containerProperty)", span="646-646", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n317 [label="WriteReference(writer, value)", span="648-648", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n318 [label="!CheckForCircularReference(writer, value, null, contract, collectionContract, containerProperty)", span="652-652", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n320 [label="_serializeStack.Add(value)", span="657-657", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n322 [label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(null, writer.Path, ''Started serializing {0} with converter {1}.''.FormatWith(CultureInfo.InvariantCulture, value.GetType(), converter.GetType())), null)", span="661-661", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n323 [label="converter.WriteJson(writer, value, GetInternalSerializer())", span="664-664", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n325 [label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(null, writer.Path, ''Finished serializing {0} with converter {1}.''.FormatWith(CultureInfo.InvariantCulture, value.GetType(), converter.GetType())), null)", span="668-668", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n319 [label="return;", span="654-654", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n321 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="659-659", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n324 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="666-666", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n328 [label="Entry Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="44-44", cluster="Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)"];
n326 [label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="671-671", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n327 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="644-644", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n329 [label="IWrappedCollection wrappedCollection = values as IWrappedCollection", span="677-677", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n330 [label="object underlyingList = wrappedCollection != null ? wrappedCollection.UnderlyingCollection : values", span="678-678", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n331 [label="OnSerializing(writer, contract, underlyingList)", span="680-680", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n333 [label="bool hasWrittenMetadataObject = WriteStartArray(writer, underlyingList, contract, member, collectionContract, containerProperty)", span="684-684", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n334 [label="writer.WriteStartArray()", span="686-686", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n335 [label="int initialDepth = writer.Top", span="688-688", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n337 [label=values, span="692-692", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n338 [label="JsonContract valueContract = contract.FinalItemContract ?? GetContractSafe(value)", span="696-696", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n339 [label="ShouldWriteReference(value, null, valueContract, contract, member)", span="698-698", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n340 [label="WriteReference(writer, value)", span="700-700", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n341 [label="CheckForCircularReference(writer, value, null, valueContract, contract, member)", span="704-704", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n342 [label="SerializeValue(writer, value, valueContract, null, contract, member)", span="706-706", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n344 [label="IsErrorHandled(underlyingList, contract, index, null, writer.ContainerPath, ex)", span="712-712", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n345 [label="HandleError(writer, initialDepth)", span="714-714", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n347 [label="writer.WriteEndArray()", span="727-727", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n349 [label="writer.WriteEndObject()", span="731-731", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n351 [label="OnSerialized(writer, contract, underlyingList)", span="736-736", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n332 [label="_serializeStack.Add(underlyingList)", span="682-682", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n353 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="816-816", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n348 [label=hasWrittenMetadataObject, span="729-729", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n354 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="434-434", cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()"];
n336 [label="int index = 0", span="690-690", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n343 [label=Exception, span="710-710", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n346 [label="throw;", span="718-718", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n355 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="442-442", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()"];
n350 [label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="734-734", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n352 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="675-675", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n356 [label="OnSerializing(writer, contract, values)", span="741-741", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n357 [label="_serializeStack.Add(values)", span="743-743", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n358 [label="bool hasWrittenMetadataObject = WriteStartArray(writer, values, contract, member, collectionContract, containerProperty)", span="745-745", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n359 [label="SerializeMultidimensionalArray(writer, values, contract, member, writer.Top, CollectionUtils.ArrayEmpty<int>())", span="747-747", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n361 [label="writer.WriteEndObject()", span="751-751", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n363 [label="OnSerialized(writer, contract, values)", span="756-756", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n360 [label=hasWrittenMetadataObject, span="749-749", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n365 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ArrayEmpty<T>()", span="362-362", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ArrayEmpty<T>()"];
n366 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", span="759-759", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])"];
n362 [label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="754-754", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n364 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="739-739", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n367 [label="int dimension = indices.Length", span="761-761", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])"];
n371 [label="newIndices[i] = indices[i]", span="765-765", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])"];
n373 [label="writer.WriteStartArray()", span="768-768", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])"];
n374 [label="int i = values.GetLowerBound(dimension)", span="770-770", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])"];
n375 [label="i <= values.GetUpperBound(dimension)", span="770-770", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])"];
n377 [label="bool isTopLevel = (newIndices.Length == values.Rank)", span="773-773", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])"];
n379 [label="object value = values.GetValue(newIndices)", span="777-777", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])"];
n380 [label="JsonContract valueContract = contract.FinalItemContract ?? GetContractSafe(value)", span="781-781", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])"];
n381 [label="ShouldWriteReference(value, null, valueContract, contract, member)", span="783-783", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])"];
n382 [label="WriteReference(writer, value)", span="785-785", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])"];
n383 [label="CheckForCircularReference(writer, value, null, valueContract, contract, member)", span="789-789", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])"];
n384 [label="SerializeValue(writer, value, valueContract, null, contract, member)", span="791-791", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])"];
n386 [label="IsErrorHandled(values, contract, i, null, writer.ContainerPath, ex)", span="797-797", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])"];
n387 [label="HandleError(writer, initialDepth + 1)", span="799-799", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])"];
n389 [label="SerializeMultidimensionalArray(writer, values, contract, member, initialDepth + 1, newIndices)", span="809-809", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])"];
n391 [label="writer.WriteEndArray()", span="813-813", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])"];
n368 [label="int[] newIndices = new int[dimension + 1]", span="762-762", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])"];
n370 [label="i < dimension", span="763-763", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])"];
n376 [label="newIndices[dimension] = i", span="772-772", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])"];
n369 [label="int i = 0", span="763-763", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])"];
n372 [label="i++", span="763-763", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])"];
n393 [label="Entry System.Array.GetLowerBound(int)", span="0-0", cluster="System.Array.GetLowerBound(int)"];
n390 [label="i++", span="770-770", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])"];
n394 [label="Entry System.Array.GetUpperBound(int)", span="0-0", cluster="System.Array.GetUpperBound(int)"];
n378 [label=isTopLevel, span="775-775", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])"];
n395 [label="Entry System.Array.GetValue(params int[])", span="0-0", cluster="System.Array.GetValue(params int[])"];
n385 [label=Exception, span="795-795", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])"];
n388 [label="throw;", span="803-803", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])"];
n392 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", span="759-759", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])"];
n396 [label="bool isReference = ResolveIsReference(contract, member, containerContract, containerProperty) ?? HasFlag(Serializer._preserveReferencesHandling, PreserveReferencesHandling.Arrays)", span="818-818", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n397 [label="isReference = (isReference && (member == null || member.Writable || HasCreatorParameter(containerContract, member)))", span="820-820", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n398 [label="bool includeTypeDetails = ShouldWriteType(TypeNameHandling.Arrays, contract, member, containerContract, containerProperty)", span="822-822", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n401 [label="writer.WriteStartObject()", span="827-827", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n403 [label="WriteReferenceIdProperty(writer, contract.UnderlyingType, values)", span="831-831", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n405 [label="WriteTypeProperty(writer, values.GetType())", span="835-835", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n406 [label="writer.WritePropertyName(JsonTypeReflector.ArrayValuesPropertyName, false)", span="837-837", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n407 [label="contract.ItemContract == null", span="840-840", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n408 [label="contract.ItemContract = Serializer._contractResolver.ResolveContract(contract.CollectionItemType ?? typeof(object))", span="842-842", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n399 [label="bool writeMetadataObject = isReference || includeTypeDetails", span="823-823", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n402 [label=isReference, span="829-829", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n404 [label=includeTypeDetails, span="833-833", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n400 [label=writeMetadataObject, span="825-825", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n409 [label="return writeMetadataObject;", span="845-845", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n410 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="816-816", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n411 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", span="983-983", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)"];
n412 [label="Serializer._nullValueHandling == NullValueHandling.Ignore && memberValue == null", span="985-985", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)"];
n414 [label="HasFlag(Serializer._defaultValueHandling, DefaultValueHandling.Ignore) &&\r\n                (memberValue == null || MiscellaneousUtils.ValueEquals(memberValue, ReflectionUtils.GetDefaultValue(memberValue.GetType())))", span="990-991", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)"];
n413 [label="return false;", span="987-987", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)"];
n415 [label="return false;", span="993-993", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)"];
n416 [label="return true;", span="996-996", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)"];
n418 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", span="1078-1078", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)"];
n417 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", span="983-983", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)"];
n419 [label="TypeNameHandling resolvedTypeNameHandling =\r\n                member?.TypeNameHandling\r\n                ?? containerProperty?.ItemTypeNameHandling\r\n                ?? containerContract?.ItemTypeNameHandling\r\n                ?? Serializer._typeNameHandling", span="1001-1005", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n420 [label="HasFlag(resolvedTypeNameHandling, typeNameHandlingFlag)", span="1007-1007", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n423 [label="member != null", span="1015-1015", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n424 [label="contract.NonNullableUnderlyingType != member.PropertyContract.CreatedType", span="1017-1017", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n426 [label="containerContract != null", span="1022-1022", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n427 [label="containerContract.ItemContract == null || contract.NonNullableUnderlyingType != containerContract.ItemContract.CreatedType", span="1024-1024", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n431 [label="contract.NonNullableUnderlyingType != rootContract.CreatedType", span="1033-1033", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n422 [label="HasFlag(resolvedTypeNameHandling, TypeNameHandling.Auto)", span="1013-1013", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n421 [label="return true;", span="1009-1009", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n433 [label="return false;", span="1040-1040", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n425 [label="return true;", span="1019-1019", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n429 [label="_rootType != null && _serializeStack.Count == _rootLevel", span="1029-1029", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n428 [label="return true;", span="1026-1026", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n430 [label="JsonContract rootContract = Serializer._contractResolver.ResolveContract(_rootType)", span="1031-1031", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n432 [label="return true;", span="1035-1035", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n434 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="999-999", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n435 [label="IWrappedDictionary wrappedDictionary = values as IWrappedDictionary", span="1045-1045", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n436 [label="object underlyingDictionary = wrappedDictionary != null ? wrappedDictionary.UnderlyingDictionary : values", span="1046-1046", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n437 [label="OnSerializing(writer, contract, underlyingDictionary)", span="1048-1048", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n439 [label="WriteObjectStart(writer, underlyingDictionary, contract, member, collectionContract, containerProperty)", span="1051-1051", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n440 [label="contract.ItemContract == null", span="1053-1053", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n441 [label="contract.ItemContract = Serializer._contractResolver.ResolveContract(contract.DictionaryValueType ?? typeof(object))", span="1055-1055", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n442 [label="contract.KeyContract == null", span="1058-1058", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n443 [label="contract.KeyContract = Serializer._contractResolver.ResolveContract(contract.DictionaryKeyType ?? typeof(object))", span="1060-1060", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n444 [label="int initialDepth = writer.Top", span="1063-1063", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n445 [label="IDictionaryEnumerator e = values.GetEnumerator()", span="1066-1066", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n449 [label="string propertyName = GetPropertyName(writer, entry.Key, contract.KeyContract, out escape)", span="1074-1074", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n450 [label="propertyName = (contract.DictionaryKeyResolver != null)\r\n                        ? contract.DictionaryKeyResolver(propertyName)\r\n                        : propertyName", span="1076-1078", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n452 [label="JsonContract valueContract = contract.FinalItemContract ?? GetContractSafe(value)", span="1083-1083", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n453 [label="ShouldWriteReference(value, null, valueContract, contract, member)", span="1085-1085", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n454 [label="writer.WritePropertyName(propertyName, escape)", span="1087-1087", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n455 [label="WriteReference(writer, value)", span="1088-1088", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n456 [label="!CheckForCircularReference(writer, value, null, valueContract, contract, member)", span="1092-1092", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n457 [label="writer.WritePropertyName(propertyName, escape)", span="1097-1097", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n458 [label="SerializeValue(writer, value, valueContract, null, contract, member)", span="1099-1099", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n460 [label="IsErrorHandled(underlyingDictionary, contract, propertyName, null, writer.ContainerPath, ex)", span="1104-1104", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n461 [label="HandleError(writer, initialDepth)", span="1106-1106", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n463 [label="writer.WriteEndObject()", span="1120-1120", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n465 [label="OnSerialized(writer, contract, underlyingDictionary)", span="1124-1124", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n438 [label="_serializeStack.Add(underlyingDictionary)", span="1049-1049", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n446 [label="e.MoveNext()", span="1069-1069", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n467 [label="Entry System.Collections.IDictionary.GetEnumerator()", span="0-0", cluster="System.Collections.IDictionary.GetEnumerator()"];
n447 [label="DictionaryEntry entry = e.Entry", span="1071-1071", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n468 [label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0", cluster="System.Collections.IEnumerator.MoveNext()"];
n448 [label="bool escape", span="1073-1073", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n451 [label="object value = entry.Value", span="1082-1082", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n459 [label=Exception, span="1102-1102", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n462 [label="throw;", span="1110-1110", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n466 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="1043-1043", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n464 [label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="1122-1122", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)"];
n469 [label="string propertyName", span="1129-1129", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)"];
n470 [label="contract.ContractType == JsonContractType.Primitive", span="1131-1131", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)"];
n471 [label="JsonPrimitiveContract primitiveContract = (JsonPrimitiveContract)contract", span="1133-1133", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)"];
n475 [label="DateTime dt = DateTimeUtils.EnsureDateTime((DateTime)name, writer.DateTimeZoneHandling)", span="1139-1139", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)"];
n478 [label="DateTimeUtils.WriteDateTimeString(sw, dt, writer.DateFormatHandling, writer.DateFormatString, writer.Culture)", span="1143-1143", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)"];
n482 [label="double d = (double)name", span="1159-1159", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)"];
n487 [label="float f = (float)name", span="1167-1167", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)"];
n491 [label="return Convert.ToString(name, CultureInfo.InvariantCulture);", span="1175-1175", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)"];
n492 [label="TryConvertToString(name, name.GetType(), out propertyName)", span="1179-1179", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)"];
n496 [label="return name.ToString();", span="1187-1187", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)"];
n472 [label="primitiveContract.TypeCode", span="1134-1134", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)"];
n473 [label="PrimitiveTypeCode.DateTime", span="1136-1136", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)"];
n480 [label="PrimitiveTypeCode.Double", span="1156-1156", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)"];
n485 [label="PrimitiveTypeCode.Single", span="1164-1164", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)"];
n490 [label="escape = true", span="1174-1174", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)"];
n474 [label="PrimitiveTypeCode.DateTimeNullable", span="1137-1137", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)"];
n476 [label="escape = false", span="1141-1141", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)"];
n498 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", span="92-92", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)"];
n477 [label="StringWriter sw = new StringWriter(CultureInfo.InvariantCulture)", span="1142-1142", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)"];
n499 [label="Entry System.IO.StringWriter.StringWriter(System.IFormatProvider)", span="0-0", cluster="System.IO.StringWriter.StringWriter(System.IFormatProvider)"];
n479 [label="return sw.ToString();", span="1144-1144", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)"];
n500 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", span="631-631", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)"];
n481 [label="PrimitiveTypeCode.DoubleNullable", span="1157-1157", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)"];
n483 [label="escape = false", span="1161-1161", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)"];
n484 [label="return d.ToString(''R'', CultureInfo.InvariantCulture);", span="1162-1162", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)"];
n486 [label="PrimitiveTypeCode.SingleNullable", span="1165-1165", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)"];
n488 [label="escape = false", span="1169-1169", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)"];
n489 [label="return f.ToString(''R'', CultureInfo.InvariantCulture);", span="1170-1170", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)"];
n497 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", span="1127-1127", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)"];
n493 [label="escape = true", span="1181-1181", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)"];
n495 [label="escape = true", span="1186-1186", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)"];
n494 [label="return propertyName;", span="1182-1182", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)"];
n502 [label="Entry double.ToString(string, System.IFormatProvider)", span="0-0", cluster="double.ToString(string, System.IFormatProvider)"];
n505 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()"];
n504 [label="Entry System.Convert.ToString(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToString(object, System.IFormatProvider)"];
n501 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()"];
n503 [label="Entry float.ToString(string, System.IFormatProvider)", span="0-0", cluster="float.ToString(string, System.IFormatProvider)"];
n506 [label="ClearErrorContext()", span="1193-1193", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)"];
n507 [label="writer.WriteState == WriteState.Property", span="1195-1195", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)"];
n508 [label="writer.WriteNull()", span="1197-1197", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)"];
n509 [label="writer.Top > initialDepth", span="1200-1200", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)"];
n510 [label="writer.WriteEnd()", span="1202-1202", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)"];
n511 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", span="1191-1191", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)"];
n512 [label="Entry Newtonsoft.Json.JsonWriter.WriteEnd()", span="486-486", cluster="Newtonsoft.Json.JsonWriter.WriteEnd()"];
n513 [label="property.ShouldSerialize == null", span="1208-1208", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)"];
n515 [label="bool shouldSerialize = property.ShouldSerialize(target)", span="1213-1213", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)"];
n517 [label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, ''ShouldSerialize result for property '{0}' on {1}: {2}''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName, property.DeclaringType, shouldSerialize)), null)", span="1217-1217", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)"];
n514 [label="return true;", span="1210-1210", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)"];
n516 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="1215-1215", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)"];
n520 [label="Entry System.Predicate<T>.Invoke(T)", span="0-0", cluster="System.Predicate<T>.Invoke(T)"];
n518 [label="return shouldSerialize;", span="1220-1220", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)"];
n521 [label="Entry string.FormatWith(System.IFormatProvider, object, object, object)", span="57-57", cluster="string.FormatWith(System.IFormatProvider, object, object, object)"];
n519 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", span="1206-1206", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)"];
n522 [label="property.GetIsSpecified == null", span="1225-1225", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)"];
n524 [label="bool isSpecified = property.GetIsSpecified(target)", span="1230-1230", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)"];
n526 [label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, ''IsSpecified result for property '{0}' on {1}: {2}''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName, property.DeclaringType, isSpecified)), null)", span="1234-1234", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)"];
n523 [label="return true;", span="1227-1227", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)"];
n525 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="1232-1232", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)"];
n527 [label="return isSpecified;", span="1237-1237", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)"];
n528 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", span="1223-1223", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)"];
d14 [label="ClearErrorContext()", span="93-93", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", color=green, community=0];
d39 [label="contract.TypeCode == PrimitiveTypeCode.Bytes", span="127-127", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", color=green, community=0];
d40 [label="bool includeTypeDetails = ShouldWriteType(TypeNameHandling.Objects, contract, member, containerContract, containerProperty)", span="130-130", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", color=green, community=0];
d41 [label=includeTypeDetails, span="131-131", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", color=green, community=0];
d42 [label="writer.WriteStartObject()", span="133-133", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", color=green, community=0];
d43 [label="WriteTypeProperty(writer, contract.CreatedType)", span="134-134", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", color=green, community=0];
d44 [label="writer.WritePropertyName(JsonTypeReflector.ValuePropertyName, false)", span="135-135", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", color=green, community=0];
d45 [label="JsonWriter.WriteValue(writer, contract.TypeCode, value)", span="137-137", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", color=green, community=0];
m0_86 [label="Entry Newtonsoft.Json.Linq.JObject.Property(string)", span="258-258", cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="JTokenTests.cs"];
m0_679 [label="Entry Newtonsoft.Json.Linq.JContainer.Descendants()", span="289-289", cluster="Newtonsoft.Json.Linq.JContainer.Descendants()", file="JTokenTests.cs"];
m0_27 [label="v = (JValue)JToken.ReadFrom(new JsonTextReader(new StringReader(@''''''stringvalue'''''')))", span="94-94", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m0_272 [label="Entry System.Guid.Guid(string)", span="0-0", cluster="System.Guid.Guid(string)", file="JTokenTests.cs"];
m0_850 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", span="1102-1102", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", file="JTokenTests.cs"];
m0_854 [label="Assert.IsTrue(a.DeepEquals(a2))", span="1148-1148", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", file="JTokenTests.cs"];
m0_851 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3),\r\n                    new JObject(\r\n                        new JProperty(''First'', new JValue(Encoding.UTF8.GetBytes(''Hi''))),\r\n                        new JProperty(''Second'', 1),\r\n                        new JProperty(''Third'', null),\r\n                        new JProperty(''Fourth'', new JConstructor(''Date'', 12345)),\r\n                        new JProperty(''Fifth'', double.PositiveInfinity),\r\n                        new JProperty(''Sixth'', double.NaN)\r\n                        )\r\n                    )", span="1104-1118", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", file="JTokenTests.cs"];
m0_852 [label="JArray a2 = (JArray)a.DeepClone()", span="1120-1120", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", file="JTokenTests.cs"];
m0_853 [label="StringAssert.AreEqual(@''[\r\n  5,\r\n  [\r\n    1\r\n  ],\r\n  [\r\n    1,\r\n    2\r\n  ],\r\n  [\r\n    1,\r\n    2,\r\n    3\r\n  ],\r\n  {\r\n    ''''First'''': ''''SGk='''',\r\n    ''''Second'''': 1,\r\n    ''''Third'''': null,\r\n    ''''Fourth'''': new Date(\r\n      12345\r\n    ),\r\n    ''''Fifth'''': ''''Infinity'''',\r\n    ''''Sixth'''': ''''NaN''''\r\n  }\r\n]'', a2.ToString(Formatting.Indented))", span="1122-1146", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", file="JTokenTests.cs"];
m0_855 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", span="1102-1102", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", file="JTokenTests.cs"];
m0_53 [label="int offset = 0", span="242-242", cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="JTokenTests.cs"];
m0_356 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="JTokenTests.cs"];
m0_79 [label="Entry Unk.IsInstanceOf", span="", cluster="Unk.IsInstanceOf", file="JTokenTests.cs"];
m0_809 [label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="34-34", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="JTokenTests.cs"];
m0_12 [label="Assert.AreEqual(true, (bool)o[''pie''])", span="73-73", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m0_13 [label="JArray a = (JArray)JToken.ReadFrom(new JsonTextReader(new StringReader(''[1,2,3]'')))", span="75-75", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m0_14 [label="Assert.AreEqual(1, (int)a[0])", span="76-76", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m0_269 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="JTokenTests.cs"];
m0_102 [label="return s;", span="347-347", cluster="Newtonsoft.Json.Tests.StringAssert.Normalize(string)", file="JTokenTests.cs"];
m0_770 [label="Entry Newtonsoft.Json.Linq.JContainer.RemoveAll()", span="730-730", cluster="Newtonsoft.Json.Linq.JContainer.RemoveAll()", file="JTokenTests.cs"];
m0_276 [label="Entry System.Convert.ToBase64String(byte[])", span="0-0", cluster="System.Convert.ToBase64String(byte[])", file="JTokenTests.cs"];
m0_739 [label="Entry Newtonsoft.Json.Linq.JContainer.CreateWriter()", span="712-712", cluster="Newtonsoft.Json.Linq.JContainer.CreateWriter()", file="JTokenTests.cs"];
m0_69 [label="Assert.AreEqual(null, o.Parent)", span="156-156", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenTests.cs"];
m0_70 [label="JProperty o1 = new JProperty(''O1'', o)", span="157-157", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenTests.cs"];
m0_71 [label="Assert.AreEqual(o, o1.Value)", span="158-158", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenTests.cs"];
m0_16 [label="Assert.AreEqual(3, (int)a[2])", span="78-78", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m0_17 [label="JsonReader reader = new JsonTextReader(new StringReader(''{'pie':true}''))", span="80-80", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m0_18 [label="reader.Read()", span="81-81", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m0_19 [label="reader.Read()", span="82-82", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m0_20 [label="JProperty p = (JProperty)JToken.ReadFrom(reader)", span="84-84", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m0_21 [label="Assert.AreEqual(''pie'', p.Name)", span="85-85", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m0_22 [label="Assert.AreEqual(true, (bool)p.Value)", span="86-86", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m0_9 [label="return type.GetField(name);", span="82-82", cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetField(System.Type, string)", file="JTokenTests.cs"];
m0_695 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", span="839-839", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", file="JTokenTests.cs"];
m0_701 [label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2, 3), descendantsAndSelf[descendantsAndSelf.Count - 4]))", span="853-853", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", file="JTokenTests.cs"];
m0_697 [label="List<JToken> descendantsAndSelf = a.DescendantsAndSelf().ToList()", span="849-849", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", file="JTokenTests.cs"];
m0_700 [label="Assert.AreEqual(5, (int)descendantsAndSelf[1])", span="852-852", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", file="JTokenTests.cs"];
m0_702 [label="Assert.AreEqual(1, (int)descendantsAndSelf[descendantsAndSelf.Count - 3])", span="854-854", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", file="JTokenTests.cs"];
m0_696 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="841-847", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", file="JTokenTests.cs"];
m0_698 [label="Assert.AreEqual(11, descendantsAndSelf.Count())", span="850-850", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", file="JTokenTests.cs"];
m0_699 [label="Assert.AreEqual(a, descendantsAndSelf[0])", span="851-851", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", file="JTokenTests.cs"];
m0_703 [label="Assert.AreEqual(2, (int)descendantsAndSelf[descendantsAndSelf.Count - 2])", span="855-855", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", file="JTokenTests.cs"];
m0_704 [label="Assert.AreEqual(3, (int)descendantsAndSelf[descendantsAndSelf.Count - 1])", span="856-856", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", file="JTokenTests.cs"];
m0_705 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", span="839-839", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", file="JTokenTests.cs"];
m0_876 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.ParseAdditionalContent()", span="1202-1202", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ParseAdditionalContent()", file="JTokenTests.cs"];
m0_877 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n],'';\r\n\r\n                JToken.Parse(json);\r\n            }, ''Additional text encountered after finished reading JSON content: ,. Path '', line 5, position 1.'')", span="1204-1213", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ParseAdditionalContent()", file="JTokenTests.cs"];
m0_878 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.ParseAdditionalContent()", span="1202-1202", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ParseAdditionalContent()", file="JTokenTests.cs"];
m0_7 [label="Entry System.Type.GetProperty(string)", span="0-0", cluster="System.Type.GetProperty(string)", file="JTokenTests.cs"];
m0_723 [label="Entry System.Collections.Generic.IEnumerable<T>.DescendantsAndSelf<T>()", span="88-88", cluster="System.Collections.Generic.IEnumerable<T>.DescendantsAndSelf<T>()", file="JTokenTests.cs"];
m0_15 [label="Assert.AreEqual(2, (int)a[1])", span="77-77", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m0_830 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", span="1068-1068", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs"];
m0_831 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="1070-1076", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs"];
m0_833 [label="Assert.AreEqual(5, (int)a[0])", span="1080-1080", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs"];
m0_834 [label="Assert.AreEqual(''pie'', (string)a[1])", span="1081-1081", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs"];
m0_835 [label="Assert.AreEqual(a, a[1].Parent)", span="1082-1082", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs"];
m0_836 [label="Assert.AreEqual(a[2], a[1].Next)", span="1083-1083", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs"];
m0_837 [label="Assert.AreEqual(5, a.Count())", span="1084-1084", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs"];
m0_839 [label="Assert.AreEqual(''firstpie'', (string)a[0])", span="1088-1088", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs"];
m0_840 [label="Assert.AreEqual(5, (int)a[1])", span="1089-1089", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs"];
m0_841 [label="Assert.AreEqual(''pie'', (string)a[2])", span="1090-1090", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs"];
m0_842 [label="Assert.AreEqual(a, a[0].Parent)", span="1091-1091", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs"];
m0_843 [label="Assert.AreEqual(a[1], a[0].Next)", span="1092-1092", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs"];
m0_844 [label="Assert.AreEqual(6, a.Count())", span="1093-1093", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs"];
m0_846 [label="Assert.AreEqual(''secondlastpie'', (string)a[5])", span="1097-1097", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs"];
m0_847 [label="Assert.AreEqual(7, a.Count())", span="1098-1098", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs"];
m0_832 [label="a[1].AddBeforeSelf(''pie'')", span="1078-1078", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs"];
m0_838 [label="a[0].AddBeforeSelf(''firstpie'')", span="1086-1086", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs"];
m0_845 [label="a.Last.AddBeforeSelf(''secondlastpie'')", span="1095-1095", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs"];
m0_848 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", span="1068-1068", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs"];
m0_28 [label="Assert.AreEqual(''stringvalue'', (string)v)", span="95-95", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m0_883 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", span="1217-1217", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m0_884 [label="JObject o =\r\n                new JObject(\r\n                    new JProperty(''Test1'', new JArray(1, 2, 3)),\r\n                    new JProperty(''Test2'', ''Test2Value''),\r\n                    new JProperty(''Test3'', new JObject(new JProperty(''Test1'', new JArray(1, new JObject(new JProperty(''Test1'', 1)), 3)))),\r\n                    new JProperty(''Test4'', new JConstructor(''Date'', new JArray(1, 2, 3)))\r\n                    )", span="1219-1225", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m0_899 [label="JArray a = new JArray(1)", span="1248-1248", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m0_886 [label="Assert.AreEqual(''Test1[0]'', t.Path)", span="1228-1228", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m0_888 [label="Assert.AreEqual(''Test2'', t.Path)", span="1231-1231", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m0_890 [label="Assert.AreEqual('''', t.Path)", span="1234-1234", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m0_892 [label="Assert.AreEqual(''Test4[0][0]'', t.Path)", span="1237-1237", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m0_894 [label="Assert.AreEqual(''Test4[0]'', t.Path)", span="1240-1240", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m0_896 [label="Assert.AreEqual('''', t.Path)", span="1243-1243", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m0_898 [label="Assert.AreEqual(''Test3.Test1[1].Test1'', t.Path)", span="1246-1246", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m0_900 [label="Assert.AreEqual('''', a.Path)", span="1249-1249", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m0_901 [label="Assert.AreEqual(''[0]'', a[0].Path)", span="1251-1251", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m0_885 [label="JToken t = o.SelectToken(''Test1[0]'')", span="1227-1227", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m0_887 [label="t = o.SelectToken(''Test2'')", span="1230-1230", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m0_889 [label="t = o.SelectToken('''')", span="1233-1233", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m0_891 [label="t = o.SelectToken(''Test4[0][0]'')", span="1236-1236", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m0_893 [label="t = o.SelectToken(''Test4[0]'')", span="1239-1239", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m0_897 [label="t = o.SelectToken(''Test3.Test1[1].Test1'')", span="1245-1245", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m0_895 [label="t = t.DeepClone()", span="1242-1242", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m0_902 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", span="1217-1217", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m0_780 [label="Entry Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", span="341-341", cluster="Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", file="JTokenTests.cs"];
m0_859 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", span="1153-1153", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", file="JTokenTests.cs"];
m0_863 [label="Assert.IsTrue(a.DeepEquals(a2))", span="1175-1175", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", file="JTokenTests.cs"];
m0_860 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3),\r\n                    new JObject(\r\n                        new JProperty(''First'', new JValue(Encoding.UTF8.GetBytes(''Hi''))),\r\n                        new JProperty(''Second'', 1),\r\n                        new JProperty(''Third'', null),\r\n                        new JProperty(''Fourth'', new JConstructor(''Date'', 12345)),\r\n                        new JProperty(''Fifth'', double.PositiveInfinity),\r\n                        new JProperty(''Sixth'', double.NaN)\r\n                        )\r\n                    )", span="1155-1169", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", file="JTokenTests.cs"];
m0_862 [label="JArray a2 = (JArray)c.Clone()", span="1173-1173", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", file="JTokenTests.cs"];
m0_861 [label="ICloneable c = a", span="1171-1171", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", file="JTokenTests.cs"];
m0_864 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", span="1153-1153", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", file="JTokenTests.cs"];
m0_761 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", span="946-946", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenTests.cs"];
m0_762 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="948-954", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenTests.cs"];
m0_766 [label="Assert.AreEqual(0, a.Count())", span="960-960", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenTests.cs"];
m0_764 [label="Assert.AreEqual(5, (int)first)", span="957-957", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenTests.cs"];
m0_763 [label="JToken first = a.First", span="956-956", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenTests.cs"];
m0_765 [label="a.RemoveAll()", span="959-959", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenTests.cs"];
m0_767 [label="Assert.IsNull(first.Parent)", span="962-962", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenTests.cs"];
m0_768 [label="Assert.IsNull(first.Next)", span="963-963", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenTests.cs"];
m0_769 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", span="946-946", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenTests.cs"];
m0_595 [label="Entry Newtonsoft.Json.Linq.JToken.Remove()", span="393-393", cluster="Newtonsoft.Json.Linq.JToken.Remove()", file="JTokenTests.cs"];
m0_771 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AddPropertyToArray()", span="967-967", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddPropertyToArray()", file="JTokenTests.cs"];
m0_772 [label="ExceptionAssert.Throws<ArgumentException>(() =>\r\n            {\r\n                JArray a = new JArray();\r\n                a.Add(new JProperty(''PropertyName''));\r\n            }, ''Can not add Newtonsoft.Json.Linq.JProperty to Newtonsoft.Json.Linq.JArray.'')", span="969-973", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddPropertyToArray()", file="JTokenTests.cs"];
m0_773 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AddPropertyToArray()", span="967-967", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddPropertyToArray()", file="JTokenTests.cs"];
m0_121 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="JTokenTests.cs"];
m0_122 [label="Entry string.Join(string, params string[])", span="0-0", cluster="string.Join(string, params string[])", file="JTokenTests.cs"];
m0_123 [label="Entry System.Exception.Exception(string, System.Exception)", span="0-0", cluster="System.Exception.Exception(string, System.Exception)", file="JTokenTests.cs"];
m0_124 [label="Entry System.Exception.GetType()", span="0-0", cluster="System.Exception.GetType()", file="JTokenTests.cs"];
m0_125 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="JTokenTests.cs"];
m0_279 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="JTokenTests.cs"];
m0_41 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="410-410", cluster="Newtonsoft.Json.JsonReader.Read()", file="JTokenTests.cs"];
m0_42 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(long)", span="70-70", cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="JTokenTests.cs"];
m0_43 [label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values()", span="123-123", cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values()", file="JTokenTests.cs"];
m0_44 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="JTokenTests.cs"];
m0_45 [label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="155-155", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JTokenTests.cs"];
m0_46 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="JTokenTests.cs"];
m0_856 [label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor(string, object)", span="116-116", cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor(string, object)", file="JTokenTests.cs"];
m0_280 [label="Entry JValue.cstr", span="", cluster="JValue.cstr", file="JTokenTests.cs"];
m0_81 [label="Contains(collection, value, null)", span="306-306", cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", file="JTokenTests.cs"];
m0_465 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", span="469-469", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_466 [label="Assert.AreEqual((BigInteger)1, (new JValue(1).ToObject(typeof(BigInteger))))", span="472-472", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_467 [label="Assert.AreEqual((BigInteger)1, (new JValue(1).ToObject(typeof(BigInteger?))))", span="473-473", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_469 [label="Assert.AreEqual((ushort)1, (new JValue(1).ToObject(typeof(ushort))))", span="476-476", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_470 [label="Assert.AreEqual((ushort)1, (new JValue(1).ToObject(typeof(ushort?))))", span="477-477", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_471 [label="Assert.AreEqual((uint)1L, (new JValue(1).ToObject(typeof(uint))))", span="478-478", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_472 [label="Assert.AreEqual((uint)1L, (new JValue(1).ToObject(typeof(uint?))))", span="479-479", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_473 [label="Assert.AreEqual((ulong)1L, (new JValue(1).ToObject(typeof(ulong))))", span="480-480", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_474 [label="Assert.AreEqual((ulong)1L, (new JValue(1).ToObject(typeof(ulong?))))", span="481-481", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_475 [label="Assert.AreEqual((sbyte)1L, (new JValue(1).ToObject(typeof(sbyte))))", span="482-482", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_476 [label="Assert.AreEqual((sbyte)1L, (new JValue(1).ToObject(typeof(sbyte?))))", span="483-483", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_477 [label="Assert.AreEqual((byte)1L, (new JValue(1).ToObject(typeof(byte))))", span="484-484", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_478 [label="Assert.AreEqual((byte)1L, (new JValue(1).ToObject(typeof(byte?))))", span="485-485", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_479 [label="Assert.AreEqual((short)1L, (new JValue(1).ToObject(typeof(short))))", span="486-486", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_480 [label="Assert.AreEqual((short)1L, (new JValue(1).ToObject(typeof(short?))))", span="487-487", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_481 [label="Assert.AreEqual(1, (new JValue(1).ToObject(typeof(int))))", span="488-488", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_482 [label="Assert.AreEqual(1, (new JValue(1).ToObject(typeof(int?))))", span="489-489", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_483 [label="Assert.AreEqual(1L, (new JValue(1).ToObject(typeof(long))))", span="490-490", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_484 [label="Assert.AreEqual(1L, (new JValue(1).ToObject(typeof(long?))))", span="491-491", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_489 [label="Assert.AreEqual(1m, (new JValue(1).ToObject(typeof(decimal))))", span="496-496", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_490 [label="Assert.AreEqual(1m, (new JValue(1).ToObject(typeof(decimal?))))", span="497-497", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_497 [label="Assert.AreEqual(DateTime.MaxValue, (new JValue(DateTime.MaxValue).ToObject(typeof(DateTime))))", span="504-504", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_498 [label="Assert.AreEqual(DateTime.MaxValue, (new JValue(DateTime.MaxValue).ToObject(typeof(DateTime?))))", span="505-505", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_499 [label="Assert.AreEqual(DateTimeOffset.MaxValue, (new JValue(DateTimeOffset.MaxValue).ToObject(typeof(DateTimeOffset))))", span="507-507", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_500 [label="Assert.AreEqual(DateTimeOffset.MaxValue, (new JValue(DateTimeOffset.MaxValue).ToObject(typeof(DateTimeOffset?))))", span="508-508", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_491 [label="Assert.AreEqual(true, (new JValue(true).ToObject(typeof(bool))))", span="498-498", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_492 [label="Assert.AreEqual(true, (new JValue(true).ToObject(typeof(bool?))))", span="499-499", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_485 [label="Assert.AreEqual((float)1, (new JValue(1.0).ToObject(typeof(float))))", span="492-492", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_486 [label="Assert.AreEqual((float)1, (new JValue(1.0).ToObject(typeof(float?))))", span="493-493", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_487 [label="Assert.AreEqual((double)1, (new JValue(1.0).ToObject(typeof(double))))", span="494-494", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_488 [label="Assert.AreEqual((double)1, (new JValue(1.0).ToObject(typeof(double?))))", span="495-495", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_501 [label="Assert.AreEqual(''b'', (new JValue(''b'').ToObject(typeof(string))))", span="510-510", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_505 [label="Assert.AreEqual(StringComparison.Ordinal, (new JValue(''Ordinal'').ToObject(typeof(StringComparison))))", span="514-514", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_506 [label="Assert.AreEqual(StringComparison.Ordinal, (new JValue(''Ordinal'').ToObject(typeof(StringComparison?))))", span="515-515", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_468 [label="Assert.AreEqual((BigInteger?)null, (JValue.CreateNull().ToObject(typeof(BigInteger?))))", span="474-474", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_507 [label="Assert.AreEqual(null, (JValue.CreateNull().ToObject(typeof(StringComparison?))))", span="516-516", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_495 [label="Assert.AreEqual(TimeSpan.MaxValue, (new JValue(TimeSpan.MaxValue).ToObject(typeof(TimeSpan))))", span="502-502", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_496 [label="Assert.AreEqual(TimeSpan.MaxValue, (new JValue(TimeSpan.MaxValue).ToObject(typeof(TimeSpan?))))", span="503-503", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_502 [label="Assert.AreEqual(new Guid(''A34B2080-B5F0-488E-834D-45D44ECB9E5C''), (new JValue(new Guid(''A34B2080-B5F0-488E-834D-45D44ECB9E5C'')).ToObject(typeof(Guid))))", span="511-511", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_503 [label="Assert.AreEqual(new Guid(''A34B2080-B5F0-488E-834D-45D44ECB9E5C''), (new JValue(new Guid(''A34B2080-B5F0-488E-834D-45D44ECB9E5C'')).ToObject(typeof(Guid?))))", span="512-512", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_504 [label="Assert.AreEqual(new Uri(''http://www.google.com/''), (new JValue(new Uri(''http://www.google.com/'')).ToObject(typeof(Uri))))", span="513-513", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_493 [label="Assert.AreEqual('b', (new JValue('b').ToObject(typeof(char))))", span="500-500", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_494 [label="Assert.AreEqual('b', (new JValue('b').ToObject(typeof(char?))))", span="501-501", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_508 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", span="469-469", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m0_271 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.Guid)", span="163-163", cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Guid)", file="JTokenTests.cs"];
m0_83 [label="Entry Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object, string)", span="309-309", cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object, string)", file="JTokenTests.cs"];
m0_270 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", span="181-181", cluster="Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", file="JTokenTests.cs"];
m0_567 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", span="587-587", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="JTokenTests.cs"];
m0_568 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    6,\r\n                    new JArray(7, 8),\r\n                    new JArray(9, 10)\r\n                    )", span="589-595", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="JTokenTests.cs"];
m0_569 [label="Assert.AreEqual(a, a.Root)", span="597-597", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="JTokenTests.cs"];
m0_570 [label="Assert.AreEqual(a, a[0].Root)", span="598-598", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="JTokenTests.cs"];
m0_571 [label="Assert.AreEqual(a, ((JArray)a[2])[0].Root)", span="599-599", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="JTokenTests.cs"];
m0_572 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", span="587-587", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="JTokenTests.cs"];
m0_654 [label="Entry System.Collections.Generic.IEnumerable<T>.AncestorsAndSelf<T>()", span="62-62", cluster="System.Collections.Generic.IEnumerable<T>.AncestorsAndSelf<T>()", file="JTokenTests.cs"];
m0_274 [label="Entry System.Uri.Uri(string)", span="0-0", cluster="System.Uri.Uri(string)", file="JTokenTests.cs"];
m0_745 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="114-114", cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JTokenTests.cs"];
m0_818 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", span="1044-1044", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JTokenTests.cs"];
m0_819 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="1046-1052", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JTokenTests.cs"];
m0_821 [label="Assert.AreEqual(5, (int)a[0])", span="1056-1056", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JTokenTests.cs"];
m0_822 [label="Assert.AreEqual(1, a[1].Count())", span="1057-1057", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JTokenTests.cs"];
m0_823 [label="Assert.AreEqual(''pie'', (string)a[2])", span="1058-1058", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JTokenTests.cs"];
m0_824 [label="Assert.AreEqual(5, a.Count())", span="1059-1059", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JTokenTests.cs"];
m0_826 [label="Assert.AreEqual(''lastpie'', (string)a[5])", span="1063-1063", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JTokenTests.cs"];
m0_827 [label="Assert.AreEqual(''lastpie'', (string)a.Last)", span="1064-1064", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JTokenTests.cs"];
m0_820 [label="a[1].AddAfterSelf(''pie'')", span="1054-1054", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JTokenTests.cs"];
m0_825 [label="a[4].AddAfterSelf(''lastpie'')", span="1061-1061", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JTokenTests.cs"];
m0_828 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", span="1044-1044", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JTokenTests.cs"];
m0_89 [label="actual = Normalize(actual)", span="327-327", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JTokenTests.cs"];
m0_668 [label="Entry System.Collections.Generic.IEnumerable<T>.Ancestors<T>()", span="49-49", cluster="System.Collections.Generic.IEnumerable<T>.Ancestors<T>()", file="JTokenTests.cs"];
m0_260 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.DateTimeOffset)", span="135-135", cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTimeOffset)", file="JTokenTests.cs"];
m0_694 [label="Entry System.Collections.Generic.IEnumerable<T>.Descendants<T>()", span="75-75", cluster="System.Collections.Generic.IEnumerable<T>.Descendants<T>()", file="JTokenTests.cs"];
m0_626 [label="Entry Newtonsoft.Json.Linq.JToken.Ancestors()", span="268-268", cluster="Newtonsoft.Json.Linq.JToken.Ancestors()", file="JTokenTests.cs"];
m0_126 [label="Entry Newtonsoft.Json.Linq.JToken.BeforeSelf()", span="311-311", cluster="Newtonsoft.Json.Linq.JToken.BeforeSelf()", file="JTokenTests.cs"];
m0_127 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", span="249-249", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_131 [label="Assert.AreEqual(new DateTimeOffset(2000, 12, 20, 0, 0, 0, TimeSpan.Zero), (DateTimeOffset)new JValue(new DateTime(2000, 12, 20, 0, 0, 0, DateTimeKind.Utc)))", span="256-256", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_133 [label="Assert.AreEqual(null, (DateTimeOffset?)new JValue((DateTimeOffset?)null))", span="258-258", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_136 [label="Assert.AreEqual(true, (bool?)new JValue(true))", span="262-262", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_128 [label="Assert.AreEqual(1L, (long)(new JValue(1)))", span="251-251", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_129 [label="Assert.AreEqual(2L, (long)new JArray(1, 2, 3)[1])", span="252-252", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_130 [label="Assert.AreEqual(new DateTime(2000, 12, 20), (DateTime)new JValue(new DateTime(2000, 12, 20)))", span="254-254", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_132 [label="Assert.AreEqual(new DateTimeOffset(2000, 12, 20, 23, 50, 10, TimeSpan.Zero), (DateTimeOffset)new JValue(new DateTimeOffset(2000, 12, 20, 23, 50, 10, TimeSpan.Zero)))", span="257-257", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_134 [label="Assert.AreEqual(null, (DateTimeOffset?)(JValue)null)", span="259-259", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_135 [label="Assert.AreEqual(true, (bool)new JValue(true))", span="261-261", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_137 [label="Assert.AreEqual(null, (bool?)((JValue)null))", span="263-263", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_138 [label="Assert.AreEqual(null, (bool?)JValue.CreateNull())", span="264-264", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_139 [label="Assert.AreEqual(10, (long)new JValue(10))", span="265-265", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_614 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", span="679-679", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", file="JTokenTests.cs"];
m0_616 [label="Assert.IsTrue(a.HasValues)", span="689-689", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", file="JTokenTests.cs"];
m0_615 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="681-687", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", file="JTokenTests.cs"];
m0_617 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", span="679-679", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", file="JTokenTests.cs"];
m0_652 [label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="88-88", cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="JTokenTests.cs"];
m0_34 [label="Assert.AreEqual(typeof(DateTimeOffset), v.Value.GetType())", span="108-108", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m0_90 [label="Assert.AreEqual(expected, actual)", span="329-329", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JTokenTests.cs"];
m0_88 [label="expected = Normalize(expected)", span="326-326", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JTokenTests.cs"];
m0_266 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(ulong)", span="98-98", cluster="Newtonsoft.Json.Linq.JValue.JValue(ulong)", file="JTokenTests.cs"];
m0_58 [label="bytes[offset] |= (byte)(b << shift)", span="255-255", cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="JTokenTests.cs"];
m0_35 [label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, new TimeSpan(12, 31, 0)), v.Value)", span="109-109", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m0_104 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    6,\r\n                    new JArray(7, 8),\r\n                    new JArray(9, 10)\r\n                    )", span="196-202", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JTokenTests.cs"];
m0_566 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="JTokenTests.cs"];
m0_10 [label="Exit Newtonsoft.Json.Tests.TestReflectionUtils.GetField(System.Type, string)", span="79-79", cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetField(System.Type, string)", file="JTokenTests.cs"];
m0_25 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="JTokenTests.cs"];
m0_23 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="JTokenTests.cs"];
m0_24 [label="Entry DataContractJsonSerializer.cstr", span="", cluster="DataContractJsonSerializer.cstr", file="JTokenTests.cs"];
m0_26 [label="Entry Unk.WriteObject", span="", cluster="Unk.WriteObject", file="JTokenTests.cs"];
m0_11 [label="Entry System.Type.GetField(string)", span="0-0", cluster="System.Type.GetField(string)", file="JTokenTests.cs"];
m0_29 [label="Entry Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", span="209-209", cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", file="JTokenTests.cs"];
m0_31 [label="int pos = DateTimeUtils.WriteDateTimeOffset(chars, 0, DateTime.SpecifyKind(d, DateTimeKind.Local).GetUtcOffset(), dateFormatHandling)", span="212-212", cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", file="JTokenTests.cs"];
m0_33 [label="Exit Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", span="209-209", cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", file="JTokenTests.cs"];
m0_30 [label="char[] chars = new char[8]", span="211-211", cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", file="JTokenTests.cs"];
m0_32 [label="return new string(chars, 0, pos);", span="214-214", cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", file="JTokenTests.cs"];
m0_36 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffset(char[], int, System.TimeSpan, Newtonsoft.Json.DateFormatHandling)", span="746-746", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffset(char[], int, System.TimeSpan, Newtonsoft.Json.DateFormatHandling)", file="JTokenTests.cs"];
m0_858 [label="Entry Newtonsoft.Json.Linq.JArray.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="96-96", cluster="Newtonsoft.Json.Linq.JArray.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JTokenTests.cs"];
m0_746 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", span="919-919", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs"];
m0_747 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="921-927", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs"];
m0_749 [label="Assert.AreEqual(''First'', (string)a[0])", span="931-931", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs"];
m0_750 [label="Assert.AreEqual(a, a[0].Parent)", span="932-932", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs"];
m0_751 [label="Assert.AreEqual(a[1], a[0].Next)", span="933-933", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs"];
m0_752 [label="Assert.AreEqual(5, a.Count())", span="934-934", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs"];
m0_754 [label="Assert.AreEqual(''NewFirst'', (string)a[0])", span="937-937", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs"];
m0_755 [label="Assert.AreEqual(a, a[0].Parent)", span="938-938", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs"];
m0_756 [label="Assert.AreEqual(a[1], a[0].Next)", span="939-939", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs"];
m0_757 [label="Assert.AreEqual(6, a.Count())", span="940-940", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs"];
m0_758 [label="Assert.AreEqual(a[0], a[0].Next.Previous)", span="942-942", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs"];
m0_748 [label="a.AddFirst(''First'')", span="929-929", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs"];
m0_753 [label="a.AddFirst(''NewFirst'')", span="936-936", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs"];
m0_759 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", span="919-919", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs"];
m0_84 [label="Assert.Contains(value, collection, message)", span="312-312", cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object, string)", file="JTokenTests.cs"];
m0_283 [label="Entry Unk.ToByteArray", span="", cluster="Unk.ToByteArray", file="JTokenTests.cs"];
m0_779 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string)", span="298-298", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string)", file="JTokenTests.cs"];
m0_3 [label="JObject j1 = JObject.Parse(ob1)", span="64-64", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DeepEqualsObjectOrder()", file="JTokenTests.cs", color=green, community=0];
m0_94 [label="Assert.AreEqual(6, (int)next)", span="181-181", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenTests.cs"];
m0_95 [label="next = next.Next", span="183-183", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenTests.cs"];
m0_96 [label="Assert.IsTrue(JToken.DeepEquals(new JArray(7, 8), next))", span="184-184", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenTests.cs"];
m0_97 [label="next = next.Next", span="186-186", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenTests.cs"];
m0_98 [label="Assert.IsTrue(JToken.DeepEquals(new JArray(9, 10), next))", span="187-187", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenTests.cs"];
m0_59 [label="shift ^= 4", span="257-257", cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="JTokenTests.cs"];
m0_76 [label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="299-299", cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="JTokenTests.cs"];
m0_77 [label="Assert.IsInstanceOf(t, instance)", span="301-301", cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="JTokenTests.cs"];
m0_60 [label="shift != 0", span="259-259", cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="JTokenTests.cs"];
m0_62 [label="return bytes;", span="264-264", cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="JTokenTests.cs"];
m0_64 [label="Entry Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", span="271-271", cluster="Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", file="JTokenTests.cs"];
m0_73 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JTokenTests.cs"];
m0_61 [label="offset++", span="261-261", cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="JTokenTests.cs"];
m0_63 [label="Exit Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", span="233-233", cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="JTokenTests.cs"];
m0_65 [label="Thread.CurrentThread.CurrentCulture = CultureInfo.InvariantCulture", span="279-279", cluster="Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", file="JTokenTests.cs"];
m0_67 [label="JsonConvert.DefaultSettings = null", span="283-283", cluster="Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", file="JTokenTests.cs"];
m0_68 [label="Exit Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", span="271-271", cluster="Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", file="JTokenTests.cs"];
m0_75 [label="Exit Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", span="291-291", cluster="Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", file="JTokenTests.cs"];
m0_66 [label="Thread.CurrentThread.CurrentUICulture = CultureInfo.InvariantCulture", span="280-280", cluster="Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", file="JTokenTests.cs"];
m0_72 [label="Entry Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", span="291-291", cluster="Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", file="JTokenTests.cs"];
m0_74 [label="return @''@'''''' + json.Replace(@'''''''', @'''''''''''') + @'''''''';", span="293-293", cluster="Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", file="JTokenTests.cs"];
m0_78 [label="Exit Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="299-299", cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="JTokenTests.cs"];
m0_265 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(float)", span="116-116", cluster="Newtonsoft.Json.Linq.JValue.JValue(float)", file="JTokenTests.cs"];
m0_669 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", span="790-790", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenTests.cs"];
m0_674 [label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2, 3), descendants[descendants.Count - 4]))", span="803-803", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenTests.cs"];
m0_671 [label="List<JToken> descendants = a.Descendants().ToList()", span="800-800", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenTests.cs"];
m0_673 [label="Assert.AreEqual(5, (int)descendants[0])", span="802-802", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenTests.cs"];
m0_675 [label="Assert.AreEqual(1, (int)descendants[descendants.Count - 3])", span="804-804", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenTests.cs"];
m0_670 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="792-798", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenTests.cs"];
m0_672 [label="Assert.AreEqual(10, descendants.Count())", span="801-801", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenTests.cs"];
m0_676 [label="Assert.AreEqual(2, (int)descendants[descendants.Count - 2])", span="805-805", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenTests.cs"];
m0_677 [label="Assert.AreEqual(3, (int)descendants[descendants.Count - 1])", span="806-806", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenTests.cs"];
m0_678 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", span="790-790", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenTests.cs"];
m0_810 [label="Entry Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="441-441", cluster="Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JTokenTests.cs"];
m0_627 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf()", span="711-711", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf()", file="JTokenTests.cs"];
m0_628 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="713-719", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf()", file="JTokenTests.cs"];
m0_633 [label="Assert.AreEqual(a[1], ancestors[1])", span="725-725", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf()", file="JTokenTests.cs"];
m0_634 [label="Assert.AreEqual(a, ancestors[2])", span="726-726", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf()", file="JTokenTests.cs"];
m0_632 [label="Assert.AreEqual(t, ancestors[0])", span="724-724", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf()", file="JTokenTests.cs"];
m0_631 [label="Assert.AreEqual(3, ancestors.Count())", span="723-723", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf()", file="JTokenTests.cs"];
m0_629 [label="JToken t = a[1][0]", span="721-721", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf()", file="JTokenTests.cs"];
m0_630 [label="List<JToken> ancestors = t.AncestorsAndSelf().ToList()", span="722-722", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf()", file="JTokenTests.cs"];
m0_635 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf()", span="711-711", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf()", file="JTokenTests.cs"];
m0_655 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", span="761-761", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="JTokenTests.cs"];
m0_656 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="763-769", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="JTokenTests.cs"];
m0_663 [label="Assert.AreEqual(a[1], ancestors[0])", span="783-783", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="JTokenTests.cs"];
m0_664 [label="Assert.AreEqual(a, ancestors[1])", span="784-784", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="JTokenTests.cs"];
m0_665 [label="Assert.AreEqual(o.Property(''prop1''), ancestors[2])", span="785-785", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="JTokenTests.cs"];
m0_666 [label="Assert.AreEqual(o, ancestors[3])", span="786-786", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="JTokenTests.cs"];
m0_662 [label="Assert.AreEqual(4, ancestors.Count())", span="782-782", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="JTokenTests.cs"];
m0_657 [label="JObject o = new JObject\r\n            {\r\n                { ''prop1'', ''value1'' }\r\n            }", span="771-774", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="JTokenTests.cs"];
m0_658 [label="JToken t1 = a[1][0]", span="776-776", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="JTokenTests.cs"];
m0_661 [label="List<JToken> ancestors = source.Ancestors().ToList()", span="781-781", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="JTokenTests.cs"];
m0_659 [label="JToken t2 = o[''prop1'']", span="777-777", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="JTokenTests.cs"];
m0_660 [label="List<JToken> source = new List<JToken> { t1, t2 }", span="779-779", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="JTokenTests.cs"];
m0_667 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", span="761-761", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="JTokenTests.cs"];
m0_724 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", span="891-891", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs"];
m0_737 [label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''Property'', ''PropertyValue'')), a[5]))", span="915-915", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs"];
m0_725 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="893-899", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs"];
m0_736 [label="Assert.AreEqual(6, a.Count())", span="914-914", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs"];
m0_726 [label="JsonWriter writer = a.CreateWriter()", span="901-901", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs"];
m0_728 [label="Assert.AreEqual(4, a.Count())", span="903-903", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs"];
m0_730 [label="Assert.AreEqual(5, a.Count())", span="906-906", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs"];
m0_731 [label="Assert.AreEqual(''String'', (string)a[4])", span="907-907", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs"];
m0_735 [label="writer.WriteEnd()", span="912-912", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs"];
m0_727 [label="Assert.IsNotNull(writer)", span="902-902", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs"];
m0_729 [label="writer.WriteValue(''String'')", span="905-905", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs"];
m0_732 [label="writer.WriteStartObject()", span="909-909", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs"];
m0_733 [label="writer.WritePropertyName(''Property'')", span="910-910", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs"];
m0_734 [label="writer.WriteValue(''PropertyValue'')", span="911-911", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs"];
m0_738 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", span="891-891", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs"];
m0_866 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", span="1180-1180", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="JTokenTests.cs"];
m0_869 [label="Assert.IsTrue(a.DeepEquals(a2))", span="1191-1191", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="JTokenTests.cs"];
m0_873 [label="Assert.IsTrue(v1.DeepEquals(v2))", span="1198-1198", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="JTokenTests.cs"];
m0_867 [label="JArray a =\r\n                new JArray(\r\n                    double.NaN,\r\n                    double.PositiveInfinity,\r\n                    double.NegativeInfinity\r\n                    )", span="1182-1187", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="JTokenTests.cs"];
m0_868 [label="JArray a2 = (JArray)a.DeepClone()", span="1189-1189", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="JTokenTests.cs"];
m0_870 [label="double d = 1 + 0.1 + 0.1 + 0.1", span="1193-1193", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="JTokenTests.cs"];
m0_871 [label="JValue v1 = new JValue(d)", span="1195-1195", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="JTokenTests.cs"];
m0_872 [label="JValue v2 = new JValue(1.3)", span="1196-1196", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="JTokenTests.cs"];
m0_874 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", span="1180-1180", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="JTokenTests.cs"];
m0_120 [label="Entry Newtonsoft.Json.Linq.JToken.Children<T>()", span="375-375", cluster="Newtonsoft.Json.Linq.JToken.Children<T>()", file="JTokenTests.cs"];
m0_37 [label="Entry string.String(char[], int, int)", span="0-0", cluster="string.String(char[], int, int)", file="JTokenTests.cs"];
m0_511 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", span="520-520", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_512 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(new DateTime(2000, 12, 20)), (JValue)new DateTime(2000, 12, 20)))", span="522-522", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_513 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(new DateTimeOffset(2000, 12, 20, 23, 50, 10, TimeSpan.Zero)), (JValue)new DateTimeOffset(2000, 12, 20, 23, 50, 10, TimeSpan.Zero)))", span="524-524", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_514 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((DateTimeOffset?)null), (JValue)(DateTimeOffset?)null))", span="525-525", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_515 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(new BigInteger(1)), new JValue(new BigInteger(1))))", span="530-530", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_516 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((BigInteger?)null), new JValue((BigInteger?)null)))", span="531-531", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_517 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(true), (JValue)true))", span="533-533", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_518 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(true), (JValue)true))", span="534-534", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_519 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(true), (JValue)(bool?)true))", span="535-535", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_520 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((bool?)null), (JValue)(bool?)null))", span="536-536", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_521 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(10), (JValue)10))", span="537-537", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_522 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((long?)null), (JValue)(long?)null))", span="538-538", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_523 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((DateTime?)null), (JValue)(DateTime?)null))", span="539-539", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_524 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(long.MaxValue), (JValue)long.MaxValue))", span="540-540", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_525 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((int?)null), (JValue)(int?)null))", span="541-541", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_526 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((short?)null), (JValue)(short?)null))", span="542-542", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_527 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((double?)null), (JValue)(double?)null))", span="543-543", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_528 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((uint?)null), (JValue)(uint?)null))", span="544-544", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_529 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((decimal?)null), (JValue)(decimal?)null))", span="545-545", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_530 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((ulong?)null), (JValue)(ulong?)null))", span="546-546", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_531 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((sbyte?)null), (JValue)(sbyte?)null))", span="547-547", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_532 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((sbyte)1), (JValue)(sbyte)1))", span="548-548", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_533 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((byte?)null), (JValue)(byte?)null))", span="549-549", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_534 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((byte)1), (JValue)(byte)1))", span="550-550", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_535 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((ushort?)null), (JValue)(ushort?)null))", span="551-551", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_536 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(short.MaxValue), (JValue)short.MaxValue))", span="552-552", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_537 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(ushort.MaxValue), (JValue)ushort.MaxValue))", span="553-553", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_538 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(11.1f), (JValue)11.1f))", span="554-554", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_539 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(float.MinValue), (JValue)float.MinValue))", span="555-555", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_540 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(double.MinValue), (JValue)double.MinValue))", span="556-556", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_541 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(uint.MaxValue), (JValue)uint.MaxValue))", span="557-557", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_542 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(ulong.MaxValue), (JValue)ulong.MaxValue))", span="558-558", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_543 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(ulong.MinValue), (JValue)ulong.MinValue))", span="559-559", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_544 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((string)null), (JValue)(string)null))", span="560-560", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_545 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((DateTime?)null), (JValue)(DateTime?)null))", span="561-561", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_546 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(decimal.MaxValue), (JValue)decimal.MaxValue))", span="562-562", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_547 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(decimal.MaxValue), (JValue)(decimal?)decimal.MaxValue))", span="563-563", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_548 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(decimal.MinValue), (JValue)decimal.MinValue))", span="564-564", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_549 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(float.MaxValue), (JValue)(float?)float.MaxValue))", span="565-565", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_550 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(double.MaxValue), (JValue)(double?)double.MaxValue))", span="566-566", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_551 [label="Assert.IsTrue(JToken.DeepEquals(JValue.CreateNull(), (JValue)(double?)null))", span="567-567", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_555 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(emptyData), (JValue)emptyData))", span="573-573", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_557 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(Encoding.UTF8.GetBytes(''Hi'')), (JValue)Encoding.UTF8.GetBytes(''Hi'')))", span="575-575", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_558 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(TimeSpan.FromMinutes(1)), (JValue)TimeSpan.FromMinutes(1)))", span="577-577", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_559 [label="Assert.IsTrue(JToken.DeepEquals(JValue.CreateNull(), (JValue)(TimeSpan?)null))", span="578-578", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_560 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(TimeSpan.FromMinutes(1)), (JValue)(TimeSpan?)TimeSpan.FromMinutes(1)))", span="579-579", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_561 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC'')), (JValue)new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC'')))", span="580-580", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_562 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(new Uri(''http://www.google.com'')), (JValue)new Uri(''http://www.google.com'')))", span="581-581", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_563 [label="Assert.IsTrue(JToken.DeepEquals(JValue.CreateNull(), (JValue)(Uri)null))", span="582-582", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_564 [label="Assert.IsTrue(JToken.DeepEquals(JValue.CreateNull(), (JValue)(Guid?)null))", span="583-583", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_552 [label="Assert.IsFalse(JToken.DeepEquals(new JValue(true), (JValue)(bool?)null))", span="569-569", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_554 [label="byte[] emptyData = new byte[0]", span="572-572", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_556 [label="Assert.IsFalse(JToken.DeepEquals(new JValue(emptyData), (JValue)new byte[1]))", span="574-574", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_553 [label="Assert.IsFalse(JToken.DeepEquals(JValue.CreateNull(), (JValue)(object)null))", span="570-570", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_565 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", span="520-520", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m0_119 [label="Entry System.Action.Invoke()", span="0-0", cluster="System.Action.Invoke()", file="JTokenTests.cs"];
m0_789 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", span="987-987", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenTests.cs"];
m0_799 [label="Assert.IsTrue(JToken.DeepEquals(new JArray(int.MaxValue, new JArray(''Test''), int.MaxValue, new JArray(1, 2, 3)), a))", span="1008-1008", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenTests.cs"];
m0_790 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="989-995", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenTests.cs"];
m0_798 [label="Assert.AreEqual(4, a.Count())", span="1006-1006", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenTests.cs"];
m0_791 [label="a[0].Replace(new JValue(int.MaxValue))", span="997-997", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenTests.cs"];
m0_796 [label="a[2].Replace(new JValue(int.MaxValue))", span="1004-1004", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenTests.cs"];
m0_794 [label="a[1][0].Replace(new JValue(''Test''))", span="1001-1001", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenTests.cs"];
m0_792 [label="Assert.AreEqual(int.MaxValue, (int)a[0])", span="998-998", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenTests.cs"];
m0_793 [label="Assert.AreEqual(4, a.Count())", span="999-999", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenTests.cs"];
m0_795 [label="Assert.AreEqual(''Test'', (string)a[1][0])", span="1002-1002", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenTests.cs"];
m0_797 [label="Assert.AreEqual(int.MaxValue, (int)a[2])", span="1005-1005", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenTests.cs"];
m0_800 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", span="987-987", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenTests.cs"];
m0_913 [label="Entry Newtonsoft.Json.Linq.JToken.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", span="2180-2180", cluster="Newtonsoft.Json.Linq.JToken.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JTokenTests.cs"];
m0_80 [label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor(string)", span="126-126", cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor(string)", file="JTokenTests.cs"];
m0_82 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="JTokenTests.cs"];
m0_38 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="JTokenTests.cs"];
m0_39 [label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="2093-2093", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JTokenTests.cs"];
m0_40 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JTokenTests.cs"];
m0_87 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="324-324", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JTokenTests.cs"];
m0_849 [label="Entry Newtonsoft.Json.Linq.JToken.AddBeforeSelf(object)", span="253-253", cluster="Newtonsoft.Json.Linq.JToken.AddBeforeSelf(object)", file="JTokenTests.cs"];
m0_331 [label="Entry Unk.>", span="", cluster="Unk.>", file="JTokenTests.cs"];
m0_284 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", span="403-403", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_286 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)new JValue(1); }, ''Can not convert Integer to DateTime.'')", span="406-406", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_294 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(1); }, ''Can not convert Integer to Uri.'')", span="415-415", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_302 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)new JValue(1); }, ''Can not convert Integer to TimeSpan.'')", span="426-426", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_311 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Guid)new JValue(1); }, ''Can not convert Integer to Guid.'')", span="438-438", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_299 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(DateTime.Now); }, ''Can not convert Date to Uri.'')", span="420-420", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_307 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)new JValue(DateTime.Now); }, ''Can not convert Date to TimeSpan.'')", span="431-431", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_315 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Guid)new JValue(DateTime.Now); }, ''Can not convert Date to Guid.'')", span="442-442", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_325 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (sbyte?)new JValue(DateTime.Now); }, ''Can not convert Date to SByte.'')", span="461-461", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_326 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (sbyte)new JValue(DateTime.Now); }, ''Can not convert Date to SByte.'')", span="462-462", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_300 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(DateTimeOffset.Now); }, ''Can not convert Date to Uri.'')", span="422-422", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_308 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)new JValue(DateTimeOffset.Now); }, ''Can not convert Date to TimeSpan.'')", span="433-433", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_316 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Guid)new JValue(DateTimeOffset.Now); }, ''Can not convert Date to Guid.'')", span="444-444", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_285 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)new JValue(true); }, ''Can not convert Boolean to DateTime.'')", span="405-405", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_293 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(true); }, ''Can not convert Boolean to Uri.'')", span="414-414", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_301 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)new JValue(true); }, ''Can not convert Boolean to TimeSpan.'')", span="425-425", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_310 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Guid)new JValue(true); }, ''Can not convert Boolean to Guid.'')", span="437-437", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_319 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTimeOffset)new JValue(true); }, ''Can not convert Boolean to DateTimeOffset.'')", span="450-450", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_320 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(true); }, ''Can not convert Boolean to Uri.'')", span="452-452", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_287 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)new JValue(1.1); }, ''Can not convert Float to DateTime.'')", span="407-407", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_295 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(1.1); }, ''Can not convert Float to Uri.'')", span="416-416", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_303 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)new JValue(1.1); }, ''Can not convert Float to TimeSpan.'')", span="427-427", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_312 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Guid)new JValue(1.1); }, ''Can not convert Float to Guid.'')", span="439-439", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_327 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (new JValue(''Ordinal1'')).ToObject<StringComparison>(); }, ''Could not convert 'Ordinal1' to StringComparison.'')", span="464-464", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_328 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (new JValue(''Ordinal1'')).ToObject<StringComparison?>(); }, ''Could not convert 'Ordinal1' to StringComparison.'')", span="465-465", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_288 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)new JValue(1.1m); }, ''Can not convert Float to DateTime.'')", span="408-408", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_296 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(1.1m); }, ''Can not convert Float to Uri.'')", span="417-417", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_304 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)new JValue(1.1m); }, ''Can not convert Float to TimeSpan.'')", span="428-428", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_313 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Guid)new JValue(1.1m); }, ''Can not convert Float to Guid.'')", span="440-440", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_291 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)JValue.CreateNull(); }, ''Can not convert Null to DateTime.'')", span="411-411", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_305 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)JValue.CreateNull(); }, ''Can not convert Null to TimeSpan.'')", span="429-429", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_314 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Guid)JValue.CreateNull(); }, ''Can not convert Null to Guid.'')", span="441-441", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_322 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (JValue.CreateNull()).ToObject<BigInteger>(); }, ''Can not convert Null to BigInteger.'')", span="456-456", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_289 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)new JValue(TimeSpan.Zero); }, ''Can not convert TimeSpan to DateTime.'')", span="409-409", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_297 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(TimeSpan.Zero); }, ''Can not convert TimeSpan to Uri.'')", span="418-418", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_317 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Guid)new JValue(TimeSpan.FromMinutes(1)); }, ''Can not convert TimeSpan to Guid.'')", span="446-446", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_292 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)new JValue(Guid.NewGuid()); }, ''Can not convert Guid to DateTime.'')", span="412-412", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_298 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(Guid.NewGuid()); }, ''Can not convert Guid to Uri.'')", span="419-419", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_306 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)new JValue(Guid.NewGuid()); }, ''Can not convert Guid to TimeSpan.'')", span="430-430", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_323 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (new JValue(Guid.NewGuid())).ToObject<BigInteger>(); }, ''Can not convert Guid to BigInteger.'')", span="457-457", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_324 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (new JValue(Guid.NewGuid())).ToObject<BigInteger?>(); }, ''Can not convert Guid to BigInteger.'')", span="458-458", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_290 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)new JValue(new Uri(''http://www.google.com'')); }, ''Can not convert Uri to DateTime.'')", span="410-410", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_309 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)new JValue(new Uri(''http://www.google.com'')); }, ''Can not convert Uri to TimeSpan.'')", span="435-435", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_318 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Guid)new JValue(new Uri(''http://www.google.com'')); }, ''Can not convert Uri to Guid.'')", span="447-447", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_321 [label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (new JValue(new Uri(''http://www.google.com''))).ToObject<BigInteger>(); }, ''Can not convert Uri to BigInteger.'')", span="455-455", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_329 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", span="403-403", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m0_281 [label="Entry Newtonsoft.Json.Linq.JToken.ToObject<T>()", span="1929-1929", cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>()", file="JTokenTests.cs"];
m0_85 [label="Exit Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object, string)", span="309-309", cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object, string)", file="JTokenTests.cs"];
m0_261 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(object)", span="190-190", cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="JTokenTests.cs"];
m0_48 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)", file="JTokenTests.cs"];
m0_813 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", span="1031-1031", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", file="JTokenTests.cs"];
m0_814 [label="JArray a =\r\n                new JArray(\r\n                    new JValue(new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc))\r\n                    )", span="1033-1036", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", file="JTokenTests.cs"];
m0_816 [label="Assert.AreEqual(@''[''''2009-02-15T00:00:00Z'''']'', json)", span="1040-1040", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", file="JTokenTests.cs"];
m0_815 [label="string json = a.ToString(Formatting.None, new IsoDateTimeConverter())", span="1038-1038", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", file="JTokenTests.cs"];
m0_817 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", span="1031-1031", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", file="JTokenTests.cs"];
m0_91 [label="Exit Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="324-324", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JTokenTests.cs"];
m0_99 [label="Entry string.Equals(string, string)", span="0-0", cluster="string.Equals(string, string)", file="JTokenTests.cs"];
m0_93 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JTokenTests.cs"];
m0_92 [label="Entry Newtonsoft.Json.Tests.StringAssert.Normalize(string)", span="340-340", cluster="Newtonsoft.Json.Tests.StringAssert.Normalize(string)", file="JTokenTests.cs"];
m0_100 [label="s != null", span="342-342", cluster="Newtonsoft.Json.Tests.StringAssert.Normalize(string)", file="JTokenTests.cs"];
m0_101 [label="s = Regex.Replace(s, ''\r\n'')", span="344-344", cluster="Newtonsoft.Json.Tests.StringAssert.Normalize(string)", file="JTokenTests.cs"];
m0_903 [label="Entry Newtonsoft.Json.Linq.JToken.SelectToken(string)", span="2297-2297", cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string)", file="JTokenTests.cs"];
m0_4 [label="JObject j2 = JObject.Parse(ob2)", span="65-65", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DeepEqualsObjectOrder()", file="JTokenTests.cs", color=green, community=0];
m0_5 [label="Assert.IsTrue(j1.DeepEquals(j2))", span="66-66", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DeepEqualsObjectOrder()", file="JTokenTests.cs", color=green, community=0];
m0_6 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.DeepEqualsObjectOrder()", span="59-59", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DeepEqualsObjectOrder()", file="JTokenTests.cs"];
m0_509 [label="Entry Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", span="1939-1939", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JTokenTests.cs"];
m0_103 [label="Exit Newtonsoft.Json.Tests.StringAssert.Normalize(string)", span="340-340", cluster="Newtonsoft.Json.Tests.StringAssert.Normalize(string)", file="JTokenTests.cs"];
m0_106 [label="action()", span="358-358", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JTokenTests.cs"];
m0_105 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="353-353", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JTokenTests.cs"];
m0_107 [label="Assert.Fail(''Exception of type {0} expected. No exception thrown.'', typeof(TException).Name)", span="360-360", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JTokenTests.cs"];
m0_108 [label="return null;", span="361-361", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JTokenTests.cs"];
m0_109 [label=TException, span="363-363", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JTokenTests.cs"];
m0_110 [label="possibleMessages == null || possibleMessages.Length == 0", span="365-365", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JTokenTests.cs"];
m0_111 [label="return ex;", span="367-367", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JTokenTests.cs"];
m0_112 [label=possibleMessages, span="369-369", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JTokenTests.cs"];
m0_113 [label="StringAssert.Equals(possibleMessage, ex.Message)", span="371-371", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JTokenTests.cs"];
m0_267 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="154-154", cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="JTokenTests.cs"];
m0_741 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="912-912", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JTokenTests.cs"];
m0_706 [label="Entry Newtonsoft.Json.Linq.JContainer.DescendantsAndSelf()", span="298-298", cluster="Newtonsoft.Json.Linq.JContainer.DescendantsAndSelf()", file="JTokenTests.cs"];
m0_802 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", span="1012-1012", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", file="JTokenTests.cs"];
m0_803 [label="JArray a =\r\n                new JArray(\r\n                    new JValue(new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc))\r\n                    )", span="1014-1017", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", file="JTokenTests.cs"];
m0_807 [label="Assert.AreEqual(@''[''''2009-02-15T00:00:00Z'''']'', json)", span="1027-1027", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", file="JTokenTests.cs"];
m0_804 [label="string json = a.ToString(Formatting.Indented, new IsoDateTimeConverter())", span="1019-1019", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", file="JTokenTests.cs"];
m0_806 [label="json = JsonConvert.SerializeObject(a, new IsoDateTimeConverter())", span="1025-1025", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", file="JTokenTests.cs"];
m0_805 [label="StringAssert.AreEqual(@''[\r\n  ''''2009-02-15T00:00:00Z''''\r\n]'', json)", span="1021-1023", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", file="JTokenTests.cs"];
m0_808 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", span="1012-1012", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", file="JTokenTests.cs"];
m0_273 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", span="172-172", cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", file="JTokenTests.cs"];
m0_743 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="456-456", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JTokenTests.cs"];
m0_114 [label="return ex;", span="373-373", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JTokenTests.cs"];
m0_115 [label="throw new Exception(''Unexpected exception message.'' + Environment.NewLine + ''Expected one of: '' + string.Join(Environment.NewLine, possibleMessages) + Environment.NewLine + ''Got: '' + ex.Message + Environment.NewLine + Environment.NewLine + ex);", span="377-377", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JTokenTests.cs"];
m0_116 [label=Exception, span="379-379", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JTokenTests.cs"];
m0_117 [label="throw new Exception(string.Format(''Exception of type {0} expected; got exception of type {1}.'', typeof(TException).Name, ex.GetType().Name), ex);", span="381-381", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JTokenTests.cs"];
m0_118 [label="Exit Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="353-353", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JTokenTests.cs"];
m0_277 [label="Entry Unk.AreEquivalent", span="", cluster="Unk.AreEquivalent", file="JTokenTests.cs"];
m0_637 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", span="730-730", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="JTokenTests.cs"];
m0_638 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="732-738", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="JTokenTests.cs"];
m0_646 [label="Assert.AreEqual(a[1], ancestors[1])", span="753-753", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="JTokenTests.cs"];
m0_647 [label="Assert.AreEqual(a, ancestors[2])", span="754-754", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="JTokenTests.cs"];
m0_649 [label="Assert.AreEqual(o.Property(''prop1''), ancestors[4])", span="756-756", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="JTokenTests.cs"];
m0_650 [label="Assert.AreEqual(o, ancestors[5])", span="757-757", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="JTokenTests.cs"];
m0_645 [label="Assert.AreEqual(t1, ancestors[0])", span="752-752", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="JTokenTests.cs"];
m0_648 [label="Assert.AreEqual(t2, ancestors[3])", span="755-755", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="JTokenTests.cs"];
m0_644 [label="Assert.AreEqual(6, ancestors.Count())", span="751-751", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="JTokenTests.cs"];
m0_639 [label="JObject o = new JObject\r\n            {\r\n                { ''prop1'', ''value1'' }\r\n            }", span="740-743", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="JTokenTests.cs"];
m0_640 [label="JToken t1 = a[1][0]", span="745-745", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="JTokenTests.cs"];
m0_643 [label="List<JToken> ancestors = source.AncestorsAndSelf().ToList()", span="750-750", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="JTokenTests.cs"];
m0_641 [label="JToken t2 = o[''prop1'']", span="746-746", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="JTokenTests.cs"];
m0_642 [label="List<JToken> source = new List<JToken> { t1, t2 }", span="748-748", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="JTokenTests.cs"];
m0_651 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", span="730-730", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="JTokenTests.cs"];
m0_740 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="JTokenTests.cs"];
m0_262 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(bool)", span="145-145", cluster="Newtonsoft.Json.Linq.JValue.JValue(bool)", file="JTokenTests.cs"];
m0_258 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JTokenTests.cs"];
m0_0 [label="Entry Newtonsoft.Json.Tests.TestReflectionUtils.GetConstructors(System.Type)", span="61-61", cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetConstructors(System.Type)", file="JTokenTests.cs"];
m0_1 [label="return type.GetConstructors();", span="64-64", cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetConstructors(System.Type)", color=green, community=0, file="JTokenTests.cs"];
m0_2 [label="Exit Newtonsoft.Json.Tests.TestReflectionUtils.GetConstructors(System.Type)", span="61-61", cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetConstructors(System.Type)", color=green, community=0, file="JTokenTests.cs"];
m0_811 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="340-340", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JTokenTests.cs"];
m0_879 [label="Entry lambda expression", span="1204-1213", cluster="lambda expression", file="JTokenTests.cs"];
m0_336 [label="var i = (DateTime)new JValue(1)", span="406-406", cluster="lambda expression", file="JTokenTests.cs"];
m0_361 [label="var i = (Uri)new JValue(1)", span="415-415", cluster="lambda expression", file="JTokenTests.cs"];
m0_385 [label="var i = (TimeSpan)new JValue(1)", span="426-426", cluster="lambda expression", file="JTokenTests.cs"];
m0_412 [label="var i = (Guid)new JValue(1)", span="438-438", cluster="lambda expression", file="JTokenTests.cs"];
m0_376 [label="var i = (Uri)new JValue(DateTime.Now)", span="420-420", cluster="lambda expression", file="JTokenTests.cs"];
m0_400 [label="var i = (TimeSpan)new JValue(DateTime.Now)", span="431-431", cluster="lambda expression", file="JTokenTests.cs"];
m0_424 [label="var i = (Guid)new JValue(DateTime.Now)", span="442-442", cluster="lambda expression", file="JTokenTests.cs"];
m0_454 [label="var i = (sbyte?)new JValue(DateTime.Now)", span="461-461", cluster="lambda expression", file="JTokenTests.cs"];
m0_457 [label="var i = (sbyte)new JValue(DateTime.Now)", span="462-462", cluster="lambda expression", file="JTokenTests.cs"];
m0_379 [label="var i = (Uri)new JValue(DateTimeOffset.Now)", span="422-422", cluster="lambda expression", file="JTokenTests.cs"];
m0_403 [label="var i = (TimeSpan)new JValue(DateTimeOffset.Now)", span="433-433", cluster="lambda expression", file="JTokenTests.cs"];
m0_427 [label="var i = (Guid)new JValue(DateTimeOffset.Now)", span="444-444", cluster="lambda expression", file="JTokenTests.cs"];
m0_333 [label="var i = (DateTime)new JValue(true)", span="405-405", cluster="lambda expression", file="JTokenTests.cs"];
m0_358 [label="var i = (Uri)new JValue(true)", span="414-414", cluster="lambda expression", file="JTokenTests.cs"];
m0_382 [label="var i = (TimeSpan)new JValue(true)", span="425-425", cluster="lambda expression", file="JTokenTests.cs"];
m0_409 [label="var i = (Guid)new JValue(true)", span="437-437", cluster="lambda expression", file="JTokenTests.cs"];
m0_436 [label="var i = (DateTimeOffset)new JValue(true)", span="450-450", cluster="lambda expression", file="JTokenTests.cs"];
m0_439 [label="var i = (Uri)new JValue(true)", span="452-452", cluster="lambda expression", file="JTokenTests.cs"];
m0_339 [label="var i = (DateTime)new JValue(1.1)", span="407-407", cluster="lambda expression", file="JTokenTests.cs"];
m0_364 [label="var i = (Uri)new JValue(1.1)", span="416-416", cluster="lambda expression", file="JTokenTests.cs"];
m0_388 [label="var i = (TimeSpan)new JValue(1.1)", span="427-427", cluster="lambda expression", file="JTokenTests.cs"];
m0_415 [label="var i = (Guid)new JValue(1.1)", span="439-439", cluster="lambda expression", file="JTokenTests.cs"];
m0_460 [label="var i = (new JValue(''Ordinal1'')).ToObject<StringComparison>()", span="464-464", cluster="lambda expression", file="JTokenTests.cs"];
m0_463 [label="var i = (new JValue(''Ordinal1'')).ToObject<StringComparison?>()", span="465-465", cluster="lambda expression", file="JTokenTests.cs"];
m0_342 [label="var i = (DateTime)new JValue(1.1m)", span="408-408", cluster="lambda expression", file="JTokenTests.cs"];
m0_367 [label="var i = (Uri)new JValue(1.1m)", span="417-417", cluster="lambda expression", file="JTokenTests.cs"];
m0_391 [label="var i = (TimeSpan)new JValue(1.1m)", span="428-428", cluster="lambda expression", file="JTokenTests.cs"];
m0_418 [label="var i = (Guid)new JValue(1.1m)", span="440-440", cluster="lambda expression", file="JTokenTests.cs"];
m0_351 [label="var i = (DateTime)JValue.CreateNull()", span="411-411", cluster="lambda expression", file="JTokenTests.cs"];
m0_394 [label="var i = (TimeSpan)JValue.CreateNull()", span="429-429", cluster="lambda expression", file="JTokenTests.cs"];
m0_421 [label="var i = (Guid)JValue.CreateNull()", span="441-441", cluster="lambda expression", file="JTokenTests.cs"];
m0_445 [label="var i = (JValue.CreateNull()).ToObject<BigInteger>()", span="456-456", cluster="lambda expression", file="JTokenTests.cs"];
m0_345 [label="var i = (DateTime)new JValue(TimeSpan.Zero)", span="409-409", cluster="lambda expression", file="JTokenTests.cs"];
m0_370 [label="var i = (Uri)new JValue(TimeSpan.Zero)", span="418-418", cluster="lambda expression", file="JTokenTests.cs"];
m0_430 [label="var i = (Guid)new JValue(TimeSpan.FromMinutes(1))", span="446-446", cluster="lambda expression", file="JTokenTests.cs"];
m0_354 [label="var i = (DateTime)new JValue(Guid.NewGuid())", span="412-412", cluster="lambda expression", file="JTokenTests.cs"];
m0_373 [label="var i = (Uri)new JValue(Guid.NewGuid())", span="419-419", cluster="lambda expression", file="JTokenTests.cs"];
m0_397 [label="var i = (TimeSpan)new JValue(Guid.NewGuid())", span="430-430", cluster="lambda expression", file="JTokenTests.cs"];
m0_448 [label="var i = (new JValue(Guid.NewGuid())).ToObject<BigInteger>()", span="457-457", cluster="lambda expression", file="JTokenTests.cs"];
m0_451 [label="var i = (new JValue(Guid.NewGuid())).ToObject<BigInteger?>()", span="458-458", cluster="lambda expression", file="JTokenTests.cs"];
m0_348 [label="var i = (DateTime)new JValue(new Uri(''http://www.google.com''))", span="410-410", cluster="lambda expression", file="JTokenTests.cs"];
m0_406 [label="var i = (TimeSpan)new JValue(new Uri(''http://www.google.com''))", span="435-435", cluster="lambda expression", file="JTokenTests.cs"];
m0_433 [label="var i = (Guid)new JValue(new Uri(''http://www.google.com''))", span="447-447", cluster="lambda expression", file="JTokenTests.cs"];
m0_442 [label="var i = (new JValue(new Uri(''http://www.google.com''))).ToObject<BigInteger>()", span="455-455", cluster="lambda expression", file="JTokenTests.cs"];
m0_335 [label="Entry lambda expression", span="406-406", cluster="lambda expression", file="JTokenTests.cs"];
m0_337 [label="Exit lambda expression", span="406-406", cluster="lambda expression", file="JTokenTests.cs"];
m0_360 [label="Entry lambda expression", span="415-415", cluster="lambda expression", file="JTokenTests.cs"];
m0_362 [label="Exit lambda expression", span="415-415", cluster="lambda expression", file="JTokenTests.cs"];
m0_384 [label="Entry lambda expression", span="426-426", cluster="lambda expression", file="JTokenTests.cs"];
m0_386 [label="Exit lambda expression", span="426-426", cluster="lambda expression", file="JTokenTests.cs"];
m0_411 [label="Entry lambda expression", span="438-438", cluster="lambda expression", file="JTokenTests.cs"];
m0_413 [label="Exit lambda expression", span="438-438", cluster="lambda expression", file="JTokenTests.cs"];
m0_375 [label="Entry lambda expression", span="420-420", cluster="lambda expression", file="JTokenTests.cs"];
m0_377 [label="Exit lambda expression", span="420-420", cluster="lambda expression", file="JTokenTests.cs"];
m0_399 [label="Entry lambda expression", span="431-431", cluster="lambda expression", file="JTokenTests.cs"];
m0_401 [label="Exit lambda expression", span="431-431", cluster="lambda expression", file="JTokenTests.cs"];
m0_423 [label="Entry lambda expression", span="442-442", cluster="lambda expression", file="JTokenTests.cs"];
m0_425 [label="Exit lambda expression", span="442-442", cluster="lambda expression", file="JTokenTests.cs"];
m0_453 [label="Entry lambda expression", span="461-461", cluster="lambda expression", file="JTokenTests.cs"];
m0_455 [label="Exit lambda expression", span="461-461", cluster="lambda expression", file="JTokenTests.cs"];
m0_456 [label="Entry lambda expression", span="462-462", cluster="lambda expression", file="JTokenTests.cs"];
m0_458 [label="Exit lambda expression", span="462-462", cluster="lambda expression", file="JTokenTests.cs"];
m0_378 [label="Entry lambda expression", span="422-422", cluster="lambda expression", file="JTokenTests.cs"];
m0_380 [label="Exit lambda expression", span="422-422", cluster="lambda expression", file="JTokenTests.cs"];
m0_402 [label="Entry lambda expression", span="433-433", cluster="lambda expression", file="JTokenTests.cs"];
m0_404 [label="Exit lambda expression", span="433-433", cluster="lambda expression", file="JTokenTests.cs"];
m0_426 [label="Entry lambda expression", span="444-444", cluster="lambda expression", file="JTokenTests.cs"];
m0_428 [label="Exit lambda expression", span="444-444", cluster="lambda expression", file="JTokenTests.cs"];
m0_332 [label="Entry lambda expression", span="405-405", cluster="lambda expression", file="JTokenTests.cs"];
m0_334 [label="Exit lambda expression", span="405-405", cluster="lambda expression", file="JTokenTests.cs"];
m0_357 [label="Entry lambda expression", span="414-414", cluster="lambda expression", file="JTokenTests.cs"];
m0_359 [label="Exit lambda expression", span="414-414", cluster="lambda expression", file="JTokenTests.cs"];
m0_381 [label="Entry lambda expression", span="425-425", cluster="lambda expression", file="JTokenTests.cs"];
m0_383 [label="Exit lambda expression", span="425-425", cluster="lambda expression", file="JTokenTests.cs"];
m0_408 [label="Entry lambda expression", span="437-437", cluster="lambda expression", file="JTokenTests.cs"];
m0_410 [label="Exit lambda expression", span="437-437", cluster="lambda expression", file="JTokenTests.cs"];
m0_435 [label="Entry lambda expression", span="450-450", cluster="lambda expression", file="JTokenTests.cs"];
m0_437 [label="Exit lambda expression", span="450-450", cluster="lambda expression", file="JTokenTests.cs"];
m0_438 [label="Entry lambda expression", span="452-452", cluster="lambda expression", file="JTokenTests.cs"];
m0_440 [label="Exit lambda expression", span="452-452", cluster="lambda expression", file="JTokenTests.cs"];
m0_338 [label="Entry lambda expression", span="407-407", cluster="lambda expression", file="JTokenTests.cs"];
m0_340 [label="Exit lambda expression", span="407-407", cluster="lambda expression", file="JTokenTests.cs"];
m0_363 [label="Entry lambda expression", span="416-416", cluster="lambda expression", file="JTokenTests.cs"];
m0_365 [label="Exit lambda expression", span="416-416", cluster="lambda expression", file="JTokenTests.cs"];
m0_387 [label="Entry lambda expression", span="427-427", cluster="lambda expression", file="JTokenTests.cs"];
m0_389 [label="Exit lambda expression", span="427-427", cluster="lambda expression", file="JTokenTests.cs"];
m0_414 [label="Entry lambda expression", span="439-439", cluster="lambda expression", file="JTokenTests.cs"];
m0_416 [label="Exit lambda expression", span="439-439", cluster="lambda expression", file="JTokenTests.cs"];
m0_459 [label="Entry lambda expression", span="464-464", cluster="lambda expression", file="JTokenTests.cs"];
m0_461 [label="Exit lambda expression", span="464-464", cluster="lambda expression", file="JTokenTests.cs"];
m0_462 [label="Entry lambda expression", span="465-465", cluster="lambda expression", file="JTokenTests.cs"];
m0_464 [label="Exit lambda expression", span="465-465", cluster="lambda expression", file="JTokenTests.cs"];
m0_341 [label="Entry lambda expression", span="408-408", cluster="lambda expression", file="JTokenTests.cs"];
m0_343 [label="Exit lambda expression", span="408-408", cluster="lambda expression", file="JTokenTests.cs"];
m0_366 [label="Entry lambda expression", span="417-417", cluster="lambda expression", file="JTokenTests.cs"];
m0_368 [label="Exit lambda expression", span="417-417", cluster="lambda expression", file="JTokenTests.cs"];
m0_390 [label="Entry lambda expression", span="428-428", cluster="lambda expression", file="JTokenTests.cs"];
m0_392 [label="Exit lambda expression", span="428-428", cluster="lambda expression", file="JTokenTests.cs"];
m0_417 [label="Entry lambda expression", span="440-440", cluster="lambda expression", file="JTokenTests.cs"];
m0_419 [label="Exit lambda expression", span="440-440", cluster="lambda expression", file="JTokenTests.cs"];
m0_350 [label="Entry lambda expression", span="411-411", cluster="lambda expression", file="JTokenTests.cs"];
m0_352 [label="Exit lambda expression", span="411-411", cluster="lambda expression", file="JTokenTests.cs"];
m0_393 [label="Entry lambda expression", span="429-429", cluster="lambda expression", file="JTokenTests.cs"];
m0_395 [label="Exit lambda expression", span="429-429", cluster="lambda expression", file="JTokenTests.cs"];
m0_420 [label="Entry lambda expression", span="441-441", cluster="lambda expression", file="JTokenTests.cs"];
m0_422 [label="Exit lambda expression", span="441-441", cluster="lambda expression", file="JTokenTests.cs"];
m0_444 [label="Entry lambda expression", span="456-456", cluster="lambda expression", file="JTokenTests.cs"];
m0_446 [label="Exit lambda expression", span="456-456", cluster="lambda expression", file="JTokenTests.cs"];
m0_344 [label="Entry lambda expression", span="409-409", cluster="lambda expression", file="JTokenTests.cs"];
m0_346 [label="Exit lambda expression", span="409-409", cluster="lambda expression", file="JTokenTests.cs"];
m0_369 [label="Entry lambda expression", span="418-418", cluster="lambda expression", file="JTokenTests.cs"];
m0_371 [label="Exit lambda expression", span="418-418", cluster="lambda expression", file="JTokenTests.cs"];
m0_429 [label="Entry lambda expression", span="446-446", cluster="lambda expression", file="JTokenTests.cs"];
m0_431 [label="Exit lambda expression", span="446-446", cluster="lambda expression", file="JTokenTests.cs"];
m0_353 [label="Entry lambda expression", span="412-412", cluster="lambda expression", file="JTokenTests.cs"];
m0_355 [label="Exit lambda expression", span="412-412", cluster="lambda expression", file="JTokenTests.cs"];
m0_372 [label="Entry lambda expression", span="419-419", cluster="lambda expression", file="JTokenTests.cs"];
m0_374 [label="Exit lambda expression", span="419-419", cluster="lambda expression", file="JTokenTests.cs"];
m0_396 [label="Entry lambda expression", span="430-430", cluster="lambda expression", file="JTokenTests.cs"];
m0_398 [label="Exit lambda expression", span="430-430", cluster="lambda expression", file="JTokenTests.cs"];
m0_447 [label="Entry lambda expression", span="457-457", cluster="lambda expression", file="JTokenTests.cs"];
m0_449 [label="Exit lambda expression", span="457-457", cluster="lambda expression", file="JTokenTests.cs"];
m0_450 [label="Entry lambda expression", span="458-458", cluster="lambda expression", file="JTokenTests.cs"];
m0_452 [label="Exit lambda expression", span="458-458", cluster="lambda expression", file="JTokenTests.cs"];
m0_347 [label="Entry lambda expression", span="410-410", cluster="lambda expression", file="JTokenTests.cs"];
m0_349 [label="Exit lambda expression", span="410-410", cluster="lambda expression", file="JTokenTests.cs"];
m0_405 [label="Entry lambda expression", span="435-435", cluster="lambda expression", file="JTokenTests.cs"];
m0_407 [label="Exit lambda expression", span="435-435", cluster="lambda expression", file="JTokenTests.cs"];
m0_432 [label="Entry lambda expression", span="447-447", cluster="lambda expression", file="JTokenTests.cs"];
m0_434 [label="Exit lambda expression", span="447-447", cluster="lambda expression", file="JTokenTests.cs"];
m0_441 [label="Entry lambda expression", span="455-455", cluster="lambda expression", file="JTokenTests.cs"];
m0_443 [label="Exit lambda expression", span="455-455", cluster="lambda expression", file="JTokenTests.cs"];
m0_785 [label="JObject o = new JObject()", span="981-981", cluster="lambda expression", file="JTokenTests.cs"];
m0_881 [label="JToken.Parse(json)", span="1212-1212", cluster="lambda expression", file="JTokenTests.cs"];
m0_784 [label="Entry lambda expression", span="979-983", cluster="lambda expression", file="JTokenTests.cs"];
m0_786 [label="o.Add(5)", span="982-982", cluster="lambda expression", file="JTokenTests.cs"];
m0_880 [label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n],''", span="1206-1210", cluster="lambda expression", file="JTokenTests.cs"];
m0_882 [label="Exit lambda expression", span="1204-1213", cluster="lambda expression", file="JTokenTests.cs"];
m0_774 [label="Entry lambda expression", span="969-973", cluster="lambda expression", file="JTokenTests.cs"];
m0_787 [label="Exit lambda expression", span="979-983", cluster="lambda expression", file="JTokenTests.cs"];
m0_775 [label="JArray a = new JArray()", span="971-971", cluster="lambda expression", file="JTokenTests.cs"];
m0_776 [label="a.Add(new JProperty(''PropertyName''))", span="972-972", cluster="lambda expression", file="JTokenTests.cs"];
m0_777 [label="Exit lambda expression", span="969-973", cluster="lambda expression", file="JTokenTests.cs"];
m0_47 [label="Entry System.BitConverter.ToString(byte[])", span="0-0", cluster="System.BitConverter.ToString(byte[])", file="JTokenTests.cs"];
m0_636 [label="Entry Newtonsoft.Json.Linq.JToken.AncestorsAndSelf()", span="277-277", cluster="Newtonsoft.Json.Linq.JToken.AncestorsAndSelf()", file="JTokenTests.cs"];
m0_680 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", span="810-810", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="JTokenTests.cs"];
m0_687 [label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2, 3), descendants[descendants.Count - 6]))", span="830-830", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="JTokenTests.cs"];
m0_684 [label="List<JToken> descendants = source.Descendants().ToList()", span="827-827", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="JTokenTests.cs"];
m0_686 [label="Assert.AreEqual(5, (int)descendants[0])", span="829-829", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="JTokenTests.cs"];
m0_688 [label="Assert.AreEqual(1, (int)descendants[descendants.Count - 5])", span="831-831", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="JTokenTests.cs"];
m0_681 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="812-818", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="JTokenTests.cs"];
m0_683 [label="List<JContainer> source = new List<JContainer> { a, o }", span="825-825", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="JTokenTests.cs"];
m0_685 [label="Assert.AreEqual(12, descendants.Count())", span="828-828", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="JTokenTests.cs"];
m0_689 [label="Assert.AreEqual(2, (int)descendants[descendants.Count - 4])", span="832-832", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="JTokenTests.cs"];
m0_690 [label="Assert.AreEqual(3, (int)descendants[descendants.Count - 3])", span="833-833", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="JTokenTests.cs"];
m0_691 [label="Assert.AreEqual(o.Property(''prop1''), descendants[descendants.Count - 2])", span="834-834", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="JTokenTests.cs"];
m0_692 [label="Assert.AreEqual(o[''prop1''], descendants[descendants.Count - 1])", span="835-835", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="JTokenTests.cs"];
m0_682 [label="JObject o = new JObject\r\n            {\r\n                { ''prop1'', ''value1'' }\r\n            }", span="820-823", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="JTokenTests.cs"];
m0_693 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", span="810-810", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="JTokenTests.cs"];
m0_778 [label="Entry Newtonsoft.Json.Linq.JArray.JArray()", span="65-65", cluster="Newtonsoft.Json.Linq.JArray.JArray()", file="JTokenTests.cs"];
m0_8 [label="Entry Newtonsoft.Json.Tests.TestReflectionUtils.GetField(System.Type, string)", span="79-79", cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetField(System.Type, string)", file="JTokenTests.cs"];
m0_605 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JTokenTests.cs"];
m0_742 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="406-406", cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JTokenTests.cs"];
m0_140 [label="Assert.AreEqual(null, (long?)new JValue((long?)null))", span="266-266", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_573 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", span="603-603", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m0_580 [label="Assert.IsTrue(JToken.DeepEquals(new JArray(9, 10), a[1]))", span="621-621", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m0_575 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    6,\r\n                    new JArray(7, 8),\r\n                    new JArray(9, 10)\r\n                    )", span="606-612", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m0_579 [label="Assert.AreEqual(6, (int)a[0])", span="620-620", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m0_581 [label="Assert.AreEqual(2, a.Count())", span="622-622", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m0_574 [label="JToken t", span="605-605", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m0_576 [label="a[0].Remove()", span="614-614", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m0_577 [label="Assert.AreEqual(6, (int)a[0])", span="616-616", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m0_578 [label="a[1].Remove()", span="618-618", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m0_582 [label="t = a[1]", span="624-624", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m0_584 [label="Assert.AreEqual(6, (int)a[0])", span="626-626", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m0_588 [label="t = a[0]", span="631-631", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m0_590 [label="Assert.AreEqual(0, a.Count())", span="633-633", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m0_583 [label="t.Remove()", span="625-625", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m0_585 [label="Assert.IsNull(t.Next)", span="627-627", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m0_586 [label="Assert.IsNull(t.Previous)", span="628-628", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m0_587 [label="Assert.IsNull(t.Parent)", span="629-629", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m0_589 [label="t.Remove()", span="632-632", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m0_591 [label="Assert.IsNull(t.Next)", span="635-635", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m0_592 [label="Assert.IsNull(t.Previous)", span="636-636", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m0_593 [label="Assert.IsNull(t.Parent)", span="637-637", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m0_594 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", span="603-603", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m0_510 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(char)", span="88-88", cluster="Newtonsoft.Json.Linq.JValue.JValue(char)", file="JTokenTests.cs"];
m0_606 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", span="660-660", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenTests.cs"];
m0_611 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(5), beforeTokens[0]))", span="674-674", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenTests.cs"];
m0_612 [label="Assert.IsTrue(JToken.DeepEquals(new JArray(1), beforeTokens[1]))", span="675-675", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenTests.cs"];
m0_609 [label="List<JToken> beforeTokens = t.BeforeSelf().ToList()", span="671-671", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenTests.cs"];
m0_610 [label="Assert.AreEqual(2, beforeTokens.Count)", span="673-673", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenTests.cs"];
m0_607 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="662-668", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenTests.cs"];
m0_608 [label="JToken t = a[2]", span="670-670", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenTests.cs"];
m0_613 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", span="660-660", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenTests.cs"];
m0_801 [label="Entry Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)", span="407-407", cluster="Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)", file="JTokenTests.cs"];
m0_707 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", span="860-860", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="JTokenTests.cs"];
m0_715 [label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2, 3), descendantsAndSelf[descendantsAndSelf.Count - 7]))", span="881-881", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="JTokenTests.cs"];
m0_711 [label="List<JToken> descendantsAndSelf = source.DescendantsAndSelf().ToList()", span="877-877", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="JTokenTests.cs"];
m0_714 [label="Assert.AreEqual(5, (int)descendantsAndSelf[1])", span="880-880", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="JTokenTests.cs"];
m0_716 [label="Assert.AreEqual(1, (int)descendantsAndSelf[descendantsAndSelf.Count - 6])", span="882-882", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="JTokenTests.cs"];
m0_708 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="862-868", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="JTokenTests.cs"];
m0_710 [label="List<JContainer> source = new List<JContainer> { a, o }", span="875-875", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="JTokenTests.cs"];
m0_712 [label="Assert.AreEqual(14, descendantsAndSelf.Count())", span="878-878", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="JTokenTests.cs"];
m0_713 [label="Assert.AreEqual(a, descendantsAndSelf[0])", span="879-879", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="JTokenTests.cs"];
m0_717 [label="Assert.AreEqual(2, (int)descendantsAndSelf[descendantsAndSelf.Count - 5])", span="883-883", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="JTokenTests.cs"];
m0_718 [label="Assert.AreEqual(3, (int)descendantsAndSelf[descendantsAndSelf.Count - 4])", span="884-884", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="JTokenTests.cs"];
m0_719 [label="Assert.AreEqual(o, descendantsAndSelf[descendantsAndSelf.Count - 3])", span="885-885", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="JTokenTests.cs"];
m0_720 [label="Assert.AreEqual(o.Property(''prop1''), descendantsAndSelf[descendantsAndSelf.Count - 2])", span="886-886", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="JTokenTests.cs"];
m0_721 [label="Assert.AreEqual(o[''prop1''], descendantsAndSelf[descendantsAndSelf.Count - 1])", span="887-887", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="JTokenTests.cs"];
m0_709 [label="JObject o = new JObject\r\n            {\r\n                { ''prop1'', ''value1'' }\r\n            }", span="870-873", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="JTokenTests.cs"];
m0_722 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", span="860-860", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="JTokenTests.cs"];
m0_264 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(double)", span="107-107", cluster="Newtonsoft.Json.Linq.JValue.JValue(double)", file="JTokenTests.cs"];
m0_653 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JTokenTests.cs"];
m0_857 [label="Entry Newtonsoft.Json.Linq.JToken.DeepClone()", span="2391-2391", cluster="Newtonsoft.Json.Linq.JToken.DeepClone()", file="JTokenTests.cs"];
m0_912 [label="Entry Newtonsoft.Json.Linq.JsonLoadSettings.JsonLoadSettings()", span="7-7", cluster="Newtonsoft.Json.Linq.JsonLoadSettings.JsonLoadSettings()", file="JTokenTests.cs"];
m0_49 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Load()", span="114-114", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Load()", file="JTokenTests.cs"];
m0_50 [label="JObject o = (JObject)JToken.Load(new JsonTextReader(new StringReader(''{'pie':true}'')))", span="116-116", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Load()", file="JTokenTests.cs"];
m0_51 [label="Assert.AreEqual(true, (bool)o[''pie''])", span="117-117", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Load()", file="JTokenTests.cs"];
m0_54 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Parse()", span="121-121", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse()", file="JTokenTests.cs"];
m0_52 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Load()", span="114-114", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Load()", file="JTokenTests.cs"];
m0_55 [label="JObject o = (JObject)JToken.Parse(''{'pie':true}'')", span="123-123", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse()", file="JTokenTests.cs"];
m0_56 [label="Assert.AreEqual(true, (bool)o[''pie''])", span="124-124", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse()", file="JTokenTests.cs"];
m0_57 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Parse()", span="121-121", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse()", file="JTokenTests.cs"];
m0_282 [label="Entry BigInteger.cstr", span="", cluster="BigInteger.cstr", file="JTokenTests.cs"];
m0_596 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", span="641-641", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenTests.cs"];
m0_601 [label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2), afterTokens[0]))", span="655-655", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenTests.cs"];
m0_602 [label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2, 3), afterTokens[1]))", span="656-656", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenTests.cs"];
m0_599 [label="List<JToken> afterTokens = t.AfterSelf().ToList()", span="652-652", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenTests.cs"];
m0_600 [label="Assert.AreEqual(2, afterTokens.Count)", span="654-654", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenTests.cs"];
m0_597 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="643-649", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenTests.cs"];
m0_598 [label="JToken t = a[1]", span="651-651", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenTests.cs"];
m0_603 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", span="641-641", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenTests.cs"];
m0_618 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", span="693-693", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenTests.cs"];
m0_619 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="695-701", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenTests.cs"];
m0_623 [label="Assert.AreEqual(a[1], ancestors[0])", span="706-706", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenTests.cs"];
m0_624 [label="Assert.AreEqual(a, ancestors[1])", span="707-707", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenTests.cs"];
m0_622 [label="Assert.AreEqual(2, ancestors.Count())", span="705-705", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenTests.cs"];
m0_620 [label="JToken t = a[1][0]", span="703-703", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenTests.cs"];
m0_621 [label="List<JToken> ancestors = t.Ancestors().ToList()", span="704-704", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenTests.cs"];
m0_625 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", span="693-693", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenTests.cs"];
m0_278 [label="Entry System.Guid.ToByteArray()", span="0-0", cluster="System.Guid.ToByteArray()", file="JTokenTests.cs"];
m0_875 [label="Entry Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="195-195", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JTokenTests.cs"];
m0_788 [label="Entry Newtonsoft.Json.Linq.JContainer.Add(object)", span="658-658", cluster="Newtonsoft.Json.Linq.JContainer.Add(object)", file="JTokenTests.cs"];
m0_865 [label="Entry System.ICloneable.Clone()", span="0-0", cluster="System.ICloneable.Clone()", file="JTokenTests.cs"];
m0_812 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="551-551", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JTokenTests.cs"];
m0_167 [label="Assert.AreEqual(uint.MaxValue, (uint)new JValue(uint.MaxValue))", span="293-293", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_171 [label="Assert.AreEqual(5m, (decimal)(new JValue(5L)))", span="297-297", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_172 [label="Assert.AreEqual(5m, (decimal?)(new JValue(5L)))", span="298-298", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_173 [label="Assert.AreEqual(5f, (float)(new JValue(5L)))", span="299-299", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_176 [label="Assert.AreEqual(5, (byte)(new JValue(5)))", span="302-302", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_177 [label="Assert.AreEqual(SByte.MinValue, (sbyte?)(new JValue(SByte.MinValue)))", span="303-303", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_178 [label="Assert.AreEqual(SByte.MinValue, (sbyte)(new JValue(SByte.MinValue)))", span="304-304", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_180 [label="Assert.AreEqual(''1'', (string)(new JValue(1)))", span="308-308", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_188 [label="Assert.AreEqual(true, (bool)(new JValue(1)))", span="318-318", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_192 [label="Assert.AreEqual(1, (int)(new JValue(1)))", span="322-322", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_196 [label="Assert.AreEqual(1m, (decimal)(new JValue(1)))", span="326-326", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_241 [label="Assert.AreEqual(new BigInteger(long.MaxValue), (new JValue(long.MaxValue)).ToObject<BigInteger>())", span="380-380", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_244 [label="Assert.AreEqual(new BigInteger(byte.MaxValue), (new JValue(byte.MaxValue)).ToObject<BigInteger>())", span="383-383", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_245 [label="Assert.AreEqual(new BigInteger(123), (new JValue(123)).ToObject<BigInteger>())", span="384-384", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_246 [label="Assert.AreEqual(new BigInteger(123), (new JValue(123)).ToObject<BigInteger?>())", span="385-385", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_186 [label="Assert.AreEqual(''12/12/2000 12:12:12'', (string)(new JValue(new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc))))", span="314-314", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_187 [label="Assert.AreEqual(''12/12/2000 12:12:12 +00:00'', (string)(new JValue(new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero))))", span="316-316", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_142 [label="Assert.AreEqual(null, (int?)new JValue((int?)null))", span="268-268", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_144 [label="Assert.AreEqual(null, (DateTime?)new JValue((DateTime?)null))", span="270-270", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_146 [label="Assert.AreEqual(null, (short?)new JValue((short?)null))", span="272-272", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_148 [label="Assert.AreEqual(null, (float?)new JValue((float?)null))", span="274-274", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_150 [label="Assert.AreEqual(null, (double?)new JValue((double?)null))", span="276-276", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_152 [label="Assert.AreEqual(null, (decimal?)new JValue((decimal?)null))", span="278-278", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_154 [label="Assert.AreEqual(null, (uint?)new JValue((uint?)null))", span="280-280", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_156 [label="Assert.AreEqual(null, (sbyte?)new JValue((sbyte?)null))", span="282-282", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_158 [label="Assert.AreEqual(null, (byte?)new JValue((byte?)null))", span="284-284", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_160 [label="Assert.AreEqual(null, (ulong?)new JValue((ulong?)null))", span="286-286", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_162 [label="Assert.AreEqual(null, (uint?)new JValue((uint?)null))", span="288-288", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_210 [label="Assert.AreEqual(Convert.ToBase64String(Encoding.UTF8.GetBytes(''hi'')), (string)(new JValue(Encoding.UTF8.GetBytes(''hi''))))", span="340-340", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_212 [label="Assert.AreEqual(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC''), (Guid)(new JValue(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC'').ToByteArray())))", span="342-342", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_213 [label="Assert.AreEqual(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC''), (Guid?)(new JValue(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC'').ToByteArray())))", span="343-343", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_214 [label="Assert.AreEqual((sbyte?)1, (sbyte?)(new JValue((short?)1)))", span="344-344", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_236 [label="Assert.AreEqual(data, (byte[])(new JValue(data)))", span="370-370", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_237 [label="Assert.AreEqual(5, (int)(new JValue(StringComparison.OrdinalIgnoreCase)))", span="372-372", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_249 [label="Assert.AreEqual(BigInteger.Parse(bigIntegerText), (new JValue(intData)).ToObject<BigInteger>())", span="389-389", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_239 [label="Assert.AreEqual(BigInteger.Parse(bigIntegerText), (new JValue(BigInteger.Parse(bigIntegerText))).Value)", span="377-377", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_250 [label="Assert.AreEqual(4.0d, (double)(new JValue(new BigInteger(4.5d))))", span="391-391", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_251 [label="Assert.AreEqual(true, (bool)(new JValue(new BigInteger(1))))", span="392-392", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_252 [label="Assert.AreEqual(long.MaxValue, (long)(new JValue(new BigInteger(long.MaxValue))))", span="393-393", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_253 [label="Assert.AreEqual(long.MaxValue, (long)(new JValue(new BigInteger(new byte[] { 255, 255, 255, 255, 255, 255, 255, 127 }))))", span="394-394", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_254 [label="Assert.AreEqual(''9223372036854775807'', (string)(new JValue(new BigInteger(long.MaxValue))))", span="395-395", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_255 [label="intData = (byte[])(new JValue(new BigInteger(long.MaxValue)))", span="397-397", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_242 [label="Assert.AreEqual(new BigInteger(4.5d), (new JValue((4.5d))).ToObject<BigInteger>())", span="381-381", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_243 [label="Assert.AreEqual(new BigInteger(4.5f), (new JValue((4.5f))).ToObject<BigInteger>())", span="382-382", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_183 [label="Assert.AreEqual(''True'', (string)(new JValue(true)))", span="311-311", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_191 [label="Assert.AreEqual(true, (bool)(new JValue(true)))", span="321-321", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_195 [label="Assert.AreEqual(1, (int)(new JValue(true)))", span="325-325", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_199 [label="Assert.AreEqual(1m, (decimal)(new JValue(true)))", span="329-329", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_165 [label="Assert.AreEqual(float.MinValue, (float)new JValue(float.MinValue))", span="291-291", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_164 [label="Assert.AreEqual(11.1f, (float)new JValue(11.1))", span="290-290", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_166 [label="Assert.AreEqual(1.1, (double)new JValue(1.1))", span="292-292", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_181 [label="Assert.AreEqual(''1'', (string)(new JValue(1.0)))", span="309-309", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_189 [label="Assert.AreEqual(true, (bool)(new JValue(1.0)))", span="319-319", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_193 [label="Assert.AreEqual(1, (int)(new JValue(1.0)))", span="323-323", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_197 [label="Assert.AreEqual(1m, (decimal)(new JValue(1.0)))", span="327-327", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_168 [label="Assert.AreEqual(ulong.MaxValue, (ulong)new JValue(ulong.MaxValue))", span="294-294", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_169 [label="Assert.AreEqual(ulong.MaxValue, (ulong)new JProperty(''Test'', new JValue(ulong.MaxValue)))", span="295-295", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_170 [label="Assert.AreEqual(null, (string)new JValue((string)null))", span="296-296", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_190 [label="Assert.AreEqual(true, (bool)(new JValue(''true'')))", span="320-320", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_194 [label="Assert.AreEqual(1, (int)(new JValue(''1'')))", span="324-324", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_198 [label="Assert.AreEqual(1m, (decimal)(new JValue(''1'')))", span="328-328", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_202 [label="Assert.AreEqual(TimeSpan.FromMinutes(1), (TimeSpan)(new JValue(''00:01:00'')))", span="332-332", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_205 [label="Assert.AreEqual(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC''), (Guid)(new JValue(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC'')))", span="335-335", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_207 [label="Assert.AreEqual(new Uri(''http://www.google.com''), (Uri)(new JValue(''http://www.google.com'')))", span="337-337", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_211 [label="CollectionAssert.AreEquivalent((byte[])Encoding.UTF8.GetBytes(''hi''), (byte[])(new JValue(Convert.ToBase64String(Encoding.UTF8.GetBytes(''hi'')))))", span="341-341", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_240 [label="Assert.AreEqual(BigInteger.Parse(bigIntegerText), (new JValue(bigIntegerText)).ToObject<BigInteger>())", span="379-379", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_174 [label="Assert.AreEqual(5f, (float)(new JValue(5m)))", span="300-300", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_175 [label="Assert.AreEqual(5f, (float?)(new JValue(5m)))", span="301-301", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_182 [label="Assert.AreEqual(''1.0'', (string)(new JValue(1.0m)))", span="310-310", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_179 [label="Assert.AreEqual(null, (sbyte?)JValue.CreateNull())", span="306-306", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_184 [label="Assert.AreEqual(null, (string)(JValue.CreateNull()))", span="312-312", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_209 [label="Assert.AreEqual(null, (Uri)(JValue.CreateNull()))", span="339-339", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_247 [label="Assert.AreEqual(null, (JValue.CreateNull()).ToObject<BigInteger?>())", span="386-386", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_200 [label="Assert.AreEqual(TimeSpan.FromMinutes(1), (TimeSpan)(new JValue(TimeSpan.FromMinutes(1))))", span="330-330", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_201 [label="Assert.AreEqual(''00:01:00'', (string)(new JValue(TimeSpan.FromMinutes(1))))", span="331-331", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_203 [label="Assert.AreEqual(''46efe013-b56a-4e83-99e4-4dce7678a5bc'', (string)(new JValue(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC''))))", span="333-333", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_206 [label="Assert.AreEqual(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC''), (Guid)(new JValue(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC''))))", span="336-336", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_204 [label="Assert.AreEqual(''http://www.google.com/'', (string)(new JValue(new Uri(''http://www.google.com''))))", span="334-334", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_208 [label="Assert.AreEqual(new Uri(''http://www.google.com''), (Uri)(new JValue(new Uri(''http://www.google.com''))))", span="338-338", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_141 [label="Newtonsoft.Json.Tests.TestFixtureBase", span="", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_143 [label="Assert.AreEqual(null, (int?)(JValue)null)", span="269-269", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_145 [label="Assert.AreEqual(null, (DateTime?)(JValue)null)", span="271-271", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_147 [label="Assert.AreEqual(null, (short?)(JValue)null)", span="273-273", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_149 [label="Assert.AreEqual(null, (float?)(JValue)null)", span="275-275", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_151 [label="Assert.AreEqual(null, (double?)(JValue)null)", span="277-277", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_153 [label="Assert.AreEqual(null, (decimal?)(JValue)null)", span="279-279", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_155 [label="Assert.AreEqual(null, (uint?)(JValue)null)", span="281-281", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_157 [label="Assert.AreEqual(null, (sbyte?)(JValue)null)", span="283-283", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_159 [label="Assert.AreEqual(null, (byte?)(JValue)null)", span="285-285", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_161 [label="Assert.AreEqual(null, (ulong?)(JValue)null)", span="287-287", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_163 [label="Assert.AreEqual(null, (uint?)(JValue)null)", span="289-289", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_185 [label="Assert.AreEqual(null, (string)(JValue)null)", span="313-313", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_215 [label="Assert.AreEqual(null, (Uri)(JValue)null)", span="346-346", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_216 [label="Assert.AreEqual(null, (int?)(JValue)null)", span="347-347", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_217 [label="Assert.AreEqual(null, (uint?)(JValue)null)", span="348-348", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_218 [label="Assert.AreEqual(null, (Guid?)(JValue)null)", span="349-349", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_219 [label="Assert.AreEqual(null, (TimeSpan?)(JValue)null)", span="350-350", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_220 [label="Assert.AreEqual(null, (byte[])(JValue)null)", span="351-351", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_221 [label="Assert.AreEqual(null, (bool?)(JValue)null)", span="352-352", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_222 [label="Assert.AreEqual(null, (char?)(JValue)null)", span="353-353", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_223 [label="Assert.AreEqual(null, (DateTime?)(JValue)null)", span="354-354", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_224 [label="Assert.AreEqual(null, (DateTimeOffset?)(JValue)null)", span="356-356", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_225 [label="Assert.AreEqual(null, (short?)(JValue)null)", span="358-358", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_226 [label="Assert.AreEqual(null, (ushort?)(JValue)null)", span="359-359", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_227 [label="Assert.AreEqual(null, (byte?)(JValue)null)", span="360-360", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_228 [label="Assert.AreEqual(null, (byte?)(JValue)null)", span="361-361", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_229 [label="Assert.AreEqual(null, (sbyte?)(JValue)null)", span="362-362", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_230 [label="Assert.AreEqual(null, (sbyte?)(JValue)null)", span="363-363", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_231 [label="Assert.AreEqual(null, (long?)(JValue)null)", span="364-364", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_232 [label="Assert.AreEqual(null, (ulong?)(JValue)null)", span="365-365", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_233 [label="Assert.AreEqual(null, (double?)(JValue)null)", span="366-366", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_234 [label="Assert.AreEqual(null, (float?)(JValue)null)", span="367-367", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_256 [label="CollectionAssert.AreEqual(new byte[] { 255, 255, 255, 255, 255, 255, 255, 127 }, intData)", span="398-398", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_235 [label="byte[] data = new byte[0]", span="369-369", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_238 [label="string bigIntegerText = ''1234567899999999999999999999999999999999999999999999999999999999999990''", span="375-375", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_248 [label="byte[] intData = BigInteger.Parse(bigIntegerText).ToByteArray()", span="388-388", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_257 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", span="249-249", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m0_263 [label="Entry Newtonsoft.Json.Linq.JValue.CreateNull()", span="595-595", cluster="Newtonsoft.Json.Linq.JValue.CreateNull()", file="JTokenTests.cs"];
m0_259 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JTokenTests.cs"];
m0_604 [label="Entry Newtonsoft.Json.Linq.JToken.AfterSelf()", span="294-294", cluster="Newtonsoft.Json.Linq.JToken.AfterSelf()", file="JTokenTests.cs"];
m0_760 [label="Entry Newtonsoft.Json.Linq.JContainer.AddFirst(object)", span="672-672", cluster="Newtonsoft.Json.Linq.JContainer.AddFirst(object)", file="JTokenTests.cs"];
m0_268 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(decimal)", span="79-79", cluster="Newtonsoft.Json.Linq.JValue.JValue(decimal)", file="JTokenTests.cs"];
m0_275 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="JTokenTests.cs"];
m0_781 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AddValueToObject()", span="977-977", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddValueToObject()", file="JTokenTests.cs"];
m0_782 [label="ExceptionAssert.Throws<ArgumentException>(() =>\r\n            {\r\n                JObject o = new JObject();\r\n                o.Add(5);\r\n            }, ''Can not add Newtonsoft.Json.Linq.JValue to Newtonsoft.Json.Linq.JObject.'')", span="979-983", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddValueToObject()", file="JTokenTests.cs"];
m0_783 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AddValueToObject()", span="977-977", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddValueToObject()", file="JTokenTests.cs"];
m0_829 [label="Entry Newtonsoft.Json.Linq.JToken.AddAfterSelf(object)", span="238-238", cluster="Newtonsoft.Json.Linq.JToken.AddAfterSelf(object)", file="JTokenTests.cs"];
m0_330 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="369-369", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JTokenTests.cs"];
m0_904 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Parse_NoComments()", span="1255-1255", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse_NoComments()", file="JTokenTests.cs"];
m0_907 [label="Assert.AreEqual(3, o[''prop''].Count())", span="1264-1264", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse_NoComments()", file="JTokenTests.cs"];
m0_908 [label="Assert.AreEqual(1, (int)o[''prop''][0])", span="1265-1265", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse_NoComments()", file="JTokenTests.cs"];
m0_909 [label="Assert.AreEqual(2, (int)o[''prop''][1])", span="1266-1266", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse_NoComments()", file="JTokenTests.cs"];
m0_910 [label="Assert.AreEqual(3, (int)o[''prop''][2])", span="1267-1267", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse_NoComments()", file="JTokenTests.cs"];
m0_906 [label="JToken o = JToken.Parse(json, new JsonLoadSettings\r\n            {\r\n                CommentHandling = CommentHandling.Ignore\r\n            })", span="1259-1262", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse_NoComments()", file="JTokenTests.cs"];
m0_905 [label="string json = ''{'prop':[1,2/*comment*/,3]}''", span="1257-1257", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse_NoComments()", file="JTokenTests.cs"];
m0_911 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Parse_NoComments()", span="1255-1255", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse_NoComments()", file="JTokenTests.cs"];
m1_96 [label="Entry string.ToCharArray()", span="0-0", cluster="string.ToCharArray()", file="StringUtils.cs"];
m1_3 [label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="67-67", cluster="string.FormatWith(System.IFormatProvider, params object[])", file="StringUtils.cs"];
m1_59 [label="Entry Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", span="146-146", cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="StringUtils.cs"];
m1_60 [label="source == null", span="148-148", cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="StringUtils.cs"];
m1_61 [label="throw new ArgumentNullException(nameof(source));", span="150-150", cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="StringUtils.cs"];
m1_62 [label="valueSelector == null", span="152-152", cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="StringUtils.cs"];
m1_63 [label="throw new ArgumentNullException(nameof(valueSelector));", span="154-154", cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="StringUtils.cs"];
m1_64 [label="var caseInsensitiveResults = source.Where(s => string.Equals(valueSelector(s), testValue, StringComparison.OrdinalIgnoreCase))", span="157-157", cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="StringUtils.cs"];
m1_67 [label="var caseSensitiveResults = source.Where(s => string.Equals(valueSelector(s), testValue, StringComparison.Ordinal))", span="165-165", cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="StringUtils.cs"];
m1_65 [label="caseInsensitiveResults.Count() <= 1", span="158-158", cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="StringUtils.cs"];
m1_66 [label="return caseInsensitiveResults.SingleOrDefault();", span="160-160", cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="StringUtils.cs"];
m1_68 [label="return caseSensitiveResults.SingleOrDefault();", span="166-166", cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="StringUtils.cs"];
m1_69 [label="Exit Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", span="146-146", cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="StringUtils.cs"];
m1_76 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="StringUtils.cs"];
m1_77 [label="Entry string.Equals(string, string, System.StringComparison)", span="0-0", cluster="string.Equals(string, string, System.StringComparison)", file="StringUtils.cs"];
m1_20 [label="Entry Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", span="83-83", cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="StringUtils.cs"];
m1_21 [label="s == null", span="85-85", cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="StringUtils.cs"];
m1_22 [label="throw new ArgumentNullException(nameof(s));", span="87-87", cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="StringUtils.cs"];
m1_23 [label="s.Length == 0", span="90-90", cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="StringUtils.cs"];
m1_26 [label="i < s.Length", span="95-95", cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="StringUtils.cs"];
m1_27 [label="!char.IsWhiteSpace(s[i])", span="97-97", cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="StringUtils.cs"];
m1_24 [label="return false;", span="92-92", cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="StringUtils.cs"];
m1_25 [label="int i = 0", span="95-95", cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="StringUtils.cs"];
m1_29 [label="i++", span="95-95", cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="StringUtils.cs"];
m1_30 [label="return true;", span="103-103", cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="StringUtils.cs"];
m1_28 [label="return false;", span="99-99", cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="StringUtils.cs"];
m1_31 [label="Exit Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", span="83-83", cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="StringUtils.cs"];
m1_107 [label="Entry Newtonsoft.Json.Utilities.StringUtils.StartsWith(string, char)", span="220-220", cluster="Newtonsoft.Json.Utilities.StringUtils.StartsWith(string, char)", file="StringUtils.cs"];
m1_108 [label="return (source.Length > 0 && source[0] == value);", span="222-222", cluster="Newtonsoft.Json.Utilities.StringUtils.StartsWith(string, char)", file="StringUtils.cs"];
m1_109 [label="Exit Newtonsoft.Json.Utilities.StringUtils.StartsWith(string, char)", span="220-220", cluster="Newtonsoft.Json.Utilities.StringUtils.StartsWith(string, char)", file="StringUtils.cs"];
m1_103 [label="Entry Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", span="211-211", cluster="Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", file="StringUtils.cs"];
m1_104 [label="return char.IsLowSurrogate(c);", span="214-214", cluster="Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", file="StringUtils.cs"];
m1_105 [label="Exit Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", span="211-211", cluster="Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", file="StringUtils.cs"];
m1_44 [label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder, System.IFormatProvider)", span="0-0", cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder, System.IFormatProvider)", file="StringUtils.cs"];
m1_99 [label="Entry Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", span="202-202", cluster="Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", file="StringUtils.cs"];
m1_100 [label="return char.IsHighSurrogate(c);", span="205-205", cluster="Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", file="StringUtils.cs"];
m1_101 [label="Exit Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", span="202-202", cluster="Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", file="StringUtils.cs"];
m1_0 [label="Entry Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object)", span="47-47", cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object)", file="StringUtils.cs"];
m1_1 [label="return format.FormatWith(provider, new[] { arg0 });", span="49-49", cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object)", file="StringUtils.cs"];
m1_2 [label="Exit Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object)", span="47-47", cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object)", file="StringUtils.cs"];
m1_33 [label="Entry char.IsWhiteSpace(char)", span="0-0", cluster="char.IsWhiteSpace(char)", file="StringUtils.cs"];
m1_38 [label="Entry Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", span="116-116", cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="StringUtils.cs"];
m1_39 [label="StringBuilder sb = new StringBuilder(capacity)", span="118-118", cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="StringUtils.cs"];
m1_40 [label="StringWriter sw = new StringWriter(sb, CultureInfo.InvariantCulture)", span="119-119", cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="StringUtils.cs"];
m1_41 [label="return sw;", span="121-121", cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="StringUtils.cs"];
m1_42 [label="Exit Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", span="116-116", cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="StringUtils.cs"];
m1_97 [label="Entry char.ToLower(char, System.Globalization.CultureInfo)", span="0-0", cluster="char.ToLower(char, System.Globalization.CultureInfo)", file="StringUtils.cs"];
m1_106 [label="Entry char.IsLowSurrogate(char)", span="0-0", cluster="char.IsLowSurrogate(char)", file="StringUtils.cs"];
m1_34 [label="Entry Newtonsoft.Json.Utilities.StringUtils.NullEmptyString(string)", span="111-111", cluster="Newtonsoft.Json.Utilities.StringUtils.NullEmptyString(string)", file="StringUtils.cs"];
m1_35 [label="return (string.IsNullOrEmpty(s)) ? null : s;", span="113-113", cluster="Newtonsoft.Json.Utilities.StringUtils.NullEmptyString(string)", file="StringUtils.cs"];
m1_36 [label="Exit Newtonsoft.Json.Utilities.StringUtils.NullEmptyString(string)", span="111-111", cluster="Newtonsoft.Json.Utilities.StringUtils.NullEmptyString(string)", file="StringUtils.cs"];
m1_17 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="StringUtils.cs"];
m1_4 [label="Entry Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object)", span="52-52", cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object)", file="StringUtils.cs"];
m1_5 [label="return format.FormatWith(provider, new[] { arg0, arg1 });", span="54-54", cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object)", file="StringUtils.cs"];
m1_6 [label="Exit Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object)", span="52-52", cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object)", file="StringUtils.cs"];
m1_45 [label="Entry Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", span="124-124", cluster="Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", file="StringUtils.cs"];
m1_46 [label="value == null", span="126-126", cluster="Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", file="StringUtils.cs"];
m1_48 [label="return value.Length;", span="132-132", cluster="Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", file="StringUtils.cs"];
m1_47 [label="return null;", span="128-128", cluster="Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", file="StringUtils.cs"];
m1_49 [label="Exit Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", span="124-124", cluster="Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", file="StringUtils.cs"];
m1_81 [label="Entry Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", span="170-170", cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs"];
m1_82 [label="string.IsNullOrEmpty(s)", span="172-172", cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", color=red, community=0, file="StringUtils.cs"];
m1_83 [label="return s;", span="174-174", cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", color=red, community=0, file="StringUtils.cs"];
m1_84 [label="!char.IsUpper(s[0])", span="177-177", cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", color=red, community=0, file="StringUtils.cs"];
m1_85 [label="return s;", span="179-179", cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs"];
m1_86 [label="char[] chars = s.ToCharArray()", span="182-182", cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs"];
m1_87 [label="int i = 0", span="184-184", cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs"];
m1_88 [label="i < chars.Length", span="184-184", cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs"];
m1_89 [label="bool hasNext = (i + 1 < chars.Length)", span="186-186", cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs"];
m1_90 [label="i > 0 && hasNext && !char.IsUpper(chars[i + 1])", span="187-187", cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs"];
m1_91 [label="chars[i] = char.ToLower(chars[i], CultureInfo.InvariantCulture)", span="193-193", cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs"];
m1_93 [label="return new string(chars);", span="199-199", cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs"];
m1_92 [label="i++", span="184-184", cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs"];
m1_94 [label="Exit Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", span="170-170", cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs"];
m1_95 [label="Entry char.IsUpper(char)", span="0-0", cluster="char.IsUpper(char)", file="StringUtils.cs"];
m1_58 [label="Entry Newtonsoft.Json.Utilities.MathUtils.IntToHex(int)", span="119-119", cluster="Newtonsoft.Json.Utilities.MathUtils.IntToHex(int)", file="StringUtils.cs"];
m1_102 [label="Entry char.IsHighSurrogate(char)", span="0-0", cluster="char.IsHighSurrogate(char)", file="StringUtils.cs"];
m1_7 [label="Entry Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object, object)", span="57-57", cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object, object)", file="StringUtils.cs"];
m1_8 [label="return format.FormatWith(provider, new[] { arg0, arg1, arg2 });", span="59-59", cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object, object)", file="StringUtils.cs"];
m1_9 [label="Exit Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object, object)", span="57-57", cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object, object)", file="StringUtils.cs"];
m1_13 [label="Entry Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, params object[])", span="67-67", cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, params object[])", file="StringUtils.cs"];
m1_14 [label="ValidationUtils.ArgumentNotNull(format, nameof(format))", span="71-71", cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, params object[])", file="StringUtils.cs"];
m1_15 [label="return string.Format(provider, format, args);", span="73-73", cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, params object[])", file="StringUtils.cs"];
m1_16 [label="Exit Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, params object[])", span="67-67", cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, params object[])", file="StringUtils.cs"];
m1_18 [label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="31-31", cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="StringUtils.cs"];
m1_19 [label="Entry string.Format(System.IFormatProvider, string, params object[])", span="0-0", cluster="string.Format(System.IFormatProvider, string, params object[])", file="StringUtils.cs"];
m1_43 [label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0", cluster="System.Text.StringBuilder.StringBuilder(int)", file="StringUtils.cs"];
m1_110 [label="Entry Newtonsoft.Json.Utilities.StringUtils.EndsWith(string, char)", span="225-225", cluster="Newtonsoft.Json.Utilities.StringUtils.EndsWith(string, char)", file="StringUtils.cs"];
m1_111 [label="return (source.Length > 0 && source[source.Length - 1] == value);", span="227-227", cluster="Newtonsoft.Json.Utilities.StringUtils.EndsWith(string, char)", file="StringUtils.cs"];
m1_112 [label="Exit Newtonsoft.Json.Utilities.StringUtils.EndsWith(string, char)", span="225-225", cluster="Newtonsoft.Json.Utilities.StringUtils.EndsWith(string, char)", file="StringUtils.cs"];
m1_98 [label="Entry string.String(char[])", span="0-0", cluster="string.String(char[])", file="StringUtils.cs"];
m1_70 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="StringUtils.cs"];
m1_78 [label="Entry lambda expression", span="165-165", cluster="lambda expression", file="StringUtils.cs"];
m1_74 [label="string.Equals(valueSelector(s), testValue, StringComparison.OrdinalIgnoreCase)", span="157-157", cluster="lambda expression", file="StringUtils.cs"];
m1_79 [label="string.Equals(valueSelector(s), testValue, StringComparison.Ordinal)", span="165-165", cluster="lambda expression", file="StringUtils.cs"];
m1_73 [label="Entry lambda expression", span="157-157", cluster="lambda expression", file="StringUtils.cs"];
m1_75 [label="Exit lambda expression", span="157-157", cluster="lambda expression", file="StringUtils.cs"];
m1_80 [label="Exit lambda expression", span="165-165", cluster="lambda expression", file="StringUtils.cs"];
m1_37 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="StringUtils.cs"];
m1_71 [label="Entry Unk.Count", span="", cluster="Unk.Count", file="StringUtils.cs"];
m1_50 [label="Entry Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", span="136-136", cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="StringUtils.cs"];
m1_51 [label="buffer[0] = '\\'", span="138-138", cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="StringUtils.cs"];
m1_52 [label="buffer[1] = 'u'", span="139-139", cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="StringUtils.cs"];
m1_53 [label="buffer[2] = MathUtils.IntToHex((c >> 12) & '\x000f')", span="140-140", cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="StringUtils.cs"];
m1_54 [label="buffer[3] = MathUtils.IntToHex((c >> 8) & '\x000f')", span="141-141", cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="StringUtils.cs"];
m1_55 [label="buffer[4] = MathUtils.IntToHex((c >> 4) & '\x000f')", span="142-142", cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="StringUtils.cs"];
m1_56 [label="buffer[5] = MathUtils.IntToHex(c & '\x000f')", span="143-143", cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="StringUtils.cs"];
m1_57 [label="Exit Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", span="136-136", cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="StringUtils.cs"];
m1_10 [label="Entry Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object, object, object)", span="62-62", cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object, object, object)", file="StringUtils.cs"];
m1_11 [label="return format.FormatWith(provider, new[] { arg0, arg1, arg2, arg3 });", span="64-64", cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object, object, object)", file="StringUtils.cs"];
m1_12 [label="Exit Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object, object, object)", span="62-62", cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object, object, object)", file="StringUtils.cs"];
m1_72 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="StringUtils.cs"];
m1_113 [label="System.Func<TSource, string>", span="", file="StringUtils.cs"];
m1_114 [label=string, span="", file="StringUtils.cs"];
m2_1 [label="Assert.AreEqual(''urlValue'', StringUtils.ToCamelCase(''URLValue''))", span="46-46", cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", file="StringUtilsTests.cs"];
m2_16 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="StringUtilsTests.cs"];
m2_2 [label="Assert.AreEqual(''url'', StringUtils.ToCamelCase(''URL''))", span="47-47", cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", file="StringUtilsTests.cs"];
m2_3 [label="Assert.AreEqual(''id'', StringUtils.ToCamelCase(''ID''))", span="48-48", cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", file="StringUtilsTests.cs"];
m2_0 [label="Entry Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", span="44-44", cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", file="StringUtilsTests.cs"];
m2_12 [label="Assert.AreEqual(''isCIA'', StringUtils.ToCamelCase(''IsCIA''))", span="57-57", cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", color=green, community=0, file="StringUtilsTests.cs"];
m2_11 [label="Assert.AreEqual('' IPhone'', StringUtils.ToCamelCase('' IPhone''))", span="56-56", cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", file="StringUtilsTests.cs"];
m2_13 [label="Assert.AreEqual(''vmQ'', StringUtils.ToCamelCase(''VmQ''))", span="58-58", cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", color=green, community=0, file="StringUtilsTests.cs"];
m2_10 [label="Assert.AreEqual(''i Phone'', StringUtils.ToCamelCase(''I Phone''))", span="55-55", cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", file="StringUtilsTests.cs"];
m2_4 [label="Entry Newtonsoft.Json.JsonConverter.CanConvert(System.Type)", span="63-63", cluster="Newtonsoft.Json.JsonConverter.CanConvert(System.Type)", file="StringUtilsTests.cs"];
m2_5 [label="Exit Newtonsoft.Json.JsonConverter.CanConvert(System.Type)", span="63-63", cluster="Newtonsoft.Json.JsonConverter.CanConvert(System.Type)", file="StringUtilsTests.cs"];
m2_6 [label="Assert.AreEqual(null, StringUtils.ToCamelCase(null))", span="51-51", cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", file="StringUtilsTests.cs"];
m2_7 [label="Assert.AreEqual(''iPhone'', StringUtils.ToCamelCase(''iPhone''))", span="52-52", cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", file="StringUtilsTests.cs"];
m2_8 [label="Assert.AreEqual(''person'', StringUtils.ToCamelCase(''Person''))", span="53-53", cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", file="StringUtilsTests.cs"];
m2_9 [label="Assert.AreEqual(''iPhone'', StringUtils.ToCamelCase(''IPhone''))", span="54-54", cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", file="StringUtilsTests.cs"];
m2_14 [label="Exit Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", span="44-44", cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", file="StringUtilsTests.cs"];
m2_15 [label="Entry Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", span="170-170", cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtilsTests.cs"];
n529 -> n5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n12  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n14  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n27  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n28  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n34  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n40  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n43  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n59  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n61  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n65  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n69  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n70  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n72  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n74  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n77  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n79  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n108  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n111  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n112  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n115  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n122  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n124  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n142  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n148  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n152  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n153  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n156  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n157  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n167  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n168  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n169  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n178  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n192  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n196  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n200  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n201  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n202  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n205  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n206  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n207  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n210  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n211  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n212  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n219  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n221  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n223  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n224  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n230  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n231  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n233  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n235  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n237  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n238  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n240  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n242  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n243  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n254  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n256  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n258  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n259  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n260  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n262  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n264  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n282  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n283  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n284  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n285  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n286  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n296  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n297  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n298  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n302  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n303  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n304  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n316  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n317  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n318  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n320  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n321  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n322  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n323  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n324  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n325  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n326  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n331  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n332  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n333  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n338  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n339  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n340  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n341  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n342  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n344  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n345  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n350  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n351  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n356  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n357  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n358  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n359  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n362  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n363  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n380  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n381  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n382  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n383  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n384  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n386  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n387  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n389  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n396  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n397  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n398  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n403  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n405  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n408  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n412  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n414  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n419  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n420  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n422  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n429  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n430  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n437  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n438  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n439  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n441  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n443  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n449  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n452  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n453  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n455  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n456  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n458  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n460  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n461  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n464  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n465  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n506  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n516  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n517  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n525  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> n526  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> d14  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> d40  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n529 -> d43  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [key=0, style=bold, color=blue];
n2 -> n3  [key=0, style=solid];
n2 -> n4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n2 -> n5  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n2 -> n7  [key=1, style=dashed, color=darkseagreen4, label=object];
n2 -> n8  [key=1, style=dashed, color=darkseagreen4, label=object];
n2 -> n9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n2 -> n10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n2 -> n12  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n2 -> n13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n3 -> n4  [key=0, style=solid];
n3 -> n5  [key=0, style=solid];
n4 -> n16  [key=0, style=solid];
n4 -> n17  [key=2, style=dotted];
n4 -> n18  [key=2, style=dotted];
n5 -> n6  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n7 -> n19  [key=2, style=dotted];
n7 -> n10  [key=1, style=dashed, color=darkseagreen4, label=contract];
n7 -> n12  [key=1, style=dashed, color=darkseagreen4, label=contract];
n8 -> n9  [key=0, style=solid];
n8 -> n10  [key=0, style=solid];
n8 -> n20  [key=2, style=dotted];
n9 -> n11  [key=0, style=solid];
n9 -> n16  [key=0, style=solid];
n9 -> n21  [key=2, style=dotted];
n9 -> n9  [key=3, color=darkorchid, style=bold, label="Field variable string FSharpListTypeName"];
n10 -> n11  [key=0, style=solid];
n10 -> n16  [key=0, style=solid];
n10 -> n22  [key=2, style=dotted];
n12 -> n13  [key=0, style=solid];
n12 -> n14  [key=0, style=solid, color=red];
n12 -> n23  [key=2, style=dotted];
n12 -> d14  [key=0, style=solid, color=green];
n13 -> n16  [key=0, style=solid];
n13 -> n24  [key=2, style=dotted];
n6 -> n7  [key=0, style=solid];
n19 -> n32  [key=0, style=solid];
n19 -> n34  [key=1, style=dashed, color=darkseagreen4, label=object];
n20 -> n104  [key=0, style=solid];
n20 -> n106  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
n20 -> n108  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n20 -> n110  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
n20 -> n115  [key=1, style=dashed, color=darkseagreen4, label=object];
n11 -> n12  [key=0, style=solid];
n16 -> n2  [key=0, style=bold, color=blue];
n22 -> n56  [key=0, style=solid];
n22 -> n57  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n22 -> n59  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
n22 -> n61  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n22 -> n63  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
n22 -> n65  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n22 -> n67  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
n22 -> n69  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n22 -> n70  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n22 -> n72  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n22 -> n74  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n22 -> n76  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
n22 -> n77  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n22 -> n79  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n21 -> n167  [key=0, style=solid];
n21 -> n169  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n21 -> n170  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n21 -> n171  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n21 -> n172  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n21 -> n173  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n14 -> n15  [key=0, style=solid, color=red];
n14 -> n25  [key=2, style=dotted, color=red];
n15 -> n16  [key=0, style=solid];
n24 -> n506  [key=0, style=solid];
n24 -> n507  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n24 -> n508  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n24 -> n509  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n24 -> n510  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n26 -> n27  [key=0, style=solid];
n27 -> n28  [key=0, style=solid];
n27 -> n29  [key=0, style=solid];
n28 -> n29  [key=0, style=solid];
n28 -> n31  [key=2, style=dotted];
n29 -> n30  [key=0, style=solid];
n30 -> n26  [key=0, style=bold, color=blue];
n32 -> n33  [key=0, style=solid];
n32 -> n34  [key=0, style=solid];
n34 -> n35  [key=0, style=solid];
n34 -> n36  [key=2, style=dotted];
n34 -> n37  [key=2, style=dotted];
n33 -> n35  [key=0, style=solid];
n35 -> n19  [key=0, style=bold, color=blue];
n38 -> n39  [key=0, style=solid];
n38 -> n40  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPrimitiveContract"];
n38 -> n42  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n38 -> n43  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n38 -> n44  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n38 -> n45  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n38 -> n46  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n38 -> n48  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n38 -> d39  [key=0, style=solid, color=green];
n38 -> d40  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Serialization.JsonPrimitiveContract"];
n38 -> d42  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonWriter"];
n38 -> d43  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonWriter"];
n38 -> d44  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonWriter"];
n38 -> d45  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonWriter"];
n39 -> n40  [key=0, style=solid];
n39 -> n48  [key=0, style=solid];
n40 -> n41  [key=0, style=solid];
n40 -> n50  [key=2, style=dotted];
n42 -> n43  [key=0, style=solid];
n42 -> n51  [key=2, style=dotted];
n43 -> n44  [key=0, style=solid];
n43 -> n52  [key=2, style=dotted];
n44 -> n45  [key=0, style=solid];
n44 -> n53  [key=2, style=dotted];
n45 -> n46  [key=0, style=solid];
n45 -> n54  [key=2, style=dotted];
n46 -> n47  [key=0, style=solid];
n46 -> n55  [key=2, style=dotted];
n48 -> n49  [key=0, style=solid];
n48 -> n54  [key=2, style=dotted];
n41 -> n42  [key=0, style=solid];
n41 -> n48  [key=0, style=solid];
n41 -> n44  [key=3, color=darkorchid, style=bold, label="method methodReturn object "];
n41 -> n41  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Utilities.MethodCall<object, object> createFunction"];
n50 -> n419  [key=0, style=solid];
n50 -> n420  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.TypeNameHandling"];
n50 -> n423  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n50 -> n424  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
n50 -> n426  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContainerContract"];
n50 -> n427  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
n50 -> n431  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
n52 -> n302  [key=0, style=solid];
n52 -> n304  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n52 -> n305  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n52 -> n306  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n47 -> n49  [key=0, style=solid];
n49 -> n38  [key=0, style=bold, color=blue];
n56 -> n57  [key=0, style=solid];
n56 -> n59  [key=0, style=solid];
n57 -> n58  [key=0, style=solid];
n57 -> n81  [key=2, style=dotted];
n59 -> n60  [key=0, style=solid];
n59 -> n82  [key=2, style=dotted];
n59 -> n61  [key=1, style=dashed, color=darkseagreen4, label=converter];
n61 -> n62  [key=0, style=solid];
n61 -> n83  [key=2, style=dotted];
n63 -> n64  [key=0, style=solid];
n63 -> n66  [key=0, style=solid];
n63 -> n71  [key=0, style=solid];
n63 -> n73  [key=0, style=solid];
n63 -> n75  [key=0, style=solid];
n63 -> n78  [key=0, style=solid];
n65 -> n80  [key=0, style=solid];
n65 -> n84  [key=2, style=dotted];
n67 -> n68  [key=0, style=solid];
n67 -> n69  [key=1, style=dashed, color=darkseagreen4, label=arrayContract];
n67 -> n70  [key=1, style=dashed, color=darkseagreen4, label=arrayContract];
n69 -> n80  [key=0, style=solid];
n69 -> n85  [key=2, style=dotted];
n70 -> n80  [key=0, style=solid];
n70 -> n86  [key=2, style=dotted];
n72 -> n80  [key=0, style=solid];
n72 -> n38  [key=2, style=dotted];
n74 -> n80  [key=0, style=solid];
n74 -> n87  [key=2, style=dotted];
n76 -> n77  [key=0, style=solid];
n77 -> n80  [key=0, style=solid];
n77 -> n88  [key=2, style=dotted];
n77 -> n89  [key=2, style=dotted];
n79 -> n80  [key=0, style=solid];
n79 -> n90  [key=2, style=dotted];
n79 -> n91  [key=2, style=dotted];
n58 -> n80  [key=0, style=solid];
n60 -> n61  [key=0, style=solid];
n60 -> n63  [key=0, style=solid];
n62 -> n80  [key=0, style=solid];
n83 -> n316  [key=0, style=solid];
n83 -> n317  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n83 -> n318  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n83 -> n320  [key=1, style=dashed, color=darkseagreen4, label=object];
n83 -> n322  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n83 -> n323  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n83 -> n325  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n64 -> n65  [key=0, style=solid];
n66 -> n67  [key=0, style=solid];
n71 -> n72  [key=0, style=solid];
n73 -> n74  [key=0, style=solid];
n75 -> n76  [key=0, style=solid];
n78 -> n79  [key=0, style=solid];
n68 -> n69  [key=0, style=solid];
n68 -> n70  [key=0, style=solid];
n80 -> n22  [key=0, style=bold, color=blue];
n85 -> n329  [key=0, style=solid];
n85 -> n330  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.IEnumerable"];
n85 -> n331  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n85 -> n333  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n85 -> n334  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n85 -> n335  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n85 -> n337  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.IEnumerable"];
n85 -> n338  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n85 -> n339  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n85 -> n340  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n85 -> n341  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n85 -> n342  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n85 -> n344  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n85 -> n345  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n85 -> n347  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n85 -> n349  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n85 -> n351  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n89 -> n435  [key=0, style=solid];
n89 -> n436  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.IDictionary"];
n89 -> n437  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n89 -> n439  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n89 -> n440  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
n89 -> n441  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
n89 -> n442  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
n89 -> n443  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
n89 -> n444  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n89 -> n445  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.IDictionary"];
n89 -> n449  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n89 -> n450  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
n89 -> n452  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
n89 -> n453  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
n89 -> n454  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n89 -> n455  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n89 -> n456  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n89 -> n457  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n89 -> n458  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n89 -> n460  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n89 -> n461  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n89 -> n463  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n89 -> n465  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n86 -> n356  [key=0, style=solid];
n86 -> n357  [key=1, style=dashed, color=darkseagreen4, label="System.Array"];
n86 -> n358  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n86 -> n359  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n86 -> n361  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n86 -> n363  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n87 -> n192  [key=0, style=solid];
n87 -> n194  [key=1, style=dashed, color=darkseagreen4, label=object];
n87 -> n195  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n87 -> n196  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n84 -> n210  [key=0, style=solid];
n84 -> n211  [key=1, style=dashed, color=darkseagreen4, label=object];
n84 -> n212  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n84 -> n213  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n84 -> n215  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
n84 -> n216  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
n84 -> n219  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n84 -> n220  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n84 -> n221  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n84 -> n223  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n84 -> n224  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n84 -> n227  [key=1, style=dashed, color=darkseagreen4, label=object];
n84 -> n233  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n84 -> n234  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
n84 -> n235  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
n84 -> n236  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n84 -> n237  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n84 -> n238  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n84 -> n239  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n84 -> n240  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n84 -> n241  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n84 -> n243  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n92 -> n93  [key=0, style=solid];
n92 -> n94  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n92 -> n95  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n92 -> n96  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n92 -> n97  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n92 -> n98  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContainerContract"];
n92 -> n99  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContainerContract"];
n92 -> n101  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
n93 -> n94  [key=0, style=solid];
n93 -> n96  [key=1, style=dashed, color=darkseagreen4, label=isReference];
n93 -> n98  [key=1, style=dashed, color=darkseagreen4, label=isReference];
n93 -> n100  [key=1, style=dashed, color=darkseagreen4, label=isReference];
n93 -> n102  [key=1, style=dashed, color=darkseagreen4, label=isReference];
n94 -> n95  [key=0, style=solid];
n94 -> n96  [key=0, style=solid];
n95 -> n96  [key=0, style=solid];
n95 -> n98  [key=1, style=dashed, color=darkseagreen4, label=isReference];
n95 -> n100  [key=1, style=dashed, color=darkseagreen4, label=isReference];
n95 -> n102  [key=1, style=dashed, color=darkseagreen4, label=isReference];
n96 -> n97  [key=0, style=solid];
n96 -> n98  [key=0, style=solid];
n97 -> n98  [key=0, style=solid];
n97 -> n100  [key=1, style=dashed, color=darkseagreen4, label=isReference];
n97 -> n102  [key=1, style=dashed, color=darkseagreen4, label=isReference];
n98 -> n99  [key=0, style=solid];
n98 -> n100  [key=0, style=solid];
n99 -> n100  [key=0, style=solid];
n99 -> n102  [key=1, style=dashed, color=darkseagreen4, label=isReference];
n101 -> n102  [key=0, style=solid];
n100 -> n101  [key=0, style=solid];
n100 -> n102  [key=0, style=solid];
n102 -> n103  [key=0, style=solid];
n103 -> n92  [key=0, style=bold, color=blue];
n104 -> n105  [key=0, style=solid];
n104 -> n106  [key=0, style=solid];
n106 -> n107  [key=0, style=solid];
n106 -> n108  [key=0, style=solid];
n108 -> n109  [key=0, style=solid];
n108 -> n92  [key=2, style=dotted];
n108 -> n113  [key=1, style=dashed, color=darkseagreen4, label=isReference];
n110 -> n111  [key=0, style=solid];
n110 -> n112  [key=0, style=solid];
n115 -> n116  [key=0, style=solid];
n115 -> n119  [key=2, style=dotted];
n115 -> n120  [key=2, style=dotted];
n105 -> n116  [key=0, style=solid];
n107 -> n116  [key=0, style=solid];
n109 -> n110  [key=0, style=solid];
n109 -> n113  [key=0, style=solid];
n113 -> n114  [key=0, style=solid];
n113 -> n115  [key=0, style=solid];
n113 -> n118  [key=2, style=dotted];
n111 -> n113  [key=0, style=solid];
n111 -> n117  [key=2, style=dotted];
n112 -> n113  [key=0, style=solid];
n112 -> n117  [key=2, style=dotted];
n117 -> n311  [key=0, style=solid];
n114 -> n116  [key=0, style=solid];
n116 -> n20  [key=0, style=bold, color=blue];
n121 -> n122  [key=0, style=solid];
n121 -> n124  [key=1, style=dashed, color=darkseagreen4, label=object];
n122 -> n123  [key=0, style=solid];
n122 -> n124  [key=0, style=solid];
n122 -> n128  [key=2, style=dotted];
n124 -> n125  [key=0, style=solid];
n124 -> n126  [key=0, style=solid];
n124 -> n128  [key=2, style=dotted];
n124 -> n129  [key=2, style=dotted];
n124 -> n130  [key=2, style=dotted];
n124 -> n131  [key=2, style=dotted];
n123 -> n127  [key=0, style=solid];
n125 -> n127  [key=0, style=solid];
n126 -> n127  [key=0, style=solid];
n129 -> n309  [key=0, style=solid];
n127 -> n121  [key=0, style=bold, color=blue];
n132 -> n133  [key=0, style=solid];
n132 -> n136  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n132 -> n137  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n132 -> n138  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n132 -> n139  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n132 -> n140  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContainerContract"];
n132 -> n141  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContainerContract"];
n132 -> n142  [key=1, style=dashed, color=darkseagreen4, label=object];
n132 -> n145  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n132 -> n146  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n132 -> n147  [key=1, style=dashed, color=darkseagreen4, label=object];
n132 -> n150  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n132 -> n153  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n132 -> n157  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n133 -> n134  [key=0, style=solid];
n133 -> n135  [key=0, style=solid];
n136 -> n137  [key=0, style=solid];
n136 -> n138  [key=0, style=solid];
n137 -> n138  [key=0, style=solid];
n137 -> n140  [key=1, style=dashed, color=darkseagreen4, label=referenceLoopHandling];
n137 -> n148  [key=1, style=dashed, color=darkseagreen4, label=referenceLoopHandling];
n138 -> n139  [key=0, style=solid];
n138 -> n140  [key=0, style=solid];
n139 -> n140  [key=0, style=solid];
n139 -> n148  [key=1, style=dashed, color=darkseagreen4, label=referenceLoopHandling];
n140 -> n141  [key=0, style=solid];
n140 -> n142  [key=0, style=solid];
n141 -> n142  [key=0, style=solid];
n141 -> n148  [key=1, style=dashed, color=darkseagreen4, label=referenceLoopHandling];
n142 -> n143  [key=0, style=solid];
n142 -> n161  [key=2, style=dotted];
n142 -> n162  [key=2, style=dotted];
n145 -> n146  [key=0, style=solid];
n145 -> n147  [key=0, style=solid];
n146 -> n147  [key=0, style=solid];
n146 -> n163  [key=2, style=dotted];
n146 -> n146  [key=1, style=dashed, color=darkseagreen4, label=message];
n147 -> n148  [key=0, style=solid];
n147 -> n36  [key=2, style=dotted];
n147 -> n163  [key=2, style=dotted];
n147 -> n147  [key=1, style=dashed, color=darkseagreen4, label=message];
n147 -> n150  [key=1, style=dashed, color=darkseagreen4, label=message];
n147 -> n153  [key=1, style=dashed, color=darkseagreen4, label=message];
n147 -> n157  [key=1, style=dashed, color=darkseagreen4, label=message];
n150 -> n160  [key=0, style=solid];
n150 -> n164  [key=2, style=dotted];
n153 -> n154  [key=0, style=solid];
n153 -> n165  [key=2, style=dotted];
n153 -> n166  [key=2, style=dotted];
n157 -> n158  [key=0, style=solid];
n157 -> n165  [key=2, style=dotted];
n157 -> n166  [key=2, style=dotted];
n134 -> n160  [key=0, style=solid];
n135 -> n136  [key=0, style=solid];
n135 -> n138  [key=1, style=dashed, color=darkseagreen4, label=referenceLoopHandling];
n135 -> n140  [key=1, style=dashed, color=darkseagreen4, label=referenceLoopHandling];
n135 -> n148  [key=1, style=dashed, color=darkseagreen4, label=referenceLoopHandling];
n148 -> n149  [key=0, style=solid];
n148 -> n151  [key=0, style=solid];
n148 -> n155  [key=0, style=solid];
n148 -> n128  [key=2, style=dotted];
n143 -> n144  [key=0, style=solid];
n143 -> n159  [key=0, style=solid];
n144 -> n145  [key=0, style=solid];
n144 -> n146  [key=1, style=dashed, color=darkseagreen4, label=message];
n144 -> n147  [key=1, style=dashed, color=darkseagreen4, label=message];
n159 -> n160  [key=0, style=solid];
n149 -> n150  [key=0, style=solid];
n151 -> n152  [key=0, style=solid];
n155 -> n156  [key=0, style=solid];
n152 -> n153  [key=0, style=solid];
n152 -> n154  [key=0, style=solid];
n154 -> n160  [key=0, style=solid];
n156 -> n157  [key=0, style=solid];
n156 -> n158  [key=0, style=solid];
n158 -> n160  [key=0, style=solid];
n160 -> n132  [key=0, style=bold, color=blue];
n167 -> n168  [key=0, style=solid];
n167 -> n175  [key=2, style=dotted];
n167 -> n169  [key=1, style=dashed, color=darkseagreen4, label=reference];
n167 -> n172  [key=1, style=dashed, color=darkseagreen4, label=reference];
n169 -> n170  [key=0, style=solid];
n169 -> n36  [key=2, style=dotted];
n169 -> n176  [key=2, style=dotted];
n169 -> n165  [key=2, style=dotted];
n169 -> n166  [key=2, style=dotted];
n170 -> n171  [key=0, style=solid];
n170 -> n51  [key=2, style=dotted];
n171 -> n172  [key=0, style=solid];
n171 -> n53  [key=2, style=dotted];
n172 -> n173  [key=0, style=solid];
n172 -> n177  [key=2, style=dotted];
n173 -> n174  [key=0, style=solid];
n173 -> n55  [key=2, style=dotted];
n168 -> n169  [key=0, style=solid];
n168 -> n170  [key=0, style=solid];
n175 -> n178  [key=0, style=solid];
n175 -> n181  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n174 -> n21  [key=0, style=bold, color=blue];
n178 -> n179  [key=0, style=solid];
n178 -> n119  [key=2, style=dotted];
n178 -> n183  [key=2, style=dotted];
n181 -> n182  [key=0, style=solid];
n181 -> n36  [key=2, style=dotted];
n181 -> n163  [key=2, style=dotted];
n181 -> n164  [key=2, style=dotted];
n179 -> n182  [key=0, style=solid];
n180 -> n181  [key=0, style=solid];
n182 -> n175  [key=0, style=bold, color=blue];
n184 -> n185  [key=0, style=solid];
n185 -> n186  [key=0, style=solid];
n185 -> n187  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n186 -> n187  [key=0, style=solid];
n186 -> n189  [key=0, style=solid];
n187 -> n188  [key=0, style=solid];
n189 -> n190  [key=0, style=solid];
n189 -> n191  [key=1, style=dashed, color=darkseagreen4, label="out string"];
n188 -> n191  [key=0, style=solid];
n190 -> n191  [key=0, style=solid];
n191 -> n184  [key=0, style=bold, color=blue];
n192 -> n193  [key=0, style=solid];
n192 -> n198  [key=2, style=dotted];
n194 -> n195  [key=0, style=solid];
n194 -> n184  [key=2, style=dotted];
n195 -> n196  [key=0, style=solid];
n195 -> n177  [key=2, style=dotted];
n196 -> n197  [key=0, style=solid];
n196 -> n199  [key=2, style=dotted];
n193 -> n194  [key=0, style=solid];
n198 -> n200  [key=0, style=solid];
n198 -> n201  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n198 -> n202  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
n197 -> n87  [key=0, style=bold, color=blue];
n199 -> n205  [key=0, style=solid];
n199 -> n206  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n199 -> n207  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
n200 -> n201  [key=0, style=solid];
n200 -> n202  [key=0, style=solid];
n201 -> n202  [key=0, style=solid];
n201 -> n163  [key=2, style=dotted];
n201 -> n165  [key=2, style=dotted];
n201 -> n166  [key=2, style=dotted];
n202 -> n203  [key=0, style=solid];
n202 -> n204  [key=2, style=dotted];
n203 -> n198  [key=0, style=bold, color=blue];
n205 -> n206  [key=0, style=solid];
n205 -> n207  [key=0, style=solid];
n206 -> n207  [key=0, style=solid];
n206 -> n163  [key=2, style=dotted];
n206 -> n165  [key=2, style=dotted];
n206 -> n166  [key=2, style=dotted];
n207 -> n208  [key=0, style=solid];
n207 -> n209  [key=2, style=dotted];
n208 -> n199  [key=0, style=bold, color=blue];
n210 -> n211  [key=0, style=solid];
n210 -> n198  [key=2, style=dotted];
n211 -> n212  [key=0, style=solid];
n211 -> n245  [key=2, style=dotted];
n212 -> n213  [key=0, style=solid];
n212 -> n246  [key=2, style=dotted];
n213 -> n214  [key=0, style=solid];
n213 -> n224  [key=1, style=dashed, color=darkseagreen4, label=initialDepth];
n215 -> n216  [key=0, style=solid];
n215 -> n227  [key=0, style=solid];
n216 -> n217  [key=0, style=solid];
n216 -> n219  [key=1, style=dashed, color=darkseagreen4, label=property];
n216 -> n220  [key=1, style=dashed, color=darkseagreen4, label=property];
n216 -> n221  [key=1, style=dashed, color=darkseagreen4, label=property];
n216 -> n223  [key=1, style=dashed, color=darkseagreen4, label=property];
n219 -> n220  [key=0, style=solid];
n219 -> n215  [key=0, style=solid];
n219 -> n247  [key=2, style=dotted];
n219 -> n221  [key=1, style=dashed, color=darkseagreen4, label=memberValue];
n220 -> n221  [key=0, style=solid];
n220 -> n248  [key=2, style=dotted];
n221 -> n222  [key=0, style=solid];
n221 -> n226  [key=0, style=solid];
n221 -> n22  [key=2, style=dotted];
n223 -> n224  [key=0, style=solid];
n223 -> n225  [key=0, style=solid];
n223 -> n23  [key=2, style=dotted];
n224 -> n226  [key=0, style=solid];
n224 -> n24  [key=2, style=dotted];
n227 -> n228  [key=0, style=solid];
n227 -> n249  [key=2, style=dotted];
n227 -> n229  [key=1, style=dashed, color=darkseagreen4, label=extensionData];
n233 -> n234  [key=0, style=solid];
n233 -> n250  [key=2, style=dotted];
n233 -> n233  [key=1, style=dashed, color=darkseagreen4, label=e];
n233 -> n235  [key=1, style=dashed, color=darkseagreen4, label=e];
n234 -> n235  [key=0, style=solid];
n234 -> n251  [key=2, style=dotted];
n234 -> n234  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
n234 -> n236  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
n234 -> n239  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
n235 -> n236  [key=0, style=solid];
n235 -> n238  [key=0, style=solid];
n235 -> n20  [key=2, style=dotted];
n235 -> n235  [key=1, style=dashed, color=darkseagreen4, label=e];
n235 -> n237  [key=1, style=dashed, color=darkseagreen4, label=e];
n236 -> n237  [key=0, style=solid];
n236 -> n252  [key=2, style=dotted];
n237 -> n229  [key=0, style=solid];
n237 -> n21  [key=2, style=dotted];
n237 -> n237  [key=1, style=dashed, color=darkseagreen4, label=e];
n238 -> n239  [key=0, style=solid];
n238 -> n229  [key=0, style=solid];
n238 -> n132  [key=2, style=dotted];
n238 -> n238  [key=1, style=dashed, color=darkseagreen4, label=e];
n238 -> n240  [key=1, style=dashed, color=darkseagreen4, label=e];
n239 -> n240  [key=0, style=solid];
n239 -> n252  [key=2, style=dotted];
n240 -> n229  [key=0, style=solid];
n240 -> n22  [key=2, style=dotted];
n240 -> n240  [key=1, style=dashed, color=darkseagreen4, label=e];
n241 -> n242  [key=0, style=solid];
n241 -> n55  [key=2, style=dotted];
n243 -> n244  [key=0, style=solid];
n243 -> n199  [key=2, style=dotted];
n246 -> n281  [key=0, style=solid];
n246 -> n282  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
n246 -> n283  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n246 -> n284  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n246 -> n285  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
n246 -> n286  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n214 -> n215  [key=0, style=solid];
n214 -> n216  [key=1, style=dashed, color=darkseagreen4, label=index];
n214 -> n226  [key=1, style=dashed, color=darkseagreen4, label=index];
n226 -> n215  [key=0, style=solid];
n226 -> n226  [key=1, style=dashed, color=darkseagreen4, label=index];
n217 -> n218  [key=0, style=solid];
n218 -> n219  [key=0, style=solid];
n247 -> n254  [key=0, style=solid];
n247 -> n255  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n247 -> n256  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n247 -> n257  [key=1, style=dashed, color=darkseagreen4, label=object];
n247 -> n258  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n247 -> n259  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n247 -> n260  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContainerContract"];
n247 -> n261  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n247 -> n262  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n247 -> n264  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n247 -> n267  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContainerContract"];
n247 -> n268  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n247 -> n270  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n247 -> n272  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n222 -> n223  [key=0, style=solid];
n225 -> n244  [key=0, style=solid];
n228 -> n229  [key=0, style=solid];
n228 -> n241  [key=0, style=solid];
n229 -> n230  [key=0, style=solid];
n229 -> n241  [key=0, style=solid];
n230 -> n231  [key=0, style=solid];
n230 -> n19  [key=2, style=dotted];
n230 -> n230  [key=1, style=dashed, color=darkseagreen4, label=e];
n230 -> n233  [key=1, style=dashed, color=darkseagreen4, label=keyContract];
n231 -> n232  [key=0, style=solid];
n231 -> n19  [key=2, style=dotted];
n231 -> n231  [key=1, style=dashed, color=darkseagreen4, label=e];
n231 -> n233  [key=1, style=dashed, color=darkseagreen4, label=e];
n231 -> n235  [key=1, style=dashed, color=darkseagreen4, label=valueContract];
n231 -> n238  [key=1, style=dashed, color=darkseagreen4, label=valueContract];
n231 -> n240  [key=1, style=dashed, color=darkseagreen4, label=valueContract];
n232 -> n233  [key=0, style=solid];
n250 -> n469  [key=0, style=solid];
n250 -> n470  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
n250 -> n471  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
n250 -> n475  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n250 -> n478  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n250 -> n482  [key=1, style=dashed, color=darkseagreen4, label=object];
n250 -> n487  [key=1, style=dashed, color=darkseagreen4, label=object];
n250 -> n491  [key=1, style=dashed, color=darkseagreen4, label=object];
n250 -> n492  [key=1, style=dashed, color=darkseagreen4, label=object];
n250 -> n496  [key=1, style=dashed, color=darkseagreen4, label=object];
n242 -> n243  [key=0, style=solid];
n242 -> n253  [key=2, style=dotted];
n244 -> n84  [key=0, style=bold, color=blue];
n254 -> n255  [key=0, style=solid];
n254 -> n274  [key=0, style=solid];
n254 -> n278  [key=2, style=dotted];
n254 -> n279  [key=2, style=dotted];
n255 -> n256  [key=0, style=solid];
n255 -> n257  [key=0, style=solid];
n256 -> n257  [key=0, style=solid];
n256 -> n37  [key=2, style=dotted];
n257 -> n258  [key=0, style=solid];
n257 -> n280  [key=2, style=dotted];
n257 -> n259  [key=1, style=dashed, color=darkseagreen4, label="out object"];
n257 -> n260  [key=1, style=dashed, color=darkseagreen4, label="out object"];
n257 -> n262  [key=1, style=dashed, color=darkseagreen4, label="out object"];
n257 -> n264  [key=1, style=dashed, color=darkseagreen4, label="out object"];
n257 -> n266  [key=1, style=dashed, color=darkseagreen4, label="out object"];
n258 -> n259  [key=0, style=solid];
n258 -> n19  [key=2, style=dotted];
n258 -> n260  [key=1, style=dashed, color=darkseagreen4, label="out Newtonsoft.Json.Serialization.JsonContract"];
n258 -> n264  [key=1, style=dashed, color=darkseagreen4, label="out Newtonsoft.Json.Serialization.JsonContract"];
n259 -> n260  [key=0, style=solid];
n259 -> n274  [key=0, style=solid];
n259 -> n121  [key=2, style=dotted];
n260 -> n261  [key=0, style=solid];
n260 -> n264  [key=0, style=solid];
n260 -> n20  [key=2, style=dotted];
n261 -> n262  [key=0, style=solid];
n261 -> n248  [key=2, style=dotted];
n262 -> n263  [key=0, style=solid];
n262 -> n21  [key=2, style=dotted];
n264 -> n265  [key=0, style=solid];
n264 -> n266  [key=0, style=solid];
n264 -> n132  [key=2, style=dotted];
n267 -> n268  [key=0, style=solid];
n268 -> n269  [key=0, style=solid];
n268 -> n271  [key=1, style=dashed, color=darkseagreen4, label=resolvedRequired];
n270 -> n277  [key=0, style=solid];
n270 -> n163  [key=2, style=dotted];
n270 -> n164  [key=2, style=dotted];
n272 -> n277  [key=0, style=solid];
n272 -> n163  [key=2, style=dotted];
n272 -> n164  [key=2, style=dotted];
n274 -> n275  [key=0, style=solid];
n274 -> n277  [key=1, style=dashed, color=darkseagreen4, label="out Newtonsoft.Json.Serialization.JsonContract"];
n278 -> n513  [key=0, style=solid];
n278 -> n515  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n278 -> n517  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n279 -> n522  [key=0, style=solid];
n279 -> n524  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n279 -> n526  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n266 -> n267  [key=0, style=solid];
n266 -> n273  [key=0, style=solid];
n263 -> n277  [key=0, style=solid];
n265 -> n277  [key=0, style=solid];
n273 -> n277  [key=0, style=solid];
n269 -> n270  [key=0, style=solid];
n269 -> n271  [key=0, style=solid];
n271 -> n272  [key=0, style=solid];
n271 -> n273  [key=0, style=solid];
n275 -> n276  [key=0, style=solid];
n275 -> n277  [key=1, style=dashed, color=darkseagreen4, label="out object"];
n277 -> n247  [key=0, style=bold, color=blue];
n276 -> n277  [key=0, style=solid];
n281 -> n282  [key=0, style=solid];
n281 -> n51  [key=2, style=dotted];
n282 -> n283  [key=0, style=solid];
n282 -> n92  [key=2, style=dotted];
n282 -> n117  [key=2, style=dotted];
n283 -> n284  [key=0, style=solid];
n283 -> n285  [key=0, style=solid];
n283 -> n288  [key=2, style=dotted];
n284 -> n285  [key=0, style=solid];
n284 -> n289  [key=2, style=dotted];
n285 -> n286  [key=0, style=solid];
n285 -> n287  [key=0, style=solid];
n285 -> n50  [key=2, style=dotted];
n286 -> n287  [key=0, style=solid];
n286 -> n52  [key=2, style=dotted];
n288 -> n290  [key=0, style=solid];
n288 -> n293  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n289 -> n296  [key=0, style=solid];
n289 -> n298  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n289 -> n299  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n289 -> n300  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n287 -> n246  [key=0, style=bold, color=blue];
n290 -> n291  [key=0, style=solid];
n290 -> n293  [key=1, style=dashed, color=darkseagreen4, label=objectContract];
n293 -> n294  [key=0, style=solid];
n293 -> n295  [key=2, style=dotted];
n291 -> n292  [key=0, style=solid];
n291 -> n293  [key=0, style=solid];
n292 -> n294  [key=0, style=solid];
n294 -> n288  [key=0, style=bold, color=blue];
n296 -> n297  [key=0, style=solid];
n296 -> n175  [key=2, style=dotted];
n296 -> n298  [key=1, style=dashed, color=darkseagreen4, label=reference];
n296 -> n300  [key=1, style=dashed, color=darkseagreen4, label=reference];
n298 -> n299  [key=0, style=solid];
n298 -> n176  [key=2, style=dotted];
n298 -> n165  [key=2, style=dotted];
n298 -> n166  [key=2, style=dotted];
n299 -> n300  [key=0, style=solid];
n299 -> n53  [key=2, style=dotted];
n300 -> n301  [key=0, style=solid];
n300 -> n177  [key=2, style=dotted];
n297 -> n298  [key=0, style=solid];
n297 -> n299  [key=0, style=solid];
n301 -> n289  [key=0, style=bold, color=blue];
n302 -> n303  [key=0, style=solid];
n302 -> n308  [key=2, style=dotted];
n302 -> n304  [key=1, style=dashed, color=darkseagreen4, label=typeName];
n302 -> n306  [key=1, style=dashed, color=darkseagreen4, label=typeName];
n304 -> n305  [key=0, style=solid];
n304 -> n176  [key=2, style=dotted];
n304 -> n165  [key=2, style=dotted];
n304 -> n166  [key=2, style=dotted];
n305 -> n306  [key=0, style=solid];
n305 -> n53  [key=2, style=dotted];
n306 -> n307  [key=0, style=solid];
n306 -> n177  [key=2, style=dotted];
n303 -> n304  [key=0, style=solid];
n303 -> n305  [key=0, style=solid];
n307 -> n52  [key=0, style=bold, color=blue];
n309 -> n310  [key=0, style=solid];
n310 -> n129  [key=0, style=bold, color=blue];
n311 -> n312  [key=0, style=solid];
n312 -> n117  [key=0, style=bold, color=blue];
n313 -> n314  [key=0, style=solid];
n314 -> n315  [key=0, style=solid];
n315 -> n313  [key=0, style=bold, color=blue];
n316 -> n317  [key=0, style=solid];
n316 -> n318  [key=0, style=solid];
n316 -> n20  [key=2, style=dotted];
n317 -> n327  [key=0, style=solid];
n317 -> n21  [key=2, style=dotted];
n318 -> n319  [key=0, style=solid];
n318 -> n320  [key=0, style=solid];
n318 -> n132  [key=2, style=dotted];
n320 -> n321  [key=0, style=solid];
n320 -> n245  [key=2, style=dotted];
n322 -> n323  [key=0, style=solid];
n322 -> n36  [key=2, style=dotted];
n322 -> n176  [key=2, style=dotted];
n322 -> n165  [key=2, style=dotted];
n322 -> n166  [key=2, style=dotted];
n323 -> n324  [key=0, style=solid];
n323 -> n26  [key=2, style=dotted];
n323 -> n328  [key=2, style=dotted];
n325 -> n326  [key=0, style=solid];
n325 -> n36  [key=2, style=dotted];
n325 -> n176  [key=2, style=dotted];
n325 -> n165  [key=2, style=dotted];
n325 -> n166  [key=2, style=dotted];
n319 -> n327  [key=0, style=solid];
n321 -> n322  [key=0, style=solid];
n321 -> n323  [key=0, style=solid];
n324 -> n325  [key=0, style=solid];
n324 -> n326  [key=0, style=solid];
n326 -> n327  [key=0, style=solid];
n326 -> n253  [key=2, style=dotted];
n327 -> n83  [key=0, style=bold, color=blue];
n329 -> n330  [key=0, style=solid];
n330 -> n331  [key=0, style=solid];
n330 -> n332  [key=1, style=dashed, color=darkseagreen4, label=underlyingList];
n330 -> n333  [key=1, style=dashed, color=darkseagreen4, label=underlyingList];
n330 -> n344  [key=1, style=dashed, color=darkseagreen4, label=underlyingList];
n330 -> n351  [key=1, style=dashed, color=darkseagreen4, label=underlyingList];
n331 -> n332  [key=0, style=solid];
n331 -> n198  [key=2, style=dotted];
n333 -> n334  [key=0, style=solid];
n333 -> n353  [key=2, style=dotted];
n333 -> n348  [key=1, style=dashed, color=darkseagreen4, label=hasWrittenMetadataObject];
n334 -> n335  [key=0, style=solid];
n334 -> n354  [key=2, style=dotted];
n335 -> n336  [key=0, style=solid];
n335 -> n345  [key=1, style=dashed, color=darkseagreen4, label=initialDepth];
n337 -> n338  [key=0, style=solid];
n337 -> n347  [key=0, style=solid];
n337 -> n339  [key=1, style=dashed, color=darkseagreen4, label=value];
n337 -> n340  [key=1, style=dashed, color=darkseagreen4, label=value];
n337 -> n341  [key=1, style=dashed, color=darkseagreen4, label=value];
n337 -> n342  [key=1, style=dashed, color=darkseagreen4, label=value];
n338 -> n339  [key=0, style=solid];
n338 -> n19  [key=2, style=dotted];
n338 -> n341  [key=1, style=dashed, color=darkseagreen4, label=valueContract];
n338 -> n342  [key=1, style=dashed, color=darkseagreen4, label=valueContract];
n339 -> n340  [key=0, style=solid];
n339 -> n341  [key=0, style=solid];
n339 -> n20  [key=2, style=dotted];
n340 -> n343  [key=0, style=solid];
n340 -> n337  [key=0, style=solid];
n340 -> n21  [key=2, style=dotted];
n341 -> n342  [key=0, style=solid];
n341 -> n343  [key=0, style=solid];
n341 -> n337  [key=0, style=solid];
n341 -> n132  [key=2, style=dotted];
n342 -> n343  [key=0, style=solid];
n342 -> n337  [key=0, style=solid];
n342 -> n22  [key=2, style=dotted];
n344 -> n345  [key=0, style=solid];
n344 -> n346  [key=0, style=solid];
n344 -> n23  [key=2, style=dotted];
n345 -> n337  [key=0, style=solid];
n345 -> n24  [key=2, style=dotted];
n347 -> n348  [key=0, style=solid];
n347 -> n355  [key=2, style=dotted];
n349 -> n350  [key=0, style=solid];
n349 -> n55  [key=2, style=dotted];
n351 -> n352  [key=0, style=solid];
n351 -> n199  [key=2, style=dotted];
n332 -> n333  [key=0, style=solid];
n332 -> n245  [key=2, style=dotted];
n353 -> n396  [key=0, style=solid];
n353 -> n397  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n353 -> n398  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n353 -> n401  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n353 -> n403  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n353 -> n405  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n353 -> n406  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n353 -> n407  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n353 -> n408  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n348 -> n349  [key=0, style=solid];
n348 -> n350  [key=0, style=solid];
n336 -> n337  [key=0, style=solid];
n336 -> n344  [key=1, style=dashed, color=darkseagreen4, label=index];
n343 -> n344  [key=0, style=solid];
n346 -> n352  [key=0, style=solid];
n350 -> n351  [key=0, style=solid];
n350 -> n253  [key=2, style=dotted];
n352 -> n85  [key=0, style=bold, color=blue];
n356 -> n357  [key=0, style=solid];
n356 -> n198  [key=2, style=dotted];
n357 -> n358  [key=0, style=solid];
n357 -> n245  [key=2, style=dotted];
n358 -> n359  [key=0, style=solid];
n358 -> n353  [key=2, style=dotted];
n358 -> n360  [key=1, style=dashed, color=darkseagreen4, label=hasWrittenMetadataObject];
n359 -> n360  [key=0, style=solid];
n359 -> n365  [key=2, style=dotted];
n359 -> n366  [key=2, style=dotted];
n361 -> n362  [key=0, style=solid];
n361 -> n55  [key=2, style=dotted];
n363 -> n364  [key=0, style=solid];
n363 -> n199  [key=2, style=dotted];
n360 -> n361  [key=0, style=solid];
n360 -> n362  [key=0, style=solid];
n366 -> n367  [key=0, style=solid];
n366 -> n371  [key=1, style=dashed, color=darkseagreen4, label="int[]"];
n366 -> n373  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n366 -> n374  [key=1, style=dashed, color=darkseagreen4, label="System.Array"];
n366 -> n375  [key=1, style=dashed, color=darkseagreen4, label="System.Array"];
n366 -> n377  [key=1, style=dashed, color=darkseagreen4, label="System.Array"];
n366 -> n379  [key=1, style=dashed, color=darkseagreen4, label="System.Array"];
n366 -> n380  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n366 -> n381  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n366 -> n382  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n366 -> n383  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n366 -> n384  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n366 -> n386  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n366 -> n387  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n366 -> n389  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n366 -> n391  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
n362 -> n363  [key=0, style=solid];
n362 -> n253  [key=2, style=dotted];
n364 -> n86  [key=0, style=bold, color=blue];
n367 -> n368  [key=0, style=solid];
n367 -> n370  [key=1, style=dashed, color=darkseagreen4, label=dimension];
n367 -> n374  [key=1, style=dashed, color=darkseagreen4, label=dimension];
n367 -> n375  [key=1, style=dashed, color=darkseagreen4, label=dimension];
n367 -> n376  [key=1, style=dashed, color=darkseagreen4, label=dimension];
n371 -> n372  [key=0, style=solid];
n373 -> n374  [key=0, style=solid];
n373 -> n354  [key=2, style=dotted];
n374 -> n375  [key=0, style=solid];
n374 -> n393  [key=2, style=dotted];
n374 -> n376  [key=1, style=dashed, color=darkseagreen4, label=i];
n374 -> n386  [key=1, style=dashed, color=darkseagreen4, label=i];
n374 -> n390  [key=1, style=dashed, color=darkseagreen4, label=i];
n375 -> n376  [key=0, style=solid];
n375 -> n391  [key=0, style=solid];
n375 -> n394  [key=2, style=dotted];
n377 -> n378  [key=0, style=solid];
n379 -> n380  [key=0, style=solid];
n379 -> n395  [key=2, style=dotted];
n379 -> n381  [key=1, style=dashed, color=darkseagreen4, label=value];
n379 -> n382  [key=1, style=dashed, color=darkseagreen4, label=value];
n379 -> n383  [key=1, style=dashed, color=darkseagreen4, label=value];
n379 -> n384  [key=1, style=dashed, color=darkseagreen4, label=value];
n380 -> n381  [key=0, style=solid];
n380 -> n19  [key=2, style=dotted];
n380 -> n383  [key=1, style=dashed, color=darkseagreen4, label=valueContract];
n380 -> n384  [key=1, style=dashed, color=darkseagreen4, label=valueContract];
n381 -> n382  [key=0, style=solid];
n381 -> n383  [key=0, style=solid];
n381 -> n20  [key=2, style=dotted];
n382 -> n385  [key=0, style=solid];
n382 -> n390  [key=0, style=solid];
n382 -> n21  [key=2, style=dotted];
n383 -> n384  [key=0, style=solid];
n383 -> n385  [key=0, style=solid];
n383 -> n390  [key=0, style=solid];
n383 -> n132  [key=2, style=dotted];
n384 -> n385  [key=0, style=solid];
n384 -> n390  [key=0, style=solid];
n384 -> n22  [key=2, style=dotted];
n386 -> n387  [key=0, style=solid];
n386 -> n388  [key=0, style=solid];
n386 -> n23  [key=2, style=dotted];
n387 -> n390  [key=0, style=solid];
n387 -> n24  [key=2, style=dotted];
n389 -> n390  [key=0, style=solid];
n389 -> n366  [key=2, style=dotted];
n391 -> n392  [key=0, style=solid];
n391 -> n355  [key=2, style=dotted];
n368 -> n369  [key=0, style=solid];
n368 -> n371  [key=1, style=dashed, color=darkseagreen4, label=newIndices];
n368 -> n376  [key=1, style=dashed, color=darkseagreen4, label=newIndices];
n368 -> n377  [key=1, style=dashed, color=darkseagreen4, label=newIndices];
n368 -> n379  [key=1, style=dashed, color=darkseagreen4, label=newIndices];
n368 -> n389  [key=1, style=dashed, color=darkseagreen4, label=newIndices];
n370 -> n371  [key=0, style=solid];
n370 -> n373  [key=0, style=solid];
n376 -> n377  [key=0, style=solid];
n369 -> n370  [key=0, style=solid];
n369 -> n371  [key=1, style=dashed, color=darkseagreen4, label=i];
n369 -> n372  [key=1, style=dashed, color=darkseagreen4, label=i];
n372 -> n370  [key=0, style=solid];
n372 -> n372  [key=1, style=dashed, color=darkseagreen4, label=i];
n390 -> n375  [key=0, style=solid];
n390 -> n390  [key=1, style=dashed, color=darkseagreen4, label=i];
n378 -> n379  [key=0, style=solid];
n378 -> n389  [key=0, style=solid];
n385 -> n386  [key=0, style=solid];
n388 -> n392  [key=0, style=solid];
n392 -> n366  [key=0, style=bold, color=blue];
n396 -> n397  [key=0, style=solid];
n396 -> n92  [key=2, style=dotted];
n396 -> n117  [key=2, style=dotted];
n397 -> n398  [key=0, style=solid];
n397 -> n288  [key=2, style=dotted];
n397 -> n397  [key=1, style=dashed, color=darkseagreen4, label=isReference];
n397 -> n399  [key=1, style=dashed, color=darkseagreen4, label=isReference];
n397 -> n402  [key=1, style=dashed, color=darkseagreen4, label=isReference];
n398 -> n399  [key=0, style=solid];
n398 -> n50  [key=2, style=dotted];
n398 -> n404  [key=1, style=dashed, color=darkseagreen4, label=includeTypeDetails];
n401 -> n402  [key=0, style=solid];
n401 -> n51  [key=2, style=dotted];
n403 -> n404  [key=0, style=solid];
n403 -> n289  [key=2, style=dotted];
n405 -> n406  [key=0, style=solid];
n405 -> n36  [key=2, style=dotted];
n405 -> n52  [key=2, style=dotted];
n406 -> n407  [key=0, style=solid];
n406 -> n53  [key=2, style=dotted];
n407 -> n408  [key=0, style=solid];
n407 -> n409  [key=0, style=solid];
n408 -> n409  [key=0, style=solid];
n408 -> n37  [key=2, style=dotted];
n399 -> n400  [key=0, style=solid];
n399 -> n409  [key=1, style=dashed, color=darkseagreen4, label=writeMetadataObject];
n402 -> n403  [key=0, style=solid];
n402 -> n404  [key=0, style=solid];
n404 -> n405  [key=0, style=solid];
n404 -> n406  [key=0, style=solid];
n400 -> n401  [key=0, style=solid];
n400 -> n407  [key=0, style=solid];
n409 -> n410  [key=0, style=solid];
n410 -> n353  [key=0, style=bold, color=blue];
n411 -> n412  [key=0, style=solid];
n411 -> n414  [key=1, style=dashed, color=darkseagreen4, label=object];
n412 -> n413  [key=0, style=solid];
n412 -> n414  [key=0, style=solid];
n414 -> n415  [key=0, style=solid];
n414 -> n416  [key=0, style=solid];
n414 -> n129  [key=2, style=dotted];
n414 -> n36  [key=2, style=dotted];
n414 -> n418  [key=2, style=dotted];
n414 -> n131  [key=2, style=dotted];
n413 -> n417  [key=0, style=solid];
n415 -> n417  [key=0, style=solid];
n416 -> n417  [key=0, style=solid];
n417 -> n411  [key=0, style=bold, color=blue];
n419 -> n420  [key=0, style=solid];
n419 -> n422  [key=1, style=dashed, color=darkseagreen4, label=resolvedTypeNameHandling];
n420 -> n421  [key=0, style=solid];
n420 -> n422  [key=0, style=solid];
n420 -> n313  [key=2, style=dotted];
n423 -> n424  [key=0, style=solid];
n423 -> n426  [key=0, style=solid];
n424 -> n425  [key=0, style=solid];
n424 -> n433  [key=0, style=solid];
n426 -> n427  [key=0, style=solid];
n426 -> n429  [key=0, style=solid];
n427 -> n428  [key=0, style=solid];
n427 -> n433  [key=0, style=solid];
n431 -> n432  [key=0, style=solid];
n431 -> n433  [key=0, style=solid];
n422 -> n423  [key=0, style=solid];
n422 -> n433  [key=0, style=solid];
n422 -> n313  [key=2, style=dotted];
n421 -> n434  [key=0, style=solid];
n433 -> n434  [key=0, style=solid];
n425 -> n434  [key=0, style=solid];
n429 -> n430  [key=0, style=solid];
n429 -> n433  [key=0, style=solid];
n428 -> n434  [key=0, style=solid];
n430 -> n431  [key=0, style=solid];
n430 -> n37  [key=2, style=dotted];
n432 -> n434  [key=0, style=solid];
n434 -> n50  [key=0, style=bold, color=blue];
n435 -> n436  [key=0, style=solid];
n436 -> n437  [key=0, style=solid];
n436 -> n438  [key=1, style=dashed, color=darkseagreen4, label=underlyingDictionary];
n436 -> n439  [key=1, style=dashed, color=darkseagreen4, label=underlyingDictionary];
n436 -> n460  [key=1, style=dashed, color=darkseagreen4, label=underlyingDictionary];
n436 -> n465  [key=1, style=dashed, color=darkseagreen4, label=underlyingDictionary];
n437 -> n438  [key=0, style=solid];
n437 -> n198  [key=2, style=dotted];
n439 -> n440  [key=0, style=solid];
n439 -> n246  [key=2, style=dotted];
n440 -> n441  [key=0, style=solid];
n440 -> n442  [key=0, style=solid];
n441 -> n442  [key=0, style=solid];
n441 -> n37  [key=2, style=dotted];
n442 -> n443  [key=0, style=solid];
n442 -> n444  [key=0, style=solid];
n443 -> n444  [key=0, style=solid];
n443 -> n37  [key=2, style=dotted];
n444 -> n445  [key=0, style=solid];
n444 -> n461  [key=1, style=dashed, color=darkseagreen4, label=initialDepth];
n445 -> n446  [key=0, style=solid];
n445 -> n467  [key=2, style=dotted];
n445 -> n447  [key=1, style=dashed, color=darkseagreen4, label=e];
n449 -> n450  [key=0, style=solid];
n449 -> n250  [key=2, style=dotted];
n449 -> n449  [key=1, style=dashed, color=darkseagreen4, label=entry];
n449 -> n451  [key=1, style=dashed, color=darkseagreen4, label=entry];
n449 -> n454  [key=1, style=dashed, color=darkseagreen4, label=escape];
n449 -> n457  [key=1, style=dashed, color=darkseagreen4, label=escape];
n450 -> n451  [key=0, style=solid];
n450 -> n251  [key=2, style=dotted];
n450 -> n450  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
n450 -> n454  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
n450 -> n457  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
n450 -> n460  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
n452 -> n453  [key=0, style=solid];
n452 -> n19  [key=2, style=dotted];
n452 -> n456  [key=1, style=dashed, color=darkseagreen4, label=valueContract];
n452 -> n458  [key=1, style=dashed, color=darkseagreen4, label=valueContract];
n453 -> n454  [key=0, style=solid];
n453 -> n456  [key=0, style=solid];
n453 -> n20  [key=2, style=dotted];
n454 -> n455  [key=0, style=solid];
n454 -> n53  [key=2, style=dotted];
n455 -> n459  [key=0, style=solid];
n455 -> n446  [key=0, style=solid];
n455 -> n21  [key=2, style=dotted];
n456 -> n457  [key=0, style=solid];
n456 -> n446  [key=0, style=solid];
n456 -> n132  [key=2, style=dotted];
n457 -> n458  [key=0, style=solid];
n457 -> n53  [key=2, style=dotted];
n458 -> n459  [key=0, style=solid];
n458 -> n446  [key=0, style=solid];
n458 -> n22  [key=2, style=dotted];
n460 -> n461  [key=0, style=solid];
n460 -> n462  [key=0, style=solid];
n460 -> n23  [key=2, style=dotted];
n461 -> n446  [key=0, style=solid];
n461 -> n24  [key=2, style=dotted];
n463 -> n464  [key=0, style=solid];
n463 -> n55  [key=2, style=dotted];
n465 -> n466  [key=0, style=solid];
n465 -> n199  [key=2, style=dotted];
n438 -> n439  [key=0, style=solid];
n438 -> n245  [key=2, style=dotted];
n446 -> n447  [key=0, style=solid];
n446 -> n463  [key=0, style=solid];
n446 -> n468  [key=2, style=dotted];
n447 -> n448  [key=0, style=solid];
n447 -> n449  [key=1, style=dashed, color=darkseagreen4, label=entry];
n448 -> n449  [key=0, style=solid];
n451 -> n452  [key=0, style=solid];
n451 -> n451  [key=1, style=dashed, color=darkseagreen4, label=entry];
n451 -> n453  [key=1, style=dashed, color=darkseagreen4, label=value];
n451 -> n455  [key=1, style=dashed, color=darkseagreen4, label=value];
n451 -> n456  [key=1, style=dashed, color=darkseagreen4, label=value];
n451 -> n458  [key=1, style=dashed, color=darkseagreen4, label=value];
n459 -> n460  [key=0, style=solid];
n462 -> n463  [key=0, style=solid];
n462 -> n466  [key=0, style=solid];
n466 -> n89  [key=0, style=bold, color=blue];
n464 -> n465  [key=0, style=solid];
n464 -> n253  [key=2, style=dotted];
n469 -> n470  [key=0, style=solid];
n470 -> n471  [key=0, style=solid];
n470 -> n492  [key=0, style=solid];
n471 -> n472  [key=0, style=solid];
n475 -> n476  [key=0, style=solid];
n475 -> n498  [key=2, style=dotted];
n475 -> n478  [key=1, style=dashed, color=darkseagreen4, label=dt];
n478 -> n479  [key=0, style=solid];
n478 -> n500  [key=2, style=dotted];
n482 -> n483  [key=0, style=solid];
n482 -> n484  [key=1, style=dashed, color=darkseagreen4, label=d];
n487 -> n488  [key=0, style=solid];
n487 -> n489  [key=1, style=dashed, color=darkseagreen4, label=f];
n491 -> n497  [key=0, style=solid];
n491 -> n504  [key=2, style=dotted];
n492 -> n493  [key=0, style=solid];
n492 -> n495  [key=0, style=solid];
n492 -> n36  [key=2, style=dotted];
n492 -> n184  [key=2, style=dotted];
n492 -> n494  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
n496 -> n497  [key=0, style=solid];
n496 -> n505  [key=2, style=dotted];
n472 -> n473  [key=0, style=solid];
n472 -> n480  [key=0, style=solid];
n472 -> n485  [key=0, style=solid];
n472 -> n490  [key=0, style=solid];
n473 -> n474  [key=0, style=solid];
n480 -> n481  [key=0, style=solid];
n485 -> n486  [key=0, style=solid];
n490 -> n491  [key=0, style=solid];
n490 -> n497  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
n474 -> n475  [key=0, style=solid];
n476 -> n477  [key=0, style=solid];
n477 -> n478  [key=0, style=solid];
n477 -> n499  [key=2, style=dotted];
n477 -> n479  [key=1, style=dashed, color=darkseagreen4, label=sw];
n479 -> n497  [key=0, style=solid];
n479 -> n501  [key=2, style=dotted];
n481 -> n482  [key=0, style=solid];
n483 -> n484  [key=0, style=solid];
n484 -> n497  [key=0, style=solid];
n484 -> n502  [key=2, style=dotted];
n486 -> n487  [key=0, style=solid];
n488 -> n489  [key=0, style=solid];
n489 -> n497  [key=0, style=solid];
n489 -> n503  [key=2, style=dotted];
n497 -> n250  [key=0, style=bold, color=blue];
n493 -> n494  [key=0, style=solid];
n493 -> n497  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
n495 -> n496  [key=0, style=solid];
n495 -> n497  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
n494 -> n497  [key=0, style=solid];
n506 -> n507  [key=0, style=solid];
n506 -> n25  [key=2, style=dotted];
n507 -> n508  [key=0, style=solid];
n507 -> n509  [key=0, style=solid];
n508 -> n509  [key=0, style=solid];
n508 -> n81  [key=2, style=dotted];
n509 -> n510  [key=0, style=solid];
n509 -> n511  [key=0, style=solid];
n510 -> n509  [key=0, style=solid];
n510 -> n512  [key=2, style=dotted];
n511 -> n24  [key=0, style=bold, color=blue];
n513 -> n514  [key=0, style=solid];
n513 -> n515  [key=0, style=solid];
n515 -> n516  [key=0, style=solid];
n515 -> n520  [key=2, style=dotted];
n515 -> n517  [key=1, style=dashed, color=darkseagreen4, label=shouldSerialize];
n515 -> n518  [key=1, style=dashed, color=darkseagreen4, label=shouldSerialize];
n517 -> n518  [key=0, style=solid];
n517 -> n521  [key=2, style=dotted];
n517 -> n165  [key=2, style=dotted];
n517 -> n166  [key=2, style=dotted];
n514 -> n519  [key=0, style=solid];
n516 -> n517  [key=0, style=solid];
n516 -> n518  [key=0, style=solid];
n518 -> n519  [key=0, style=solid];
n519 -> n278  [key=0, style=bold, color=blue];
n522 -> n523  [key=0, style=solid];
n522 -> n524  [key=0, style=solid];
n524 -> n525  [key=0, style=solid];
n524 -> n520  [key=2, style=dotted];
n524 -> n526  [key=1, style=dashed, color=darkseagreen4, label=isSpecified];
n524 -> n527  [key=1, style=dashed, color=darkseagreen4, label=isSpecified];
n526 -> n527  [key=0, style=solid];
n526 -> n521  [key=2, style=dotted];
n526 -> n165  [key=2, style=dotted];
n526 -> n166  [key=2, style=dotted];
n523 -> n528  [key=0, style=solid];
n525 -> n526  [key=0, style=solid];
n525 -> n527  [key=0, style=solid];
n527 -> n528  [key=0, style=solid];
n528 -> n279  [key=0, style=bold, color=blue];
d14 -> n15  [key=0, style=solid, color=green];
d14 -> n25  [key=2, style=dotted, color=green];
d39 -> d40  [key=0, style=solid, color=green];
d39 -> n48  [key=0, style=solid, color=green];
d40 -> d41  [key=0, style=solid, color=green];
d40 -> n50  [key=2, style=dotted, color=green];
d41 -> d42  [key=0, style=solid, color=green];
d41 -> n48  [key=0, style=solid, color=green];
d42 -> d43  [key=0, style=solid, color=green];
d42 -> n51  [key=2, style=dotted, color=green];
d43 -> d44  [key=0, style=solid, color=green];
d43 -> n52  [key=2, style=dotted, color=green];
d44 -> d45  [key=0, style=solid, color=green];
d44 -> n53  [key=2, style=dotted, color=green];
d45 -> n46  [key=0, style=solid, color=green];
d45 -> n54  [key=2, style=dotted, color=green];
m0_27 -> m0_37  [key=2, style=dotted];
m0_27 -> m0_38  [key=2, style=dotted];
m0_27 -> m0_39  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_850 -> m0_851  [key=0, style=solid];
m0_854 -> m0_9  [key=2, style=dotted];
m0_854 -> m0_855  [key=0, style=solid];
m0_854 -> m0_858  [key=2, style=dotted];
m0_851 -> m0_854  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_851 -> m0_79  [key=2, style=dotted];
m0_851 -> m0_261  [key=2, style=dotted];
m0_851 -> m0_275  [key=2, style=dotted];
m0_851 -> m0_119  [key=2, style=dotted];
m0_851 -> m0_84  [key=2, style=dotted];
m0_851 -> m0_852  [key=0, style=solid];
m0_851 -> m0_83  [key=2, style=dotted];
m0_851 -> m0_85  [key=2, style=dotted];
m0_851 -> m0_856  [key=2, style=dotted];
m0_852 -> m0_854  [key=1, style=dashed, color=darkseagreen4, label=a2];
m0_852 -> m0_853  [key=0, style=solid];
m0_852 -> m0_857  [key=2, style=dotted];
m0_853 -> m0_854  [key=0, style=solid];
m0_853 -> m0_810  [key=2, style=dotted];
m0_853 -> m0_811  [key=2, style=dotted];
m0_855 -> m0_850  [key=0, style=bold, color=blue];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label=offset];
m0_53 -> m0_61  [key=1, style=dashed, color=darkseagreen4, label=offset];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_40  [key=2, style=dotted];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_15  [key=2, style=dotted];
m0_13 -> m0_13  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_13 -> m0_37  [key=2, style=dotted];
m0_13 -> m0_38  [key=2, style=dotted];
m0_13 -> m0_39  [key=2, style=dotted];
m0_13 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_14 -> m0_12  [key=0, style=bold, color=blue];
m0_14 -> m0_40  [key=2, style=dotted];
m0_14 -> m0_15  [key=0, style=solid];
m0_102 -> m0_103  [key=0, style=solid];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_40  [key=2, style=dotted];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_72  [key=2, style=dotted];
m0_70 -> m0_73  [key=2, style=dotted];
m0_70 -> m0_84  [key=2, style=dotted];
m0_70 -> m0_76  [key=1, style=dashed, color=darkseagreen4, label=o1];
m0_70 -> m0_77  [key=1, style=dashed, color=darkseagreen4, label=o1];
m0_70 -> m0_74  [key=1, style=dashed, color=darkseagreen4, label=o1];
m0_70 -> m0_75  [key=1, style=dashed, color=darkseagreen4, label=o1];
m0_71 -> m0_69  [key=0, style=bold, color=blue];
m0_71 -> m0_40  [key=2, style=dotted];
m0_71 -> m0_72  [key=0, style=solid];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_16 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_16 -> m0_40  [key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_23  [key=2, style=dotted];
m0_17 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_17 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_17 -> m0_37  [key=2, style=dotted];
m0_17 -> m0_38  [key=2, style=dotted];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_24  [key=2, style=dotted];
m0_18 -> m0_25  [key=2, style=dotted];
m0_18 -> m0_41  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_26  [key=2, style=dotted];
m0_19 -> m0_41  [key=2, style=dotted];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_27  [key=2, style=dotted];
m0_20 -> m0_22  [key=1, style=dashed, color=darkseagreen4, label=p];
m0_20 -> m0_39  [key=2, style=dotted];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_28  [key=2, style=dotted];
m0_21 -> m0_40  [key=2, style=dotted];
m0_22 -> m0_16  [key=0, style=bold, color=blue];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_40  [key=2, style=dotted];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_11  [key=2, style=dotted];
m0_9 -> m0_9  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m0_695 -> m0_696  [key=0, style=solid];
m0_701 -> m0_9  [key=2, style=dotted];
m0_701 -> m0_702  [key=0, style=solid];
m0_701 -> m0_79  [key=2, style=dotted];
m0_701 -> m0_45  [key=2, style=dotted];
m0_697 -> m0_701  [key=1, style=dashed, color=darkseagreen4, label=descendantsAndSelf];
m0_697 -> m0_698  [key=0, style=solid];
m0_697 -> m0_706  [key=2, style=dotted];
m0_697 -> m0_605  [key=2, style=dotted];
m0_697 -> m0_699  [key=1, style=dashed, color=darkseagreen4, label=descendantsAndSelf];
m0_697 -> m0_700  [key=1, style=dashed, color=darkseagreen4, label=descendantsAndSelf];
m0_697 -> m0_702  [key=1, style=dashed, color=darkseagreen4, label=descendantsAndSelf];
m0_697 -> m0_703  [key=1, style=dashed, color=darkseagreen4, label=descendantsAndSelf];
m0_697 -> m0_704  [key=1, style=dashed, color=darkseagreen4, label=descendantsAndSelf];
m0_700 -> m0_701  [key=0, style=solid];
m0_700 -> m0_40  [key=2, style=dotted];
m0_702 -> m0_703  [key=0, style=solid];
m0_702 -> m0_40  [key=2, style=dotted];
m0_696 -> m0_79  [key=2, style=dotted];
m0_696 -> m0_119  [key=2, style=dotted];
m0_696 -> m0_697  [key=0, style=solid];
m0_696 -> m0_699  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_698 -> m0_40  [key=2, style=dotted];
m0_698 -> m0_90  [key=2, style=dotted];
m0_698 -> m0_699  [key=0, style=solid];
m0_699 -> m0_700  [key=0, style=solid];
m0_699 -> m0_40  [key=2, style=dotted];
m0_703 -> m0_40  [key=2, style=dotted];
m0_703 -> m0_704  [key=0, style=solid];
m0_704 -> m0_40  [key=2, style=dotted];
m0_704 -> m0_705  [key=0, style=solid];
m0_705 -> m0_695  [key=0, style=bold, color=blue];
m0_876 -> m0_877  [key=0, style=solid];
m0_877 -> m0_330  [key=2, style=dotted];
m0_877 -> m0_877  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_877 -> m0_878  [key=0, style=solid];
m0_877 -> m0_879  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_878 -> m0_876  [key=0, style=bold, color=blue];
m0_15 -> m0_40  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid];
m0_830 -> m0_831  [key=0, style=solid];
m0_831 -> m0_79  [key=2, style=dotted];
m0_831 -> m0_119  [key=2, style=dotted];
m0_831 -> m0_832  [key=0, style=solid];
m0_831 -> m0_833  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_831 -> m0_834  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_831 -> m0_835  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_831 -> m0_836  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_831 -> m0_837  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_831 -> m0_838  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_831 -> m0_839  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_831 -> m0_840  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_831 -> m0_841  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_831 -> m0_842  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_831 -> m0_843  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_831 -> m0_844  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_831 -> m0_845  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_831 -> m0_846  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_831 -> m0_847  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_833 -> m0_40  [key=2, style=dotted];
m0_833 -> m0_834  [key=0, style=solid];
m0_834 -> m0_40  [key=2, style=dotted];
m0_834 -> m0_835  [key=0, style=solid];
m0_835 -> m0_40  [key=2, style=dotted];
m0_835 -> m0_836  [key=0, style=solid];
m0_836 -> m0_40  [key=2, style=dotted];
m0_836 -> m0_837  [key=0, style=solid];
m0_837 -> m0_40  [key=2, style=dotted];
m0_837 -> m0_90  [key=2, style=dotted];
m0_837 -> m0_838  [key=0, style=solid];
m0_839 -> m0_40  [key=2, style=dotted];
m0_839 -> m0_840  [key=0, style=solid];
m0_840 -> m0_40  [key=2, style=dotted];
m0_840 -> m0_841  [key=0, style=solid];
m0_841 -> m0_40  [key=2, style=dotted];
m0_841 -> m0_842  [key=0, style=solid];
m0_842 -> m0_40  [key=2, style=dotted];
m0_842 -> m0_843  [key=0, style=solid];
m0_843 -> m0_40  [key=2, style=dotted];
m0_843 -> m0_844  [key=0, style=solid];
m0_844 -> m0_40  [key=2, style=dotted];
m0_844 -> m0_90  [key=2, style=dotted];
m0_844 -> m0_845  [key=0, style=solid];
m0_846 -> m0_40  [key=2, style=dotted];
m0_846 -> m0_847  [key=0, style=solid];
m0_847 -> m0_40  [key=2, style=dotted];
m0_847 -> m0_90  [key=2, style=dotted];
m0_847 -> m0_848  [key=0, style=solid];
m0_832 -> m0_833  [key=0, style=solid];
m0_832 -> m0_849  [key=2, style=dotted];
m0_838 -> m0_839  [key=0, style=solid];
m0_838 -> m0_849  [key=2, style=dotted];
m0_845 -> m0_846  [key=0, style=solid];
m0_845 -> m0_849  [key=2, style=dotted];
m0_848 -> m0_830  [key=0, style=bold, color=blue];
m0_28 -> m0_40  [key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid];
m0_883 -> m0_884  [key=0, style=solid];
m0_884 -> m0_79  [key=2, style=dotted];
m0_884 -> m0_745  [key=2, style=dotted];
m0_884 -> m0_84  [key=2, style=dotted];
m0_884 -> m0_885  [key=0, style=solid];
m0_884 -> m0_83  [key=2, style=dotted];
m0_884 -> m0_856  [key=2, style=dotted];
m0_884 -> m0_887  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_884 -> m0_889  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_884 -> m0_891  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_884 -> m0_893  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_884 -> m0_897  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_899 -> m0_119  [key=2, style=dotted];
m0_899 -> m0_900  [key=0, style=solid];
m0_899 -> m0_901  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_886 -> m0_40  [key=2, style=dotted];
m0_886 -> m0_887  [key=0, style=solid];
m0_888 -> m0_40  [key=2, style=dotted];
m0_888 -> m0_889  [key=0, style=solid];
m0_890 -> m0_40  [key=2, style=dotted];
m0_890 -> m0_891  [key=0, style=solid];
m0_892 -> m0_40  [key=2, style=dotted];
m0_892 -> m0_893  [key=0, style=solid];
m0_894 -> m0_40  [key=2, style=dotted];
m0_894 -> m0_895  [key=0, style=solid];
m0_896 -> m0_40  [key=2, style=dotted];
m0_896 -> m0_897  [key=0, style=solid];
m0_898 -> m0_40  [key=2, style=dotted];
m0_898 -> m0_899  [key=0, style=solid];
m0_900 -> m0_40  [key=2, style=dotted];
m0_900 -> m0_901  [key=0, style=solid];
m0_901 -> m0_40  [key=2, style=dotted];
m0_901 -> m0_902  [key=0, style=solid];
m0_885 -> m0_886  [key=0, style=solid];
m0_885 -> m0_903  [key=2, style=dotted];
m0_887 -> m0_888  [key=0, style=solid];
m0_887 -> m0_903  [key=2, style=dotted];
m0_889 -> m0_890  [key=0, style=solid];
m0_889 -> m0_903  [key=2, style=dotted];
m0_891 -> m0_892  [key=0, style=solid];
m0_891 -> m0_903  [key=2, style=dotted];
m0_893 -> m0_894  [key=0, style=solid];
m0_893 -> m0_903  [key=2, style=dotted];
m0_893 -> m0_895  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_897 -> m0_898  [key=0, style=solid];
m0_897 -> m0_903  [key=2, style=dotted];
m0_895 -> m0_857  [key=2, style=dotted];
m0_895 -> m0_896  [key=0, style=solid];
m0_895 -> m0_895  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_902 -> m0_883  [key=0, style=bold, color=blue];
m0_859 -> m0_860  [key=0, style=solid];
m0_863 -> m0_9  [key=2, style=dotted];
m0_863 -> m0_864  [key=0, style=solid];
m0_863 -> m0_858  [key=2, style=dotted];
m0_860 -> m0_863  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_860 -> m0_79  [key=2, style=dotted];
m0_860 -> m0_261  [key=2, style=dotted];
m0_860 -> m0_275  [key=2, style=dotted];
m0_860 -> m0_119  [key=2, style=dotted];
m0_860 -> m0_84  [key=2, style=dotted];
m0_860 -> m0_861  [key=0, style=solid];
m0_860 -> m0_83  [key=2, style=dotted];
m0_860 -> m0_85  [key=2, style=dotted];
m0_860 -> m0_856  [key=2, style=dotted];
m0_862 -> m0_863  [key=0, style=solid];
m0_862 -> m0_865  [key=2, style=dotted];
m0_861 -> m0_860  [key=3, color=darkorchid, style=bold, label="Local variable System.ICloneable c"];
m0_861 -> m0_862  [key=0, style=solid];
m0_864 -> m0_859  [key=0, style=bold, color=blue];
m0_761 -> m0_762  [key=0, style=solid];
m0_762 -> m0_79  [key=2, style=dotted];
m0_762 -> m0_119  [key=2, style=dotted];
m0_762 -> m0_763  [key=0, style=solid];
m0_762 -> m0_765  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_762 -> m0_766  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_766 -> m0_40  [key=2, style=dotted];
m0_766 -> m0_90  [key=2, style=dotted];
m0_766 -> m0_767  [key=0, style=solid];
m0_764 -> m0_40  [key=2, style=dotted];
m0_764 -> m0_765  [key=0, style=solid];
m0_763 -> m0_764  [key=0, style=solid];
m0_763 -> m0_767  [key=1, style=dashed, color=darkseagreen4, label=first];
m0_763 -> m0_768  [key=1, style=dashed, color=darkseagreen4, label=first];
m0_765 -> m0_766  [key=0, style=solid];
m0_765 -> m0_770  [key=2, style=dotted];
m0_767 -> m0_102  [key=2, style=dotted];
m0_767 -> m0_768  [key=0, style=solid];
m0_768 -> m0_102  [key=2, style=dotted];
m0_768 -> m0_769  [key=0, style=solid];
m0_769 -> m0_761  [key=0, style=bold, color=blue];
m0_771 -> m0_772  [key=0, style=solid];
m0_772 -> m0_330  [key=2, style=dotted];
m0_772 -> m0_773  [key=0, style=solid];
m0_772 -> m0_774  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_773 -> m0_771  [key=0, style=bold, color=blue];
m0_121 -> m0_122  [key=0, style=solid];
m0_122 -> m0_79  [key=2, style=dotted];
m0_122 -> m0_123  [key=0, style=solid];
m0_122 -> m0_124  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_123 -> m0_40  [key=2, style=dotted];
m0_123 -> m0_124  [key=0, style=solid];
m0_124 -> m0_40  [key=2, style=dotted];
m0_124 -> m0_90  [key=2, style=dotted];
m0_124 -> m0_126  [key=2, style=dotted];
m0_124 -> m0_125  [key=0, style=solid];
m0_125 -> m0_121  [key=0, style=bold, color=blue];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_43  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_47  [key=2, style=dotted];
m0_42 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label=hex];
m0_42 -> m0_45  [key=1, style=dashed, color=darkseagreen4, label=hex];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_45  [key=0, style=solid];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_48  [key=2, style=dotted];
m0_44 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label=hex];
m0_45 -> m0_46  [key=0, style=solid];
m0_46 -> m0_41  [key=0, style=bold, color=blue];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_83  [key=2, style=dotted];
m0_465 -> m0_466  [key=0, style=solid];
m0_466 -> m0_42  [key=2, style=dotted];
m0_466 -> m0_40  [key=2, style=dotted];
m0_466 -> m0_467  [key=0, style=solid];
m0_466 -> m0_509  [key=2, style=dotted];
m0_467 -> m0_42  [key=2, style=dotted];
m0_467 -> m0_40  [key=2, style=dotted];
m0_467 -> m0_468  [key=0, style=solid];
m0_467 -> m0_509  [key=2, style=dotted];
m0_469 -> m0_42  [key=2, style=dotted];
m0_469 -> m0_40  [key=2, style=dotted];
m0_469 -> m0_470  [key=0, style=solid];
m0_469 -> m0_509  [key=2, style=dotted];
m0_470 -> m0_42  [key=2, style=dotted];
m0_470 -> m0_40  [key=2, style=dotted];
m0_470 -> m0_471  [key=0, style=solid];
m0_470 -> m0_509  [key=2, style=dotted];
m0_471 -> m0_42  [key=2, style=dotted];
m0_471 -> m0_40  [key=2, style=dotted];
m0_471 -> m0_472  [key=0, style=solid];
m0_471 -> m0_509  [key=2, style=dotted];
m0_472 -> m0_42  [key=2, style=dotted];
m0_472 -> m0_40  [key=2, style=dotted];
m0_472 -> m0_473  [key=0, style=solid];
m0_472 -> m0_509  [key=2, style=dotted];
m0_473 -> m0_42  [key=2, style=dotted];
m0_473 -> m0_40  [key=2, style=dotted];
m0_473 -> m0_474  [key=0, style=solid];
m0_473 -> m0_509  [key=2, style=dotted];
m0_474 -> m0_42  [key=2, style=dotted];
m0_474 -> m0_40  [key=2, style=dotted];
m0_474 -> m0_475  [key=0, style=solid];
m0_474 -> m0_509  [key=2, style=dotted];
m0_475 -> m0_42  [key=2, style=dotted];
m0_475 -> m0_40  [key=2, style=dotted];
m0_475 -> m0_476  [key=0, style=solid];
m0_475 -> m0_509  [key=2, style=dotted];
m0_476 -> m0_42  [key=2, style=dotted];
m0_476 -> m0_40  [key=2, style=dotted];
m0_476 -> m0_477  [key=0, style=solid];
m0_476 -> m0_509  [key=2, style=dotted];
m0_477 -> m0_42  [key=2, style=dotted];
m0_477 -> m0_40  [key=2, style=dotted];
m0_477 -> m0_478  [key=0, style=solid];
m0_477 -> m0_509  [key=2, style=dotted];
m0_478 -> m0_42  [key=2, style=dotted];
m0_478 -> m0_40  [key=2, style=dotted];
m0_478 -> m0_479  [key=0, style=solid];
m0_478 -> m0_509  [key=2, style=dotted];
m0_479 -> m0_42  [key=2, style=dotted];
m0_479 -> m0_40  [key=2, style=dotted];
m0_479 -> m0_480  [key=0, style=solid];
m0_479 -> m0_509  [key=2, style=dotted];
m0_480 -> m0_42  [key=2, style=dotted];
m0_480 -> m0_40  [key=2, style=dotted];
m0_480 -> m0_481  [key=0, style=solid];
m0_480 -> m0_509  [key=2, style=dotted];
m0_481 -> m0_42  [key=2, style=dotted];
m0_481 -> m0_40  [key=2, style=dotted];
m0_481 -> m0_482  [key=0, style=solid];
m0_481 -> m0_509  [key=2, style=dotted];
m0_482 -> m0_42  [key=2, style=dotted];
m0_482 -> m0_40  [key=2, style=dotted];
m0_482 -> m0_483  [key=0, style=solid];
m0_482 -> m0_509  [key=2, style=dotted];
m0_483 -> m0_42  [key=2, style=dotted];
m0_483 -> m0_40  [key=2, style=dotted];
m0_483 -> m0_484  [key=0, style=solid];
m0_483 -> m0_509  [key=2, style=dotted];
m0_484 -> m0_42  [key=2, style=dotted];
m0_484 -> m0_40  [key=2, style=dotted];
m0_484 -> m0_485  [key=0, style=solid];
m0_484 -> m0_509  [key=2, style=dotted];
m0_489 -> m0_42  [key=2, style=dotted];
m0_489 -> m0_40  [key=2, style=dotted];
m0_489 -> m0_490  [key=0, style=solid];
m0_489 -> m0_509  [key=2, style=dotted];
m0_490 -> m0_42  [key=2, style=dotted];
m0_490 -> m0_40  [key=2, style=dotted];
m0_490 -> m0_491  [key=0, style=solid];
m0_490 -> m0_509  [key=2, style=dotted];
m0_497 -> m0_81  [key=2, style=dotted];
m0_497 -> m0_40  [key=2, style=dotted];
m0_497 -> m0_498  [key=0, style=solid];
m0_497 -> m0_509  [key=2, style=dotted];
m0_498 -> m0_81  [key=2, style=dotted];
m0_498 -> m0_40  [key=2, style=dotted];
m0_498 -> m0_499  [key=0, style=solid];
m0_498 -> m0_509  [key=2, style=dotted];
m0_499 -> m0_260  [key=2, style=dotted];
m0_499 -> m0_40  [key=2, style=dotted];
m0_499 -> m0_500  [key=0, style=solid];
m0_499 -> m0_509  [key=2, style=dotted];
m0_500 -> m0_260  [key=2, style=dotted];
m0_500 -> m0_40  [key=2, style=dotted];
m0_500 -> m0_501  [key=0, style=solid];
m0_500 -> m0_509  [key=2, style=dotted];
m0_491 -> m0_262  [key=2, style=dotted];
m0_491 -> m0_40  [key=2, style=dotted];
m0_491 -> m0_492  [key=0, style=solid];
m0_491 -> m0_509  [key=2, style=dotted];
m0_492 -> m0_262  [key=2, style=dotted];
m0_492 -> m0_40  [key=2, style=dotted];
m0_492 -> m0_493  [key=0, style=solid];
m0_492 -> m0_509  [key=2, style=dotted];
m0_485 -> m0_264  [key=2, style=dotted];
m0_485 -> m0_40  [key=2, style=dotted];
m0_485 -> m0_486  [key=0, style=solid];
m0_485 -> m0_509  [key=2, style=dotted];
m0_486 -> m0_264  [key=2, style=dotted];
m0_486 -> m0_40  [key=2, style=dotted];
m0_486 -> m0_487  [key=0, style=solid];
m0_486 -> m0_509  [key=2, style=dotted];
m0_487 -> m0_264  [key=2, style=dotted];
m0_487 -> m0_40  [key=2, style=dotted];
m0_487 -> m0_488  [key=0, style=solid];
m0_487 -> m0_509  [key=2, style=dotted];
m0_488 -> m0_264  [key=2, style=dotted];
m0_488 -> m0_40  [key=2, style=dotted];
m0_488 -> m0_489  [key=0, style=solid];
m0_488 -> m0_509  [key=2, style=dotted];
m0_501 -> m0_267  [key=2, style=dotted];
m0_501 -> m0_40  [key=2, style=dotted];
m0_501 -> m0_502  [key=0, style=solid];
m0_501 -> m0_509  [key=2, style=dotted];
m0_505 -> m0_267  [key=2, style=dotted];
m0_505 -> m0_40  [key=2, style=dotted];
m0_505 -> m0_506  [key=0, style=solid];
m0_505 -> m0_509  [key=2, style=dotted];
m0_506 -> m0_267  [key=2, style=dotted];
m0_506 -> m0_40  [key=2, style=dotted];
m0_506 -> m0_507  [key=0, style=solid];
m0_506 -> m0_509  [key=2, style=dotted];
m0_468 -> m0_263  [key=2, style=dotted];
m0_468 -> m0_40  [key=2, style=dotted];
m0_468 -> m0_469  [key=0, style=solid];
m0_468 -> m0_509  [key=2, style=dotted];
m0_507 -> m0_263  [key=2, style=dotted];
m0_507 -> m0_40  [key=2, style=dotted];
m0_507 -> m0_508  [key=0, style=solid];
m0_507 -> m0_509  [key=2, style=dotted];
m0_495 -> m0_270  [key=2, style=dotted];
m0_495 -> m0_40  [key=2, style=dotted];
m0_495 -> m0_496  [key=0, style=solid];
m0_495 -> m0_509  [key=2, style=dotted];
m0_496 -> m0_270  [key=2, style=dotted];
m0_496 -> m0_40  [key=2, style=dotted];
m0_496 -> m0_497  [key=0, style=solid];
m0_496 -> m0_509  [key=2, style=dotted];
m0_502 -> m0_271  [key=2, style=dotted];
m0_502 -> m0_272  [key=2, style=dotted];
m0_502 -> m0_40  [key=2, style=dotted];
m0_502 -> m0_503  [key=0, style=solid];
m0_502 -> m0_509  [key=2, style=dotted];
m0_503 -> m0_271  [key=2, style=dotted];
m0_503 -> m0_272  [key=2, style=dotted];
m0_503 -> m0_40  [key=2, style=dotted];
m0_503 -> m0_504  [key=0, style=solid];
m0_503 -> m0_509  [key=2, style=dotted];
m0_504 -> m0_273  [key=2, style=dotted];
m0_504 -> m0_274  [key=2, style=dotted];
m0_504 -> m0_40  [key=2, style=dotted];
m0_504 -> m0_505  [key=0, style=solid];
m0_504 -> m0_509  [key=2, style=dotted];
m0_493 -> m0_40  [key=2, style=dotted];
m0_493 -> m0_494  [key=0, style=solid];
m0_493 -> m0_510  [key=2, style=dotted];
m0_493 -> m0_509  [key=2, style=dotted];
m0_494 -> m0_40  [key=2, style=dotted];
m0_494 -> m0_495  [key=0, style=solid];
m0_494 -> m0_510  [key=2, style=dotted];
m0_494 -> m0_509  [key=2, style=dotted];
m0_508 -> m0_465  [key=0, style=bold, color=blue];
m0_83 -> m0_84  [key=0, style=solid];
m0_567 -> m0_568  [key=0, style=solid];
m0_568 -> m0_79  [key=2, style=dotted];
m0_568 -> m0_569  [key=0, style=solid];
m0_568 -> m0_570  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_568 -> m0_571  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_569 -> m0_40  [key=2, style=dotted];
m0_569 -> m0_570  [key=0, style=solid];
m0_570 -> m0_40  [key=2, style=dotted];
m0_570 -> m0_571  [key=0, style=solid];
m0_571 -> m0_40  [key=2, style=dotted];
m0_571 -> m0_572  [key=0, style=solid];
m0_572 -> m0_567  [key=0, style=bold, color=blue];
m0_818 -> m0_819  [key=0, style=solid];
m0_819 -> m0_79  [key=2, style=dotted];
m0_819 -> m0_119  [key=2, style=dotted];
m0_819 -> m0_820  [key=0, style=solid];
m0_819 -> m0_821  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_819 -> m0_822  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_819 -> m0_823  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_819 -> m0_824  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_819 -> m0_825  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_819 -> m0_826  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_819 -> m0_827  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_821 -> m0_40  [key=2, style=dotted];
m0_821 -> m0_822  [key=0, style=solid];
m0_822 -> m0_40  [key=2, style=dotted];
m0_822 -> m0_90  [key=2, style=dotted];
m0_822 -> m0_823  [key=0, style=solid];
m0_823 -> m0_40  [key=2, style=dotted];
m0_823 -> m0_824  [key=0, style=solid];
m0_824 -> m0_40  [key=2, style=dotted];
m0_824 -> m0_90  [key=2, style=dotted];
m0_824 -> m0_825  [key=0, style=solid];
m0_826 -> m0_40  [key=2, style=dotted];
m0_826 -> m0_827  [key=0, style=solid];
m0_827 -> m0_40  [key=2, style=dotted];
m0_827 -> m0_828  [key=0, style=solid];
m0_820 -> m0_821  [key=0, style=solid];
m0_820 -> m0_829  [key=2, style=dotted];
m0_825 -> m0_826  [key=0, style=solid];
m0_825 -> m0_829  [key=2, style=dotted];
m0_828 -> m0_818  [key=0, style=bold, color=blue];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_92  [key=2, style=dotted];
m0_89 -> m0_89  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_131  [key=1, style=dashed, color=darkseagreen4, label="params string[]"];
m0_126 -> m0_133  [key=1, style=dashed, color=darkseagreen4, label="params string[]"];
m0_126 -> m0_136  [key=1, style=dashed, color=darkseagreen4, label="params string[]"];
m0_127 -> m0_128  [key=0, style=solid];
m0_127 -> m0_140  [key=2, style=dotted];
m0_131 -> m0_132  [key=0, style=solid];
m0_131 -> m0_133  [key=0, style=solid];
m0_131 -> m0_81  [key=2, style=dotted];
m0_131 -> m0_258  [key=2, style=dotted];
m0_131 -> m0_40  [key=2, style=dotted];
m0_131 -> m0_259  [key=2, style=dotted];
m0_133 -> m0_134  [key=0, style=solid];
m0_133 -> m0_136  [key=0, style=solid];
m0_133 -> m0_261  [key=2, style=dotted];
m0_133 -> m0_40  [key=2, style=dotted];
m0_136 -> m0_139  [key=0, style=solid];
m0_136 -> m0_121  [key=2, style=dotted];
m0_136 -> m0_122  [key=2, style=dotted];
m0_136 -> m0_262  [key=2, style=dotted];
m0_136 -> m0_40  [key=2, style=dotted];
m0_136 -> m0_137  [key=0, style=solid];
m0_128 -> m0_129  [key=0, style=solid];
m0_128 -> m0_120  [key=2, style=dotted];
m0_128 -> m0_42  [key=2, style=dotted];
m0_128 -> m0_40  [key=2, style=dotted];
m0_129 -> m0_139  [key=0, style=solid];
m0_129 -> m0_79  [key=2, style=dotted];
m0_129 -> m0_40  [key=2, style=dotted];
m0_129 -> m0_130  [key=0, style=solid];
m0_130 -> m0_131  [key=0, style=solid];
m0_130 -> m0_81  [key=2, style=dotted];
m0_130 -> m0_82  [key=2, style=dotted];
m0_130 -> m0_40  [key=2, style=dotted];
m0_132 -> m0_139  [key=0, style=solid];
m0_132 -> m0_260  [key=2, style=dotted];
m0_132 -> m0_258  [key=2, style=dotted];
m0_132 -> m0_40  [key=2, style=dotted];
m0_132 -> m0_133  [key=0, style=solid];
m0_134 -> m0_135  [key=0, style=solid];
m0_134 -> m0_133  [key=0, style=solid];
m0_134 -> m0_94  [key=2, style=dotted];
m0_134 -> m0_40  [key=2, style=dotted];
m0_135 -> m0_139  [key=0, style=solid];
m0_135 -> m0_262  [key=2, style=dotted];
m0_135 -> m0_40  [key=2, style=dotted];
m0_135 -> m0_136  [key=0, style=solid];
m0_137 -> m0_138  [key=0, style=solid];
m0_137 -> m0_40  [key=2, style=dotted];
m0_138 -> m0_139  [key=0, style=solid];
m0_138 -> m0_123  [key=2, style=dotted];
m0_138 -> m0_124  [key=2, style=dotted];
m0_138 -> m0_125  [key=2, style=dotted];
m0_138 -> m0_263  [key=2, style=dotted];
m0_138 -> m0_40  [key=2, style=dotted];
m0_139 -> m0_126  [key=0, style=bold, color=blue];
m0_139 -> m0_42  [key=2, style=dotted];
m0_139 -> m0_40  [key=2, style=dotted];
m0_139 -> m0_140  [key=0, style=solid];
m0_614 -> m0_615  [key=0, style=solid];
m0_616 -> m0_9  [key=2, style=dotted];
m0_616 -> m0_617  [key=0, style=solid];
m0_615 -> m0_616  [key=0, style=solid];
m0_615 -> m0_79  [key=2, style=dotted];
m0_615 -> m0_119  [key=2, style=dotted];
m0_617 -> m0_614  [key=0, style=bold, color=blue];
m0_34 -> m0_40  [key=2, style=dotted];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_46  [key=2, style=dotted];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_93  [key=2, style=dotted];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_92  [key=2, style=dotted];
m0_88 -> m0_88  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_88 -> m0_90  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_58 -> m0_59  [key=0, style=solid];
m0_35 -> m0_40  [key=2, style=dotted];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_47  [key=2, style=dotted];
m0_35 -> m0_48  [key=2, style=dotted];
m0_104 -> m0_79  [key=2, style=dotted];
m0_104 -> m0_105  [key=0, style=solid];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_8  [key=0, style=bold, color=blue];
m0_25 -> m0_9  [key=2, style=dotted];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_42  [key=2, style=dotted];
m0_25 -> m0_43  [key=2, style=dotted];
m0_25 -> m0_44  [key=2, style=dotted];
m0_25 -> m0_45  [key=2, style=dotted];
m0_23 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label=c];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_37  [key=2, style=dotted];
m0_23 -> m0_38  [key=2, style=dotted];
m0_23 -> m0_39  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_40  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_11 -> m0_37  [key=2, style=dotted];
m0_11 -> m0_38  [key=2, style=dotted];
m0_11 -> m0_39  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_29 -> m0_37  [key=2, style=dotted];
m0_29 -> m0_38  [key=2, style=dotted];
m0_29 -> m0_39  [key=2, style=dotted];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_31  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m0_31 -> m0_37  [key=2, style=dotted];
m0_31 -> m0_38  [key=2, style=dotted];
m0_31 -> m0_39  [key=2, style=dotted];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_34  [key=2, style=dotted];
m0_31 -> m0_35  [key=2, style=dotted];
m0_31 -> m0_36  [key=2, style=dotted];
m0_33 -> m0_37  [key=2, style=dotted];
m0_33 -> m0_38  [key=2, style=dotted];
m0_33 -> m0_39  [key=2, style=dotted];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label=v];
m0_33 -> m0_29  [key=0, style=bold, color=blue];
m0_30 -> m0_40  [key=2, style=dotted];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label=chars];
m0_32 -> m0_40  [key=2, style=dotted];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_37  [key=2, style=dotted];
m0_36 -> m0_10  [key=0, style=bold, color=blue];
m0_746 -> m0_747  [key=0, style=solid];
m0_747 -> m0_79  [key=2, style=dotted];
m0_747 -> m0_119  [key=2, style=dotted];
m0_747 -> m0_748  [key=0, style=solid];
m0_747 -> m0_749  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_747 -> m0_750  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_747 -> m0_751  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_747 -> m0_752  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_747 -> m0_753  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_747 -> m0_754  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_747 -> m0_755  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_747 -> m0_756  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_747 -> m0_757  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_747 -> m0_758  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_749 -> m0_40  [key=2, style=dotted];
m0_749 -> m0_750  [key=0, style=solid];
m0_750 -> m0_40  [key=2, style=dotted];
m0_750 -> m0_751  [key=0, style=solid];
m0_751 -> m0_40  [key=2, style=dotted];
m0_751 -> m0_752  [key=0, style=solid];
m0_752 -> m0_40  [key=2, style=dotted];
m0_752 -> m0_90  [key=2, style=dotted];
m0_752 -> m0_753  [key=0, style=solid];
m0_754 -> m0_40  [key=2, style=dotted];
m0_754 -> m0_755  [key=0, style=solid];
m0_755 -> m0_40  [key=2, style=dotted];
m0_755 -> m0_756  [key=0, style=solid];
m0_756 -> m0_40  [key=2, style=dotted];
m0_756 -> m0_757  [key=0, style=solid];
m0_757 -> m0_40  [key=2, style=dotted];
m0_757 -> m0_90  [key=2, style=dotted];
m0_757 -> m0_758  [key=0, style=solid];
m0_758 -> m0_40  [key=2, style=dotted];
m0_758 -> m0_759  [key=0, style=solid];
m0_748 -> m0_749  [key=0, style=solid];
m0_748 -> m0_760  [key=2, style=dotted];
m0_753 -> m0_754  [key=0, style=solid];
m0_753 -> m0_760  [key=2, style=dotted];
m0_759 -> m0_746  [key=0, style=bold, color=blue];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_86  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid, color=green];
m0_3 -> m0_7  [key=2, style=dotted, color=green];
m0_3 -> m0_5  [key=1, style=dashed, color=green, label=j1];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_96  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_94 -> m0_40  [key=2, style=dotted];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_92  [key=2, style=dotted];
m0_95 -> m0_95  [key=1, style=dashed, color=darkseagreen4, label=next];
m0_95 -> m0_97  [key=1, style=dashed, color=darkseagreen4, label=next];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_92  [key=2, style=dotted];
m0_96 -> m0_96  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_96 -> m0_9  [key=2, style=dotted];
m0_96 -> m0_79  [key=2, style=dotted];
m0_96 -> m0_45  [key=2, style=dotted];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_99  [key=2, style=dotted];
m0_97 -> m0_97  [key=1, style=dashed, color=darkseagreen4, label=next];
m0_98 -> m0_94  [key=0, style=bold, color=blue];
m0_98 -> m0_9  [key=2, style=dotted];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_79  [key=2, style=dotted];
m0_98 -> m0_45  [key=2, style=dotted];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label=shift];
m0_76 -> m0_45  [key=2, style=dotted];
m0_76 -> m0_40  [key=2, style=dotted];
m0_76 -> m0_77  [key=0, style=solid];
m0_77 -> m0_45  [key=2, style=dotted];
m0_77 -> m0_40  [key=2, style=dotted];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_79  [key=2, style=dotted];
m0_60 -> m0_79  [key=2, style=dotted];
m0_60 -> m0_81  [key=2, style=dotted];
m0_60 -> m0_82  [key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_80  [key=2, style=dotted];
m0_60 -> m0_62  [key=1, style=dashed, color=darkseagreen4, label=v];
m0_60 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label=v];
m0_60 -> m0_64  [key=1, style=dashed, color=darkseagreen4, label=v];
m0_60 -> m0_65  [key=1, style=dashed, color=darkseagreen4, label=v];
m0_60 -> m0_66  [key=1, style=dashed, color=darkseagreen4, label=v];
m0_60 -> m0_67  [key=1, style=dashed, color=darkseagreen4, label=v];
m0_60 -> m0_68  [key=1, style=dashed, color=darkseagreen4, label=v];
m0_60 -> m0_54  [key=0, style=solid];
m0_62 -> m0_84  [key=2, style=dotted];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_83  [key=2, style=dotted];
m0_62 -> m0_85  [key=2, style=dotted];
m0_62 -> m0_65  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_62 -> m0_68  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_62 -> m0_69  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_62 -> m0_70  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_62 -> m0_71  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_62 -> m0_72  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_62 -> m0_73  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_64 -> m0_84  [key=2, style=dotted];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_66  [key=1, style=dashed, color=darkseagreen4, label=p];
m0_64 -> m0_67  [key=1, style=dashed, color=darkseagreen4, label=p];
m0_73 -> m0_84  [key=2, style=dotted];
m0_73 -> m0_76  [key=1, style=dashed, color=darkseagreen4, label=o2];
m0_73 -> m0_77  [key=1, style=dashed, color=darkseagreen4, label=o2];
m0_73 -> m0_74  [key=0, style=solid];
m0_73 -> m0_75  [key=1, style=dashed, color=darkseagreen4, label=o2];
m0_61 -> m0_40  [key=2, style=dotted];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_54  [key=0, style=solid];
m0_61 -> m0_61  [key=1, style=dashed, color=darkseagreen4, label=offset];
m0_63 -> m0_40  [key=2, style=dotted];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_86  [key=2, style=dotted];
m0_63 -> m0_49  [key=0, style=bold, color=blue];
m0_65 -> m0_40  [key=2, style=dotted];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_86  [key=2, style=dotted];
m0_67 -> m0_40  [key=2, style=dotted];
m0_67 -> m0_68  [key=0, style=solid];
m0_68 -> m0_40  [key=2, style=dotted];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_64  [key=0, style=bold, color=blue];
m0_75 -> m0_40  [key=2, style=dotted];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_90  [key=2, style=dotted];
m0_75 -> m0_89  [key=2, style=dotted];
m0_75 -> m0_72  [key=0, style=bold, color=blue];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_87  [key=2, style=dotted];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_88  [key=2, style=dotted];
m0_72 -> m0_74  [key=0, style=solid];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_87  [key=2, style=dotted];
m0_74 -> m0_48  [key=2, style=dotted];
m0_78 -> m0_59  [key=0, style=bold, color=blue];
m0_78 -> m0_76  [key=0, style=bold, color=blue];
m0_669 -> m0_670  [key=0, style=solid];
m0_674 -> m0_9  [key=2, style=dotted];
m0_674 -> m0_675  [key=0, style=solid];
m0_674 -> m0_79  [key=2, style=dotted];
m0_674 -> m0_45  [key=2, style=dotted];
m0_671 -> m0_674  [key=1, style=dashed, color=darkseagreen4, label=descendants];
m0_671 -> m0_672  [key=0, style=solid];
m0_671 -> m0_679  [key=2, style=dotted];
m0_671 -> m0_605  [key=2, style=dotted];
m0_671 -> m0_673  [key=1, style=dashed, color=darkseagreen4, label=descendants];
m0_671 -> m0_675  [key=1, style=dashed, color=darkseagreen4, label=descendants];
m0_671 -> m0_676  [key=1, style=dashed, color=darkseagreen4, label=descendants];
m0_671 -> m0_677  [key=1, style=dashed, color=darkseagreen4, label=descendants];
m0_673 -> m0_674  [key=0, style=solid];
m0_673 -> m0_40  [key=2, style=dotted];
m0_675 -> m0_676  [key=0, style=solid];
m0_675 -> m0_40  [key=2, style=dotted];
m0_670 -> m0_79  [key=2, style=dotted];
m0_670 -> m0_119  [key=2, style=dotted];
m0_670 -> m0_671  [key=0, style=solid];
m0_672 -> m0_673  [key=0, style=solid];
m0_672 -> m0_40  [key=2, style=dotted];
m0_672 -> m0_90  [key=2, style=dotted];
m0_676 -> m0_40  [key=2, style=dotted];
m0_676 -> m0_677  [key=0, style=solid];
m0_677 -> m0_40  [key=2, style=dotted];
m0_677 -> m0_678  [key=0, style=solid];
m0_678 -> m0_669  [key=0, style=bold, color=blue];
m0_627 -> m0_628  [key=0, style=solid];
m0_628 -> m0_79  [key=2, style=dotted];
m0_628 -> m0_119  [key=2, style=dotted];
m0_628 -> m0_629  [key=0, style=solid];
m0_628 -> m0_633  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_628 -> m0_634  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_633 -> m0_40  [key=2, style=dotted];
m0_633 -> m0_634  [key=0, style=solid];
m0_634 -> m0_40  [key=2, style=dotted];
m0_634 -> m0_635  [key=0, style=solid];
m0_632 -> m0_40  [key=2, style=dotted];
m0_632 -> m0_633  [key=0, style=solid];
m0_631 -> m0_40  [key=2, style=dotted];
m0_631 -> m0_90  [key=2, style=dotted];
m0_631 -> m0_632  [key=0, style=solid];
m0_629 -> m0_632  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_629 -> m0_630  [key=0, style=solid];
m0_630 -> m0_605  [key=2, style=dotted];
m0_630 -> m0_633  [key=1, style=dashed, color=darkseagreen4, label=ancestors];
m0_630 -> m0_634  [key=1, style=dashed, color=darkseagreen4, label=ancestors];
m0_630 -> m0_632  [key=1, style=dashed, color=darkseagreen4, label=ancestors];
m0_630 -> m0_631  [key=0, style=solid];
m0_630 -> m0_636  [key=2, style=dotted];
m0_635 -> m0_627  [key=0, style=bold, color=blue];
m0_655 -> m0_656  [key=0, style=solid];
m0_656 -> m0_79  [key=2, style=dotted];
m0_656 -> m0_119  [key=2, style=dotted];
m0_656 -> m0_657  [key=0, style=solid];
m0_656 -> m0_658  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_656 -> m0_663  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_656 -> m0_664  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_663 -> m0_40  [key=2, style=dotted];
m0_663 -> m0_664  [key=0, style=solid];
m0_664 -> m0_40  [key=2, style=dotted];
m0_664 -> m0_665  [key=0, style=solid];
m0_665 -> m0_40  [key=2, style=dotted];
m0_665 -> m0_666  [key=0, style=solid];
m0_665 -> m0_86  [key=2, style=dotted];
m0_666 -> m0_40  [key=2, style=dotted];
m0_666 -> m0_667  [key=0, style=solid];
m0_662 -> m0_40  [key=2, style=dotted];
m0_662 -> m0_90  [key=2, style=dotted];
m0_662 -> m0_663  [key=0, style=solid];
m0_657 -> m0_665  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_657 -> m0_666  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_657 -> m0_658  [key=0, style=solid];
m0_657 -> m0_652  [key=2, style=dotted];
m0_657 -> m0_659  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_658 -> m0_659  [key=0, style=solid];
m0_658 -> m0_660  [key=1, style=dashed, color=darkseagreen4, label=t1];
m0_661 -> m0_605  [key=2, style=dotted];
m0_661 -> m0_663  [key=1, style=dashed, color=darkseagreen4, label=ancestors];
m0_661 -> m0_664  [key=1, style=dashed, color=darkseagreen4, label=ancestors];
m0_661 -> m0_665  [key=1, style=dashed, color=darkseagreen4, label=ancestors];
m0_661 -> m0_666  [key=1, style=dashed, color=darkseagreen4, label=ancestors];
m0_661 -> m0_662  [key=0, style=solid];
m0_661 -> m0_668  [key=2, style=dotted];
m0_659 -> m0_660  [key=0, style=solid];
m0_660 -> m0_661  [key=0, style=solid];
m0_660 -> m0_653  [key=2, style=dotted];
m0_667 -> m0_655  [key=0, style=bold, color=blue];
m0_724 -> m0_725  [key=0, style=solid];
m0_737 -> m0_9  [key=2, style=dotted];
m0_737 -> m0_738  [key=0, style=solid];
m0_737 -> m0_745  [key=2, style=dotted];
m0_737 -> m0_84  [key=2, style=dotted];
m0_737 -> m0_45  [key=2, style=dotted];
m0_725 -> m0_737  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_725 -> m0_79  [key=2, style=dotted];
m0_725 -> m0_119  [key=2, style=dotted];
m0_725 -> m0_726  [key=0, style=solid];
m0_725 -> m0_728  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_725 -> m0_730  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_725 -> m0_731  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_725 -> m0_736  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_736 -> m0_737  [key=0, style=solid];
m0_736 -> m0_90  [key=2, style=dotted];
m0_736 -> m0_40  [key=2, style=dotted];
m0_726 -> m0_727  [key=0, style=solid];
m0_726 -> m0_739  [key=2, style=dotted];
m0_726 -> m0_729  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_726 -> m0_732  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_726 -> m0_733  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_726 -> m0_734  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_726 -> m0_735  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_728 -> m0_40  [key=2, style=dotted];
m0_728 -> m0_90  [key=2, style=dotted];
m0_728 -> m0_729  [key=0, style=solid];
m0_730 -> m0_40  [key=2, style=dotted];
m0_730 -> m0_90  [key=2, style=dotted];
m0_730 -> m0_731  [key=0, style=solid];
m0_731 -> m0_40  [key=2, style=dotted];
m0_731 -> m0_732  [key=0, style=solid];
m0_735 -> m0_736  [key=0, style=solid];
m0_735 -> n512  [key=2, style=dotted];
m0_727 -> m0_728  [key=0, style=solid];
m0_727 -> m0_740  [key=2, style=dotted];
m0_729 -> m0_730  [key=0, style=solid];
m0_729 -> m0_741  [key=2, style=dotted];
m0_732 -> m0_733  [key=0, style=solid];
m0_732 -> m0_742  [key=2, style=dotted];
m0_733 -> m0_734  [key=0, style=solid];
m0_733 -> m0_743  [key=2, style=dotted];
m0_734 -> m0_735  [key=0, style=solid];
m0_734 -> m0_741  [key=2, style=dotted];
m0_738 -> m0_724  [key=0, style=bold, color=blue];
m0_866 -> m0_867  [key=0, style=solid];
m0_869 -> m0_9  [key=2, style=dotted];
m0_869 -> m0_870  [key=0, style=solid];
m0_869 -> m0_858  [key=2, style=dotted];
m0_873 -> m0_9  [key=2, style=dotted];
m0_873 -> m0_874  [key=0, style=solid];
m0_873 -> m0_875  [key=2, style=dotted];
m0_867 -> m0_869  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_867 -> m0_79  [key=2, style=dotted];
m0_867 -> m0_868  [key=0, style=solid];
m0_868 -> m0_869  [key=0, style=solid];
m0_868 -> m0_857  [key=2, style=dotted];
m0_870 -> m0_870  [key=3, color=darkorchid, style=bold, label="Local variable double d"];
m0_870 -> m0_871  [key=0, style=solid];
m0_871 -> m0_873  [key=1, style=dashed, color=darkseagreen4, label=v1];
m0_871 -> m0_264  [key=2, style=dotted];
m0_871 -> m0_872  [key=0, style=solid];
m0_872 -> m0_873  [key=0, style=solid];
m0_872 -> m0_264  [key=2, style=dotted];
m0_874 -> m0_866  [key=0, style=bold, color=blue];
m0_120 -> m0_120  [key=3, color=darkorchid, style=bold, label="Local variable string bigIntegerText"];
m0_511 -> m0_512  [key=0, style=solid];
m0_512 -> m0_9  [key=2, style=dotted];
m0_512 -> m0_513  [key=0, style=solid];
m0_512 -> m0_81  [key=2, style=dotted];
m0_512 -> m0_82  [key=2, style=dotted];
m0_512 -> m0_45  [key=2, style=dotted];
m0_513 -> m0_9  [key=2, style=dotted];
m0_513 -> m0_514  [key=0, style=solid];
m0_513 -> m0_260  [key=2, style=dotted];
m0_513 -> m0_258  [key=2, style=dotted];
m0_513 -> m0_45  [key=2, style=dotted];
m0_514 -> m0_9  [key=2, style=dotted];
m0_514 -> m0_515  [key=0, style=solid];
m0_514 -> m0_261  [key=2, style=dotted];
m0_514 -> m0_45  [key=2, style=dotted];
m0_515 -> m0_9  [key=2, style=dotted];
m0_515 -> m0_516  [key=0, style=solid];
m0_515 -> m0_280  [key=2, style=dotted];
m0_515 -> m0_282  [key=2, style=dotted];
m0_515 -> m0_45  [key=2, style=dotted];
m0_516 -> m0_9  [key=2, style=dotted];
m0_516 -> m0_517  [key=0, style=solid];
m0_516 -> m0_280  [key=2, style=dotted];
m0_516 -> m0_45  [key=2, style=dotted];
m0_517 -> m0_9  [key=2, style=dotted];
m0_517 -> m0_518  [key=0, style=solid];
m0_517 -> m0_262  [key=2, style=dotted];
m0_517 -> m0_45  [key=2, style=dotted];
m0_518 -> m0_9  [key=2, style=dotted];
m0_518 -> m0_519  [key=0, style=solid];
m0_518 -> m0_262  [key=2, style=dotted];
m0_518 -> m0_45  [key=2, style=dotted];
m0_519 -> m0_9  [key=2, style=dotted];
m0_519 -> m0_520  [key=0, style=solid];
m0_519 -> m0_262  [key=2, style=dotted];
m0_519 -> m0_45  [key=2, style=dotted];
m0_520 -> m0_9  [key=2, style=dotted];
m0_520 -> m0_521  [key=0, style=solid];
m0_520 -> m0_261  [key=2, style=dotted];
m0_520 -> m0_45  [key=2, style=dotted];
m0_521 -> m0_9  [key=2, style=dotted];
m0_521 -> m0_522  [key=0, style=solid];
m0_521 -> m0_42  [key=2, style=dotted];
m0_521 -> m0_45  [key=2, style=dotted];
m0_522 -> m0_9  [key=2, style=dotted];
m0_522 -> m0_523  [key=0, style=solid];
m0_522 -> m0_261  [key=2, style=dotted];
m0_522 -> m0_45  [key=2, style=dotted];
m0_523 -> m0_9  [key=2, style=dotted];
m0_523 -> m0_524  [key=0, style=solid];
m0_523 -> m0_261  [key=2, style=dotted];
m0_523 -> m0_45  [key=2, style=dotted];
m0_524 -> m0_9  [key=2, style=dotted];
m0_524 -> m0_525  [key=0, style=solid];
m0_524 -> m0_42  [key=2, style=dotted];
m0_524 -> m0_45  [key=2, style=dotted];
m0_525 -> m0_9  [key=2, style=dotted];
m0_525 -> m0_526  [key=0, style=solid];
m0_525 -> m0_261  [key=2, style=dotted];
m0_525 -> m0_45  [key=2, style=dotted];
m0_526 -> m0_9  [key=2, style=dotted];
m0_526 -> m0_527  [key=0, style=solid];
m0_526 -> m0_261  [key=2, style=dotted];
m0_526 -> m0_45  [key=2, style=dotted];
m0_527 -> m0_9  [key=2, style=dotted];
m0_527 -> m0_528  [key=0, style=solid];
m0_527 -> m0_261  [key=2, style=dotted];
m0_527 -> m0_45  [key=2, style=dotted];
m0_528 -> m0_9  [key=2, style=dotted];
m0_528 -> m0_529  [key=0, style=solid];
m0_528 -> m0_261  [key=2, style=dotted];
m0_528 -> m0_45  [key=2, style=dotted];
m0_529 -> m0_9  [key=2, style=dotted];
m0_529 -> m0_530  [key=0, style=solid];
m0_529 -> m0_261  [key=2, style=dotted];
m0_529 -> m0_45  [key=2, style=dotted];
m0_530 -> m0_9  [key=2, style=dotted];
m0_530 -> m0_531  [key=0, style=solid];
m0_530 -> m0_261  [key=2, style=dotted];
m0_530 -> m0_45  [key=2, style=dotted];
m0_531 -> m0_9  [key=2, style=dotted];
m0_531 -> m0_532  [key=0, style=solid];
m0_531 -> m0_261  [key=2, style=dotted];
m0_531 -> m0_45  [key=2, style=dotted];
m0_532 -> m0_9  [key=2, style=dotted];
m0_532 -> m0_533  [key=0, style=solid];
m0_532 -> m0_42  [key=2, style=dotted];
m0_532 -> m0_45  [key=2, style=dotted];
m0_533 -> m0_9  [key=2, style=dotted];
m0_533 -> m0_534  [key=0, style=solid];
m0_533 -> m0_261  [key=2, style=dotted];
m0_533 -> m0_45  [key=2, style=dotted];
m0_534 -> m0_9  [key=2, style=dotted];
m0_534 -> m0_535  [key=0, style=solid];
m0_534 -> m0_42  [key=2, style=dotted];
m0_534 -> m0_45  [key=2, style=dotted];
m0_535 -> m0_9  [key=2, style=dotted];
m0_535 -> m0_536  [key=0, style=solid];
m0_535 -> m0_261  [key=2, style=dotted];
m0_535 -> m0_45  [key=2, style=dotted];
m0_536 -> m0_9  [key=2, style=dotted];
m0_536 -> m0_537  [key=0, style=solid];
m0_536 -> m0_42  [key=2, style=dotted];
m0_536 -> m0_45  [key=2, style=dotted];
m0_537 -> m0_9  [key=2, style=dotted];
m0_537 -> m0_538  [key=0, style=solid];
m0_537 -> m0_42  [key=2, style=dotted];
m0_537 -> m0_45  [key=2, style=dotted];
m0_538 -> m0_9  [key=2, style=dotted];
m0_538 -> m0_539  [key=0, style=solid];
m0_538 -> m0_265  [key=2, style=dotted];
m0_538 -> m0_45  [key=2, style=dotted];
m0_539 -> m0_9  [key=2, style=dotted];
m0_539 -> m0_540  [key=0, style=solid];
m0_539 -> m0_265  [key=2, style=dotted];
m0_539 -> m0_45  [key=2, style=dotted];
m0_540 -> m0_9  [key=2, style=dotted];
m0_540 -> m0_541  [key=0, style=solid];
m0_540 -> m0_264  [key=2, style=dotted];
m0_540 -> m0_45  [key=2, style=dotted];
m0_541 -> m0_9  [key=2, style=dotted];
m0_541 -> m0_542  [key=0, style=solid];
m0_541 -> m0_42  [key=2, style=dotted];
m0_541 -> m0_45  [key=2, style=dotted];
m0_542 -> m0_9  [key=2, style=dotted];
m0_542 -> m0_543  [key=0, style=solid];
m0_542 -> m0_266  [key=2, style=dotted];
m0_542 -> m0_45  [key=2, style=dotted];
m0_543 -> m0_9  [key=2, style=dotted];
m0_543 -> m0_544  [key=0, style=solid];
m0_543 -> m0_266  [key=2, style=dotted];
m0_543 -> m0_45  [key=2, style=dotted];
m0_544 -> m0_9  [key=2, style=dotted];
m0_544 -> m0_545  [key=0, style=solid];
m0_544 -> m0_267  [key=2, style=dotted];
m0_544 -> m0_45  [key=2, style=dotted];
m0_545 -> m0_9  [key=2, style=dotted];
m0_545 -> m0_546  [key=0, style=solid];
m0_545 -> m0_261  [key=2, style=dotted];
m0_545 -> m0_45  [key=2, style=dotted];
m0_546 -> m0_9  [key=2, style=dotted];
m0_546 -> m0_547  [key=0, style=solid];
m0_546 -> m0_268  [key=2, style=dotted];
m0_546 -> m0_45  [key=2, style=dotted];
m0_547 -> m0_9  [key=2, style=dotted];
m0_547 -> m0_548  [key=0, style=solid];
m0_547 -> m0_268  [key=2, style=dotted];
m0_547 -> m0_45  [key=2, style=dotted];
m0_548 -> m0_9  [key=2, style=dotted];
m0_548 -> m0_549  [key=0, style=solid];
m0_548 -> m0_268  [key=2, style=dotted];
m0_548 -> m0_45  [key=2, style=dotted];
m0_549 -> m0_9  [key=2, style=dotted];
m0_549 -> m0_550  [key=0, style=solid];
m0_549 -> m0_265  [key=2, style=dotted];
m0_549 -> m0_45  [key=2, style=dotted];
m0_550 -> m0_9  [key=2, style=dotted];
m0_550 -> m0_551  [key=0, style=solid];
m0_550 -> m0_264  [key=2, style=dotted];
m0_550 -> m0_45  [key=2, style=dotted];
m0_551 -> m0_9  [key=2, style=dotted];
m0_551 -> m0_552  [key=0, style=solid];
m0_551 -> m0_263  [key=2, style=dotted];
m0_551 -> m0_45  [key=2, style=dotted];
m0_555 -> m0_9  [key=2, style=dotted];
m0_555 -> m0_556  [key=0, style=solid];
m0_555 -> m0_261  [key=2, style=dotted];
m0_555 -> m0_45  [key=2, style=dotted];
m0_557 -> m0_9  [key=2, style=dotted];
m0_557 -> m0_558  [key=0, style=solid];
m0_557 -> m0_261  [key=2, style=dotted];
m0_557 -> m0_275  [key=2, style=dotted];
m0_557 -> m0_45  [key=2, style=dotted];
m0_558 -> m0_9  [key=2, style=dotted];
m0_558 -> m0_559  [key=0, style=solid];
m0_558 -> m0_270  [key=2, style=dotted];
m0_558 -> m0_269  [key=2, style=dotted];
m0_558 -> m0_45  [key=2, style=dotted];
m0_559 -> m0_9  [key=2, style=dotted];
m0_559 -> m0_560  [key=0, style=solid];
m0_559 -> m0_263  [key=2, style=dotted];
m0_559 -> m0_45  [key=2, style=dotted];
m0_560 -> m0_9  [key=2, style=dotted];
m0_560 -> m0_561  [key=0, style=solid];
m0_560 -> m0_270  [key=2, style=dotted];
m0_560 -> m0_269  [key=2, style=dotted];
m0_560 -> m0_45  [key=2, style=dotted];
m0_561 -> m0_9  [key=2, style=dotted];
m0_561 -> m0_562  [key=0, style=solid];
m0_561 -> m0_271  [key=2, style=dotted];
m0_561 -> m0_272  [key=2, style=dotted];
m0_561 -> m0_45  [key=2, style=dotted];
m0_562 -> m0_9  [key=2, style=dotted];
m0_562 -> m0_563  [key=0, style=solid];
m0_562 -> m0_273  [key=2, style=dotted];
m0_562 -> m0_274  [key=2, style=dotted];
m0_562 -> m0_45  [key=2, style=dotted];
m0_563 -> m0_9  [key=2, style=dotted];
m0_563 -> m0_564  [key=0, style=solid];
m0_563 -> m0_263  [key=2, style=dotted];
m0_563 -> m0_45  [key=2, style=dotted];
m0_564 -> m0_9  [key=2, style=dotted];
m0_564 -> m0_565  [key=0, style=solid];
m0_564 -> m0_263  [key=2, style=dotted];
m0_564 -> m0_45  [key=2, style=dotted];
m0_552 -> m0_45  [key=2, style=dotted];
m0_552 -> m0_262  [key=2, style=dotted];
m0_552 -> m0_553  [key=0, style=solid];
m0_552 -> m0_566  [key=2, style=dotted];
m0_554 -> m0_555  [key=0, style=solid];
m0_554 -> m0_556  [key=1, style=dashed, color=darkseagreen4, label=emptyData];
m0_556 -> m0_557  [key=0, style=solid];
m0_556 -> m0_45  [key=2, style=dotted];
m0_556 -> m0_261  [key=2, style=dotted];
m0_556 -> m0_566  [key=2, style=dotted];
m0_553 -> m0_45  [key=2, style=dotted];
m0_553 -> m0_263  [key=2, style=dotted];
m0_553 -> m0_554  [key=0, style=solid];
m0_553 -> m0_566  [key=2, style=dotted];
m0_565 -> m0_511  [key=0, style=bold, color=blue];
m0_789 -> m0_790  [key=0, style=solid];
m0_799 -> m0_9  [key=2, style=dotted];
m0_799 -> m0_800  [key=0, style=solid];
m0_799 -> m0_79  [key=2, style=dotted];
m0_799 -> m0_119  [key=2, style=dotted];
m0_799 -> m0_45  [key=2, style=dotted];
m0_790 -> m0_799  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_790 -> m0_79  [key=2, style=dotted];
m0_790 -> m0_119  [key=2, style=dotted];
m0_790 -> m0_791  [key=0, style=solid];
m0_790 -> m0_792  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_790 -> m0_793  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_790 -> m0_794  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_790 -> m0_795  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_790 -> m0_796  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_790 -> m0_797  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_790 -> m0_798  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_798 -> m0_799  [key=0, style=solid];
m0_798 -> m0_90  [key=2, style=dotted];
m0_798 -> m0_40  [key=2, style=dotted];
m0_791 -> m0_42  [key=2, style=dotted];
m0_791 -> m0_792  [key=0, style=solid];
m0_791 -> m0_801  [key=2, style=dotted];
m0_796 -> m0_42  [key=2, style=dotted];
m0_796 -> m0_797  [key=0, style=solid];
m0_796 -> m0_801  [key=2, style=dotted];
m0_794 -> m0_267  [key=2, style=dotted];
m0_794 -> m0_795  [key=0, style=solid];
m0_794 -> m0_801  [key=2, style=dotted];
m0_792 -> m0_40  [key=2, style=dotted];
m0_792 -> m0_793  [key=0, style=solid];
m0_793 -> m0_40  [key=2, style=dotted];
m0_793 -> m0_794  [key=0, style=solid];
m0_793 -> m0_90  [key=2, style=dotted];
m0_795 -> m0_40  [key=2, style=dotted];
m0_795 -> m0_796  [key=0, style=solid];
m0_797 -> m0_798  [key=0, style=solid];
m0_797 -> m0_40  [key=2, style=dotted];
m0_800 -> m0_789  [key=0, style=bold, color=blue];
m0_80 -> m0_81  [key=0, style=solid];
m0_82 -> m0_80  [key=0, style=bold, color=blue];
m0_38 -> m0_39  [key=0, style=solid];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_41  [key=2, style=dotted];
m0_40 -> m0_38  [key=0, style=bold, color=blue];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_89  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_284 -> m0_285  [key=0, style=solid];
m0_286 -> m0_335  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_286 -> m0_287  [key=0, style=solid];
m0_286 -> m0_330  [key=2, style=dotted];
m0_294 -> m0_360  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_294 -> m0_295  [key=0, style=solid];
m0_294 -> m0_330  [key=2, style=dotted];
m0_302 -> m0_384  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_302 -> m0_303  [key=0, style=solid];
m0_302 -> m0_330  [key=2, style=dotted];
m0_311 -> m0_411  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_311 -> m0_312  [key=0, style=solid];
m0_311 -> m0_330  [key=2, style=dotted];
m0_299 -> m0_375  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_299 -> m0_300  [key=0, style=solid];
m0_299 -> m0_330  [key=2, style=dotted];
m0_307 -> m0_399  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_307 -> m0_308  [key=0, style=solid];
m0_307 -> m0_330  [key=2, style=dotted];
m0_315 -> m0_423  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_315 -> m0_316  [key=0, style=solid];
m0_315 -> m0_330  [key=2, style=dotted];
m0_325 -> m0_453  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_325 -> m0_326  [key=0, style=solid];
m0_325 -> m0_330  [key=2, style=dotted];
m0_326 -> m0_456  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_326 -> m0_327  [key=0, style=solid];
m0_326 -> m0_330  [key=2, style=dotted];
m0_300 -> m0_378  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_300 -> m0_301  [key=0, style=solid];
m0_300 -> m0_330  [key=2, style=dotted];
m0_308 -> m0_402  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_308 -> m0_309  [key=0, style=solid];
m0_308 -> m0_330  [key=2, style=dotted];
m0_316 -> m0_426  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_316 -> m0_317  [key=0, style=solid];
m0_316 -> m0_330  [key=2, style=dotted];
m0_285 -> m0_332  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_285 -> m0_286  [key=0, style=solid];
m0_285 -> m0_330  [key=2, style=dotted];
m0_293 -> m0_357  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_293 -> m0_294  [key=0, style=solid];
m0_293 -> m0_330  [key=2, style=dotted];
m0_301 -> m0_381  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_301 -> m0_302  [key=0, style=solid];
m0_301 -> m0_330  [key=2, style=dotted];
m0_310 -> m0_408  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_310 -> m0_311  [key=0, style=solid];
m0_310 -> m0_330  [key=2, style=dotted];
m0_319 -> m0_435  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_319 -> m0_320  [key=0, style=solid];
m0_319 -> m0_330  [key=2, style=dotted];
m0_320 -> m0_438  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_320 -> m0_321  [key=0, style=solid];
m0_320 -> m0_330  [key=2, style=dotted];
m0_287 -> m0_338  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_287 -> m0_288  [key=0, style=solid];
m0_287 -> m0_330  [key=2, style=dotted];
m0_295 -> m0_363  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_295 -> m0_296  [key=0, style=solid];
m0_295 -> m0_330  [key=2, style=dotted];
m0_303 -> m0_387  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_303 -> m0_304  [key=0, style=solid];
m0_303 -> m0_330  [key=2, style=dotted];
m0_312 -> m0_414  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_312 -> m0_313  [key=0, style=solid];
m0_312 -> m0_330  [key=2, style=dotted];
m0_327 -> m0_459  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_327 -> m0_328  [key=0, style=solid];
m0_327 -> m0_330  [key=2, style=dotted];
m0_328 -> m0_462  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_328 -> m0_329  [key=0, style=solid];
m0_328 -> m0_330  [key=2, style=dotted];
m0_288 -> m0_341  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_288 -> m0_289  [key=0, style=solid];
m0_288 -> m0_330  [key=2, style=dotted];
m0_296 -> m0_366  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_296 -> m0_297  [key=0, style=solid];
m0_296 -> m0_330  [key=2, style=dotted];
m0_304 -> m0_390  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_304 -> m0_305  [key=0, style=solid];
m0_304 -> m0_330  [key=2, style=dotted];
m0_313 -> m0_417  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_313 -> m0_314  [key=0, style=solid];
m0_313 -> m0_330  [key=2, style=dotted];
m0_291 -> m0_350  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_291 -> m0_292  [key=0, style=solid];
m0_291 -> m0_330  [key=2, style=dotted];
m0_305 -> m0_393  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_305 -> m0_306  [key=0, style=solid];
m0_305 -> m0_330  [key=2, style=dotted];
m0_314 -> m0_420  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_314 -> m0_315  [key=0, style=solid];
m0_314 -> m0_330  [key=2, style=dotted];
m0_322 -> m0_444  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_322 -> m0_323  [key=0, style=solid];
m0_322 -> m0_331  [key=2, style=dotted];
m0_289 -> m0_344  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_289 -> m0_290  [key=0, style=solid];
m0_289 -> m0_330  [key=2, style=dotted];
m0_297 -> m0_369  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_297 -> m0_298  [key=0, style=solid];
m0_297 -> m0_330  [key=2, style=dotted];
m0_317 -> m0_429  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_317 -> m0_318  [key=0, style=solid];
m0_317 -> m0_330  [key=2, style=dotted];
m0_292 -> m0_353  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_292 -> m0_293  [key=0, style=solid];
m0_292 -> m0_330  [key=2, style=dotted];
m0_298 -> m0_372  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_298 -> m0_299  [key=0, style=solid];
m0_298 -> m0_330  [key=2, style=dotted];
m0_306 -> m0_396  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_306 -> m0_307  [key=0, style=solid];
m0_306 -> m0_330  [key=2, style=dotted];
m0_323 -> m0_447  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_323 -> m0_324  [key=0, style=solid];
m0_323 -> m0_331  [key=2, style=dotted];
m0_324 -> m0_450  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_324 -> m0_325  [key=0, style=solid];
m0_324 -> m0_331  [key=2, style=dotted];
m0_290 -> m0_347  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_290 -> m0_291  [key=0, style=solid];
m0_290 -> m0_330  [key=2, style=dotted];
m0_309 -> m0_405  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_309 -> m0_310  [key=0, style=solid];
m0_309 -> m0_330  [key=2, style=dotted];
m0_318 -> m0_432  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_318 -> m0_319  [key=0, style=solid];
m0_318 -> m0_330  [key=2, style=dotted];
m0_321 -> m0_441  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_321 -> m0_322  [key=0, style=solid];
m0_321 -> m0_331  [key=2, style=dotted];
m0_329 -> m0_284  [key=0, style=bold, color=blue];
m0_85 -> m0_83  [key=0, style=bold, color=blue];
m0_813 -> m0_814  [key=0, style=solid];
m0_814 -> m0_81  [key=2, style=dotted];
m0_814 -> m0_119  [key=2, style=dotted];
m0_814 -> m0_815  [key=0, style=solid];
m0_814 -> m0_259  [key=2, style=dotted];
m0_816 -> m0_40  [key=2, style=dotted];
m0_816 -> m0_817  [key=0, style=solid];
m0_815 -> m0_810  [key=2, style=dotted];
m0_815 -> m0_816  [key=0, style=solid];
m0_815 -> m0_809  [key=2, style=dotted];
m0_817 -> m0_813  [key=0, style=bold, color=blue];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_87  [key=0, style=bold, color=blue];
m0_99 -> m0_99  [key=1, style=dashed, color=darkseagreen4, label=next];
m0_99 -> m0_100  [key=0, style=solid];
m0_93 -> m0_95  [key=1, style=dashed, color=darkseagreen4, label=next];
m0_93 -> m0_94  [key=0, style=solid];
m0_92 -> m0_79  [key=2, style=dotted];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_100  [key=0, style=solid];
m0_92 -> m0_101  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_92 -> m0_102  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_102  [key=2, style=dotted];
m0_101 -> m0_91  [key=0, style=bold, color=blue];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> m0_104  [key=2, style=dotted];
m0_101 -> m0_101  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_4 -> m0_5  [key=0, style=solid, color=green];
m0_4 -> m0_7  [key=2, style=dotted, color=green];
m0_5 -> m0_6  [key=0, style=solid, color=green];
m0_5 -> m0_7  [key=2, style=dotted];
m0_5 -> m0_8  [key=2, style=dotted, color=green];
m0_5 -> m0_9  [key=2, style=dotted, color=green];
m0_6 -> m0_4  [key=0, style=bold, color=blue];
m0_6 -> m0_0  [key=0, style=bold, color=blue];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_92  [key=0, style=bold, color=blue];
m0_106 -> m0_9  [key=2, style=dotted];
m0_106 -> m0_107  [key=0, style=solid];
m0_106 -> m0_79  [key=2, style=dotted];
m0_106 -> m0_45  [key=2, style=dotted];
m0_106 -> m0_119  [key=2, style=dotted];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label=previous];
m0_105 -> m0_110  [key=1, style=dashed, color=darkseagreen4, label="params string[]"];
m0_105 -> m0_112  [key=1, style=dashed, color=darkseagreen4, label="params string[]"];
m0_105 -> m0_115  [key=1, style=dashed, color=darkseagreen4, label="params string[]"];
m0_107 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label=previous];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_109  [key=1, style=dashed, color=darkseagreen4, label=previous];
m0_107 -> m0_120  [key=2, style=dotted];
m0_108 -> m0_40  [key=2, style=dotted];
m0_108 -> m0_109  [key=0, style=solid];
m0_108 -> m0_118  [key=0, style=solid];
m0_109 -> m0_109  [key=1, style=dashed, color=darkseagreen4, label=previous];
m0_109 -> m0_110  [key=0, style=solid];
m0_109 -> m0_111  [key=1, style=dashed, color=darkseagreen4, label=previous];
m0_110 -> m0_40  [key=2, style=dotted];
m0_110 -> m0_111  [key=0, style=solid];
m0_110 -> m0_112  [key=0, style=solid];
m0_111 -> m0_111  [key=1, style=dashed, color=darkseagreen4, label=previous];
m0_111 -> m0_112  [key=0, style=solid];
m0_111 -> m0_118  [key=0, style=solid];
m0_112 -> m0_102  [key=2, style=dotted];
m0_112 -> m0_113  [key=0, style=solid];
m0_112 -> m0_115  [key=0, style=solid];
m0_113 -> m0_103  [key=0, style=bold, color=blue];
m0_113 -> m0_114  [key=0, style=solid];
m0_113 -> m0_112  [key=0, style=solid];
m0_113 -> m0_94  [key=2, style=dotted];
m0_802 -> m0_803  [key=0, style=solid];
m0_803 -> m0_81  [key=2, style=dotted];
m0_803 -> m0_119  [key=2, style=dotted];
m0_803 -> m0_804  [key=0, style=solid];
m0_803 -> m0_259  [key=2, style=dotted];
m0_803 -> m0_806  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_807 -> m0_40  [key=2, style=dotted];
m0_807 -> m0_808  [key=0, style=solid];
m0_804 -> m0_810  [key=2, style=dotted];
m0_804 -> m0_805  [key=0, style=solid];
m0_804 -> m0_809  [key=2, style=dotted];
m0_806 -> m0_807  [key=0, style=solid];
m0_806 -> m0_809  [key=2, style=dotted];
m0_806 -> m0_812  [key=2, style=dotted];
m0_805 -> m0_811  [key=2, style=dotted];
m0_805 -> m0_806  [key=0, style=solid];
m0_808 -> m0_802  [key=0, style=bold, color=blue];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> m0_118  [key=0, style=solid];
m0_115 -> m0_79  [key=2, style=dotted];
m0_115 -> m0_119  [key=2, style=dotted];
m0_115 -> m0_116  [key=0, style=solid];
m0_115 -> m0_117  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_115 -> m0_118  [key=0, style=solid];
m0_115 -> m0_121  [key=2, style=dotted];
m0_115 -> m0_122  [key=2, style=dotted];
m0_116 -> m0_40  [key=2, style=dotted];
m0_116 -> m0_90  [key=2, style=dotted];
m0_116 -> m0_117  [key=0, style=solid];
m0_117 -> m0_40  [key=2, style=dotted];
m0_117 -> m0_90  [key=2, style=dotted];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_120  [key=2, style=dotted];
m0_117 -> m0_123  [key=2, style=dotted];
m0_117 -> m0_124  [key=2, style=dotted];
m0_117 -> m0_125  [key=2, style=dotted];
m0_118 -> m0_114  [key=0, style=bold, color=blue];
m0_118 -> m0_105  [key=0, style=bold, color=blue];
m0_637 -> m0_638  [key=0, style=solid];
m0_638 -> m0_79  [key=2, style=dotted];
m0_638 -> m0_119  [key=2, style=dotted];
m0_638 -> m0_639  [key=0, style=solid];
m0_638 -> m0_640  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_638 -> m0_646  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_638 -> m0_647  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_646 -> m0_40  [key=2, style=dotted];
m0_646 -> m0_647  [key=0, style=solid];
m0_647 -> m0_40  [key=2, style=dotted];
m0_647 -> m0_648  [key=0, style=solid];
m0_649 -> m0_40  [key=2, style=dotted];
m0_649 -> m0_650  [key=0, style=solid];
m0_649 -> m0_86  [key=2, style=dotted];
m0_650 -> m0_40  [key=2, style=dotted];
m0_650 -> m0_651  [key=0, style=solid];
m0_645 -> m0_40  [key=2, style=dotted];
m0_645 -> m0_646  [key=0, style=solid];
m0_648 -> m0_40  [key=2, style=dotted];
m0_648 -> m0_649  [key=0, style=solid];
m0_644 -> m0_40  [key=2, style=dotted];
m0_644 -> m0_90  [key=2, style=dotted];
m0_644 -> m0_645  [key=0, style=solid];
m0_639 -> m0_649  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_639 -> m0_650  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_639 -> m0_640  [key=0, style=solid];
m0_639 -> m0_652  [key=2, style=dotted];
m0_639 -> m0_641  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_640 -> m0_645  [key=1, style=dashed, color=darkseagreen4, label=t1];
m0_640 -> m0_641  [key=0, style=solid];
m0_640 -> m0_642  [key=1, style=dashed, color=darkseagreen4, label=t1];
m0_643 -> m0_605  [key=2, style=dotted];
m0_643 -> m0_646  [key=1, style=dashed, color=darkseagreen4, label=ancestors];
m0_643 -> m0_647  [key=1, style=dashed, color=darkseagreen4, label=ancestors];
m0_643 -> m0_649  [key=1, style=dashed, color=darkseagreen4, label=ancestors];
m0_643 -> m0_650  [key=1, style=dashed, color=darkseagreen4, label=ancestors];
m0_643 -> m0_645  [key=1, style=dashed, color=darkseagreen4, label=ancestors];
m0_643 -> m0_648  [key=1, style=dashed, color=darkseagreen4, label=ancestors];
m0_643 -> m0_644  [key=0, style=solid];
m0_643 -> m0_654  [key=2, style=dotted];
m0_641 -> m0_648  [key=1, style=dashed, color=darkseagreen4, label=t2];
m0_641 -> m0_642  [key=0, style=solid];
m0_642 -> m0_643  [key=0, style=solid];
m0_642 -> m0_653  [key=2, style=dotted];
m0_651 -> m0_637  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid, color=green];
m0_1 -> m0_1  [key=3, color=green, style=bold, label="Local variable string ob1"];
m0_1 -> m0_2  [key=0, style=solid, color=green];
m0_1 -> m0_3  [key=1, style=dashed, color=green, label=ob1];
m0_2 -> m0_2  [key=3, color=green, style=bold, label="Local variable string ob2"];
m0_2 -> m0_3  [key=0, style=solid, color=green];
m0_2 -> m0_4  [key=1, style=dashed, color=green, label=ob2];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_879 -> m0_880  [key=0, style=solid];
m0_336 -> m0_42  [key=2, style=dotted];
m0_336 -> m0_337  [key=0, style=solid];
m0_361 -> m0_42  [key=2, style=dotted];
m0_361 -> m0_362  [key=0, style=solid];
m0_385 -> m0_42  [key=2, style=dotted];
m0_385 -> m0_386  [key=0, style=solid];
m0_412 -> m0_42  [key=2, style=dotted];
m0_412 -> m0_413  [key=0, style=solid];
m0_376 -> m0_81  [key=2, style=dotted];
m0_376 -> m0_377  [key=0, style=solid];
m0_400 -> m0_81  [key=2, style=dotted];
m0_400 -> m0_401  [key=0, style=solid];
m0_424 -> m0_81  [key=2, style=dotted];
m0_424 -> m0_425  [key=0, style=solid];
m0_454 -> m0_81  [key=2, style=dotted];
m0_454 -> m0_455  [key=0, style=solid];
m0_457 -> m0_81  [key=2, style=dotted];
m0_457 -> m0_458  [key=0, style=solid];
m0_379 -> m0_260  [key=2, style=dotted];
m0_379 -> m0_380  [key=0, style=solid];
m0_403 -> m0_260  [key=2, style=dotted];
m0_403 -> m0_404  [key=0, style=solid];
m0_427 -> m0_260  [key=2, style=dotted];
m0_427 -> m0_428  [key=0, style=solid];
m0_333 -> m0_262  [key=2, style=dotted];
m0_333 -> m0_334  [key=0, style=solid];
m0_358 -> m0_262  [key=2, style=dotted];
m0_358 -> m0_359  [key=0, style=solid];
m0_382 -> m0_262  [key=2, style=dotted];
m0_382 -> m0_383  [key=0, style=solid];
m0_409 -> m0_262  [key=2, style=dotted];
m0_409 -> m0_410  [key=0, style=solid];
m0_436 -> m0_262  [key=2, style=dotted];
m0_436 -> m0_437  [key=0, style=solid];
m0_439 -> m0_262  [key=2, style=dotted];
m0_439 -> m0_440  [key=0, style=solid];
m0_339 -> m0_264  [key=2, style=dotted];
m0_339 -> m0_340  [key=0, style=solid];
m0_364 -> m0_264  [key=2, style=dotted];
m0_364 -> m0_365  [key=0, style=solid];
m0_388 -> m0_264  [key=2, style=dotted];
m0_388 -> m0_389  [key=0, style=solid];
m0_415 -> m0_264  [key=2, style=dotted];
m0_415 -> m0_416  [key=0, style=solid];
m0_460 -> m0_267  [key=2, style=dotted];
m0_460 -> m0_461  [key=0, style=solid];
m0_460 -> m0_281  [key=2, style=dotted];
m0_463 -> m0_267  [key=2, style=dotted];
m0_463 -> m0_464  [key=0, style=solid];
m0_463 -> m0_281  [key=2, style=dotted];
m0_342 -> m0_268  [key=2, style=dotted];
m0_342 -> m0_343  [key=0, style=solid];
m0_367 -> m0_268  [key=2, style=dotted];
m0_367 -> m0_368  [key=0, style=solid];
m0_391 -> m0_268  [key=2, style=dotted];
m0_391 -> m0_392  [key=0, style=solid];
m0_418 -> m0_268  [key=2, style=dotted];
m0_418 -> m0_419  [key=0, style=solid];
m0_351 -> m0_263  [key=2, style=dotted];
m0_351 -> m0_352  [key=0, style=solid];
m0_394 -> m0_263  [key=2, style=dotted];
m0_394 -> m0_395  [key=0, style=solid];
m0_421 -> m0_263  [key=2, style=dotted];
m0_421 -> m0_422  [key=0, style=solid];
m0_445 -> m0_263  [key=2, style=dotted];
m0_445 -> m0_446  [key=0, style=solid];
m0_445 -> m0_281  [key=2, style=dotted];
m0_345 -> m0_270  [key=2, style=dotted];
m0_345 -> m0_346  [key=0, style=solid];
m0_370 -> m0_270  [key=2, style=dotted];
m0_370 -> m0_371  [key=0, style=solid];
m0_430 -> m0_270  [key=2, style=dotted];
m0_430 -> m0_269  [key=2, style=dotted];
m0_430 -> m0_431  [key=0, style=solid];
m0_354 -> m0_271  [key=2, style=dotted];
m0_354 -> m0_355  [key=0, style=solid];
m0_354 -> m0_356  [key=2, style=dotted];
m0_373 -> m0_271  [key=2, style=dotted];
m0_373 -> m0_374  [key=0, style=solid];
m0_373 -> m0_356  [key=2, style=dotted];
m0_397 -> m0_271  [key=2, style=dotted];
m0_397 -> m0_398  [key=0, style=solid];
m0_397 -> m0_356  [key=2, style=dotted];
m0_448 -> m0_271  [key=2, style=dotted];
m0_448 -> m0_449  [key=0, style=solid];
m0_448 -> m0_356  [key=2, style=dotted];
m0_448 -> m0_281  [key=2, style=dotted];
m0_451 -> m0_271  [key=2, style=dotted];
m0_451 -> m0_452  [key=0, style=solid];
m0_451 -> m0_356  [key=2, style=dotted];
m0_451 -> m0_281  [key=2, style=dotted];
m0_348 -> m0_273  [key=2, style=dotted];
m0_348 -> m0_274  [key=2, style=dotted];
m0_348 -> m0_349  [key=0, style=solid];
m0_406 -> m0_273  [key=2, style=dotted];
m0_406 -> m0_274  [key=2, style=dotted];
m0_406 -> m0_407  [key=0, style=solid];
m0_433 -> m0_273  [key=2, style=dotted];
m0_433 -> m0_274  [key=2, style=dotted];
m0_433 -> m0_434  [key=0, style=solid];
m0_442 -> m0_273  [key=2, style=dotted];
m0_442 -> m0_274  [key=2, style=dotted];
m0_442 -> m0_443  [key=0, style=solid];
m0_442 -> m0_281  [key=2, style=dotted];
m0_335 -> m0_336  [key=0, style=solid];
m0_337 -> m0_335  [key=0, style=bold, color=blue];
m0_360 -> m0_361  [key=0, style=solid];
m0_362 -> m0_360  [key=0, style=bold, color=blue];
m0_384 -> m0_385  [key=0, style=solid];
m0_386 -> m0_384  [key=0, style=bold, color=blue];
m0_411 -> m0_412  [key=0, style=solid];
m0_413 -> m0_411  [key=0, style=bold, color=blue];
m0_375 -> m0_376  [key=0, style=solid];
m0_377 -> m0_375  [key=0, style=bold, color=blue];
m0_399 -> m0_400  [key=0, style=solid];
m0_401 -> m0_399  [key=0, style=bold, color=blue];
m0_423 -> m0_424  [key=0, style=solid];
m0_425 -> m0_423  [key=0, style=bold, color=blue];
m0_453 -> m0_454  [key=0, style=solid];
m0_455 -> m0_453  [key=0, style=bold, color=blue];
m0_456 -> m0_457  [key=0, style=solid];
m0_458 -> m0_456  [key=0, style=bold, color=blue];
m0_378 -> m0_379  [key=0, style=solid];
m0_380 -> m0_378  [key=0, style=bold, color=blue];
m0_402 -> m0_403  [key=0, style=solid];
m0_404 -> m0_402  [key=0, style=bold, color=blue];
m0_426 -> m0_427  [key=0, style=solid];
m0_428 -> m0_426  [key=0, style=bold, color=blue];
m0_332 -> m0_333  [key=0, style=solid];
m0_334 -> m0_332  [key=0, style=bold, color=blue];
m0_357 -> m0_358  [key=0, style=solid];
m0_359 -> m0_357  [key=0, style=bold, color=blue];
m0_381 -> m0_382  [key=0, style=solid];
m0_383 -> m0_381  [key=0, style=bold, color=blue];
m0_408 -> m0_409  [key=0, style=solid];
m0_410 -> m0_408  [key=0, style=bold, color=blue];
m0_435 -> m0_436  [key=0, style=solid];
m0_437 -> m0_435  [key=0, style=bold, color=blue];
m0_438 -> m0_439  [key=0, style=solid];
m0_440 -> m0_438  [key=0, style=bold, color=blue];
m0_338 -> m0_339  [key=0, style=solid];
m0_340 -> m0_338  [key=0, style=bold, color=blue];
m0_363 -> m0_364  [key=0, style=solid];
m0_365 -> m0_363  [key=0, style=bold, color=blue];
m0_387 -> m0_388  [key=0, style=solid];
m0_389 -> m0_387  [key=0, style=bold, color=blue];
m0_414 -> m0_415  [key=0, style=solid];
m0_416 -> m0_414  [key=0, style=bold, color=blue];
m0_459 -> m0_460  [key=0, style=solid];
m0_461 -> m0_459  [key=0, style=bold, color=blue];
m0_462 -> m0_463  [key=0, style=solid];
m0_464 -> m0_462  [key=0, style=bold, color=blue];
m0_341 -> m0_342  [key=0, style=solid];
m0_343 -> m0_341  [key=0, style=bold, color=blue];
m0_366 -> m0_367  [key=0, style=solid];
m0_368 -> m0_366  [key=0, style=bold, color=blue];
m0_390 -> m0_391  [key=0, style=solid];
m0_392 -> m0_390  [key=0, style=bold, color=blue];
m0_417 -> m0_418  [key=0, style=solid];
m0_419 -> m0_417  [key=0, style=bold, color=blue];
m0_350 -> m0_351  [key=0, style=solid];
m0_352 -> m0_350  [key=0, style=bold, color=blue];
m0_393 -> m0_394  [key=0, style=solid];
m0_395 -> m0_393  [key=0, style=bold, color=blue];
m0_420 -> m0_421  [key=0, style=solid];
m0_422 -> m0_420  [key=0, style=bold, color=blue];
m0_444 -> m0_445  [key=0, style=solid];
m0_446 -> m0_444  [key=0, style=bold, color=blue];
m0_344 -> m0_345  [key=0, style=solid];
m0_346 -> m0_344  [key=0, style=bold, color=blue];
m0_369 -> m0_370  [key=0, style=solid];
m0_371 -> m0_369  [key=0, style=bold, color=blue];
m0_429 -> m0_430  [key=0, style=solid];
m0_431 -> m0_429  [key=0, style=bold, color=blue];
m0_353 -> m0_354  [key=0, style=solid];
m0_355 -> m0_353  [key=0, style=bold, color=blue];
m0_372 -> m0_373  [key=0, style=solid];
m0_374 -> m0_372  [key=0, style=bold, color=blue];
m0_396 -> m0_397  [key=0, style=solid];
m0_398 -> m0_396  [key=0, style=bold, color=blue];
m0_447 -> m0_448  [key=0, style=solid];
m0_449 -> m0_447  [key=0, style=bold, color=blue];
m0_450 -> m0_451  [key=0, style=solid];
m0_452 -> m0_450  [key=0, style=bold, color=blue];
m0_347 -> m0_348  [key=0, style=solid];
m0_349 -> m0_347  [key=0, style=bold, color=blue];
m0_405 -> m0_406  [key=0, style=solid];
m0_407 -> m0_405  [key=0, style=bold, color=blue];
m0_432 -> m0_433  [key=0, style=solid];
m0_434 -> m0_432  [key=0, style=bold, color=blue];
m0_441 -> m0_442  [key=0, style=solid];
m0_443 -> m0_441  [key=0, style=bold, color=blue];
m0_785 -> m0_652  [key=2, style=dotted];
m0_785 -> m0_786  [key=0, style=solid];
m0_881 -> m0_58  [key=2, style=dotted];
m0_881 -> m0_882  [key=0, style=solid];
m0_784 -> m0_785  [key=0, style=solid];
m0_786 -> m0_787  [key=0, style=solid];
m0_786 -> m0_788  [key=2, style=dotted];
m0_880 -> m0_881  [key=0, style=solid];
m0_882 -> m0_879  [key=0, style=bold, color=blue];
m0_774 -> m0_775  [key=0, style=solid];
m0_787 -> m0_784  [key=0, style=bold, color=blue];
m0_775 -> m0_776  [key=0, style=solid];
m0_775 -> m0_778  [key=2, style=dotted];
m0_776 -> m0_777  [key=0, style=solid];
m0_776 -> m0_779  [key=2, style=dotted];
m0_776 -> m0_780  [key=2, style=dotted];
m0_777 -> m0_774  [key=0, style=bold, color=blue];
m0_680 -> m0_681  [key=0, style=solid];
m0_687 -> m0_9  [key=2, style=dotted];
m0_687 -> m0_688  [key=0, style=solid];
m0_687 -> m0_79  [key=2, style=dotted];
m0_687 -> m0_45  [key=2, style=dotted];
m0_684 -> m0_687  [key=1, style=dashed, color=darkseagreen4, label=descendants];
m0_684 -> m0_685  [key=0, style=solid];
m0_684 -> m0_694  [key=2, style=dotted];
m0_684 -> m0_605  [key=2, style=dotted];
m0_684 -> m0_686  [key=1, style=dashed, color=darkseagreen4, label=descendants];
m0_684 -> m0_688  [key=1, style=dashed, color=darkseagreen4, label=descendants];
m0_684 -> m0_689  [key=1, style=dashed, color=darkseagreen4, label=descendants];
m0_684 -> m0_690  [key=1, style=dashed, color=darkseagreen4, label=descendants];
m0_684 -> m0_691  [key=1, style=dashed, color=darkseagreen4, label=descendants];
m0_684 -> m0_692  [key=1, style=dashed, color=darkseagreen4, label=descendants];
m0_686 -> m0_687  [key=0, style=solid];
m0_686 -> m0_40  [key=2, style=dotted];
m0_688 -> m0_689  [key=0, style=solid];
m0_688 -> m0_40  [key=2, style=dotted];
m0_681 -> m0_79  [key=2, style=dotted];
m0_681 -> m0_119  [key=2, style=dotted];
m0_681 -> m0_682  [key=0, style=solid];
m0_681 -> m0_683  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_683 -> m0_684  [key=0, style=solid];
m0_683 -> m0_653  [key=2, style=dotted];
m0_685 -> m0_686  [key=0, style=solid];
m0_685 -> m0_40  [key=2, style=dotted];
m0_685 -> m0_90  [key=2, style=dotted];
m0_689 -> m0_40  [key=2, style=dotted];
m0_689 -> m0_690  [key=0, style=solid];
m0_690 -> m0_40  [key=2, style=dotted];
m0_690 -> m0_691  [key=0, style=solid];
m0_691 -> m0_40  [key=2, style=dotted];
m0_691 -> m0_692  [key=0, style=solid];
m0_691 -> m0_86  [key=2, style=dotted];
m0_692 -> m0_40  [key=2, style=dotted];
m0_692 -> m0_693  [key=0, style=solid];
m0_682 -> m0_683  [key=0, style=solid];
m0_682 -> m0_691  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_682 -> m0_692  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_682 -> m0_652  [key=2, style=dotted];
m0_693 -> m0_680  [key=0, style=bold, color=blue];
m0_8 -> m0_9  [key=0, style=solid];
m0_140 -> m0_261  [key=2, style=dotted];
m0_140 -> m0_40  [key=2, style=dotted];
m0_140 -> m0_141  [key=0, style=solid];
m0_573 -> m0_574  [key=0, style=solid];
m0_580 -> m0_9  [key=2, style=dotted];
m0_580 -> m0_581  [key=0, style=solid];
m0_580 -> m0_79  [key=2, style=dotted];
m0_580 -> m0_45  [key=2, style=dotted];
m0_575 -> m0_580  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_575 -> m0_79  [key=2, style=dotted];
m0_575 -> m0_576  [key=0, style=solid];
m0_575 -> m0_577  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_575 -> m0_578  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_575 -> m0_579  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_575 -> m0_581  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_575 -> m0_582  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_575 -> m0_584  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_575 -> m0_588  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_575 -> m0_590  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_579 -> m0_580  [key=0, style=solid];
m0_579 -> m0_40  [key=2, style=dotted];
m0_581 -> m0_582  [key=0, style=solid];
m0_581 -> m0_90  [key=2, style=dotted];
m0_581 -> m0_40  [key=2, style=dotted];
m0_574 -> m0_575  [key=0, style=solid];
m0_576 -> m0_577  [key=0, style=solid];
m0_576 -> m0_595  [key=2, style=dotted];
m0_577 -> m0_40  [key=2, style=dotted];
m0_577 -> m0_578  [key=0, style=solid];
m0_578 -> m0_579  [key=0, style=solid];
m0_578 -> m0_595  [key=2, style=dotted];
m0_582 -> m0_583  [key=0, style=solid];
m0_582 -> m0_585  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_582 -> m0_586  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_582 -> m0_587  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_584 -> m0_40  [key=2, style=dotted];
m0_584 -> m0_585  [key=0, style=solid];
m0_588 -> m0_589  [key=0, style=solid];
m0_588 -> m0_591  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_588 -> m0_592  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_588 -> m0_593  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_590 -> m0_40  [key=2, style=dotted];
m0_590 -> m0_591  [key=0, style=solid];
m0_590 -> m0_90  [key=2, style=dotted];
m0_583 -> m0_584  [key=0, style=solid];
m0_583 -> m0_595  [key=2, style=dotted];
m0_585 -> m0_102  [key=2, style=dotted];
m0_585 -> m0_586  [key=0, style=solid];
m0_586 -> m0_102  [key=2, style=dotted];
m0_586 -> m0_587  [key=0, style=solid];
m0_587 -> m0_588  [key=0, style=solid];
m0_587 -> m0_102  [key=2, style=dotted];
m0_589 -> m0_590  [key=0, style=solid];
m0_589 -> m0_595  [key=2, style=dotted];
m0_591 -> m0_102  [key=2, style=dotted];
m0_591 -> m0_592  [key=0, style=solid];
m0_592 -> m0_102  [key=2, style=dotted];
m0_592 -> m0_593  [key=0, style=solid];
m0_593 -> m0_102  [key=2, style=dotted];
m0_593 -> m0_594  [key=0, style=solid];
m0_594 -> m0_573  [key=0, style=bold, color=blue];
m0_606 -> m0_607  [key=0, style=solid];
m0_611 -> m0_9  [key=2, style=dotted];
m0_611 -> m0_612  [key=0, style=solid];
m0_611 -> m0_42  [key=2, style=dotted];
m0_611 -> m0_45  [key=2, style=dotted];
m0_612 -> m0_9  [key=2, style=dotted];
m0_612 -> m0_613  [key=0, style=solid];
m0_612 -> m0_119  [key=2, style=dotted];
m0_612 -> m0_45  [key=2, style=dotted];
m0_609 -> m0_611  [key=1, style=dashed, color=darkseagreen4, label=beforeTokens];
m0_609 -> m0_612  [key=1, style=dashed, color=darkseagreen4, label=beforeTokens];
m0_609 -> m0_610  [key=0, style=solid];
m0_609 -> m0_126  [key=2, style=dotted];
m0_609 -> m0_605  [key=2, style=dotted];
m0_610 -> m0_611  [key=0, style=solid];
m0_610 -> m0_40  [key=2, style=dotted];
m0_607 -> m0_79  [key=2, style=dotted];
m0_607 -> m0_119  [key=2, style=dotted];
m0_607 -> m0_608  [key=0, style=solid];
m0_608 -> m0_609  [key=0, style=solid];
m0_613 -> m0_606  [key=0, style=bold, color=blue];
m0_707 -> m0_708  [key=0, style=solid];
m0_715 -> m0_9  [key=2, style=dotted];
m0_715 -> m0_716  [key=0, style=solid];
m0_715 -> m0_79  [key=2, style=dotted];
m0_715 -> m0_45  [key=2, style=dotted];
m0_711 -> m0_715  [key=1, style=dashed, color=darkseagreen4, label=descendantsAndSelf];
m0_711 -> m0_712  [key=0, style=solid];
m0_711 -> m0_723  [key=2, style=dotted];
m0_711 -> m0_605  [key=2, style=dotted];
m0_711 -> m0_713  [key=1, style=dashed, color=darkseagreen4, label=descendantsAndSelf];
m0_711 -> m0_714  [key=1, style=dashed, color=darkseagreen4, label=descendantsAndSelf];
m0_711 -> m0_716  [key=1, style=dashed, color=darkseagreen4, label=descendantsAndSelf];
m0_711 -> m0_717  [key=1, style=dashed, color=darkseagreen4, label=descendantsAndSelf];
m0_711 -> m0_718  [key=1, style=dashed, color=darkseagreen4, label=descendantsAndSelf];
m0_711 -> m0_719  [key=1, style=dashed, color=darkseagreen4, label=descendantsAndSelf];
m0_711 -> m0_720  [key=1, style=dashed, color=darkseagreen4, label=descendantsAndSelf];
m0_711 -> m0_721  [key=1, style=dashed, color=darkseagreen4, label=descendantsAndSelf];
m0_714 -> m0_715  [key=0, style=solid];
m0_714 -> m0_40  [key=2, style=dotted];
m0_716 -> m0_717  [key=0, style=solid];
m0_716 -> m0_40  [key=2, style=dotted];
m0_708 -> m0_79  [key=2, style=dotted];
m0_708 -> m0_119  [key=2, style=dotted];
m0_708 -> m0_709  [key=0, style=solid];
m0_708 -> m0_710  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_708 -> m0_713  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_710 -> m0_711  [key=0, style=solid];
m0_710 -> m0_653  [key=2, style=dotted];
m0_712 -> m0_40  [key=2, style=dotted];
m0_712 -> m0_90  [key=2, style=dotted];
m0_712 -> m0_713  [key=0, style=solid];
m0_713 -> m0_714  [key=0, style=solid];
m0_713 -> m0_40  [key=2, style=dotted];
m0_717 -> m0_40  [key=2, style=dotted];
m0_717 -> m0_718  [key=0, style=solid];
m0_718 -> m0_40  [key=2, style=dotted];
m0_718 -> m0_719  [key=0, style=solid];
m0_719 -> m0_40  [key=2, style=dotted];
m0_719 -> m0_720  [key=0, style=solid];
m0_720 -> m0_40  [key=2, style=dotted];
m0_720 -> m0_721  [key=0, style=solid];
m0_720 -> m0_86  [key=2, style=dotted];
m0_721 -> m0_40  [key=2, style=dotted];
m0_721 -> m0_722  [key=0, style=solid];
m0_709 -> m0_710  [key=0, style=solid];
m0_709 -> m0_719  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_709 -> m0_720  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_709 -> m0_721  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_709 -> m0_652  [key=2, style=dotted];
m0_722 -> m0_707  [key=0, style=bold, color=blue];
m0_49 -> m0_50  [key=0, style=solid];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_48  [key=2, style=dotted];
m0_50 -> m0_54  [key=1, style=dashed, color=darkseagreen4, label=fixedHex];
m0_50 -> m0_37  [key=2, style=dotted];
m0_50 -> m0_38  [key=2, style=dotted];
m0_50 -> m0_53  [key=2, style=dotted];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label=bytes];
m0_51 -> m0_62  [key=1, style=dashed, color=darkseagreen4, label=bytes];
m0_51 -> m0_40  [key=2, style=dotted];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_62  [key=0, style=solid];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label=shift];
m0_52 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label=shift];
m0_52 -> m0_49  [key=0, style=bold, color=blue];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_57  [key=1, style=dashed, color=darkseagreen4, label=b];
m0_55 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label=b];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_58  [key=0, style=solid];
m0_56 -> m0_40  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_57  [key=1, style=dashed, color=darkseagreen4, label=b];
m0_57 -> m0_54  [key=0, style=bold, color=blue];
m0_596 -> m0_597  [key=0, style=solid];
m0_601 -> m0_9  [key=2, style=dotted];
m0_601 -> m0_602  [key=0, style=solid];
m0_601 -> m0_79  [key=2, style=dotted];
m0_601 -> m0_45  [key=2, style=dotted];
m0_602 -> m0_9  [key=2, style=dotted];
m0_602 -> m0_603  [key=0, style=solid];
m0_602 -> m0_79  [key=2, style=dotted];
m0_602 -> m0_45  [key=2, style=dotted];
m0_599 -> m0_601  [key=1, style=dashed, color=darkseagreen4, label=afterTokens];
m0_599 -> m0_602  [key=1, style=dashed, color=darkseagreen4, label=afterTokens];
m0_599 -> m0_600  [key=0, style=solid];
m0_599 -> m0_604  [key=2, style=dotted];
m0_599 -> m0_605  [key=2, style=dotted];
m0_600 -> m0_601  [key=0, style=solid];
m0_600 -> m0_40  [key=2, style=dotted];
m0_597 -> m0_79  [key=2, style=dotted];
m0_597 -> m0_119  [key=2, style=dotted];
m0_597 -> m0_598  [key=0, style=solid];
m0_598 -> m0_599  [key=0, style=solid];
m0_603 -> m0_596  [key=0, style=bold, color=blue];
m0_618 -> m0_619  [key=0, style=solid];
m0_619 -> m0_79  [key=2, style=dotted];
m0_619 -> m0_119  [key=2, style=dotted];
m0_619 -> m0_620  [key=0, style=solid];
m0_619 -> m0_623  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_619 -> m0_624  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_623 -> m0_40  [key=2, style=dotted];
m0_623 -> m0_624  [key=0, style=solid];
m0_624 -> m0_40  [key=2, style=dotted];
m0_624 -> m0_625  [key=0, style=solid];
m0_622 -> m0_40  [key=2, style=dotted];
m0_622 -> m0_90  [key=2, style=dotted];
m0_622 -> m0_623  [key=0, style=solid];
m0_620 -> m0_621  [key=0, style=solid];
m0_621 -> m0_605  [key=2, style=dotted];
m0_621 -> m0_623  [key=1, style=dashed, color=darkseagreen4, label=ancestors];
m0_621 -> m0_624  [key=1, style=dashed, color=darkseagreen4, label=ancestors];
m0_621 -> m0_622  [key=0, style=solid];
m0_621 -> m0_626  [key=2, style=dotted];
m0_625 -> m0_618  [key=0, style=bold, color=blue];
m0_167 -> m0_42  [key=2, style=dotted];
m0_167 -> m0_40  [key=2, style=dotted];
m0_167 -> m0_168  [key=0, style=solid];
m0_171 -> m0_42  [key=2, style=dotted];
m0_171 -> m0_40  [key=2, style=dotted];
m0_171 -> m0_172  [key=0, style=solid];
m0_172 -> m0_42  [key=2, style=dotted];
m0_172 -> m0_40  [key=2, style=dotted];
m0_172 -> m0_173  [key=0, style=solid];
m0_173 -> m0_42  [key=2, style=dotted];
m0_173 -> m0_40  [key=2, style=dotted];
m0_173 -> m0_174  [key=0, style=solid];
m0_176 -> m0_42  [key=2, style=dotted];
m0_176 -> m0_40  [key=2, style=dotted];
m0_176 -> m0_177  [key=0, style=solid];
m0_177 -> m0_42  [key=2, style=dotted];
m0_177 -> m0_40  [key=2, style=dotted];
m0_177 -> m0_178  [key=0, style=solid];
m0_178 -> m0_42  [key=2, style=dotted];
m0_178 -> m0_40  [key=2, style=dotted];
m0_178 -> m0_179  [key=0, style=solid];
m0_180 -> m0_42  [key=2, style=dotted];
m0_180 -> m0_40  [key=2, style=dotted];
m0_180 -> m0_181  [key=0, style=solid];
m0_188 -> m0_42  [key=2, style=dotted];
m0_188 -> m0_40  [key=2, style=dotted];
m0_188 -> m0_189  [key=0, style=solid];
m0_192 -> m0_42  [key=2, style=dotted];
m0_192 -> m0_40  [key=2, style=dotted];
m0_192 -> m0_193  [key=0, style=solid];
m0_196 -> m0_42  [key=2, style=dotted];
m0_196 -> m0_40  [key=2, style=dotted];
m0_196 -> m0_197  [key=0, style=solid];
m0_241 -> m0_42  [key=2, style=dotted];
m0_241 -> m0_282  [key=2, style=dotted];
m0_241 -> m0_40  [key=2, style=dotted];
m0_241 -> m0_242  [key=0, style=solid];
m0_241 -> m0_281  [key=2, style=dotted];
m0_244 -> m0_42  [key=2, style=dotted];
m0_244 -> m0_282  [key=2, style=dotted];
m0_244 -> m0_40  [key=2, style=dotted];
m0_244 -> m0_245  [key=0, style=solid];
m0_244 -> m0_281  [key=2, style=dotted];
m0_245 -> m0_42  [key=2, style=dotted];
m0_245 -> m0_282  [key=2, style=dotted];
m0_245 -> m0_40  [key=2, style=dotted];
m0_245 -> m0_246  [key=0, style=solid];
m0_245 -> m0_281  [key=2, style=dotted];
m0_246 -> m0_42  [key=2, style=dotted];
m0_246 -> m0_282  [key=2, style=dotted];
m0_246 -> m0_40  [key=2, style=dotted];
m0_246 -> m0_247  [key=0, style=solid];
m0_246 -> m0_281  [key=2, style=dotted];
m0_186 -> m0_81  [key=2, style=dotted];
m0_186 -> m0_40  [key=2, style=dotted];
m0_186 -> m0_187  [key=0, style=solid];
m0_186 -> m0_259  [key=2, style=dotted];
m0_187 -> m0_260  [key=2, style=dotted];
m0_187 -> m0_258  [key=2, style=dotted];
m0_187 -> m0_40  [key=2, style=dotted];
m0_187 -> m0_188  [key=0, style=solid];
m0_142 -> m0_261  [key=2, style=dotted];
m0_142 -> m0_40  [key=2, style=dotted];
m0_142 -> m0_143  [key=0, style=solid];
m0_144 -> m0_261  [key=2, style=dotted];
m0_144 -> m0_40  [key=2, style=dotted];
m0_144 -> m0_145  [key=0, style=solid];
m0_146 -> m0_261  [key=2, style=dotted];
m0_146 -> m0_40  [key=2, style=dotted];
m0_146 -> m0_147  [key=0, style=solid];
m0_148 -> m0_261  [key=2, style=dotted];
m0_148 -> m0_40  [key=2, style=dotted];
m0_148 -> m0_149  [key=0, style=solid];
m0_150 -> m0_261  [key=2, style=dotted];
m0_150 -> m0_40  [key=2, style=dotted];
m0_150 -> m0_151  [key=0, style=solid];
m0_152 -> m0_261  [key=2, style=dotted];
m0_152 -> m0_40  [key=2, style=dotted];
m0_152 -> m0_153  [key=0, style=solid];
m0_154 -> m0_261  [key=2, style=dotted];
m0_154 -> m0_40  [key=2, style=dotted];
m0_154 -> m0_155  [key=0, style=solid];
m0_156 -> m0_261  [key=2, style=dotted];
m0_156 -> m0_40  [key=2, style=dotted];
m0_156 -> m0_157  [key=0, style=solid];
m0_158 -> m0_261  [key=2, style=dotted];
m0_158 -> m0_40  [key=2, style=dotted];
m0_158 -> m0_159  [key=0, style=solid];
m0_160 -> m0_261  [key=2, style=dotted];
m0_160 -> m0_40  [key=2, style=dotted];
m0_160 -> m0_161  [key=0, style=solid];
m0_162 -> m0_261  [key=2, style=dotted];
m0_162 -> m0_40  [key=2, style=dotted];
m0_162 -> m0_163  [key=0, style=solid];
m0_210 -> m0_261  [key=2, style=dotted];
m0_210 -> m0_275  [key=2, style=dotted];
m0_210 -> m0_40  [key=2, style=dotted];
m0_210 -> m0_211  [key=0, style=solid];
m0_210 -> m0_276  [key=2, style=dotted];
m0_212 -> m0_261  [key=2, style=dotted];
m0_212 -> m0_272  [key=2, style=dotted];
m0_212 -> m0_40  [key=2, style=dotted];
m0_212 -> m0_213  [key=0, style=solid];
m0_212 -> m0_278  [key=2, style=dotted];
m0_213 -> m0_261  [key=2, style=dotted];
m0_213 -> m0_272  [key=2, style=dotted];
m0_213 -> m0_40  [key=2, style=dotted];
m0_213 -> m0_214  [key=0, style=solid];
m0_213 -> m0_278  [key=2, style=dotted];
m0_214 -> m0_261  [key=2, style=dotted];
m0_214 -> m0_40  [key=2, style=dotted];
m0_214 -> m0_215  [key=0, style=solid];
m0_236 -> m0_261  [key=2, style=dotted];
m0_236 -> m0_40  [key=2, style=dotted];
m0_236 -> m0_237  [key=0, style=solid];
m0_237 -> m0_261  [key=2, style=dotted];
m0_237 -> m0_40  [key=2, style=dotted];
m0_237 -> m0_238  [key=0, style=solid];
m0_249 -> m0_261  [key=2, style=dotted];
m0_249 -> m0_40  [key=2, style=dotted];
m0_249 -> m0_250  [key=0, style=solid];
m0_249 -> m0_279  [key=2, style=dotted];
m0_249 -> m0_281  [key=2, style=dotted];
m0_239 -> m0_280  [key=2, style=dotted];
m0_239 -> m0_40  [key=2, style=dotted];
m0_239 -> m0_240  [key=0, style=solid];
m0_239 -> m0_279  [key=2, style=dotted];
m0_250 -> m0_280  [key=2, style=dotted];
m0_250 -> m0_282  [key=2, style=dotted];
m0_250 -> m0_40  [key=2, style=dotted];
m0_250 -> m0_251  [key=0, style=solid];
m0_251 -> m0_280  [key=2, style=dotted];
m0_251 -> m0_282  [key=2, style=dotted];
m0_251 -> m0_40  [key=2, style=dotted];
m0_251 -> m0_252  [key=0, style=solid];
m0_252 -> m0_280  [key=2, style=dotted];
m0_252 -> m0_282  [key=2, style=dotted];
m0_252 -> m0_40  [key=2, style=dotted];
m0_252 -> m0_253  [key=0, style=solid];
m0_253 -> m0_280  [key=2, style=dotted];
m0_253 -> m0_282  [key=2, style=dotted];
m0_253 -> m0_40  [key=2, style=dotted];
m0_253 -> m0_254  [key=0, style=solid];
m0_254 -> m0_280  [key=2, style=dotted];
m0_254 -> m0_282  [key=2, style=dotted];
m0_254 -> m0_40  [key=2, style=dotted];
m0_254 -> m0_255  [key=0, style=solid];
m0_255 -> m0_280  [key=2, style=dotted];
m0_255 -> m0_282  [key=2, style=dotted];
m0_255 -> m0_256  [key=0, style=solid];
m0_242 -> m0_282  [key=2, style=dotted];
m0_242 -> m0_264  [key=2, style=dotted];
m0_242 -> m0_40  [key=2, style=dotted];
m0_242 -> m0_243  [key=0, style=solid];
m0_242 -> m0_281  [key=2, style=dotted];
m0_243 -> m0_282  [key=2, style=dotted];
m0_243 -> m0_265  [key=2, style=dotted];
m0_243 -> m0_40  [key=2, style=dotted];
m0_243 -> m0_244  [key=0, style=solid];
m0_243 -> m0_281  [key=2, style=dotted];
m0_183 -> m0_262  [key=2, style=dotted];
m0_183 -> m0_40  [key=2, style=dotted];
m0_183 -> m0_184  [key=0, style=solid];
m0_191 -> m0_262  [key=2, style=dotted];
m0_191 -> m0_40  [key=2, style=dotted];
m0_191 -> m0_192  [key=0, style=solid];
m0_195 -> m0_262  [key=2, style=dotted];
m0_195 -> m0_40  [key=2, style=dotted];
m0_195 -> m0_196  [key=0, style=solid];
m0_199 -> m0_262  [key=2, style=dotted];
m0_199 -> m0_40  [key=2, style=dotted];
m0_199 -> m0_200  [key=0, style=solid];
m0_165 -> m0_265  [key=2, style=dotted];
m0_165 -> m0_40  [key=2, style=dotted];
m0_165 -> m0_166  [key=0, style=solid];
m0_164 -> m0_264  [key=2, style=dotted];
m0_164 -> m0_40  [key=2, style=dotted];
m0_164 -> m0_165  [key=0, style=solid];
m0_166 -> m0_264  [key=2, style=dotted];
m0_166 -> m0_40  [key=2, style=dotted];
m0_166 -> m0_167  [key=0, style=solid];
m0_181 -> m0_264  [key=2, style=dotted];
m0_181 -> m0_40  [key=2, style=dotted];
m0_181 -> m0_182  [key=0, style=solid];
m0_189 -> m0_264  [key=2, style=dotted];
m0_189 -> m0_40  [key=2, style=dotted];
m0_189 -> m0_190  [key=0, style=solid];
m0_193 -> m0_264  [key=2, style=dotted];
m0_193 -> m0_40  [key=2, style=dotted];
m0_193 -> m0_194  [key=0, style=solid];
m0_197 -> m0_264  [key=2, style=dotted];
m0_197 -> m0_40  [key=2, style=dotted];
m0_197 -> m0_198  [key=0, style=solid];
m0_168 -> m0_266  [key=2, style=dotted];
m0_168 -> m0_40  [key=2, style=dotted];
m0_168 -> m0_169  [key=0, style=solid];
m0_169 -> m0_266  [key=2, style=dotted];
m0_169 -> m0_84  [key=2, style=dotted];
m0_169 -> m0_40  [key=2, style=dotted];
m0_169 -> m0_170  [key=0, style=solid];
m0_170 -> m0_267  [key=2, style=dotted];
m0_170 -> m0_40  [key=2, style=dotted];
m0_170 -> m0_171  [key=0, style=solid];
m0_190 -> m0_267  [key=2, style=dotted];
m0_190 -> m0_40  [key=2, style=dotted];
m0_190 -> m0_191  [key=0, style=solid];
m0_194 -> m0_267  [key=2, style=dotted];
m0_194 -> m0_40  [key=2, style=dotted];
m0_194 -> m0_195  [key=0, style=solid];
m0_198 -> m0_267  [key=2, style=dotted];
m0_198 -> m0_40  [key=2, style=dotted];
m0_198 -> m0_199  [key=0, style=solid];
m0_202 -> m0_267  [key=2, style=dotted];
m0_202 -> m0_269  [key=2, style=dotted];
m0_202 -> m0_40  [key=2, style=dotted];
m0_202 -> m0_203  [key=0, style=solid];
m0_205 -> m0_267  [key=2, style=dotted];
m0_205 -> m0_272  [key=2, style=dotted];
m0_205 -> m0_40  [key=2, style=dotted];
m0_205 -> m0_206  [key=0, style=solid];
m0_207 -> m0_267  [key=2, style=dotted];
m0_207 -> m0_274  [key=2, style=dotted];
m0_207 -> m0_40  [key=2, style=dotted];
m0_207 -> m0_208  [key=0, style=solid];
m0_211 -> m0_267  [key=2, style=dotted];
m0_211 -> m0_275  [key=2, style=dotted];
m0_211 -> m0_212  [key=0, style=solid];
m0_211 -> m0_276  [key=2, style=dotted];
m0_211 -> m0_277  [key=2, style=dotted];
m0_240 -> m0_267  [key=2, style=dotted];
m0_240 -> m0_40  [key=2, style=dotted];
m0_240 -> m0_241  [key=0, style=solid];
m0_240 -> m0_279  [key=2, style=dotted];
m0_240 -> m0_281  [key=2, style=dotted];
m0_174 -> m0_268  [key=2, style=dotted];
m0_174 -> m0_40  [key=2, style=dotted];
m0_174 -> m0_175  [key=0, style=solid];
m0_175 -> m0_268  [key=2, style=dotted];
m0_175 -> m0_40  [key=2, style=dotted];
m0_175 -> m0_176  [key=0, style=solid];
m0_182 -> m0_268  [key=2, style=dotted];
m0_182 -> m0_40  [key=2, style=dotted];
m0_182 -> m0_183  [key=0, style=solid];
m0_179 -> m0_263  [key=2, style=dotted];
m0_179 -> m0_40  [key=2, style=dotted];
m0_179 -> m0_180  [key=0, style=solid];
m0_184 -> m0_263  [key=2, style=dotted];
m0_184 -> m0_40  [key=2, style=dotted];
m0_184 -> m0_185  [key=0, style=solid];
m0_209 -> m0_263  [key=2, style=dotted];
m0_209 -> m0_40  [key=2, style=dotted];
m0_209 -> m0_210  [key=0, style=solid];
m0_247 -> m0_263  [key=2, style=dotted];
m0_247 -> m0_40  [key=2, style=dotted];
m0_247 -> m0_248  [key=0, style=solid];
m0_247 -> m0_281  [key=2, style=dotted];
m0_200 -> m0_270  [key=2, style=dotted];
m0_200 -> m0_269  [key=2, style=dotted];
m0_200 -> m0_40  [key=2, style=dotted];
m0_200 -> m0_201  [key=0, style=solid];
m0_201 -> m0_270  [key=2, style=dotted];
m0_201 -> m0_269  [key=2, style=dotted];
m0_201 -> m0_40  [key=2, style=dotted];
m0_201 -> m0_202  [key=0, style=solid];
m0_203 -> m0_271  [key=2, style=dotted];
m0_203 -> m0_272  [key=2, style=dotted];
m0_203 -> m0_40  [key=2, style=dotted];
m0_203 -> m0_204  [key=0, style=solid];
m0_206 -> m0_271  [key=2, style=dotted];
m0_206 -> m0_272  [key=2, style=dotted];
m0_206 -> m0_40  [key=2, style=dotted];
m0_206 -> m0_207  [key=0, style=solid];
m0_204 -> m0_273  [key=2, style=dotted];
m0_204 -> m0_274  [key=2, style=dotted];
m0_204 -> m0_40  [key=2, style=dotted];
m0_204 -> m0_205  [key=0, style=solid];
m0_208 -> m0_273  [key=2, style=dotted];
m0_208 -> m0_274  [key=2, style=dotted];
m0_208 -> m0_40  [key=2, style=dotted];
m0_208 -> m0_209  [key=0, style=solid];
m0_141 -> m0_40  [key=2, style=dotted];
m0_141 -> m0_142  [key=0, style=solid];
m0_141 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestFixtureBase"];
m0_141 -> m0_70  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestFixtureBase"];
m0_143 -> m0_40  [key=2, style=dotted];
m0_143 -> m0_144  [key=0, style=solid];
m0_145 -> m0_40  [key=2, style=dotted];
m0_145 -> m0_146  [key=0, style=solid];
m0_147 -> m0_40  [key=2, style=dotted];
m0_147 -> m0_148  [key=0, style=solid];
m0_149 -> m0_40  [key=2, style=dotted];
m0_149 -> m0_150  [key=0, style=solid];
m0_151 -> m0_40  [key=2, style=dotted];
m0_151 -> m0_152  [key=0, style=solid];
m0_153 -> m0_40  [key=2, style=dotted];
m0_153 -> m0_154  [key=0, style=solid];
m0_155 -> m0_40  [key=2, style=dotted];
m0_155 -> m0_156  [key=0, style=solid];
m0_157 -> m0_40  [key=2, style=dotted];
m0_157 -> m0_158  [key=0, style=solid];
m0_159 -> m0_40  [key=2, style=dotted];
m0_159 -> m0_160  [key=0, style=solid];
m0_161 -> m0_40  [key=2, style=dotted];
m0_161 -> m0_162  [key=0, style=solid];
m0_163 -> m0_40  [key=2, style=dotted];
m0_163 -> m0_164  [key=0, style=solid];
m0_185 -> m0_40  [key=2, style=dotted];
m0_185 -> m0_186  [key=0, style=solid];
m0_215 -> m0_40  [key=2, style=dotted];
m0_215 -> m0_216  [key=0, style=solid];
m0_216 -> m0_40  [key=2, style=dotted];
m0_216 -> m0_217  [key=0, style=solid];
m0_217 -> m0_40  [key=2, style=dotted];
m0_217 -> m0_218  [key=0, style=solid];
m0_218 -> m0_40  [key=2, style=dotted];
m0_218 -> m0_219  [key=0, style=solid];
m0_219 -> m0_40  [key=2, style=dotted];
m0_219 -> m0_220  [key=0, style=solid];
m0_220 -> m0_40  [key=2, style=dotted];
m0_220 -> m0_221  [key=0, style=solid];
m0_221 -> m0_40  [key=2, style=dotted];
m0_221 -> m0_222  [key=0, style=solid];
m0_222 -> m0_40  [key=2, style=dotted];
m0_222 -> m0_223  [key=0, style=solid];
m0_223 -> m0_40  [key=2, style=dotted];
m0_223 -> m0_224  [key=0, style=solid];
m0_224 -> m0_40  [key=2, style=dotted];
m0_224 -> m0_225  [key=0, style=solid];
m0_225 -> m0_40  [key=2, style=dotted];
m0_225 -> m0_226  [key=0, style=solid];
m0_226 -> m0_40  [key=2, style=dotted];
m0_226 -> m0_227  [key=0, style=solid];
m0_227 -> m0_40  [key=2, style=dotted];
m0_227 -> m0_228  [key=0, style=solid];
m0_228 -> m0_40  [key=2, style=dotted];
m0_228 -> m0_229  [key=0, style=solid];
m0_229 -> m0_40  [key=2, style=dotted];
m0_229 -> m0_230  [key=0, style=solid];
m0_230 -> m0_40  [key=2, style=dotted];
m0_230 -> m0_231  [key=0, style=solid];
m0_231 -> m0_40  [key=2, style=dotted];
m0_231 -> m0_232  [key=0, style=solid];
m0_232 -> m0_40  [key=2, style=dotted];
m0_232 -> m0_233  [key=0, style=solid];
m0_233 -> m0_40  [key=2, style=dotted];
m0_233 -> m0_234  [key=0, style=solid];
m0_234 -> m0_40  [key=2, style=dotted];
m0_234 -> m0_235  [key=0, style=solid];
m0_256 -> m0_40  [key=2, style=dotted];
m0_256 -> m0_257  [key=0, style=solid];
m0_235 -> m0_236  [key=0, style=solid];
m0_238 -> m0_249  [key=1, style=dashed, color=darkseagreen4, label=bigIntegerText];
m0_238 -> m0_239  [key=0, style=solid];
m0_238 -> m0_240  [key=1, style=dashed, color=darkseagreen4, label=bigIntegerText];
m0_238 -> m0_248  [key=1, style=dashed, color=darkseagreen4, label=bigIntegerText];
m0_248 -> m0_249  [key=0, style=solid];
m0_248 -> m0_279  [key=2, style=dotted];
m0_248 -> m0_283  [key=2, style=dotted];
m0_257 -> m0_127  [key=0, style=bold, color=blue];
m0_781 -> m0_782  [key=0, style=solid];
m0_782 -> m0_330  [key=2, style=dotted];
m0_782 -> m0_783  [key=0, style=solid];
m0_782 -> m0_784  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_783 -> m0_781  [key=0, style=bold, color=blue];
m0_904 -> m0_905  [key=0, style=solid];
m0_907 -> m0_40  [key=2, style=dotted];
m0_907 -> m0_90  [key=2, style=dotted];
m0_907 -> m0_908  [key=0, style=solid];
m0_908 -> m0_40  [key=2, style=dotted];
m0_908 -> m0_909  [key=0, style=solid];
m0_909 -> m0_40  [key=2, style=dotted];
m0_909 -> m0_910  [key=0, style=solid];
m0_910 -> m0_40  [key=2, style=dotted];
m0_910 -> m0_911  [key=0, style=solid];
m0_906 -> m0_907  [key=0, style=solid];
m0_906 -> m0_908  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_906 -> m0_909  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_906 -> m0_910  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_906 -> m0_912  [key=2, style=dotted];
m0_906 -> m0_913  [key=2, style=dotted];
m0_905 -> m0_906  [key=0, style=solid];
m0_905 -> m0_905  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_911 -> m0_904  [key=0, style=bold, color=blue];
m1_3 -> m1_0  [key=3, color=darkorchid, style=bold, label="Parameter variable System.IFormatProvider provider"];
m1_3 -> m1_4  [key=3, color=darkorchid, style=bold, label="Parameter variable System.IFormatProvider provider"];
m1_3 -> m1_7  [key=3, color=darkorchid, style=bold, label="Parameter variable System.IFormatProvider provider"];
m1_3 -> m1_10  [key=3, color=darkorchid, style=bold, label="Parameter variable System.IFormatProvider provider"];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_61  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<TSource>"];
m1_59 -> m1_62  [key=1, style=dashed, color=darkseagreen4, label="System.Func<TSource, string>"];
m1_59 -> m1_63  [key=1, style=dashed, color=darkseagreen4, label="System.Func<TSource, string>"];
m1_59 -> m1_64  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<TSource>"];
m1_59 -> m1_74  [key=1, style=dashed, color=darkseagreen4, label="System.Func<TSource, string>"];
m1_59 -> m1_67  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<TSource>"];
m1_59 -> m1_79  [key=1, style=dashed, color=darkseagreen4, label="System.Func<TSource, string>"];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_62  [key=0, style=solid];
m1_61 -> m1_69  [key=0, style=solid];
m1_61 -> n17  [key=2, style=dotted];
m1_61 -> m1_17  [key=2, style=dotted];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_64  [key=0, style=solid];
m1_63 -> m1_69  [key=0, style=solid];
m1_63 -> n17  [key=2, style=dotted];
m1_63 -> m1_17  [key=2, style=dotted];
m1_64 -> m1_65  [key=0, style=solid];
m1_64 -> m1_70  [key=2, style=dotted];
m1_64 -> m1_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_64 -> m1_66  [key=1, style=dashed, color=darkseagreen4, label=caseInsensitiveResults];
m1_67 -> m1_68  [key=0, style=solid];
m1_67 -> m1_70  [key=2, style=dotted];
m1_67 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_67  [key=0, style=solid];
m1_65 -> m1_71  [key=2, style=dotted];
m1_66 -> m1_69  [key=0, style=solid];
m1_66 -> m1_72  [key=2, style=dotted];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_72  [key=2, style=dotted];
m1_69 -> m1_59  [key=0, style=bold, color=blue];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_20 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_20 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_20 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_20 -> m1_24  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsWhiteSpace"];
m1_20 -> m1_30  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsWhiteSpace"];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_23  [key=0, style=solid];
m1_22 -> m1_31  [key=0, style=solid];
m1_22 -> n17  [key=2, style=dotted];
m1_22 -> m1_17  [key=2, style=dotted];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_25  [key=0, style=solid];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_30  [key=0, style=solid];
m1_26 -> m1_26  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_29  [key=0, style=solid];
m1_27 -> m1_33  [key=2, style=dotted];
m1_24 -> m1_31  [key=0, style=solid];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_25 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_29 -> m1_26  [key=0, style=solid];
m1_29 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_30 -> m1_31  [key=0, style=solid];
m1_28 -> m1_31  [key=0, style=solid];
m1_31 -> m1_20  [key=0, style=bold, color=blue];
m1_107 -> m1_108  [key=0, style=solid];
m1_108 -> m1_109  [key=0, style=solid];
m1_109 -> m1_107  [key=0, style=bold, color=blue];
m1_103 -> m1_104  [key=0, style=solid];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_106  [key=2, style=dotted];
m1_105 -> m1_103  [key=0, style=bold, color=blue];
m1_99 -> m1_100  [key=0, style=solid];
m1_100 -> m1_101  [key=0, style=solid];
m1_100 -> m1_102  [key=2, style=dotted];
m1_101 -> m1_99  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_3  [key=3, color=darkorchid, style=bold, label="method methodReturn string FormatWith"];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_40  [key=3, color=darkorchid, style=bold, label="method methodReturn System.IO.StringWriter CreateStringWriter"];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_43  [key=2, style=dotted];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_44  [key=2, style=dotted];
m1_41 -> m1_42  [key=0, style=solid];
m1_42 -> m1_38  [key=0, style=bold, color=blue];
m1_34 -> m1_35  [key=0, style=solid];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_37  [key=2, style=dotted];
m1_36 -> m1_34  [key=0, style=bold, color=blue];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_3  [key=3, color=darkorchid, style=bold, label="method methodReturn string FormatWith"];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_3  [key=2, style=dotted];
m1_6 -> m1_4  [key=0, style=bold, color=blue];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_48  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_45 -> m1_47  [key=3, color=darkorchid, style=bold, label="method methodReturn int? GetLength"];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_48  [key=0, style=solid];
m1_48 -> m1_49  [key=0, style=solid];
m1_47 -> m1_49  [key=0, style=solid];
m1_49 -> m1_45  [key=0, style=bold, color=blue];
m1_81 -> m1_82  [key=0, style=solid, color=red];
m1_81 -> m1_83  [key=1, style=dashed, color=red, label=string];
m1_81 -> m1_84  [key=1, style=dashed, color=red, label=string];
m1_81 -> m1_85  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_81 -> m1_86  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_81 -> m1_81  [key=3, color=darkorchid, style=bold, label="method methodReturn string ToCamelCase"];
m1_82 -> m1_83  [key=0, style=solid, color=red];
m1_82 -> m1_84  [key=0, style=solid, color=red];
m1_82 -> m1_37  [key=2, style=dotted, color=red];
m1_83 -> m1_94  [key=0, style=solid, color=red];
m1_84 -> m1_85  [key=0, style=solid, color=red];
m1_84 -> m1_86  [key=0, style=solid, color=red];
m1_84 -> m1_95  [key=2, style=dotted, color=red];
m1_85 -> m1_94  [key=0, style=solid];
m1_86 -> m1_87  [key=0, style=solid];
m1_86 -> m1_96  [key=2, style=dotted];
m1_86 -> m1_88  [key=1, style=dashed, color=darkseagreen4, label=chars];
m1_86 -> m1_89  [key=1, style=dashed, color=darkseagreen4, label=chars];
m1_86 -> m1_90  [key=1, style=dashed, color=darkseagreen4, label=chars];
m1_86 -> m1_91  [key=1, style=dashed, color=darkseagreen4, label=chars];
m1_86 -> m1_93  [key=1, style=dashed, color=darkseagreen4, label=chars];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_89  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_87 -> m1_90  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_87 -> m1_91  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_87 -> m1_92  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_87 -> m1_26  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_93  [key=0, style=solid];
m1_89 -> m1_90  [key=0, style=solid];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_93  [key=0, style=solid];
m1_90 -> m1_95  [key=2, style=dotted];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_97  [key=2, style=dotted];
m1_93 -> m1_94  [key=0, style=solid];
m1_93 -> m1_98  [key=2, style=dotted];
m1_92 -> m1_88  [key=0, style=solid];
m1_92 -> m1_92  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_94 -> m1_81  [key=0, style=bold, color=blue];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_3  [key=3, color=darkorchid, style=bold, label="method methodReturn string FormatWith"];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_3  [key=2, style=dotted];
m1_9 -> m1_7  [key=0, style=bold, color=blue];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_17  [key=2, style=dotted];
m1_14 -> m1_18  [key=2, style=dotted];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_19  [key=2, style=dotted];
m1_16 -> m1_13  [key=0, style=bold, color=blue];
m1_110 -> m1_111  [key=0, style=solid];
m1_111 -> m1_112  [key=0, style=solid];
m1_112 -> m1_110  [key=0, style=bold, color=blue];
m1_78 -> m1_79  [key=0, style=solid];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_76  [key=2, style=dotted];
m1_74 -> m1_77  [key=2, style=dotted];
m1_79 -> m1_80  [key=0, style=solid];
m1_79 -> m1_76  [key=2, style=dotted];
m1_79 -> m1_77  [key=2, style=dotted];
m1_73 -> m1_74  [key=0, style=solid];
m1_75 -> m1_73  [key=0, style=bold, color=blue];
m1_80 -> m1_78  [key=0, style=bold, color=blue];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_52  [key=1, style=dashed, color=darkseagreen4, label="char[]"];
m1_50 -> m1_53  [key=1, style=dashed, color=darkseagreen4, label=char];
m1_50 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label=char];
m1_50 -> m1_55  [key=1, style=dashed, color=darkseagreen4, label=char];
m1_50 -> m1_56  [key=1, style=dashed, color=darkseagreen4, label=char];
m1_51 -> m1_52  [key=0, style=solid];
m1_52 -> m1_53  [key=0, style=solid];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_58  [key=2, style=dotted];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_58  [key=2, style=dotted];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_58  [key=2, style=dotted];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_58  [key=2, style=dotted];
m1_57 -> m1_50  [key=0, style=bold, color=blue];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_3  [key=3, color=darkorchid, style=bold, label="method methodReturn string FormatWith"];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_3  [key=2, style=dotted];
m1_12 -> m1_10  [key=0, style=bold, color=blue];
m1_113 -> m1_74  [key=1, style=dashed, color=darkseagreen4, label="System.Func<TSource, string>"];
m1_113 -> m1_79  [key=1, style=dashed, color=darkseagreen4, label="System.Func<TSource, string>"];
m1_114 -> m1_74  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_114 -> m1_79  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_1 -> n328  [key=0, style=bold, color=blue];
m2_1 -> m2_15  [key=2, style=dotted];
m2_1 -> m2_16  [key=2, style=dotted];
m2_1 -> m2_2  [key=0, style=solid];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_15  [key=2, style=dotted];
m2_2 -> m2_16  [key=2, style=dotted];
m2_3 -> m2_2  [key=0, style=bold, color=blue];
m2_3 -> m2_15  [key=2, style=dotted];
m2_3 -> m2_16  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_0 -> m2_1  [key=0, style=solid];
m2_12 -> m2_13  [key=0, style=solid, color=green];
m2_12 -> m2_15  [key=2, style=dotted, color=green];
m2_12 -> m2_16  [key=2, style=dotted, color=green];
m2_11 -> m2_12  [key=0, style=solid, color=green];
m2_11 -> m2_15  [key=2, style=dotted];
m2_11 -> m2_16  [key=2, style=dotted];
m2_13 -> m2_14  [key=0, style=solid, color=green];
m2_13 -> m2_15  [key=2, style=dotted, color=green];
m2_13 -> m2_16  [key=2, style=dotted, color=green];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_15  [key=2, style=dotted];
m2_10 -> m2_16  [key=2, style=dotted];
m2_4 -> m2_15  [key=2, style=dotted];
m2_4 -> m2_16  [key=2, style=dotted];
m2_4 -> m2_5  [key=0, style=solid];
m2_5 -> m2_15  [key=2, style=dotted];
m2_5 -> m2_16  [key=2, style=dotted];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_4  [key=0, style=bold, color=blue];
m2_6 -> m2_15  [key=2, style=dotted];
m2_6 -> m2_16  [key=2, style=dotted];
m2_6 -> m2_7  [key=0, style=solid];
m2_7 -> m2_15  [key=2, style=dotted];
m2_7 -> m2_16  [key=2, style=dotted];
m2_7 -> m2_8  [key=0, style=solid];
m2_8 -> m2_15  [key=2, style=dotted];
m2_8 -> m2_16  [key=2, style=dotted];
m2_8 -> m2_9  [key=0, style=solid];
m2_9 -> m2_15  [key=2, style=dotted];
m2_9 -> m2_16  [key=2, style=dotted];
m2_9 -> m2_10  [key=0, style=solid];
m2_14 -> m2_0  [key=0, style=bold, color=blue];
}
