digraph  {
n529 [label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", span=""];
n0 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.JsonSerializerInternalWriter(Newtonsoft.Json.JsonSerializer)", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.JsonSerializerInternalWriter(Newtonsoft.Json.JsonSerializer)", span="54-54"];
n1 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.JsonSerializerInternalWriter(Newtonsoft.Json.JsonSerializer)", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.JsonSerializerInternalWriter(Newtonsoft.Json.JsonSerializer)", span="54-54"];
n2 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", span="59-59"];
n3 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", label="jsonWriter == null", span="61-61"];
n4 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", label="throw new ArgumentNullException(nameof(jsonWriter));", span="63-63"];
n5 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", label="_rootType = objectType", span="66-66"];
n7 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", label="JsonContract contract = GetContractSafe(value)", span="69-69"];
n8 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", label="ShouldWriteReference(value, null, contract, null, null)", span="73-73"];
n9 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", label="WriteReference(jsonWriter, value)", span="75-75"];
n10 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", label="SerializeValue(jsonWriter, value, contract, null, null, null)", span="79-79"];
n12 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", label="IsErrorHandled(null, contract, null, null, jsonWriter.Path, ex)", span="84-84"];
n13 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", label="HandleError(jsonWriter, 0)", span="86-86"];
n6 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", label="_rootLevel = _serializeStack.Count + 1", span="67-67"];
n19 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", span="115-115"];
n20 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="239-239"];
n11 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", label=Exception, span="82-82"];
n16 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", span="59-59"];
n22 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="147-147"];
n21 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", span="350-350"];
n14 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", color=red, community=0, label="0: ClearErrorContext()", span="93-93"];
n23 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", span="108-108"];
n15 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", label="throw;", span="94-94"];
n25 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", span="98-98"];
n17 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n18 [cluster="Unk.nameof", label="Entry Unk.nameof", span=""];
n24 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", span="1191-1191"];
n26 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", span="105-105"];
n27 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", label="InternalSerializer == null", span="107-107"];
n28 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", label="InternalSerializer = new JsonSerializerProxy(this)", span="109-109"];
n29 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", label="return InternalSerializer;", span="112-112"];
n31 [cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalWriter)", label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalWriter)", span="247-247"];
n30 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", span="105-105"];
n32 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", label="value == null", span="117-117"];
n34 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", label="return Serializer._contractResolver.ResolveContract(value.GetType());", span="122-122"];
n33 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", label="return null;", span="119-119"];
n35 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", span="115-115"];
n36 [cluster="object.GetType()", label="Entry object.GetType()", span="0-0"];
n37 [cluster="Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", label="Entry Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", span="43-43"];
n38 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="125-125"];
n39 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="contract.TypeCode == PrimitiveTypeCode.Bytes", span="127-127"];
n40 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="bool includeTypeDetails = ShouldWriteType(TypeNameHandling.Objects, contract, member, containerContract, containerProperty)", span="130-130"];
n42 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="writer.WriteStartObject()", span="133-133"];
n43 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="WriteTypeProperty(writer, contract.CreatedType)", span="134-134"];
n44 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="writer.WritePropertyName(JsonTypeReflector.ValuePropertyName, false)", span="135-135"];
n45 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="JsonWriter.WriteValue(writer, contract.TypeCode, value)", span="137-137"];
n46 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="writer.WriteEndObject()", span="139-139"];
n48 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="JsonWriter.WriteValue(writer, contract.TypeCode, value)", span="144-144"];
n41 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label=includeTypeDetails, span="131-131"];
n50 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="999-999"];
n51 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="418-418"];
n52 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", span="616-616"];
n53 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string, bool)", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string, bool)", span="478-478"];
n54 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", span="1466-1466"];
n47 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="return;", span="140-140"];
n55 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="426-426"];
n49 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="125-125"];
n56 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="value == null", span="149-149"];
n57 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="writer.WriteNull()", span="151-151"];
n59 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="JsonConverter converter =\r\n                member?.Converter ??\r\n                containerProperty?.ItemConverter ??\r\n                containerContract?.ItemConverter ??\r\n                valueContract.Converter ??\r\n                Serializer.GetMatchingConverter(valueContract.UnderlyingType) ??\r\n                valueContract.InternalConverter", span="155-161"];
n61 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="SerializeConvertable(writer, converter, value, valueContract, containerContract, containerProperty)", span="165-165"];
n63 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="valueContract.ContractType", span="169-169"];
n65 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="SerializeObject(writer, value, (JsonObjectContract)valueContract, member, containerContract, containerProperty)", span="172-172"];
n67 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="JsonArrayContract arrayContract = (JsonArrayContract)valueContract", span="175-175"];
n69 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="SerializeList(writer, (IEnumerable)value, arrayContract, member, containerContract, containerProperty)", span="178-178"];
n70 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="SerializeMultidimensionalArray(writer, (Array)value, arrayContract, member, containerContract, containerProperty)", span="182-182"];
n72 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="SerializePrimitive(writer, value, (JsonPrimitiveContract)valueContract, member, containerContract, containerProperty)", span="186-186"];
n74 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="SerializeString(writer, value, (JsonStringContract)valueContract)", span="189-189"];
n76 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="JsonDictionaryContract dictionaryContract = (JsonDictionaryContract)valueContract", span="192-192"];
n77 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="SerializeDictionary(writer, (value is IDictionary) ? (IDictionary)value : dictionaryContract.CreateWrapper(value), dictionaryContract, member, containerContract, containerProperty)", span="193-193"];
n79 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="((JToken)value).WriteTo(writer, Serializer.Converters.ToArray())", span="206-206"];
n58 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="return;", span="152-152"];
n81 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="891-891"];
n60 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="converter != null && converter.CanWrite", span="163-163"];
n82 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", span="1154-1154"];
n62 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="return;", span="166-166"];
n83 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="644-644"];
n64 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="JsonContractType.Object", span="171-171"];
n66 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="JsonContractType.Array", span="174-174"];
n71 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="JsonContractType.Primitive", span="185-185"];
n73 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="JsonContractType.String", span="188-188"];
n75 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="JsonContractType.Dictionary", span="191-191"];
n78 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="JsonContractType.Linq", span="205-205"];
n68 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="!arrayContract.IsMultidimensionalArray", span="176-176"];
n80 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="147-147"];
n85 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="675-675"];
n88 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", span="219-219"];
n89 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="1043-1043"];
n86 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="739-739"];
n87 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", span="416-416"];
n84 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="447-447"];
n90 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="829-829"];
n91 [cluster="Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", label="Entry Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="414-414"];
n92 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="211-211"];
n93 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="bool? isReference = null", span="213-213"];
n94 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="property != null", span="216-216"];
n95 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="isReference = property.IsReference", span="218-218"];
n96 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="isReference == null && containerProperty != null", span="221-221"];
n97 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="isReference = containerProperty.ItemIsReference", span="223-223"];
n98 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="isReference == null && collectionContract != null", span="226-226"];
n99 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="isReference = collectionContract.ItemIsReference", span="228-228"];
n101 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="isReference = contract.IsReference", span="233-233"];
n100 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="isReference == null", span="231-231"];
n102 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="return isReference;", span="236-236"];
n103 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="211-211"];
n104 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="value == null", span="241-241"];
n106 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="valueContract.ContractType == JsonContractType.Primitive || valueContract.ContractType == JsonContractType.String", span="245-245"];
n108 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="bool? isReference = ResolveIsReference(valueContract, property, collectionContract, containerProperty)", span="250-250"];
n110 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="valueContract.ContractType == JsonContractType.Array", span="254-254"];
n115 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="return Serializer.GetReferenceResolver().IsReferenced(this, value);", span="269-269"];
n105 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="return false;", span="243-243"];
n107 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="return false;", span="247-247"];
n109 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="isReference == null", span="252-252"];
n113 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="!isReference.GetValueOrDefault()", span="264-264"];
n111 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="isReference = HasFlag(Serializer._preserveReferencesHandling, PreserveReferencesHandling.Arrays)", span="256-256"];
n112 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="isReference = HasFlag(Serializer._preserveReferencesHandling, PreserveReferencesHandling.Objects)", span="260-260"];
n117 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", span="634-634"];
n114 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="return false;", span="266-266"];
n118 [cluster="System.Nullable<T>.GetValueOrDefault()", label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0"];
n116 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="239-239"];
n119 [cluster="Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", label="Entry Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", span="1144-1144"];
n120 [cluster="Newtonsoft.Json.Serialization.IReferenceResolver.IsReferenced(object, object)", label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.IsReferenced(object, object)", span="56-56"];
n121 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty(object, Newtonsoft.Json.Serialization.JsonProperty)", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty(object, Newtonsoft.Json.Serialization.JsonProperty)", span="272-272"];
n122 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty(object, Newtonsoft.Json.Serialization.JsonProperty)", label="property.NullValueHandling.GetValueOrDefault(Serializer._nullValueHandling) == NullValueHandling.Ignore &&\r\n                memberValue == null", span="274-275"];
n124 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty(object, Newtonsoft.Json.Serialization.JsonProperty)", label="HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Ignore)\r\n                && MiscellaneousUtils.ValueEquals(memberValue, property.GetResolvedDefaultValue())", span="280-281"];
n123 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty(object, Newtonsoft.Json.Serialization.JsonProperty)", label="return false;", span="277-277"];
n128 [cluster="System.Nullable<T>.GetValueOrDefault(T)", label="Entry System.Nullable<T>.GetValueOrDefault(T)", span="0-0"];
n125 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty(object, Newtonsoft.Json.Serialization.JsonProperty)", label="return false;", span="283-283"];
n126 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty(object, Newtonsoft.Json.Serialization.JsonProperty)", label="return true;", span="286-286"];
n129 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", span="629-629"];
n130 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", label="Entry Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", span="172-172"];
n131 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.ValueEquals(object, object)", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.ValueEquals(object, object)", span="39-39"];
n127 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty(object, Newtonsoft.Json.Serialization.JsonProperty)", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty(object, Newtonsoft.Json.Serialization.JsonProperty)", span="272-272"];
n132 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="289-289"];
n133 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="value == null || contract.ContractType == JsonContractType.Primitive || contract.ContractType == JsonContractType.String", span="291-291"];
n136 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="property != null", span="298-298"];
n137 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="referenceLoopHandling = property.ReferenceLoopHandling", span="300-300"];
n138 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="referenceLoopHandling == null && containerProperty != null", span="303-303"];
n139 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="referenceLoopHandling = containerProperty.ItemReferenceLoopHandling", span="305-305"];
n140 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="referenceLoopHandling == null && containerContract != null", span="308-308"];
n141 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="referenceLoopHandling = containerContract.ItemReferenceLoopHandling", span="310-310"];
n142 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="bool exists = (Serializer._equalityComparer != null)\r\n                ? _serializeStack.Contains(value, Serializer._equalityComparer)\r\n                : _serializeStack.Contains(value)", span="313-315"];
n145 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="property != null", span="320-320"];
n146 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="message += '' for property '{0}'''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName)", span="322-322"];
n147 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="message += '' with type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, value.GetType())", span="324-324"];
n150 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="throw JsonSerializationException.Create(null, writer.ContainerPath, message, null);", span="329-329"];
n153 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, message + ''. Skipping serializing self referenced value.''), null)", span="333-333"];
n157 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, message + ''. Serializing self referenced value.''), null)", span="340-340"];
n134 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="return true;", span="293-293"];
n135 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="ReferenceLoopHandling? referenceLoopHandling = null", span="296-296"];
n148 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="referenceLoopHandling.GetValueOrDefault(Serializer._referenceLoopHandling)", span="326-326"];
n143 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label=exists, span="317-317"];
n161 [cluster="System.Collections.Generic.List<T>.Contains<T>(T, System.Collections.IEqualityComparer)", label="Entry System.Collections.Generic.List<T>.Contains<T>(T, System.Collections.IEqualityComparer)", span="229-229"];
n162 [cluster="System.Collections.Generic.List<T>.Contains(T)", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
n144 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="string message = ''Self referencing loop detected''", span="319-319"];
n159 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="return true;", span="347-347"];
n163 [cluster="string.FormatWith(System.IFormatProvider, object)", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
n149 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="ReferenceLoopHandling.Error", span="328-328"];
n151 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="ReferenceLoopHandling.Ignore", span="330-330"];
n155 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="ReferenceLoopHandling.Serialize", span="337-337"];
n152 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="331-331"];
n154 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="return false;", span="336-336"];
n165 [cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", label="Entry Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", span="139-139"];
n166 [cluster="Newtonsoft.Json.Serialization.ITraceWriter.Trace(Newtonsoft.Json.TraceLevel, string, System.Exception)", label="Entry Newtonsoft.Json.Serialization.ITraceWriter.Trace(Newtonsoft.Json.TraceLevel, string, System.Exception)", span="25-25"];
n156 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="338-338"];
n158 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="return true;", span="343-343"];
n160 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="289-289"];
n164 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", span="92-92"];
n167 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", label="string reference = GetReference(writer, value)", span="352-352"];
n169 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(null, writer.Path, ''Writing object reference to Id '{0}' for {1}.''.FormatWith(CultureInfo.InvariantCulture, reference, value.GetType())), null)", span="356-356"];
n170 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", label="writer.WriteStartObject()", span="359-359"];
n171 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", label="writer.WritePropertyName(JsonTypeReflector.RefPropertyName, false)", span="360-360"];
n172 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", label="writer.WriteValue(reference)", span="361-361"];
n173 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", label="writer.WriteEndObject()", span="362-362"];
n168 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="354-354"];
n175 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)", span="365-365"];
n176 [cluster="string.FormatWith(System.IFormatProvider, object, object)", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
n177 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="929-929"];
n174 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", span="350-350"];
n178 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)", label="string reference = Serializer.GetReferenceResolver().GetReference(this, value)", span="369-369"];
n181 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)", label="throw JsonSerializationException.Create(null, writer.ContainerPath, ''Error writing object reference for '{0}'.''.FormatWith(CultureInfo.InvariantCulture, value.GetType()), ex);", span="375-375"];
n179 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)", label="return reference;", span="371-371"];
n183 [cluster="Newtonsoft.Json.Serialization.IReferenceResolver.GetReference(object, object)", label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.GetReference(object, object)", span="46-46"];
n180 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)", label=Exception, span="373-373"];
n182 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)", span="365-365"];
n184 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", span="379-379"];
n185 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", label="type = value as Type", span="405-405"];
n186 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", label="type != null", span="406-406"];
n187 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", label="s = type.AssemblyQualifiedName", span="408-408"];
n189 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", label="s = null", span="412-412"];
n188 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", label="return true;", span="409-409"];
n190 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", label="return false;", span="413-413"];
n191 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", span="379-379"];
n192 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", label="OnSerializing(writer, contract, value)", span="418-418"];
n194 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", label="TryConvertToString(value, contract.UnderlyingType, out s)", span="421-421"];
n195 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", label="writer.WriteValue(s)", span="422-422"];
n196 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", label="OnSerialized(writer, contract, value)", span="424-424"];
n193 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", label="string s", span="420-420"];
n198 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", span="427-427"];
n197 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", span="416-416"];
n199 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", span="437-437"];
n200 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="429-429"];
n201 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(null, writer.Path, ''Started serializing {0}''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="431-431"];
n202 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", label="contract.InvokeOnSerializing(value, Serializer._context)", span="434-434"];
n203 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", span="427-427"];
n204 [cluster="Newtonsoft.Json.Serialization.JsonContract.InvokeOnSerializing(object, System.Runtime.Serialization.StreamingContext)", label="Entry Newtonsoft.Json.Serialization.JsonContract.InvokeOnSerializing(object, System.Runtime.Serialization.StreamingContext)", span="326-326"];
n205 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="439-439"];
n206 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(null, writer.Path, ''Finished serializing {0}''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="441-441"];
n207 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", label="contract.InvokeOnSerialized(value, Serializer._context)", span="444-444"];
n208 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", span="437-437"];
n209 [cluster="Newtonsoft.Json.Serialization.JsonContract.InvokeOnSerialized(object, System.Runtime.Serialization.StreamingContext)", label="Entry Newtonsoft.Json.Serialization.JsonContract.InvokeOnSerialized(object, System.Runtime.Serialization.StreamingContext)", span="337-337"];
n210 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="OnSerializing(writer, contract, value)", span="449-449"];
n211 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="_serializeStack.Add(value)", span="451-451"];
n212 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="WriteObjectStart(writer, value, contract, member, collectionContract, containerProperty)", span="453-453"];
n213 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="int initialDepth = writer.Top", span="455-455"];
n215 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="index < contract.Properties.Count", span="457-457"];
n216 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="JsonProperty property = contract.Properties[index]", span="459-459"];
n219 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="!CalculatePropertyValues(writer, value, contract, member, property, out memberContract, out memberValue)", span="465-465"];
n220 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="property.WritePropertyName(writer)", span="470-470"];
n221 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="SerializeValue(writer, memberValue, memberContract, property, contract, member)", span="471-471"];
n223 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="IsErrorHandled(value, contract, property.PropertyName, null, writer.ContainerPath, ex)", span="475-475"];
n224 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="HandleError(writer, initialDepth)", span="477-477"];
n227 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="IEnumerable<KeyValuePair<object, object>> extensionData = contract.ExtensionDataGetter?.Invoke(value)", span="486-486"];
n233 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="string propertyName = GetPropertyName(writer, e.Key, keyContract, out escape)", span="495-495"];
n234 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="propertyName = (contract.ExtensionDataNameResolver != null)\r\n                        ? contract.ExtensionDataNameResolver(propertyName)\r\n                        : propertyName", span="497-499"];
n235 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="ShouldWriteReference(e.Value, null, valueContract, contract, member)", span="501-501"];
n236 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="writer.WritePropertyName(propertyName)", span="503-503"];
n237 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="WriteReference(writer, e.Value)", span="504-504"];
n238 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="!CheckForCircularReference(writer, e.Value, null, valueContract, contract, member)", span="508-508"];
n239 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="writer.WritePropertyName(propertyName)", span="513-513"];
n240 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="SerializeValue(writer, e.Value, valueContract, null, contract, member)", span="515-515"];
n241 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="writer.WriteEndObject()", span="520-520"];
n243 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="OnSerialized(writer, contract, value)", span="524-524"];
n245 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n246 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="576-576"];
n214 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="int index = 0", span="457-457"];
n226 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="index++", span="457-457"];
n217 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="object memberValue", span="462-462"];
n218 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="JsonContract memberContract", span="463-463"];
n247 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", span="527-527"];
n248 [cluster="Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", label="Entry Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", span="295-295"];
n222 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label=Exception, span="473-473"];
n225 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="throw;", span="481-481"];
n228 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="extensionData != null", span="487-487"];
n249 [cluster="Newtonsoft.Json.Serialization.ExtensionDataGetter.Invoke(object)", label="Entry Newtonsoft.Json.Serialization.ExtensionDataGetter.Invoke(object)", span="75-75"];
n229 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label=extensionData, span="489-489"];
n230 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="JsonContract keyContract = GetContractSafe(e.Key)", span="491-491"];
n231 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="JsonContract valueContract = GetContractSafe(e.Value)", span="492-492"];
n232 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="bool escape", span="494-494"];
n250 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", span="1127-1127"];
n251 [cluster="Newtonsoft.Json.Serialization.Func<T, TResult>.Invoke(T)", label="Entry Newtonsoft.Json.Serialization.Func<T, TResult>.Invoke(T)", span="3040-3040"];
n252 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="468-468"];
n242 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="522-522"];
n253 [cluster="System.Collections.Generic.List<T>.RemoveAt(int)", label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0"];
n244 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="447-447"];
n254 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", label="!property.Ignored && property.Readable && ShouldSerialize(writer, property, value) && IsSpecified(writer, property, value)", span="529-529"];
n255 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", label="property.PropertyContract == null", span="531-531"];
n256 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", label="property.PropertyContract = Serializer._contractResolver.ResolveContract(property.PropertyType)", span="533-533"];
n257 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", label="memberValue = property.ValueProvider.GetValue(value)", span="536-536"];
n258 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", label="memberContract = (property.PropertyContract.IsSealed) ? property.PropertyContract : GetContractSafe(memberValue)", span="537-537"];
n259 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", label="ShouldWriteProperty(memberValue, property)", span="539-539"];
n260 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", label="ShouldWriteReference(memberValue, property, memberContract, contract, member)", span="541-541"];
n261 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", label="property.WritePropertyName(writer)", span="543-543"];
n262 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", label="WriteReference(writer, memberValue)", span="544-544"];
n264 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", label="!CheckForCircularReference(writer, memberValue, property, memberContract, contract, member)", span="548-548"];
n267 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", label="JsonObjectContract objectContract = contract as JsonObjectContract", span="555-555"];
n268 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", label="Required resolvedRequired = property._required ?? objectContract?.ItemRequired ?? Required.Default", span="556-556"];
n270 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", label="throw JsonSerializationException.Create(null, writer.ContainerPath, ''Cannot write a null value for property '{0}'. Property requires a value.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName), null);", span="559-559"];
n272 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", label="throw JsonSerializationException.Create(null, writer.ContainerPath, ''Cannot write a null value for property '{0}'. Property requires a non-null value.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName), null);", span="563-563"];
n274 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", label="memberContract = null", span="571-571"];
n278 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", span="1206-1206"];
n279 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", span="1223-1223"];
n280 [cluster="Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", label="Entry Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", span="44-44"];
n266 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", label="memberValue == null", span="553-553"];
n263 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", label="return false;", span="545-545"];
n265 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", label="return false;", span="550-550"];
n273 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", label="return true;", span="567-567"];
n269 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", label="resolvedRequired == Required.Always", span="557-557"];
n271 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", label="resolvedRequired == Required.DisallowNull", span="561-561"];
n275 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", label="memberValue = null", span="572-572"];
n277 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", span="527-527"];
n276 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", label="return false;", span="573-573"];
n281 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="writer.WriteStartObject()", span="578-578"];
n282 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="bool isReference = ResolveIsReference(contract, member, collectionContract, containerProperty) ?? HasFlag(Serializer._preserveReferencesHandling, PreserveReferencesHandling.Objects)", span="580-580"];
n283 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="isReference && (member == null || member.Writable || HasCreatorParameter(collectionContract, member))", span="582-582"];
n284 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="WriteReferenceIdProperty(writer, contract.UnderlyingType, value)", span="584-584"];
n285 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="ShouldWriteType(TypeNameHandling.Objects, contract, member, collectionContract, containerProperty)", span="586-586"];
n286 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="WriteTypeProperty(writer, contract.UnderlyingType)", span="588-588"];
n288 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasCreatorParameter(Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasCreatorParameter(Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="592-592"];
n289 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", span="603-603"];
n287 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="576-576"];
n290 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasCreatorParameter(Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="JsonObjectContract objectContract = contract as JsonObjectContract", span="594-594"];
n293 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasCreatorParameter(Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="return objectContract.CreatorParameters.Contains(property.PropertyName);", span="600-600"];
n291 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasCreatorParameter(Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="objectContract == null", span="595-595"];
n292 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasCreatorParameter(Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="return false;", span="597-597"];
n294 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasCreatorParameter(Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasCreatorParameter(Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="592-592"];
n295 [cluster="System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Contains(TKey)", label="Entry System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Contains(TKey)", span="0-0"];
n296 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", label="string reference = GetReference(writer, value)", span="605-605"];
n298 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, ''Writing object reference Id '{0}' for {1}.''.FormatWith(CultureInfo.InvariantCulture, reference, type)), null)", span="609-609"];
n299 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", label="writer.WritePropertyName(JsonTypeReflector.IdPropertyName, false)", span="612-612"];
n300 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", label="writer.WriteValue(reference)", span="613-613"];
n297 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="607-607"];
n301 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", span="603-603"];
n302 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", label="string typeName = ReflectionUtils.GetTypeName(type, Serializer._typeNameAssemblyFormatHandling, Serializer._serializationBinder)", span="618-618"];
n304 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, ''Writing type name '{0}' for {1}.''.FormatWith(CultureInfo.InvariantCulture, typeName, type)), null)", span="622-622"];
n305 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", label="writer.WritePropertyName(JsonTypeReflector.TypePropertyName, false)", span="625-625"];
n306 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", label="writer.WriteValue(typeName)", span="626-626"];
n303 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="620-620"];
n308 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)", span="147-147"];
n307 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", span="616-616"];
n309 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", label="return ((value & flag) == flag);", span="631-631"];
n310 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", span="629-629"];
n311 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", label="return ((value & flag) == flag);", span="636-636"];
n312 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", span="634-634"];
n313 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", span="639-639"];
n314 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", label="return ((value & flag) == flag);", span="641-641"];
n315 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", span="639-639"];
n316 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="ShouldWriteReference(value, null, contract, collectionContract, containerProperty)", span="646-646"];
n317 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="WriteReference(writer, value)", span="648-648"];
n318 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="!CheckForCircularReference(writer, value, null, contract, collectionContract, containerProperty)", span="652-652"];
n320 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="_serializeStack.Add(value)", span="657-657"];
n322 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(null, writer.Path, ''Started serializing {0} with converter {1}.''.FormatWith(CultureInfo.InvariantCulture, value.GetType(), converter.GetType())), null)", span="661-661"];
n323 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="converter.WriteJson(writer, value, GetInternalSerializer())", span="664-664"];
n325 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(null, writer.Path, ''Finished serializing {0} with converter {1}.''.FormatWith(CultureInfo.InvariantCulture, value.GetType(), converter.GetType())), null)", span="668-668"];
n319 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="return;", span="654-654"];
n321 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="659-659"];
n324 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="666-666"];
n328 [cluster="Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", label="Entry Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="44-44"];
n326 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="671-671"];
n327 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="644-644"];
n329 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="IWrappedCollection wrappedCollection = values as IWrappedCollection", span="677-677"];
n330 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="object underlyingList = wrappedCollection != null ? wrappedCollection.UnderlyingCollection : values", span="678-678"];
n331 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="OnSerializing(writer, contract, underlyingList)", span="680-680"];
n333 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="bool hasWrittenMetadataObject = WriteStartArray(writer, underlyingList, contract, member, collectionContract, containerProperty)", span="684-684"];
n334 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="writer.WriteStartArray()", span="686-686"];
n335 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="int initialDepth = writer.Top", span="688-688"];
n337 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label=values, span="692-692"];
n338 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="JsonContract valueContract = contract.FinalItemContract ?? GetContractSafe(value)", span="696-696"];
n339 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="ShouldWriteReference(value, null, valueContract, contract, member)", span="698-698"];
n340 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="WriteReference(writer, value)", span="700-700"];
n341 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="CheckForCircularReference(writer, value, null, valueContract, contract, member)", span="704-704"];
n342 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="SerializeValue(writer, value, valueContract, null, contract, member)", span="706-706"];
n344 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="IsErrorHandled(underlyingList, contract, index, null, writer.ContainerPath, ex)", span="712-712"];
n345 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="HandleError(writer, initialDepth)", span="714-714"];
n347 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="writer.WriteEndArray()", span="727-727"];
n349 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="writer.WriteEndObject()", span="731-731"];
n351 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="OnSerialized(writer, contract, underlyingList)", span="736-736"];
n332 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="_serializeStack.Add(underlyingList)", span="682-682"];
n353 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="816-816"];
n348 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label=hasWrittenMetadataObject, span="729-729"];
n354 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="434-434"];
n336 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="int index = 0", span="690-690"];
n343 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label=Exception, span="710-710"];
n346 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="throw;", span="718-718"];
n355 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="442-442"];
n350 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="734-734"];
n352 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="675-675"];
n356 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="OnSerializing(writer, contract, values)", span="741-741"];
n357 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="_serializeStack.Add(values)", span="743-743"];
n358 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="bool hasWrittenMetadataObject = WriteStartArray(writer, values, contract, member, collectionContract, containerProperty)", span="745-745"];
n359 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="SerializeMultidimensionalArray(writer, values, contract, member, writer.Top, CollectionUtils.ArrayEmpty<int>())", span="747-747"];
n361 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="writer.WriteEndObject()", span="751-751"];
n363 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="OnSerialized(writer, contract, values)", span="756-756"];
n360 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label=hasWrittenMetadataObject, span="749-749"];
n365 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ArrayEmpty<T>()", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ArrayEmpty<T>()", span="362-362"];
n366 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", span="759-759"];
n362 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="754-754"];
n364 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="739-739"];
n367 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", label="int dimension = indices.Length", span="761-761"];
n371 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", label="newIndices[i] = indices[i]", span="765-765"];
n373 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", label="writer.WriteStartArray()", span="768-768"];
n374 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", label="int i = values.GetLowerBound(dimension)", span="770-770"];
n375 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", label="i <= values.GetUpperBound(dimension)", span="770-770"];
n377 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", label="bool isTopLevel = (newIndices.Length == values.Rank)", span="773-773"];
n379 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", label="object value = values.GetValue(newIndices)", span="777-777"];
n380 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", label="JsonContract valueContract = contract.FinalItemContract ?? GetContractSafe(value)", span="781-781"];
n381 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", label="ShouldWriteReference(value, null, valueContract, contract, member)", span="783-783"];
n382 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", label="WriteReference(writer, value)", span="785-785"];
n383 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", label="CheckForCircularReference(writer, value, null, valueContract, contract, member)", span="789-789"];
n384 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", label="SerializeValue(writer, value, valueContract, null, contract, member)", span="791-791"];
n386 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", label="IsErrorHandled(values, contract, i, null, writer.ContainerPath, ex)", span="797-797"];
n387 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", label="HandleError(writer, initialDepth + 1)", span="799-799"];
n389 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", label="SerializeMultidimensionalArray(writer, values, contract, member, initialDepth + 1, newIndices)", span="809-809"];
n391 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", label="writer.WriteEndArray()", span="813-813"];
n368 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", label="int[] newIndices = new int[dimension + 1]", span="762-762"];
n370 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", label="i < dimension", span="763-763"];
n376 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", label="newIndices[dimension] = i", span="772-772"];
n369 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", label="int i = 0", span="763-763"];
n372 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", label="i++", span="763-763"];
n393 [cluster="System.Array.GetLowerBound(int)", label="Entry System.Array.GetLowerBound(int)", span="0-0"];
n390 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", label="i++", span="770-770"];
n394 [cluster="System.Array.GetUpperBound(int)", label="Entry System.Array.GetUpperBound(int)", span="0-0"];
n378 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", label=isTopLevel, span="775-775"];
n395 [cluster="System.Array.GetValue(params int[])", label="Entry System.Array.GetValue(params int[])", span="0-0"];
n385 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", label=Exception, span="795-795"];
n388 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", label="throw;", span="803-803"];
n392 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", span="759-759"];
n396 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="bool isReference = ResolveIsReference(contract, member, containerContract, containerProperty) ?? HasFlag(Serializer._preserveReferencesHandling, PreserveReferencesHandling.Arrays)", span="818-818"];
n397 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="isReference = (isReference && (member == null || member.Writable || HasCreatorParameter(containerContract, member)))", span="820-820"];
n398 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="bool includeTypeDetails = ShouldWriteType(TypeNameHandling.Arrays, contract, member, containerContract, containerProperty)", span="822-822"];
n401 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="writer.WriteStartObject()", span="827-827"];
n403 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="WriteReferenceIdProperty(writer, contract.UnderlyingType, values)", span="831-831"];
n405 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="WriteTypeProperty(writer, values.GetType())", span="835-835"];
n406 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="writer.WritePropertyName(JsonTypeReflector.ArrayValuesPropertyName, false)", span="837-837"];
n407 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="contract.ItemContract == null", span="840-840"];
n408 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="contract.ItemContract = Serializer._contractResolver.ResolveContract(contract.CollectionItemType ?? typeof(object))", span="842-842"];
n399 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="bool writeMetadataObject = isReference || includeTypeDetails", span="823-823"];
n402 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label=isReference, span="829-829"];
n404 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label=includeTypeDetails, span="833-833"];
n400 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label=writeMetadataObject, span="825-825"];
n409 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="return writeMetadataObject;", span="845-845"];
n410 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="816-816"];
n411 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", span="983-983"];
n412 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", label="Serializer._nullValueHandling == NullValueHandling.Ignore && memberValue == null", span="985-985"];
n414 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", label="HasFlag(Serializer._defaultValueHandling, DefaultValueHandling.Ignore) &&\r\n                (memberValue == null || MiscellaneousUtils.ValueEquals(memberValue, ReflectionUtils.GetDefaultValue(memberValue.GetType())))", span="990-991"];
n413 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", label="return false;", span="987-987"];
n415 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", label="return false;", span="993-993"];
n416 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", label="return true;", span="996-996"];
n418 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", span="1078-1078"];
n417 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", span="983-983"];
n419 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="TypeNameHandling resolvedTypeNameHandling =\r\n                member?.TypeNameHandling\r\n                ?? containerProperty?.ItemTypeNameHandling\r\n                ?? containerContract?.ItemTypeNameHandling\r\n                ?? Serializer._typeNameHandling", span="1001-1005"];
n420 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="HasFlag(resolvedTypeNameHandling, typeNameHandlingFlag)", span="1007-1007"];
n423 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="member != null", span="1015-1015"];
n424 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="contract.NonNullableUnderlyingType != member.PropertyContract.CreatedType", span="1017-1017"];
n426 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="containerContract != null", span="1022-1022"];
n427 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="containerContract.ItemContract == null || contract.NonNullableUnderlyingType != containerContract.ItemContract.CreatedType", span="1024-1024"];
n431 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="contract.NonNullableUnderlyingType != rootContract.CreatedType", span="1033-1033"];
n422 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="HasFlag(resolvedTypeNameHandling, TypeNameHandling.Auto)", span="1013-1013"];
n421 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="return true;", span="1009-1009"];
n433 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="return false;", span="1040-1040"];
n425 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="return true;", span="1019-1019"];
n429 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="_rootType != null && _serializeStack.Count == _rootLevel", span="1029-1029"];
n428 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="return true;", span="1026-1026"];
n430 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="JsonContract rootContract = Serializer._contractResolver.ResolveContract(_rootType)", span="1031-1031"];
n432 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="return true;", span="1035-1035"];
n434 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="999-999"];
n435 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="IWrappedDictionary wrappedDictionary = values as IWrappedDictionary", span="1045-1045"];
n436 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="object underlyingDictionary = wrappedDictionary != null ? wrappedDictionary.UnderlyingDictionary : values", span="1046-1046"];
n437 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="OnSerializing(writer, contract, underlyingDictionary)", span="1048-1048"];
n439 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="WriteObjectStart(writer, underlyingDictionary, contract, member, collectionContract, containerProperty)", span="1051-1051"];
n440 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="contract.ItemContract == null", span="1053-1053"];
n441 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="contract.ItemContract = Serializer._contractResolver.ResolveContract(contract.DictionaryValueType ?? typeof(object))", span="1055-1055"];
n442 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="contract.KeyContract == null", span="1058-1058"];
n443 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="contract.KeyContract = Serializer._contractResolver.ResolveContract(contract.DictionaryKeyType ?? typeof(object))", span="1060-1060"];
n444 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="int initialDepth = writer.Top", span="1063-1063"];
n445 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="IDictionaryEnumerator e = values.GetEnumerator()", span="1066-1066"];
n449 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="string propertyName = GetPropertyName(writer, entry.Key, contract.KeyContract, out escape)", span="1074-1074"];
n450 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="propertyName = (contract.DictionaryKeyResolver != null)\r\n                        ? contract.DictionaryKeyResolver(propertyName)\r\n                        : propertyName", span="1076-1078"];
n452 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="JsonContract valueContract = contract.FinalItemContract ?? GetContractSafe(value)", span="1083-1083"];
n453 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="ShouldWriteReference(value, null, valueContract, contract, member)", span="1085-1085"];
n454 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="writer.WritePropertyName(propertyName, escape)", span="1087-1087"];
n455 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="WriteReference(writer, value)", span="1088-1088"];
n456 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="!CheckForCircularReference(writer, value, null, valueContract, contract, member)", span="1092-1092"];
n457 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="writer.WritePropertyName(propertyName, escape)", span="1097-1097"];
n458 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="SerializeValue(writer, value, valueContract, null, contract, member)", span="1099-1099"];
n460 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="IsErrorHandled(underlyingDictionary, contract, propertyName, null, writer.ContainerPath, ex)", span="1104-1104"];
n461 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="HandleError(writer, initialDepth)", span="1106-1106"];
n463 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="writer.WriteEndObject()", span="1120-1120"];
n465 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="OnSerialized(writer, contract, underlyingDictionary)", span="1124-1124"];
n438 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="_serializeStack.Add(underlyingDictionary)", span="1049-1049"];
n446 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="e.MoveNext()", span="1069-1069"];
n467 [cluster="System.Collections.IDictionary.GetEnumerator()", label="Entry System.Collections.IDictionary.GetEnumerator()", span="0-0"];
n447 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="DictionaryEntry entry = e.Entry", span="1071-1071"];
n468 [cluster="System.Collections.IEnumerator.MoveNext()", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
n448 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="bool escape", span="1073-1073"];
n451 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="object value = entry.Value", span="1082-1082"];
n459 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label=Exception, span="1102-1102"];
n462 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="throw;", span="1110-1110"];
n466 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="1043-1043"];
n464 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="1122-1122"];
n469 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", label="string propertyName", span="1129-1129"];
n470 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", label="contract.ContractType == JsonContractType.Primitive", span="1131-1131"];
n471 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", label="JsonPrimitiveContract primitiveContract = (JsonPrimitiveContract)contract", span="1133-1133"];
n475 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", label="DateTime dt = DateTimeUtils.EnsureDateTime((DateTime)name, writer.DateTimeZoneHandling)", span="1139-1139"];
n478 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", label="DateTimeUtils.WriteDateTimeString(sw, dt, writer.DateFormatHandling, writer.DateFormatString, writer.Culture)", span="1143-1143"];
n482 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", label="double d = (double)name", span="1159-1159"];
n487 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", label="float f = (float)name", span="1167-1167"];
n491 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", label="return Convert.ToString(name, CultureInfo.InvariantCulture);", span="1175-1175"];
n492 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", label="TryConvertToString(name, name.GetType(), out propertyName)", span="1179-1179"];
n496 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", label="return name.ToString();", span="1187-1187"];
n472 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", label="primitiveContract.TypeCode", span="1134-1134"];
n473 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", label="PrimitiveTypeCode.DateTime", span="1136-1136"];
n480 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", label="PrimitiveTypeCode.Double", span="1156-1156"];
n485 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", label="PrimitiveTypeCode.Single", span="1164-1164"];
n490 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", label="escape = true", span="1174-1174"];
n474 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", label="PrimitiveTypeCode.DateTimeNullable", span="1137-1137"];
n476 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", label="escape = false", span="1141-1141"];
n498 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", span="92-92"];
n477 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", label="StringWriter sw = new StringWriter(CultureInfo.InvariantCulture)", span="1142-1142"];
n499 [cluster="System.IO.StringWriter.StringWriter(System.IFormatProvider)", label="Entry System.IO.StringWriter.StringWriter(System.IFormatProvider)", span="0-0"];
n479 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", label="return sw.ToString();", span="1144-1144"];
n500 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", span="631-631"];
n481 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", label="PrimitiveTypeCode.DoubleNullable", span="1157-1157"];
n483 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", label="escape = false", span="1161-1161"];
n484 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", label="return d.ToString(''R'', CultureInfo.InvariantCulture);", span="1162-1162"];
n486 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", label="PrimitiveTypeCode.SingleNullable", span="1165-1165"];
n488 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", label="escape = false", span="1169-1169"];
n489 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", label="return f.ToString(''R'', CultureInfo.InvariantCulture);", span="1170-1170"];
n497 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", span="1127-1127"];
n493 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", label="escape = true", span="1181-1181"];
n495 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", label="escape = true", span="1186-1186"];
n494 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", label="return propertyName;", span="1182-1182"];
n502 [cluster="double.ToString(string, System.IFormatProvider)", label="Entry double.ToString(string, System.IFormatProvider)", span="0-0"];
n505 [cluster="object.ToString()", label="Entry object.ToString()", span="0-0"];
n504 [cluster="System.Convert.ToString(object, System.IFormatProvider)", label="Entry System.Convert.ToString(object, System.IFormatProvider)", span="0-0"];
n501 [cluster="System.IO.StringWriter.ToString()", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
n503 [cluster="float.ToString(string, System.IFormatProvider)", label="Entry float.ToString(string, System.IFormatProvider)", span="0-0"];
n506 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", label="ClearErrorContext()", span="1193-1193"];
n507 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", label="writer.WriteState == WriteState.Property", span="1195-1195"];
n508 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", label="writer.WriteNull()", span="1197-1197"];
n509 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", label="writer.Top > initialDepth", span="1200-1200"];
n510 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", label="writer.WriteEnd()", span="1202-1202"];
n511 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", span="1191-1191"];
n512 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", label="Entry Newtonsoft.Json.JsonWriter.WriteEnd()", span="486-486"];
n513 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", label="property.ShouldSerialize == null", span="1208-1208"];
n515 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", label="bool shouldSerialize = property.ShouldSerialize(target)", span="1213-1213"];
n517 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, ''ShouldSerialize result for property '{0}' on {1}: {2}''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName, property.DeclaringType, shouldSerialize)), null)", span="1217-1217"];
n514 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", label="return true;", span="1210-1210"];
n516 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="1215-1215"];
n520 [cluster="System.Predicate<T>.Invoke(T)", label="Entry System.Predicate<T>.Invoke(T)", span="0-0"];
n518 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", label="return shouldSerialize;", span="1220-1220"];
n521 [cluster="string.FormatWith(System.IFormatProvider, object, object, object)", label="Entry string.FormatWith(System.IFormatProvider, object, object, object)", span="57-57"];
n519 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", span="1206-1206"];
n522 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", label="property.GetIsSpecified == null", span="1225-1225"];
n524 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", label="bool isSpecified = property.GetIsSpecified(target)", span="1230-1230"];
n526 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, ''IsSpecified result for property '{0}' on {1}: {2}''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName, property.DeclaringType, isSpecified)), null)", span="1234-1234"];
n523 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", label="return true;", span="1227-1227"];
n525 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="1232-1232"];
n527 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", label="return isSpecified;", span="1237-1237"];
n528 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", span="1223-1223"];
d14 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", color=green, community=0, label="0: ClearErrorContext()", span="93-93"];
d39 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", color=green, community=0, label="0: contract.TypeCode == PrimitiveTypeCode.Bytes", span="127-127"];
d40 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", color=green, community=0, label="0: bool includeTypeDetails = ShouldWriteType(TypeNameHandling.Objects, contract, member, containerContract, containerProperty)", span="130-130"];
d41 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", color=green, community=0, label="0: includeTypeDetails", span="131-131"];
d42 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", color=green, community=0, label="0: writer.WriteStartObject()", span="133-133"];
d43 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", color=green, community=0, label="0: WriteTypeProperty(writer, contract.CreatedType)", span="134-134"];
d44 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", color=green, community=0, label="0: writer.WritePropertyName(JsonTypeReflector.ValuePropertyName, false)", span="135-135"];
d45 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", color=green, community=0, label="0: JsonWriter.WriteValue(writer, contract.TypeCode, value)", span="137-137"];
m0_86 [cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JObject.Property(string)", span="258-258"];
m0_679 [cluster="Newtonsoft.Json.Linq.JContainer.Descendants()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Descendants()", span="289-289"];
m0_27 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs", label="v = (JValue)JToken.ReadFrom(new JsonTextReader(new StringReader(@''''''stringvalue'''''')))", span="94-94"];
m0_272 [cluster="System.Guid.Guid(string)", file="JTokenTests.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m0_850 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", span="1102-1102"];
m0_854 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", file="JTokenTests.cs", label="Assert.IsTrue(a.DeepEquals(a2))", span="1148-1148"];
m0_851 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", file="JTokenTests.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3),\r\n                    new JObject(\r\n                        new JProperty(''First'', new JValue(Encoding.UTF8.GetBytes(''Hi''))),\r\n                        new JProperty(''Second'', 1),\r\n                        new JProperty(''Third'', null),\r\n                        new JProperty(''Fourth'', new JConstructor(''Date'', 12345)),\r\n                        new JProperty(''Fifth'', double.PositiveInfinity),\r\n                        new JProperty(''Sixth'', double.NaN)\r\n                        )\r\n                    )", span="1104-1118"];
m0_852 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", file="JTokenTests.cs", label="JArray a2 = (JArray)a.DeepClone()", span="1120-1120"];
m0_853 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", file="JTokenTests.cs", label="StringAssert.AreEqual(@''[\r\n  5,\r\n  [\r\n    1\r\n  ],\r\n  [\r\n    1,\r\n    2\r\n  ],\r\n  [\r\n    1,\r\n    2,\r\n    3\r\n  ],\r\n  {\r\n    ''''First'''': ''''SGk='''',\r\n    ''''Second'''': 1,\r\n    ''''Third'''': null,\r\n    ''''Fourth'''': new Date(\r\n      12345\r\n    ),\r\n    ''''Fifth'''': ''''Infinity'''',\r\n    ''''Sixth'''': ''''NaN''''\r\n  }\r\n]'', a2.ToString(Formatting.Indented))", span="1122-1146"];
m0_855 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", span="1102-1102"];
m0_53 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="JTokenTests.cs", label="int offset = 0", span="242-242"];
m0_356 [cluster="System.Guid.NewGuid()", file="JTokenTests.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m0_79 [cluster="Unk.IsInstanceOf", file="JTokenTests.cs", label="Entry Unk.IsInstanceOf", span=""];
m0_809 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="34-34"];
m0_12 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs", label="Assert.AreEqual(true, (bool)o[''pie''])", span="73-73"];
m0_13 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs", label="JArray a = (JArray)JToken.ReadFrom(new JsonTextReader(new StringReader(''[1,2,3]'')))", span="75-75"];
m0_14 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs", label="Assert.AreEqual(1, (int)a[0])", span="76-76"];
m0_269 [cluster="System.TimeSpan.FromMinutes(double)", file="JTokenTests.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m0_102 [cluster="Newtonsoft.Json.Tests.StringAssert.Normalize(string)", file="JTokenTests.cs", label="return s;", span="347-347"];
m0_770 [cluster="Newtonsoft.Json.Linq.JContainer.RemoveAll()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JContainer.RemoveAll()", span="730-730"];
m0_276 [cluster="System.Convert.ToBase64String(byte[])", file="JTokenTests.cs", label="Entry System.Convert.ToBase64String(byte[])", span="0-0"];
m0_739 [cluster="Newtonsoft.Json.Linq.JContainer.CreateWriter()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JContainer.CreateWriter()", span="712-712"];
m0_69 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenTests.cs", label="Assert.AreEqual(null, o.Parent)", span="156-156"];
m0_70 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenTests.cs", label="JProperty o1 = new JProperty(''O1'', o)", span="157-157"];
m0_71 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenTests.cs", label="Assert.AreEqual(o, o1.Value)", span="158-158"];
m0_16 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs", label="Assert.AreEqual(3, (int)a[2])", span="78-78"];
m0_17 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs", label="JsonReader reader = new JsonTextReader(new StringReader(''{'pie':true}''))", span="80-80"];
m0_18 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs", label="reader.Read()", span="81-81"];
m0_19 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs", label="reader.Read()", span="82-82"];
m0_20 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs", label="JProperty p = (JProperty)JToken.ReadFrom(reader)", span="84-84"];
m0_21 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs", label="Assert.AreEqual(''pie'', p.Name)", span="85-85"];
m0_22 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs", label="Assert.AreEqual(true, (bool)p.Value)", span="86-86"];
m0_9 [cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetField(System.Type, string)", file="JTokenTests.cs", label="return type.GetField(name);", span="82-82"];
m0_695 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", span="839-839"];
m0_701 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2, 3), descendantsAndSelf[descendantsAndSelf.Count - 4]))", span="853-853"];
m0_697 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", file="JTokenTests.cs", label="List<JToken> descendantsAndSelf = a.DescendantsAndSelf().ToList()", span="849-849"];
m0_700 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", file="JTokenTests.cs", label="Assert.AreEqual(5, (int)descendantsAndSelf[1])", span="852-852"];
m0_702 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", file="JTokenTests.cs", label="Assert.AreEqual(1, (int)descendantsAndSelf[descendantsAndSelf.Count - 3])", span="854-854"];
m0_696 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", file="JTokenTests.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="841-847"];
m0_698 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", file="JTokenTests.cs", label="Assert.AreEqual(11, descendantsAndSelf.Count())", span="850-850"];
m0_699 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", file="JTokenTests.cs", label="Assert.AreEqual(a, descendantsAndSelf[0])", span="851-851"];
m0_703 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", file="JTokenTests.cs", label="Assert.AreEqual(2, (int)descendantsAndSelf[descendantsAndSelf.Count - 2])", span="855-855"];
m0_704 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", file="JTokenTests.cs", label="Assert.AreEqual(3, (int)descendantsAndSelf[descendantsAndSelf.Count - 1])", span="856-856"];
m0_705 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf()", span="839-839"];
m0_876 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ParseAdditionalContent()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.ParseAdditionalContent()", span="1202-1202"];
m0_877 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ParseAdditionalContent()", file="JTokenTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n],'';\r\n\r\n                JToken.Parse(json);\r\n            }, ''Additional text encountered after finished reading JSON content: ,. Path '', line 5, position 1.'')", span="1204-1213"];
m0_878 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ParseAdditionalContent()", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.ParseAdditionalContent()", span="1202-1202"];
m0_7 [cluster="System.Type.GetProperty(string)", file="JTokenTests.cs", label="Entry System.Type.GetProperty(string)", span="0-0"];
m0_723 [cluster="System.Collections.Generic.IEnumerable<T>.DescendantsAndSelf<T>()", file="JTokenTests.cs", label="Entry System.Collections.Generic.IEnumerable<T>.DescendantsAndSelf<T>()", span="88-88"];
m0_15 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs", label="Assert.AreEqual(2, (int)a[1])", span="77-77"];
m0_830 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", span="1068-1068"];
m0_831 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="1070-1076"];
m0_833 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs", label="Assert.AreEqual(5, (int)a[0])", span="1080-1080"];
m0_834 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs", label="Assert.AreEqual(''pie'', (string)a[1])", span="1081-1081"];
m0_835 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs", label="Assert.AreEqual(a, a[1].Parent)", span="1082-1082"];
m0_836 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs", label="Assert.AreEqual(a[2], a[1].Next)", span="1083-1083"];
m0_837 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs", label="Assert.AreEqual(5, a.Count())", span="1084-1084"];
m0_839 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs", label="Assert.AreEqual(''firstpie'', (string)a[0])", span="1088-1088"];
m0_840 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs", label="Assert.AreEqual(5, (int)a[1])", span="1089-1089"];
m0_841 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs", label="Assert.AreEqual(''pie'', (string)a[2])", span="1090-1090"];
m0_842 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs", label="Assert.AreEqual(a, a[0].Parent)", span="1091-1091"];
m0_843 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs", label="Assert.AreEqual(a[1], a[0].Next)", span="1092-1092"];
m0_844 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs", label="Assert.AreEqual(6, a.Count())", span="1093-1093"];
m0_846 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs", label="Assert.AreEqual(''secondlastpie'', (string)a[5])", span="1097-1097"];
m0_847 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs", label="Assert.AreEqual(7, a.Count())", span="1098-1098"];
m0_832 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs", label="a[1].AddBeforeSelf(''pie'')", span="1078-1078"];
m0_838 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs", label="a[0].AddBeforeSelf(''firstpie'')", span="1086-1086"];
m0_845 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs", label="a.Last.AddBeforeSelf(''secondlastpie'')", span="1095-1095"];
m0_848 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", span="1068-1068"];
m0_28 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs", label="Assert.AreEqual(''stringvalue'', (string)v)", span="95-95"];
m0_883 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", span="1217-1217"];
m0_884 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs", label="JObject o =\r\n                new JObject(\r\n                    new JProperty(''Test1'', new JArray(1, 2, 3)),\r\n                    new JProperty(''Test2'', ''Test2Value''),\r\n                    new JProperty(''Test3'', new JObject(new JProperty(''Test1'', new JArray(1, new JObject(new JProperty(''Test1'', 1)), 3)))),\r\n                    new JProperty(''Test4'', new JConstructor(''Date'', new JArray(1, 2, 3)))\r\n                    )", span="1219-1225"];
m0_899 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs", label="JArray a = new JArray(1)", span="1248-1248"];
m0_886 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs", label="Assert.AreEqual(''Test1[0]'', t.Path)", span="1228-1228"];
m0_888 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs", label="Assert.AreEqual(''Test2'', t.Path)", span="1231-1231"];
m0_890 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs", label="Assert.AreEqual('''', t.Path)", span="1234-1234"];
m0_892 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs", label="Assert.AreEqual(''Test4[0][0]'', t.Path)", span="1237-1237"];
m0_894 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs", label="Assert.AreEqual(''Test4[0]'', t.Path)", span="1240-1240"];
m0_896 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs", label="Assert.AreEqual('''', t.Path)", span="1243-1243"];
m0_898 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs", label="Assert.AreEqual(''Test3.Test1[1].Test1'', t.Path)", span="1246-1246"];
m0_900 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs", label="Assert.AreEqual('''', a.Path)", span="1249-1249"];
m0_901 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs", label="Assert.AreEqual(''[0]'', a[0].Path)", span="1251-1251"];
m0_885 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs", label="JToken t = o.SelectToken(''Test1[0]'')", span="1227-1227"];
m0_887 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs", label="t = o.SelectToken(''Test2'')", span="1230-1230"];
m0_889 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs", label="t = o.SelectToken('''')", span="1233-1233"];
m0_891 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs", label="t = o.SelectToken(''Test4[0][0]'')", span="1236-1236"];
m0_893 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs", label="t = o.SelectToken(''Test4[0]'')", span="1239-1239"];
m0_897 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs", label="t = o.SelectToken(''Test3.Test1[1].Test1'')", span="1245-1245"];
m0_895 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs", label="t = t.DeepClone()", span="1242-1242"];
m0_902 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", span="1217-1217"];
m0_780 [cluster="Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", span="341-341"];
m0_859 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", span="1153-1153"];
m0_863 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", file="JTokenTests.cs", label="Assert.IsTrue(a.DeepEquals(a2))", span="1175-1175"];
m0_860 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", file="JTokenTests.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3),\r\n                    new JObject(\r\n                        new JProperty(''First'', new JValue(Encoding.UTF8.GetBytes(''Hi''))),\r\n                        new JProperty(''Second'', 1),\r\n                        new JProperty(''Third'', null),\r\n                        new JProperty(''Fourth'', new JConstructor(''Date'', 12345)),\r\n                        new JProperty(''Fifth'', double.PositiveInfinity),\r\n                        new JProperty(''Sixth'', double.NaN)\r\n                        )\r\n                    )", span="1155-1169"];
m0_862 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", file="JTokenTests.cs", label="JArray a2 = (JArray)c.Clone()", span="1173-1173"];
m0_861 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", file="JTokenTests.cs", label="ICloneable c = a", span="1171-1171"];
m0_864 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", span="1153-1153"];
m0_761 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", span="946-946"];
m0_762 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenTests.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="948-954"];
m0_766 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenTests.cs", label="Assert.AreEqual(0, a.Count())", span="960-960"];
m0_764 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenTests.cs", label="Assert.AreEqual(5, (int)first)", span="957-957"];
m0_763 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenTests.cs", label="JToken first = a.First", span="956-956"];
m0_765 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenTests.cs", label="a.RemoveAll()", span="959-959"];
m0_767 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenTests.cs", label="Assert.IsNull(first.Parent)", span="962-962"];
m0_768 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenTests.cs", label="Assert.IsNull(first.Next)", span="963-963"];
m0_769 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", span="946-946"];
m0_595 [cluster="Newtonsoft.Json.Linq.JToken.Remove()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.Remove()", span="393-393"];
m0_771 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddPropertyToArray()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AddPropertyToArray()", span="967-967"];
m0_772 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddPropertyToArray()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() =>\r\n            {\r\n                JArray a = new JArray();\r\n                a.Add(new JProperty(''PropertyName''));\r\n            }, ''Can not add Newtonsoft.Json.Linq.JProperty to Newtonsoft.Json.Linq.JArray.'')", span="969-973"];
m0_773 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddPropertyToArray()", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AddPropertyToArray()", span="967-967"];
m0_121 [cluster="System.Exception.Exception(string)", file="JTokenTests.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m0_122 [cluster="string.Join(string, params string[])", file="JTokenTests.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m0_123 [cluster="System.Exception.Exception(string, System.Exception)", file="JTokenTests.cs", label="Entry System.Exception.Exception(string, System.Exception)", span="0-0"];
m0_124 [cluster="System.Exception.GetType()", file="JTokenTests.cs", label="Entry System.Exception.GetType()", span="0-0"];
m0_125 [cluster="string.Format(string, object, object)", file="JTokenTests.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m0_279 [cluster="Unk.Parse", file="JTokenTests.cs", label="Entry Unk.Parse", span=""];
m0_41 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="410-410"];
m0_42 [cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(long)", span="70-70"];
m0_43 [cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values()", file="JTokenTests.cs", label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values()", span="123-123"];
m0_44 [cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="JTokenTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0"];
m0_45 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="155-155"];
m0_46 [cluster="object.GetType()", file="JTokenTests.cs", label="Entry object.GetType()", span="0-0"];
m0_856 [cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor(string, object)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor(string, object)", span="116-116"];
m0_280 [cluster="JValue.cstr", file="JTokenTests.cs", label="Entry JValue.cstr", span=""];
m0_81 [cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", file="JTokenTests.cs", label="Contains(collection, value, null)", span="306-306"];
m0_465 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", span="469-469"];
m0_466 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual((BigInteger)1, (new JValue(1).ToObject(typeof(BigInteger))))", span="472-472"];
m0_467 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual((BigInteger)1, (new JValue(1).ToObject(typeof(BigInteger?))))", span="473-473"];
m0_469 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual((ushort)1, (new JValue(1).ToObject(typeof(ushort))))", span="476-476"];
m0_470 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual((ushort)1, (new JValue(1).ToObject(typeof(ushort?))))", span="477-477"];
m0_471 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual((uint)1L, (new JValue(1).ToObject(typeof(uint))))", span="478-478"];
m0_472 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual((uint)1L, (new JValue(1).ToObject(typeof(uint?))))", span="479-479"];
m0_473 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual((ulong)1L, (new JValue(1).ToObject(typeof(ulong))))", span="480-480"];
m0_474 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual((ulong)1L, (new JValue(1).ToObject(typeof(ulong?))))", span="481-481"];
m0_475 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual((sbyte)1L, (new JValue(1).ToObject(typeof(sbyte))))", span="482-482"];
m0_476 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual((sbyte)1L, (new JValue(1).ToObject(typeof(sbyte?))))", span="483-483"];
m0_477 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual((byte)1L, (new JValue(1).ToObject(typeof(byte))))", span="484-484"];
m0_478 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual((byte)1L, (new JValue(1).ToObject(typeof(byte?))))", span="485-485"];
m0_479 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual((short)1L, (new JValue(1).ToObject(typeof(short))))", span="486-486"];
m0_480 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual((short)1L, (new JValue(1).ToObject(typeof(short?))))", span="487-487"];
m0_481 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual(1, (new JValue(1).ToObject(typeof(int))))", span="488-488"];
m0_482 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual(1, (new JValue(1).ToObject(typeof(int?))))", span="489-489"];
m0_483 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual(1L, (new JValue(1).ToObject(typeof(long))))", span="490-490"];
m0_484 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual(1L, (new JValue(1).ToObject(typeof(long?))))", span="491-491"];
m0_489 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual(1m, (new JValue(1).ToObject(typeof(decimal))))", span="496-496"];
m0_490 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual(1m, (new JValue(1).ToObject(typeof(decimal?))))", span="497-497"];
m0_497 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual(DateTime.MaxValue, (new JValue(DateTime.MaxValue).ToObject(typeof(DateTime))))", span="504-504"];
m0_498 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual(DateTime.MaxValue, (new JValue(DateTime.MaxValue).ToObject(typeof(DateTime?))))", span="505-505"];
m0_499 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual(DateTimeOffset.MaxValue, (new JValue(DateTimeOffset.MaxValue).ToObject(typeof(DateTimeOffset))))", span="507-507"];
m0_500 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual(DateTimeOffset.MaxValue, (new JValue(DateTimeOffset.MaxValue).ToObject(typeof(DateTimeOffset?))))", span="508-508"];
m0_491 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual(true, (new JValue(true).ToObject(typeof(bool))))", span="498-498"];
m0_492 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual(true, (new JValue(true).ToObject(typeof(bool?))))", span="499-499"];
m0_485 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual((float)1, (new JValue(1.0).ToObject(typeof(float))))", span="492-492"];
m0_486 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual((float)1, (new JValue(1.0).ToObject(typeof(float?))))", span="493-493"];
m0_487 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual((double)1, (new JValue(1.0).ToObject(typeof(double))))", span="494-494"];
m0_488 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual((double)1, (new JValue(1.0).ToObject(typeof(double?))))", span="495-495"];
m0_501 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual(''b'', (new JValue(''b'').ToObject(typeof(string))))", span="510-510"];
m0_505 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual(StringComparison.Ordinal, (new JValue(''Ordinal'').ToObject(typeof(StringComparison))))", span="514-514"];
m0_506 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual(StringComparison.Ordinal, (new JValue(''Ordinal'').ToObject(typeof(StringComparison?))))", span="515-515"];
m0_468 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual((BigInteger?)null, (JValue.CreateNull().ToObject(typeof(BigInteger?))))", span="474-474"];
m0_507 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual(null, (JValue.CreateNull().ToObject(typeof(StringComparison?))))", span="516-516"];
m0_495 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual(TimeSpan.MaxValue, (new JValue(TimeSpan.MaxValue).ToObject(typeof(TimeSpan))))", span="502-502"];
m0_496 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual(TimeSpan.MaxValue, (new JValue(TimeSpan.MaxValue).ToObject(typeof(TimeSpan?))))", span="503-503"];
m0_502 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual(new Guid(''A34B2080-B5F0-488E-834D-45D44ECB9E5C''), (new JValue(new Guid(''A34B2080-B5F0-488E-834D-45D44ECB9E5C'')).ToObject(typeof(Guid))))", span="511-511"];
m0_503 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual(new Guid(''A34B2080-B5F0-488E-834D-45D44ECB9E5C''), (new JValue(new Guid(''A34B2080-B5F0-488E-834D-45D44ECB9E5C'')).ToObject(typeof(Guid?))))", span="512-512"];
m0_504 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual(new Uri(''http://www.google.com/''), (new JValue(new Uri(''http://www.google.com/'')).ToObject(typeof(Uri))))", span="513-513"];
m0_493 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual('b', (new JValue('b').ToObject(typeof(char))))", span="500-500"];
m0_494 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Assert.AreEqual('b', (new JValue('b').ToObject(typeof(char?))))", span="501-501"];
m0_508 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", span="469-469"];
m0_271 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Guid)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.Guid)", span="163-163"];
m0_83 [cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object, string)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object, string)", span="309-309"];
m0_270 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", span="181-181"];
m0_567 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", span="587-587"];
m0_568 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="JTokenTests.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    6,\r\n                    new JArray(7, 8),\r\n                    new JArray(9, 10)\r\n                    )", span="589-595"];
m0_569 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="JTokenTests.cs", label="Assert.AreEqual(a, a.Root)", span="597-597"];
m0_570 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="JTokenTests.cs", label="Assert.AreEqual(a, a[0].Root)", span="598-598"];
m0_571 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="JTokenTests.cs", label="Assert.AreEqual(a, ((JArray)a[2])[0].Root)", span="599-599"];
m0_572 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", span="587-587"];
m0_654 [cluster="System.Collections.Generic.IEnumerable<T>.AncestorsAndSelf<T>()", file="JTokenTests.cs", label="Entry System.Collections.Generic.IEnumerable<T>.AncestorsAndSelf<T>()", span="62-62"];
m0_274 [cluster="System.Uri.Uri(string)", file="JTokenTests.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m0_745 [cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="114-114"];
m0_818 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", span="1044-1044"];
m0_819 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JTokenTests.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="1046-1052"];
m0_821 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JTokenTests.cs", label="Assert.AreEqual(5, (int)a[0])", span="1056-1056"];
m0_822 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JTokenTests.cs", label="Assert.AreEqual(1, a[1].Count())", span="1057-1057"];
m0_823 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JTokenTests.cs", label="Assert.AreEqual(''pie'', (string)a[2])", span="1058-1058"];
m0_824 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JTokenTests.cs", label="Assert.AreEqual(5, a.Count())", span="1059-1059"];
m0_826 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JTokenTests.cs", label="Assert.AreEqual(''lastpie'', (string)a[5])", span="1063-1063"];
m0_827 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JTokenTests.cs", label="Assert.AreEqual(''lastpie'', (string)a.Last)", span="1064-1064"];
m0_820 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JTokenTests.cs", label="a[1].AddAfterSelf(''pie'')", span="1054-1054"];
m0_825 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JTokenTests.cs", label="a[4].AddAfterSelf(''lastpie'')", span="1061-1061"];
m0_828 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", span="1044-1044"];
m0_89 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JTokenTests.cs", label="actual = Normalize(actual)", span="327-327"];
m0_668 [cluster="System.Collections.Generic.IEnumerable<T>.Ancestors<T>()", file="JTokenTests.cs", label="Entry System.Collections.Generic.IEnumerable<T>.Ancestors<T>()", span="49-49"];
m0_260 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTimeOffset)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.DateTimeOffset)", span="135-135"];
m0_694 [cluster="System.Collections.Generic.IEnumerable<T>.Descendants<T>()", file="JTokenTests.cs", label="Entry System.Collections.Generic.IEnumerable<T>.Descendants<T>()", span="75-75"];
m0_626 [cluster="Newtonsoft.Json.Linq.JToken.Ancestors()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.Ancestors()", span="268-268"];
m0_126 [cluster="Newtonsoft.Json.Linq.JToken.BeforeSelf()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.BeforeSelf()", span="311-311"];
m0_127 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", span="249-249"];
m0_131 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(new DateTimeOffset(2000, 12, 20, 0, 0, 0, TimeSpan.Zero), (DateTimeOffset)new JValue(new DateTime(2000, 12, 20, 0, 0, 0, DateTimeKind.Utc)))", span="256-256"];
m0_133 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (DateTimeOffset?)new JValue((DateTimeOffset?)null))", span="258-258"];
m0_136 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(true, (bool?)new JValue(true))", span="262-262"];
m0_128 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(1L, (long)(new JValue(1)))", span="251-251"];
m0_129 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(2L, (long)new JArray(1, 2, 3)[1])", span="252-252"];
m0_130 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(new DateTime(2000, 12, 20), (DateTime)new JValue(new DateTime(2000, 12, 20)))", span="254-254"];
m0_132 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(new DateTimeOffset(2000, 12, 20, 23, 50, 10, TimeSpan.Zero), (DateTimeOffset)new JValue(new DateTimeOffset(2000, 12, 20, 23, 50, 10, TimeSpan.Zero)))", span="257-257"];
m0_134 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (DateTimeOffset?)(JValue)null)", span="259-259"];
m0_135 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(true, (bool)new JValue(true))", span="261-261"];
m0_137 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (bool?)((JValue)null))", span="263-263"];
m0_138 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (bool?)JValue.CreateNull())", span="264-264"];
m0_139 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(10, (long)new JValue(10))", span="265-265"];
m0_614 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", span="679-679"];
m0_616 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", file="JTokenTests.cs", label="Assert.IsTrue(a.HasValues)", span="689-689"];
m0_615 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", file="JTokenTests.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="681-687"];
m0_617 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", span="679-679"];
m0_652 [cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="88-88"];
m0_34 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs", label="Assert.AreEqual(typeof(DateTimeOffset), v.Value.GetType())", span="108-108"];
m0_90 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JTokenTests.cs", label="Assert.AreEqual(expected, actual)", span="329-329"];
m0_88 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JTokenTests.cs", label="expected = Normalize(expected)", span="326-326"];
m0_266 [cluster="Newtonsoft.Json.Linq.JValue.JValue(ulong)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(ulong)", span="98-98"];
m0_58 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="JTokenTests.cs", label="bytes[offset] |= (byte)(b << shift)", span="255-255"];
m0_35 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, new TimeSpan(12, 31, 0)), v.Value)", span="109-109"];
m0_104 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JTokenTests.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    6,\r\n                    new JArray(7, 8),\r\n                    new JArray(9, 10)\r\n                    )", span="196-202"];
m0_566 [cluster="Unk.IsFalse", file="JTokenTests.cs", label="Entry Unk.IsFalse", span=""];
m0_10 [cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetField(System.Type, string)", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.TestReflectionUtils.GetField(System.Type, string)", span="79-79"];
m0_25 [cluster="object.GetType()", file="JTokenTests.cs", label="Entry object.GetType()", span="0-0"];
m0_23 [cluster="System.IO.MemoryStream.MemoryStream()", file="JTokenTests.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m0_24 [cluster="DataContractJsonSerializer.cstr", file="JTokenTests.cs", label="Entry DataContractJsonSerializer.cstr", span=""];
m0_26 [cluster="Unk.WriteObject", file="JTokenTests.cs", label="Entry Unk.WriteObject", span=""];
m0_11 [cluster="System.Type.GetField(string)", file="JTokenTests.cs", label="Entry System.Type.GetField(string)", span="0-0"];
m0_29 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", span="209-209"];
m0_31 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", file="JTokenTests.cs", label="int pos = DateTimeUtils.WriteDateTimeOffset(chars, 0, DateTime.SpecifyKind(d, DateTimeKind.Local).GetUtcOffset(), dateFormatHandling)", span="212-212"];
m0_33 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", span="209-209"];
m0_30 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", file="JTokenTests.cs", label="char[] chars = new char[8]", span="211-211"];
m0_32 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", file="JTokenTests.cs", label="return new string(chars, 0, pos);", span="214-214"];
m0_36 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffset(char[], int, System.TimeSpan, Newtonsoft.Json.DateFormatHandling)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffset(char[], int, System.TimeSpan, Newtonsoft.Json.DateFormatHandling)", span="746-746"];
m0_858 [cluster="Newtonsoft.Json.Linq.JArray.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JArray.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="96-96"];
m0_746 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", span="919-919"];
m0_747 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="921-927"];
m0_749 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs", label="Assert.AreEqual(''First'', (string)a[0])", span="931-931"];
m0_750 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs", label="Assert.AreEqual(a, a[0].Parent)", span="932-932"];
m0_751 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs", label="Assert.AreEqual(a[1], a[0].Next)", span="933-933"];
m0_752 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs", label="Assert.AreEqual(5, a.Count())", span="934-934"];
m0_754 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs", label="Assert.AreEqual(''NewFirst'', (string)a[0])", span="937-937"];
m0_755 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs", label="Assert.AreEqual(a, a[0].Parent)", span="938-938"];
m0_756 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs", label="Assert.AreEqual(a[1], a[0].Next)", span="939-939"];
m0_757 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs", label="Assert.AreEqual(6, a.Count())", span="940-940"];
m0_758 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs", label="Assert.AreEqual(a[0], a[0].Next.Previous)", span="942-942"];
m0_748 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs", label="a.AddFirst(''First'')", span="929-929"];
m0_753 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs", label="a.AddFirst(''NewFirst'')", span="936-936"];
m0_759 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", span="919-919"];
m0_84 [cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object, string)", file="JTokenTests.cs", label="Assert.Contains(value, collection, message)", span="312-312"];
m0_283 [cluster="Unk.ToByteArray", file="JTokenTests.cs", label="Entry Unk.ToByteArray", span=""];
m0_779 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string)", span="298-298"];
m0_3 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DeepEqualsObjectOrder()", color=green, community=0, file="JTokenTests.cs", label="2: JObject j1 = JObject.Parse(ob1)", span="64-64"];
m0_94 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenTests.cs", label="Assert.AreEqual(6, (int)next)", span="181-181"];
m0_95 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenTests.cs", label="next = next.Next", span="183-183"];
m0_96 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(7, 8), next))", span="184-184"];
m0_97 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenTests.cs", label="next = next.Next", span="186-186"];
m0_98 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(9, 10), next))", span="187-187"];
m0_59 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="JTokenTests.cs", label="shift ^= 4", span="257-257"];
m0_76 [cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="299-299"];
m0_77 [cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="JTokenTests.cs", label="Assert.IsInstanceOf(t, instance)", span="301-301"];
m0_60 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="JTokenTests.cs", label="shift != 0", span="259-259"];
m0_62 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="JTokenTests.cs", label="return bytes;", span="264-264"];
m0_64 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", span="271-271"];
m0_73 [cluster="System.Console.WriteLine(string)", file="JTokenTests.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m0_61 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="JTokenTests.cs", label="offset++", span="261-261"];
m0_63 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", span="233-233"];
m0_65 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", file="JTokenTests.cs", label="Thread.CurrentThread.CurrentCulture = CultureInfo.InvariantCulture", span="279-279"];
m0_67 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", file="JTokenTests.cs", label="JsonConvert.DefaultSettings = null", span="283-283"];
m0_68 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", span="271-271"];
m0_75 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", span="291-291"];
m0_66 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", file="JTokenTests.cs", label="Thread.CurrentThread.CurrentUICulture = CultureInfo.InvariantCulture", span="280-280"];
m0_72 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", span="291-291"];
m0_74 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", file="JTokenTests.cs", label="return @''@'''''' + json.Replace(@'''''''', @'''''''''''') + @'''''''';", span="293-293"];
m0_78 [cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="299-299"];
m0_265 [cluster="Newtonsoft.Json.Linq.JValue.JValue(float)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(float)", span="116-116"];
m0_669 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", span="790-790"];
m0_674 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2, 3), descendants[descendants.Count - 4]))", span="803-803"];
m0_671 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenTests.cs", label="List<JToken> descendants = a.Descendants().ToList()", span="800-800"];
m0_673 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenTests.cs", label="Assert.AreEqual(5, (int)descendants[0])", span="802-802"];
m0_675 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenTests.cs", label="Assert.AreEqual(1, (int)descendants[descendants.Count - 3])", span="804-804"];
m0_670 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenTests.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="792-798"];
m0_672 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenTests.cs", label="Assert.AreEqual(10, descendants.Count())", span="801-801"];
m0_676 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenTests.cs", label="Assert.AreEqual(2, (int)descendants[descendants.Count - 2])", span="805-805"];
m0_677 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenTests.cs", label="Assert.AreEqual(3, (int)descendants[descendants.Count - 1])", span="806-806"];
m0_678 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", span="790-790"];
m0_810 [cluster="Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="441-441"];
m0_627 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf()", span="711-711"];
m0_628 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf()", file="JTokenTests.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="713-719"];
m0_633 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf()", file="JTokenTests.cs", label="Assert.AreEqual(a[1], ancestors[1])", span="725-725"];
m0_634 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf()", file="JTokenTests.cs", label="Assert.AreEqual(a, ancestors[2])", span="726-726"];
m0_632 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf()", file="JTokenTests.cs", label="Assert.AreEqual(t, ancestors[0])", span="724-724"];
m0_631 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf()", file="JTokenTests.cs", label="Assert.AreEqual(3, ancestors.Count())", span="723-723"];
m0_629 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf()", file="JTokenTests.cs", label="JToken t = a[1][0]", span="721-721"];
m0_630 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf()", file="JTokenTests.cs", label="List<JToken> ancestors = t.AncestorsAndSelf().ToList()", span="722-722"];
m0_635 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf()", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf()", span="711-711"];
m0_655 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", span="761-761"];
m0_656 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="JTokenTests.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="763-769"];
m0_663 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="JTokenTests.cs", label="Assert.AreEqual(a[1], ancestors[0])", span="783-783"];
m0_664 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="JTokenTests.cs", label="Assert.AreEqual(a, ancestors[1])", span="784-784"];
m0_665 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="JTokenTests.cs", label="Assert.AreEqual(o.Property(''prop1''), ancestors[2])", span="785-785"];
m0_666 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="JTokenTests.cs", label="Assert.AreEqual(o, ancestors[3])", span="786-786"];
m0_662 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="JTokenTests.cs", label="Assert.AreEqual(4, ancestors.Count())", span="782-782"];
m0_657 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="JTokenTests.cs", label="JObject o = new JObject\r\n            {\r\n                { ''prop1'', ''value1'' }\r\n            }", span="771-774"];
m0_658 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="JTokenTests.cs", label="JToken t1 = a[1][0]", span="776-776"];
m0_661 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="JTokenTests.cs", label="List<JToken> ancestors = source.Ancestors().ToList()", span="781-781"];
m0_659 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="JTokenTests.cs", label="JToken t2 = o[''prop1'']", span="777-777"];
m0_660 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="JTokenTests.cs", label="List<JToken> source = new List<JToken> { t1, t2 }", span="779-779"];
m0_667 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", span="761-761"];
m0_724 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", span="891-891"];
m0_737 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''Property'', ''PropertyValue'')), a[5]))", span="915-915"];
m0_725 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="893-899"];
m0_736 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs", label="Assert.AreEqual(6, a.Count())", span="914-914"];
m0_726 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs", label="JsonWriter writer = a.CreateWriter()", span="901-901"];
m0_728 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs", label="Assert.AreEqual(4, a.Count())", span="903-903"];
m0_730 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs", label="Assert.AreEqual(5, a.Count())", span="906-906"];
m0_731 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs", label="Assert.AreEqual(''String'', (string)a[4])", span="907-907"];
m0_735 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs", label="writer.WriteEnd()", span="912-912"];
m0_727 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs", label="Assert.IsNotNull(writer)", span="902-902"];
m0_729 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs", label="writer.WriteValue(''String'')", span="905-905"];
m0_732 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs", label="writer.WriteStartObject()", span="909-909"];
m0_733 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs", label="writer.WritePropertyName(''Property'')", span="910-910"];
m0_734 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs", label="writer.WriteValue(''PropertyValue'')", span="911-911"];
m0_738 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", span="891-891"];
m0_866 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", span="1180-1180"];
m0_869 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="JTokenTests.cs", label="Assert.IsTrue(a.DeepEquals(a2))", span="1191-1191"];
m0_873 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="JTokenTests.cs", label="Assert.IsTrue(v1.DeepEquals(v2))", span="1198-1198"];
m0_867 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="JTokenTests.cs", label="JArray a =\r\n                new JArray(\r\n                    double.NaN,\r\n                    double.PositiveInfinity,\r\n                    double.NegativeInfinity\r\n                    )", span="1182-1187"];
m0_868 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="JTokenTests.cs", label="JArray a2 = (JArray)a.DeepClone()", span="1189-1189"];
m0_870 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="JTokenTests.cs", label="double d = 1 + 0.1 + 0.1 + 0.1", span="1193-1193"];
m0_871 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="JTokenTests.cs", label="JValue v1 = new JValue(d)", span="1195-1195"];
m0_872 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="JTokenTests.cs", label="JValue v2 = new JValue(1.3)", span="1196-1196"];
m0_874 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", span="1180-1180"];
m0_120 [cluster="Newtonsoft.Json.Linq.JToken.Children<T>()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.Children<T>()", span="375-375"];
m0_37 [cluster="string.String(char[], int, int)", file="JTokenTests.cs", label="Entry string.String(char[], int, int)", span="0-0"];
m0_511 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", span="520-520"];
m0_512 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(new DateTime(2000, 12, 20)), (JValue)new DateTime(2000, 12, 20)))", span="522-522"];
m0_513 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(new DateTimeOffset(2000, 12, 20, 23, 50, 10, TimeSpan.Zero)), (JValue)new DateTimeOffset(2000, 12, 20, 23, 50, 10, TimeSpan.Zero)))", span="524-524"];
m0_514 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((DateTimeOffset?)null), (JValue)(DateTimeOffset?)null))", span="525-525"];
m0_515 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(new BigInteger(1)), new JValue(new BigInteger(1))))", span="530-530"];
m0_516 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((BigInteger?)null), new JValue((BigInteger?)null)))", span="531-531"];
m0_517 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(true), (JValue)true))", span="533-533"];
m0_518 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(true), (JValue)true))", span="534-534"];
m0_519 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(true), (JValue)(bool?)true))", span="535-535"];
m0_520 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((bool?)null), (JValue)(bool?)null))", span="536-536"];
m0_521 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(10), (JValue)10))", span="537-537"];
m0_522 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((long?)null), (JValue)(long?)null))", span="538-538"];
m0_523 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((DateTime?)null), (JValue)(DateTime?)null))", span="539-539"];
m0_524 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(long.MaxValue), (JValue)long.MaxValue))", span="540-540"];
m0_525 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((int?)null), (JValue)(int?)null))", span="541-541"];
m0_526 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((short?)null), (JValue)(short?)null))", span="542-542"];
m0_527 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((double?)null), (JValue)(double?)null))", span="543-543"];
m0_528 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((uint?)null), (JValue)(uint?)null))", span="544-544"];
m0_529 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((decimal?)null), (JValue)(decimal?)null))", span="545-545"];
m0_530 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((ulong?)null), (JValue)(ulong?)null))", span="546-546"];
m0_531 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((sbyte?)null), (JValue)(sbyte?)null))", span="547-547"];
m0_532 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((sbyte)1), (JValue)(sbyte)1))", span="548-548"];
m0_533 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((byte?)null), (JValue)(byte?)null))", span="549-549"];
m0_534 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((byte)1), (JValue)(byte)1))", span="550-550"];
m0_535 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((ushort?)null), (JValue)(ushort?)null))", span="551-551"];
m0_536 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(short.MaxValue), (JValue)short.MaxValue))", span="552-552"];
m0_537 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(ushort.MaxValue), (JValue)ushort.MaxValue))", span="553-553"];
m0_538 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(11.1f), (JValue)11.1f))", span="554-554"];
m0_539 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(float.MinValue), (JValue)float.MinValue))", span="555-555"];
m0_540 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(double.MinValue), (JValue)double.MinValue))", span="556-556"];
m0_541 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(uint.MaxValue), (JValue)uint.MaxValue))", span="557-557"];
m0_542 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(ulong.MaxValue), (JValue)ulong.MaxValue))", span="558-558"];
m0_543 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(ulong.MinValue), (JValue)ulong.MinValue))", span="559-559"];
m0_544 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((string)null), (JValue)(string)null))", span="560-560"];
m0_545 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((DateTime?)null), (JValue)(DateTime?)null))", span="561-561"];
m0_546 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(decimal.MaxValue), (JValue)decimal.MaxValue))", span="562-562"];
m0_547 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(decimal.MaxValue), (JValue)(decimal?)decimal.MaxValue))", span="563-563"];
m0_548 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(decimal.MinValue), (JValue)decimal.MinValue))", span="564-564"];
m0_549 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(float.MaxValue), (JValue)(float?)float.MaxValue))", span="565-565"];
m0_550 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(double.MaxValue), (JValue)(double?)double.MaxValue))", span="566-566"];
m0_551 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(JValue.CreateNull(), (JValue)(double?)null))", span="567-567"];
m0_555 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(emptyData), (JValue)emptyData))", span="573-573"];
m0_557 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(Encoding.UTF8.GetBytes(''Hi'')), (JValue)Encoding.UTF8.GetBytes(''Hi'')))", span="575-575"];
m0_558 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(TimeSpan.FromMinutes(1)), (JValue)TimeSpan.FromMinutes(1)))", span="577-577"];
m0_559 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(JValue.CreateNull(), (JValue)(TimeSpan?)null))", span="578-578"];
m0_560 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(TimeSpan.FromMinutes(1)), (JValue)(TimeSpan?)TimeSpan.FromMinutes(1)))", span="579-579"];
m0_561 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC'')), (JValue)new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC'')))", span="580-580"];
m0_562 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(new Uri(''http://www.google.com'')), (JValue)new Uri(''http://www.google.com'')))", span="581-581"];
m0_563 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(JValue.CreateNull(), (JValue)(Uri)null))", span="582-582"];
m0_564 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(JValue.CreateNull(), (JValue)(Guid?)null))", span="583-583"];
m0_552 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsFalse(JToken.DeepEquals(new JValue(true), (JValue)(bool?)null))", span="569-569"];
m0_554 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="byte[] emptyData = new byte[0]", span="572-572"];
m0_556 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsFalse(JToken.DeepEquals(new JValue(emptyData), (JValue)new byte[1]))", span="574-574"];
m0_553 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Assert.IsFalse(JToken.DeepEquals(JValue.CreateNull(), (JValue)(object)null))", span="570-570"];
m0_565 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", span="520-520"];
m0_119 [cluster="System.Action.Invoke()", file="JTokenTests.cs", label="Entry System.Action.Invoke()", span="0-0"];
m0_789 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", span="987-987"];
m0_799 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(int.MaxValue, new JArray(''Test''), int.MaxValue, new JArray(1, 2, 3)), a))", span="1008-1008"];
m0_790 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenTests.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="989-995"];
m0_798 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenTests.cs", label="Assert.AreEqual(4, a.Count())", span="1006-1006"];
m0_791 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenTests.cs", label="a[0].Replace(new JValue(int.MaxValue))", span="997-997"];
m0_796 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenTests.cs", label="a[2].Replace(new JValue(int.MaxValue))", span="1004-1004"];
m0_794 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenTests.cs", label="a[1][0].Replace(new JValue(''Test''))", span="1001-1001"];
m0_792 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenTests.cs", label="Assert.AreEqual(int.MaxValue, (int)a[0])", span="998-998"];
m0_793 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenTests.cs", label="Assert.AreEqual(4, a.Count())", span="999-999"];
m0_795 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenTests.cs", label="Assert.AreEqual(''Test'', (string)a[1][0])", span="1002-1002"];
m0_797 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenTests.cs", label="Assert.AreEqual(int.MaxValue, (int)a[2])", span="1005-1005"];
m0_800 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", span="987-987"];
m0_913 [cluster="Newtonsoft.Json.Linq.JToken.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", span="2180-2180"];
m0_80 [cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor(string)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor(string)", span="126-126"];
m0_82 [cluster="System.DateTime.DateTime(int, int, int)", file="JTokenTests.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m0_38 [cluster="System.IO.StringReader.StringReader(string)", file="JTokenTests.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m0_39 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="2093-2093"];
m0_40 [cluster="Unk.AreEqual", file="JTokenTests.cs", label="Entry Unk.AreEqual", span=""];
m0_87 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="324-324"];
m0_849 [cluster="Newtonsoft.Json.Linq.JToken.AddBeforeSelf(object)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.AddBeforeSelf(object)", span="253-253"];
m0_331 [cluster="Unk.>", file="JTokenTests.cs", label="Entry Unk.>", span=""];
m0_284 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", span="403-403"];
m0_286 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)new JValue(1); }, ''Can not convert Integer to DateTime.'')", span="406-406"];
m0_294 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(1); }, ''Can not convert Integer to Uri.'')", span="415-415"];
m0_302 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)new JValue(1); }, ''Can not convert Integer to TimeSpan.'')", span="426-426"];
m0_311 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Guid)new JValue(1); }, ''Can not convert Integer to Guid.'')", span="438-438"];
m0_299 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(DateTime.Now); }, ''Can not convert Date to Uri.'')", span="420-420"];
m0_307 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)new JValue(DateTime.Now); }, ''Can not convert Date to TimeSpan.'')", span="431-431"];
m0_315 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Guid)new JValue(DateTime.Now); }, ''Can not convert Date to Guid.'')", span="442-442"];
m0_325 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (sbyte?)new JValue(DateTime.Now); }, ''Can not convert Date to SByte.'')", span="461-461"];
m0_326 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (sbyte)new JValue(DateTime.Now); }, ''Can not convert Date to SByte.'')", span="462-462"];
m0_300 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(DateTimeOffset.Now); }, ''Can not convert Date to Uri.'')", span="422-422"];
m0_308 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)new JValue(DateTimeOffset.Now); }, ''Can not convert Date to TimeSpan.'')", span="433-433"];
m0_316 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Guid)new JValue(DateTimeOffset.Now); }, ''Can not convert Date to Guid.'')", span="444-444"];
m0_285 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)new JValue(true); }, ''Can not convert Boolean to DateTime.'')", span="405-405"];
m0_293 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(true); }, ''Can not convert Boolean to Uri.'')", span="414-414"];
m0_301 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)new JValue(true); }, ''Can not convert Boolean to TimeSpan.'')", span="425-425"];
m0_310 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Guid)new JValue(true); }, ''Can not convert Boolean to Guid.'')", span="437-437"];
m0_319 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTimeOffset)new JValue(true); }, ''Can not convert Boolean to DateTimeOffset.'')", span="450-450"];
m0_320 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(true); }, ''Can not convert Boolean to Uri.'')", span="452-452"];
m0_287 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)new JValue(1.1); }, ''Can not convert Float to DateTime.'')", span="407-407"];
m0_295 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(1.1); }, ''Can not convert Float to Uri.'')", span="416-416"];
m0_303 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)new JValue(1.1); }, ''Can not convert Float to TimeSpan.'')", span="427-427"];
m0_312 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Guid)new JValue(1.1); }, ''Can not convert Float to Guid.'')", span="439-439"];
m0_327 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (new JValue(''Ordinal1'')).ToObject<StringComparison>(); }, ''Could not convert 'Ordinal1' to StringComparison.'')", span="464-464"];
m0_328 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (new JValue(''Ordinal1'')).ToObject<StringComparison?>(); }, ''Could not convert 'Ordinal1' to StringComparison.'')", span="465-465"];
m0_288 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)new JValue(1.1m); }, ''Can not convert Float to DateTime.'')", span="408-408"];
m0_296 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(1.1m); }, ''Can not convert Float to Uri.'')", span="417-417"];
m0_304 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)new JValue(1.1m); }, ''Can not convert Float to TimeSpan.'')", span="428-428"];
m0_313 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Guid)new JValue(1.1m); }, ''Can not convert Float to Guid.'')", span="440-440"];
m0_291 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)JValue.CreateNull(); }, ''Can not convert Null to DateTime.'')", span="411-411"];
m0_305 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)JValue.CreateNull(); }, ''Can not convert Null to TimeSpan.'')", span="429-429"];
m0_314 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Guid)JValue.CreateNull(); }, ''Can not convert Null to Guid.'')", span="441-441"];
m0_322 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (JValue.CreateNull()).ToObject<BigInteger>(); }, ''Can not convert Null to BigInteger.'')", span="456-456"];
m0_289 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)new JValue(TimeSpan.Zero); }, ''Can not convert TimeSpan to DateTime.'')", span="409-409"];
m0_297 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(TimeSpan.Zero); }, ''Can not convert TimeSpan to Uri.'')", span="418-418"];
m0_317 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Guid)new JValue(TimeSpan.FromMinutes(1)); }, ''Can not convert TimeSpan to Guid.'')", span="446-446"];
m0_292 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)new JValue(Guid.NewGuid()); }, ''Can not convert Guid to DateTime.'')", span="412-412"];
m0_298 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(Guid.NewGuid()); }, ''Can not convert Guid to Uri.'')", span="419-419"];
m0_306 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)new JValue(Guid.NewGuid()); }, ''Can not convert Guid to TimeSpan.'')", span="430-430"];
m0_323 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (new JValue(Guid.NewGuid())).ToObject<BigInteger>(); }, ''Can not convert Guid to BigInteger.'')", span="457-457"];
m0_324 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (new JValue(Guid.NewGuid())).ToObject<BigInteger?>(); }, ''Can not convert Guid to BigInteger.'')", span="458-458"];
m0_290 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)new JValue(new Uri(''http://www.google.com'')); }, ''Can not convert Uri to DateTime.'')", span="410-410"];
m0_309 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)new JValue(new Uri(''http://www.google.com'')); }, ''Can not convert Uri to TimeSpan.'')", span="435-435"];
m0_318 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (Guid)new JValue(new Uri(''http://www.google.com'')); }, ''Can not convert Uri to Guid.'')", span="447-447"];
m0_321 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (new JValue(new Uri(''http://www.google.com''))).ToObject<BigInteger>(); }, ''Can not convert Uri to BigInteger.'')", span="455-455"];
m0_329 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", span="403-403"];
m0_281 [cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToObject<T>()", span="1929-1929"];
m0_85 [cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object, string)", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object, string)", span="309-309"];
m0_261 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(object)", span="190-190"];
m0_48 [cluster="string.Replace(string, string)", file="JTokenTests.cs", label="Entry string.Replace(string, string)", span="0-0"];
m0_813 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", span="1031-1031"];
m0_814 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", file="JTokenTests.cs", label="JArray a =\r\n                new JArray(\r\n                    new JValue(new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc))\r\n                    )", span="1033-1036"];
m0_816 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", file="JTokenTests.cs", label="Assert.AreEqual(@''[''''2009-02-15T00:00:00Z'''']'', json)", span="1040-1040"];
m0_815 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", file="JTokenTests.cs", label="string json = a.ToString(Formatting.None, new IsoDateTimeConverter())", span="1038-1038"];
m0_817 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", span="1031-1031"];
m0_91 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="324-324"];
m0_99 [cluster="string.Equals(string, string)", file="JTokenTests.cs", label="Entry string.Equals(string, string)", span="0-0"];
m0_93 [cluster="Unk.AreEqual", file="JTokenTests.cs", label="Entry Unk.AreEqual", span=""];
m0_92 [cluster="Newtonsoft.Json.Tests.StringAssert.Normalize(string)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.Normalize(string)", span="340-340"];
m0_100 [cluster="Newtonsoft.Json.Tests.StringAssert.Normalize(string)", file="JTokenTests.cs", label="s != null", span="342-342"];
m0_101 [cluster="Newtonsoft.Json.Tests.StringAssert.Normalize(string)", file="JTokenTests.cs", label="s = Regex.Replace(s, ''\r\n'')", span="344-344"];
m0_903 [cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.SelectToken(string)", span="2297-2297"];
m0_4 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DeepEqualsObjectOrder()", color=green, community=0, file="JTokenTests.cs", label="2: JObject j2 = JObject.Parse(ob2)", span="65-65"];
m0_5 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DeepEqualsObjectOrder()", color=green, community=0, file="JTokenTests.cs", label="0: Assert.IsTrue(j1.DeepEquals(j2))", span="66-66"];
m0_6 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DeepEqualsObjectOrder()", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.DeepEqualsObjectOrder()", span="59-59"];
m0_509 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", span="1939-1939"];
m0_103 [cluster="Newtonsoft.Json.Tests.StringAssert.Normalize(string)", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.StringAssert.Normalize(string)", span="340-340"];
m0_106 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JTokenTests.cs", label="action()", span="358-358"];
m0_105 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="353-353"];
m0_107 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JTokenTests.cs", label="Assert.Fail(''Exception of type {0} expected. No exception thrown.'', typeof(TException).Name)", span="360-360"];
m0_108 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JTokenTests.cs", label="return null;", span="361-361"];
m0_109 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JTokenTests.cs", label=TException, span="363-363"];
m0_110 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JTokenTests.cs", label="possibleMessages == null || possibleMessages.Length == 0", span="365-365"];
m0_111 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JTokenTests.cs", label="return ex;", span="367-367"];
m0_112 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JTokenTests.cs", label=possibleMessages, span="369-369"];
m0_113 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JTokenTests.cs", label="StringAssert.Equals(possibleMessage, ex.Message)", span="371-371"];
m0_267 [cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="154-154"];
m0_741 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="912-912"];
m0_706 [cluster="Newtonsoft.Json.Linq.JContainer.DescendantsAndSelf()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JContainer.DescendantsAndSelf()", span="298-298"];
m0_802 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", span="1012-1012"];
m0_803 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", file="JTokenTests.cs", label="JArray a =\r\n                new JArray(\r\n                    new JValue(new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc))\r\n                    )", span="1014-1017"];
m0_807 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", file="JTokenTests.cs", label="Assert.AreEqual(@''[''''2009-02-15T00:00:00Z'''']'', json)", span="1027-1027"];
m0_804 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", file="JTokenTests.cs", label="string json = a.ToString(Formatting.Indented, new IsoDateTimeConverter())", span="1019-1019"];
m0_806 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", file="JTokenTests.cs", label="json = JsonConvert.SerializeObject(a, new IsoDateTimeConverter())", span="1025-1025"];
m0_805 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", file="JTokenTests.cs", label="StringAssert.AreEqual(@''[\r\n  ''''2009-02-15T00:00:00Z''''\r\n]'', json)", span="1021-1023"];
m0_808 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", span="1012-1012"];
m0_273 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", span="172-172"];
m0_743 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="456-456"];
m0_114 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JTokenTests.cs", label="return ex;", span="373-373"];
m0_115 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JTokenTests.cs", label="throw new Exception(''Unexpected exception message.'' + Environment.NewLine + ''Expected one of: '' + string.Join(Environment.NewLine, possibleMessages) + Environment.NewLine + ''Got: '' + ex.Message + Environment.NewLine + Environment.NewLine + ex);", span="377-377"];
m0_116 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JTokenTests.cs", label=Exception, span="379-379"];
m0_117 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JTokenTests.cs", label="throw new Exception(string.Format(''Exception of type {0} expected; got exception of type {1}.'', typeof(TException).Name, ex.GetType().Name), ex);", span="381-381"];
m0_118 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="353-353"];
m0_277 [cluster="Unk.AreEquivalent", file="JTokenTests.cs", label="Entry Unk.AreEquivalent", span=""];
m0_637 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", span="730-730"];
m0_638 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="JTokenTests.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="732-738"];
m0_646 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="JTokenTests.cs", label="Assert.AreEqual(a[1], ancestors[1])", span="753-753"];
m0_647 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="JTokenTests.cs", label="Assert.AreEqual(a, ancestors[2])", span="754-754"];
m0_649 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="JTokenTests.cs", label="Assert.AreEqual(o.Property(''prop1''), ancestors[4])", span="756-756"];
m0_650 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="JTokenTests.cs", label="Assert.AreEqual(o, ancestors[5])", span="757-757"];
m0_645 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="JTokenTests.cs", label="Assert.AreEqual(t1, ancestors[0])", span="752-752"];
m0_648 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="JTokenTests.cs", label="Assert.AreEqual(t2, ancestors[3])", span="755-755"];
m0_644 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="JTokenTests.cs", label="Assert.AreEqual(6, ancestors.Count())", span="751-751"];
m0_639 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="JTokenTests.cs", label="JObject o = new JObject\r\n            {\r\n                { ''prop1'', ''value1'' }\r\n            }", span="740-743"];
m0_640 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="JTokenTests.cs", label="JToken t1 = a[1][0]", span="745-745"];
m0_643 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="JTokenTests.cs", label="List<JToken> ancestors = source.AncestorsAndSelf().ToList()", span="750-750"];
m0_641 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="JTokenTests.cs", label="JToken t2 = o[''prop1'']", span="746-746"];
m0_642 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="JTokenTests.cs", label="List<JToken> source = new List<JToken> { t1, t2 }", span="748-748"];
m0_651 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", span="730-730"];
m0_740 [cluster="Unk.IsNotNull", file="JTokenTests.cs", label="Entry Unk.IsNotNull", span=""];
m0_262 [cluster="Newtonsoft.Json.Linq.JValue.JValue(bool)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(bool)", span="145-145"];
m0_258 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JTokenTests.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m0_0 [cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetConstructors(System.Type)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.TestReflectionUtils.GetConstructors(System.Type)", span="61-61"];
m0_1 [cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetConstructors(System.Type)", color=green, community=0, file="JTokenTests.cs", label="0: return type.GetConstructors();", span="64-64"];
m0_2 [cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetConstructors(System.Type)", color=green, community=0, file="JTokenTests.cs", label="0: Exit Newtonsoft.Json.Tests.TestReflectionUtils.GetConstructors(System.Type)", span="61-61"];
m0_811 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="340-340"];
m0_879 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="1204-1213"];
m0_336 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (DateTime)new JValue(1)", span="406-406"];
m0_361 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (Uri)new JValue(1)", span="415-415"];
m0_385 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (TimeSpan)new JValue(1)", span="426-426"];
m0_412 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (Guid)new JValue(1)", span="438-438"];
m0_376 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (Uri)new JValue(DateTime.Now)", span="420-420"];
m0_400 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (TimeSpan)new JValue(DateTime.Now)", span="431-431"];
m0_424 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (Guid)new JValue(DateTime.Now)", span="442-442"];
m0_454 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (sbyte?)new JValue(DateTime.Now)", span="461-461"];
m0_457 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (sbyte)new JValue(DateTime.Now)", span="462-462"];
m0_379 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (Uri)new JValue(DateTimeOffset.Now)", span="422-422"];
m0_403 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (TimeSpan)new JValue(DateTimeOffset.Now)", span="433-433"];
m0_427 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (Guid)new JValue(DateTimeOffset.Now)", span="444-444"];
m0_333 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (DateTime)new JValue(true)", span="405-405"];
m0_358 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (Uri)new JValue(true)", span="414-414"];
m0_382 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (TimeSpan)new JValue(true)", span="425-425"];
m0_409 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (Guid)new JValue(true)", span="437-437"];
m0_436 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (DateTimeOffset)new JValue(true)", span="450-450"];
m0_439 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (Uri)new JValue(true)", span="452-452"];
m0_339 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (DateTime)new JValue(1.1)", span="407-407"];
m0_364 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (Uri)new JValue(1.1)", span="416-416"];
m0_388 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (TimeSpan)new JValue(1.1)", span="427-427"];
m0_415 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (Guid)new JValue(1.1)", span="439-439"];
m0_460 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (new JValue(''Ordinal1'')).ToObject<StringComparison>()", span="464-464"];
m0_463 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (new JValue(''Ordinal1'')).ToObject<StringComparison?>()", span="465-465"];
m0_342 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (DateTime)new JValue(1.1m)", span="408-408"];
m0_367 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (Uri)new JValue(1.1m)", span="417-417"];
m0_391 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (TimeSpan)new JValue(1.1m)", span="428-428"];
m0_418 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (Guid)new JValue(1.1m)", span="440-440"];
m0_351 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (DateTime)JValue.CreateNull()", span="411-411"];
m0_394 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (TimeSpan)JValue.CreateNull()", span="429-429"];
m0_421 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (Guid)JValue.CreateNull()", span="441-441"];
m0_445 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (JValue.CreateNull()).ToObject<BigInteger>()", span="456-456"];
m0_345 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (DateTime)new JValue(TimeSpan.Zero)", span="409-409"];
m0_370 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (Uri)new JValue(TimeSpan.Zero)", span="418-418"];
m0_430 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (Guid)new JValue(TimeSpan.FromMinutes(1))", span="446-446"];
m0_354 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (DateTime)new JValue(Guid.NewGuid())", span="412-412"];
m0_373 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (Uri)new JValue(Guid.NewGuid())", span="419-419"];
m0_397 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (TimeSpan)new JValue(Guid.NewGuid())", span="430-430"];
m0_448 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (new JValue(Guid.NewGuid())).ToObject<BigInteger>()", span="457-457"];
m0_451 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (new JValue(Guid.NewGuid())).ToObject<BigInteger?>()", span="458-458"];
m0_348 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (DateTime)new JValue(new Uri(''http://www.google.com''))", span="410-410"];
m0_406 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (TimeSpan)new JValue(new Uri(''http://www.google.com''))", span="435-435"];
m0_433 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (Guid)new JValue(new Uri(''http://www.google.com''))", span="447-447"];
m0_442 [cluster="lambda expression", file="JTokenTests.cs", label="var i = (new JValue(new Uri(''http://www.google.com''))).ToObject<BigInteger>()", span="455-455"];
m0_335 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="406-406"];
m0_337 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="406-406"];
m0_360 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="415-415"];
m0_362 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="415-415"];
m0_384 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="426-426"];
m0_386 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="426-426"];
m0_411 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="438-438"];
m0_413 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="438-438"];
m0_375 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="420-420"];
m0_377 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="420-420"];
m0_399 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="431-431"];
m0_401 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="431-431"];
m0_423 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="442-442"];
m0_425 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="442-442"];
m0_453 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="461-461"];
m0_455 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="461-461"];
m0_456 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="462-462"];
m0_458 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="462-462"];
m0_378 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="422-422"];
m0_380 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="422-422"];
m0_402 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="433-433"];
m0_404 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="433-433"];
m0_426 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="444-444"];
m0_428 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="444-444"];
m0_332 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="405-405"];
m0_334 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="405-405"];
m0_357 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="414-414"];
m0_359 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="414-414"];
m0_381 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="425-425"];
m0_383 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="425-425"];
m0_408 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="437-437"];
m0_410 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="437-437"];
m0_435 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="450-450"];
m0_437 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="450-450"];
m0_438 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="452-452"];
m0_440 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="452-452"];
m0_338 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="407-407"];
m0_340 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="407-407"];
m0_363 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="416-416"];
m0_365 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="416-416"];
m0_387 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="427-427"];
m0_389 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="427-427"];
m0_414 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="439-439"];
m0_416 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="439-439"];
m0_459 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="464-464"];
m0_461 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="464-464"];
m0_462 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="465-465"];
m0_464 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="465-465"];
m0_341 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="408-408"];
m0_343 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="408-408"];
m0_366 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="417-417"];
m0_368 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="417-417"];
m0_390 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="428-428"];
m0_392 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="428-428"];
m0_417 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="440-440"];
m0_419 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="440-440"];
m0_350 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="411-411"];
m0_352 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="411-411"];
m0_393 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="429-429"];
m0_395 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="429-429"];
m0_420 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="441-441"];
m0_422 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="441-441"];
m0_444 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="456-456"];
m0_446 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="456-456"];
m0_344 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="409-409"];
m0_346 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="409-409"];
m0_369 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="418-418"];
m0_371 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="418-418"];
m0_429 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="446-446"];
m0_431 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="446-446"];
m0_353 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="412-412"];
m0_355 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="412-412"];
m0_372 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="419-419"];
m0_374 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="419-419"];
m0_396 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="430-430"];
m0_398 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="430-430"];
m0_447 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="457-457"];
m0_449 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="457-457"];
m0_450 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="458-458"];
m0_452 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="458-458"];
m0_347 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="410-410"];
m0_349 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="410-410"];
m0_405 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="435-435"];
m0_407 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="435-435"];
m0_432 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="447-447"];
m0_434 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="447-447"];
m0_441 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="455-455"];
m0_443 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="455-455"];
m0_785 [cluster="lambda expression", file="JTokenTests.cs", label="JObject o = new JObject()", span="981-981"];
m0_881 [cluster="lambda expression", file="JTokenTests.cs", label="JToken.Parse(json)", span="1212-1212"];
m0_784 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="979-983"];
m0_786 [cluster="lambda expression", file="JTokenTests.cs", label="o.Add(5)", span="982-982"];
m0_880 [cluster="lambda expression", file="JTokenTests.cs", label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n],''", span="1206-1210"];
m0_882 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="1204-1213"];
m0_774 [cluster="lambda expression", file="JTokenTests.cs", label="Entry lambda expression", span="969-973"];
m0_787 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="979-983"];
m0_775 [cluster="lambda expression", file="JTokenTests.cs", label="JArray a = new JArray()", span="971-971"];
m0_776 [cluster="lambda expression", file="JTokenTests.cs", label="a.Add(new JProperty(''PropertyName''))", span="972-972"];
m0_777 [cluster="lambda expression", file="JTokenTests.cs", label="Exit lambda expression", span="969-973"];
m0_47 [cluster="System.BitConverter.ToString(byte[])", file="JTokenTests.cs", label="Entry System.BitConverter.ToString(byte[])", span="0-0"];
m0_636 [cluster="Newtonsoft.Json.Linq.JToken.AncestorsAndSelf()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.AncestorsAndSelf()", span="277-277"];
m0_680 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", span="810-810"];
m0_687 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2, 3), descendants[descendants.Count - 6]))", span="830-830"];
m0_684 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="JTokenTests.cs", label="List<JToken> descendants = source.Descendants().ToList()", span="827-827"];
m0_686 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="JTokenTests.cs", label="Assert.AreEqual(5, (int)descendants[0])", span="829-829"];
m0_688 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="JTokenTests.cs", label="Assert.AreEqual(1, (int)descendants[descendants.Count - 5])", span="831-831"];
m0_681 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="JTokenTests.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="812-818"];
m0_683 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="JTokenTests.cs", label="List<JContainer> source = new List<JContainer> { a, o }", span="825-825"];
m0_685 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="JTokenTests.cs", label="Assert.AreEqual(12, descendants.Count())", span="828-828"];
m0_689 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="JTokenTests.cs", label="Assert.AreEqual(2, (int)descendants[descendants.Count - 4])", span="832-832"];
m0_690 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="JTokenTests.cs", label="Assert.AreEqual(3, (int)descendants[descendants.Count - 3])", span="833-833"];
m0_691 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="JTokenTests.cs", label="Assert.AreEqual(o.Property(''prop1''), descendants[descendants.Count - 2])", span="834-834"];
m0_692 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="JTokenTests.cs", label="Assert.AreEqual(o[''prop1''], descendants[descendants.Count - 1])", span="835-835"];
m0_682 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="JTokenTests.cs", label="JObject o = new JObject\r\n            {\r\n                { ''prop1'', ''value1'' }\r\n            }", span="820-823"];
m0_693 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants_Many()", span="810-810"];
m0_778 [cluster="Newtonsoft.Json.Linq.JArray.JArray()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray()", span="65-65"];
m0_8 [cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetField(System.Type, string)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.TestReflectionUtils.GetField(System.Type, string)", span="79-79"];
m0_605 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JTokenTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m0_742 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="406-406"];
m0_140 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (long?)new JValue((long?)null))", span="266-266"];
m0_573 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", span="603-603"];
m0_580 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(9, 10), a[1]))", span="621-621"];
m0_575 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    6,\r\n                    new JArray(7, 8),\r\n                    new JArray(9, 10)\r\n                    )", span="606-612"];
m0_579 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs", label="Assert.AreEqual(6, (int)a[0])", span="620-620"];
m0_581 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs", label="Assert.AreEqual(2, a.Count())", span="622-622"];
m0_574 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs", label="JToken t", span="605-605"];
m0_576 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs", label="a[0].Remove()", span="614-614"];
m0_577 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs", label="Assert.AreEqual(6, (int)a[0])", span="616-616"];
m0_578 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs", label="a[1].Remove()", span="618-618"];
m0_582 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs", label="t = a[1]", span="624-624"];
m0_584 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs", label="Assert.AreEqual(6, (int)a[0])", span="626-626"];
m0_588 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs", label="t = a[0]", span="631-631"];
m0_590 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs", label="Assert.AreEqual(0, a.Count())", span="633-633"];
m0_583 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs", label="t.Remove()", span="625-625"];
m0_585 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs", label="Assert.IsNull(t.Next)", span="627-627"];
m0_586 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs", label="Assert.IsNull(t.Previous)", span="628-628"];
m0_587 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs", label="Assert.IsNull(t.Parent)", span="629-629"];
m0_589 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs", label="t.Remove()", span="632-632"];
m0_591 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs", label="Assert.IsNull(t.Next)", span="635-635"];
m0_592 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs", label="Assert.IsNull(t.Previous)", span="636-636"];
m0_593 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs", label="Assert.IsNull(t.Parent)", span="637-637"];
m0_594 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", span="603-603"];
m0_510 [cluster="Newtonsoft.Json.Linq.JValue.JValue(char)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(char)", span="88-88"];
m0_606 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", span="660-660"];
m0_611 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(5), beforeTokens[0]))", span="674-674"];
m0_612 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(1), beforeTokens[1]))", span="675-675"];
m0_609 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenTests.cs", label="List<JToken> beforeTokens = t.BeforeSelf().ToList()", span="671-671"];
m0_610 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenTests.cs", label="Assert.AreEqual(2, beforeTokens.Count)", span="673-673"];
m0_607 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenTests.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="662-668"];
m0_608 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenTests.cs", label="JToken t = a[2]", span="670-670"];
m0_613 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", span="660-660"];
m0_801 [cluster="Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)", span="407-407"];
m0_707 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", span="860-860"];
m0_715 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2, 3), descendantsAndSelf[descendantsAndSelf.Count - 7]))", span="881-881"];
m0_711 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="JTokenTests.cs", label="List<JToken> descendantsAndSelf = source.DescendantsAndSelf().ToList()", span="877-877"];
m0_714 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="JTokenTests.cs", label="Assert.AreEqual(5, (int)descendantsAndSelf[1])", span="880-880"];
m0_716 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="JTokenTests.cs", label="Assert.AreEqual(1, (int)descendantsAndSelf[descendantsAndSelf.Count - 6])", span="882-882"];
m0_708 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="JTokenTests.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="862-868"];
m0_710 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="JTokenTests.cs", label="List<JContainer> source = new List<JContainer> { a, o }", span="875-875"];
m0_712 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="JTokenTests.cs", label="Assert.AreEqual(14, descendantsAndSelf.Count())", span="878-878"];
m0_713 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="JTokenTests.cs", label="Assert.AreEqual(a, descendantsAndSelf[0])", span="879-879"];
m0_717 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="JTokenTests.cs", label="Assert.AreEqual(2, (int)descendantsAndSelf[descendantsAndSelf.Count - 5])", span="883-883"];
m0_718 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="JTokenTests.cs", label="Assert.AreEqual(3, (int)descendantsAndSelf[descendantsAndSelf.Count - 4])", span="884-884"];
m0_719 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="JTokenTests.cs", label="Assert.AreEqual(o, descendantsAndSelf[descendantsAndSelf.Count - 3])", span="885-885"];
m0_720 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="JTokenTests.cs", label="Assert.AreEqual(o.Property(''prop1''), descendantsAndSelf[descendantsAndSelf.Count - 2])", span="886-886"];
m0_721 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="JTokenTests.cs", label="Assert.AreEqual(o[''prop1''], descendantsAndSelf[descendantsAndSelf.Count - 1])", span="887-887"];
m0_709 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="JTokenTests.cs", label="JObject o = new JObject\r\n            {\r\n                { ''prop1'', ''value1'' }\r\n            }", span="870-873"];
m0_722 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.DescendantsAndSelf_Many()", span="860-860"];
m0_264 [cluster="Newtonsoft.Json.Linq.JValue.JValue(double)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(double)", span="107-107"];
m0_653 [cluster="System.Collections.Generic.List<T>.List()", file="JTokenTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m0_857 [cluster="Newtonsoft.Json.Linq.JToken.DeepClone()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepClone()", span="2391-2391"];
m0_912 [cluster="Newtonsoft.Json.Linq.JsonLoadSettings.JsonLoadSettings()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JsonLoadSettings.JsonLoadSettings()", span="7-7"];
m0_49 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Load()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Load()", span="114-114"];
m0_50 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Load()", file="JTokenTests.cs", label="JObject o = (JObject)JToken.Load(new JsonTextReader(new StringReader(''{'pie':true}'')))", span="116-116"];
m0_51 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Load()", file="JTokenTests.cs", label="Assert.AreEqual(true, (bool)o[''pie''])", span="117-117"];
m0_54 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Parse()", span="121-121"];
m0_52 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Load()", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Load()", span="114-114"];
m0_55 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse()", file="JTokenTests.cs", label="JObject o = (JObject)JToken.Parse(''{'pie':true}'')", span="123-123"];
m0_56 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse()", file="JTokenTests.cs", label="Assert.AreEqual(true, (bool)o[''pie''])", span="124-124"];
m0_57 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse()", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Parse()", span="121-121"];
m0_282 [cluster="BigInteger.cstr", file="JTokenTests.cs", label="Entry BigInteger.cstr", span=""];
m0_596 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", span="641-641"];
m0_601 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2), afterTokens[0]))", span="655-655"];
m0_602 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2, 3), afterTokens[1]))", span="656-656"];
m0_599 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenTests.cs", label="List<JToken> afterTokens = t.AfterSelf().ToList()", span="652-652"];
m0_600 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenTests.cs", label="Assert.AreEqual(2, afterTokens.Count)", span="654-654"];
m0_597 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenTests.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="643-649"];
m0_598 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenTests.cs", label="JToken t = a[1]", span="651-651"];
m0_603 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", span="641-641"];
m0_618 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", span="693-693"];
m0_619 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenTests.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="695-701"];
m0_623 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenTests.cs", label="Assert.AreEqual(a[1], ancestors[0])", span="706-706"];
m0_624 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenTests.cs", label="Assert.AreEqual(a, ancestors[1])", span="707-707"];
m0_622 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenTests.cs", label="Assert.AreEqual(2, ancestors.Count())", span="705-705"];
m0_620 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenTests.cs", label="JToken t = a[1][0]", span="703-703"];
m0_621 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenTests.cs", label="List<JToken> ancestors = t.Ancestors().ToList()", span="704-704"];
m0_625 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", span="693-693"];
m0_278 [cluster="System.Guid.ToByteArray()", file="JTokenTests.cs", label="Entry System.Guid.ToByteArray()", span="0-0"];
m0_875 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="195-195"];
m0_788 [cluster="Newtonsoft.Json.Linq.JContainer.Add(object)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Add(object)", span="658-658"];
m0_865 [cluster="System.ICloneable.Clone()", file="JTokenTests.cs", label="Entry System.ICloneable.Clone()", span="0-0"];
m0_812 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JTokenTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="551-551"];
m0_167 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(uint.MaxValue, (uint)new JValue(uint.MaxValue))", span="293-293"];
m0_171 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(5m, (decimal)(new JValue(5L)))", span="297-297"];
m0_172 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(5m, (decimal?)(new JValue(5L)))", span="298-298"];
m0_173 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(5f, (float)(new JValue(5L)))", span="299-299"];
m0_176 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(5, (byte)(new JValue(5)))", span="302-302"];
m0_177 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(SByte.MinValue, (sbyte?)(new JValue(SByte.MinValue)))", span="303-303"];
m0_178 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(SByte.MinValue, (sbyte)(new JValue(SByte.MinValue)))", span="304-304"];
m0_180 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(''1'', (string)(new JValue(1)))", span="308-308"];
m0_188 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(true, (bool)(new JValue(1)))", span="318-318"];
m0_192 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(1, (int)(new JValue(1)))", span="322-322"];
m0_196 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(1m, (decimal)(new JValue(1)))", span="326-326"];
m0_241 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(new BigInteger(long.MaxValue), (new JValue(long.MaxValue)).ToObject<BigInteger>())", span="380-380"];
m0_244 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(new BigInteger(byte.MaxValue), (new JValue(byte.MaxValue)).ToObject<BigInteger>())", span="383-383"];
m0_245 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(new BigInteger(123), (new JValue(123)).ToObject<BigInteger>())", span="384-384"];
m0_246 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(new BigInteger(123), (new JValue(123)).ToObject<BigInteger?>())", span="385-385"];
m0_186 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(''12/12/2000 12:12:12'', (string)(new JValue(new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc))))", span="314-314"];
m0_187 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(''12/12/2000 12:12:12 +00:00'', (string)(new JValue(new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero))))", span="316-316"];
m0_142 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (int?)new JValue((int?)null))", span="268-268"];
m0_144 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (DateTime?)new JValue((DateTime?)null))", span="270-270"];
m0_146 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (short?)new JValue((short?)null))", span="272-272"];
m0_148 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (float?)new JValue((float?)null))", span="274-274"];
m0_150 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (double?)new JValue((double?)null))", span="276-276"];
m0_152 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (decimal?)new JValue((decimal?)null))", span="278-278"];
m0_154 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (uint?)new JValue((uint?)null))", span="280-280"];
m0_156 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (sbyte?)new JValue((sbyte?)null))", span="282-282"];
m0_158 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (byte?)new JValue((byte?)null))", span="284-284"];
m0_160 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (ulong?)new JValue((ulong?)null))", span="286-286"];
m0_162 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (uint?)new JValue((uint?)null))", span="288-288"];
m0_210 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(Convert.ToBase64String(Encoding.UTF8.GetBytes(''hi'')), (string)(new JValue(Encoding.UTF8.GetBytes(''hi''))))", span="340-340"];
m0_212 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC''), (Guid)(new JValue(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC'').ToByteArray())))", span="342-342"];
m0_213 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC''), (Guid?)(new JValue(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC'').ToByteArray())))", span="343-343"];
m0_214 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual((sbyte?)1, (sbyte?)(new JValue((short?)1)))", span="344-344"];
m0_236 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(data, (byte[])(new JValue(data)))", span="370-370"];
m0_237 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(5, (int)(new JValue(StringComparison.OrdinalIgnoreCase)))", span="372-372"];
m0_249 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(BigInteger.Parse(bigIntegerText), (new JValue(intData)).ToObject<BigInteger>())", span="389-389"];
m0_239 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(BigInteger.Parse(bigIntegerText), (new JValue(BigInteger.Parse(bigIntegerText))).Value)", span="377-377"];
m0_250 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(4.0d, (double)(new JValue(new BigInteger(4.5d))))", span="391-391"];
m0_251 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(true, (bool)(new JValue(new BigInteger(1))))", span="392-392"];
m0_252 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(long.MaxValue, (long)(new JValue(new BigInteger(long.MaxValue))))", span="393-393"];
m0_253 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(long.MaxValue, (long)(new JValue(new BigInteger(new byte[] { 255, 255, 255, 255, 255, 255, 255, 127 }))))", span="394-394"];
m0_254 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(''9223372036854775807'', (string)(new JValue(new BigInteger(long.MaxValue))))", span="395-395"];
m0_255 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="intData = (byte[])(new JValue(new BigInteger(long.MaxValue)))", span="397-397"];
m0_242 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(new BigInteger(4.5d), (new JValue((4.5d))).ToObject<BigInteger>())", span="381-381"];
m0_243 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(new BigInteger(4.5f), (new JValue((4.5f))).ToObject<BigInteger>())", span="382-382"];
m0_183 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(''True'', (string)(new JValue(true)))", span="311-311"];
m0_191 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(true, (bool)(new JValue(true)))", span="321-321"];
m0_195 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(1, (int)(new JValue(true)))", span="325-325"];
m0_199 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(1m, (decimal)(new JValue(true)))", span="329-329"];
m0_165 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(float.MinValue, (float)new JValue(float.MinValue))", span="291-291"];
m0_164 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(11.1f, (float)new JValue(11.1))", span="290-290"];
m0_166 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(1.1, (double)new JValue(1.1))", span="292-292"];
m0_181 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(''1'', (string)(new JValue(1.0)))", span="309-309"];
m0_189 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(true, (bool)(new JValue(1.0)))", span="319-319"];
m0_193 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(1, (int)(new JValue(1.0)))", span="323-323"];
m0_197 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(1m, (decimal)(new JValue(1.0)))", span="327-327"];
m0_168 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(ulong.MaxValue, (ulong)new JValue(ulong.MaxValue))", span="294-294"];
m0_169 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(ulong.MaxValue, (ulong)new JProperty(''Test'', new JValue(ulong.MaxValue)))", span="295-295"];
m0_170 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (string)new JValue((string)null))", span="296-296"];
m0_190 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(true, (bool)(new JValue(''true'')))", span="320-320"];
m0_194 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(1, (int)(new JValue(''1'')))", span="324-324"];
m0_198 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(1m, (decimal)(new JValue(''1'')))", span="328-328"];
m0_202 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(TimeSpan.FromMinutes(1), (TimeSpan)(new JValue(''00:01:00'')))", span="332-332"];
m0_205 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC''), (Guid)(new JValue(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC'')))", span="335-335"];
m0_207 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(new Uri(''http://www.google.com''), (Uri)(new JValue(''http://www.google.com'')))", span="337-337"];
m0_211 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="CollectionAssert.AreEquivalent((byte[])Encoding.UTF8.GetBytes(''hi''), (byte[])(new JValue(Convert.ToBase64String(Encoding.UTF8.GetBytes(''hi'')))))", span="341-341"];
m0_240 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(BigInteger.Parse(bigIntegerText), (new JValue(bigIntegerText)).ToObject<BigInteger>())", span="379-379"];
m0_174 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(5f, (float)(new JValue(5m)))", span="300-300"];
m0_175 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(5f, (float?)(new JValue(5m)))", span="301-301"];
m0_182 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(''1.0'', (string)(new JValue(1.0m)))", span="310-310"];
m0_179 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (sbyte?)JValue.CreateNull())", span="306-306"];
m0_184 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (string)(JValue.CreateNull()))", span="312-312"];
m0_209 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (Uri)(JValue.CreateNull()))", span="339-339"];
m0_247 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (JValue.CreateNull()).ToObject<BigInteger?>())", span="386-386"];
m0_200 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(TimeSpan.FromMinutes(1), (TimeSpan)(new JValue(TimeSpan.FromMinutes(1))))", span="330-330"];
m0_201 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(''00:01:00'', (string)(new JValue(TimeSpan.FromMinutes(1))))", span="331-331"];
m0_203 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(''46efe013-b56a-4e83-99e4-4dce7678a5bc'', (string)(new JValue(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC''))))", span="333-333"];
m0_206 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC''), (Guid)(new JValue(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC''))))", span="336-336"];
m0_204 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(''http://www.google.com/'', (string)(new JValue(new Uri(''http://www.google.com''))))", span="334-334"];
m0_208 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(new Uri(''http://www.google.com''), (Uri)(new JValue(new Uri(''http://www.google.com''))))", span="338-338"];
m0_141 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Newtonsoft.Json.Tests.TestFixtureBase", span=""];
m0_143 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (int?)(JValue)null)", span="269-269"];
m0_145 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (DateTime?)(JValue)null)", span="271-271"];
m0_147 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (short?)(JValue)null)", span="273-273"];
m0_149 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (float?)(JValue)null)", span="275-275"];
m0_151 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (double?)(JValue)null)", span="277-277"];
m0_153 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (decimal?)(JValue)null)", span="279-279"];
m0_155 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (uint?)(JValue)null)", span="281-281"];
m0_157 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (sbyte?)(JValue)null)", span="283-283"];
m0_159 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (byte?)(JValue)null)", span="285-285"];
m0_161 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (ulong?)(JValue)null)", span="287-287"];
m0_163 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (uint?)(JValue)null)", span="289-289"];
m0_185 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (string)(JValue)null)", span="313-313"];
m0_215 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (Uri)(JValue)null)", span="346-346"];
m0_216 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (int?)(JValue)null)", span="347-347"];
m0_217 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (uint?)(JValue)null)", span="348-348"];
m0_218 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (Guid?)(JValue)null)", span="349-349"];
m0_219 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (TimeSpan?)(JValue)null)", span="350-350"];
m0_220 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (byte[])(JValue)null)", span="351-351"];
m0_221 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (bool?)(JValue)null)", span="352-352"];
m0_222 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (char?)(JValue)null)", span="353-353"];
m0_223 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (DateTime?)(JValue)null)", span="354-354"];
m0_224 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (DateTimeOffset?)(JValue)null)", span="356-356"];
m0_225 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (short?)(JValue)null)", span="358-358"];
m0_226 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (ushort?)(JValue)null)", span="359-359"];
m0_227 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (byte?)(JValue)null)", span="360-360"];
m0_228 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (byte?)(JValue)null)", span="361-361"];
m0_229 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (sbyte?)(JValue)null)", span="362-362"];
m0_230 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (sbyte?)(JValue)null)", span="363-363"];
m0_231 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (long?)(JValue)null)", span="364-364"];
m0_232 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (ulong?)(JValue)null)", span="365-365"];
m0_233 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (double?)(JValue)null)", span="366-366"];
m0_234 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Assert.AreEqual(null, (float?)(JValue)null)", span="367-367"];
m0_256 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="CollectionAssert.AreEqual(new byte[] { 255, 255, 255, 255, 255, 255, 255, 127 }, intData)", span="398-398"];
m0_235 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="byte[] data = new byte[0]", span="369-369"];
m0_238 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="string bigIntegerText = ''1234567899999999999999999999999999999999999999999999999999999999999990''", span="375-375"];
m0_248 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="byte[] intData = BigInteger.Parse(bigIntegerText).ToByteArray()", span="388-388"];
m0_257 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", span="249-249"];
m0_263 [cluster="Newtonsoft.Json.Linq.JValue.CreateNull()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.CreateNull()", span="595-595"];
m0_259 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JTokenTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m0_604 [cluster="Newtonsoft.Json.Linq.JToken.AfterSelf()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.AfterSelf()", span="294-294"];
m0_760 [cluster="Newtonsoft.Json.Linq.JContainer.AddFirst(object)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JContainer.AddFirst(object)", span="672-672"];
m0_268 [cluster="Newtonsoft.Json.Linq.JValue.JValue(decimal)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(decimal)", span="79-79"];
m0_275 [cluster="System.Text.Encoding.GetBytes(string)", file="JTokenTests.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m0_781 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddValueToObject()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AddValueToObject()", span="977-977"];
m0_782 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddValueToObject()", file="JTokenTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() =>\r\n            {\r\n                JObject o = new JObject();\r\n                o.Add(5);\r\n            }, ''Can not add Newtonsoft.Json.Linq.JValue to Newtonsoft.Json.Linq.JObject.'')", span="979-983"];
m0_783 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddValueToObject()", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AddValueToObject()", span="977-977"];
m0_829 [cluster="Newtonsoft.Json.Linq.JToken.AddAfterSelf(object)", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.AddAfterSelf(object)", span="238-238"];
m0_330 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="369-369"];
m0_904 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse_NoComments()", file="JTokenTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Parse_NoComments()", span="1255-1255"];
m0_907 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse_NoComments()", file="JTokenTests.cs", label="Assert.AreEqual(3, o[''prop''].Count())", span="1264-1264"];
m0_908 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse_NoComments()", file="JTokenTests.cs", label="Assert.AreEqual(1, (int)o[''prop''][0])", span="1265-1265"];
m0_909 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse_NoComments()", file="JTokenTests.cs", label="Assert.AreEqual(2, (int)o[''prop''][1])", span="1266-1266"];
m0_910 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse_NoComments()", file="JTokenTests.cs", label="Assert.AreEqual(3, (int)o[''prop''][2])", span="1267-1267"];
m0_906 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse_NoComments()", file="JTokenTests.cs", label="JToken o = JToken.Parse(json, new JsonLoadSettings\r\n            {\r\n                CommentHandling = CommentHandling.Ignore\r\n            })", span="1259-1262"];
m0_905 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse_NoComments()", file="JTokenTests.cs", label="string json = ''{'prop':[1,2/*comment*/,3]}''", span="1257-1257"];
m0_911 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse_NoComments()", file="JTokenTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Parse_NoComments()", span="1255-1255"];
m1_96 [cluster="string.ToCharArray()", file="StringUtils.cs", label="Entry string.ToCharArray()", span="0-0"];
m1_3 [cluster="string.FormatWith(System.IFormatProvider, params object[])", file="StringUtils.cs", label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="67-67"];
m1_59 [cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", span="146-146"];
m1_60 [cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="StringUtils.cs", label="source == null", span="148-148"];
m1_61 [cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="StringUtils.cs", label="throw new ArgumentNullException(nameof(source));", span="150-150"];
m1_62 [cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="StringUtils.cs", label="valueSelector == null", span="152-152"];
m1_63 [cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="StringUtils.cs", label="throw new ArgumentNullException(nameof(valueSelector));", span="154-154"];
m1_64 [cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="StringUtils.cs", label="var caseInsensitiveResults = source.Where(s => string.Equals(valueSelector(s), testValue, StringComparison.OrdinalIgnoreCase))", span="157-157"];
m1_67 [cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="StringUtils.cs", label="var caseSensitiveResults = source.Where(s => string.Equals(valueSelector(s), testValue, StringComparison.Ordinal))", span="165-165"];
m1_65 [cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="StringUtils.cs", label="caseInsensitiveResults.Count() <= 1", span="158-158"];
m1_66 [cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="StringUtils.cs", label="return caseInsensitiveResults.SingleOrDefault();", span="160-160"];
m1_68 [cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="StringUtils.cs", label="return caseSensitiveResults.SingleOrDefault();", span="166-166"];
m1_69 [cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", span="146-146"];
m1_76 [cluster="System.Func<T, TResult>.Invoke(T)", file="StringUtils.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m1_77 [cluster="string.Equals(string, string, System.StringComparison)", file="StringUtils.cs", label="Entry string.Equals(string, string, System.StringComparison)", span="0-0"];
m1_20 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", span="83-83"];
m1_21 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="StringUtils.cs", label="s == null", span="85-85"];
m1_22 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="StringUtils.cs", label="throw new ArgumentNullException(nameof(s));", span="87-87"];
m1_23 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="StringUtils.cs", label="s.Length == 0", span="90-90"];
m1_26 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="StringUtils.cs", label="i < s.Length", span="95-95"];
m1_27 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="StringUtils.cs", label="!char.IsWhiteSpace(s[i])", span="97-97"];
m1_24 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="StringUtils.cs", label="return false;", span="92-92"];
m1_25 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="StringUtils.cs", label="int i = 0", span="95-95"];
m1_29 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="StringUtils.cs", label="i++", span="95-95"];
m1_30 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="StringUtils.cs", label="return true;", span="103-103"];
m1_28 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="StringUtils.cs", label="return false;", span="99-99"];
m1_31 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", span="83-83"];
m1_107 [cluster="Newtonsoft.Json.Utilities.StringUtils.StartsWith(string, char)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.StartsWith(string, char)", span="220-220"];
m1_108 [cluster="Newtonsoft.Json.Utilities.StringUtils.StartsWith(string, char)", file="StringUtils.cs", label="return (source.Length > 0 && source[0] == value);", span="222-222"];
m1_109 [cluster="Newtonsoft.Json.Utilities.StringUtils.StartsWith(string, char)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.StartsWith(string, char)", span="220-220"];
m1_103 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", span="211-211"];
m1_104 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", file="StringUtils.cs", label="return char.IsLowSurrogate(c);", span="214-214"];
m1_105 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", span="211-211"];
m1_44 [cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder, System.IFormatProvider)", file="StringUtils.cs", label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder, System.IFormatProvider)", span="0-0"];
m1_99 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", span="202-202"];
m1_100 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", file="StringUtils.cs", label="return char.IsHighSurrogate(c);", span="205-205"];
m1_101 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", span="202-202"];
m1_0 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object)", span="47-47"];
m1_1 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object)", file="StringUtils.cs", label="return format.FormatWith(provider, new[] { arg0 });", span="49-49"];
m1_2 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object)", span="47-47"];
m1_33 [cluster="char.IsWhiteSpace(char)", file="StringUtils.cs", label="Entry char.IsWhiteSpace(char)", span="0-0"];
m1_38 [cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", span="116-116"];
m1_39 [cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="StringUtils.cs", label="StringBuilder sb = new StringBuilder(capacity)", span="118-118"];
m1_40 [cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="StringUtils.cs", label="StringWriter sw = new StringWriter(sb, CultureInfo.InvariantCulture)", span="119-119"];
m1_41 [cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="StringUtils.cs", label="return sw;", span="121-121"];
m1_42 [cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", span="116-116"];
m1_97 [cluster="char.ToLower(char, System.Globalization.CultureInfo)", file="StringUtils.cs", label="Entry char.ToLower(char, System.Globalization.CultureInfo)", span="0-0"];
m1_106 [cluster="char.IsLowSurrogate(char)", file="StringUtils.cs", label="Entry char.IsLowSurrogate(char)", span="0-0"];
m1_34 [cluster="Newtonsoft.Json.Utilities.StringUtils.NullEmptyString(string)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.NullEmptyString(string)", span="111-111"];
m1_35 [cluster="Newtonsoft.Json.Utilities.StringUtils.NullEmptyString(string)", file="StringUtils.cs", label="return (string.IsNullOrEmpty(s)) ? null : s;", span="113-113"];
m1_36 [cluster="Newtonsoft.Json.Utilities.StringUtils.NullEmptyString(string)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.NullEmptyString(string)", span="111-111"];
m1_17 [cluster="Unk.nameof", file="StringUtils.cs", label="Entry Unk.nameof", span=""];
m1_4 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object)", span="52-52"];
m1_5 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object)", file="StringUtils.cs", label="return format.FormatWith(provider, new[] { arg0, arg1 });", span="54-54"];
m1_6 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object)", span="52-52"];
m1_45 [cluster="Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", span="124-124"];
m1_46 [cluster="Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", file="StringUtils.cs", label="value == null", span="126-126"];
m1_48 [cluster="Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", file="StringUtils.cs", label="return value.Length;", span="132-132"];
m1_47 [cluster="Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", file="StringUtils.cs", label="return null;", span="128-128"];
m1_49 [cluster="Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", span="124-124"];
m1_81 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", span="170-170"];
m1_82 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", color=red, community=0, file="StringUtils.cs", label="0: string.IsNullOrEmpty(s)", span="172-172"];
m1_83 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", color=red, community=0, file="StringUtils.cs", label="1: return s;", span="174-174"];
m1_84 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", color=red, community=0, file="StringUtils.cs", label="0: !char.IsUpper(s[0])", span="177-177"];
m1_85 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs", label="return s;", span="179-179"];
m1_86 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs", label="char[] chars = s.ToCharArray()", span="182-182"];
m1_87 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs", label="int i = 0", span="184-184"];
m1_88 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs", label="i < chars.Length", span="184-184"];
m1_89 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs", label="bool hasNext = (i + 1 < chars.Length)", span="186-186"];
m1_90 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs", label="i > 0 && hasNext && !char.IsUpper(chars[i + 1])", span="187-187"];
m1_91 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs", label="chars[i] = char.ToLower(chars[i], CultureInfo.InvariantCulture)", span="193-193"];
m1_93 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs", label="return new string(chars);", span="199-199"];
m1_92 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs", label="i++", span="184-184"];
m1_94 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", span="170-170"];
m1_95 [cluster="char.IsUpper(char)", file="StringUtils.cs", label="Entry char.IsUpper(char)", span="0-0"];
m1_58 [cluster="Newtonsoft.Json.Utilities.MathUtils.IntToHex(int)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.MathUtils.IntToHex(int)", span="119-119"];
m1_102 [cluster="char.IsHighSurrogate(char)", file="StringUtils.cs", label="Entry char.IsHighSurrogate(char)", span="0-0"];
m1_7 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object, object)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object, object)", span="57-57"];
m1_8 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object, object)", file="StringUtils.cs", label="return format.FormatWith(provider, new[] { arg0, arg1, arg2 });", span="59-59"];
m1_9 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object, object)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object, object)", span="57-57"];
m1_13 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, params object[])", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, params object[])", span="67-67"];
m1_14 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, params object[])", file="StringUtils.cs", label="ValidationUtils.ArgumentNotNull(format, nameof(format))", span="71-71"];
m1_15 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, params object[])", file="StringUtils.cs", label="return string.Format(provider, format, args);", span="73-73"];
m1_16 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, params object[])", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, params object[])", span="67-67"];
m1_18 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="31-31"];
m1_19 [cluster="string.Format(System.IFormatProvider, string, params object[])", file="StringUtils.cs", label="Entry string.Format(System.IFormatProvider, string, params object[])", span="0-0"];
m1_43 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="StringUtils.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m1_110 [cluster="Newtonsoft.Json.Utilities.StringUtils.EndsWith(string, char)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.EndsWith(string, char)", span="225-225"];
m1_111 [cluster="Newtonsoft.Json.Utilities.StringUtils.EndsWith(string, char)", file="StringUtils.cs", label="return (source.Length > 0 && source[source.Length - 1] == value);", span="227-227"];
m1_112 [cluster="Newtonsoft.Json.Utilities.StringUtils.EndsWith(string, char)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.EndsWith(string, char)", span="225-225"];
m1_98 [cluster="string.String(char[])", file="StringUtils.cs", label="Entry string.String(char[])", span="0-0"];
m1_70 [cluster="Unk.Where", file="StringUtils.cs", label="Entry Unk.Where", span=""];
m1_78 [cluster="lambda expression", file="StringUtils.cs", label="Entry lambda expression", span="165-165"];
m1_74 [cluster="lambda expression", file="StringUtils.cs", label="string.Equals(valueSelector(s), testValue, StringComparison.OrdinalIgnoreCase)", span="157-157"];
m1_79 [cluster="lambda expression", file="StringUtils.cs", label="string.Equals(valueSelector(s), testValue, StringComparison.Ordinal)", span="165-165"];
m1_73 [cluster="lambda expression", file="StringUtils.cs", label="Entry lambda expression", span="157-157"];
m1_75 [cluster="lambda expression", file="StringUtils.cs", label="Exit lambda expression", span="157-157"];
m1_80 [cluster="lambda expression", file="StringUtils.cs", label="Exit lambda expression", span="165-165"];
m1_37 [cluster="string.IsNullOrEmpty(string)", file="StringUtils.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m1_71 [cluster="Unk.Count", file="StringUtils.cs", label="Entry Unk.Count", span=""];
m1_50 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", span="136-136"];
m1_51 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="StringUtils.cs", label="buffer[0] = '\\'", span="138-138"];
m1_52 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="StringUtils.cs", label="buffer[1] = 'u'", span="139-139"];
m1_53 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="StringUtils.cs", label="buffer[2] = MathUtils.IntToHex((c >> 12) & '\x000f')", span="140-140"];
m1_54 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="StringUtils.cs", label="buffer[3] = MathUtils.IntToHex((c >> 8) & '\x000f')", span="141-141"];
m1_55 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="StringUtils.cs", label="buffer[4] = MathUtils.IntToHex((c >> 4) & '\x000f')", span="142-142"];
m1_56 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="StringUtils.cs", label="buffer[5] = MathUtils.IntToHex(c & '\x000f')", span="143-143"];
m1_57 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", span="136-136"];
m1_10 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object, object, object)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object, object, object)", span="62-62"];
m1_11 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object, object, object)", file="StringUtils.cs", label="return format.FormatWith(provider, new[] { arg0, arg1, arg2, arg3 });", span="64-64"];
m1_12 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object, object, object)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object, object, object)", span="62-62"];
m1_72 [cluster="Unk.SingleOrDefault", file="StringUtils.cs", label="Entry Unk.SingleOrDefault", span=""];
m1_113 [file="StringUtils.cs", label="System.Func<TSource, string>", span=""];
m1_114 [file="StringUtils.cs", label=string, span=""];
m2_1 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", file="StringUtilsTests.cs", label="Assert.AreEqual(''urlValue'', StringUtils.ToCamelCase(''URLValue''))", span="46-46"];
m2_16 [cluster="Unk.AreEqual", file="StringUtilsTests.cs", label="Entry Unk.AreEqual", span=""];
m2_2 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", file="StringUtilsTests.cs", label="Assert.AreEqual(''url'', StringUtils.ToCamelCase(''URL''))", span="47-47"];
m2_3 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", file="StringUtilsTests.cs", label="Assert.AreEqual(''id'', StringUtils.ToCamelCase(''ID''))", span="48-48"];
m2_0 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", file="StringUtilsTests.cs", label="Entry Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", span="44-44"];
m2_12 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", color=green, community=0, file="StringUtilsTests.cs", label="0: Assert.AreEqual(''isCIA'', StringUtils.ToCamelCase(''IsCIA''))", span="57-57"];
m2_11 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", file="StringUtilsTests.cs", label="Assert.AreEqual('' IPhone'', StringUtils.ToCamelCase('' IPhone''))", span="56-56"];
m2_13 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", color=green, community=0, file="StringUtilsTests.cs", label="0: Assert.AreEqual(''vmQ'', StringUtils.ToCamelCase(''VmQ''))", span="58-58"];
m2_10 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", file="StringUtilsTests.cs", label="Assert.AreEqual(''i Phone'', StringUtils.ToCamelCase(''I Phone''))", span="55-55"];
m2_4 [cluster="Newtonsoft.Json.JsonConverter.CanConvert(System.Type)", file="StringUtilsTests.cs", label="Entry Newtonsoft.Json.JsonConverter.CanConvert(System.Type)", span="63-63"];
m2_5 [cluster="Newtonsoft.Json.JsonConverter.CanConvert(System.Type)", file="StringUtilsTests.cs", label="Exit Newtonsoft.Json.JsonConverter.CanConvert(System.Type)", span="63-63"];
m2_6 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", file="StringUtilsTests.cs", label="Assert.AreEqual(null, StringUtils.ToCamelCase(null))", span="51-51"];
m2_7 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", file="StringUtilsTests.cs", label="Assert.AreEqual(''iPhone'', StringUtils.ToCamelCase(''iPhone''))", span="52-52"];
m2_8 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", file="StringUtilsTests.cs", label="Assert.AreEqual(''person'', StringUtils.ToCamelCase(''Person''))", span="53-53"];
m2_9 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", file="StringUtilsTests.cs", label="Assert.AreEqual(''iPhone'', StringUtils.ToCamelCase(''IPhone''))", span="54-54"];
m2_14 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", file="StringUtilsTests.cs", label="Exit Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", span="44-44"];
m2_15 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtilsTests.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", span="170-170"];
n529 -> n5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n6  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n14  [color=red, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n27  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n28  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n40  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n69  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n72  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n77  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n79  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n111  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n112  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n115  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n122  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n124  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n142  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n148  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n152  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n153  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n157  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n167  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n168  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n169  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n178  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n192  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n196  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n200  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n201  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n202  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n205  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n206  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n207  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n210  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n211  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n212  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n224  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n231  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n243  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n256  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n258  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n259  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n260  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n262  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n264  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n282  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n283  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n284  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n285  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n286  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n296  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n297  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n298  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n302  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n303  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n316  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n317  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n318  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n320  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n321  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n322  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n323  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n324  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n325  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n326  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n331  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n333  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n340  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n341  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n344  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n345  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n350  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n351  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n356  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n357  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n362  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n363  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n380  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n381  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n382  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n383  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n384  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n386  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n387  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n389  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n396  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n397  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n398  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n403  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n405  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n408  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n412  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n414  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n419  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n420  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n422  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n429  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n430  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n437  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n438  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n439  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n441  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n443  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n449  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n452  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n453  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n455  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n456  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n458  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n460  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n461  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n464  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n465  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n506  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n516  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n517  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n525  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> n526  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> d14  [color=green, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> d40  [color=green, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n529 -> d43  [color=green, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [color=blue, key=0, style=bold];
n2 -> n3  [key=0, style=solid];
n2 -> n4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n2 -> n5  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n2 -> n7  [color=darkseagreen4, key=1, label=object, style=dashed];
n2 -> n8  [color=darkseagreen4, key=1, label=object, style=dashed];
n2 -> n9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n2 -> n10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n2 -> n12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n2 -> n13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n3 -> n4  [key=0, style=solid];
n3 -> n5  [key=0, style=solid];
n4 -> n16  [key=0, style=solid];
n4 -> n17  [key=2, style=dotted];
n4 -> n18  [key=2, style=dotted];
n5 -> n6  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n7 -> n19  [key=2, style=dotted];
n7 -> n10  [color=darkseagreen4, key=1, label=contract, style=dashed];
n7 -> n12  [color=darkseagreen4, key=1, label=contract, style=dashed];
n8 -> n9  [key=0, style=solid];
n8 -> n10  [key=0, style=solid];
n8 -> n20  [key=2, style=dotted];
n9 -> n11  [key=0, style=solid];
n9 -> n16  [key=0, style=solid];
n9 -> n21  [key=2, style=dotted];
n9 -> n9  [color=darkorchid, key=3, label="Field variable string FSharpListTypeName", style=bold];
n10 -> n11  [key=0, style=solid];
n10 -> n16  [key=0, style=solid];
n10 -> n22  [key=2, style=dotted];
n12 -> n13  [key=0, style=solid];
n12 -> n14  [color=red, key=0, style=solid];
n12 -> n23  [key=2, style=dotted];
n12 -> d14  [color=green, key=0, style=solid];
n13 -> n16  [key=0, style=solid];
n13 -> n24  [key=2, style=dotted];
n6 -> n7  [key=0, style=solid];
n19 -> n32  [key=0, style=solid];
n19 -> n34  [color=darkseagreen4, key=1, label=object, style=dashed];
n20 -> n104  [key=0, style=solid];
n20 -> n106  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n20 -> n108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n20 -> n110  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n20 -> n115  [color=darkseagreen4, key=1, label=object, style=dashed];
n11 -> n12  [key=0, style=solid];
n16 -> n2  [color=blue, key=0, style=bold];
n22 -> n56  [key=0, style=solid];
n22 -> n57  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n22 -> n59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n22 -> n61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n22 -> n63  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n22 -> n65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n22 -> n67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n22 -> n69  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n22 -> n70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n22 -> n72  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n22 -> n74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n22 -> n76  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n22 -> n77  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n22 -> n79  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n21 -> n167  [key=0, style=solid];
n21 -> n169  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n21 -> n170  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n21 -> n171  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n21 -> n172  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n21 -> n173  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n14 -> n15  [color=red, key=0, style=solid];
n14 -> n25  [color=red, key=2, style=dotted];
n15 -> n16  [key=0, style=solid];
n24 -> n506  [key=0, style=solid];
n24 -> n507  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n24 -> n508  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n24 -> n509  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n24 -> n510  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n26 -> n27  [key=0, style=solid];
n27 -> n28  [key=0, style=solid];
n27 -> n29  [key=0, style=solid];
n28 -> n29  [key=0, style=solid];
n28 -> n31  [key=2, style=dotted];
n29 -> n30  [key=0, style=solid];
n30 -> n26  [color=blue, key=0, style=bold];
n32 -> n33  [key=0, style=solid];
n32 -> n34  [key=0, style=solid];
n34 -> n35  [key=0, style=solid];
n34 -> n36  [key=2, style=dotted];
n34 -> n37  [key=2, style=dotted];
n33 -> n35  [key=0, style=solid];
n35 -> n19  [color=blue, key=0, style=bold];
n38 -> n39  [key=0, style=solid];
n38 -> n40  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonPrimitiveContract", style=dashed];
n38 -> n42  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n38 -> n43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n38 -> n44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n38 -> n45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n38 -> n46  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n38 -> n48  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n38 -> d39  [color=green, key=0, style=solid];
n38 -> d40  [color=green, key=1, label="Newtonsoft.Json.Serialization.JsonPrimitiveContract", style=dashed];
n38 -> d42  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n38 -> d43  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n38 -> d44  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n38 -> d45  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n39 -> n40  [key=0, style=solid];
n39 -> n48  [key=0, style=solid];
n40 -> n41  [key=0, style=solid];
n40 -> n50  [key=2, style=dotted];
n42 -> n43  [key=0, style=solid];
n42 -> n51  [key=2, style=dotted];
n43 -> n44  [key=0, style=solid];
n43 -> n52  [key=2, style=dotted];
n44 -> n45  [key=0, style=solid];
n44 -> n53  [key=2, style=dotted];
n45 -> n46  [key=0, style=solid];
n45 -> n54  [key=2, style=dotted];
n46 -> n47  [key=0, style=solid];
n46 -> n55  [key=2, style=dotted];
n48 -> n49  [key=0, style=solid];
n48 -> n54  [key=2, style=dotted];
n41 -> n42  [key=0, style=solid];
n41 -> n48  [key=0, style=solid];
n41 -> n44  [color=darkorchid, key=3, label="method methodReturn object ", style=bold];
n41 -> n41  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.Utilities.MethodCall<object, object> createFunction", style=bold];
n50 -> n419  [key=0, style=solid];
n50 -> n420  [color=darkseagreen4, key=1, label="Newtonsoft.Json.TypeNameHandling", style=dashed];
n50 -> n423  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n50 -> n424  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n50 -> n426  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
n50 -> n427  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n50 -> n431  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n52 -> n302  [key=0, style=solid];
n52 -> n304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n52 -> n305  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n52 -> n306  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n47 -> n49  [key=0, style=solid];
n49 -> n38  [color=blue, key=0, style=bold];
n56 -> n57  [key=0, style=solid];
n56 -> n59  [key=0, style=solid];
n57 -> n58  [key=0, style=solid];
n57 -> n81  [key=2, style=dotted];
n59 -> n60  [key=0, style=solid];
n59 -> n82  [key=2, style=dotted];
n59 -> n61  [color=darkseagreen4, key=1, label=converter, style=dashed];
n61 -> n62  [key=0, style=solid];
n61 -> n83  [key=2, style=dotted];
n63 -> n64  [key=0, style=solid];
n63 -> n66  [key=0, style=solid];
n63 -> n71  [key=0, style=solid];
n63 -> n73  [key=0, style=solid];
n63 -> n75  [key=0, style=solid];
n63 -> n78  [key=0, style=solid];
n65 -> n80  [key=0, style=solid];
n65 -> n84  [key=2, style=dotted];
n67 -> n68  [key=0, style=solid];
n67 -> n69  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
n67 -> n70  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
n69 -> n80  [key=0, style=solid];
n69 -> n85  [key=2, style=dotted];
n70 -> n80  [key=0, style=solid];
n70 -> n86  [key=2, style=dotted];
n72 -> n80  [key=0, style=solid];
n72 -> n38  [key=2, style=dotted];
n74 -> n80  [key=0, style=solid];
n74 -> n87  [key=2, style=dotted];
n76 -> n77  [key=0, style=solid];
n77 -> n80  [key=0, style=solid];
n77 -> n88  [key=2, style=dotted];
n77 -> n89  [key=2, style=dotted];
n79 -> n80  [key=0, style=solid];
n79 -> n90  [key=2, style=dotted];
n79 -> n91  [key=2, style=dotted];
n58 -> n80  [key=0, style=solid];
n60 -> n61  [key=0, style=solid];
n60 -> n63  [key=0, style=solid];
n62 -> n80  [key=0, style=solid];
n83 -> n316  [key=0, style=solid];
n83 -> n317  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n83 -> n318  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n83 -> n320  [color=darkseagreen4, key=1, label=object, style=dashed];
n83 -> n322  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n83 -> n323  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n83 -> n325  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n64 -> n65  [key=0, style=solid];
n66 -> n67  [key=0, style=solid];
n71 -> n72  [key=0, style=solid];
n73 -> n74  [key=0, style=solid];
n75 -> n76  [key=0, style=solid];
n78 -> n79  [key=0, style=solid];
n68 -> n69  [key=0, style=solid];
n68 -> n70  [key=0, style=solid];
n80 -> n22  [color=blue, key=0, style=bold];
n85 -> n329  [key=0, style=solid];
n85 -> n330  [color=darkseagreen4, key=1, label="System.Collections.IEnumerable", style=dashed];
n85 -> n331  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n85 -> n333  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n85 -> n334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n85 -> n335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n85 -> n337  [color=darkseagreen4, key=1, label="System.Collections.IEnumerable", style=dashed];
n85 -> n338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
n85 -> n339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
n85 -> n340  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n85 -> n341  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n85 -> n342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n85 -> n344  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n85 -> n345  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n85 -> n347  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n85 -> n349  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n85 -> n351  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n89 -> n435  [key=0, style=solid];
n89 -> n436  [color=darkseagreen4, key=1, label="System.Collections.IDictionary", style=dashed];
n89 -> n437  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n89 -> n439  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n89 -> n440  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
n89 -> n441  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
n89 -> n442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
n89 -> n443  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
n89 -> n444  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n89 -> n445  [color=darkseagreen4, key=1, label="System.Collections.IDictionary", style=dashed];
n89 -> n449  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n89 -> n450  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
n89 -> n452  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
n89 -> n453  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
n89 -> n454  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n89 -> n455  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n89 -> n456  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n89 -> n457  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n89 -> n458  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n89 -> n460  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n89 -> n461  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n89 -> n463  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n89 -> n465  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n86 -> n356  [key=0, style=solid];
n86 -> n357  [color=darkseagreen4, key=1, label="System.Array", style=dashed];
n86 -> n358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n86 -> n359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n86 -> n361  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n86 -> n363  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n87 -> n192  [key=0, style=solid];
n87 -> n194  [color=darkseagreen4, key=1, label=object, style=dashed];
n87 -> n195  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n87 -> n196  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n84 -> n210  [key=0, style=solid];
n84 -> n211  [color=darkseagreen4, key=1, label=object, style=dashed];
n84 -> n212  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n84 -> n213  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n84 -> n215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
n84 -> n216  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
n84 -> n219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n84 -> n220  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n84 -> n221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n84 -> n223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n84 -> n224  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n84 -> n227  [color=darkseagreen4, key=1, label=object, style=dashed];
n84 -> n233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n84 -> n234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
n84 -> n235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
n84 -> n236  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n84 -> n237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n84 -> n238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n84 -> n239  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n84 -> n240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n84 -> n241  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n84 -> n243  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n92 -> n93  [key=0, style=solid];
n92 -> n94  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n92 -> n95  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n92 -> n96  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n92 -> n97  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n92 -> n98  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
n92 -> n99  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
n92 -> n101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n93 -> n94  [key=0, style=solid];
n93 -> n96  [color=darkseagreen4, key=1, label=isReference, style=dashed];
n93 -> n98  [color=darkseagreen4, key=1, label=isReference, style=dashed];
n93 -> n100  [color=darkseagreen4, key=1, label=isReference, style=dashed];
n93 -> n102  [color=darkseagreen4, key=1, label=isReference, style=dashed];
n94 -> n95  [key=0, style=solid];
n94 -> n96  [key=0, style=solid];
n95 -> n96  [key=0, style=solid];
n95 -> n98  [color=darkseagreen4, key=1, label=isReference, style=dashed];
n95 -> n100  [color=darkseagreen4, key=1, label=isReference, style=dashed];
n95 -> n102  [color=darkseagreen4, key=1, label=isReference, style=dashed];
n96 -> n97  [key=0, style=solid];
n96 -> n98  [key=0, style=solid];
n97 -> n98  [key=0, style=solid];
n97 -> n100  [color=darkseagreen4, key=1, label=isReference, style=dashed];
n97 -> n102  [color=darkseagreen4, key=1, label=isReference, style=dashed];
n98 -> n99  [key=0, style=solid];
n98 -> n100  [key=0, style=solid];
n99 -> n100  [key=0, style=solid];
n99 -> n102  [color=darkseagreen4, key=1, label=isReference, style=dashed];
n101 -> n102  [key=0, style=solid];
n100 -> n101  [key=0, style=solid];
n100 -> n102  [key=0, style=solid];
n102 -> n103  [key=0, style=solid];
n103 -> n92  [color=blue, key=0, style=bold];
n104 -> n105  [key=0, style=solid];
n104 -> n106  [key=0, style=solid];
n106 -> n107  [key=0, style=solid];
n106 -> n108  [key=0, style=solid];
n108 -> n109  [key=0, style=solid];
n108 -> n92  [key=2, style=dotted];
n108 -> n113  [color=darkseagreen4, key=1, label=isReference, style=dashed];
n110 -> n111  [key=0, style=solid];
n110 -> n112  [key=0, style=solid];
n115 -> n116  [key=0, style=solid];
n115 -> n119  [key=2, style=dotted];
n115 -> n120  [key=2, style=dotted];
n105 -> n116  [key=0, style=solid];
n107 -> n116  [key=0, style=solid];
n109 -> n110  [key=0, style=solid];
n109 -> n113  [key=0, style=solid];
n113 -> n114  [key=0, style=solid];
n113 -> n115  [key=0, style=solid];
n113 -> n118  [key=2, style=dotted];
n111 -> n113  [key=0, style=solid];
n111 -> n117  [key=2, style=dotted];
n112 -> n113  [key=0, style=solid];
n112 -> n117  [key=2, style=dotted];
n117 -> n311  [key=0, style=solid];
n114 -> n116  [key=0, style=solid];
n116 -> n20  [color=blue, key=0, style=bold];
n121 -> n122  [key=0, style=solid];
n121 -> n124  [color=darkseagreen4, key=1, label=object, style=dashed];
n122 -> n123  [key=0, style=solid];
n122 -> n124  [key=0, style=solid];
n122 -> n128  [key=2, style=dotted];
n124 -> n125  [key=0, style=solid];
n124 -> n126  [key=0, style=solid];
n124 -> n128  [key=2, style=dotted];
n124 -> n129  [key=2, style=dotted];
n124 -> n130  [key=2, style=dotted];
n124 -> n131  [key=2, style=dotted];
n123 -> n127  [key=0, style=solid];
n125 -> n127  [key=0, style=solid];
n126 -> n127  [key=0, style=solid];
n129 -> n309  [key=0, style=solid];
n127 -> n121  [color=blue, key=0, style=bold];
n132 -> n133  [key=0, style=solid];
n132 -> n136  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n132 -> n137  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n132 -> n138  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n132 -> n139  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n132 -> n140  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
n132 -> n141  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
n132 -> n142  [color=darkseagreen4, key=1, label=object, style=dashed];
n132 -> n145  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n132 -> n146  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n132 -> n147  [color=darkseagreen4, key=1, label=object, style=dashed];
n132 -> n150  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n132 -> n153  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n132 -> n157  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n133 -> n134  [key=0, style=solid];
n133 -> n135  [key=0, style=solid];
n136 -> n137  [key=0, style=solid];
n136 -> n138  [key=0, style=solid];
n137 -> n138  [key=0, style=solid];
n137 -> n140  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
n137 -> n148  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
n138 -> n139  [key=0, style=solid];
n138 -> n140  [key=0, style=solid];
n139 -> n140  [key=0, style=solid];
n139 -> n148  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
n140 -> n141  [key=0, style=solid];
n140 -> n142  [key=0, style=solid];
n141 -> n142  [key=0, style=solid];
n141 -> n148  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
n142 -> n143  [key=0, style=solid];
n142 -> n161  [key=2, style=dotted];
n142 -> n162  [key=2, style=dotted];
n145 -> n146  [key=0, style=solid];
n145 -> n147  [key=0, style=solid];
n146 -> n147  [key=0, style=solid];
n146 -> n163  [key=2, style=dotted];
n146 -> n146  [color=darkseagreen4, key=1, label=message, style=dashed];
n147 -> n148  [key=0, style=solid];
n147 -> n36  [key=2, style=dotted];
n147 -> n163  [key=2, style=dotted];
n147 -> n147  [color=darkseagreen4, key=1, label=message, style=dashed];
n147 -> n150  [color=darkseagreen4, key=1, label=message, style=dashed];
n147 -> n153  [color=darkseagreen4, key=1, label=message, style=dashed];
n147 -> n157  [color=darkseagreen4, key=1, label=message, style=dashed];
n150 -> n160  [key=0, style=solid];
n150 -> n164  [key=2, style=dotted];
n153 -> n154  [key=0, style=solid];
n153 -> n165  [key=2, style=dotted];
n153 -> n166  [key=2, style=dotted];
n157 -> n158  [key=0, style=solid];
n157 -> n165  [key=2, style=dotted];
n157 -> n166  [key=2, style=dotted];
n134 -> n160  [key=0, style=solid];
n135 -> n136  [key=0, style=solid];
n135 -> n138  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
n135 -> n140  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
n135 -> n148  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
n148 -> n149  [key=0, style=solid];
n148 -> n151  [key=0, style=solid];
n148 -> n155  [key=0, style=solid];
n148 -> n128  [key=2, style=dotted];
n143 -> n144  [key=0, style=solid];
n143 -> n159  [key=0, style=solid];
n144 -> n145  [key=0, style=solid];
n144 -> n146  [color=darkseagreen4, key=1, label=message, style=dashed];
n144 -> n147  [color=darkseagreen4, key=1, label=message, style=dashed];
n159 -> n160  [key=0, style=solid];
n149 -> n150  [key=0, style=solid];
n151 -> n152  [key=0, style=solid];
n155 -> n156  [key=0, style=solid];
n152 -> n153  [key=0, style=solid];
n152 -> n154  [key=0, style=solid];
n154 -> n160  [key=0, style=solid];
n156 -> n157  [key=0, style=solid];
n156 -> n158  [key=0, style=solid];
n158 -> n160  [key=0, style=solid];
n160 -> n132  [color=blue, key=0, style=bold];
n167 -> n168  [key=0, style=solid];
n167 -> n175  [key=2, style=dotted];
n167 -> n169  [color=darkseagreen4, key=1, label=reference, style=dashed];
n167 -> n172  [color=darkseagreen4, key=1, label=reference, style=dashed];
n169 -> n170  [key=0, style=solid];
n169 -> n36  [key=2, style=dotted];
n169 -> n176  [key=2, style=dotted];
n169 -> n165  [key=2, style=dotted];
n169 -> n166  [key=2, style=dotted];
n170 -> n171  [key=0, style=solid];
n170 -> n51  [key=2, style=dotted];
n171 -> n172  [key=0, style=solid];
n171 -> n53  [key=2, style=dotted];
n172 -> n173  [key=0, style=solid];
n172 -> n177  [key=2, style=dotted];
n173 -> n174  [key=0, style=solid];
n173 -> n55  [key=2, style=dotted];
n168 -> n169  [key=0, style=solid];
n168 -> n170  [key=0, style=solid];
n175 -> n178  [key=0, style=solid];
n175 -> n181  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n174 -> n21  [color=blue, key=0, style=bold];
n178 -> n179  [key=0, style=solid];
n178 -> n119  [key=2, style=dotted];
n178 -> n183  [key=2, style=dotted];
n181 -> n182  [key=0, style=solid];
n181 -> n36  [key=2, style=dotted];
n181 -> n163  [key=2, style=dotted];
n181 -> n164  [key=2, style=dotted];
n179 -> n182  [key=0, style=solid];
n180 -> n181  [key=0, style=solid];
n182 -> n175  [color=blue, key=0, style=bold];
n184 -> n185  [key=0, style=solid];
n185 -> n186  [key=0, style=solid];
n185 -> n187  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n186 -> n187  [key=0, style=solid];
n186 -> n189  [key=0, style=solid];
n187 -> n188  [key=0, style=solid];
n189 -> n190  [key=0, style=solid];
n189 -> n191  [color=darkseagreen4, key=1, label="out string", style=dashed];
n188 -> n191  [key=0, style=solid];
n190 -> n191  [key=0, style=solid];
n191 -> n184  [color=blue, key=0, style=bold];
n192 -> n193  [key=0, style=solid];
n192 -> n198  [key=2, style=dotted];
n194 -> n195  [key=0, style=solid];
n194 -> n184  [key=2, style=dotted];
n195 -> n196  [key=0, style=solid];
n195 -> n177  [key=2, style=dotted];
n196 -> n197  [key=0, style=solid];
n196 -> n199  [key=2, style=dotted];
n193 -> n194  [key=0, style=solid];
n198 -> n200  [key=0, style=solid];
n198 -> n201  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n198 -> n202  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n197 -> n87  [color=blue, key=0, style=bold];
n199 -> n205  [key=0, style=solid];
n199 -> n206  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n199 -> n207  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n200 -> n201  [key=0, style=solid];
n200 -> n202  [key=0, style=solid];
n201 -> n202  [key=0, style=solid];
n201 -> n163  [key=2, style=dotted];
n201 -> n165  [key=2, style=dotted];
n201 -> n166  [key=2, style=dotted];
n202 -> n203  [key=0, style=solid];
n202 -> n204  [key=2, style=dotted];
n203 -> n198  [color=blue, key=0, style=bold];
n205 -> n206  [key=0, style=solid];
n205 -> n207  [key=0, style=solid];
n206 -> n207  [key=0, style=solid];
n206 -> n163  [key=2, style=dotted];
n206 -> n165  [key=2, style=dotted];
n206 -> n166  [key=2, style=dotted];
n207 -> n208  [key=0, style=solid];
n207 -> n209  [key=2, style=dotted];
n208 -> n199  [color=blue, key=0, style=bold];
n210 -> n211  [key=0, style=solid];
n210 -> n198  [key=2, style=dotted];
n211 -> n212  [key=0, style=solid];
n211 -> n245  [key=2, style=dotted];
n212 -> n213  [key=0, style=solid];
n212 -> n246  [key=2, style=dotted];
n213 -> n214  [key=0, style=solid];
n213 -> n224  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
n215 -> n216  [key=0, style=solid];
n215 -> n227  [key=0, style=solid];
n216 -> n217  [key=0, style=solid];
n216 -> n219  [color=darkseagreen4, key=1, label=property, style=dashed];
n216 -> n220  [color=darkseagreen4, key=1, label=property, style=dashed];
n216 -> n221  [color=darkseagreen4, key=1, label=property, style=dashed];
n216 -> n223  [color=darkseagreen4, key=1, label=property, style=dashed];
n219 -> n220  [key=0, style=solid];
n219 -> n215  [key=0, style=solid];
n219 -> n247  [key=2, style=dotted];
n219 -> n221  [color=darkseagreen4, key=1, label=memberValue, style=dashed];
n220 -> n221  [key=0, style=solid];
n220 -> n248  [key=2, style=dotted];
n221 -> n222  [key=0, style=solid];
n221 -> n226  [key=0, style=solid];
n221 -> n22  [key=2, style=dotted];
n223 -> n224  [key=0, style=solid];
n223 -> n225  [key=0, style=solid];
n223 -> n23  [key=2, style=dotted];
n224 -> n226  [key=0, style=solid];
n224 -> n24  [key=2, style=dotted];
n227 -> n228  [key=0, style=solid];
n227 -> n249  [key=2, style=dotted];
n227 -> n229  [color=darkseagreen4, key=1, label=extensionData, style=dashed];
n233 -> n234  [key=0, style=solid];
n233 -> n250  [key=2, style=dotted];
n233 -> n233  [color=darkseagreen4, key=1, label=e, style=dashed];
n233 -> n235  [color=darkseagreen4, key=1, label=e, style=dashed];
n234 -> n235  [key=0, style=solid];
n234 -> n251  [key=2, style=dotted];
n234 -> n234  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
n234 -> n236  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
n234 -> n239  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
n235 -> n236  [key=0, style=solid];
n235 -> n238  [key=0, style=solid];
n235 -> n20  [key=2, style=dotted];
n235 -> n235  [color=darkseagreen4, key=1, label=e, style=dashed];
n235 -> n237  [color=darkseagreen4, key=1, label=e, style=dashed];
n236 -> n237  [key=0, style=solid];
n236 -> n252  [key=2, style=dotted];
n237 -> n229  [key=0, style=solid];
n237 -> n21  [key=2, style=dotted];
n237 -> n237  [color=darkseagreen4, key=1, label=e, style=dashed];
n238 -> n239  [key=0, style=solid];
n238 -> n229  [key=0, style=solid];
n238 -> n132  [key=2, style=dotted];
n238 -> n238  [color=darkseagreen4, key=1, label=e, style=dashed];
n238 -> n240  [color=darkseagreen4, key=1, label=e, style=dashed];
n239 -> n240  [key=0, style=solid];
n239 -> n252  [key=2, style=dotted];
n240 -> n229  [key=0, style=solid];
n240 -> n22  [key=2, style=dotted];
n240 -> n240  [color=darkseagreen4, key=1, label=e, style=dashed];
n241 -> n242  [key=0, style=solid];
n241 -> n55  [key=2, style=dotted];
n243 -> n244  [key=0, style=solid];
n243 -> n199  [key=2, style=dotted];
n246 -> n281  [key=0, style=solid];
n246 -> n282  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n246 -> n283  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n246 -> n284  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n246 -> n285  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n246 -> n286  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n214 -> n215  [key=0, style=solid];
n214 -> n216  [color=darkseagreen4, key=1, label=index, style=dashed];
n214 -> n226  [color=darkseagreen4, key=1, label=index, style=dashed];
n226 -> n215  [key=0, style=solid];
n226 -> n226  [color=darkseagreen4, key=1, label=index, style=dashed];
n217 -> n218  [key=0, style=solid];
n218 -> n219  [key=0, style=solid];
n247 -> n254  [key=0, style=solid];
n247 -> n255  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n247 -> n256  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n247 -> n257  [color=darkseagreen4, key=1, label=object, style=dashed];
n247 -> n258  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n247 -> n259  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n247 -> n260  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
n247 -> n261  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n247 -> n262  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n247 -> n264  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n247 -> n267  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
n247 -> n268  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n247 -> n270  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n247 -> n272  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n222 -> n223  [key=0, style=solid];
n225 -> n244  [key=0, style=solid];
n228 -> n229  [key=0, style=solid];
n228 -> n241  [key=0, style=solid];
n229 -> n230  [key=0, style=solid];
n229 -> n241  [key=0, style=solid];
n230 -> n231  [key=0, style=solid];
n230 -> n19  [key=2, style=dotted];
n230 -> n230  [color=darkseagreen4, key=1, label=e, style=dashed];
n230 -> n233  [color=darkseagreen4, key=1, label=keyContract, style=dashed];
n231 -> n232  [key=0, style=solid];
n231 -> n19  [key=2, style=dotted];
n231 -> n231  [color=darkseagreen4, key=1, label=e, style=dashed];
n231 -> n233  [color=darkseagreen4, key=1, label=e, style=dashed];
n231 -> n235  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
n231 -> n238  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
n231 -> n240  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
n232 -> n233  [key=0, style=solid];
n250 -> n469  [key=0, style=solid];
n250 -> n470  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n250 -> n471  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n250 -> n475  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n250 -> n478  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n250 -> n482  [color=darkseagreen4, key=1, label=object, style=dashed];
n250 -> n487  [color=darkseagreen4, key=1, label=object, style=dashed];
n250 -> n491  [color=darkseagreen4, key=1, label=object, style=dashed];
n250 -> n492  [color=darkseagreen4, key=1, label=object, style=dashed];
n250 -> n496  [color=darkseagreen4, key=1, label=object, style=dashed];
n242 -> n243  [key=0, style=solid];
n242 -> n253  [key=2, style=dotted];
n244 -> n84  [color=blue, key=0, style=bold];
n254 -> n255  [key=0, style=solid];
n254 -> n274  [key=0, style=solid];
n254 -> n278  [key=2, style=dotted];
n254 -> n279  [key=2, style=dotted];
n255 -> n256  [key=0, style=solid];
n255 -> n257  [key=0, style=solid];
n256 -> n257  [key=0, style=solid];
n256 -> n37  [key=2, style=dotted];
n257 -> n258  [key=0, style=solid];
n257 -> n280  [key=2, style=dotted];
n257 -> n259  [color=darkseagreen4, key=1, label="out object", style=dashed];
n257 -> n260  [color=darkseagreen4, key=1, label="out object", style=dashed];
n257 -> n262  [color=darkseagreen4, key=1, label="out object", style=dashed];
n257 -> n264  [color=darkseagreen4, key=1, label="out object", style=dashed];
n257 -> n266  [color=darkseagreen4, key=1, label="out object", style=dashed];
n258 -> n259  [key=0, style=solid];
n258 -> n19  [key=2, style=dotted];
n258 -> n260  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n258 -> n264  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n259 -> n260  [key=0, style=solid];
n259 -> n274  [key=0, style=solid];
n259 -> n121  [key=2, style=dotted];
n260 -> n261  [key=0, style=solid];
n260 -> n264  [key=0, style=solid];
n260 -> n20  [key=2, style=dotted];
n261 -> n262  [key=0, style=solid];
n261 -> n248  [key=2, style=dotted];
n262 -> n263  [key=0, style=solid];
n262 -> n21  [key=2, style=dotted];
n264 -> n265  [key=0, style=solid];
n264 -> n266  [key=0, style=solid];
n264 -> n132  [key=2, style=dotted];
n267 -> n268  [key=0, style=solid];
n268 -> n269  [key=0, style=solid];
n268 -> n271  [color=darkseagreen4, key=1, label=resolvedRequired, style=dashed];
n270 -> n277  [key=0, style=solid];
n270 -> n163  [key=2, style=dotted];
n270 -> n164  [key=2, style=dotted];
n272 -> n277  [key=0, style=solid];
n272 -> n163  [key=2, style=dotted];
n272 -> n164  [key=2, style=dotted];
n274 -> n275  [key=0, style=solid];
n274 -> n277  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n278 -> n513  [key=0, style=solid];
n278 -> n515  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n278 -> n517  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n279 -> n522  [key=0, style=solid];
n279 -> n524  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n279 -> n526  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n266 -> n267  [key=0, style=solid];
n266 -> n273  [key=0, style=solid];
n263 -> n277  [key=0, style=solid];
n265 -> n277  [key=0, style=solid];
n273 -> n277  [key=0, style=solid];
n269 -> n270  [key=0, style=solid];
n269 -> n271  [key=0, style=solid];
n271 -> n272  [key=0, style=solid];
n271 -> n273  [key=0, style=solid];
n275 -> n276  [key=0, style=solid];
n275 -> n277  [color=darkseagreen4, key=1, label="out object", style=dashed];
n277 -> n247  [color=blue, key=0, style=bold];
n276 -> n277  [key=0, style=solid];
n281 -> n282  [key=0, style=solid];
n281 -> n51  [key=2, style=dotted];
n282 -> n283  [key=0, style=solid];
n282 -> n92  [key=2, style=dotted];
n282 -> n117  [key=2, style=dotted];
n283 -> n284  [key=0, style=solid];
n283 -> n285  [key=0, style=solid];
n283 -> n288  [key=2, style=dotted];
n284 -> n285  [key=0, style=solid];
n284 -> n289  [key=2, style=dotted];
n285 -> n286  [key=0, style=solid];
n285 -> n287  [key=0, style=solid];
n285 -> n50  [key=2, style=dotted];
n286 -> n287  [key=0, style=solid];
n286 -> n52  [key=2, style=dotted];
n288 -> n290  [key=0, style=solid];
n288 -> n293  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n289 -> n296  [key=0, style=solid];
n289 -> n298  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n289 -> n299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n289 -> n300  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n287 -> n246  [color=blue, key=0, style=bold];
n290 -> n291  [key=0, style=solid];
n290 -> n293  [color=darkseagreen4, key=1, label=objectContract, style=dashed];
n293 -> n294  [key=0, style=solid];
n293 -> n295  [key=2, style=dotted];
n291 -> n292  [key=0, style=solid];
n291 -> n293  [key=0, style=solid];
n292 -> n294  [key=0, style=solid];
n294 -> n288  [color=blue, key=0, style=bold];
n296 -> n297  [key=0, style=solid];
n296 -> n175  [key=2, style=dotted];
n296 -> n298  [color=darkseagreen4, key=1, label=reference, style=dashed];
n296 -> n300  [color=darkseagreen4, key=1, label=reference, style=dashed];
n298 -> n299  [key=0, style=solid];
n298 -> n176  [key=2, style=dotted];
n298 -> n165  [key=2, style=dotted];
n298 -> n166  [key=2, style=dotted];
n299 -> n300  [key=0, style=solid];
n299 -> n53  [key=2, style=dotted];
n300 -> n301  [key=0, style=solid];
n300 -> n177  [key=2, style=dotted];
n297 -> n298  [key=0, style=solid];
n297 -> n299  [key=0, style=solid];
n301 -> n289  [color=blue, key=0, style=bold];
n302 -> n303  [key=0, style=solid];
n302 -> n308  [key=2, style=dotted];
n302 -> n304  [color=darkseagreen4, key=1, label=typeName, style=dashed];
n302 -> n306  [color=darkseagreen4, key=1, label=typeName, style=dashed];
n304 -> n305  [key=0, style=solid];
n304 -> n176  [key=2, style=dotted];
n304 -> n165  [key=2, style=dotted];
n304 -> n166  [key=2, style=dotted];
n305 -> n306  [key=0, style=solid];
n305 -> n53  [key=2, style=dotted];
n306 -> n307  [key=0, style=solid];
n306 -> n177  [key=2, style=dotted];
n303 -> n304  [key=0, style=solid];
n303 -> n305  [key=0, style=solid];
n307 -> n52  [color=blue, key=0, style=bold];
n309 -> n310  [key=0, style=solid];
n310 -> n129  [color=blue, key=0, style=bold];
n311 -> n312  [key=0, style=solid];
n312 -> n117  [color=blue, key=0, style=bold];
n313 -> n314  [key=0, style=solid];
n314 -> n315  [key=0, style=solid];
n315 -> n313  [color=blue, key=0, style=bold];
n316 -> n317  [key=0, style=solid];
n316 -> n318  [key=0, style=solid];
n316 -> n20  [key=2, style=dotted];
n317 -> n327  [key=0, style=solid];
n317 -> n21  [key=2, style=dotted];
n318 -> n319  [key=0, style=solid];
n318 -> n320  [key=0, style=solid];
n318 -> n132  [key=2, style=dotted];
n320 -> n321  [key=0, style=solid];
n320 -> n245  [key=2, style=dotted];
n322 -> n323  [key=0, style=solid];
n322 -> n36  [key=2, style=dotted];
n322 -> n176  [key=2, style=dotted];
n322 -> n165  [key=2, style=dotted];
n322 -> n166  [key=2, style=dotted];
n323 -> n324  [key=0, style=solid];
n323 -> n26  [key=2, style=dotted];
n323 -> n328  [key=2, style=dotted];
n325 -> n326  [key=0, style=solid];
n325 -> n36  [key=2, style=dotted];
n325 -> n176  [key=2, style=dotted];
n325 -> n165  [key=2, style=dotted];
n325 -> n166  [key=2, style=dotted];
n319 -> n327  [key=0, style=solid];
n321 -> n322  [key=0, style=solid];
n321 -> n323  [key=0, style=solid];
n324 -> n325  [key=0, style=solid];
n324 -> n326  [key=0, style=solid];
n326 -> n327  [key=0, style=solid];
n326 -> n253  [key=2, style=dotted];
n327 -> n83  [color=blue, key=0, style=bold];
n329 -> n330  [key=0, style=solid];
n330 -> n331  [key=0, style=solid];
n330 -> n332  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
n330 -> n333  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
n330 -> n344  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
n330 -> n351  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
n331 -> n332  [key=0, style=solid];
n331 -> n198  [key=2, style=dotted];
n333 -> n334  [key=0, style=solid];
n333 -> n353  [key=2, style=dotted];
n333 -> n348  [color=darkseagreen4, key=1, label=hasWrittenMetadataObject, style=dashed];
n334 -> n335  [key=0, style=solid];
n334 -> n354  [key=2, style=dotted];
n335 -> n336  [key=0, style=solid];
n335 -> n345  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
n337 -> n338  [key=0, style=solid];
n337 -> n347  [key=0, style=solid];
n337 -> n339  [color=darkseagreen4, key=1, label=value, style=dashed];
n337 -> n340  [color=darkseagreen4, key=1, label=value, style=dashed];
n337 -> n341  [color=darkseagreen4, key=1, label=value, style=dashed];
n337 -> n342  [color=darkseagreen4, key=1, label=value, style=dashed];
n338 -> n339  [key=0, style=solid];
n338 -> n19  [key=2, style=dotted];
n338 -> n341  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
n338 -> n342  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
n339 -> n340  [key=0, style=solid];
n339 -> n341  [key=0, style=solid];
n339 -> n20  [key=2, style=dotted];
n340 -> n343  [key=0, style=solid];
n340 -> n337  [key=0, style=solid];
n340 -> n21  [key=2, style=dotted];
n341 -> n342  [key=0, style=solid];
n341 -> n343  [key=0, style=solid];
n341 -> n337  [key=0, style=solid];
n341 -> n132  [key=2, style=dotted];
n342 -> n343  [key=0, style=solid];
n342 -> n337  [key=0, style=solid];
n342 -> n22  [key=2, style=dotted];
n344 -> n345  [key=0, style=solid];
n344 -> n346  [key=0, style=solid];
n344 -> n23  [key=2, style=dotted];
n345 -> n337  [key=0, style=solid];
n345 -> n24  [key=2, style=dotted];
n347 -> n348  [key=0, style=solid];
n347 -> n355  [key=2, style=dotted];
n349 -> n350  [key=0, style=solid];
n349 -> n55  [key=2, style=dotted];
n351 -> n352  [key=0, style=solid];
n351 -> n199  [key=2, style=dotted];
n332 -> n333  [key=0, style=solid];
n332 -> n245  [key=2, style=dotted];
n353 -> n396  [key=0, style=solid];
n353 -> n397  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n353 -> n398  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
n353 -> n401  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n353 -> n403  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n353 -> n405  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n353 -> n406  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n353 -> n407  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
n353 -> n408  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
n348 -> n349  [key=0, style=solid];
n348 -> n350  [key=0, style=solid];
n336 -> n337  [key=0, style=solid];
n336 -> n344  [color=darkseagreen4, key=1, label=index, style=dashed];
n343 -> n344  [key=0, style=solid];
n346 -> n352  [key=0, style=solid];
n350 -> n351  [key=0, style=solid];
n350 -> n253  [key=2, style=dotted];
n352 -> n85  [color=blue, key=0, style=bold];
n356 -> n357  [key=0, style=solid];
n356 -> n198  [key=2, style=dotted];
n357 -> n358  [key=0, style=solid];
n357 -> n245  [key=2, style=dotted];
n358 -> n359  [key=0, style=solid];
n358 -> n353  [key=2, style=dotted];
n358 -> n360  [color=darkseagreen4, key=1, label=hasWrittenMetadataObject, style=dashed];
n359 -> n360  [key=0, style=solid];
n359 -> n365  [key=2, style=dotted];
n359 -> n366  [key=2, style=dotted];
n361 -> n362  [key=0, style=solid];
n361 -> n55  [key=2, style=dotted];
n363 -> n364  [key=0, style=solid];
n363 -> n199  [key=2, style=dotted];
n360 -> n361  [key=0, style=solid];
n360 -> n362  [key=0, style=solid];
n366 -> n367  [key=0, style=solid];
n366 -> n371  [color=darkseagreen4, key=1, label="int[]", style=dashed];
n366 -> n373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n366 -> n374  [color=darkseagreen4, key=1, label="System.Array", style=dashed];
n366 -> n375  [color=darkseagreen4, key=1, label="System.Array", style=dashed];
n366 -> n377  [color=darkseagreen4, key=1, label="System.Array", style=dashed];
n366 -> n379  [color=darkseagreen4, key=1, label="System.Array", style=dashed];
n366 -> n380  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
n366 -> n381  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
n366 -> n382  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n366 -> n383  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n366 -> n384  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n366 -> n386  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n366 -> n387  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n366 -> n389  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n366 -> n391  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n362 -> n363  [key=0, style=solid];
n362 -> n253  [key=2, style=dotted];
n364 -> n86  [color=blue, key=0, style=bold];
n367 -> n368  [key=0, style=solid];
n367 -> n370  [color=darkseagreen4, key=1, label=dimension, style=dashed];
n367 -> n374  [color=darkseagreen4, key=1, label=dimension, style=dashed];
n367 -> n375  [color=darkseagreen4, key=1, label=dimension, style=dashed];
n367 -> n376  [color=darkseagreen4, key=1, label=dimension, style=dashed];
n371 -> n372  [key=0, style=solid];
n373 -> n374  [key=0, style=solid];
n373 -> n354  [key=2, style=dotted];
n374 -> n375  [key=0, style=solid];
n374 -> n393  [key=2, style=dotted];
n374 -> n376  [color=darkseagreen4, key=1, label=i, style=dashed];
n374 -> n386  [color=darkseagreen4, key=1, label=i, style=dashed];
n374 -> n390  [color=darkseagreen4, key=1, label=i, style=dashed];
n375 -> n376  [key=0, style=solid];
n375 -> n391  [key=0, style=solid];
n375 -> n394  [key=2, style=dotted];
n377 -> n378  [key=0, style=solid];
n379 -> n380  [key=0, style=solid];
n379 -> n395  [key=2, style=dotted];
n379 -> n381  [color=darkseagreen4, key=1, label=value, style=dashed];
n379 -> n382  [color=darkseagreen4, key=1, label=value, style=dashed];
n379 -> n383  [color=darkseagreen4, key=1, label=value, style=dashed];
n379 -> n384  [color=darkseagreen4, key=1, label=value, style=dashed];
n380 -> n381  [key=0, style=solid];
n380 -> n19  [key=2, style=dotted];
n380 -> n383  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
n380 -> n384  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
n381 -> n382  [key=0, style=solid];
n381 -> n383  [key=0, style=solid];
n381 -> n20  [key=2, style=dotted];
n382 -> n385  [key=0, style=solid];
n382 -> n390  [key=0, style=solid];
n382 -> n21  [key=2, style=dotted];
n383 -> n384  [key=0, style=solid];
n383 -> n385  [key=0, style=solid];
n383 -> n390  [key=0, style=solid];
n383 -> n132  [key=2, style=dotted];
n384 -> n385  [key=0, style=solid];
n384 -> n390  [key=0, style=solid];
n384 -> n22  [key=2, style=dotted];
n386 -> n387  [key=0, style=solid];
n386 -> n388  [key=0, style=solid];
n386 -> n23  [key=2, style=dotted];
n387 -> n390  [key=0, style=solid];
n387 -> n24  [key=2, style=dotted];
n389 -> n390  [key=0, style=solid];
n389 -> n366  [key=2, style=dotted];
n391 -> n392  [key=0, style=solid];
n391 -> n355  [key=2, style=dotted];
n368 -> n369  [key=0, style=solid];
n368 -> n371  [color=darkseagreen4, key=1, label=newIndices, style=dashed];
n368 -> n376  [color=darkseagreen4, key=1, label=newIndices, style=dashed];
n368 -> n377  [color=darkseagreen4, key=1, label=newIndices, style=dashed];
n368 -> n379  [color=darkseagreen4, key=1, label=newIndices, style=dashed];
n368 -> n389  [color=darkseagreen4, key=1, label=newIndices, style=dashed];
n370 -> n371  [key=0, style=solid];
n370 -> n373  [key=0, style=solid];
n376 -> n377  [key=0, style=solid];
n369 -> n370  [key=0, style=solid];
n369 -> n371  [color=darkseagreen4, key=1, label=i, style=dashed];
n369 -> n372  [color=darkseagreen4, key=1, label=i, style=dashed];
n372 -> n370  [key=0, style=solid];
n372 -> n372  [color=darkseagreen4, key=1, label=i, style=dashed];
n390 -> n375  [key=0, style=solid];
n390 -> n390  [color=darkseagreen4, key=1, label=i, style=dashed];
n378 -> n379  [key=0, style=solid];
n378 -> n389  [key=0, style=solid];
n385 -> n386  [key=0, style=solid];
n388 -> n392  [key=0, style=solid];
n392 -> n366  [color=blue, key=0, style=bold];
n396 -> n397  [key=0, style=solid];
n396 -> n92  [key=2, style=dotted];
n396 -> n117  [key=2, style=dotted];
n397 -> n398  [key=0, style=solid];
n397 -> n288  [key=2, style=dotted];
n397 -> n397  [color=darkseagreen4, key=1, label=isReference, style=dashed];
n397 -> n399  [color=darkseagreen4, key=1, label=isReference, style=dashed];
n397 -> n402  [color=darkseagreen4, key=1, label=isReference, style=dashed];
n398 -> n399  [key=0, style=solid];
n398 -> n50  [key=2, style=dotted];
n398 -> n404  [color=darkseagreen4, key=1, label=includeTypeDetails, style=dashed];
n401 -> n402  [key=0, style=solid];
n401 -> n51  [key=2, style=dotted];
n403 -> n404  [key=0, style=solid];
n403 -> n289  [key=2, style=dotted];
n405 -> n406  [key=0, style=solid];
n405 -> n36  [key=2, style=dotted];
n405 -> n52  [key=2, style=dotted];
n406 -> n407  [key=0, style=solid];
n406 -> n53  [key=2, style=dotted];
n407 -> n408  [key=0, style=solid];
n407 -> n409  [key=0, style=solid];
n408 -> n409  [key=0, style=solid];
n408 -> n37  [key=2, style=dotted];
n399 -> n400  [key=0, style=solid];
n399 -> n409  [color=darkseagreen4, key=1, label=writeMetadataObject, style=dashed];
n402 -> n403  [key=0, style=solid];
n402 -> n404  [key=0, style=solid];
n404 -> n405  [key=0, style=solid];
n404 -> n406  [key=0, style=solid];
n400 -> n401  [key=0, style=solid];
n400 -> n407  [key=0, style=solid];
n409 -> n410  [key=0, style=solid];
n410 -> n353  [color=blue, key=0, style=bold];
n411 -> n412  [key=0, style=solid];
n411 -> n414  [color=darkseagreen4, key=1, label=object, style=dashed];
n412 -> n413  [key=0, style=solid];
n412 -> n414  [key=0, style=solid];
n414 -> n415  [key=0, style=solid];
n414 -> n416  [key=0, style=solid];
n414 -> n129  [key=2, style=dotted];
n414 -> n36  [key=2, style=dotted];
n414 -> n418  [key=2, style=dotted];
n414 -> n131  [key=2, style=dotted];
n413 -> n417  [key=0, style=solid];
n415 -> n417  [key=0, style=solid];
n416 -> n417  [key=0, style=solid];
n417 -> n411  [color=blue, key=0, style=bold];
n419 -> n420  [key=0, style=solid];
n419 -> n422  [color=darkseagreen4, key=1, label=resolvedTypeNameHandling, style=dashed];
n420 -> n421  [key=0, style=solid];
n420 -> n422  [key=0, style=solid];
n420 -> n313  [key=2, style=dotted];
n423 -> n424  [key=0, style=solid];
n423 -> n426  [key=0, style=solid];
n424 -> n425  [key=0, style=solid];
n424 -> n433  [key=0, style=solid];
n426 -> n427  [key=0, style=solid];
n426 -> n429  [key=0, style=solid];
n427 -> n428  [key=0, style=solid];
n427 -> n433  [key=0, style=solid];
n431 -> n432  [key=0, style=solid];
n431 -> n433  [key=0, style=solid];
n422 -> n423  [key=0, style=solid];
n422 -> n433  [key=0, style=solid];
n422 -> n313  [key=2, style=dotted];
n421 -> n434  [key=0, style=solid];
n433 -> n434  [key=0, style=solid];
n425 -> n434  [key=0, style=solid];
n429 -> n430  [key=0, style=solid];
n429 -> n433  [key=0, style=solid];
n428 -> n434  [key=0, style=solid];
n430 -> n431  [key=0, style=solid];
n430 -> n37  [key=2, style=dotted];
n432 -> n434  [key=0, style=solid];
n434 -> n50  [color=blue, key=0, style=bold];
n435 -> n436  [key=0, style=solid];
n436 -> n437  [key=0, style=solid];
n436 -> n438  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
n436 -> n439  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
n436 -> n460  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
n436 -> n465  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
n437 -> n438  [key=0, style=solid];
n437 -> n198  [key=2, style=dotted];
n439 -> n440  [key=0, style=solid];
n439 -> n246  [key=2, style=dotted];
n440 -> n441  [key=0, style=solid];
n440 -> n442  [key=0, style=solid];
n441 -> n442  [key=0, style=solid];
n441 -> n37  [key=2, style=dotted];
n442 -> n443  [key=0, style=solid];
n442 -> n444  [key=0, style=solid];
n443 -> n444  [key=0, style=solid];
n443 -> n37  [key=2, style=dotted];
n444 -> n445  [key=0, style=solid];
n444 -> n461  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
n445 -> n446  [key=0, style=solid];
n445 -> n467  [key=2, style=dotted];
n445 -> n447  [color=darkseagreen4, key=1, label=e, style=dashed];
n449 -> n450  [key=0, style=solid];
n449 -> n250  [key=2, style=dotted];
n449 -> n449  [color=darkseagreen4, key=1, label=entry, style=dashed];
n449 -> n451  [color=darkseagreen4, key=1, label=entry, style=dashed];
n449 -> n454  [color=darkseagreen4, key=1, label=escape, style=dashed];
n449 -> n457  [color=darkseagreen4, key=1, label=escape, style=dashed];
n450 -> n451  [key=0, style=solid];
n450 -> n251  [key=2, style=dotted];
n450 -> n450  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
n450 -> n454  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
n450 -> n457  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
n450 -> n460  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
n452 -> n453  [key=0, style=solid];
n452 -> n19  [key=2, style=dotted];
n452 -> n456  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
n452 -> n458  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
n453 -> n454  [key=0, style=solid];
n453 -> n456  [key=0, style=solid];
n453 -> n20  [key=2, style=dotted];
n454 -> n455  [key=0, style=solid];
n454 -> n53  [key=2, style=dotted];
n455 -> n459  [key=0, style=solid];
n455 -> n446  [key=0, style=solid];
n455 -> n21  [key=2, style=dotted];
n456 -> n457  [key=0, style=solid];
n456 -> n446  [key=0, style=solid];
n456 -> n132  [key=2, style=dotted];
n457 -> n458  [key=0, style=solid];
n457 -> n53  [key=2, style=dotted];
n458 -> n459  [key=0, style=solid];
n458 -> n446  [key=0, style=solid];
n458 -> n22  [key=2, style=dotted];
n460 -> n461  [key=0, style=solid];
n460 -> n462  [key=0, style=solid];
n460 -> n23  [key=2, style=dotted];
n461 -> n446  [key=0, style=solid];
n461 -> n24  [key=2, style=dotted];
n463 -> n464  [key=0, style=solid];
n463 -> n55  [key=2, style=dotted];
n465 -> n466  [key=0, style=solid];
n465 -> n199  [key=2, style=dotted];
n438 -> n439  [key=0, style=solid];
n438 -> n245  [key=2, style=dotted];
n446 -> n447  [key=0, style=solid];
n446 -> n463  [key=0, style=solid];
n446 -> n468  [key=2, style=dotted];
n447 -> n448  [key=0, style=solid];
n447 -> n449  [color=darkseagreen4, key=1, label=entry, style=dashed];
n448 -> n449  [key=0, style=solid];
n451 -> n452  [key=0, style=solid];
n451 -> n451  [color=darkseagreen4, key=1, label=entry, style=dashed];
n451 -> n453  [color=darkseagreen4, key=1, label=value, style=dashed];
n451 -> n455  [color=darkseagreen4, key=1, label=value, style=dashed];
n451 -> n456  [color=darkseagreen4, key=1, label=value, style=dashed];
n451 -> n458  [color=darkseagreen4, key=1, label=value, style=dashed];
n459 -> n460  [key=0, style=solid];
n462 -> n463  [key=0, style=solid];
n462 -> n466  [key=0, style=solid];
n466 -> n89  [color=blue, key=0, style=bold];
n464 -> n465  [key=0, style=solid];
n464 -> n253  [key=2, style=dotted];
n469 -> n470  [key=0, style=solid];
n470 -> n471  [key=0, style=solid];
n470 -> n492  [key=0, style=solid];
n471 -> n472  [key=0, style=solid];
n475 -> n476  [key=0, style=solid];
n475 -> n498  [key=2, style=dotted];
n475 -> n478  [color=darkseagreen4, key=1, label=dt, style=dashed];
n478 -> n479  [key=0, style=solid];
n478 -> n500  [key=2, style=dotted];
n482 -> n483  [key=0, style=solid];
n482 -> n484  [color=darkseagreen4, key=1, label=d, style=dashed];
n487 -> n488  [key=0, style=solid];
n487 -> n489  [color=darkseagreen4, key=1, label=f, style=dashed];
n491 -> n497  [key=0, style=solid];
n491 -> n504  [key=2, style=dotted];
n492 -> n493  [key=0, style=solid];
n492 -> n495  [key=0, style=solid];
n492 -> n36  [key=2, style=dotted];
n492 -> n184  [key=2, style=dotted];
n492 -> n494  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
n496 -> n497  [key=0, style=solid];
n496 -> n505  [key=2, style=dotted];
n472 -> n473  [key=0, style=solid];
n472 -> n480  [key=0, style=solid];
n472 -> n485  [key=0, style=solid];
n472 -> n490  [key=0, style=solid];
n473 -> n474  [key=0, style=solid];
n480 -> n481  [key=0, style=solid];
n485 -> n486  [key=0, style=solid];
n490 -> n491  [key=0, style=solid];
n490 -> n497  [color=darkseagreen4, key=1, label="out bool", style=dashed];
n474 -> n475  [key=0, style=solid];
n476 -> n477  [key=0, style=solid];
n477 -> n478  [key=0, style=solid];
n477 -> n499  [key=2, style=dotted];
n477 -> n479  [color=darkseagreen4, key=1, label=sw, style=dashed];
n479 -> n497  [key=0, style=solid];
n479 -> n501  [key=2, style=dotted];
n481 -> n482  [key=0, style=solid];
n483 -> n484  [key=0, style=solid];
n484 -> n497  [key=0, style=solid];
n484 -> n502  [key=2, style=dotted];
n486 -> n487  [key=0, style=solid];
n488 -> n489  [key=0, style=solid];
n489 -> n497  [key=0, style=solid];
n489 -> n503  [key=2, style=dotted];
n497 -> n250  [color=blue, key=0, style=bold];
n493 -> n494  [key=0, style=solid];
n493 -> n497  [color=darkseagreen4, key=1, label="out bool", style=dashed];
n495 -> n496  [key=0, style=solid];
n495 -> n497  [color=darkseagreen4, key=1, label="out bool", style=dashed];
n494 -> n497  [key=0, style=solid];
n506 -> n507  [key=0, style=solid];
n506 -> n25  [key=2, style=dotted];
n507 -> n508  [key=0, style=solid];
n507 -> n509  [key=0, style=solid];
n508 -> n509  [key=0, style=solid];
n508 -> n81  [key=2, style=dotted];
n509 -> n510  [key=0, style=solid];
n509 -> n511  [key=0, style=solid];
n510 -> n509  [key=0, style=solid];
n510 -> n512  [key=2, style=dotted];
n511 -> n24  [color=blue, key=0, style=bold];
n513 -> n514  [key=0, style=solid];
n513 -> n515  [key=0, style=solid];
n515 -> n516  [key=0, style=solid];
n515 -> n520  [key=2, style=dotted];
n515 -> n517  [color=darkseagreen4, key=1, label=shouldSerialize, style=dashed];
n515 -> n518  [color=darkseagreen4, key=1, label=shouldSerialize, style=dashed];
n517 -> n518  [key=0, style=solid];
n517 -> n521  [key=2, style=dotted];
n517 -> n165  [key=2, style=dotted];
n517 -> n166  [key=2, style=dotted];
n514 -> n519  [key=0, style=solid];
n516 -> n517  [key=0, style=solid];
n516 -> n518  [key=0, style=solid];
n518 -> n519  [key=0, style=solid];
n519 -> n278  [color=blue, key=0, style=bold];
n522 -> n523  [key=0, style=solid];
n522 -> n524  [key=0, style=solid];
n524 -> n525  [key=0, style=solid];
n524 -> n520  [key=2, style=dotted];
n524 -> n526  [color=darkseagreen4, key=1, label=isSpecified, style=dashed];
n524 -> n527  [color=darkseagreen4, key=1, label=isSpecified, style=dashed];
n526 -> n527  [key=0, style=solid];
n526 -> n521  [key=2, style=dotted];
n526 -> n165  [key=2, style=dotted];
n526 -> n166  [key=2, style=dotted];
n523 -> n528  [key=0, style=solid];
n525 -> n526  [key=0, style=solid];
n525 -> n527  [key=0, style=solid];
n527 -> n528  [key=0, style=solid];
n528 -> n279  [color=blue, key=0, style=bold];
d14 -> n15  [color=green, key=0, style=solid];
d14 -> n25  [color=green, key=2, style=dotted];
d39 -> d40  [color=green, key=0, style=solid];
d39 -> n48  [color=green, key=0, style=solid];
d40 -> d41  [color=green, key=0, style=solid];
d40 -> n50  [color=green, key=2, style=dotted];
d41 -> d42  [color=green, key=0, style=solid];
d41 -> n48  [color=green, key=0, style=solid];
d42 -> d43  [color=green, key=0, style=solid];
d42 -> n51  [color=green, key=2, style=dotted];
d43 -> d44  [color=green, key=0, style=solid];
d43 -> n52  [color=green, key=2, style=dotted];
d44 -> d45  [color=green, key=0, style=solid];
d44 -> n53  [color=green, key=2, style=dotted];
d45 -> n46  [color=green, key=0, style=solid];
d45 -> n54  [color=green, key=2, style=dotted];
m0_27 -> m0_37  [key=2, style=dotted];
m0_27 -> m0_38  [key=2, style=dotted];
m0_27 -> m0_39  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_850 -> m0_851  [key=0, style=solid];
m0_854 -> m0_9  [key=2, style=dotted];
m0_854 -> m0_855  [key=0, style=solid];
m0_854 -> m0_858  [key=2, style=dotted];
m0_851 -> m0_854  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_851 -> m0_79  [key=2, style=dotted];
m0_851 -> m0_261  [key=2, style=dotted];
m0_851 -> m0_275  [key=2, style=dotted];
m0_851 -> m0_119  [key=2, style=dotted];
m0_851 -> m0_84  [key=2, style=dotted];
m0_851 -> m0_852  [key=0, style=solid];
m0_851 -> m0_83  [key=2, style=dotted];
m0_851 -> m0_85  [key=2, style=dotted];
m0_851 -> m0_856  [key=2, style=dotted];
m0_852 -> m0_854  [color=darkseagreen4, key=1, label=a2, style=dashed];
m0_852 -> m0_853  [key=0, style=solid];
m0_852 -> m0_857  [key=2, style=dotted];
m0_853 -> m0_854  [key=0, style=solid];
m0_853 -> m0_810  [key=2, style=dotted];
m0_853 -> m0_811  [key=2, style=dotted];
m0_855 -> m0_850  [color=blue, key=0, style=bold];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_58  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_53 -> m0_61  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_40  [key=2, style=dotted];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_15  [key=2, style=dotted];
m0_13 -> m0_13  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m0_13 -> m0_37  [key=2, style=dotted];
m0_13 -> m0_38  [key=2, style=dotted];
m0_13 -> m0_39  [key=2, style=dotted];
m0_13 -> m0_16  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_14 -> m0_12  [color=blue, key=0, style=bold];
m0_14 -> m0_40  [key=2, style=dotted];
m0_14 -> m0_15  [key=0, style=solid];
m0_102 -> m0_103  [key=0, style=solid];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_40  [key=2, style=dotted];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_72  [key=2, style=dotted];
m0_70 -> m0_73  [key=2, style=dotted];
m0_70 -> m0_84  [key=2, style=dotted];
m0_70 -> m0_76  [color=darkseagreen4, key=1, label=o1, style=dashed];
m0_70 -> m0_77  [color=darkseagreen4, key=1, label=o1, style=dashed];
m0_70 -> m0_74  [color=darkseagreen4, key=1, label=o1, style=dashed];
m0_70 -> m0_75  [color=darkseagreen4, key=1, label=o1, style=dashed];
m0_71 -> m0_69  [color=blue, key=0, style=bold];
m0_71 -> m0_40  [key=2, style=dotted];
m0_71 -> m0_72  [key=0, style=solid];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_18  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_16 -> m0_19  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_16 -> m0_40  [key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_23  [key=2, style=dotted];
m0_17 -> m0_19  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_17 -> m0_20  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_17 -> m0_37  [key=2, style=dotted];
m0_17 -> m0_38  [key=2, style=dotted];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_24  [key=2, style=dotted];
m0_18 -> m0_25  [key=2, style=dotted];
m0_18 -> m0_41  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_26  [key=2, style=dotted];
m0_19 -> m0_41  [key=2, style=dotted];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_27  [key=2, style=dotted];
m0_20 -> m0_22  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_20 -> m0_39  [key=2, style=dotted];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_28  [key=2, style=dotted];
m0_21 -> m0_40  [key=2, style=dotted];
m0_22 -> m0_16  [color=blue, key=0, style=bold];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_40  [key=2, style=dotted];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_11  [key=2, style=dotted];
m0_9 -> m0_9  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m0_695 -> m0_696  [key=0, style=solid];
m0_701 -> m0_9  [key=2, style=dotted];
m0_701 -> m0_702  [key=0, style=solid];
m0_701 -> m0_79  [key=2, style=dotted];
m0_701 -> m0_45  [key=2, style=dotted];
m0_697 -> m0_701  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m0_697 -> m0_698  [key=0, style=solid];
m0_697 -> m0_706  [key=2, style=dotted];
m0_697 -> m0_605  [key=2, style=dotted];
m0_697 -> m0_699  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m0_697 -> m0_700  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m0_697 -> m0_702  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m0_697 -> m0_703  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m0_697 -> m0_704  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m0_700 -> m0_701  [key=0, style=solid];
m0_700 -> m0_40  [key=2, style=dotted];
m0_702 -> m0_703  [key=0, style=solid];
m0_702 -> m0_40  [key=2, style=dotted];
m0_696 -> m0_79  [key=2, style=dotted];
m0_696 -> m0_119  [key=2, style=dotted];
m0_696 -> m0_697  [key=0, style=solid];
m0_696 -> m0_699  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_698 -> m0_40  [key=2, style=dotted];
m0_698 -> m0_90  [key=2, style=dotted];
m0_698 -> m0_699  [key=0, style=solid];
m0_699 -> m0_700  [key=0, style=solid];
m0_699 -> m0_40  [key=2, style=dotted];
m0_703 -> m0_40  [key=2, style=dotted];
m0_703 -> m0_704  [key=0, style=solid];
m0_704 -> m0_40  [key=2, style=dotted];
m0_704 -> m0_705  [key=0, style=solid];
m0_705 -> m0_695  [color=blue, key=0, style=bold];
m0_876 -> m0_877  [key=0, style=solid];
m0_877 -> m0_330  [key=2, style=dotted];
m0_877 -> m0_877  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m0_877 -> m0_878  [key=0, style=solid];
m0_877 -> m0_879  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_878 -> m0_876  [color=blue, key=0, style=bold];
m0_15 -> m0_40  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid];
m0_830 -> m0_831  [key=0, style=solid];
m0_831 -> m0_79  [key=2, style=dotted];
m0_831 -> m0_119  [key=2, style=dotted];
m0_831 -> m0_832  [key=0, style=solid];
m0_831 -> m0_833  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_831 -> m0_834  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_831 -> m0_835  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_831 -> m0_836  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_831 -> m0_837  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_831 -> m0_838  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_831 -> m0_839  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_831 -> m0_840  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_831 -> m0_841  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_831 -> m0_842  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_831 -> m0_843  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_831 -> m0_844  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_831 -> m0_845  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_831 -> m0_846  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_831 -> m0_847  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_833 -> m0_40  [key=2, style=dotted];
m0_833 -> m0_834  [key=0, style=solid];
m0_834 -> m0_40  [key=2, style=dotted];
m0_834 -> m0_835  [key=0, style=solid];
m0_835 -> m0_40  [key=2, style=dotted];
m0_835 -> m0_836  [key=0, style=solid];
m0_836 -> m0_40  [key=2, style=dotted];
m0_836 -> m0_837  [key=0, style=solid];
m0_837 -> m0_40  [key=2, style=dotted];
m0_837 -> m0_90  [key=2, style=dotted];
m0_837 -> m0_838  [key=0, style=solid];
m0_839 -> m0_40  [key=2, style=dotted];
m0_839 -> m0_840  [key=0, style=solid];
m0_840 -> m0_40  [key=2, style=dotted];
m0_840 -> m0_841  [key=0, style=solid];
m0_841 -> m0_40  [key=2, style=dotted];
m0_841 -> m0_842  [key=0, style=solid];
m0_842 -> m0_40  [key=2, style=dotted];
m0_842 -> m0_843  [key=0, style=solid];
m0_843 -> m0_40  [key=2, style=dotted];
m0_843 -> m0_844  [key=0, style=solid];
m0_844 -> m0_40  [key=2, style=dotted];
m0_844 -> m0_90  [key=2, style=dotted];
m0_844 -> m0_845  [key=0, style=solid];
m0_846 -> m0_40  [key=2, style=dotted];
m0_846 -> m0_847  [key=0, style=solid];
m0_847 -> m0_40  [key=2, style=dotted];
m0_847 -> m0_90  [key=2, style=dotted];
m0_847 -> m0_848  [key=0, style=solid];
m0_832 -> m0_833  [key=0, style=solid];
m0_832 -> m0_849  [key=2, style=dotted];
m0_838 -> m0_839  [key=0, style=solid];
m0_838 -> m0_849  [key=2, style=dotted];
m0_845 -> m0_846  [key=0, style=solid];
m0_845 -> m0_849  [key=2, style=dotted];
m0_848 -> m0_830  [color=blue, key=0, style=bold];
m0_28 -> m0_40  [key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid];
m0_883 -> m0_884  [key=0, style=solid];
m0_884 -> m0_79  [key=2, style=dotted];
m0_884 -> m0_745  [key=2, style=dotted];
m0_884 -> m0_84  [key=2, style=dotted];
m0_884 -> m0_885  [key=0, style=solid];
m0_884 -> m0_83  [key=2, style=dotted];
m0_884 -> m0_856  [key=2, style=dotted];
m0_884 -> m0_887  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_884 -> m0_889  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_884 -> m0_891  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_884 -> m0_893  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_884 -> m0_897  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_899 -> m0_119  [key=2, style=dotted];
m0_899 -> m0_900  [key=0, style=solid];
m0_899 -> m0_901  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_886 -> m0_40  [key=2, style=dotted];
m0_886 -> m0_887  [key=0, style=solid];
m0_888 -> m0_40  [key=2, style=dotted];
m0_888 -> m0_889  [key=0, style=solid];
m0_890 -> m0_40  [key=2, style=dotted];
m0_890 -> m0_891  [key=0, style=solid];
m0_892 -> m0_40  [key=2, style=dotted];
m0_892 -> m0_893  [key=0, style=solid];
m0_894 -> m0_40  [key=2, style=dotted];
m0_894 -> m0_895  [key=0, style=solid];
m0_896 -> m0_40  [key=2, style=dotted];
m0_896 -> m0_897  [key=0, style=solid];
m0_898 -> m0_40  [key=2, style=dotted];
m0_898 -> m0_899  [key=0, style=solid];
m0_900 -> m0_40  [key=2, style=dotted];
m0_900 -> m0_901  [key=0, style=solid];
m0_901 -> m0_40  [key=2, style=dotted];
m0_901 -> m0_902  [key=0, style=solid];
m0_885 -> m0_886  [key=0, style=solid];
m0_885 -> m0_903  [key=2, style=dotted];
m0_887 -> m0_888  [key=0, style=solid];
m0_887 -> m0_903  [key=2, style=dotted];
m0_889 -> m0_890  [key=0, style=solid];
m0_889 -> m0_903  [key=2, style=dotted];
m0_891 -> m0_892  [key=0, style=solid];
m0_891 -> m0_903  [key=2, style=dotted];
m0_893 -> m0_894  [key=0, style=solid];
m0_893 -> m0_903  [key=2, style=dotted];
m0_893 -> m0_895  [color=darkseagreen4, key=1, label=t, style=dashed];
m0_897 -> m0_898  [key=0, style=solid];
m0_897 -> m0_903  [key=2, style=dotted];
m0_895 -> m0_857  [key=2, style=dotted];
m0_895 -> m0_896  [key=0, style=solid];
m0_895 -> m0_895  [color=darkseagreen4, key=1, label=t, style=dashed];
m0_902 -> m0_883  [color=blue, key=0, style=bold];
m0_859 -> m0_860  [key=0, style=solid];
m0_863 -> m0_9  [key=2, style=dotted];
m0_863 -> m0_864  [key=0, style=solid];
m0_863 -> m0_858  [key=2, style=dotted];
m0_860 -> m0_863  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_860 -> m0_79  [key=2, style=dotted];
m0_860 -> m0_261  [key=2, style=dotted];
m0_860 -> m0_275  [key=2, style=dotted];
m0_860 -> m0_119  [key=2, style=dotted];
m0_860 -> m0_84  [key=2, style=dotted];
m0_860 -> m0_861  [key=0, style=solid];
m0_860 -> m0_83  [key=2, style=dotted];
m0_860 -> m0_85  [key=2, style=dotted];
m0_860 -> m0_856  [key=2, style=dotted];
m0_862 -> m0_863  [key=0, style=solid];
m0_862 -> m0_865  [key=2, style=dotted];
m0_861 -> m0_860  [color=darkorchid, key=3, label="Local variable System.ICloneable c", style=bold];
m0_861 -> m0_862  [key=0, style=solid];
m0_864 -> m0_859  [color=blue, key=0, style=bold];
m0_761 -> m0_762  [key=0, style=solid];
m0_762 -> m0_79  [key=2, style=dotted];
m0_762 -> m0_119  [key=2, style=dotted];
m0_762 -> m0_763  [key=0, style=solid];
m0_762 -> m0_765  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_762 -> m0_766  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_766 -> m0_40  [key=2, style=dotted];
m0_766 -> m0_90  [key=2, style=dotted];
m0_766 -> m0_767  [key=0, style=solid];
m0_764 -> m0_40  [key=2, style=dotted];
m0_764 -> m0_765  [key=0, style=solid];
m0_763 -> m0_764  [key=0, style=solid];
m0_763 -> m0_767  [color=darkseagreen4, key=1, label=first, style=dashed];
m0_763 -> m0_768  [color=darkseagreen4, key=1, label=first, style=dashed];
m0_765 -> m0_766  [key=0, style=solid];
m0_765 -> m0_770  [key=2, style=dotted];
m0_767 -> m0_102  [key=2, style=dotted];
m0_767 -> m0_768  [key=0, style=solid];
m0_768 -> m0_102  [key=2, style=dotted];
m0_768 -> m0_769  [key=0, style=solid];
m0_769 -> m0_761  [color=blue, key=0, style=bold];
m0_771 -> m0_772  [key=0, style=solid];
m0_772 -> m0_330  [key=2, style=dotted];
m0_772 -> m0_773  [key=0, style=solid];
m0_772 -> m0_774  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_773 -> m0_771  [color=blue, key=0, style=bold];
m0_121 -> m0_122  [key=0, style=solid];
m0_122 -> m0_79  [key=2, style=dotted];
m0_122 -> m0_123  [key=0, style=solid];
m0_122 -> m0_124  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_123 -> m0_40  [key=2, style=dotted];
m0_123 -> m0_124  [key=0, style=solid];
m0_124 -> m0_40  [key=2, style=dotted];
m0_124 -> m0_90  [key=2, style=dotted];
m0_124 -> m0_126  [key=2, style=dotted];
m0_124 -> m0_125  [key=0, style=solid];
m0_125 -> m0_121  [color=blue, key=0, style=bold];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_43  [color=darkseagreen4, key=1, label=bool, style=dashed];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_47  [key=2, style=dotted];
m0_42 -> m0_44  [color=darkseagreen4, key=1, label=hex, style=dashed];
m0_42 -> m0_45  [color=darkseagreen4, key=1, label=hex, style=dashed];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_45  [key=0, style=solid];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_48  [key=2, style=dotted];
m0_44 -> m0_44  [color=darkseagreen4, key=1, label=hex, style=dashed];
m0_45 -> m0_46  [key=0, style=solid];
m0_46 -> m0_41  [color=blue, key=0, style=bold];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_83  [key=2, style=dotted];
m0_465 -> m0_466  [key=0, style=solid];
m0_466 -> m0_42  [key=2, style=dotted];
m0_466 -> m0_40  [key=2, style=dotted];
m0_466 -> m0_467  [key=0, style=solid];
m0_466 -> m0_509  [key=2, style=dotted];
m0_467 -> m0_42  [key=2, style=dotted];
m0_467 -> m0_40  [key=2, style=dotted];
m0_467 -> m0_468  [key=0, style=solid];
m0_467 -> m0_509  [key=2, style=dotted];
m0_469 -> m0_42  [key=2, style=dotted];
m0_469 -> m0_40  [key=2, style=dotted];
m0_469 -> m0_470  [key=0, style=solid];
m0_469 -> m0_509  [key=2, style=dotted];
m0_470 -> m0_42  [key=2, style=dotted];
m0_470 -> m0_40  [key=2, style=dotted];
m0_470 -> m0_471  [key=0, style=solid];
m0_470 -> m0_509  [key=2, style=dotted];
m0_471 -> m0_42  [key=2, style=dotted];
m0_471 -> m0_40  [key=2, style=dotted];
m0_471 -> m0_472  [key=0, style=solid];
m0_471 -> m0_509  [key=2, style=dotted];
m0_472 -> m0_42  [key=2, style=dotted];
m0_472 -> m0_40  [key=2, style=dotted];
m0_472 -> m0_473  [key=0, style=solid];
m0_472 -> m0_509  [key=2, style=dotted];
m0_473 -> m0_42  [key=2, style=dotted];
m0_473 -> m0_40  [key=2, style=dotted];
m0_473 -> m0_474  [key=0, style=solid];
m0_473 -> m0_509  [key=2, style=dotted];
m0_474 -> m0_42  [key=2, style=dotted];
m0_474 -> m0_40  [key=2, style=dotted];
m0_474 -> m0_475  [key=0, style=solid];
m0_474 -> m0_509  [key=2, style=dotted];
m0_475 -> m0_42  [key=2, style=dotted];
m0_475 -> m0_40  [key=2, style=dotted];
m0_475 -> m0_476  [key=0, style=solid];
m0_475 -> m0_509  [key=2, style=dotted];
m0_476 -> m0_42  [key=2, style=dotted];
m0_476 -> m0_40  [key=2, style=dotted];
m0_476 -> m0_477  [key=0, style=solid];
m0_476 -> m0_509  [key=2, style=dotted];
m0_477 -> m0_42  [key=2, style=dotted];
m0_477 -> m0_40  [key=2, style=dotted];
m0_477 -> m0_478  [key=0, style=solid];
m0_477 -> m0_509  [key=2, style=dotted];
m0_478 -> m0_42  [key=2, style=dotted];
m0_478 -> m0_40  [key=2, style=dotted];
m0_478 -> m0_479  [key=0, style=solid];
m0_478 -> m0_509  [key=2, style=dotted];
m0_479 -> m0_42  [key=2, style=dotted];
m0_479 -> m0_40  [key=2, style=dotted];
m0_479 -> m0_480  [key=0, style=solid];
m0_479 -> m0_509  [key=2, style=dotted];
m0_480 -> m0_42  [key=2, style=dotted];
m0_480 -> m0_40  [key=2, style=dotted];
m0_480 -> m0_481  [key=0, style=solid];
m0_480 -> m0_509  [key=2, style=dotted];
m0_481 -> m0_42  [key=2, style=dotted];
m0_481 -> m0_40  [key=2, style=dotted];
m0_481 -> m0_482  [key=0, style=solid];
m0_481 -> m0_509  [key=2, style=dotted];
m0_482 -> m0_42  [key=2, style=dotted];
m0_482 -> m0_40  [key=2, style=dotted];
m0_482 -> m0_483  [key=0, style=solid];
m0_482 -> m0_509  [key=2, style=dotted];
m0_483 -> m0_42  [key=2, style=dotted];
m0_483 -> m0_40  [key=2, style=dotted];
m0_483 -> m0_484  [key=0, style=solid];
m0_483 -> m0_509  [key=2, style=dotted];
m0_484 -> m0_42  [key=2, style=dotted];
m0_484 -> m0_40  [key=2, style=dotted];
m0_484 -> m0_485  [key=0, style=solid];
m0_484 -> m0_509  [key=2, style=dotted];
m0_489 -> m0_42  [key=2, style=dotted];
m0_489 -> m0_40  [key=2, style=dotted];
m0_489 -> m0_490  [key=0, style=solid];
m0_489 -> m0_509  [key=2, style=dotted];
m0_490 -> m0_42  [key=2, style=dotted];
m0_490 -> m0_40  [key=2, style=dotted];
m0_490 -> m0_491  [key=0, style=solid];
m0_490 -> m0_509  [key=2, style=dotted];
m0_497 -> m0_81  [key=2, style=dotted];
m0_497 -> m0_40  [key=2, style=dotted];
m0_497 -> m0_498  [key=0, style=solid];
m0_497 -> m0_509  [key=2, style=dotted];
m0_498 -> m0_81  [key=2, style=dotted];
m0_498 -> m0_40  [key=2, style=dotted];
m0_498 -> m0_499  [key=0, style=solid];
m0_498 -> m0_509  [key=2, style=dotted];
m0_499 -> m0_260  [key=2, style=dotted];
m0_499 -> m0_40  [key=2, style=dotted];
m0_499 -> m0_500  [key=0, style=solid];
m0_499 -> m0_509  [key=2, style=dotted];
m0_500 -> m0_260  [key=2, style=dotted];
m0_500 -> m0_40  [key=2, style=dotted];
m0_500 -> m0_501  [key=0, style=solid];
m0_500 -> m0_509  [key=2, style=dotted];
m0_491 -> m0_262  [key=2, style=dotted];
m0_491 -> m0_40  [key=2, style=dotted];
m0_491 -> m0_492  [key=0, style=solid];
m0_491 -> m0_509  [key=2, style=dotted];
m0_492 -> m0_262  [key=2, style=dotted];
m0_492 -> m0_40  [key=2, style=dotted];
m0_492 -> m0_493  [key=0, style=solid];
m0_492 -> m0_509  [key=2, style=dotted];
m0_485 -> m0_264  [key=2, style=dotted];
m0_485 -> m0_40  [key=2, style=dotted];
m0_485 -> m0_486  [key=0, style=solid];
m0_485 -> m0_509  [key=2, style=dotted];
m0_486 -> m0_264  [key=2, style=dotted];
m0_486 -> m0_40  [key=2, style=dotted];
m0_486 -> m0_487  [key=0, style=solid];
m0_486 -> m0_509  [key=2, style=dotted];
m0_487 -> m0_264  [key=2, style=dotted];
m0_487 -> m0_40  [key=2, style=dotted];
m0_487 -> m0_488  [key=0, style=solid];
m0_487 -> m0_509  [key=2, style=dotted];
m0_488 -> m0_264  [key=2, style=dotted];
m0_488 -> m0_40  [key=2, style=dotted];
m0_488 -> m0_489  [key=0, style=solid];
m0_488 -> m0_509  [key=2, style=dotted];
m0_501 -> m0_267  [key=2, style=dotted];
m0_501 -> m0_40  [key=2, style=dotted];
m0_501 -> m0_502  [key=0, style=solid];
m0_501 -> m0_509  [key=2, style=dotted];
m0_505 -> m0_267  [key=2, style=dotted];
m0_505 -> m0_40  [key=2, style=dotted];
m0_505 -> m0_506  [key=0, style=solid];
m0_505 -> m0_509  [key=2, style=dotted];
m0_506 -> m0_267  [key=2, style=dotted];
m0_506 -> m0_40  [key=2, style=dotted];
m0_506 -> m0_507  [key=0, style=solid];
m0_506 -> m0_509  [key=2, style=dotted];
m0_468 -> m0_263  [key=2, style=dotted];
m0_468 -> m0_40  [key=2, style=dotted];
m0_468 -> m0_469  [key=0, style=solid];
m0_468 -> m0_509  [key=2, style=dotted];
m0_507 -> m0_263  [key=2, style=dotted];
m0_507 -> m0_40  [key=2, style=dotted];
m0_507 -> m0_508  [key=0, style=solid];
m0_507 -> m0_509  [key=2, style=dotted];
m0_495 -> m0_270  [key=2, style=dotted];
m0_495 -> m0_40  [key=2, style=dotted];
m0_495 -> m0_496  [key=0, style=solid];
m0_495 -> m0_509  [key=2, style=dotted];
m0_496 -> m0_270  [key=2, style=dotted];
m0_496 -> m0_40  [key=2, style=dotted];
m0_496 -> m0_497  [key=0, style=solid];
m0_496 -> m0_509  [key=2, style=dotted];
m0_502 -> m0_271  [key=2, style=dotted];
m0_502 -> m0_272  [key=2, style=dotted];
m0_502 -> m0_40  [key=2, style=dotted];
m0_502 -> m0_503  [key=0, style=solid];
m0_502 -> m0_509  [key=2, style=dotted];
m0_503 -> m0_271  [key=2, style=dotted];
m0_503 -> m0_272  [key=2, style=dotted];
m0_503 -> m0_40  [key=2, style=dotted];
m0_503 -> m0_504  [key=0, style=solid];
m0_503 -> m0_509  [key=2, style=dotted];
m0_504 -> m0_273  [key=2, style=dotted];
m0_504 -> m0_274  [key=2, style=dotted];
m0_504 -> m0_40  [key=2, style=dotted];
m0_504 -> m0_505  [key=0, style=solid];
m0_504 -> m0_509  [key=2, style=dotted];
m0_493 -> m0_40  [key=2, style=dotted];
m0_493 -> m0_494  [key=0, style=solid];
m0_493 -> m0_510  [key=2, style=dotted];
m0_493 -> m0_509  [key=2, style=dotted];
m0_494 -> m0_40  [key=2, style=dotted];
m0_494 -> m0_495  [key=0, style=solid];
m0_494 -> m0_510  [key=2, style=dotted];
m0_494 -> m0_509  [key=2, style=dotted];
m0_508 -> m0_465  [color=blue, key=0, style=bold];
m0_83 -> m0_84  [key=0, style=solid];
m0_567 -> m0_568  [key=0, style=solid];
m0_568 -> m0_79  [key=2, style=dotted];
m0_568 -> m0_569  [key=0, style=solid];
m0_568 -> m0_570  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_568 -> m0_571  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_569 -> m0_40  [key=2, style=dotted];
m0_569 -> m0_570  [key=0, style=solid];
m0_570 -> m0_40  [key=2, style=dotted];
m0_570 -> m0_571  [key=0, style=solid];
m0_571 -> m0_40  [key=2, style=dotted];
m0_571 -> m0_572  [key=0, style=solid];
m0_572 -> m0_567  [color=blue, key=0, style=bold];
m0_818 -> m0_819  [key=0, style=solid];
m0_819 -> m0_79  [key=2, style=dotted];
m0_819 -> m0_119  [key=2, style=dotted];
m0_819 -> m0_820  [key=0, style=solid];
m0_819 -> m0_821  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_819 -> m0_822  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_819 -> m0_823  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_819 -> m0_824  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_819 -> m0_825  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_819 -> m0_826  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_819 -> m0_827  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_821 -> m0_40  [key=2, style=dotted];
m0_821 -> m0_822  [key=0, style=solid];
m0_822 -> m0_40  [key=2, style=dotted];
m0_822 -> m0_90  [key=2, style=dotted];
m0_822 -> m0_823  [key=0, style=solid];
m0_823 -> m0_40  [key=2, style=dotted];
m0_823 -> m0_824  [key=0, style=solid];
m0_824 -> m0_40  [key=2, style=dotted];
m0_824 -> m0_90  [key=2, style=dotted];
m0_824 -> m0_825  [key=0, style=solid];
m0_826 -> m0_40  [key=2, style=dotted];
m0_826 -> m0_827  [key=0, style=solid];
m0_827 -> m0_40  [key=2, style=dotted];
m0_827 -> m0_828  [key=0, style=solid];
m0_820 -> m0_821  [key=0, style=solid];
m0_820 -> m0_829  [key=2, style=dotted];
m0_825 -> m0_826  [key=0, style=solid];
m0_825 -> m0_829  [key=2, style=dotted];
m0_828 -> m0_818  [color=blue, key=0, style=bold];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_92  [key=2, style=dotted];
m0_89 -> m0_89  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_131  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m0_126 -> m0_133  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m0_126 -> m0_136  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m0_127 -> m0_128  [key=0, style=solid];
m0_127 -> m0_140  [key=2, style=dotted];
m0_131 -> m0_132  [key=0, style=solid];
m0_131 -> m0_133  [key=0, style=solid];
m0_131 -> m0_81  [key=2, style=dotted];
m0_131 -> m0_258  [key=2, style=dotted];
m0_131 -> m0_40  [key=2, style=dotted];
m0_131 -> m0_259  [key=2, style=dotted];
m0_133 -> m0_134  [key=0, style=solid];
m0_133 -> m0_136  [key=0, style=solid];
m0_133 -> m0_261  [key=2, style=dotted];
m0_133 -> m0_40  [key=2, style=dotted];
m0_136 -> m0_139  [key=0, style=solid];
m0_136 -> m0_121  [key=2, style=dotted];
m0_136 -> m0_122  [key=2, style=dotted];
m0_136 -> m0_262  [key=2, style=dotted];
m0_136 -> m0_40  [key=2, style=dotted];
m0_136 -> m0_137  [key=0, style=solid];
m0_128 -> m0_129  [key=0, style=solid];
m0_128 -> m0_120  [key=2, style=dotted];
m0_128 -> m0_42  [key=2, style=dotted];
m0_128 -> m0_40  [key=2, style=dotted];
m0_129 -> m0_139  [key=0, style=solid];
m0_129 -> m0_79  [key=2, style=dotted];
m0_129 -> m0_40  [key=2, style=dotted];
m0_129 -> m0_130  [key=0, style=solid];
m0_130 -> m0_131  [key=0, style=solid];
m0_130 -> m0_81  [key=2, style=dotted];
m0_130 -> m0_82  [key=2, style=dotted];
m0_130 -> m0_40  [key=2, style=dotted];
m0_132 -> m0_139  [key=0, style=solid];
m0_132 -> m0_260  [key=2, style=dotted];
m0_132 -> m0_258  [key=2, style=dotted];
m0_132 -> m0_40  [key=2, style=dotted];
m0_132 -> m0_133  [key=0, style=solid];
m0_134 -> m0_135  [key=0, style=solid];
m0_134 -> m0_133  [key=0, style=solid];
m0_134 -> m0_94  [key=2, style=dotted];
m0_134 -> m0_40  [key=2, style=dotted];
m0_135 -> m0_139  [key=0, style=solid];
m0_135 -> m0_262  [key=2, style=dotted];
m0_135 -> m0_40  [key=2, style=dotted];
m0_135 -> m0_136  [key=0, style=solid];
m0_137 -> m0_138  [key=0, style=solid];
m0_137 -> m0_40  [key=2, style=dotted];
m0_138 -> m0_139  [key=0, style=solid];
m0_138 -> m0_123  [key=2, style=dotted];
m0_138 -> m0_124  [key=2, style=dotted];
m0_138 -> m0_125  [key=2, style=dotted];
m0_138 -> m0_263  [key=2, style=dotted];
m0_138 -> m0_40  [key=2, style=dotted];
m0_139 -> m0_126  [color=blue, key=0, style=bold];
m0_139 -> m0_42  [key=2, style=dotted];
m0_139 -> m0_40  [key=2, style=dotted];
m0_139 -> m0_140  [key=0, style=solid];
m0_614 -> m0_615  [key=0, style=solid];
m0_616 -> m0_9  [key=2, style=dotted];
m0_616 -> m0_617  [key=0, style=solid];
m0_615 -> m0_616  [key=0, style=solid];
m0_615 -> m0_79  [key=2, style=dotted];
m0_615 -> m0_119  [key=2, style=dotted];
m0_617 -> m0_614  [color=blue, key=0, style=bold];
m0_34 -> m0_40  [key=2, style=dotted];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_46  [key=2, style=dotted];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_93  [key=2, style=dotted];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_92  [key=2, style=dotted];
m0_88 -> m0_88  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_88 -> m0_90  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_58 -> m0_59  [key=0, style=solid];
m0_35 -> m0_40  [key=2, style=dotted];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_47  [key=2, style=dotted];
m0_35 -> m0_48  [key=2, style=dotted];
m0_104 -> m0_79  [key=2, style=dotted];
m0_104 -> m0_105  [key=0, style=solid];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_8  [color=blue, key=0, style=bold];
m0_25 -> m0_9  [key=2, style=dotted];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_42  [key=2, style=dotted];
m0_25 -> m0_43  [key=2, style=dotted];
m0_25 -> m0_44  [key=2, style=dotted];
m0_25 -> m0_45  [key=2, style=dotted];
m0_23 -> m0_25  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_37  [key=2, style=dotted];
m0_23 -> m0_38  [key=2, style=dotted];
m0_23 -> m0_39  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_40  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_11 -> m0_37  [key=2, style=dotted];
m0_11 -> m0_38  [key=2, style=dotted];
m0_11 -> m0_39  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_29 -> m0_37  [key=2, style=dotted];
m0_29 -> m0_38  [key=2, style=dotted];
m0_29 -> m0_39  [key=2, style=dotted];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_31  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m0_31 -> m0_37  [key=2, style=dotted];
m0_31 -> m0_38  [key=2, style=dotted];
m0_31 -> m0_39  [key=2, style=dotted];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_34  [key=2, style=dotted];
m0_31 -> m0_35  [key=2, style=dotted];
m0_31 -> m0_36  [key=2, style=dotted];
m0_33 -> m0_37  [key=2, style=dotted];
m0_33 -> m0_38  [key=2, style=dotted];
m0_33 -> m0_39  [key=2, style=dotted];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_35  [color=darkseagreen4, key=1, label=v, style=dashed];
m0_33 -> m0_29  [color=blue, key=0, style=bold];
m0_30 -> m0_40  [key=2, style=dotted];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_32  [color=darkseagreen4, key=1, label=chars, style=dashed];
m0_32 -> m0_40  [key=2, style=dotted];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_37  [key=2, style=dotted];
m0_36 -> m0_10  [color=blue, key=0, style=bold];
m0_746 -> m0_747  [key=0, style=solid];
m0_747 -> m0_79  [key=2, style=dotted];
m0_747 -> m0_119  [key=2, style=dotted];
m0_747 -> m0_748  [key=0, style=solid];
m0_747 -> m0_749  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_747 -> m0_750  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_747 -> m0_751  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_747 -> m0_752  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_747 -> m0_753  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_747 -> m0_754  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_747 -> m0_755  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_747 -> m0_756  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_747 -> m0_757  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_747 -> m0_758  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_749 -> m0_40  [key=2, style=dotted];
m0_749 -> m0_750  [key=0, style=solid];
m0_750 -> m0_40  [key=2, style=dotted];
m0_750 -> m0_751  [key=0, style=solid];
m0_751 -> m0_40  [key=2, style=dotted];
m0_751 -> m0_752  [key=0, style=solid];
m0_752 -> m0_40  [key=2, style=dotted];
m0_752 -> m0_90  [key=2, style=dotted];
m0_752 -> m0_753  [key=0, style=solid];
m0_754 -> m0_40  [key=2, style=dotted];
m0_754 -> m0_755  [key=0, style=solid];
m0_755 -> m0_40  [key=2, style=dotted];
m0_755 -> m0_756  [key=0, style=solid];
m0_756 -> m0_40  [key=2, style=dotted];
m0_756 -> m0_757  [key=0, style=solid];
m0_757 -> m0_40  [key=2, style=dotted];
m0_757 -> m0_90  [key=2, style=dotted];
m0_757 -> m0_758  [key=0, style=solid];
m0_758 -> m0_40  [key=2, style=dotted];
m0_758 -> m0_759  [key=0, style=solid];
m0_748 -> m0_749  [key=0, style=solid];
m0_748 -> m0_760  [key=2, style=dotted];
m0_753 -> m0_754  [key=0, style=solid];
m0_753 -> m0_760  [key=2, style=dotted];
m0_759 -> m0_746  [color=blue, key=0, style=bold];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_86  [key=2, style=dotted];
m0_3 -> m0_4  [color=green, key=0, style=solid];
m0_3 -> m0_7  [color=green, key=2, style=dotted];
m0_3 -> m0_5  [color=green, key=1, label=j1, style=dashed];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_96  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_94 -> m0_40  [key=2, style=dotted];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_92  [key=2, style=dotted];
m0_95 -> m0_95  [color=darkseagreen4, key=1, label=next, style=dashed];
m0_95 -> m0_97  [color=darkseagreen4, key=1, label=next, style=dashed];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_92  [key=2, style=dotted];
m0_96 -> m0_96  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_96 -> m0_9  [key=2, style=dotted];
m0_96 -> m0_79  [key=2, style=dotted];
m0_96 -> m0_45  [key=2, style=dotted];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_99  [key=2, style=dotted];
m0_97 -> m0_97  [color=darkseagreen4, key=1, label=next, style=dashed];
m0_98 -> m0_94  [color=blue, key=0, style=bold];
m0_98 -> m0_9  [key=2, style=dotted];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_79  [key=2, style=dotted];
m0_98 -> m0_45  [key=2, style=dotted];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_59  [color=darkseagreen4, key=1, label=shift, style=dashed];
m0_76 -> m0_45  [key=2, style=dotted];
m0_76 -> m0_40  [key=2, style=dotted];
m0_76 -> m0_77  [key=0, style=solid];
m0_77 -> m0_45  [key=2, style=dotted];
m0_77 -> m0_40  [key=2, style=dotted];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_79  [key=2, style=dotted];
m0_60 -> m0_79  [key=2, style=dotted];
m0_60 -> m0_81  [key=2, style=dotted];
m0_60 -> m0_82  [key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_80  [key=2, style=dotted];
m0_60 -> m0_62  [color=darkseagreen4, key=1, label=v, style=dashed];
m0_60 -> m0_63  [color=darkseagreen4, key=1, label=v, style=dashed];
m0_60 -> m0_64  [color=darkseagreen4, key=1, label=v, style=dashed];
m0_60 -> m0_65  [color=darkseagreen4, key=1, label=v, style=dashed];
m0_60 -> m0_66  [color=darkseagreen4, key=1, label=v, style=dashed];
m0_60 -> m0_67  [color=darkseagreen4, key=1, label=v, style=dashed];
m0_60 -> m0_68  [color=darkseagreen4, key=1, label=v, style=dashed];
m0_60 -> m0_54  [key=0, style=solid];
m0_62 -> m0_84  [key=2, style=dotted];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_83  [key=2, style=dotted];
m0_62 -> m0_85  [key=2, style=dotted];
m0_62 -> m0_65  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_62 -> m0_68  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_62 -> m0_69  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_62 -> m0_70  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_62 -> m0_71  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_62 -> m0_72  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_62 -> m0_73  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_64 -> m0_84  [key=2, style=dotted];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_66  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_64 -> m0_67  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_73 -> m0_84  [key=2, style=dotted];
m0_73 -> m0_76  [color=darkseagreen4, key=1, label=o2, style=dashed];
m0_73 -> m0_77  [color=darkseagreen4, key=1, label=o2, style=dashed];
m0_73 -> m0_74  [key=0, style=solid];
m0_73 -> m0_75  [color=darkseagreen4, key=1, label=o2, style=dashed];
m0_61 -> m0_40  [key=2, style=dotted];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_54  [key=0, style=solid];
m0_61 -> m0_61  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_63 -> m0_40  [key=2, style=dotted];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_86  [key=2, style=dotted];
m0_63 -> m0_49  [color=blue, key=0, style=bold];
m0_65 -> m0_40  [key=2, style=dotted];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_86  [key=2, style=dotted];
m0_67 -> m0_40  [key=2, style=dotted];
m0_67 -> m0_68  [key=0, style=solid];
m0_68 -> m0_40  [key=2, style=dotted];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_64  [color=blue, key=0, style=bold];
m0_75 -> m0_40  [key=2, style=dotted];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_90  [key=2, style=dotted];
m0_75 -> m0_89  [key=2, style=dotted];
m0_75 -> m0_72  [color=blue, key=0, style=bold];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_87  [key=2, style=dotted];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_88  [key=2, style=dotted];
m0_72 -> m0_74  [key=0, style=solid];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_87  [key=2, style=dotted];
m0_74 -> m0_48  [key=2, style=dotted];
m0_78 -> m0_59  [color=blue, key=0, style=bold];
m0_78 -> m0_76  [color=blue, key=0, style=bold];
m0_669 -> m0_670  [key=0, style=solid];
m0_674 -> m0_9  [key=2, style=dotted];
m0_674 -> m0_675  [key=0, style=solid];
m0_674 -> m0_79  [key=2, style=dotted];
m0_674 -> m0_45  [key=2, style=dotted];
m0_671 -> m0_674  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m0_671 -> m0_672  [key=0, style=solid];
m0_671 -> m0_679  [key=2, style=dotted];
m0_671 -> m0_605  [key=2, style=dotted];
m0_671 -> m0_673  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m0_671 -> m0_675  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m0_671 -> m0_676  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m0_671 -> m0_677  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m0_673 -> m0_674  [key=0, style=solid];
m0_673 -> m0_40  [key=2, style=dotted];
m0_675 -> m0_676  [key=0, style=solid];
m0_675 -> m0_40  [key=2, style=dotted];
m0_670 -> m0_79  [key=2, style=dotted];
m0_670 -> m0_119  [key=2, style=dotted];
m0_670 -> m0_671  [key=0, style=solid];
m0_672 -> m0_673  [key=0, style=solid];
m0_672 -> m0_40  [key=2, style=dotted];
m0_672 -> m0_90  [key=2, style=dotted];
m0_676 -> m0_40  [key=2, style=dotted];
m0_676 -> m0_677  [key=0, style=solid];
m0_677 -> m0_40  [key=2, style=dotted];
m0_677 -> m0_678  [key=0, style=solid];
m0_678 -> m0_669  [color=blue, key=0, style=bold];
m0_627 -> m0_628  [key=0, style=solid];
m0_628 -> m0_79  [key=2, style=dotted];
m0_628 -> m0_119  [key=2, style=dotted];
m0_628 -> m0_629  [key=0, style=solid];
m0_628 -> m0_633  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_628 -> m0_634  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_633 -> m0_40  [key=2, style=dotted];
m0_633 -> m0_634  [key=0, style=solid];
m0_634 -> m0_40  [key=2, style=dotted];
m0_634 -> m0_635  [key=0, style=solid];
m0_632 -> m0_40  [key=2, style=dotted];
m0_632 -> m0_633  [key=0, style=solid];
m0_631 -> m0_40  [key=2, style=dotted];
m0_631 -> m0_90  [key=2, style=dotted];
m0_631 -> m0_632  [key=0, style=solid];
m0_629 -> m0_632  [color=darkseagreen4, key=1, label=t, style=dashed];
m0_629 -> m0_630  [key=0, style=solid];
m0_630 -> m0_605  [key=2, style=dotted];
m0_630 -> m0_633  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m0_630 -> m0_634  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m0_630 -> m0_632  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m0_630 -> m0_631  [key=0, style=solid];
m0_630 -> m0_636  [key=2, style=dotted];
m0_635 -> m0_627  [color=blue, key=0, style=bold];
m0_655 -> m0_656  [key=0, style=solid];
m0_656 -> m0_79  [key=2, style=dotted];
m0_656 -> m0_119  [key=2, style=dotted];
m0_656 -> m0_657  [key=0, style=solid];
m0_656 -> m0_658  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_656 -> m0_663  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_656 -> m0_664  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_663 -> m0_40  [key=2, style=dotted];
m0_663 -> m0_664  [key=0, style=solid];
m0_664 -> m0_40  [key=2, style=dotted];
m0_664 -> m0_665  [key=0, style=solid];
m0_665 -> m0_40  [key=2, style=dotted];
m0_665 -> m0_666  [key=0, style=solid];
m0_665 -> m0_86  [key=2, style=dotted];
m0_666 -> m0_40  [key=2, style=dotted];
m0_666 -> m0_667  [key=0, style=solid];
m0_662 -> m0_40  [key=2, style=dotted];
m0_662 -> m0_90  [key=2, style=dotted];
m0_662 -> m0_663  [key=0, style=solid];
m0_657 -> m0_665  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_657 -> m0_666  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_657 -> m0_658  [key=0, style=solid];
m0_657 -> m0_652  [key=2, style=dotted];
m0_657 -> m0_659  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_658 -> m0_659  [key=0, style=solid];
m0_658 -> m0_660  [color=darkseagreen4, key=1, label=t1, style=dashed];
m0_661 -> m0_605  [key=2, style=dotted];
m0_661 -> m0_663  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m0_661 -> m0_664  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m0_661 -> m0_665  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m0_661 -> m0_666  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m0_661 -> m0_662  [key=0, style=solid];
m0_661 -> m0_668  [key=2, style=dotted];
m0_659 -> m0_660  [key=0, style=solid];
m0_660 -> m0_661  [key=0, style=solid];
m0_660 -> m0_653  [key=2, style=dotted];
m0_667 -> m0_655  [color=blue, key=0, style=bold];
m0_724 -> m0_725  [key=0, style=solid];
m0_737 -> m0_9  [key=2, style=dotted];
m0_737 -> m0_738  [key=0, style=solid];
m0_737 -> m0_745  [key=2, style=dotted];
m0_737 -> m0_84  [key=2, style=dotted];
m0_737 -> m0_45  [key=2, style=dotted];
m0_725 -> m0_737  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_725 -> m0_79  [key=2, style=dotted];
m0_725 -> m0_119  [key=2, style=dotted];
m0_725 -> m0_726  [key=0, style=solid];
m0_725 -> m0_728  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_725 -> m0_730  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_725 -> m0_731  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_725 -> m0_736  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_736 -> m0_737  [key=0, style=solid];
m0_736 -> m0_90  [key=2, style=dotted];
m0_736 -> m0_40  [key=2, style=dotted];
m0_726 -> m0_727  [key=0, style=solid];
m0_726 -> m0_739  [key=2, style=dotted];
m0_726 -> m0_729  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_726 -> m0_732  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_726 -> m0_733  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_726 -> m0_734  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_726 -> m0_735  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_728 -> m0_40  [key=2, style=dotted];
m0_728 -> m0_90  [key=2, style=dotted];
m0_728 -> m0_729  [key=0, style=solid];
m0_730 -> m0_40  [key=2, style=dotted];
m0_730 -> m0_90  [key=2, style=dotted];
m0_730 -> m0_731  [key=0, style=solid];
m0_731 -> m0_40  [key=2, style=dotted];
m0_731 -> m0_732  [key=0, style=solid];
m0_735 -> m0_736  [key=0, style=solid];
m0_735 -> n512  [key=2, style=dotted];
m0_727 -> m0_728  [key=0, style=solid];
m0_727 -> m0_740  [key=2, style=dotted];
m0_729 -> m0_730  [key=0, style=solid];
m0_729 -> m0_741  [key=2, style=dotted];
m0_732 -> m0_733  [key=0, style=solid];
m0_732 -> m0_742  [key=2, style=dotted];
m0_733 -> m0_734  [key=0, style=solid];
m0_733 -> m0_743  [key=2, style=dotted];
m0_734 -> m0_735  [key=0, style=solid];
m0_734 -> m0_741  [key=2, style=dotted];
m0_738 -> m0_724  [color=blue, key=0, style=bold];
m0_866 -> m0_867  [key=0, style=solid];
m0_869 -> m0_9  [key=2, style=dotted];
m0_869 -> m0_870  [key=0, style=solid];
m0_869 -> m0_858  [key=2, style=dotted];
m0_873 -> m0_9  [key=2, style=dotted];
m0_873 -> m0_874  [key=0, style=solid];
m0_873 -> m0_875  [key=2, style=dotted];
m0_867 -> m0_869  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_867 -> m0_79  [key=2, style=dotted];
m0_867 -> m0_868  [key=0, style=solid];
m0_868 -> m0_869  [key=0, style=solid];
m0_868 -> m0_857  [key=2, style=dotted];
m0_870 -> m0_870  [color=darkorchid, key=3, label="Local variable double d", style=bold];
m0_870 -> m0_871  [key=0, style=solid];
m0_871 -> m0_873  [color=darkseagreen4, key=1, label=v1, style=dashed];
m0_871 -> m0_264  [key=2, style=dotted];
m0_871 -> m0_872  [key=0, style=solid];
m0_872 -> m0_873  [key=0, style=solid];
m0_872 -> m0_264  [key=2, style=dotted];
m0_874 -> m0_866  [color=blue, key=0, style=bold];
m0_120 -> m0_120  [color=darkorchid, key=3, label="Local variable string bigIntegerText", style=bold];
m0_511 -> m0_512  [key=0, style=solid];
m0_512 -> m0_9  [key=2, style=dotted];
m0_512 -> m0_513  [key=0, style=solid];
m0_512 -> m0_81  [key=2, style=dotted];
m0_512 -> m0_82  [key=2, style=dotted];
m0_512 -> m0_45  [key=2, style=dotted];
m0_513 -> m0_9  [key=2, style=dotted];
m0_513 -> m0_514  [key=0, style=solid];
m0_513 -> m0_260  [key=2, style=dotted];
m0_513 -> m0_258  [key=2, style=dotted];
m0_513 -> m0_45  [key=2, style=dotted];
m0_514 -> m0_9  [key=2, style=dotted];
m0_514 -> m0_515  [key=0, style=solid];
m0_514 -> m0_261  [key=2, style=dotted];
m0_514 -> m0_45  [key=2, style=dotted];
m0_515 -> m0_9  [key=2, style=dotted];
m0_515 -> m0_516  [key=0, style=solid];
m0_515 -> m0_280  [key=2, style=dotted];
m0_515 -> m0_282  [key=2, style=dotted];
m0_515 -> m0_45  [key=2, style=dotted];
m0_516 -> m0_9  [key=2, style=dotted];
m0_516 -> m0_517  [key=0, style=solid];
m0_516 -> m0_280  [key=2, style=dotted];
m0_516 -> m0_45  [key=2, style=dotted];
m0_517 -> m0_9  [key=2, style=dotted];
m0_517 -> m0_518  [key=0, style=solid];
m0_517 -> m0_262  [key=2, style=dotted];
m0_517 -> m0_45  [key=2, style=dotted];
m0_518 -> m0_9  [key=2, style=dotted];
m0_518 -> m0_519  [key=0, style=solid];
m0_518 -> m0_262  [key=2, style=dotted];
m0_518 -> m0_45  [key=2, style=dotted];
m0_519 -> m0_9  [key=2, style=dotted];
m0_519 -> m0_520  [key=0, style=solid];
m0_519 -> m0_262  [key=2, style=dotted];
m0_519 -> m0_45  [key=2, style=dotted];
m0_520 -> m0_9  [key=2, style=dotted];
m0_520 -> m0_521  [key=0, style=solid];
m0_520 -> m0_261  [key=2, style=dotted];
m0_520 -> m0_45  [key=2, style=dotted];
m0_521 -> m0_9  [key=2, style=dotted];
m0_521 -> m0_522  [key=0, style=solid];
m0_521 -> m0_42  [key=2, style=dotted];
m0_521 -> m0_45  [key=2, style=dotted];
m0_522 -> m0_9  [key=2, style=dotted];
m0_522 -> m0_523  [key=0, style=solid];
m0_522 -> m0_261  [key=2, style=dotted];
m0_522 -> m0_45  [key=2, style=dotted];
m0_523 -> m0_9  [key=2, style=dotted];
m0_523 -> m0_524  [key=0, style=solid];
m0_523 -> m0_261  [key=2, style=dotted];
m0_523 -> m0_45  [key=2, style=dotted];
m0_524 -> m0_9  [key=2, style=dotted];
m0_524 -> m0_525  [key=0, style=solid];
m0_524 -> m0_42  [key=2, style=dotted];
m0_524 -> m0_45  [key=2, style=dotted];
m0_525 -> m0_9  [key=2, style=dotted];
m0_525 -> m0_526  [key=0, style=solid];
m0_525 -> m0_261  [key=2, style=dotted];
m0_525 -> m0_45  [key=2, style=dotted];
m0_526 -> m0_9  [key=2, style=dotted];
m0_526 -> m0_527  [key=0, style=solid];
m0_526 -> m0_261  [key=2, style=dotted];
m0_526 -> m0_45  [key=2, style=dotted];
m0_527 -> m0_9  [key=2, style=dotted];
m0_527 -> m0_528  [key=0, style=solid];
m0_527 -> m0_261  [key=2, style=dotted];
m0_527 -> m0_45  [key=2, style=dotted];
m0_528 -> m0_9  [key=2, style=dotted];
m0_528 -> m0_529  [key=0, style=solid];
m0_528 -> m0_261  [key=2, style=dotted];
m0_528 -> m0_45  [key=2, style=dotted];
m0_529 -> m0_9  [key=2, style=dotted];
m0_529 -> m0_530  [key=0, style=solid];
m0_529 -> m0_261  [key=2, style=dotted];
m0_529 -> m0_45  [key=2, style=dotted];
m0_530 -> m0_9  [key=2, style=dotted];
m0_530 -> m0_531  [key=0, style=solid];
m0_530 -> m0_261  [key=2, style=dotted];
m0_530 -> m0_45  [key=2, style=dotted];
m0_531 -> m0_9  [key=2, style=dotted];
m0_531 -> m0_532  [key=0, style=solid];
m0_531 -> m0_261  [key=2, style=dotted];
m0_531 -> m0_45  [key=2, style=dotted];
m0_532 -> m0_9  [key=2, style=dotted];
m0_532 -> m0_533  [key=0, style=solid];
m0_532 -> m0_42  [key=2, style=dotted];
m0_532 -> m0_45  [key=2, style=dotted];
m0_533 -> m0_9  [key=2, style=dotted];
m0_533 -> m0_534  [key=0, style=solid];
m0_533 -> m0_261  [key=2, style=dotted];
m0_533 -> m0_45  [key=2, style=dotted];
m0_534 -> m0_9  [key=2, style=dotted];
m0_534 -> m0_535  [key=0, style=solid];
m0_534 -> m0_42  [key=2, style=dotted];
m0_534 -> m0_45  [key=2, style=dotted];
m0_535 -> m0_9  [key=2, style=dotted];
m0_535 -> m0_536  [key=0, style=solid];
m0_535 -> m0_261  [key=2, style=dotted];
m0_535 -> m0_45  [key=2, style=dotted];
m0_536 -> m0_9  [key=2, style=dotted];
m0_536 -> m0_537  [key=0, style=solid];
m0_536 -> m0_42  [key=2, style=dotted];
m0_536 -> m0_45  [key=2, style=dotted];
m0_537 -> m0_9  [key=2, style=dotted];
m0_537 -> m0_538  [key=0, style=solid];
m0_537 -> m0_42  [key=2, style=dotted];
m0_537 -> m0_45  [key=2, style=dotted];
m0_538 -> m0_9  [key=2, style=dotted];
m0_538 -> m0_539  [key=0, style=solid];
m0_538 -> m0_265  [key=2, style=dotted];
m0_538 -> m0_45  [key=2, style=dotted];
m0_539 -> m0_9  [key=2, style=dotted];
m0_539 -> m0_540  [key=0, style=solid];
m0_539 -> m0_265  [key=2, style=dotted];
m0_539 -> m0_45  [key=2, style=dotted];
m0_540 -> m0_9  [key=2, style=dotted];
m0_540 -> m0_541  [key=0, style=solid];
m0_540 -> m0_264  [key=2, style=dotted];
m0_540 -> m0_45  [key=2, style=dotted];
m0_541 -> m0_9  [key=2, style=dotted];
m0_541 -> m0_542  [key=0, style=solid];
m0_541 -> m0_42  [key=2, style=dotted];
m0_541 -> m0_45  [key=2, style=dotted];
m0_542 -> m0_9  [key=2, style=dotted];
m0_542 -> m0_543  [key=0, style=solid];
m0_542 -> m0_266  [key=2, style=dotted];
m0_542 -> m0_45  [key=2, style=dotted];
m0_543 -> m0_9  [key=2, style=dotted];
m0_543 -> m0_544  [key=0, style=solid];
m0_543 -> m0_266  [key=2, style=dotted];
m0_543 -> m0_45  [key=2, style=dotted];
m0_544 -> m0_9  [key=2, style=dotted];
m0_544 -> m0_545  [key=0, style=solid];
m0_544 -> m0_267  [key=2, style=dotted];
m0_544 -> m0_45  [key=2, style=dotted];
m0_545 -> m0_9  [key=2, style=dotted];
m0_545 -> m0_546  [key=0, style=solid];
m0_545 -> m0_261  [key=2, style=dotted];
m0_545 -> m0_45  [key=2, style=dotted];
m0_546 -> m0_9  [key=2, style=dotted];
m0_546 -> m0_547  [key=0, style=solid];
m0_546 -> m0_268  [key=2, style=dotted];
m0_546 -> m0_45  [key=2, style=dotted];
m0_547 -> m0_9  [key=2, style=dotted];
m0_547 -> m0_548  [key=0, style=solid];
m0_547 -> m0_268  [key=2, style=dotted];
m0_547 -> m0_45  [key=2, style=dotted];
m0_548 -> m0_9  [key=2, style=dotted];
m0_548 -> m0_549  [key=0, style=solid];
m0_548 -> m0_268  [key=2, style=dotted];
m0_548 -> m0_45  [key=2, style=dotted];
m0_549 -> m0_9  [key=2, style=dotted];
m0_549 -> m0_550  [key=0, style=solid];
m0_549 -> m0_265  [key=2, style=dotted];
m0_549 -> m0_45  [key=2, style=dotted];
m0_550 -> m0_9  [key=2, style=dotted];
m0_550 -> m0_551  [key=0, style=solid];
m0_550 -> m0_264  [key=2, style=dotted];
m0_550 -> m0_45  [key=2, style=dotted];
m0_551 -> m0_9  [key=2, style=dotted];
m0_551 -> m0_552  [key=0, style=solid];
m0_551 -> m0_263  [key=2, style=dotted];
m0_551 -> m0_45  [key=2, style=dotted];
m0_555 -> m0_9  [key=2, style=dotted];
m0_555 -> m0_556  [key=0, style=solid];
m0_555 -> m0_261  [key=2, style=dotted];
m0_555 -> m0_45  [key=2, style=dotted];
m0_557 -> m0_9  [key=2, style=dotted];
m0_557 -> m0_558  [key=0, style=solid];
m0_557 -> m0_261  [key=2, style=dotted];
m0_557 -> m0_275  [key=2, style=dotted];
m0_557 -> m0_45  [key=2, style=dotted];
m0_558 -> m0_9  [key=2, style=dotted];
m0_558 -> m0_559  [key=0, style=solid];
m0_558 -> m0_270  [key=2, style=dotted];
m0_558 -> m0_269  [key=2, style=dotted];
m0_558 -> m0_45  [key=2, style=dotted];
m0_559 -> m0_9  [key=2, style=dotted];
m0_559 -> m0_560  [key=0, style=solid];
m0_559 -> m0_263  [key=2, style=dotted];
m0_559 -> m0_45  [key=2, style=dotted];
m0_560 -> m0_9  [key=2, style=dotted];
m0_560 -> m0_561  [key=0, style=solid];
m0_560 -> m0_270  [key=2, style=dotted];
m0_560 -> m0_269  [key=2, style=dotted];
m0_560 -> m0_45  [key=2, style=dotted];
m0_561 -> m0_9  [key=2, style=dotted];
m0_561 -> m0_562  [key=0, style=solid];
m0_561 -> m0_271  [key=2, style=dotted];
m0_561 -> m0_272  [key=2, style=dotted];
m0_561 -> m0_45  [key=2, style=dotted];
m0_562 -> m0_9  [key=2, style=dotted];
m0_562 -> m0_563  [key=0, style=solid];
m0_562 -> m0_273  [key=2, style=dotted];
m0_562 -> m0_274  [key=2, style=dotted];
m0_562 -> m0_45  [key=2, style=dotted];
m0_563 -> m0_9  [key=2, style=dotted];
m0_563 -> m0_564  [key=0, style=solid];
m0_563 -> m0_263  [key=2, style=dotted];
m0_563 -> m0_45  [key=2, style=dotted];
m0_564 -> m0_9  [key=2, style=dotted];
m0_564 -> m0_565  [key=0, style=solid];
m0_564 -> m0_263  [key=2, style=dotted];
m0_564 -> m0_45  [key=2, style=dotted];
m0_552 -> m0_45  [key=2, style=dotted];
m0_552 -> m0_262  [key=2, style=dotted];
m0_552 -> m0_553  [key=0, style=solid];
m0_552 -> m0_566  [key=2, style=dotted];
m0_554 -> m0_555  [key=0, style=solid];
m0_554 -> m0_556  [color=darkseagreen4, key=1, label=emptyData, style=dashed];
m0_556 -> m0_557  [key=0, style=solid];
m0_556 -> m0_45  [key=2, style=dotted];
m0_556 -> m0_261  [key=2, style=dotted];
m0_556 -> m0_566  [key=2, style=dotted];
m0_553 -> m0_45  [key=2, style=dotted];
m0_553 -> m0_263  [key=2, style=dotted];
m0_553 -> m0_554  [key=0, style=solid];
m0_553 -> m0_566  [key=2, style=dotted];
m0_565 -> m0_511  [color=blue, key=0, style=bold];
m0_789 -> m0_790  [key=0, style=solid];
m0_799 -> m0_9  [key=2, style=dotted];
m0_799 -> m0_800  [key=0, style=solid];
m0_799 -> m0_79  [key=2, style=dotted];
m0_799 -> m0_119  [key=2, style=dotted];
m0_799 -> m0_45  [key=2, style=dotted];
m0_790 -> m0_799  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_790 -> m0_79  [key=2, style=dotted];
m0_790 -> m0_119  [key=2, style=dotted];
m0_790 -> m0_791  [key=0, style=solid];
m0_790 -> m0_792  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_790 -> m0_793  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_790 -> m0_794  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_790 -> m0_795  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_790 -> m0_796  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_790 -> m0_797  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_790 -> m0_798  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_798 -> m0_799  [key=0, style=solid];
m0_798 -> m0_90  [key=2, style=dotted];
m0_798 -> m0_40  [key=2, style=dotted];
m0_791 -> m0_42  [key=2, style=dotted];
m0_791 -> m0_792  [key=0, style=solid];
m0_791 -> m0_801  [key=2, style=dotted];
m0_796 -> m0_42  [key=2, style=dotted];
m0_796 -> m0_797  [key=0, style=solid];
m0_796 -> m0_801  [key=2, style=dotted];
m0_794 -> m0_267  [key=2, style=dotted];
m0_794 -> m0_795  [key=0, style=solid];
m0_794 -> m0_801  [key=2, style=dotted];
m0_792 -> m0_40  [key=2, style=dotted];
m0_792 -> m0_793  [key=0, style=solid];
m0_793 -> m0_40  [key=2, style=dotted];
m0_793 -> m0_794  [key=0, style=solid];
m0_793 -> m0_90  [key=2, style=dotted];
m0_795 -> m0_40  [key=2, style=dotted];
m0_795 -> m0_796  [key=0, style=solid];
m0_797 -> m0_798  [key=0, style=solid];
m0_797 -> m0_40  [key=2, style=dotted];
m0_800 -> m0_789  [color=blue, key=0, style=bold];
m0_80 -> m0_81  [key=0, style=solid];
m0_82 -> m0_80  [color=blue, key=0, style=bold];
m0_38 -> m0_39  [key=0, style=solid];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_41  [key=2, style=dotted];
m0_40 -> m0_38  [color=blue, key=0, style=bold];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_89  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_284 -> m0_285  [key=0, style=solid];
m0_286 -> m0_335  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_286 -> m0_287  [key=0, style=solid];
m0_286 -> m0_330  [key=2, style=dotted];
m0_294 -> m0_360  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_294 -> m0_295  [key=0, style=solid];
m0_294 -> m0_330  [key=2, style=dotted];
m0_302 -> m0_384  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_302 -> m0_303  [key=0, style=solid];
m0_302 -> m0_330  [key=2, style=dotted];
m0_311 -> m0_411  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_311 -> m0_312  [key=0, style=solid];
m0_311 -> m0_330  [key=2, style=dotted];
m0_299 -> m0_375  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_299 -> m0_300  [key=0, style=solid];
m0_299 -> m0_330  [key=2, style=dotted];
m0_307 -> m0_399  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_307 -> m0_308  [key=0, style=solid];
m0_307 -> m0_330  [key=2, style=dotted];
m0_315 -> m0_423  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_315 -> m0_316  [key=0, style=solid];
m0_315 -> m0_330  [key=2, style=dotted];
m0_325 -> m0_453  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_325 -> m0_326  [key=0, style=solid];
m0_325 -> m0_330  [key=2, style=dotted];
m0_326 -> m0_456  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_326 -> m0_327  [key=0, style=solid];
m0_326 -> m0_330  [key=2, style=dotted];
m0_300 -> m0_378  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_300 -> m0_301  [key=0, style=solid];
m0_300 -> m0_330  [key=2, style=dotted];
m0_308 -> m0_402  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_308 -> m0_309  [key=0, style=solid];
m0_308 -> m0_330  [key=2, style=dotted];
m0_316 -> m0_426  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_316 -> m0_317  [key=0, style=solid];
m0_316 -> m0_330  [key=2, style=dotted];
m0_285 -> m0_332  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_285 -> m0_286  [key=0, style=solid];
m0_285 -> m0_330  [key=2, style=dotted];
m0_293 -> m0_357  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_293 -> m0_294  [key=0, style=solid];
m0_293 -> m0_330  [key=2, style=dotted];
m0_301 -> m0_381  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_301 -> m0_302  [key=0, style=solid];
m0_301 -> m0_330  [key=2, style=dotted];
m0_310 -> m0_408  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_310 -> m0_311  [key=0, style=solid];
m0_310 -> m0_330  [key=2, style=dotted];
m0_319 -> m0_435  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_319 -> m0_320  [key=0, style=solid];
m0_319 -> m0_330  [key=2, style=dotted];
m0_320 -> m0_438  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_320 -> m0_321  [key=0, style=solid];
m0_320 -> m0_330  [key=2, style=dotted];
m0_287 -> m0_338  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_287 -> m0_288  [key=0, style=solid];
m0_287 -> m0_330  [key=2, style=dotted];
m0_295 -> m0_363  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_295 -> m0_296  [key=0, style=solid];
m0_295 -> m0_330  [key=2, style=dotted];
m0_303 -> m0_387  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_303 -> m0_304  [key=0, style=solid];
m0_303 -> m0_330  [key=2, style=dotted];
m0_312 -> m0_414  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_312 -> m0_313  [key=0, style=solid];
m0_312 -> m0_330  [key=2, style=dotted];
m0_327 -> m0_459  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_327 -> m0_328  [key=0, style=solid];
m0_327 -> m0_330  [key=2, style=dotted];
m0_328 -> m0_462  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_328 -> m0_329  [key=0, style=solid];
m0_328 -> m0_330  [key=2, style=dotted];
m0_288 -> m0_341  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_288 -> m0_289  [key=0, style=solid];
m0_288 -> m0_330  [key=2, style=dotted];
m0_296 -> m0_366  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_296 -> m0_297  [key=0, style=solid];
m0_296 -> m0_330  [key=2, style=dotted];
m0_304 -> m0_390  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_304 -> m0_305  [key=0, style=solid];
m0_304 -> m0_330  [key=2, style=dotted];
m0_313 -> m0_417  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_313 -> m0_314  [key=0, style=solid];
m0_313 -> m0_330  [key=2, style=dotted];
m0_291 -> m0_350  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_291 -> m0_292  [key=0, style=solid];
m0_291 -> m0_330  [key=2, style=dotted];
m0_305 -> m0_393  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_305 -> m0_306  [key=0, style=solid];
m0_305 -> m0_330  [key=2, style=dotted];
m0_314 -> m0_420  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_314 -> m0_315  [key=0, style=solid];
m0_314 -> m0_330  [key=2, style=dotted];
m0_322 -> m0_444  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_322 -> m0_323  [key=0, style=solid];
m0_322 -> m0_331  [key=2, style=dotted];
m0_289 -> m0_344  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_289 -> m0_290  [key=0, style=solid];
m0_289 -> m0_330  [key=2, style=dotted];
m0_297 -> m0_369  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_297 -> m0_298  [key=0, style=solid];
m0_297 -> m0_330  [key=2, style=dotted];
m0_317 -> m0_429  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_317 -> m0_318  [key=0, style=solid];
m0_317 -> m0_330  [key=2, style=dotted];
m0_292 -> m0_353  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_292 -> m0_293  [key=0, style=solid];
m0_292 -> m0_330  [key=2, style=dotted];
m0_298 -> m0_372  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_298 -> m0_299  [key=0, style=solid];
m0_298 -> m0_330  [key=2, style=dotted];
m0_306 -> m0_396  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_306 -> m0_307  [key=0, style=solid];
m0_306 -> m0_330  [key=2, style=dotted];
m0_323 -> m0_447  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_323 -> m0_324  [key=0, style=solid];
m0_323 -> m0_331  [key=2, style=dotted];
m0_324 -> m0_450  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_324 -> m0_325  [key=0, style=solid];
m0_324 -> m0_331  [key=2, style=dotted];
m0_290 -> m0_347  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_290 -> m0_291  [key=0, style=solid];
m0_290 -> m0_330  [key=2, style=dotted];
m0_309 -> m0_405  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_309 -> m0_310  [key=0, style=solid];
m0_309 -> m0_330  [key=2, style=dotted];
m0_318 -> m0_432  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_318 -> m0_319  [key=0, style=solid];
m0_318 -> m0_330  [key=2, style=dotted];
m0_321 -> m0_441  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_321 -> m0_322  [key=0, style=solid];
m0_321 -> m0_331  [key=2, style=dotted];
m0_329 -> m0_284  [color=blue, key=0, style=bold];
m0_85 -> m0_83  [color=blue, key=0, style=bold];
m0_813 -> m0_814  [key=0, style=solid];
m0_814 -> m0_81  [key=2, style=dotted];
m0_814 -> m0_119  [key=2, style=dotted];
m0_814 -> m0_815  [key=0, style=solid];
m0_814 -> m0_259  [key=2, style=dotted];
m0_816 -> m0_40  [key=2, style=dotted];
m0_816 -> m0_817  [key=0, style=solid];
m0_815 -> m0_810  [key=2, style=dotted];
m0_815 -> m0_816  [key=0, style=solid];
m0_815 -> m0_809  [key=2, style=dotted];
m0_817 -> m0_813  [color=blue, key=0, style=bold];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_87  [color=blue, key=0, style=bold];
m0_99 -> m0_99  [color=darkseagreen4, key=1, label=next, style=dashed];
m0_99 -> m0_100  [key=0, style=solid];
m0_93 -> m0_95  [color=darkseagreen4, key=1, label=next, style=dashed];
m0_93 -> m0_94  [key=0, style=solid];
m0_92 -> m0_79  [key=2, style=dotted];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_100  [key=0, style=solid];
m0_92 -> m0_101  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_92 -> m0_102  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_102  [key=2, style=dotted];
m0_101 -> m0_91  [color=blue, key=0, style=bold];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> m0_104  [key=2, style=dotted];
m0_101 -> m0_101  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_4 -> m0_5  [color=green, key=0, style=solid];
m0_4 -> m0_7  [color=green, key=2, style=dotted];
m0_5 -> m0_6  [color=green, key=0, style=solid];
m0_5 -> m0_7  [key=2, style=dotted];
m0_5 -> m0_8  [color=green, key=2, style=dotted];
m0_5 -> m0_9  [color=green, key=2, style=dotted];
m0_6 -> m0_4  [color=blue, key=0, style=bold];
m0_6 -> m0_0  [color=blue, key=0, style=bold];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_92  [color=blue, key=0, style=bold];
m0_106 -> m0_9  [key=2, style=dotted];
m0_106 -> m0_107  [key=0, style=solid];
m0_106 -> m0_79  [key=2, style=dotted];
m0_106 -> m0_45  [key=2, style=dotted];
m0_106 -> m0_119  [key=2, style=dotted];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_107  [color=darkseagreen4, key=1, label=previous, style=dashed];
m0_105 -> m0_110  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m0_105 -> m0_112  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m0_105 -> m0_115  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m0_107 -> m0_107  [color=darkseagreen4, key=1, label=previous, style=dashed];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_109  [color=darkseagreen4, key=1, label=previous, style=dashed];
m0_107 -> m0_120  [key=2, style=dotted];
m0_108 -> m0_40  [key=2, style=dotted];
m0_108 -> m0_109  [key=0, style=solid];
m0_108 -> m0_118  [key=0, style=solid];
m0_109 -> m0_109  [color=darkseagreen4, key=1, label=previous, style=dashed];
m0_109 -> m0_110  [key=0, style=solid];
m0_109 -> m0_111  [color=darkseagreen4, key=1, label=previous, style=dashed];
m0_110 -> m0_40  [key=2, style=dotted];
m0_110 -> m0_111  [key=0, style=solid];
m0_110 -> m0_112  [key=0, style=solid];
m0_111 -> m0_111  [color=darkseagreen4, key=1, label=previous, style=dashed];
m0_111 -> m0_112  [key=0, style=solid];
m0_111 -> m0_118  [key=0, style=solid];
m0_112 -> m0_102  [key=2, style=dotted];
m0_112 -> m0_113  [key=0, style=solid];
m0_112 -> m0_115  [key=0, style=solid];
m0_113 -> m0_103  [color=blue, key=0, style=bold];
m0_113 -> m0_114  [key=0, style=solid];
m0_113 -> m0_112  [key=0, style=solid];
m0_113 -> m0_94  [key=2, style=dotted];
m0_802 -> m0_803  [key=0, style=solid];
m0_803 -> m0_81  [key=2, style=dotted];
m0_803 -> m0_119  [key=2, style=dotted];
m0_803 -> m0_804  [key=0, style=solid];
m0_803 -> m0_259  [key=2, style=dotted];
m0_803 -> m0_806  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_807 -> m0_40  [key=2, style=dotted];
m0_807 -> m0_808  [key=0, style=solid];
m0_804 -> m0_810  [key=2, style=dotted];
m0_804 -> m0_805  [key=0, style=solid];
m0_804 -> m0_809  [key=2, style=dotted];
m0_806 -> m0_807  [key=0, style=solid];
m0_806 -> m0_809  [key=2, style=dotted];
m0_806 -> m0_812  [key=2, style=dotted];
m0_805 -> m0_811  [key=2, style=dotted];
m0_805 -> m0_806  [key=0, style=solid];
m0_808 -> m0_802  [color=blue, key=0, style=bold];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> m0_118  [key=0, style=solid];
m0_115 -> m0_79  [key=2, style=dotted];
m0_115 -> m0_119  [key=2, style=dotted];
m0_115 -> m0_116  [key=0, style=solid];
m0_115 -> m0_117  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_115 -> m0_118  [key=0, style=solid];
m0_115 -> m0_121  [key=2, style=dotted];
m0_115 -> m0_122  [key=2, style=dotted];
m0_116 -> m0_40  [key=2, style=dotted];
m0_116 -> m0_90  [key=2, style=dotted];
m0_116 -> m0_117  [key=0, style=solid];
m0_117 -> m0_40  [key=2, style=dotted];
m0_117 -> m0_90  [key=2, style=dotted];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_120  [key=2, style=dotted];
m0_117 -> m0_123  [key=2, style=dotted];
m0_117 -> m0_124  [key=2, style=dotted];
m0_117 -> m0_125  [key=2, style=dotted];
m0_118 -> m0_114  [color=blue, key=0, style=bold];
m0_118 -> m0_105  [color=blue, key=0, style=bold];
m0_637 -> m0_638  [key=0, style=solid];
m0_638 -> m0_79  [key=2, style=dotted];
m0_638 -> m0_119  [key=2, style=dotted];
m0_638 -> m0_639  [key=0, style=solid];
m0_638 -> m0_640  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_638 -> m0_646  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_638 -> m0_647  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_646 -> m0_40  [key=2, style=dotted];
m0_646 -> m0_647  [key=0, style=solid];
m0_647 -> m0_40  [key=2, style=dotted];
m0_647 -> m0_648  [key=0, style=solid];
m0_649 -> m0_40  [key=2, style=dotted];
m0_649 -> m0_650  [key=0, style=solid];
m0_649 -> m0_86  [key=2, style=dotted];
m0_650 -> m0_40  [key=2, style=dotted];
m0_650 -> m0_651  [key=0, style=solid];
m0_645 -> m0_40  [key=2, style=dotted];
m0_645 -> m0_646  [key=0, style=solid];
m0_648 -> m0_40  [key=2, style=dotted];
m0_648 -> m0_649  [key=0, style=solid];
m0_644 -> m0_40  [key=2, style=dotted];
m0_644 -> m0_90  [key=2, style=dotted];
m0_644 -> m0_645  [key=0, style=solid];
m0_639 -> m0_649  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_639 -> m0_650  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_639 -> m0_640  [key=0, style=solid];
m0_639 -> m0_652  [key=2, style=dotted];
m0_639 -> m0_641  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_640 -> m0_645  [color=darkseagreen4, key=1, label=t1, style=dashed];
m0_640 -> m0_641  [key=0, style=solid];
m0_640 -> m0_642  [color=darkseagreen4, key=1, label=t1, style=dashed];
m0_643 -> m0_605  [key=2, style=dotted];
m0_643 -> m0_646  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m0_643 -> m0_647  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m0_643 -> m0_649  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m0_643 -> m0_650  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m0_643 -> m0_645  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m0_643 -> m0_648  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m0_643 -> m0_644  [key=0, style=solid];
m0_643 -> m0_654  [key=2, style=dotted];
m0_641 -> m0_648  [color=darkseagreen4, key=1, label=t2, style=dashed];
m0_641 -> m0_642  [key=0, style=solid];
m0_642 -> m0_643  [key=0, style=solid];
m0_642 -> m0_653  [key=2, style=dotted];
m0_651 -> m0_637  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [color=green, key=0, style=solid];
m0_1 -> m0_1  [color=green, key=3, label="Local variable string ob1", style=bold];
m0_1 -> m0_2  [color=green, key=0, style=solid];
m0_1 -> m0_3  [color=green, key=1, label=ob1, style=dashed];
m0_2 -> m0_2  [color=green, key=3, label="Local variable string ob2", style=bold];
m0_2 -> m0_3  [color=green, key=0, style=solid];
m0_2 -> m0_4  [color=green, key=1, label=ob2, style=dashed];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_879 -> m0_880  [key=0, style=solid];
m0_336 -> m0_42  [key=2, style=dotted];
m0_336 -> m0_337  [key=0, style=solid];
m0_361 -> m0_42  [key=2, style=dotted];
m0_361 -> m0_362  [key=0, style=solid];
m0_385 -> m0_42  [key=2, style=dotted];
m0_385 -> m0_386  [key=0, style=solid];
m0_412 -> m0_42  [key=2, style=dotted];
m0_412 -> m0_413  [key=0, style=solid];
m0_376 -> m0_81  [key=2, style=dotted];
m0_376 -> m0_377  [key=0, style=solid];
m0_400 -> m0_81  [key=2, style=dotted];
m0_400 -> m0_401  [key=0, style=solid];
m0_424 -> m0_81  [key=2, style=dotted];
m0_424 -> m0_425  [key=0, style=solid];
m0_454 -> m0_81  [key=2, style=dotted];
m0_454 -> m0_455  [key=0, style=solid];
m0_457 -> m0_81  [key=2, style=dotted];
m0_457 -> m0_458  [key=0, style=solid];
m0_379 -> m0_260  [key=2, style=dotted];
m0_379 -> m0_380  [key=0, style=solid];
m0_403 -> m0_260  [key=2, style=dotted];
m0_403 -> m0_404  [key=0, style=solid];
m0_427 -> m0_260  [key=2, style=dotted];
m0_427 -> m0_428  [key=0, style=solid];
m0_333 -> m0_262  [key=2, style=dotted];
m0_333 -> m0_334  [key=0, style=solid];
m0_358 -> m0_262  [key=2, style=dotted];
m0_358 -> m0_359  [key=0, style=solid];
m0_382 -> m0_262  [key=2, style=dotted];
m0_382 -> m0_383  [key=0, style=solid];
m0_409 -> m0_262  [key=2, style=dotted];
m0_409 -> m0_410  [key=0, style=solid];
m0_436 -> m0_262  [key=2, style=dotted];
m0_436 -> m0_437  [key=0, style=solid];
m0_439 -> m0_262  [key=2, style=dotted];
m0_439 -> m0_440  [key=0, style=solid];
m0_339 -> m0_264  [key=2, style=dotted];
m0_339 -> m0_340  [key=0, style=solid];
m0_364 -> m0_264  [key=2, style=dotted];
m0_364 -> m0_365  [key=0, style=solid];
m0_388 -> m0_264  [key=2, style=dotted];
m0_388 -> m0_389  [key=0, style=solid];
m0_415 -> m0_264  [key=2, style=dotted];
m0_415 -> m0_416  [key=0, style=solid];
m0_460 -> m0_267  [key=2, style=dotted];
m0_460 -> m0_461  [key=0, style=solid];
m0_460 -> m0_281  [key=2, style=dotted];
m0_463 -> m0_267  [key=2, style=dotted];
m0_463 -> m0_464  [key=0, style=solid];
m0_463 -> m0_281  [key=2, style=dotted];
m0_342 -> m0_268  [key=2, style=dotted];
m0_342 -> m0_343  [key=0, style=solid];
m0_367 -> m0_268  [key=2, style=dotted];
m0_367 -> m0_368  [key=0, style=solid];
m0_391 -> m0_268  [key=2, style=dotted];
m0_391 -> m0_392  [key=0, style=solid];
m0_418 -> m0_268  [key=2, style=dotted];
m0_418 -> m0_419  [key=0, style=solid];
m0_351 -> m0_263  [key=2, style=dotted];
m0_351 -> m0_352  [key=0, style=solid];
m0_394 -> m0_263  [key=2, style=dotted];
m0_394 -> m0_395  [key=0, style=solid];
m0_421 -> m0_263  [key=2, style=dotted];
m0_421 -> m0_422  [key=0, style=solid];
m0_445 -> m0_263  [key=2, style=dotted];
m0_445 -> m0_446  [key=0, style=solid];
m0_445 -> m0_281  [key=2, style=dotted];
m0_345 -> m0_270  [key=2, style=dotted];
m0_345 -> m0_346  [key=0, style=solid];
m0_370 -> m0_270  [key=2, style=dotted];
m0_370 -> m0_371  [key=0, style=solid];
m0_430 -> m0_270  [key=2, style=dotted];
m0_430 -> m0_269  [key=2, style=dotted];
m0_430 -> m0_431  [key=0, style=solid];
m0_354 -> m0_271  [key=2, style=dotted];
m0_354 -> m0_355  [key=0, style=solid];
m0_354 -> m0_356  [key=2, style=dotted];
m0_373 -> m0_271  [key=2, style=dotted];
m0_373 -> m0_374  [key=0, style=solid];
m0_373 -> m0_356  [key=2, style=dotted];
m0_397 -> m0_271  [key=2, style=dotted];
m0_397 -> m0_398  [key=0, style=solid];
m0_397 -> m0_356  [key=2, style=dotted];
m0_448 -> m0_271  [key=2, style=dotted];
m0_448 -> m0_449  [key=0, style=solid];
m0_448 -> m0_356  [key=2, style=dotted];
m0_448 -> m0_281  [key=2, style=dotted];
m0_451 -> m0_271  [key=2, style=dotted];
m0_451 -> m0_452  [key=0, style=solid];
m0_451 -> m0_356  [key=2, style=dotted];
m0_451 -> m0_281  [key=2, style=dotted];
m0_348 -> m0_273  [key=2, style=dotted];
m0_348 -> m0_274  [key=2, style=dotted];
m0_348 -> m0_349  [key=0, style=solid];
m0_406 -> m0_273  [key=2, style=dotted];
m0_406 -> m0_274  [key=2, style=dotted];
m0_406 -> m0_407  [key=0, style=solid];
m0_433 -> m0_273  [key=2, style=dotted];
m0_433 -> m0_274  [key=2, style=dotted];
m0_433 -> m0_434  [key=0, style=solid];
m0_442 -> m0_273  [key=2, style=dotted];
m0_442 -> m0_274  [key=2, style=dotted];
m0_442 -> m0_443  [key=0, style=solid];
m0_442 -> m0_281  [key=2, style=dotted];
m0_335 -> m0_336  [key=0, style=solid];
m0_337 -> m0_335  [color=blue, key=0, style=bold];
m0_360 -> m0_361  [key=0, style=solid];
m0_362 -> m0_360  [color=blue, key=0, style=bold];
m0_384 -> m0_385  [key=0, style=solid];
m0_386 -> m0_384  [color=blue, key=0, style=bold];
m0_411 -> m0_412  [key=0, style=solid];
m0_413 -> m0_411  [color=blue, key=0, style=bold];
m0_375 -> m0_376  [key=0, style=solid];
m0_377 -> m0_375  [color=blue, key=0, style=bold];
m0_399 -> m0_400  [key=0, style=solid];
m0_401 -> m0_399  [color=blue, key=0, style=bold];
m0_423 -> m0_424  [key=0, style=solid];
m0_425 -> m0_423  [color=blue, key=0, style=bold];
m0_453 -> m0_454  [key=0, style=solid];
m0_455 -> m0_453  [color=blue, key=0, style=bold];
m0_456 -> m0_457  [key=0, style=solid];
m0_458 -> m0_456  [color=blue, key=0, style=bold];
m0_378 -> m0_379  [key=0, style=solid];
m0_380 -> m0_378  [color=blue, key=0, style=bold];
m0_402 -> m0_403  [key=0, style=solid];
m0_404 -> m0_402  [color=blue, key=0, style=bold];
m0_426 -> m0_427  [key=0, style=solid];
m0_428 -> m0_426  [color=blue, key=0, style=bold];
m0_332 -> m0_333  [key=0, style=solid];
m0_334 -> m0_332  [color=blue, key=0, style=bold];
m0_357 -> m0_358  [key=0, style=solid];
m0_359 -> m0_357  [color=blue, key=0, style=bold];
m0_381 -> m0_382  [key=0, style=solid];
m0_383 -> m0_381  [color=blue, key=0, style=bold];
m0_408 -> m0_409  [key=0, style=solid];
m0_410 -> m0_408  [color=blue, key=0, style=bold];
m0_435 -> m0_436  [key=0, style=solid];
m0_437 -> m0_435  [color=blue, key=0, style=bold];
m0_438 -> m0_439  [key=0, style=solid];
m0_440 -> m0_438  [color=blue, key=0, style=bold];
m0_338 -> m0_339  [key=0, style=solid];
m0_340 -> m0_338  [color=blue, key=0, style=bold];
m0_363 -> m0_364  [key=0, style=solid];
m0_365 -> m0_363  [color=blue, key=0, style=bold];
m0_387 -> m0_388  [key=0, style=solid];
m0_389 -> m0_387  [color=blue, key=0, style=bold];
m0_414 -> m0_415  [key=0, style=solid];
m0_416 -> m0_414  [color=blue, key=0, style=bold];
m0_459 -> m0_460  [key=0, style=solid];
m0_461 -> m0_459  [color=blue, key=0, style=bold];
m0_462 -> m0_463  [key=0, style=solid];
m0_464 -> m0_462  [color=blue, key=0, style=bold];
m0_341 -> m0_342  [key=0, style=solid];
m0_343 -> m0_341  [color=blue, key=0, style=bold];
m0_366 -> m0_367  [key=0, style=solid];
m0_368 -> m0_366  [color=blue, key=0, style=bold];
m0_390 -> m0_391  [key=0, style=solid];
m0_392 -> m0_390  [color=blue, key=0, style=bold];
m0_417 -> m0_418  [key=0, style=solid];
m0_419 -> m0_417  [color=blue, key=0, style=bold];
m0_350 -> m0_351  [key=0, style=solid];
m0_352 -> m0_350  [color=blue, key=0, style=bold];
m0_393 -> m0_394  [key=0, style=solid];
m0_395 -> m0_393  [color=blue, key=0, style=bold];
m0_420 -> m0_421  [key=0, style=solid];
m0_422 -> m0_420  [color=blue, key=0, style=bold];
m0_444 -> m0_445  [key=0, style=solid];
m0_446 -> m0_444  [color=blue, key=0, style=bold];
m0_344 -> m0_345  [key=0, style=solid];
m0_346 -> m0_344  [color=blue, key=0, style=bold];
m0_369 -> m0_370  [key=0, style=solid];
m0_371 -> m0_369  [color=blue, key=0, style=bold];
m0_429 -> m0_430  [key=0, style=solid];
m0_431 -> m0_429  [color=blue, key=0, style=bold];
m0_353 -> m0_354  [key=0, style=solid];
m0_355 -> m0_353  [color=blue, key=0, style=bold];
m0_372 -> m0_373  [key=0, style=solid];
m0_374 -> m0_372  [color=blue, key=0, style=bold];
m0_396 -> m0_397  [key=0, style=solid];
m0_398 -> m0_396  [color=blue, key=0, style=bold];
m0_447 -> m0_448  [key=0, style=solid];
m0_449 -> m0_447  [color=blue, key=0, style=bold];
m0_450 -> m0_451  [key=0, style=solid];
m0_452 -> m0_450  [color=blue, key=0, style=bold];
m0_347 -> m0_348  [key=0, style=solid];
m0_349 -> m0_347  [color=blue, key=0, style=bold];
m0_405 -> m0_406  [key=0, style=solid];
m0_407 -> m0_405  [color=blue, key=0, style=bold];
m0_432 -> m0_433  [key=0, style=solid];
m0_434 -> m0_432  [color=blue, key=0, style=bold];
m0_441 -> m0_442  [key=0, style=solid];
m0_443 -> m0_441  [color=blue, key=0, style=bold];
m0_785 -> m0_652  [key=2, style=dotted];
m0_785 -> m0_786  [key=0, style=solid];
m0_881 -> m0_58  [key=2, style=dotted];
m0_881 -> m0_882  [key=0, style=solid];
m0_784 -> m0_785  [key=0, style=solid];
m0_786 -> m0_787  [key=0, style=solid];
m0_786 -> m0_788  [key=2, style=dotted];
m0_880 -> m0_881  [key=0, style=solid];
m0_882 -> m0_879  [color=blue, key=0, style=bold];
m0_774 -> m0_775  [key=0, style=solid];
m0_787 -> m0_784  [color=blue, key=0, style=bold];
m0_775 -> m0_776  [key=0, style=solid];
m0_775 -> m0_778  [key=2, style=dotted];
m0_776 -> m0_777  [key=0, style=solid];
m0_776 -> m0_779  [key=2, style=dotted];
m0_776 -> m0_780  [key=2, style=dotted];
m0_777 -> m0_774  [color=blue, key=0, style=bold];
m0_680 -> m0_681  [key=0, style=solid];
m0_687 -> m0_9  [key=2, style=dotted];
m0_687 -> m0_688  [key=0, style=solid];
m0_687 -> m0_79  [key=2, style=dotted];
m0_687 -> m0_45  [key=2, style=dotted];
m0_684 -> m0_687  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m0_684 -> m0_685  [key=0, style=solid];
m0_684 -> m0_694  [key=2, style=dotted];
m0_684 -> m0_605  [key=2, style=dotted];
m0_684 -> m0_686  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m0_684 -> m0_688  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m0_684 -> m0_689  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m0_684 -> m0_690  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m0_684 -> m0_691  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m0_684 -> m0_692  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m0_686 -> m0_687  [key=0, style=solid];
m0_686 -> m0_40  [key=2, style=dotted];
m0_688 -> m0_689  [key=0, style=solid];
m0_688 -> m0_40  [key=2, style=dotted];
m0_681 -> m0_79  [key=2, style=dotted];
m0_681 -> m0_119  [key=2, style=dotted];
m0_681 -> m0_682  [key=0, style=solid];
m0_681 -> m0_683  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_683 -> m0_684  [key=0, style=solid];
m0_683 -> m0_653  [key=2, style=dotted];
m0_685 -> m0_686  [key=0, style=solid];
m0_685 -> m0_40  [key=2, style=dotted];
m0_685 -> m0_90  [key=2, style=dotted];
m0_689 -> m0_40  [key=2, style=dotted];
m0_689 -> m0_690  [key=0, style=solid];
m0_690 -> m0_40  [key=2, style=dotted];
m0_690 -> m0_691  [key=0, style=solid];
m0_691 -> m0_40  [key=2, style=dotted];
m0_691 -> m0_692  [key=0, style=solid];
m0_691 -> m0_86  [key=2, style=dotted];
m0_692 -> m0_40  [key=2, style=dotted];
m0_692 -> m0_693  [key=0, style=solid];
m0_682 -> m0_683  [key=0, style=solid];
m0_682 -> m0_691  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_682 -> m0_692  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_682 -> m0_652  [key=2, style=dotted];
m0_693 -> m0_680  [color=blue, key=0, style=bold];
m0_8 -> m0_9  [key=0, style=solid];
m0_140 -> m0_261  [key=2, style=dotted];
m0_140 -> m0_40  [key=2, style=dotted];
m0_140 -> m0_141  [key=0, style=solid];
m0_573 -> m0_574  [key=0, style=solid];
m0_580 -> m0_9  [key=2, style=dotted];
m0_580 -> m0_581  [key=0, style=solid];
m0_580 -> m0_79  [key=2, style=dotted];
m0_580 -> m0_45  [key=2, style=dotted];
m0_575 -> m0_580  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_575 -> m0_79  [key=2, style=dotted];
m0_575 -> m0_576  [key=0, style=solid];
m0_575 -> m0_577  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_575 -> m0_578  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_575 -> m0_579  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_575 -> m0_581  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_575 -> m0_582  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_575 -> m0_584  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_575 -> m0_588  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_575 -> m0_590  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_579 -> m0_580  [key=0, style=solid];
m0_579 -> m0_40  [key=2, style=dotted];
m0_581 -> m0_582  [key=0, style=solid];
m0_581 -> m0_90  [key=2, style=dotted];
m0_581 -> m0_40  [key=2, style=dotted];
m0_574 -> m0_575  [key=0, style=solid];
m0_576 -> m0_577  [key=0, style=solid];
m0_576 -> m0_595  [key=2, style=dotted];
m0_577 -> m0_40  [key=2, style=dotted];
m0_577 -> m0_578  [key=0, style=solid];
m0_578 -> m0_579  [key=0, style=solid];
m0_578 -> m0_595  [key=2, style=dotted];
m0_582 -> m0_583  [key=0, style=solid];
m0_582 -> m0_585  [color=darkseagreen4, key=1, label=t, style=dashed];
m0_582 -> m0_586  [color=darkseagreen4, key=1, label=t, style=dashed];
m0_582 -> m0_587  [color=darkseagreen4, key=1, label=t, style=dashed];
m0_584 -> m0_40  [key=2, style=dotted];
m0_584 -> m0_585  [key=0, style=solid];
m0_588 -> m0_589  [key=0, style=solid];
m0_588 -> m0_591  [color=darkseagreen4, key=1, label=t, style=dashed];
m0_588 -> m0_592  [color=darkseagreen4, key=1, label=t, style=dashed];
m0_588 -> m0_593  [color=darkseagreen4, key=1, label=t, style=dashed];
m0_590 -> m0_40  [key=2, style=dotted];
m0_590 -> m0_591  [key=0, style=solid];
m0_590 -> m0_90  [key=2, style=dotted];
m0_583 -> m0_584  [key=0, style=solid];
m0_583 -> m0_595  [key=2, style=dotted];
m0_585 -> m0_102  [key=2, style=dotted];
m0_585 -> m0_586  [key=0, style=solid];
m0_586 -> m0_102  [key=2, style=dotted];
m0_586 -> m0_587  [key=0, style=solid];
m0_587 -> m0_588  [key=0, style=solid];
m0_587 -> m0_102  [key=2, style=dotted];
m0_589 -> m0_590  [key=0, style=solid];
m0_589 -> m0_595  [key=2, style=dotted];
m0_591 -> m0_102  [key=2, style=dotted];
m0_591 -> m0_592  [key=0, style=solid];
m0_592 -> m0_102  [key=2, style=dotted];
m0_592 -> m0_593  [key=0, style=solid];
m0_593 -> m0_102  [key=2, style=dotted];
m0_593 -> m0_594  [key=0, style=solid];
m0_594 -> m0_573  [color=blue, key=0, style=bold];
m0_606 -> m0_607  [key=0, style=solid];
m0_611 -> m0_9  [key=2, style=dotted];
m0_611 -> m0_612  [key=0, style=solid];
m0_611 -> m0_42  [key=2, style=dotted];
m0_611 -> m0_45  [key=2, style=dotted];
m0_612 -> m0_9  [key=2, style=dotted];
m0_612 -> m0_613  [key=0, style=solid];
m0_612 -> m0_119  [key=2, style=dotted];
m0_612 -> m0_45  [key=2, style=dotted];
m0_609 -> m0_611  [color=darkseagreen4, key=1, label=beforeTokens, style=dashed];
m0_609 -> m0_612  [color=darkseagreen4, key=1, label=beforeTokens, style=dashed];
m0_609 -> m0_610  [key=0, style=solid];
m0_609 -> m0_126  [key=2, style=dotted];
m0_609 -> m0_605  [key=2, style=dotted];
m0_610 -> m0_611  [key=0, style=solid];
m0_610 -> m0_40  [key=2, style=dotted];
m0_607 -> m0_79  [key=2, style=dotted];
m0_607 -> m0_119  [key=2, style=dotted];
m0_607 -> m0_608  [key=0, style=solid];
m0_608 -> m0_609  [key=0, style=solid];
m0_613 -> m0_606  [color=blue, key=0, style=bold];
m0_707 -> m0_708  [key=0, style=solid];
m0_715 -> m0_9  [key=2, style=dotted];
m0_715 -> m0_716  [key=0, style=solid];
m0_715 -> m0_79  [key=2, style=dotted];
m0_715 -> m0_45  [key=2, style=dotted];
m0_711 -> m0_715  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m0_711 -> m0_712  [key=0, style=solid];
m0_711 -> m0_723  [key=2, style=dotted];
m0_711 -> m0_605  [key=2, style=dotted];
m0_711 -> m0_713  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m0_711 -> m0_714  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m0_711 -> m0_716  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m0_711 -> m0_717  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m0_711 -> m0_718  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m0_711 -> m0_719  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m0_711 -> m0_720  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m0_711 -> m0_721  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m0_714 -> m0_715  [key=0, style=solid];
m0_714 -> m0_40  [key=2, style=dotted];
m0_716 -> m0_717  [key=0, style=solid];
m0_716 -> m0_40  [key=2, style=dotted];
m0_708 -> m0_79  [key=2, style=dotted];
m0_708 -> m0_119  [key=2, style=dotted];
m0_708 -> m0_709  [key=0, style=solid];
m0_708 -> m0_710  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_708 -> m0_713  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_710 -> m0_711  [key=0, style=solid];
m0_710 -> m0_653  [key=2, style=dotted];
m0_712 -> m0_40  [key=2, style=dotted];
m0_712 -> m0_90  [key=2, style=dotted];
m0_712 -> m0_713  [key=0, style=solid];
m0_713 -> m0_714  [key=0, style=solid];
m0_713 -> m0_40  [key=2, style=dotted];
m0_717 -> m0_40  [key=2, style=dotted];
m0_717 -> m0_718  [key=0, style=solid];
m0_718 -> m0_40  [key=2, style=dotted];
m0_718 -> m0_719  [key=0, style=solid];
m0_719 -> m0_40  [key=2, style=dotted];
m0_719 -> m0_720  [key=0, style=solid];
m0_720 -> m0_40  [key=2, style=dotted];
m0_720 -> m0_721  [key=0, style=solid];
m0_720 -> m0_86  [key=2, style=dotted];
m0_721 -> m0_40  [key=2, style=dotted];
m0_721 -> m0_722  [key=0, style=solid];
m0_709 -> m0_710  [key=0, style=solid];
m0_709 -> m0_719  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_709 -> m0_720  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_709 -> m0_721  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_709 -> m0_652  [key=2, style=dotted];
m0_722 -> m0_707  [color=blue, key=0, style=bold];
m0_49 -> m0_50  [key=0, style=solid];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_48  [key=2, style=dotted];
m0_50 -> m0_54  [color=darkseagreen4, key=1, label=fixedHex, style=dashed];
m0_50 -> m0_37  [key=2, style=dotted];
m0_50 -> m0_38  [key=2, style=dotted];
m0_50 -> m0_53  [key=2, style=dotted];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_58  [color=darkseagreen4, key=1, label=bytes, style=dashed];
m0_51 -> m0_62  [color=darkseagreen4, key=1, label=bytes, style=dashed];
m0_51 -> m0_40  [key=2, style=dotted];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_62  [key=0, style=solid];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_58  [color=darkseagreen4, key=1, label=shift, style=dashed];
m0_52 -> m0_59  [color=darkseagreen4, key=1, label=shift, style=dashed];
m0_52 -> m0_49  [color=blue, key=0, style=bold];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_57  [color=darkseagreen4, key=1, label=b, style=dashed];
m0_55 -> m0_58  [color=darkseagreen4, key=1, label=b, style=dashed];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_58  [key=0, style=solid];
m0_56 -> m0_40  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_57  [color=darkseagreen4, key=1, label=b, style=dashed];
m0_57 -> m0_54  [color=blue, key=0, style=bold];
m0_596 -> m0_597  [key=0, style=solid];
m0_601 -> m0_9  [key=2, style=dotted];
m0_601 -> m0_602  [key=0, style=solid];
m0_601 -> m0_79  [key=2, style=dotted];
m0_601 -> m0_45  [key=2, style=dotted];
m0_602 -> m0_9  [key=2, style=dotted];
m0_602 -> m0_603  [key=0, style=solid];
m0_602 -> m0_79  [key=2, style=dotted];
m0_602 -> m0_45  [key=2, style=dotted];
m0_599 -> m0_601  [color=darkseagreen4, key=1, label=afterTokens, style=dashed];
m0_599 -> m0_602  [color=darkseagreen4, key=1, label=afterTokens, style=dashed];
m0_599 -> m0_600  [key=0, style=solid];
m0_599 -> m0_604  [key=2, style=dotted];
m0_599 -> m0_605  [key=2, style=dotted];
m0_600 -> m0_601  [key=0, style=solid];
m0_600 -> m0_40  [key=2, style=dotted];
m0_597 -> m0_79  [key=2, style=dotted];
m0_597 -> m0_119  [key=2, style=dotted];
m0_597 -> m0_598  [key=0, style=solid];
m0_598 -> m0_599  [key=0, style=solid];
m0_603 -> m0_596  [color=blue, key=0, style=bold];
m0_618 -> m0_619  [key=0, style=solid];
m0_619 -> m0_79  [key=2, style=dotted];
m0_619 -> m0_119  [key=2, style=dotted];
m0_619 -> m0_620  [key=0, style=solid];
m0_619 -> m0_623  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_619 -> m0_624  [color=darkseagreen4, key=1, label=a, style=dashed];
m0_623 -> m0_40  [key=2, style=dotted];
m0_623 -> m0_624  [key=0, style=solid];
m0_624 -> m0_40  [key=2, style=dotted];
m0_624 -> m0_625  [key=0, style=solid];
m0_622 -> m0_40  [key=2, style=dotted];
m0_622 -> m0_90  [key=2, style=dotted];
m0_622 -> m0_623  [key=0, style=solid];
m0_620 -> m0_621  [key=0, style=solid];
m0_621 -> m0_605  [key=2, style=dotted];
m0_621 -> m0_623  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m0_621 -> m0_624  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m0_621 -> m0_622  [key=0, style=solid];
m0_621 -> m0_626  [key=2, style=dotted];
m0_625 -> m0_618  [color=blue, key=0, style=bold];
m0_167 -> m0_42  [key=2, style=dotted];
m0_167 -> m0_40  [key=2, style=dotted];
m0_167 -> m0_168  [key=0, style=solid];
m0_171 -> m0_42  [key=2, style=dotted];
m0_171 -> m0_40  [key=2, style=dotted];
m0_171 -> m0_172  [key=0, style=solid];
m0_172 -> m0_42  [key=2, style=dotted];
m0_172 -> m0_40  [key=2, style=dotted];
m0_172 -> m0_173  [key=0, style=solid];
m0_173 -> m0_42  [key=2, style=dotted];
m0_173 -> m0_40  [key=2, style=dotted];
m0_173 -> m0_174  [key=0, style=solid];
m0_176 -> m0_42  [key=2, style=dotted];
m0_176 -> m0_40  [key=2, style=dotted];
m0_176 -> m0_177  [key=0, style=solid];
m0_177 -> m0_42  [key=2, style=dotted];
m0_177 -> m0_40  [key=2, style=dotted];
m0_177 -> m0_178  [key=0, style=solid];
m0_178 -> m0_42  [key=2, style=dotted];
m0_178 -> m0_40  [key=2, style=dotted];
m0_178 -> m0_179  [key=0, style=solid];
m0_180 -> m0_42  [key=2, style=dotted];
m0_180 -> m0_40  [key=2, style=dotted];
m0_180 -> m0_181  [key=0, style=solid];
m0_188 -> m0_42  [key=2, style=dotted];
m0_188 -> m0_40  [key=2, style=dotted];
m0_188 -> m0_189  [key=0, style=solid];
m0_192 -> m0_42  [key=2, style=dotted];
m0_192 -> m0_40  [key=2, style=dotted];
m0_192 -> m0_193  [key=0, style=solid];
m0_196 -> m0_42  [key=2, style=dotted];
m0_196 -> m0_40  [key=2, style=dotted];
m0_196 -> m0_197  [key=0, style=solid];
m0_241 -> m0_42  [key=2, style=dotted];
m0_241 -> m0_282  [key=2, style=dotted];
m0_241 -> m0_40  [key=2, style=dotted];
m0_241 -> m0_242  [key=0, style=solid];
m0_241 -> m0_281  [key=2, style=dotted];
m0_244 -> m0_42  [key=2, style=dotted];
m0_244 -> m0_282  [key=2, style=dotted];
m0_244 -> m0_40  [key=2, style=dotted];
m0_244 -> m0_245  [key=0, style=solid];
m0_244 -> m0_281  [key=2, style=dotted];
m0_245 -> m0_42  [key=2, style=dotted];
m0_245 -> m0_282  [key=2, style=dotted];
m0_245 -> m0_40  [key=2, style=dotted];
m0_245 -> m0_246  [key=0, style=solid];
m0_245 -> m0_281  [key=2, style=dotted];
m0_246 -> m0_42  [key=2, style=dotted];
m0_246 -> m0_282  [key=2, style=dotted];
m0_246 -> m0_40  [key=2, style=dotted];
m0_246 -> m0_247  [key=0, style=solid];
m0_246 -> m0_281  [key=2, style=dotted];
m0_186 -> m0_81  [key=2, style=dotted];
m0_186 -> m0_40  [key=2, style=dotted];
m0_186 -> m0_187  [key=0, style=solid];
m0_186 -> m0_259  [key=2, style=dotted];
m0_187 -> m0_260  [key=2, style=dotted];
m0_187 -> m0_258  [key=2, style=dotted];
m0_187 -> m0_40  [key=2, style=dotted];
m0_187 -> m0_188  [key=0, style=solid];
m0_142 -> m0_261  [key=2, style=dotted];
m0_142 -> m0_40  [key=2, style=dotted];
m0_142 -> m0_143  [key=0, style=solid];
m0_144 -> m0_261  [key=2, style=dotted];
m0_144 -> m0_40  [key=2, style=dotted];
m0_144 -> m0_145  [key=0, style=solid];
m0_146 -> m0_261  [key=2, style=dotted];
m0_146 -> m0_40  [key=2, style=dotted];
m0_146 -> m0_147  [key=0, style=solid];
m0_148 -> m0_261  [key=2, style=dotted];
m0_148 -> m0_40  [key=2, style=dotted];
m0_148 -> m0_149  [key=0, style=solid];
m0_150 -> m0_261  [key=2, style=dotted];
m0_150 -> m0_40  [key=2, style=dotted];
m0_150 -> m0_151  [key=0, style=solid];
m0_152 -> m0_261  [key=2, style=dotted];
m0_152 -> m0_40  [key=2, style=dotted];
m0_152 -> m0_153  [key=0, style=solid];
m0_154 -> m0_261  [key=2, style=dotted];
m0_154 -> m0_40  [key=2, style=dotted];
m0_154 -> m0_155  [key=0, style=solid];
m0_156 -> m0_261  [key=2, style=dotted];
m0_156 -> m0_40  [key=2, style=dotted];
m0_156 -> m0_157  [key=0, style=solid];
m0_158 -> m0_261  [key=2, style=dotted];
m0_158 -> m0_40  [key=2, style=dotted];
m0_158 -> m0_159  [key=0, style=solid];
m0_160 -> m0_261  [key=2, style=dotted];
m0_160 -> m0_40  [key=2, style=dotted];
m0_160 -> m0_161  [key=0, style=solid];
m0_162 -> m0_261  [key=2, style=dotted];
m0_162 -> m0_40  [key=2, style=dotted];
m0_162 -> m0_163  [key=0, style=solid];
m0_210 -> m0_261  [key=2, style=dotted];
m0_210 -> m0_275  [key=2, style=dotted];
m0_210 -> m0_40  [key=2, style=dotted];
m0_210 -> m0_211  [key=0, style=solid];
m0_210 -> m0_276  [key=2, style=dotted];
m0_212 -> m0_261  [key=2, style=dotted];
m0_212 -> m0_272  [key=2, style=dotted];
m0_212 -> m0_40  [key=2, style=dotted];
m0_212 -> m0_213  [key=0, style=solid];
m0_212 -> m0_278  [key=2, style=dotted];
m0_213 -> m0_261  [key=2, style=dotted];
m0_213 -> m0_272  [key=2, style=dotted];
m0_213 -> m0_40  [key=2, style=dotted];
m0_213 -> m0_214  [key=0, style=solid];
m0_213 -> m0_278  [key=2, style=dotted];
m0_214 -> m0_261  [key=2, style=dotted];
m0_214 -> m0_40  [key=2, style=dotted];
m0_214 -> m0_215  [key=0, style=solid];
m0_236 -> m0_261  [key=2, style=dotted];
m0_236 -> m0_40  [key=2, style=dotted];
m0_236 -> m0_237  [key=0, style=solid];
m0_237 -> m0_261  [key=2, style=dotted];
m0_237 -> m0_40  [key=2, style=dotted];
m0_237 -> m0_238  [key=0, style=solid];
m0_249 -> m0_261  [key=2, style=dotted];
m0_249 -> m0_40  [key=2, style=dotted];
m0_249 -> m0_250  [key=0, style=solid];
m0_249 -> m0_279  [key=2, style=dotted];
m0_249 -> m0_281  [key=2, style=dotted];
m0_239 -> m0_280  [key=2, style=dotted];
m0_239 -> m0_40  [key=2, style=dotted];
m0_239 -> m0_240  [key=0, style=solid];
m0_239 -> m0_279  [key=2, style=dotted];
m0_250 -> m0_280  [key=2, style=dotted];
m0_250 -> m0_282  [key=2, style=dotted];
m0_250 -> m0_40  [key=2, style=dotted];
m0_250 -> m0_251  [key=0, style=solid];
m0_251 -> m0_280  [key=2, style=dotted];
m0_251 -> m0_282  [key=2, style=dotted];
m0_251 -> m0_40  [key=2, style=dotted];
m0_251 -> m0_252  [key=0, style=solid];
m0_252 -> m0_280  [key=2, style=dotted];
m0_252 -> m0_282  [key=2, style=dotted];
m0_252 -> m0_40  [key=2, style=dotted];
m0_252 -> m0_253  [key=0, style=solid];
m0_253 -> m0_280  [key=2, style=dotted];
m0_253 -> m0_282  [key=2, style=dotted];
m0_253 -> m0_40  [key=2, style=dotted];
m0_253 -> m0_254  [key=0, style=solid];
m0_254 -> m0_280  [key=2, style=dotted];
m0_254 -> m0_282  [key=2, style=dotted];
m0_254 -> m0_40  [key=2, style=dotted];
m0_254 -> m0_255  [key=0, style=solid];
m0_255 -> m0_280  [key=2, style=dotted];
m0_255 -> m0_282  [key=2, style=dotted];
m0_255 -> m0_256  [key=0, style=solid];
m0_242 -> m0_282  [key=2, style=dotted];
m0_242 -> m0_264  [key=2, style=dotted];
m0_242 -> m0_40  [key=2, style=dotted];
m0_242 -> m0_243  [key=0, style=solid];
m0_242 -> m0_281  [key=2, style=dotted];
m0_243 -> m0_282  [key=2, style=dotted];
m0_243 -> m0_265  [key=2, style=dotted];
m0_243 -> m0_40  [key=2, style=dotted];
m0_243 -> m0_244  [key=0, style=solid];
m0_243 -> m0_281  [key=2, style=dotted];
m0_183 -> m0_262  [key=2, style=dotted];
m0_183 -> m0_40  [key=2, style=dotted];
m0_183 -> m0_184  [key=0, style=solid];
m0_191 -> m0_262  [key=2, style=dotted];
m0_191 -> m0_40  [key=2, style=dotted];
m0_191 -> m0_192  [key=0, style=solid];
m0_195 -> m0_262  [key=2, style=dotted];
m0_195 -> m0_40  [key=2, style=dotted];
m0_195 -> m0_196  [key=0, style=solid];
m0_199 -> m0_262  [key=2, style=dotted];
m0_199 -> m0_40  [key=2, style=dotted];
m0_199 -> m0_200  [key=0, style=solid];
m0_165 -> m0_265  [key=2, style=dotted];
m0_165 -> m0_40  [key=2, style=dotted];
m0_165 -> m0_166  [key=0, style=solid];
m0_164 -> m0_264  [key=2, style=dotted];
m0_164 -> m0_40  [key=2, style=dotted];
m0_164 -> m0_165  [key=0, style=solid];
m0_166 -> m0_264  [key=2, style=dotted];
m0_166 -> m0_40  [key=2, style=dotted];
m0_166 -> m0_167  [key=0, style=solid];
m0_181 -> m0_264  [key=2, style=dotted];
m0_181 -> m0_40  [key=2, style=dotted];
m0_181 -> m0_182  [key=0, style=solid];
m0_189 -> m0_264  [key=2, style=dotted];
m0_189 -> m0_40  [key=2, style=dotted];
m0_189 -> m0_190  [key=0, style=solid];
m0_193 -> m0_264  [key=2, style=dotted];
m0_193 -> m0_40  [key=2, style=dotted];
m0_193 -> m0_194  [key=0, style=solid];
m0_197 -> m0_264  [key=2, style=dotted];
m0_197 -> m0_40  [key=2, style=dotted];
m0_197 -> m0_198  [key=0, style=solid];
m0_168 -> m0_266  [key=2, style=dotted];
m0_168 -> m0_40  [key=2, style=dotted];
m0_168 -> m0_169  [key=0, style=solid];
m0_169 -> m0_266  [key=2, style=dotted];
m0_169 -> m0_84  [key=2, style=dotted];
m0_169 -> m0_40  [key=2, style=dotted];
m0_169 -> m0_170  [key=0, style=solid];
m0_170 -> m0_267  [key=2, style=dotted];
m0_170 -> m0_40  [key=2, style=dotted];
m0_170 -> m0_171  [key=0, style=solid];
m0_190 -> m0_267  [key=2, style=dotted];
m0_190 -> m0_40  [key=2, style=dotted];
m0_190 -> m0_191  [key=0, style=solid];
m0_194 -> m0_267  [key=2, style=dotted];
m0_194 -> m0_40  [key=2, style=dotted];
m0_194 -> m0_195  [key=0, style=solid];
m0_198 -> m0_267  [key=2, style=dotted];
m0_198 -> m0_40  [key=2, style=dotted];
m0_198 -> m0_199  [key=0, style=solid];
m0_202 -> m0_267  [key=2, style=dotted];
m0_202 -> m0_269  [key=2, style=dotted];
m0_202 -> m0_40  [key=2, style=dotted];
m0_202 -> m0_203  [key=0, style=solid];
m0_205 -> m0_267  [key=2, style=dotted];
m0_205 -> m0_272  [key=2, style=dotted];
m0_205 -> m0_40  [key=2, style=dotted];
m0_205 -> m0_206  [key=0, style=solid];
m0_207 -> m0_267  [key=2, style=dotted];
m0_207 -> m0_274  [key=2, style=dotted];
m0_207 -> m0_40  [key=2, style=dotted];
m0_207 -> m0_208  [key=0, style=solid];
m0_211 -> m0_267  [key=2, style=dotted];
m0_211 -> m0_275  [key=2, style=dotted];
m0_211 -> m0_212  [key=0, style=solid];
m0_211 -> m0_276  [key=2, style=dotted];
m0_211 -> m0_277  [key=2, style=dotted];
m0_240 -> m0_267  [key=2, style=dotted];
m0_240 -> m0_40  [key=2, style=dotted];
m0_240 -> m0_241  [key=0, style=solid];
m0_240 -> m0_279  [key=2, style=dotted];
m0_240 -> m0_281  [key=2, style=dotted];
m0_174 -> m0_268  [key=2, style=dotted];
m0_174 -> m0_40  [key=2, style=dotted];
m0_174 -> m0_175  [key=0, style=solid];
m0_175 -> m0_268  [key=2, style=dotted];
m0_175 -> m0_40  [key=2, style=dotted];
m0_175 -> m0_176  [key=0, style=solid];
m0_182 -> m0_268  [key=2, style=dotted];
m0_182 -> m0_40  [key=2, style=dotted];
m0_182 -> m0_183  [key=0, style=solid];
m0_179 -> m0_263  [key=2, style=dotted];
m0_179 -> m0_40  [key=2, style=dotted];
m0_179 -> m0_180  [key=0, style=solid];
m0_184 -> m0_263  [key=2, style=dotted];
m0_184 -> m0_40  [key=2, style=dotted];
m0_184 -> m0_185  [key=0, style=solid];
m0_209 -> m0_263  [key=2, style=dotted];
m0_209 -> m0_40  [key=2, style=dotted];
m0_209 -> m0_210  [key=0, style=solid];
m0_247 -> m0_263  [key=2, style=dotted];
m0_247 -> m0_40  [key=2, style=dotted];
m0_247 -> m0_248  [key=0, style=solid];
m0_247 -> m0_281  [key=2, style=dotted];
m0_200 -> m0_270  [key=2, style=dotted];
m0_200 -> m0_269  [key=2, style=dotted];
m0_200 -> m0_40  [key=2, style=dotted];
m0_200 -> m0_201  [key=0, style=solid];
m0_201 -> m0_270  [key=2, style=dotted];
m0_201 -> m0_269  [key=2, style=dotted];
m0_201 -> m0_40  [key=2, style=dotted];
m0_201 -> m0_202  [key=0, style=solid];
m0_203 -> m0_271  [key=2, style=dotted];
m0_203 -> m0_272  [key=2, style=dotted];
m0_203 -> m0_40  [key=2, style=dotted];
m0_203 -> m0_204  [key=0, style=solid];
m0_206 -> m0_271  [key=2, style=dotted];
m0_206 -> m0_272  [key=2, style=dotted];
m0_206 -> m0_40  [key=2, style=dotted];
m0_206 -> m0_207  [key=0, style=solid];
m0_204 -> m0_273  [key=2, style=dotted];
m0_204 -> m0_274  [key=2, style=dotted];
m0_204 -> m0_40  [key=2, style=dotted];
m0_204 -> m0_205  [key=0, style=solid];
m0_208 -> m0_273  [key=2, style=dotted];
m0_208 -> m0_274  [key=2, style=dotted];
m0_208 -> m0_40  [key=2, style=dotted];
m0_208 -> m0_209  [key=0, style=solid];
m0_141 -> m0_40  [key=2, style=dotted];
m0_141 -> m0_142  [key=0, style=solid];
m0_141 -> m0_39  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestFixtureBase", style=dashed];
m0_141 -> m0_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestFixtureBase", style=dashed];
m0_143 -> m0_40  [key=2, style=dotted];
m0_143 -> m0_144  [key=0, style=solid];
m0_145 -> m0_40  [key=2, style=dotted];
m0_145 -> m0_146  [key=0, style=solid];
m0_147 -> m0_40  [key=2, style=dotted];
m0_147 -> m0_148  [key=0, style=solid];
m0_149 -> m0_40  [key=2, style=dotted];
m0_149 -> m0_150  [key=0, style=solid];
m0_151 -> m0_40  [key=2, style=dotted];
m0_151 -> m0_152  [key=0, style=solid];
m0_153 -> m0_40  [key=2, style=dotted];
m0_153 -> m0_154  [key=0, style=solid];
m0_155 -> m0_40  [key=2, style=dotted];
m0_155 -> m0_156  [key=0, style=solid];
m0_157 -> m0_40  [key=2, style=dotted];
m0_157 -> m0_158  [key=0, style=solid];
m0_159 -> m0_40  [key=2, style=dotted];
m0_159 -> m0_160  [key=0, style=solid];
m0_161 -> m0_40  [key=2, style=dotted];
m0_161 -> m0_162  [key=0, style=solid];
m0_163 -> m0_40  [key=2, style=dotted];
m0_163 -> m0_164  [key=0, style=solid];
m0_185 -> m0_40  [key=2, style=dotted];
m0_185 -> m0_186  [key=0, style=solid];
m0_215 -> m0_40  [key=2, style=dotted];
m0_215 -> m0_216  [key=0, style=solid];
m0_216 -> m0_40  [key=2, style=dotted];
m0_216 -> m0_217  [key=0, style=solid];
m0_217 -> m0_40  [key=2, style=dotted];
m0_217 -> m0_218  [key=0, style=solid];
m0_218 -> m0_40  [key=2, style=dotted];
m0_218 -> m0_219  [key=0, style=solid];
m0_219 -> m0_40  [key=2, style=dotted];
m0_219 -> m0_220  [key=0, style=solid];
m0_220 -> m0_40  [key=2, style=dotted];
m0_220 -> m0_221  [key=0, style=solid];
m0_221 -> m0_40  [key=2, style=dotted];
m0_221 -> m0_222  [key=0, style=solid];
m0_222 -> m0_40  [key=2, style=dotted];
m0_222 -> m0_223  [key=0, style=solid];
m0_223 -> m0_40  [key=2, style=dotted];
m0_223 -> m0_224  [key=0, style=solid];
m0_224 -> m0_40  [key=2, style=dotted];
m0_224 -> m0_225  [key=0, style=solid];
m0_225 -> m0_40  [key=2, style=dotted];
m0_225 -> m0_226  [key=0, style=solid];
m0_226 -> m0_40  [key=2, style=dotted];
m0_226 -> m0_227  [key=0, style=solid];
m0_227 -> m0_40  [key=2, style=dotted];
m0_227 -> m0_228  [key=0, style=solid];
m0_228 -> m0_40  [key=2, style=dotted];
m0_228 -> m0_229  [key=0, style=solid];
m0_229 -> m0_40  [key=2, style=dotted];
m0_229 -> m0_230  [key=0, style=solid];
m0_230 -> m0_40  [key=2, style=dotted];
m0_230 -> m0_231  [key=0, style=solid];
m0_231 -> m0_40  [key=2, style=dotted];
m0_231 -> m0_232  [key=0, style=solid];
m0_232 -> m0_40  [key=2, style=dotted];
m0_232 -> m0_233  [key=0, style=solid];
m0_233 -> m0_40  [key=2, style=dotted];
m0_233 -> m0_234  [key=0, style=solid];
m0_234 -> m0_40  [key=2, style=dotted];
m0_234 -> m0_235  [key=0, style=solid];
m0_256 -> m0_40  [key=2, style=dotted];
m0_256 -> m0_257  [key=0, style=solid];
m0_235 -> m0_236  [key=0, style=solid];
m0_238 -> m0_249  [color=darkseagreen4, key=1, label=bigIntegerText, style=dashed];
m0_238 -> m0_239  [key=0, style=solid];
m0_238 -> m0_240  [color=darkseagreen4, key=1, label=bigIntegerText, style=dashed];
m0_238 -> m0_248  [color=darkseagreen4, key=1, label=bigIntegerText, style=dashed];
m0_248 -> m0_249  [key=0, style=solid];
m0_248 -> m0_279  [key=2, style=dotted];
m0_248 -> m0_283  [key=2, style=dotted];
m0_257 -> m0_127  [color=blue, key=0, style=bold];
m0_781 -> m0_782  [key=0, style=solid];
m0_782 -> m0_330  [key=2, style=dotted];
m0_782 -> m0_783  [key=0, style=solid];
m0_782 -> m0_784  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_783 -> m0_781  [color=blue, key=0, style=bold];
m0_904 -> m0_905  [key=0, style=solid];
m0_907 -> m0_40  [key=2, style=dotted];
m0_907 -> m0_90  [key=2, style=dotted];
m0_907 -> m0_908  [key=0, style=solid];
m0_908 -> m0_40  [key=2, style=dotted];
m0_908 -> m0_909  [key=0, style=solid];
m0_909 -> m0_40  [key=2, style=dotted];
m0_909 -> m0_910  [key=0, style=solid];
m0_910 -> m0_40  [key=2, style=dotted];
m0_910 -> m0_911  [key=0, style=solid];
m0_906 -> m0_907  [key=0, style=solid];
m0_906 -> m0_908  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_906 -> m0_909  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_906 -> m0_910  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_906 -> m0_912  [key=2, style=dotted];
m0_906 -> m0_913  [key=2, style=dotted];
m0_905 -> m0_906  [key=0, style=solid];
m0_905 -> m0_905  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m0_911 -> m0_904  [color=blue, key=0, style=bold];
m1_3 -> m1_0  [color=darkorchid, key=3, label="Parameter variable System.IFormatProvider provider", style=bold];
m1_3 -> m1_4  [color=darkorchid, key=3, label="Parameter variable System.IFormatProvider provider", style=bold];
m1_3 -> m1_7  [color=darkorchid, key=3, label="Parameter variable System.IFormatProvider provider", style=bold];
m1_3 -> m1_10  [color=darkorchid, key=3, label="Parameter variable System.IFormatProvider provider", style=bold];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_61  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
m1_59 -> m1_62  [color=darkseagreen4, key=1, label="System.Func<TSource, string>", style=dashed];
m1_59 -> m1_63  [color=darkseagreen4, key=1, label="System.Func<TSource, string>", style=dashed];
m1_59 -> m1_64  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
m1_59 -> m1_74  [color=darkseagreen4, key=1, label="System.Func<TSource, string>", style=dashed];
m1_59 -> m1_67  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
m1_59 -> m1_79  [color=darkseagreen4, key=1, label="System.Func<TSource, string>", style=dashed];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_62  [key=0, style=solid];
m1_61 -> m1_69  [key=0, style=solid];
m1_61 -> n17  [key=2, style=dotted];
m1_61 -> m1_17  [key=2, style=dotted];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_64  [key=0, style=solid];
m1_63 -> m1_69  [key=0, style=solid];
m1_63 -> n17  [key=2, style=dotted];
m1_63 -> m1_17  [key=2, style=dotted];
m1_64 -> m1_65  [key=0, style=solid];
m1_64 -> m1_70  [key=2, style=dotted];
m1_64 -> m1_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_64 -> m1_66  [color=darkseagreen4, key=1, label=caseInsensitiveResults, style=dashed];
m1_67 -> m1_68  [key=0, style=solid];
m1_67 -> m1_70  [key=2, style=dotted];
m1_67 -> m1_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_67  [key=0, style=solid];
m1_65 -> m1_71  [key=2, style=dotted];
m1_66 -> m1_69  [key=0, style=solid];
m1_66 -> m1_72  [key=2, style=dotted];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_72  [key=2, style=dotted];
m1_69 -> m1_59  [color=blue, key=0, style=bold];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_20 -> m1_23  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_20 -> m1_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_20 -> m1_27  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_20 -> m1_24  [color=darkorchid, key=3, label="method methodReturn bool IsWhiteSpace", style=bold];
m1_20 -> m1_30  [color=darkorchid, key=3, label="method methodReturn bool IsWhiteSpace", style=bold];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_23  [key=0, style=solid];
m1_22 -> m1_31  [key=0, style=solid];
m1_22 -> n17  [key=2, style=dotted];
m1_22 -> m1_17  [key=2, style=dotted];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_25  [key=0, style=solid];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_30  [key=0, style=solid];
m1_26 -> m1_26  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_29  [key=0, style=solid];
m1_27 -> m1_33  [key=2, style=dotted];
m1_24 -> m1_31  [key=0, style=solid];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_27  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_25 -> m1_29  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_29 -> m1_26  [key=0, style=solid];
m1_29 -> m1_29  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_30 -> m1_31  [key=0, style=solid];
m1_28 -> m1_31  [key=0, style=solid];
m1_31 -> m1_20  [color=blue, key=0, style=bold];
m1_107 -> m1_108  [key=0, style=solid];
m1_108 -> m1_109  [key=0, style=solid];
m1_109 -> m1_107  [color=blue, key=0, style=bold];
m1_103 -> m1_104  [key=0, style=solid];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_106  [key=2, style=dotted];
m1_105 -> m1_103  [color=blue, key=0, style=bold];
m1_99 -> m1_100  [key=0, style=solid];
m1_100 -> m1_101  [key=0, style=solid];
m1_100 -> m1_102  [key=2, style=dotted];
m1_101 -> m1_99  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_3  [color=darkorchid, key=3, label="method methodReturn string FormatWith", style=bold];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_40  [color=darkorchid, key=3, label="method methodReturn System.IO.StringWriter CreateStringWriter", style=bold];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_43  [key=2, style=dotted];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_44  [key=2, style=dotted];
m1_41 -> m1_42  [key=0, style=solid];
m1_42 -> m1_38  [color=blue, key=0, style=bold];
m1_34 -> m1_35  [key=0, style=solid];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_37  [key=2, style=dotted];
m1_36 -> m1_34  [color=blue, key=0, style=bold];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_3  [color=darkorchid, key=3, label="method methodReturn string FormatWith", style=bold];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_3  [key=2, style=dotted];
m1_6 -> m1_4  [color=blue, key=0, style=bold];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_48  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_45 -> m1_47  [color=darkorchid, key=3, label="method methodReturn int? GetLength", style=bold];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_48  [key=0, style=solid];
m1_48 -> m1_49  [key=0, style=solid];
m1_47 -> m1_49  [key=0, style=solid];
m1_49 -> m1_45  [color=blue, key=0, style=bold];
m1_81 -> m1_82  [color=red, key=0, style=solid];
m1_81 -> m1_83  [color=red, key=1, label=string, style=dashed];
m1_81 -> m1_84  [color=red, key=1, label=string, style=dashed];
m1_81 -> m1_85  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_81 -> m1_86  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_81 -> m1_81  [color=darkorchid, key=3, label="method methodReturn string ToCamelCase", style=bold];
m1_82 -> m1_83  [color=red, key=0, style=solid];
m1_82 -> m1_84  [color=red, key=0, style=solid];
m1_82 -> m1_37  [color=red, key=2, style=dotted];
m1_83 -> m1_94  [color=red, key=0, style=solid];
m1_84 -> m1_85  [color=red, key=0, style=solid];
m1_84 -> m1_86  [color=red, key=0, style=solid];
m1_84 -> m1_95  [color=red, key=2, style=dotted];
m1_85 -> m1_94  [key=0, style=solid];
m1_86 -> m1_87  [key=0, style=solid];
m1_86 -> m1_96  [key=2, style=dotted];
m1_86 -> m1_88  [color=darkseagreen4, key=1, label=chars, style=dashed];
m1_86 -> m1_89  [color=darkseagreen4, key=1, label=chars, style=dashed];
m1_86 -> m1_90  [color=darkseagreen4, key=1, label=chars, style=dashed];
m1_86 -> m1_91  [color=darkseagreen4, key=1, label=chars, style=dashed];
m1_86 -> m1_93  [color=darkseagreen4, key=1, label=chars, style=dashed];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_89  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_87 -> m1_90  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_87 -> m1_91  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_87 -> m1_92  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_87 -> m1_26  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_93  [key=0, style=solid];
m1_89 -> m1_90  [key=0, style=solid];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_93  [key=0, style=solid];
m1_90 -> m1_95  [key=2, style=dotted];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_97  [key=2, style=dotted];
m1_93 -> m1_94  [key=0, style=solid];
m1_93 -> m1_98  [key=2, style=dotted];
m1_92 -> m1_88  [key=0, style=solid];
m1_92 -> m1_92  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_94 -> m1_81  [color=blue, key=0, style=bold];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_3  [color=darkorchid, key=3, label="method methodReturn string FormatWith", style=bold];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_3  [key=2, style=dotted];
m1_9 -> m1_7  [color=blue, key=0, style=bold];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_15  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_17  [key=2, style=dotted];
m1_14 -> m1_18  [key=2, style=dotted];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_19  [key=2, style=dotted];
m1_16 -> m1_13  [color=blue, key=0, style=bold];
m1_110 -> m1_111  [key=0, style=solid];
m1_111 -> m1_112  [key=0, style=solid];
m1_112 -> m1_110  [color=blue, key=0, style=bold];
m1_78 -> m1_79  [key=0, style=solid];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_76  [key=2, style=dotted];
m1_74 -> m1_77  [key=2, style=dotted];
m1_79 -> m1_80  [key=0, style=solid];
m1_79 -> m1_76  [key=2, style=dotted];
m1_79 -> m1_77  [key=2, style=dotted];
m1_73 -> m1_74  [key=0, style=solid];
m1_75 -> m1_73  [color=blue, key=0, style=bold];
m1_80 -> m1_78  [color=blue, key=0, style=bold];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_52  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m1_50 -> m1_53  [color=darkseagreen4, key=1, label=char, style=dashed];
m1_50 -> m1_54  [color=darkseagreen4, key=1, label=char, style=dashed];
m1_50 -> m1_55  [color=darkseagreen4, key=1, label=char, style=dashed];
m1_50 -> m1_56  [color=darkseagreen4, key=1, label=char, style=dashed];
m1_51 -> m1_52  [key=0, style=solid];
m1_52 -> m1_53  [key=0, style=solid];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_58  [key=2, style=dotted];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_58  [key=2, style=dotted];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_58  [key=2, style=dotted];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_58  [key=2, style=dotted];
m1_57 -> m1_50  [color=blue, key=0, style=bold];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_3  [color=darkorchid, key=3, label="method methodReturn string FormatWith", style=bold];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_3  [key=2, style=dotted];
m1_12 -> m1_10  [color=blue, key=0, style=bold];
m1_113 -> m1_74  [color=darkseagreen4, key=1, label="System.Func<TSource, string>", style=dashed];
m1_113 -> m1_79  [color=darkseagreen4, key=1, label="System.Func<TSource, string>", style=dashed];
m1_114 -> m1_74  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_114 -> m1_79  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_1 -> n328  [color=blue, key=0, style=bold];
m2_1 -> m2_15  [key=2, style=dotted];
m2_1 -> m2_16  [key=2, style=dotted];
m2_1 -> m2_2  [key=0, style=solid];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_15  [key=2, style=dotted];
m2_2 -> m2_16  [key=2, style=dotted];
m2_3 -> m2_2  [color=blue, key=0, style=bold];
m2_3 -> m2_15  [key=2, style=dotted];
m2_3 -> m2_16  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_0 -> m2_1  [key=0, style=solid];
m2_12 -> m2_13  [color=green, key=0, style=solid];
m2_12 -> m2_15  [color=green, key=2, style=dotted];
m2_12 -> m2_16  [color=green, key=2, style=dotted];
m2_11 -> m2_12  [color=green, key=0, style=solid];
m2_11 -> m2_15  [key=2, style=dotted];
m2_11 -> m2_16  [key=2, style=dotted];
m2_13 -> m2_14  [color=green, key=0, style=solid];
m2_13 -> m2_15  [color=green, key=2, style=dotted];
m2_13 -> m2_16  [color=green, key=2, style=dotted];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_15  [key=2, style=dotted];
m2_10 -> m2_16  [key=2, style=dotted];
m2_4 -> m2_15  [key=2, style=dotted];
m2_4 -> m2_16  [key=2, style=dotted];
m2_4 -> m2_5  [key=0, style=solid];
m2_5 -> m2_15  [key=2, style=dotted];
m2_5 -> m2_16  [key=2, style=dotted];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_4  [color=blue, key=0, style=bold];
m2_6 -> m2_15  [key=2, style=dotted];
m2_6 -> m2_16  [key=2, style=dotted];
m2_6 -> m2_7  [key=0, style=solid];
m2_7 -> m2_15  [key=2, style=dotted];
m2_7 -> m2_16  [key=2, style=dotted];
m2_7 -> m2_8  [key=0, style=solid];
m2_8 -> m2_15  [key=2, style=dotted];
m2_8 -> m2_16  [key=2, style=dotted];
m2_8 -> m2_9  [key=0, style=solid];
m2_9 -> m2_15  [key=2, style=dotted];
m2_9 -> m2_16  [key=2, style=dotted];
m2_9 -> m2_10  [key=0, style=solid];
m2_14 -> m2_0  [color=blue, key=0, style=bold];
}
